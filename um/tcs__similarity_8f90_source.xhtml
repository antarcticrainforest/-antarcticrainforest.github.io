<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/tcs_similarity.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">tcs_similarity.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="tcs__similarity_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespacetcs__similarity.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacetcs__similarity.xhtml" title="!&gt; Module to calculate similarity functions for warm rain tcs. ">tcs_similarity</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="comment">! Description:</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="comment">! Module to calculate similarity functions for warm rain tcs.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="comment">! Method:</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <span class="comment">!   Calculate the similarity profiles using standard functions.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="comment">!   Parameters for these functions are determined from a</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="comment">!   set predefined in tcs_parameters_warm based on the type of  !   convection that has been diagnosed (conv_type).</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="comment">!   For specific detail see:</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="comment">!   &lt;reference to documentation to go here, once available&gt;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;      <span class="comment">!</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="comment">!   Language: Fortran 90.</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="comment">!   This code is written to UMDP3 version 8.1 programming standards.</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="comment">! Working note: This needs to be tidied up a little bit and to make</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="comment">! sure that the &lt;= and &lt; refer exactly to in cloud for rho and theta</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="comment">! levels. </span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="comment">! Working note: Need to check whether these functions are on rho or</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="comment">! theta levels and that they are used consistently in the rest of the</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="comment">! code.</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="comment">! Working note: Might be nice to get rid of the mask if possible.</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="comment">! (Just need to make sure bounds and initialisations are set</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="comment">! correctly in the rest of the code)</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">  SUBROUTINE </span><a class="code" href="namespacetcs__similarity.xhtml#a70d116ca0374efaf17816c2d6f286ea6">calc_similarity</a>(eta_theta, eta_rho, conv_type, sim) </div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="namespacetcs__similarity.xhtml#a70d116ca0374efaf17816c2d6f286ea6">   44</a></span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacetcs__parameters__warm.xhtml" title="!&gt; Module to hold the parameters which are used in the tcs warm rain ">tcs_parameters_warm</a><span class="keywordtype">,       ONLY</span> :              &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;       <a class="code" href="structtcs__parameters__warm_1_1similarity__coefficient.xhtml" title="Used in: cong_similarity. ">similarity_coefficient</a>, <a class="code" href="namespacetcs__parameters__warm.xhtml#a119f754923bbb3836172f902dd7f9194">sim_coeff_nonp_sh</a>,      &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;       <a class="code" href="namespacetcs__parameters__warm.xhtml#afb2eaa33fda1ce2702f2546d4961e7f8">sim_coeff_warm_cg</a></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacetcs__class__similarity.xhtml" title="Module defining the tcs warm rain &quot;similarity&quot; derived type and!&gt; subroutines for allocating and deal...">tcs_class_similarity</a><span class="keywordtype">,      ONLY</span> :              &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;       <a class="code" href="structtcs__class__similarity_1_1similarity.xhtml">similarity</a></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacetcs__common__warm.xhtml" title="!&gt; Module containing variables which are common to the tcs warm routines ">tcs_common_warm</a><span class="keywordtype">,           ONLY</span> :              &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;       <a class="code" href="namespacetcs__common__warm.xhtml#a1b915253b39cbc88f61bb6685a397bde">scales</a></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    -    <span class="comment">! Subroutine Arguments</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    -    <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(in)</span> :: eta_theta(:,:)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                        <span class="comment">! non-dimensional height of cloud levels</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(in)</span> :: eta_rho(:,:)                         <span class="comment">! non-dimensional height of cloud levels on rho levels</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(in)</span> :: conv_type(:)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                        <span class="comment">! Indicator of type of convection                        !    1=non-precipitating shallow</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                        <span class="comment">!    2=drizzling shallow</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                        <span class="comment">!    3=warm congestus</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="comment">! Sim is now declared as intent(inout) so that memory allocation</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="comment">! (and deallocation) can be done in the calling routine.</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">TYPE</span>(<a class="code" href="structtcs__class__similarity_1_1similarity.xhtml">similarity</a>), <span class="keywordtype">INTENT(inout)</span>:: sim</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;       <span class="comment">! Variables defined locally</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="comment">! Note that sim%n_xx and sim%nlev are dimensions of similarity</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="comment">! functions and are used as shorthand instead of size(sim%...,n)</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;       <span class="keywordtype">REAL</span> :: wexpG(sim%n_xx,sim%nlev)     <span class="keywordtype">REAL</span> :: wexpK(sim%n_xx,sim%nlev)     <span class="keywordtype">REAL</span> :: wexpF(sim%n_xx,sim%nlev)     <span class="keywordtype">REAL</span> :: wexpB(sim%n_xx,sim%nlev) </div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">REAL</span> :: arr1(sim%n_xx)   <span class="comment">! An array expression     REAL :: arr2(sim%n_xx)   ! An array expression </span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">REAL</span> :: zi(sim%n_xx,sim%nlev)     <span class="comment">! Shifted height</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">INTEGER</span> :: i,ii,k <span class="comment">! loop counter</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordtype">TYPE</span>(<a class="code" href="structtcs__parameters__warm_1_1similarity__coefficient.xhtml" title="Used in: cong_similarity. ">similarity_coefficient</a>), <span class="keywordtype">POINTER</span> :: SC                        <span class="comment">! coefficients for similarity functions</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="comment">!</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="comment">! Error reporting variables</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment">!</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">INTEGER</span> :: ErrorStatus</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">CHARACTER (Len=80)</span> :: Cmessage</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">CHARACTER (Len=*)</span>, <span class="keywordtype">PARAMETER</span> :: RoutineName=<span class="stringliteral">&#39;calc_similarity&#39;</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;TCS_SIMILARITY:CALC_SIMILARITY&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">DO</span> i=1,sim%n_xx</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <span class="comment">! Select the appropriate coefficients</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="keywordflow">SELECT CASE</span> (conv_type(i))</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="keywordflow">CASE</span> (1:2)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="comment">! shallow convection (NB eventually may want to be split        !          into precipitating(1) and non-precipitating(2))</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        sc=&gt;<a class="code" href="namespacetcs__parameters__warm.xhtml#a119f754923bbb3836172f902dd7f9194">sim_coeff_nonp_sh</a></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      <span class="keywordflow">CASE</span> (3:4)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="comment">! congestus convection (NB eventually may want to be split        !                       into warm(3) and ice(4))</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        sc=&gt;<a class="code" href="namespacetcs__parameters__warm.xhtml#afb2eaa33fda1ce2702f2546d4961e7f8">sim_coeff_warm_cg</a></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordflow">      CASE default</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="comment">! Should be set to one of the preceding options</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        errorstatus = -1</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A6,I2)&#39;</span>) <span class="stringliteral">&#39;conv_type not recognized: &#39;</span>, conv_type(i)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;               <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename, errorstatus, cmessage )</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordflow">      END SELECT</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="comment">! Working note: a1 and a2 need to be rationalized and the</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <span class="comment">! constants put into tcs_parameters_warm</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      arr1(i) = sc%f0(1)*(0.2*<a class="code" href="namespacetcs__common__warm.xhtml#a1b915253b39cbc88f61bb6685a397bde">scales</a>%wsc_o_mb(i) - 2.)                      &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;         + 0.1*<a class="code" href="namespacetcs__common__warm.xhtml#a1b915253b39cbc88f61bb6685a397bde">scales</a>%wsc_o_mb(i)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      arr2(i) = (sc%f0(1)/sc%f0(2))*(0.2*<a class="code" href="namespacetcs__common__warm.xhtml#a1b915253b39cbc88f61bb6685a397bde">scales</a>%wsc_o_mb(i) - 2.)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;           <span class="comment">!</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      <span class="comment">!  Functions on rho levels</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="comment">!</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;     </div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      <span class="comment">! Calculate functions</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      wexpk(i,:) = 1. - exp(-sc%K(2)*eta_rho(i,:))</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      wexpf(i,:) = 1. - exp(-sc%Fng(3)*eta_rho(i,:))</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      wexpb(i,:) = 1. - exp(-sc%B(3)*eta_rho(i,:))</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      wexpg(i,:) = exp(-sc%g(5)*eta_rho(i,:))</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keywordflow">DO</span> k=1,sim%nlev</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">IF</span>(eta_rho(i,k) &lt; 1.0 - spacing(eta_rho(i,k)))<span class="keywordflow">THEN</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;          sim%k_func_rho(i,k)   = sc%K(1)*(1. + eta_rho(i,k))*wexpk(i,k)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;          sim%fng_func_rho(i,k) = 1. - sc%Fng(1)*(1.+sc%Fng(2)*eta_rho(i,k)) &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;             *wexpf(i,k)          sim%b_func_rho(i,k)   = sc%b(1)*(1. + eta_rho(i,k)                 &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;             - sc%b(2)*eta_rho(i,k)*eta_rho(i,k))                            &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;             *wexpb(i,k)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;          sim%g_func_rho(i,k)   = sc%g(1)*(eta_rho(i,k)                      &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;             - sc%g(2)*eta_rho(i,k)*eta_rho(i,k)                             &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;             + (sc%g(3) - sc%g(4)*eta_rho(i,k))                              &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;             * wexpg(i,k) - sc%g(3))</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;          sim%cmask(i,k)=1.</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;          sim%cmask_rho(i,k)=1.</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;          <span class="keywordflow">IF</span> (eta_rho(i,k) &lt; sc%pc2_d(1))<span class="keywordflow">THEN</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            sim%pc2_detr(i,k) = sc%pc2_d(2)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            sim%pc2_detr(i,k) = sc%pc2_d(2) +                                &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;               (eta_rho(i,k)-sc%pc2_d(1))/(1.-sc%pc2_d(1))*sc%pc2_d(3)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      zi(i,:)= (eta_rho(i,:) - sc%fw(2))/sc%fw(3)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <span class="keywordflow">WHERE</span>(eta_rho(i,:) &lt;= 1.0 + spacing(eta_rho(i,:)))</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        sim%fql_func_rho(i,:) = (1.+eta_rho(i,:)                             &amp;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;           - sc%fql(1)*eta_rho(i,:)*eta_rho(i,:))                            &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;           *( 1.- sc%fql(2)*exp(-sc%fql(3)*eta_rho(i,:)))</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        sim%gql_func_rho(i,:) = 1. - sc%gql(1)*exp(-sc%gql(2)*eta_rho(i,:))</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        sim%fw_func_rho(i,:)  = sc%fw(1)*exp(-zi(i,:)*zi(i,:)/2.)            &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;           + sc%fw(4) + sc%fw(5)*eta_rho(i,:)                                &amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;           + sc%fw(6)*eta_rho(i,:)*eta_rho(i,:)</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keywordflow">      END WHERE</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;           <span class="comment">!</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="comment">!  Functions on theta levels</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="comment">!</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;     </div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      wexpk(i,:) = 1. - exp(-sc%K(2)*eta_theta(i,:))</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      wexpg(i,:) = exp(-sc%g(5)*eta_theta(i,:))</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      zi(i,:)=(eta_theta(i,:) - sc%fw(2))/sc%fw(3)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="keywordflow">WHERE</span>(eta_theta(i,:) &lt;= 1.0 + spacing(eta_theta(i,:)))</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        sim%g_func(i,:)  = sc%g(1)*(eta_theta(i,:)                           &amp;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;           - sc%g(2)*eta_theta(i,:)*eta_theta(i,:)                           &amp;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;           + (sc%g(3) - sc%g(4)*eta_theta(i,:))*wexpg(i,:)                   &amp;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;           - sc%g(3))</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        sim%k_func(i,:)  = sc%k(1)*(1. + eta_theta(i,:))*wexpk(i,:)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        sim%f0_func(i,:) = 1. - arr1(i)*eta_theta(i,:)                       &amp;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;           + arr2(i)*(1.-exp(-sc%f0(2)*eta_theta(i,:)))</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        sim%f1_func(i,:) = sc%f1(1)*(eta_theta(i,:)**sc%f1(2))</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        sim%ftheta_func(i,:) = sc%fth(1)                                     &amp;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;           - sc%fth(2)*exp(-sc%fth(3)*eta_theta(i,:))</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        sim%fw_func(i,:) = sc%fw(1)*exp(-zi(i,:)*zi(i,:)/2.)                 &amp;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;           + sc%fw(4) + sc%fw(5)*eta_theta(i,:)                              &amp;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;           + sc%fw(6)*eta_theta(i,:)*eta_theta(i,:)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordflow">      END WHERE</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;TCS_SIMILARITY:CALC_SIMILARITY&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keyword">  END SUBROUTINE </span><a class="code" href="namespacetcs__similarity.xhtml#a70d116ca0374efaf17816c2d6f286ea6">calc_similarity</a></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacetcs__similarity.xhtml" title="!&gt; Module to calculate similarity functions for warm rain tcs. ">tcs_similarity</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
