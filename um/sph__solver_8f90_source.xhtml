<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/radiance_core/sph_solver.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_68003e6e168556241f03263b340b5802.xhtml">radiance_core</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">sph_solver.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="sph__solver_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    , n_profile, n_layer                                                &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    , ms_min, ms_max, i_truncation, ls_local_trunc                      &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    , cg_coeff, uplm_zero, ia_sph_mm                                    &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    , accuracy_adaptive, euler_factor                                   &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    , i_sph_algorithm, i_sph_mode, l_rescale                            &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    , isolir                                                            &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    , l_scale_solar, adjust_solar_ke                                    &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    , i_direct, mu_0, uplm_sol                                          &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    , diff_planck, flux_inc_down                                        &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    , l_ir_source_quad, diff_planck_2                                   &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    , tau, omega, phase_fnc, phase_fnc_solar                            &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    , forward_scatter                                                   &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    , ls_brdf_trunc, n_brdf_basis_fnc, rho_alb                          &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    , f_brdf, brdf_sol, brdf_hemi                                       &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    , d_planck_flux_surface                                             &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    , n_viewing_level, i_rad_layer, frac_rad_layer                      &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    , n_direction, direction                                            &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    , flux_direct, flux_total, radiance_mono, photolysis                &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    , nd_profile, nd_layer                                              &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    , nd_flux_profile, nd_radiance_profile, nd_j_profile                &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    , nd_max_order, nd_sph_coeff                                        &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    , nd_brdf_basis_fnc, nd_brdf_trunc                                  &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    , nd_red_eigensystem, nd_sph_equation, nd_sph_diagonal              &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    , nd_sph_cf_weight, nd_sph_u_range                                  &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    , nd_viewing_level, nd_direction                                    &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    )</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacerealtype__rd.xhtml" title="Module to set the precision of real variables. ">realtype_rd</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacerealtype__rd.xhtml#aff478693c9291d2b87e7b91444f5b55c">realk</a></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacerad__pcf.xhtml" title="Radiation Program Configuration File. ">rad_pcf</a></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      nd_profile                                                        &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    , nd_flux_profile                                                   &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    , nd_radiance_profile                                               &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    , nd_j_profile                                                      &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    , nd_layer                                                          &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    , nd_direction                                                      &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    , nd_viewing_level                                                  &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    , nd_max_order                                                      &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    , nd_brdf_basis_fnc                                                 &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    , nd_brdf_trunc                                                     &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    , nd_sph_coeff                                                      &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    , nd_red_eigensystem                                                &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    , nd_sph_equation                                                   &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    , nd_sph_diagonal                                                   &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    , nd_sph_cf_weight                                                  &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    , nd_sph_u_range</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                             &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      ierr</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      n_profile                                                         &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">!       Number of profiles</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    , n_layer                                                           &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">!       Number of layers</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    , isolir</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">!       Spectral region</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">!                 Angular integration</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      l_rescale</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">!       Flag for rescaling of the optical properties</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      ms_min                                                            &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">!       Lowest azimuthal order calculated</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    , ms_max                                                            &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">!       Highest azimuthal order calculated</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    , ia_sph_mm(0: nd_max_order)                                        &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">!       Address of spherical coefficient for (m, m) for each m</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    , ls_local_trunc(0: nd_max_order)                                   &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">!       Orders of truncation at each azimuthal order</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    , i_truncation                                                      &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">!       Type of truncation used</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    , i_sph_mode                                                        &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">!       Mode in which the spherical solver is used</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    , i_sph_algorithm</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">!       Algorithm used to solve the spherical system</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      cg_coeff(nd_sph_coeff)                                            &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">!       Clebsch-Gordan coefficients</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    , uplm_zero(nd_sph_coeff)                                           &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">!       Values of spherical harmonics at polar angles pi/2</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    , uplm_sol(nd_profile, nd_sph_coeff)                                &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">!       Values of spherical harmonics in the solar direction</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    , accuracy_adaptive                                                 &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">!       Accuracy for adaptive truncation</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    , euler_factor</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">!       Factor applied to the last polar order</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      l_ir_source_quad</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">!       Use quadratic source term</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">!                   Variables for equivalent extinction</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      l_scale_solar</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!       Apply scaling to solar flux</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      adjust_solar_ke(nd_profile, nd_layer)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">!       Adjustment of solar beam with equivalent extinction</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      tau(nd_profile, nd_layer)                                         &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">!       Optical depth</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    , omega(nd_profile, nd_layer)                                       &amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">!       Albedos of single scattering</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    , phase_fnc(nd_profile, nd_layer, nd_max_order)                     &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">!       Moments of the phase function</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    , phase_fnc_solar(nd_radiance_profile, nd_layer, nd_direction)      &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">!       The phase function evaluated for scattering from</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">!       the solar beam into the viewing directions</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    , forward_scatter(nd_profile, nd_layer)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">!       Forward scattering fractions</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keywordtype">REAL(RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      mu_0(nd_profile)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">!       Cosines of solar zenith angles</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordtype">REAL(RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      diff_planck(nd_profile, nd_layer)                                 &amp;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">!       Difference in the FLUX Planckian function</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    , diff_planck_2(nd_profile, nd_layer)                               &amp;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">!       2x2nd differences of Planckian</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    , flux_inc_down(nd_profile)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">!       Incident downward flux (in real calculations this is used</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">!       only in the IR where it is assumed to be Planckian, but</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">!       in may be used in the solar in idealized test cases)</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                        &amp;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      i_direct(nd_profile, 0: nd_layer)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">!       Direct solar radiance (only the first row is set on input)</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      ls_brdf_trunc                                                     &amp;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">!       Order of trunation of BRDFs</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    , n_brdf_basis_fnc</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">!       Number of BRDF basis functions</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      d_planck_flux_surface(nd_profile)                                 &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">!       Differential Planckian flux from the surface</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    , rho_alb(nd_profile, nd_brdf_basis_fnc)                            &amp;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">!       Weights of the basis functions</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    , f_brdf(nd_brdf_basis_fnc, 0: nd_brdf_trunc/2                      &amp;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        , 0: nd_brdf_trunc/2, 0: nd_brdf_trunc)                         &amp;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">!       Array of BRDF basis terms</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    , brdf_sol(nd_profile, nd_brdf_basis_fnc, nd_direction)             &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">!       The BRDF evaluated for scattering from the solar</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">!       beam into the viewing direction</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    , brdf_hemi(nd_profile, nd_brdf_basis_fnc, nd_direction)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">!       The BRDF evaluated for scattering from isotropic</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">!       radiation into the viewing direction</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">!                   Viewing Geometry</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      n_direction                                                       &amp;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">!       Number of viewing directions</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    , n_viewing_level                                                   &amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">!       Number of levels where radiances are calculated</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    , i_rad_layer(nd_viewing_level)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">!       Layers in which radiances are calculated</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;      direction(nd_radiance_profile, nd_direction, 2)                   &amp;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">!       Viewing directions</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    , frac_rad_layer(nd_viewing_level)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">!       Fractions below the tops of the layers</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">!                   Radiances calculated</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                          &amp;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      flux_direct(nd_flux_profile, 0: nd_layer)                         &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">!       Direct Flux</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    , flux_total(nd_flux_profile, 2*nd_layer+2)                         &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">!       Total Fluxes</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    , radiance_mono(nd_radiance_profile                                 &amp;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        , nd_viewing_level, nd_direction)                               &amp;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">!       Radiances</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    , photolysis(nd_j_profile, nd_viewing_level)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">!       Rates of photolysis</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">! Local variabales.</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  <span class="keywordtype">INTEGER</span>                                                               &amp;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      ms                                                                &amp;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">!       Azimuthal order</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    , lsr                                                               &amp;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">!       Reduced polar order</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    , n_red_eigensystem                                                 &amp;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">!       Size of the reduced eigensystem</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    , n_equation                                                        &amp;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">!       Number of equations</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    , i                                                                 &amp;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">!       Loop variable</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    , id                                                                &amp;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">!       Loop variable (directions)</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    , l</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">!       Loop variable</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  <span class="keywordtype">REAL (RealK)</span> ::                                                       &amp;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;      kappa(nd_max_order/2, nd_max_order/2)                             &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">!       Integrals of pairs of spherical harmonics over the downward</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">!       hemisphere</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    , cgk(nd_brdf_trunc/2+1, nd_max_order)                              &amp;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">!       Products of the Clebsch-Gordan coefficients and the</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">!       hemispheric integrals</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    , up_lm(nd_profile, nd_max_order+1, nd_direction)                   &amp;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">!       Polar parts of spherical harmonics</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    , weight_u(nd_profile, nd_viewing_level                             &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        , nd_sph_cf_weight, nd_sph_u_range)                             &amp;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">!       Weights to be applied to the vector U containing the</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">!       complementary functions</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    , c_ylm(nd_profile, nd_viewing_level, nd_max_order+1)               &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">!       Coefficients in the expansion of the radiance</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">!       in spherical harmonics</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    , a(nd_profile, nd_sph_equation, nd_sph_diagonal)                   &amp;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">!       Matrix on the LHS of the equation for spherical</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">!       harmonics</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    , b(nd_profile, nd_sph_equation)                                    &amp;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">!       RHS of matrix equation</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    , upm(nd_profile, nd_sph_equation)                                  &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">!       Variables u+|    , azim_factor(nd_profile, nd_direction)</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">!       Azimuthal factors</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  <span class="keywordtype">INTEGER</span>                                                               &amp;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      ls_trunc_calc                                                     &amp;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">!       Order of truncation required in calculations</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    , ls_brdf_trunc_calc                                                &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">!       Order of truncation of BRDFs required in calculations</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    , ls_significant</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">!       Maximum significant polar order</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;SPH_SOLVER&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">! Calculate the direct radiances which are independent of the</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">! azimuthal order.</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  <span class="keywordflow">IF</span> (isolir == <a class="code" href="namespacerad__pcf.xhtml#ab65d11ff7073a91129b4fc039b950a3e">ip_solar</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keywordflow">IF</span> (l_scale_solar) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;      <span class="keywordflow">DO</span> i=1, n_layer</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;          i_direct(l, i)=i_direct(l, i-1)                               &amp;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            *adjust_solar_ke(l, i)*exp(-tau(l, i)/mu_0(l))</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;      <span class="keywordflow">DO</span> i=1, n_layer</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;          i_direct(l, i)=i_direct(l, i-1)*exp(-tau(l, i)/mu_0(l))</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">! Initialize the monochromatic radiances if they are required.</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  <span class="keywordflow">IF</span> (i_sph_mode == <a class="code" href="namespacerad__pcf.xhtml#a8f5adf7639d134d005839f6894764913">ip_sph_mode_rad</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="keywordflow">DO</span> id=1, n_direction</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;      <span class="keywordflow">DO</span> i=1, n_viewing_level</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;          radiance_mono(l, i, id)=0.0e+00_realk</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">! For each non-negative azimuthal order a matrix of coefficients</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">! is built and solved.</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;  <span class="keywordflow">DO</span> ms=ms_min, ms_max</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">!   Set the order of truncation required for the calculation.</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">!   If an adaptive truncation is used we may not calculate all</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">!   the declared polar orders, though space is reserved for them</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">!   and is initialized (this is necessary as a subsequent call to</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">!   this routine with different optical properties may require a</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">!   different number of terms). On entry we have no estimate of the</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">!   number of terms required, other than the assigned truncation.</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keywordflow">IF</span> (i_truncation == <a class="code" href="namespacerad__pcf.xhtml#af1bed8918ac075b4e3bfffeaf5ae2eef">ip_trunc_adaptive</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;      <span class="keywordflow">IF</span> (ms == ms_min) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        ls_trunc_calc=ls_local_trunc(ms)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">!       The polar order must exceed the azimuthal order by at least</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">!       one, and must give an even number of harmonics.</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        ls_trunc_calc=max((ms+1), ls_significant)</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        ls_trunc_calc=ls_trunc_calc+mod((ls_trunc_calc+ms+1), 2)</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        ls_trunc_calc=min(ls_trunc_calc, ls_local_trunc(ms))</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;      ls_trunc_calc=ls_local_trunc(ms)</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">!   Azimuthal factors are required if calculating radiances.</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="keywordflow">IF</span> (i_sph_mode == <a class="code" href="namespacerad__pcf.xhtml#a8f5adf7639d134d005839f6894764913">ip_sph_mode_rad</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">!     The recalculation of azimuthal factors for each monochromatic</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">!     radiance is inefficient, but avoids the need for the storage</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">!     of arrays with different azimuthal orders. The equation of</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">!     transfer is solved only for positive azimuthal orders. Hence,</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">!     if the azimuthal order is 0 we add in the term, but if the</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">!     azimuthal order is non-zero it also represents the negative</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">!     order and acquires a weighting factor of 2.</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;      <span class="keywordflow">IF</span> (ms == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        <span class="keywordflow">DO</span> id=1, n_direction</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;          <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            azim_factor(l, id)=1.0e+00_realk</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <span class="keywordflow">DO</span> id=1, n_direction</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;          <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            azim_factor(l, id)                                          &amp;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            =2.0e+00_realk*cos(<span class="keywordtype">REAL</span>(ms,<a class="code" href="namespacerealtype__rd.xhtml#aff478693c9291d2b87e7b91444f5b55c">realk</a>)*direction(l,id,2))</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">!     Calculate spherical harmonics in the viewing directions.</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">!     A judgement about storage has been made here. It is</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment">!     deemed acceptable to store values for a fixed azimuthal</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">!     order, but deemed that too much storage would be required</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">!     for all azmuthal orders to be held at once.</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;      <span class="keywordflow">DO</span> id=1, n_direction</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment">! DEPENDS ON: eval_uplm</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        <span class="keyword">CALL </span>eval_uplm(ms, ls_trunc_calc                                &amp;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;          , n_profile, direction(1, id, 1), up_lm(1, 1, id)             &amp;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;          , nd_profile)</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">!   Calculate integrals of products of spherical harmonics for</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">!   use in Marshak&#39;s boundary conditions. These arrays are</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">!   recalculated each time to save storage.</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">! DEPENDS ON: hemi_sph_integ</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keyword">CALL </span>hemi_sph_integ(ls_trunc_calc, ms, uplm_zero(ia_sph_mm(ms))     &amp;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;      , kappa                                                           &amp;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;      , nd_max_order                                                    &amp;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;      )</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">!   Perform preliminary calculations for the BRDF: we need to check</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">!   that the order of truncation of BRDFs does not exceed the</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">!   order of calculation: it must also be even.</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    ls_brdf_trunc_calc                                                  &amp;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;      =min(ls_brdf_trunc, ls_trunc_calc-mod(ls_trunc_calc, 2))</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="comment">! DEPENDS ON: cg_kappa_ms</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="keyword">CALL </span>cg_kappa_ms(ms, ls_trunc_calc, ls_brdf_trunc_calc              &amp;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;      , cg_coeff, kappa                                                 &amp;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;      , cgk                                                             &amp;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;      , nd_max_order, nd_brdf_trunc                                     &amp;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;      )</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">!   Initialize the spherical harmonics at this azimuthal order.</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keywordflow">IF</span> ( (i_sph_mode == <a class="code" href="namespacerad__pcf.xhtml#ad7031939f60449ac7d99dcbf6454e8dc">ip_sph_mode_flux</a>).OR.                           &amp;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;         (i_sph_algorithm == <a class="code" href="namespacerad__pcf.xhtml#af4f4d54299d434ac6f3d4af7eb9a8c35">ip_sph_direct</a>) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;      <span class="keywordflow">DO</span> i=1, n_viewing_level</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="keywordflow">DO</span> lsr=1, ls_local_trunc(ms)+1-ms</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;          <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            c_ylm(l, i, lsr)=0.0e+00_realk</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="comment">!   In the infra-red region differential quantities are used. The</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="comment">!   incident flux will then be determined from the Plankian flux</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment">!   (which is used for consistency with two-stream calculations)</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">!   by dividing by pi: we must also multiply by sqrt(4.pi) to get</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">!   the weighting of the zeroth spherical harmonic. Other elements</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment">!   of the array were zeroed before.</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    n_red_eigensystem=(ls_trunc_calc+1-ms)/2</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">! DEPENDS ON: build_sph_matrix</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keyword">CALL </span>build_sph_matrix(i_sph_algorithm, euler_factor                 &amp;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">!                   Basic sizes</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;      , n_profile, n_layer, ls_trunc_calc                               &amp;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;      , ms, n_red_eigensystem                                           &amp;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment">!                   Numerical arrays of spherical terms</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;      , cg_coeff(ia_sph_mm(ms)), kappa, up_lm                           &amp;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="comment">!                   Solar variables</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;      , isolir, i_direct, mu_0, uplm_sol(1, ia_sph_mm(ms))              &amp;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;      , azim_factor                                                     &amp;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment">!                   Infra-red variables</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;      , diff_planck, l_ir_source_quad, diff_planck_2                    &amp;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment">!                   Isotropic incident flux</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;      , flux_inc_down                                                   &amp;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">!                   Optical properties</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;      , tau, omega, phase_fnc                                           &amp;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">!                   Surface Fields</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;      , ls_brdf_trunc_calc, n_brdf_basis_fnc, rho_alb                   &amp;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;      , f_brdf, brdf_sol, brdf_hemi, cgk                                &amp;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;      , d_planck_flux_surface                                           &amp;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">!                   Levels where radiances are calculated</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;      , n_viewing_level, i_rad_layer, frac_rad_layer                    &amp;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">!                   Viewing Geometry</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;      , n_direction, direction(1, 1, 1)                                 &amp;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">!                   Output variables</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;      , a, b, c_ylm, weight_u, radiance_mono                            &amp;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">!                   Dimensions</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;      , nd_profile, nd_radiance_profile                                 &amp;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;      , nd_layer, nd_viewing_level, nd_direction                        &amp;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;      , nd_max_order, nd_brdf_basis_fnc, nd_brdf_trunc                  &amp;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      , nd_red_eigensystem, nd_sph_equation, nd_sph_diagonal            &amp;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      , nd_sph_cf_weight, nd_sph_u_range                                &amp;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;      )</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">!   Apply standard Gaussian elimination to obtain coefficients</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">!   u^+|-.</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    n_equation=2*n_layer*n_red_eigensystem</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment">! DEPENDS ON: sph_matrix_solver</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <span class="keyword">CALL </span>sph_matrix_solver(n_profile, n_layer, n_red_eigensystem        &amp;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;      , a, b                                                            &amp;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;      , upm                                                             &amp;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;      , nd_profile, nd_sph_equation, nd_sph_diagonal                    &amp;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;      )</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">!   Increment the radiances with the contributions from</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment">!   the complementary function.</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment">! DEPENDS ON: increment_rad_cf</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="keyword">CALL </span>increment_rad_cf(n_profile                                     &amp;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;      , n_direction, azim_factor                                        &amp;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;      , n_viewing_level, i_rad_layer                                    &amp;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;      , i_sph_mode, i_sph_algorithm                                     &amp;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;      , ms, ls_trunc_calc, euler_factor                                 &amp;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;      , isolir, mu_0, kappa, up_lm                                      &amp;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;      , n_red_eigensystem, n_equation, weight_u, upm                    &amp;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;      , i_direct, c_ylm, flux_direct, flux_total                        &amp;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;      , radiance_mono, photolysis                                       &amp;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;      , nd_profile, nd_flux_profile                                     &amp;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;      , nd_radiance_profile, nd_j_profile                               &amp;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;      , nd_layer, nd_direction, nd_viewing_level                        &amp;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;      , nd_max_order, nd_sph_equation, nd_sph_cf_weight                 &amp;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;      , nd_sph_u_range                                                  &amp;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;      )</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <span class="keywordflow">IF</span> (i_truncation == <a class="code" href="namespacerad__pcf.xhtml#af1bed8918ac075b4e3bfffeaf5ae2eef">ip_trunc_adaptive</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="comment">!     Reduce the polar order of truncation if higher polar orders</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment">!     make an insignificant contribution to the radiance field.</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="comment">!     At least two polar orders are required.</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;      ls_significant=ms+1</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;      <span class="keywordflow">DO</span> lsr=ms+2, ls_trunc_calc+1-ms</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        <span class="keywordflow">DO</span> i=1, n_viewing_level</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;          <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            <span class="keywordflow">IF</span> (abs(c_ylm(l, i, lsr)) &gt;  accuracy_adaptive              &amp;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;              *abs(c_ylm(l, i, 1))) ls_significant=lsr+ms-1</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  <span class="keywordflow">IF</span> ( (i_sph_algorithm == <a class="code" href="namespacerad__pcf.xhtml#a9638526498e45d713b1c4b8a77e4fad8">ip_sph_reduced_iter</a>).AND.                    &amp;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;       (isolir == <a class="code" href="namespacerad__pcf.xhtml#ab65d11ff7073a91129b4fc039b950a3e">ip_solar</a>) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="comment">!   Add in the singly scattered solar beam using the</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment">!   potentially higher order of truncation.</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment">! DEPENDS ON: single_scat_sol</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <span class="keyword">CALL </span>single_scat_sol(n_profile, n_layer                             &amp;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;      , n_direction, direction                                          &amp;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;      , n_viewing_level, i_rad_layer, frac_rad_layer                    &amp;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;      , i_direct, mu_0                                                  &amp;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;      , tau, omega, phase_fnc_solar                                     &amp;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;      , radiance_mono                                                   &amp;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;      , nd_profile, nd_radiance_profile                                 &amp;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;      , nd_layer, nd_direction, nd_viewing_level                        &amp;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;      )</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;SPH_SOLVER&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="keyword">END SUBROUTINE </span>sph_solver</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
