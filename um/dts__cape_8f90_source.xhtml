<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/dts_cape.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">dts_cape.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="dts__cape_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="dts__cape_8f90.xhtml#aaccb53785717a4bb24853113699e46c8" title="Measure cape and related quantities for deep turbulence scheme. ">dts_cape</a>(n_dp,nlev,icall,                                         &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;                 q,theta,thetav,qcl,qcf,qse,                                 &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;           p_layer_centres,p_layer_boundaries,exner_layer_centres,           &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;           z_theta,rho_theta,zlcl_cape,zlcl,klcl,freeze_lev,starting_heights,&amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;           th_excess,ntpar,dts_ntpar,                                        &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;           cape_below_fr,cape_whole_layer,                                   &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;           cin,qsat_moist_ad,ql_ad,h_ad,diffmax,pnb,storethvp)</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="dts__cape_8f90.xhtml#aaccb53785717a4bb24853113699e46c8">   13</a></span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: r, cp, kappa, c_virtual, rv</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: lc, lf, tm</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacedts__cntl__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">dts_cntl_mod</a><span class="keywordtype">, ONLY</span>:                                                        &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <a class="code" href="namespacedts__cntl__mod.xhtml#a4f5193f00ee5887f5733269b936f545c">dts_qfac</a></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(in)</span> ::  &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  nlev                  &amp; <span class="comment">! No. of model layers</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; ,n_dp                  &amp; <span class="comment">! No. convecting points</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; ,freeze_lev(n_dp)      &amp; <span class="comment">! Index Level of freezing ,klcl(n_dp)            &amp; ! Index Level lcl</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; ,ntpar(n_dp)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(in)</span> ::  &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  icall                   <span class="comment">! Call number temporary for debugging   </span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::      &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  q(n_dp,nlev)           &amp;  <span class="comment">! Model mixing ratio  (kg/kg)</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;, theta(n_dp,nlev)       &amp;  <span class="comment">! Model potential temperature (K)</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;, qcl(n_dp,nlev)         &amp;  <span class="comment">! L-S Liq condensate mix ratio (kg/kg)</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;, qcf(n_dp,nlev)         &amp;  <span class="comment">! L-S Ice condensate mix ratio (kg/kg)</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;, starting_heights(n_dp) &amp;  <span class="comment">! starting height of ascent in m</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;, th_excess              &amp;  <span class="comment">! initial th perturbation, qse(n_dp,nlev)            ! Saturation mixing ratio of environment (kg/kg)</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                &amp;    p_layer_centres(n_dp,0:nlev)     &amp; <span class="comment">! Pressure(Pa) at theta levels</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;, p_layer_boundaries(n_dp,0:nlev)  &amp; <span class="comment">! Pressure(Pa) on rho levels</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;, exner_layer_centres(n_dp,0:nlev) &amp; <span class="comment">! Exner pressure theta levels</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;, z_theta(n_dp,nlev)               &amp; <span class="comment">! height of theta levels(m)</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;, rho_theta(n_dp,nlev)             &amp; <span class="comment">! density on theta levels (kg/m3)</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;, zlcl(n_dp)                       &amp; <span class="comment">! lifting condensation level (m)</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;, thetav(n_dp,nlev)                  <span class="comment">! env virtual pot temp   (K)  </span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> ::   &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  dts_ntpar(n_dp)           <span class="comment">! ntpar based on this parcel ascent</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::           &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  cape_below_fr(n_dp)          &amp; <span class="comment">! cape up to freezing level  (J/kg) ,cape_whole_layer(n_dp)       &amp; ! cape up to level of neutral buoy (J/kg)</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; ,cin(n_dp)                    &amp; <span class="comment">! convective inhibition (J/kg)</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; ,ql_ad(n_dp)                  &amp; <span class="comment">! adiabatic liquid water content at</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                 <span class="comment">! level of max buoy excess  (kg/kg)</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; ,h_ad(n_dp)                   &amp; <span class="comment">! height of max buoy excess  (m) ,qsat_moist_ad(n_dp,nlev)     &amp; ! qsat along parcel ascent (theta levs)</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; ,storethvp(n_dp,nlev)         &amp; <span class="comment">! parcel virtual potential temperature</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; ,diffmax(n_dp)                &amp; <span class="comment">! maximum buoyancy excess (thv&#39;)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; ,pnb(n_dp)                    &amp; <span class="comment">! pressure at level of neutral buoyancy (Pa) ,zlcl_cape(n_dp)                ! give lcl from cape routine</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;     </div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">INTEGER</span> ::    &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  i_dp,k,     &amp; <span class="comment">! loop counters</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  n_itime       <span class="comment">! number of points with itime=1</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordtype">INTEGER</span> ::        &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  klev(n_dp)      &amp; <span class="comment">! levels to start parcel ascent</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; ,klevm(n_dp)     &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; ,klevp(n_dp)     &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; ,klev_min        &amp; <span class="comment">! minimum klev across all points</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; ,ktop_max        &amp; <span class="comment">! maximum ktop across all points</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; ,kpos(n_dp)      &amp; <span class="comment">! level at which buoyancy excess is maximum</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; ,itime(n_dp)     &amp; <span class="comment">! counter to determine how ,npnts           &amp; ! used in calls to qsat_mix (set to 1 here)</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; ,one</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keywordtype">LOGICAL</span> ::    &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  lq_mix      &amp; <span class="comment">! used in qsat_mix: uses specific hum if true</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; ,l_itime     &amp; <span class="comment">! no itime values still zero</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; ,l_increase    <span class="comment">!</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordtype">REAL</span> ::               &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  delp(n_dp)          &amp; <span class="comment">! pressure diff. between one level and next (Pa)</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; ,delp_cen(n_dp)      &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; ,tparcel(n_dp)       &amp; <span class="comment">! temperature of parcel  (K)</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; ,thparcel(n_dp)      &amp; <span class="comment">! potential temperature of parcel  (K)</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; ,p(n_dp)             &amp; <span class="comment">! pressure of parcel  (Pa)</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; ,qvbot(n_dp)         &amp; <span class="comment">! parcel water vapour content at start  (kg/kg)</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; ,qlbot(n_dp)         &amp; <span class="comment">! parcel liquid water content at start  (kg/kg)          ,qlval(n_dp)         &amp; !liquid water content inside parcel</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; ,cape1(n_dp)         &amp; <span class="comment">!cape with water loading / J/kg</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; ,cape2(n_dp)         &amp; <span class="comment">!cape without water loading / J/kg</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; ,cin1(n_dp)          &amp; <span class="comment">!cin with water loading / J/kg</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; ,cin2(n_dp)          &amp; <span class="comment">!cin without water loading / J/kg</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; ,capelower1(n_dp)    &amp; <span class="comment">!cape up to freezing level with water loading</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; ,capelower2(n_dp)    &amp; <span class="comment">!cape up to freezing level without water loading</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; ,smallcape           &amp; <span class="comment">! minimum value of cape before</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                        <span class="comment">! negative buoyancy counts as level of neutral buoyancy</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                        <span class="comment">! rather than cin</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; ,qvparcel(n_dp)        <span class="comment">! water vapour mixing ratio in parcel</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keywordtype">REAL</span> ::                 &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  storeqlval(n_dp,nlev) &amp; <span class="comment">! liquid water content along parcel ascent         ,diffth(n_dp,nlev)     &amp; ! profile of buoyancy excess (thv&#39;)</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; ,qcl_plume(n_dp,nlev)    <span class="comment">! Plume liquid water content</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordtype">REAL</span> ::          &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  thvparcel1     &amp; <span class="comment">! virtual potential temp of parcel w water loading</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; ,thvparcel2     &amp; <span class="comment">! virtual potential temp of parcel without water loading</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; ,capecom1       &amp; <span class="comment">! contribution to cape at a given level with water loading ,capecom2       &amp; ! contribution to cape at a given</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                   <span class="comment">! level without water loading</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; ,vlt            &amp; <span class="comment">! latent heat of deposition or condensation</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; ,rs1(n_dp)      &amp; <span class="comment">! sat value on existing level</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; ,rs2(n_dp)      &amp; <span class="comment">! sat value on previous levels ,t0,t1,t2       &amp; ! local temp variables</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; ,q0(n_dp)       &amp; <span class="comment">! local qsat variables</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; ,q1(n_dp)       &amp; <span class="comment">! local qsat variables</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; ,q2(n_dp)       &amp; <span class="comment">! local qsat variables</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; ,qnext(n_dp)    &amp; <span class="comment">! local qsat variables</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; ,alpha          &amp; <span class="comment">!</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; ,beta           &amp; <span class="comment">!</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; ,bb1            &amp; <span class="comment">!</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; ,bb2            &amp; <span class="comment">! local variables</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; ,drs0           &amp; <span class="comment">!</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; ,dt             &amp; <span class="comment">!</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; ,dq             &amp; <span class="comment">!</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; ,deltat         &amp; <span class="comment">! local variables</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; ,qlcrit         &amp; <span class="comment">!</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; ,qlmin          &amp; <span class="comment">! maximum liquid water content of parcel -- beyond</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; ,tmpthvp(n_dp)  &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; ,smallpressure    <span class="comment">! minimum value of pressure -- set to 1 Pa</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                   <span class="comment">! calc&#39;d in dts_pc2 -- not v efficient!)</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                   <span class="comment">! that rains out</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">! extra for SCM output to look at parcel ascent</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordtype">REAL</span> :: &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  qv_parc(n_dp,nlev)     &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; ,ql_parc(n_dp,nlev)     &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; ,t_parc(n_dp,nlev)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keywordtype">REAL</span> ::     &amp;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  rbb2      &amp;  <span class="comment">! 1/bb2</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;, rdeltat   &amp;  <span class="comment">! 1/deltat</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;, dp_o_p    &amp;  <span class="comment">! dp /p</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;, gdz_o_thv    <span class="comment">! dp/(thv rho)</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">!======================================================================</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">! Initialise some variables</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;DTS_CAPE&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  one = 1</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  n_itime = 0   l_itime = .true.    qlcrit = 1.e-3 <span class="comment">! kg/kg</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  qlmin  = 2.e-4 <span class="comment">! kg/kg</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  deltat   = 0.2 <span class="comment">! K iteration for temperature interval</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  rdeltat  = 1.0/0.2 <span class="comment">! K iteration for temperature interval</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;     smallcape= 1.0 <span class="comment">! J/kg a small value for cape (somewhat arbitrary)</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  smallpressure = 1.0 <span class="comment">! Pa</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  npnts    = 1</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  lq_mix   = .true. <span class="comment">! use specific humidity</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  dts_ntpar(:) = 1</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  itime(:) = 0 <span class="comment">! initialise counter</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  cape1(:) = 0.0</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  cape2(:) = 0.0</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  cin1(:)  = 0.0</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  cin2(:)  = 0.0</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  qvparcel(:) = 0.0</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  pnb(:)   = 0.0 <span class="comment">!initialise level of neutral buoyancy</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  qlval(:) = 0.0</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  delp(:) = 0.0</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  delp_cen(:) = 0.0</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  qsat_moist_ad(:,:) = 0.0</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  cape_below_fr(:) = 0.0</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  capelower1(:) = 0.0</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  capelower2(:) = 0.0</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  cape_whole_layer(:) = 0.0</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  storethvp(:,:) = 0.0</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  tmpthvp(:) = 0.0</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  zlcl_cape(:) = 0.0</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  cin(:) = 0.0</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  ql_ad(:) = 0.0</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  h_ad(:) = 0.0</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  kpos(:) = 0.5*(freeze_lev(:)+ntpar(:))  <span class="comment">! something not too unreasonable, in</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  <span class="comment">! case it fails to find a level of maximum buoyancy...</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  qv_parc(:,:)=0.0</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  ql_parc(:,:)=0.0</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  t_parc(:,:) =0.0</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">! Now set up a liquid water content for plumes</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="keywordflow">DO</span> i_dp=1,n_dp</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    qcl_plume(i_dp,k) = 0.5*qse(i_dp,k)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">IF</span>(qcl_plume(i_dp,k) &gt; qlcrit) <span class="keywordflow">THEN</span>      qcl_plume(i_dp,k) = qlcrit</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>(qcl_plume(i_dp,k) &lt; qlmin) <span class="keywordflow">THEN</span>      qcl_plume(i_dp,k) = qlmin</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">! Find the level corresponding to the starting height</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; l_increase = .true. <span class="comment">! z_theta increases with height</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">!DEPENDS ON: dts_locate_closest_levels</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keyword">call </span><a class="code" href="dts__locate__closest__levels_8f90.xhtml#af6354b4248c84843ebe633cda7735c14" title="Locates the element of &#39;array&#39; that is closest to &#39;val&#39;. ">dts_locate_closest_levels</a>(n_dp,nlev,n_dp,n_dp,l_increase,z_theta     &amp;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                               ,starting_heights,klev,klevm,klevp)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;     <span class="comment">! now find lowest value of klev = klev_min out of all of the n_dp</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">! convecting points</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;klev_min = nlev <span class="comment">! start off very high</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keywordflow">DO</span> i_dp = 1,n_dp</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  <span class="keywordflow">IF</span>(klev(i_dp) &lt; klev_min) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    klev_min = klev(i_dp)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keyword">  END </span>IFEND do</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;     ktop_max = nlev-1</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">!==========================================================================</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">! Assign initial thermodynamic values</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;     <span class="keywordflow">DO</span> i_dp = 1,n_dp</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  thparcel(i_dp) = theta(i_dp,klev(i_dp))+th_excess</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  tparcel(i_dp)  = thparcel(i_dp)*exner_layer_centres(i_dp,klev(i_dp))</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="comment">! use large-scale value  qlbot(i_dp)    = qcl(i_dp,klev(i_dp))+qcf(i_dp,klev(i_dp))</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  p(i_dp)        =  p_layer_centres(i_dp,klev(i_dp))</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keywordflow">END DO</span> <span class="comment">! i_dp</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;     <span class="comment">! find the saturation value of this initial parcel</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">! DEPENDS ON: qsat_mix</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keyword">CALL </span><a class="code" href="qsat__mix_8f90.xhtml#ab2c9bd03497c107afdc2ea71e3887626" title="Saturation Specific Humidity/mixing Scheme(Qsat):Vapour to Liquid/Ice. ">qsat_mix</a>(q0,tparcel,p,n_dp,lq_mix)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;     <span class="keywordflow">DO</span> i_dp = 1,n_dp</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  <span class="keywordflow">IF</span>(z_theta(i_dp,klev(i_dp)) &lt;= zlcl(i_dp)) then<span class="comment">! if the parcel starts beneath the lcl, then give it the water vapour</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <span class="comment">! value for that level</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">! nb multiplying by an extra factor of 1.2</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">!            qvbot(i_dp) = q(i_dp,klev(i_dp))*1.2</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">! Sensitivity test</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    qvbot(i_dp) = q(i_dp,klev(i_dp))*dts_qfac</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">! if the parcel starts above the lcl, THEN say that it&#39;s already saturated</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">! and give it the plume liquid value</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    qvbot(i_dp) = q0(i_dp)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    qlbot(i_dp) = qcl_plume(i_dp,klev(i_dp)) <span class="comment">! i.e. 1 g/kg</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keywordflow">END DO</span> <span class="comment">! i_dp</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">!==================================================================</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">! Start parcel ascent -- increasing height by vertical levels</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">!==================================================================</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = klev_min,ktop_max</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      </div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">! create a variable p to shorten lines of code</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  p(:) =  p_layer_centres(:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  delp(:) = p_layer_boundaries(:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)-     &amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                             p_layer_boundaries(:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1) <span class="comment">! positive quantity</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  delp_cen(:) = p_layer_centres(:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)-p_layer_centres(:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1)</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">! calculate how much water vapour would be needed at this T and p in</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">! order to be saturated</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">! for later moist adiabatic ascent, will need gradient as a function of T</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;  <span class="comment">! DEPENDS ON: qsat_mix</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  <span class="keyword">CALL </span><a class="code" href="qsat__mix_8f90.xhtml#ab2c9bd03497c107afdc2ea71e3887626" title="Saturation Specific Humidity/mixing Scheme(Qsat):Vapour to Liquid/Ice. ">qsat_mix</a>(q0,tparcel,p,n_dp,lq_mix)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  qvparcel(:) = q0(:) <span class="comment">! first suggest saturated</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  <span class="keywordflow">DO</span> i_dp = 1,n_dp             <span class="keywordflow">IF</span>(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> &gt;= klev(i_dp) .and. pnb(i_dp) &lt; smallpressure) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">! liquid water in parcel is total water minus saturation value</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;      qlval(i_dp) = qlbot(i_dp)+qvbot(i_dp)-qvparcel(i_dp)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;      <span class="keywordflow">IF</span> (qlval(i_dp) &lt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        qlval(i_dp) = 0.0 <span class="comment">! ensure &gt;= 0</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (qlval(i_dp) &gt; qcl_plume(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        qlval(i_dp) = qcl_plume(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">! If the parcel was unsaturated, then its value stays that of the initial parcel</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;      <span class="keywordflow">IF</span>(qlval(i_dp) &lt; 1.0e-10) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        qvparcel(i_dp)  = qvbot(i_dp)</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        zlcl_cape(i_dp) = z_theta(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;      <span class="comment">! evaluation of parcel virt.pot.temp keeping all water loading</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;      thvparcel1 = thparcel(i_dp)*(1.0+c_virtual*qvparcel(i_dp)-qlval(i_dp))</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;      <span class="comment">! evaluation of parcel virt.pot.temp losing all liquid water</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;      thvparcel2 = thparcel(i_dp)*(1.0+c_virtual*qvparcel(i_dp))</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;      <span class="comment">! contribution to cape from this level:</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;       gdz_o_thv =  delp(i_dp)/(thetav(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)*rho_theta(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;       capecom1 = gdz_o_thv*(thvparcel1-thetav(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;       capecom2 = gdz_o_thv*(thvparcel2-thetav(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;       qv_parc(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = qvparcel(i_dp)                     <span class="keywordflow">IF</span>(capecom1 &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;         cape1(i_dp)=cape1(i_dp)+capecom1 <span class="comment">! w water loading</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;       <span class="keywordflow">IF</span>(capecom2 &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;         cape2(i_dp)=cape2(i_dp)+capecom2 <span class="comment">! no water loading</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;       <span class="comment">! if negative and cape is still small, then count as cin       IF(capecom1 &lt; 0.0 .and. cape1(i_dp) &lt;= smallcape) THEN</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;         cin1(i_dp)=cin1(i_dp)+capecom1</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keywordflow">       END IF</span>          <span class="keywordflow">IF</span>(capecom2 &lt; 0.0 .and. cape2(i_dp) &lt;= smallcape) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;         cin2(i_dp)=cin2(i_dp)+capecom2</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="keywordflow">       END IF</span>   </div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">! define level of neutral buoyancy as the first level at which</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">! negatively buoyant once cape is greater than a certain value</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;       <span class="keywordflow">IF</span>(capecom2 &lt; 0.0 .and. cape2(i_dp) &gt; smallcape) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;         pnb(i_dp)=p(i_dp)</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;         dts_ntpar(i_dp) = <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">! store cape up to freezing level separately</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;       <span class="keywordflow">IF</span>(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> &lt; freeze_lev(i_dp)) <span class="keywordflow">THEN</span>         capelower1(i_dp) = cape1(i_dp)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;         capelower2(i_dp) = cape2(i_dp)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">! store various profiles for determination of ql_ad,h_ad further down</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;       storethvp(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = thvparcel1 <span class="comment">! thparcel(i_dp)       qsat_moist_ad(i_dp,k) = q0(i_dp)</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;       storeqlval(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)    = qlval(i_dp)</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;       ql_parc(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = qlval(i_dp)</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keywordflow">     END IF</span> <span class="comment">!k &gt;= klev(i_dp) .and. pnb(i_dp) == 0.0</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keywordflow">   END DO</span> <span class="comment">! i_dp</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            <span class="comment">! determine qsat for the level below</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">! it&#39;s only called once, so having the if(itime==0) test saves time too...</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">!                 if(itime(i_dp) == 0) THEN!                    npnts = 1</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">!                   ! DEPENDS ON: qsat_mix</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">!                   CALL qsat_mix(rs1(i_dp),tparcel(i_dp)              &amp;</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">!                          ,p_layer_centres(i_dp,k-1),npnts,lq_mix)</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">!                 ELSE</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">!                    rs1(i_dp) = rs2(i_dp)</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">!                 END IF</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">!              END IF !k &gt;= klev(i_dp) .and. pnb(i_dp) == 0.0</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">!           END DO ! i_dp</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">! Not Sure this is right ? But avoids qsat in level loop (VERY EXPENSIVE)</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">! Still points where itime is zero   IF (l_itime) THEN        ! DEPENDS ON: qsat_mix</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;     <span class="keyword">CALL </span><a class="code" href="qsat__mix_8f90.xhtml#ab2c9bd03497c107afdc2ea71e3887626" title="Saturation Specific Humidity/mixing Scheme(Qsat):Vapour to Liquid/Ice. ">qsat_mix</a>(rs1,tparcel,p_layer_centres(:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1),n_dp,lq_mix)</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="keywordflow">   END IF</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;   <span class="keywordflow">DO</span> i_dp = 1,n_dp</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;     <span class="keywordflow">IF</span>(itime(i_dp) /= 0) <span class="keywordflow">THEN</span>       <span class="keywordflow">IF</span>(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> &gt;= klev(i_dp) .and. pnb(i_dp) &lt; smallpressure) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;         rs1(i_dp) = rs2(i_dp)</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="keywordflow">       END IF</span> <span class="comment">!k &gt;= klev(i_dp) .and. pnb(i_dp) == 0.0</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="keywordflow">     END IF</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="keywordflow">   END DO</span> <span class="comment">! i_dp</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;   <span class="comment">! DEPENDS ON: qsat_mix</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;   <span class="keyword">CALL </span><a class="code" href="qsat__mix_8f90.xhtml#ab2c9bd03497c107afdc2ea71e3887626" title="Saturation Specific Humidity/mixing Scheme(Qsat):Vapour to Liquid/Ice. ">qsat_mix</a>(qnext,tparcel,p_layer_centres(:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1),n_dp,lq_mix)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                   <span class="comment">! DEPENDS ON: qsat_mix</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;   <span class="keyword">CALL </span><a class="code" href="qsat__mix_8f90.xhtml#ab2c9bd03497c107afdc2ea71e3887626" title="Saturation Specific Humidity/mixing Scheme(Qsat):Vapour to Liquid/Ice. ">qsat_mix</a>(q1,tparcel-deltat,p_layer_centres(:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1),n_dp,lq_mix)</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">! break out of points loop to DO qsat calculations</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;   <span class="keywordflow">DO</span> i_dp = 1,n_dp</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;     <span class="keywordflow">IF</span>(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> &gt;= klev(i_dp) .and. pnb(i_dp) == 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment">! determine a local gradient for the qsaturation</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment">! (assume a local linear relationship between T and q for a given p)</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;      <span class="keywordflow">IF</span>(qlval(i_dp) &gt; 0.0) <span class="keywordflow">THEN</span> <span class="comment">! if it&#39;s saturated then do moist ascent</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;         t0 = tparcel(i_dp)</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">!        t1 = t0 - deltat   ! not required as use (t0-t1)=deltat</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                       <span class="comment">! choose between L_vap and L_fus tm = 273.15 K</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;         <span class="keywordflow">IF</span>(tparcel(i_dp) &gt;= tm) <span class="keywordflow">THEN</span>            vlt = lc</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;         <span class="keywordflow">ELSE</span>            vlt = lc+lf</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;         <span class="comment">! determine gradient of q vs T line          alpha = (qnext(i_dp)-q1(i_dp))*rdeltat</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;         beta = q0(i_dp)-alpha*t0</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;         dp_o_p = delp_cen(i_dp)/p(i_dp)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                            <span class="comment">! Calculation of bb1 including 2nd order term</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;         bb1 =  -(r*tparcel(i_dp)*dp_o_p)*(1.0-(kappa-1.0)*dp_o_p*0.5)  </div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">!        bb2 = 1.0 + q0(i_dp)</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;         rbb2 = 1.0/(1.0 + q0(i_dp))</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;         drs0 = qnext(i_dp)-q0(i_dp)   <span class="comment">!   q0(i_dp) - rs1(i_dp)</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160; <span class="comment">!        dt = (bb1-vlt*drs0/bb2)/(cp+alpha*vlt/bb2)</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;         dt = (bb1-vlt*drs0*rbb2)/(cp+alpha*vlt*rbb2)</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                           dq = drs0 + alpha*dt</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;             tparcel(i_dp) = tparcel(i_dp) + dt</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;         itime(i_dp) = itime(i_dp) + 1</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;         n_itime = n_itime + 1</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="comment">! this is the potential temperature at the next height up</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;         thparcel(i_dp) = tparcel(i_dp)/exner_layer_centres(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;       <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">!deduce T given new pressure         tparcel(i_dp) = thparcel(i_dp)*exner_layer_centres(i_dp,k+1)</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;      t_parc(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = tparcel(i_dp)</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! (k &gt;= klev(i_dp) .and. pnb(i_dp) == 0.0)  END DO ! i_dp</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">! Reevaluate qsat, this time with new tparcel, but old pressure</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  <span class="comment">!DEPENDS ON: qsat_mix</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  <span class="keyword">CALL </span><a class="code" href="qsat__mix_8f90.xhtml#ab2c9bd03497c107afdc2ea71e3887626" title="Saturation Specific Humidity/mixing Scheme(Qsat):Vapour to Liquid/Ice. ">qsat_mix</a>(rs2,tparcel,p,n_dp,lq_mix)</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;  <span class="keywordflow">IF</span> (n_itime == n_dp) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    l_itime = .false.<span class="keywordflow">           END IF</span> </div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="keywordflow">END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment">!==============================================================</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment">! End of parcel ascent</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment">!==============================================================</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;     <span class="comment">! Find the level at which the parcel buoyancy is greatest</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment">! and corresponding level, kpos</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160; diffmax(:) = 0.0</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=1,nlev</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;  <span class="keywordflow">DO</span> i_dp = 1,n_dp</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    <span class="comment">! Below or equal to starting level set to parcel thv (klev+1)</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <span class="keywordflow">IF</span>(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> &lt;= klev(i_dp)) <span class="keywordflow">THEN</span>      storethvp(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = storethvp(i_dp,klev(i_dp)+1)</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <span class="comment">! within parcel ascent and below top            ELSE if(k &gt;= klev(i_dp) .AND. p_layer_centres(i_dp,k) &gt;= pnb(i_dp)) THEN</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                    tmpthvp(i_dp) = storethvp(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) <span class="comment">! just to store value at top</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="comment">! Above top or crazy thv value reset to value at top of ascent</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keywordflow">IF</span>(p_layer_centres(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &lt; pnb(i_dp) .OR. &amp;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                                   storethvp(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &lt; 10.0) <span class="keywordflow">THEN</span>      storethvp(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = tmpthvp(i_dp) <span class="comment">! ensure a value is given</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                                        <span class="comment">! right the way up</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;             diffth(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = storethvp(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)-thetav(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keywordflow">IF</span>(diffth(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &gt; diffmax(i_dp)) <span class="keywordflow">THEN</span>      diffmax(i_dp) = diffth(i_dp,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;      kpos(i_dp) = <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="keywordflow">END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;          <span class="comment">! now store adiabatic water content, the height of the maximum buoyancy</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">! excess, and various cape, cin parameters</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="keywordflow">DO</span> i_dp = 1,n_dp</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;  ql_ad(i_dp) = storeqlval(i_dp,kpos(i_dp))</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;  h_ad(i_dp) = z_theta(i_dp,kpos(i_dp))</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment">!nb may change mind about whether or not to include water loading</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;  cin(i_dp) = cin2(i_dp)                <span class="comment">! without water loading</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;  cape_whole_layer(i_dp) = cape1(i_dp)  <span class="comment">! nb to decide about water loading</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;  cape_below_fr(i_dp)= capelower1(i_dp) <span class="comment">! nb to decide about water loading</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;DTS_CAPE&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="keyword">     END subroutine </span><a class="code" href="dts__cape_8f90.xhtml#aaccb53785717a4bb24853113699e46c8" title="Measure cape and related quantities for deep turbulence scheme. ">dts_cape</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
