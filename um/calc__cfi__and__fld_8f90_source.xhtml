<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/pptoanc/calc_cfi_and_fld.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_fcec092a282082ccd7dedb2505cd9407.xhtml">pptoanc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">calc_cfi_and_fld.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="calc__cfi__and__fld_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">      subroutine </span><a class="code" href="calc__cfi__and__fld_8f90.xhtml#af02224108edf9aa2b15a5e91f7740e9e" title="Subroutine interface: ">calc_cfi_and_fld</a>(ftin2,nlevels,len1_coldepc,           &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;            cols_nowrap,len1_rowdepc,len1_flddepc,len2_flddepc,         &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;            fields_const,fldsizelev,len_cfi,cfi1,cfi2,cfi3,compress,    &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;            flddepc,ibm_to_cray,add_wrap_pts,imdi,l_bit_32,icode)</div><div class="line"><a name="l00009"></a><span class="lineno"><a class="line" href="calc__cfi__and__fld_8f90.xhtml#af02224108edf9aa2b15a5e91f7740e9e">    9</a></span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacefilenamelength__mod.xhtml" title="Module for allocation of Filename length. Module for allocation of Filename length. ">filenamelength_mod</a><span class="keywordtype">, ONLY</span> :                                          &amp;    <a class="code" href="namespacefilenamelength__mod.xhtml#a1f0ba129cfb2cc488313a144ac04a0e8" title="The module sets the max length of a filename in the UM. ">filenamelength</a></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,           &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keywordtype">implicit none</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">!   These are of the form:!     INTEGER      ExampleVariable      !Description of variable</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <span class="keywordtype">integer</span> ftin2      <span class="comment">! (in) unit numbr for levels dataset</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      <span class="keywordtype">integer</span> nlevels    <span class="comment">! (in) number of points in vertical</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <span class="keywordtype">integer</span> len1_coldepc <span class="comment">! (in) 1st dimension of col_dep_consts</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordtype">integer</span> cols_nowrap  <span class="comment">! (in) no. of points east-west</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordtype">integer</span> len1_rowdepc <span class="comment">! (in) 1st dimension of row_dep_consts</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordtype">integer</span> len1_flddepc <span class="comment">! (in) 1st dimension of fields_const</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      <span class="keywordtype">integer</span> len2_flddepc <span class="comment">! (in) 2nd dimension of fields_const</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <span class="keywordtype">integer</span> imdi         <span class="comment">! (in) integer missing data indicator</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      <span class="keywordtype">integer</span> icode        <span class="comment">! error code</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      <span class="keywordtype">logical</span> compress     <span class="comment">! T =&gt; the dump is to be compressed</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <span class="keywordtype">logical</span> flddepc      <span class="comment">! T =&gt; fields_const are wanted in the dump</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <span class="keywordtype">logical</span> ibm_to_cray  <span class="comment">! T =&gt; input pp data is in IBM number</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                           <span class="comment">!      format and needs to be converted to</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                           <span class="comment">!      run on the Cray.</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <span class="keywordtype">logical</span> add_wrap_pts <span class="comment">! T =&gt; add wrap points to the output field</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <span class="keywordtype">logical</span> l_bit_32</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordtype">integer</span> fldsizelev(nlevels) <span class="comment">! number of points on each compressed</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                  <span class="comment">! level</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      <span class="keywordtype">integer</span> len_cfi(3) <span class="comment">! (in) total number of sea segments</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      <span class="keywordtype">integer</span> cfi1(len_cfi(1))  <span class="comment">! (out) index array for compressed array</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <span class="keywordtype">integer</span> cfi2(len_cfi(2))  <span class="comment">! (out) index array for expanded array</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      <span class="keywordtype">integer</span> cfi3(len1_rowdepc,nlevels)  <span class="comment">! (out)</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                     <span class="comment">! contains number of first sea</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                     <span class="comment">! segment in each row at each levelc</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                     <span class="comment">! if there is a sea segment in the row</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                     <span class="comment">! contains number of next sea segment</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                     <span class="comment">! otherwise</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <span class="keywordtype">real</span> fields_const(len1_flddepc,len2_flddepc) <span class="comment">! (out) array for</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                           <span class="comment">! fields of constants</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      <span class="keywordtype">integer</span> columns  <span class="comment">! no. of points east-west</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="keywordtype">integer</span> rows     <span class="comment">! no. of points north-south</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <span class="keywordtype">integer</span> i,j,k    <span class="comment">! local loop indices</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      <span class="keywordtype">integer</span> count    <span class="comment">! local counter for points in a sea segment</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keywordtype">integer</span> seg_count<span class="comment">! local counter for number of sea segments</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">CHARACTER(LEN=filenamelength)</span> :: levels</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordtype">integer</span> pp_int(45)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordtype">real</span>    pp_real(19)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <span class="keywordtype">real</span> temp_levels_array(len1_coldepc,len1_rowdepc)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                  <span class="comment">! local array of ocean levels</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <span class="keywordtype">real</span> levels_array(cols_nowrap,len1_rowdepc)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                  <span class="comment">! local array of ocean levels</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="keywordtype">real</span> dummy(1)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keyword">call </span>get_file(ftin2,levels,<a class="code" href="namespacefilenamelength__mod.xhtml#a1f0ba129cfb2cc488313a144ac04a0e8" title="The module sets the max length of a filename in the UM. ">filenamelength</a>,icode)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      levels=trim(levels)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="keyword">OPEN</span>( unit=ftin2, <a class="code" href="parlbcs_8h.xhtml#a9bdcf7736b544227cbd66a99e5332d4d">file</a>=levels, form=<span class="stringliteral">&quot;unformatted&quot;</span> )</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">! DEPENDS ON: read_pp_header</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="keyword">call </span><a class="code" href="read__pp__header_8f90.xhtml#aabd7213a0e3318604f951be369627d4c" title="Subroutine interface: ">read_pp_header</a>(ftin2,pp_int,pp_real,ibm_to_cray,l_bit_32)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      rows = pp_int(18)</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      columns = pp_int(19)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;rows = &#39;</span>,rows</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;columns = &#39;</span>,columns</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">!L 1.4 Read in levels_array and check the dataset is on the</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">!L same grid as the input pp fields.  If add_wrap_pts and flddepc</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">!L then add wrap points to the levels dataset.  The compression indices</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">!L are the same for an output dump with or without wrap points.</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">! DEPENDS ON: readdata</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keyword">CALL </span><a class="code" href="readdata_8f90.xhtml#a852f47bdfada79d62b0aba49f2d1f8c1" title="Subroutine interface: ">readdata</a>( rows, columns, ftin2, ibm_to_cray, 0,              &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;     &amp;               l_bit_32, .false., levels_array, dummy)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <span class="keyword">close</span>(ftin2)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="keywordflow">if</span> (add_wrap_pts) <span class="keywordflow">then</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">if</span> (len1_rowdepc  /=  rows) <span class="keywordflow">then</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;wrong number of rows in SIZES namelist&#39;</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;len1_rowdepc should equal rows in levels dataset&#39;</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;resubmit&#39;</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;           icode = 222</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;           <span class="keywordflow">go to</span> 9999      <span class="comment">! Jump out</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">if</span> (len1_coldepc  /=  columns+2) <span class="keywordflow">then</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;wrong number of columns in SIZES namelist&#39;</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;len1_coldepc should equal columns+2 in &#39;</span>//&amp;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;               <span class="stringliteral">&#39;levels dataset&#39;</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;resubmit&#39;</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;           icode = 223</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;           <span class="keywordflow">go to</span> 9999      <span class="comment">! Jump out</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordflow">if</span> (len1_coldepc*len1_rowdepc  /=  len1_flddepc) <span class="keywordflow">then</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;len1_flddepc should equal &#39;</span>//&amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;               <span class="stringliteral">&#39;len1_coldepc*len1_rowdepc&#39;</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;resubmit&#39;</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;           icode = 224</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;           <span class="keywordflow">go to</span> 9999      <span class="comment">! Jump out</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">do</span> j = 1,rows</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;          <span class="keywordflow">do</span> i = 1,columns</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            temp_levels_array(i,j) = levels_array(i,j)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keywordflow">          enddo</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keywordflow">        enddo</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordflow">do</span> j = 1,rows</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;          temp_levels_array(columns+1,j)=temp_levels_array(1,j)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;          temp_levels_array(columns+2,j)=temp_levels_array(2,j)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordflow">        enddo</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">do</span> j = 1,rows</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;         <span class="keywordflow">do</span> i = 1,len1_coldepc</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;           fields_const(i+(j-1)*len1_coldepc,1) = temp_levels_array(i,j)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keywordflow">         enddo</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keywordflow">        enddo</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keywordflow">if</span> (len1_rowdepc  /=  rows) <span class="keywordflow">then</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;wrong number of rows in SIZES namelist&#39;</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;len1_rowdepc should equal rows in levels dataset&#39;</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;resubmit&#39;</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;           icode = 222</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;           <span class="keywordflow">go to</span> 9999      <span class="comment">! Jump out</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keywordflow">if</span> (len1_coldepc  /=  columns) <span class="keywordflow">then</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;wrong number of columns in SIZES namelist&#39;</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;len1_coldepc should equal columns in &#39;</span>//&amp;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;               <span class="stringliteral">&#39;levels dataset&#39;</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;resubmit&#39;</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;           icode = 223</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;           <span class="keywordflow">go to</span> 9999      <span class="comment">! Jump out</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">if</span> (len1_coldepc*len1_rowdepc  /=  len1_flddepc) <span class="keywordflow">then</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;len1_flddepc should equal &#39;</span>//&amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;               <span class="stringliteral">&#39;len1_coldepc*len1_rowdepc&#39;</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;           <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;resubmit&#39;</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;calc_cfi_and_fld&#39;</span>)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;           icode = 224</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;           <span class="keywordflow">go to</span> 9999      <span class="comment">! Jump out</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keywordflow">do</span> j = 1,rows</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;         <span class="keywordflow">do</span> i = 1,len1_coldepc</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;           fields_const(i+(j-1)*len1_coldepc,1) = levels_array(i,j)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordflow">         enddo</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordflow">        enddo</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">!L 2.1 Initialise cfi3 array and create the compression indices.</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;      <span class="keywordflow">if</span> (compress) <span class="keywordflow">then</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      <span class="keywordflow">do</span> k=1,nlevels</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keywordflow">do</span> j=1,rows</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;          cfi3(j,k)=imdi</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      count=0</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      seg_count=0</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      <span class="keywordflow">do</span> k=1,nlevels</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">do</span> j=1,rows</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">!     if the first element in a row is sea, a new segment is starting,</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">!     so count and seg_count are both incremented, and cfi1 and</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">!     cfi2 have new entries.  Columns is used here instead of</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">!     len1_coldepc as the index to this array expects that in oa_pack.</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;          <span class="keywordflow">if</span> (k &lt;= levels_array(1,j)) <span class="keywordflow">then</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            count=count+1</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            seg_count=seg_count+1</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            cfi1(seg_count)=count</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            cfi2(seg_count)=1+(j-1)*columns+(k-1)*columns*rows</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            cfi3(j,k)=seg_count</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keywordflow">           end if</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;             <span class="keywordflow">do</span> i=2,columns</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">!     if present point is sea, add one to count</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;               <span class="keywordflow">if</span> (k &lt;= levels_array(i,j)) <span class="keywordflow">then</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                  count=count+1</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keywordflow">               end if</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">!     if present point is sea and previous point is land,</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">!     a new segment is starting, so seg_count is incremented</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">!     and cfi1 and cfi2 have new entries. Columns is used here instead</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">!     of len1_coldepc as the index to this array expects that</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">!     in oa_pack.</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;               <span class="keywordflow">if</span> ((k &gt;  levels_array(i-1,j)).and.                      &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;     &amp;                          (k &lt;= levels_array(i,j))) <span class="keywordflow">then</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                 seg_count=seg_count+1</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                 cfi1(seg_count)=count</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                 cfi2(seg_count)=i+(j-1)*columns+(k-1)*columns*rows</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">!     if cfi3(j,k) has not been reset,</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">!     then the present segment must be the first in the row</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                    <span class="keywordflow">if</span> (cfi3(j,k) == imdi) <span class="keywordflow">then</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                      cfi3(j,k)=seg_count</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keywordflow">                    end if</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keywordflow">               end if</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">!     if there is no sea segment in the row,</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">!     then set cfi3 to seg_count+1</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="keywordflow">if</span> (cfi3(j,k) == imdi) <span class="keywordflow">then</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;               cfi3(j,k)=seg_count+1</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordflow">            end if</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;9999  <span class="keywordflow">continue</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;      <span class="keywordflow">return</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="calc__cfi__and__fld_8f90.xhtml#af02224108edf9aa2b15a5e91f7740e9e" title="Subroutine interface: ">calc_cfi_and_fld</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
