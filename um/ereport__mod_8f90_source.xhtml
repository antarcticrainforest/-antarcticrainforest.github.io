<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/misc/ereport_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_716d965b1827b792a91401a936946c0e.xhtml">misc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ereport_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ereport__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespaceereport__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceum__parcore.xhtml" title="This file belongs in section: MPP. ">um_parcore</a></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span>, <span class="keywordtype">PRIVATE</span> :: zhook_in  = 0</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span>, <span class="keywordtype">PRIVATE</span> :: zhook_out = 1</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="comment">! Banner strings</span></div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="namespaceereport__mod.xhtml#aafad3c63527d971bc1f7fc88b5e63e77">   19</a></span>&#160;  <span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">PARAMETER</span>  :: <a class="code" href="namespaceereport__mod.xhtml#aafad3c63527d971bc1f7fc88b5e63e77">astline</a> = repeat(<span class="stringliteral">&quot;?&quot;</span>,80)</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="namespaceereport__mod.xhtml#a642021b02834da1583ae18db51b5311e">   20</a></span>&#160;  <span class="keywordtype">CHARACTER (LEN=3)</span>, <span class="keywordtype">PARAMETER</span>  :: <a class="code" href="namespaceereport__mod.xhtml#a642021b02834da1583ae18db51b5311e">qmark</a> = repeat(<span class="stringliteral">&#39;?&#39;</span>,3)</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="namespaceereport__mod.xhtml#a8c1484d149edf6d84bba46e98e0b7c90">   21</a></span>&#160;  <span class="keywordtype">CHARACTER (LEN=3)</span>, <span class="keywordtype">PARAMETER</span>  :: <a class="code" href="namespaceereport__mod.xhtml#a8c1484d149edf6d84bba46e98e0b7c90">exmark</a> = repeat(<span class="stringliteral">&#39;!&#39;</span>,3)</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;   <span class="comment">! Create an interface to allow 32 or 64 bit errorstatuses to be used.</span></div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="interfaceereport__mod_1_1ereport.xhtml">   24</a></span>&#160;  <span class="keyword">INTERFACE</span> <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keyword">MODULE PROCEDURE</span> <a class="code" href="namespaceereport__mod.xhtml#a7ca75afdb252d16d57fa5c6a71aaada7">ereport64</a>, ereport32</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">  END INTERFACE </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;   <span class="comment">! Counter for number of warnings</span></div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="namespaceereport__mod.xhtml#aaf4cd13d7de2174b670d40720b9ba8bc">   28</a></span>&#160;  <span class="keywordtype">INTEGER</span> :: <a class="code" href="namespaceereport__mod.xhtml#aaf4cd13d7de2174b670d40720b9ba8bc">numwarnings</a>  = 0</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="comment">! Only make the interface available publicly  PRIVATE ereport64</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordtype">PRIVATE</span> ereport32</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="comment">!  Subroutine Ereport - handles errors/warnings</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="comment">! Description:</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="comment">!   The standard reconfiguration error and warning reporting routine.</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="comment">!   Prints the relevant error and exits if required.</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="comment">! Method:</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="comment">!   ErrorStatus &gt; 0 is a hard error</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="comment">!   ErrorStatus &lt; 0 is a warning</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="comment">!   ErrorStatus = 0 is hunky-dory</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">  SUBROUTINE </span><a class="code" href="namespaceereport__mod.xhtml#a7ca75afdb252d16d57fa5c6a71aaada7">ereport64</a> ( RoutineName, ErrorStatus, Cmessage )</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="namespaceereport__mod.xhtml#a7ca75afdb252d16d57fa5c6a71aaada7">   48</a></span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespaceum__types.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">um_types</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <a class="code" href="namespaceum__types.xhtml#a8310ef8ca1959dbd923b9dc3b0b3b67a">integer64</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">INTENT( IN )</span>   :: RoutineName</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">INTENT( IN )</span>   :: Cmessage</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">INTEGER(KIND=Integer64)</span>           :: ErrorStatus</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">! We can&#39;t intent this because the UM passes constants.</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;   <span class="comment">! Local scalars</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordtype">INTEGER</span>                       :: unit,i</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">PARAMETER</span>  :: msg =<span class="stringliteral">&#39;Job aborted from ereport.&#39;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="comment">! Temporary parameters to avoid causing problems with triple ? in the</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="comment">! AIX Fortran preprocessor</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">LOGICAL</span>                       :: stdErr</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordtype">INTEGER</span>                       :: repType</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordtype">CHARACTER (LEN=14)</span>            :: repString</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordtype">CHARACTER (LEN=9)</span>             :: repStringLow</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">CHARACTER (LEN=6)</span>             :: repBanner</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EREPORT64&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;       reptype=0</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">IF</span> (errorstatus &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      reptype      = 1 <span class="comment">! Error</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      repstring    = <span class="stringliteral">&#39; ERROR        &#39;</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      repstringlow = <span class="stringliteral">&#39; Error   &#39;</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      repbanner    = <a class="code" href="namespaceereport__mod.xhtml#a642021b02834da1583ae18db51b5311e">qmark</a>//<a class="code" href="namespaceereport__mod.xhtml#a8c1484d149edf6d84bba46e98e0b7c90">exmark</a></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (errorstatus &lt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      reptype      = 2 <span class="comment">! Warning</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      repstring    = <span class="stringliteral">&#39; WARNING      &#39;</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      repstringlow = <span class="stringliteral">&#39; Warning &#39;</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      repbanner    = <a class="code" href="namespaceereport__mod.xhtml#a642021b02834da1583ae18db51b5311e">qmark</a>//<a class="code" href="namespaceereport__mod.xhtml#a642021b02834da1583ae18db51b5311e">qmark</a></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    stderr=.false.</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) stderr = .true.</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">IF</span> (reptype &gt; 0) <span class="keywordflow">THEN</span> <span class="comment">! some kind of report</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,         src=<span class="stringliteral">&#39;ereport_mod&#39;</span>,stderrortoo=stderr)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceereport__mod.xhtml#aafad3c63527d971bc1f7fc88b5e63e77">astline</a>,    src=<span class="stringliteral">&#39;ereport_mod&#39;</span>,stderrortoo=stderr)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(repeat(repbanner,5)//repstring//repeat(repbanner,6),        &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                               src=<span class="stringliteral">&#39;ereport_mod&#39;</span>,stderrortoo=stderr)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I5)&#39;</span>)<span class="stringliteral">&#39;? &#39;</span>// repstringlow //<span class="stringliteral">&#39;Code: &#39;</span>,errorstatus</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,  src=<span class="stringliteral">&#39;ereport_mod&#39;</span>,stderrortoo=stderr)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;? &#39;</span>//repstringlow//<span class="stringliteral">&#39;Message: &#39;</span>//cmessage,                  &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                               src=<span class="stringliteral">&#39;ereport_mod&#39;</span>,stderrortoo=stderr)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I5)&#39;</span>)<span class="stringliteral">&#39;? &#39;</span>//repstringlow//<span class="stringliteral">&#39;from processor: &#39;</span>,<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,  src=<span class="stringliteral">&#39;ereport_mod&#39;</span>,stderrortoo=stderr)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I5)&#39;</span>) <span class="stringliteral">&#39;? &#39;</span>//repstringlow//<span class="stringliteral">&#39;number: &#39;</span>,<a class="code" href="namespaceereport__mod.xhtml#aaf4cd13d7de2174b670d40720b9ba8bc">numwarnings</a></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,  src=<span class="stringliteral">&#39;ereport_mod&#39;</span>,stderrortoo=stderr)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceereport__mod.xhtml#aafad3c63527d971bc1f7fc88b5e63e77">astline</a>,    src=<span class="stringliteral">&#39;ereport_mod&#39;</span>,stderrortoo=stderr)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,         src=<span class="stringliteral">&#39;ereport_mod&#39;</span>,stderrortoo=stderr)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordflow">IF</span> (reptype==1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keyword">CALL </span>gc_abort( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>, <a class="code" href="namespaceum__parcore.xhtml#ad078cc7202ef25b751b3e270bd3c4287">nproc_max</a>, msg )</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <span class="keywordflow">IF</span> (reptype==2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="comment">! Reset ErrorStatus, update warning count.</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <a class="code" href="namespaceereport__mod.xhtml#aaf4cd13d7de2174b670d40720b9ba8bc">numwarnings</a> = <a class="code" href="namespaceereport__mod.xhtml#aaf4cd13d7de2174b670d40720b9ba8bc">numwarnings</a> + 1</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        errorstatus = 0</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keywordflow">    END IF</span>   </div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EREPORT64&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keyword">  END SUBROUTINE </span><a class="code" href="namespaceereport__mod.xhtml#a7ca75afdb252d16d57fa5c6a71aaada7">ereport64</a></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="comment">! The 32 bit interface to the above routine</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">  SUBROUTINE </span>ereport32 ( RoutineName, ErrorStatus32, Cmessage )</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="interfaceereport__mod_1_1ereport.xhtml#a408e00e748e5e8b1f85e84fb3aa8efe9">  122</a></span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespaceum__types.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">um_types</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <a class="code" href="namespaceum__types.xhtml#af5fbacdfa62f7f4f6d3aaab1a1149e9a">integer32</a>,         &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <a class="code" href="namespaceum__types.xhtml#a8310ef8ca1959dbd923b9dc3b0b3b67a">integer64</a></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">! Arguments</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">INTENT( IN )</span>   :: RoutineName</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">INTENT( IN )</span>   :: Cmessage</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordtype">INTEGER(KIND=Integer32)</span>           :: ErrorStatus32</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">! Local variable</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">INTEGER(KIND=Integer64)</span>           :: ErrorStatus64</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordtype">REAL(KIND=jprb)</span>                   :: zhook_handle</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;       <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EREPORT32&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;   <span class="comment">! Copy 32 bit errorstatus to 64 bit temporary</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    errorstatus64 = errorstatus32</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">! Call the ereport64 routine which does all the work.</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceereport__mod.xhtml#a7ca75afdb252d16d57fa5c6a71aaada7">ereport64</a>(routinename, errorstatus64, cmessage)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">! Copy the 64 bit errorstatus (can be reset above) to the 32 bit version.</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    errorstatus32 = errorstatus64</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EREPORT32&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keyword">  END SUBROUTINE </span>ereport32 </div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">! Subroutine to display the number of warnings generated</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keyword">  SUBROUTINE </span><a class="code" href="namespaceereport__mod.xhtml#a6678743bf463d33136a7e593320e5537">ereport_finalise</a>( )</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="namespaceereport__mod.xhtml#a6678743bf463d33136a7e593320e5537">  154</a></span>&#160;     <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordtype">INTEGER</span>                       :: unset = -99</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordtype">INTEGER</span>                       :: unit,i</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordtype">INTEGER</span>                       :: out_units(2)                        <span class="keywordtype">CHARACTER (LEN=14)</span>            :: repString</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordtype">CHARACTER (LEN=9)</span>             :: repStringLow</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordtype">CHARACTER (LEN=6)</span>             :: repBanner</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;       <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EREPORT_FINALISE&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaceereport__mod.xhtml#aaf4cd13d7de2174b670d40720b9ba8bc">numwarnings</a> &gt; 0) <span class="keywordflow">THEN</span>         repstring    = <span class="stringliteral">&#39; CAUTION      &#39;</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      repstringlow = <span class="stringliteral">&#39; Caution &#39;</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      repbanner    = <a class="code" href="namespaceereport__mod.xhtml#a642021b02834da1583ae18db51b5311e">qmark</a>//<a class="code" href="namespaceereport__mod.xhtml#a642021b02834da1583ae18db51b5311e">qmark</a></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,         src=<span class="stringliteral">&#39;ereport_mod&#39;</span>)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceereport__mod.xhtml#aafad3c63527d971bc1f7fc88b5e63e77">astline</a>,    src=<span class="stringliteral">&#39;ereport_mod&#39;</span>)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(repeat(repbanner,5)//repstring//repeat(repbanner,6),        &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                               src=<span class="stringliteral">&#39;ereport_mod&#39;</span>)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I3,A)&#39;</span>)<span class="stringliteral">&#39;? &#39;</span>// repstringlow // &amp;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;          <span class="stringliteral">&#39;This run generated &#39;</span>,<a class="code" href="namespaceereport__mod.xhtml#aaf4cd13d7de2174b670d40720b9ba8bc">numwarnings</a>,<span class="stringliteral">&#39; warnings&#39;</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,  src=<span class="stringliteral">&#39;ereport_mod&#39;</span>)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceereport__mod.xhtml#aafad3c63527d971bc1f7fc88b5e63e77">astline</a>,    src=<span class="stringliteral">&#39;ereport_mod&#39;</span>)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,         src=<span class="stringliteral">&#39;ereport_mod&#39;</span>)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#ad3a290b30a6e25500eabc0bf90330b77">umprintflush</a>()</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;         <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EREPORT_FINALISE&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keyword">  END SUBROUTINE </span><a class="code" href="namespaceereport__mod.xhtml#a6678743bf463d33136a7e593320e5537">ereport_finalise</a></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
