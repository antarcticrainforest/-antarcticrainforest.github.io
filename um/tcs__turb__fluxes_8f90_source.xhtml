<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/tcs_turb_fluxes.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">tcs_turb_fluxes.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="tcs__turb__fluxes_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespacetcs__turb__fluxes.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacetcs__turb__fluxes.xhtml" title="!&gt; Module to calclulate the turbulent fluxes w&#39;theta&#39; and w&#39;q&#39;!&gt; on in-cloud levels ...">tcs_turb_fluxes</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="comment">! Description:</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="comment">! Module to calclulate the turbulent fluxes w&#39;theta&#39; and w&#39;q&#39;  ! on in-cloud levels</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="comment">! Method:</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="comment">!   &lt;reference to documentation to go here, once available&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      <span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="comment">!   Language: Fortran 90.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="comment">!   This code is written to UMDP3 version 8.1 programming standards.</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">  SUBROUTINE </span><a class="code" href="namespacetcs__turb__fluxes.xhtml#a593f922329d3f652dc696f18e0d7c77b">calc_turb_fluxes</a>(n_xx,ntra, max_cldlev, nlev              &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;     ,                      max_cldtrlev, trlev                        &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;     ,                      l_tracer                                   &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;     ,                      kterm_thv, kterm_h, kterm_tracer           &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;     ,                      sim                                        &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;     ,                      wql_cld, mf_cld, cld_in                    &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;     ,                      dqsatdt_cld                                &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;     ,                      precip_product_cld,wup_h_cld               &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;     ,                      scales,wthetav_cb,wh_cb,wtracer_cb         &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;     ,                      wtheta, wq, wthetavl, wthetav              &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;     ,                      wthetal, wqt, wh, wtracer)</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="namespacetcs__turb__fluxes.xhtml#a593f922329d3f652dc696f18e0d7c77b">   37</a></span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacetcs__parameters__warm.xhtml" title="!&gt; Module to hold the parameters which are used in the tcs warm rain ">tcs_parameters_warm</a><span class="keywordtype">,    ONLY</span>:                                  &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;       <a class="code" href="namespacetcs__parameters__warm.xhtml#a22e26c324a484369b863160b84bc8692">icong_options</a>, <a class="code" href="namespacetcs__parameters__warm.xhtml#abb8211c2e62acaeca1c651dc9a23cfda">wthvl_factor</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacetcs__constants.xhtml" title="!&gt; Module holding collection of physical constants and derived!&gt; combinations thereof. ">tcs_constants</a><span class="keywordtype">,          ONLY</span>:                                  &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <a class="code" href="namespacetcs__constants.xhtml#aeaf6c45783b3213479b7d0e2d72f4d81">lc_o_cp</a>, c_virtual, g</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacetcs__class__similarity.xhtml" title="Module defining the tcs warm rain &quot;similarity&quot; derived type and!&gt; subroutines for allocating and deal...">tcs_class_similarity</a><span class="keywordtype">,   ONLY</span>:                                  &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <a class="code" href="structtcs__class__similarity_1_1similarity.xhtml">similarity</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacetcs__class__scales.xhtml" title="Module defining the tcs warm rain &quot;scales_conv) derived type and!&gt; subroutines for allocating and dea...">tcs_class_scales</a><span class="keywordtype">,       ONLY</span>:                                  &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <a class="code" href="structtcs__class__scales_1_1scales__conv.xhtml">scales_conv</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacetcs__class__cloud.xhtml" title="Module defining the tcs warm rain cloud_input derived type and!&gt; subroutines for allocating and deall...">tcs_class_cloud</a><span class="keywordtype">,        ONLY</span>:                                  &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <a class="code" href="structtcs__class__cloud_1_1cloud__input.xhtml">cloud_input</a></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="comment">! Subroutine Arguments</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="comment">!</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="comment">! Arguments with intent IN:</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment">!</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(in)</span> ::                                             &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;       n_xx                                                            &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                <span class="comment">! No. of congestus convection points</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;       , ntra                                                          &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                <span class="comment">! No. of tracers</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;       , max_cldlev                                                    &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                <span class="comment">! Maximum number of convective cloud levels</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;       , nlev                                                          &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                <span class="comment">! Maximum number of convective cloud levels</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;       , max_cldtrlev                                                  &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                <span class="comment">! Maximum number of convective cloud levels</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;       , trlev                                                              <span class="comment">! Maximum number of tracer levels</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(in)</span> ::                                             &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;       l_tracer      <span class="comment">! true - tracers present</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(in)</span> ::                                                &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;       kterm_thv(n_xx,nlev)                                            &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                <span class="comment">! thetav gradient (kterm)</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;       ,  kterm_h(n_xx,nlev)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="comment">! moist static energy(h) gradient</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="comment">! (kterm)</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordtype">TYPE</span>(<a class="code" href="structtcs__class__similarity_1_1similarity.xhtml">similarity</a>) :: sim   <span class="comment">! similarity functions</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(in)</span> :: &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;       wql_cld(n_xx,nlev)                                              &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                <span class="comment">! wql on uv cloud lev (similarity func)</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;       , mf_cld(n_xx,nlev)    <span class="comment">! mass_flux on theta levels in cloud</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">TYPE</span>(<a class="code" href="structtcs__class__cloud_1_1cloud__input.xhtml">cloud_input</a>), <span class="keywordtype">INTENT(in)</span> :: cld_in</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="comment">! input fields on cloud levels</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(in)</span> ::                                                &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;       dqsatdt_cld(n_xx,nlev)                                          &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                <span class="comment">!dqsat/dT on theta levels in cloud</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;       , precip_product_cld(n_xx,nlev)                                 &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                                <span class="comment">! precip production rho levels</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;       , wup_h_cld(n_xx,nlev)                                         &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                <span class="comment">! wup on rho levels</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;       , kterm_tracer(n_xx,nlev,ntra)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="comment">! tracer gradient (kterm)</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="comment">!                                   dimensioned on nlev not trlev</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordtype">TYPE</span>(<a class="code" href="structtcs__class__scales_1_1scales__conv.xhtml">scales_conv</a>), <span class="keywordtype">INTENT(in)</span> :: scales</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(in)</span> ::                                                &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;       wthetav_cb(n_xx)                                                &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                <span class="comment">! w&#39;thetav&#39; at cloud base (K m/s)</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;       , wh_cb(n_xx)                                                   &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                <span class="comment">! w&#39;h&#39; at cloud base (K m/s)</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;       , wtracer_cb(n_xx,ntra)   <span class="comment">! w&#39;tracer&#39; at cloud base (kg/kg m/s)</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="comment">!</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">! Arguments with intent INOUT:</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="comment">!</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="comment">!     None</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">!</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="comment">! Arguments with intent OUT:</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="comment">!</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(out)</span> ::                                               &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;       wtheta(n_xx,nlev)                                               &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                <span class="comment">! wtheta flux on cloud levels  (K m/s)</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;       ,wq(n_xx,nlev)                                                  &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                <span class="comment">! wq flux on cloud levels      (kg/kg m/s)</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;       ,wthetavl(n_xx,nlev)                                            &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                <span class="comment">! wthetavl flux on cloud levels  (K m/s)</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;       ,wthetav(n_xx,nlev)                                             &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                <span class="comment">! wthetav flux on cloud levels  (K m/s)</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;       ,wthetal(n_xx,nlev)                                             &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                                <span class="comment">! wthetal flux on cloud levels  (K m/s)</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;       ,wqt(n_xx,nlev)                                                 &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                <span class="comment">! wqt flux on cloud levels      (kg/kg m/s)</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;       ,wh(n_xx,nlev)                                                  &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                <span class="comment">! wh flux on cloud levels      (K m/s)</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;       ,wtracer(n_xx,trlev,ntra) <span class="comment">! wtracer flux on cloud levels(kg/kg m/s)</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;       <span class="comment">! Variables defined locally</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;       <span class="keywordtype">REAL</span> ::                                                           &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;       wtheta_vl_cb(n_xx)                                                <span class="comment">! wtheta_vl flux at cloud base.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="comment">! temporary stores</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">REAL</span> ::                                                           &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;       fngterm2,  A_term                                              &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;       , div_term</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    -    <span class="comment">! Loop counters</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    -    <span class="keywordtype">INTEGER</span> :: i,k,ktra</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;       <span class="comment">! 1.0 Initialise arrays - set all functions to zero</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;       <span class="comment">! Initialise dhdz</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;TCS_TURB_FLUXES:CALC_TURB_FLUXES&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">DO</span> k = 1,max_cldlev</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_xx</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        wq(i,k) = 0.0</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        wqt(i,k) = 0.0</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        wtheta(i,k) = 0.0</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        wthetavl(i,k) = 0.0</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        wthetav(i,k) = 0.0</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        wthetal(i,k) = 0.0</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;       <span class="comment">! 2.0 Level loop to calculate in cloud values of fluxes on uv levels</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;       <span class="comment">!  Numbering of levels</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">!  level 1 is cloud base for uv - in cloud levels</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">!</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;       <span class="keywordflow">DO</span> i = 1,n_xx</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      wtheta_vl_cb(i) = wthetav_cb(i)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">DO</span> k = 1,max_cldlev</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_xx</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="comment">! thetav flux</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        fngterm2 = wtheta_vl_cb(i)*sim%fng_func_rho(i,k)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="comment">! additional term for precip added to original w&#39;thetav&#39;</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        wthetavl(i,k) = -kterm_thv(i,k) + fngterm2                          &amp;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;           + (<a class="code" href="namespacetcs__constants.xhtml#aeaf6c45783b3213479b7d0e2d72f4d81">lc_o_cp</a>/cld_in%exner_theta(i,k)-c_virtual*cld_in%theta(i,k))  &amp;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;           *scales%zcld(i)*(wup_h_cld(i,k)/scales%wstar_up(i))              &amp;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;           *precip_product_cld(i,k)/cld_in%rho(i,k)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="comment">! Here we&#39;ve split up the loop so that wthetavl can be renormalized if    ! required</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">IF</span>  (<a class="code" href="namespacetcs__parameters__warm.xhtml#a22e26c324a484369b863160b84bc8692">icong_options</a> == 7) <span class="keywordflow">THEN</span>      <span class="comment">! Rescale wthetavl using TKE scaling</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_xx</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        wthetavl(i,1:max_cldlev)=wthetavl(i,1:max_cldlev)                   &amp;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;           *max_cldlev/<a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(wthetavl(i,1:max_cldlev))                        &amp;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;           *sign(1.,wthetavl(i,1:max_cldlev))                               &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;           *<a class="code" href="namespacetcs__parameters__warm.xhtml#abb8211c2e62acaeca1c651dc9a23cfda">wthvl_factor</a>*(cld_in%theta(i,1:max_cldlev)/g)                   &amp;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;           *(scales%mb(i)/scales%wstar_up(i))**(0.5)                        &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;           *scales%wstar_up(i)**3/scales%zcld(i)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keywordflow">DO</span> k = 1,max_cldlev</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_xx           </div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="comment">! calculations depend on interpolation for q and qsat</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="comment">! preferred method</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">IF</span>(sim%gql_func_rho(i,k) /= 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;          a_term = (1.+<a class="code" href="namespacetcs__constants.xhtml#aeaf6c45783b3213479b7d0e2d72f4d81">lc_o_cp</a>*dqsatdt_cld(i,k))*wql_cld(i,k)               &amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;             /sim%gql_func_rho(i,k) - mf_cld(i,k)                           &amp;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;             *(cld_in%q_mix(i,k) - cld_in%qse(i,k))</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">ELSE</span>  <span class="comment">! not in cloud</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;          a_term=0.0</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="comment">! Should I use mf on th or uv levels?</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        div_term=1.+c_virtual*cld_in%exner_theta(i,k)*cld_in%theta(i,k)     &amp;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;           *dqsatdt_cld(i,k)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        wthetav(i,k)=wthetavl(i,k)                                          &amp;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;           +(<a class="code" href="namespacetcs__constants.xhtml#aeaf6c45783b3213479b7d0e2d72f4d81">lc_o_cp</a>/cld_in%exner_theta(i,k)-c_virtual*cld_in%theta(i,k))   &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;           *wql_cld(i,k)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        wthetal(i,k)=(wthetavl(i,k)-c_virtual*cld_in%theta(i,k)*a_term)     &amp;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;           /div_term</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        wqt(i,k) =( a_term + wthetavl(i,k)*cld_in%exner_theta(i,k)          &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;           *dqsatdt_cld(i,k))/div_term</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        wqt(i,k)=max(0.,wqt(i,k))</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">! Currenly no using moist static energy anywhere,! so no need to calulate this</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">!        wh(i,k) = -kterm_h(i,k) + wh_cb(i)*sim%fng_func_rho(i,k)</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="comment">!     ! 3.0 Tracers</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="comment">!    IF (l_tracer) THEN</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;      <span class="comment">! initialise</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      <span class="keywordflow">DO</span> ktra = 1,ntra</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordflow">DO</span> k = 1,max_cldtrlev</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;          <span class="keywordflow">DO</span> i = 1,n_xx</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            wtracer(i,k,ktra) = 0.0</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;      <span class="keywordflow">DO</span> ktra = 1,ntra</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordflow">DO</span> k = 1,max_cldtrlev</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;          <span class="keywordflow">DO</span> i = 1,n_xx</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            <span class="comment">! non-gradient term</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            fngterm2 = wtracer_cb(i,ktra)*sim%fng_func_rho(i,k)</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            wtracer(i,k,ktra) = -kterm_tracer(i,k,ktra) + fngterm2</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;TCS_TURB_FLUXES:CALC_TURB_FLUXES&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keyword">  END SUBROUTINE </span><a class="code" href="namespacetcs__turb__fluxes.xhtml#a593f922329d3f652dc696f18e0d7c77b">calc_turb_fluxes</a></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacetcs__turb__fluxes.xhtml" title="!&gt; Module to calclulate the turbulent fluxes w&#39;theta&#39; and w&#39;q&#39;!&gt; on in-cloud levels ...">tcs_turb_fluxes</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
