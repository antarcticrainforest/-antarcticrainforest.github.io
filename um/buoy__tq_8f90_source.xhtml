<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/boundary_layer/buoy_tq.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_632ae183c4312d9574c0a0e7d49b8023.xhtml">boundary_layer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">buoy_tq.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="buoy__tq_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">! CODE DESCRIPTION:</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="buoy__tq_8f90.xhtml#ad53e19e42e98eab0a8b898b3abb25806" title="SUBROUTINE BUOY_TQ SUBROUTINE BUOY_TQ. ">buoy_tq</a> (                                                    &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;!&gt; IN dimensions/logicals</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; bl_levels, lq_mix_bl,                                                  &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;!&gt; IN fields</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; p,t,q,qcf,qcl,cf,                                                      &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;!&gt; OUT fields</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; bt,bq,bt_cld,bq_cld,bt_gb,bq_gb,a_qs,a_dqsdt,dqsdt                     &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; )</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="buoy__tq_8f90.xhtml#ad53e19e42e98eab0a8b898b3abb25806">   20</a></span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">, ONLY</span>: tdims</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: lc, lf, tm</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: cp, r, repsilon, c_virtual</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: lq_mix_bl  <span class="comment">! IN switch for using mixing ratios</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;   bl_levels              <span class="comment">! IN No. of atmospheric levels for which</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;   p(tdims%i_start:tdims%i_end,                                         &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;     tdims%j_start:tdims%j_end,bl_levels),                              &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                                      <span class="comment">! IN Pressure at pressure points.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;   t(tdims%i_start:tdims%i_end,                                         &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;     tdims%j_start:tdims%j_end,bl_levels),                              &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                                      <span class="comment">! IN Temperature (K). At P points</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;   q(tdims%i_start:tdims%i_end,                                         &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;     tdims%j_start:tdims%j_end,bl_levels),                              &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                                <span class="comment">! IN Sp humidity (kg water per kg air).</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;   qcl(tdims%i_start:tdims%i_end,                                       &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;       tdims%j_start:tdims%j_end,bl_levels),                            &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                <span class="comment">! IN Cloud liq water (kg per kg air).</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;   qcf(tdims%i_start:tdims%i_end,                                       &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;       tdims%j_start:tdims%j_end,bl_levels),                            &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                <span class="comment">! IN Cloud liq water (kg per kg air).</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;   cf(tdims%i_start:tdims%i_end,                                        &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      tdims%j_start:tdims%j_end, bl_levels)<span class="comment">! IN Cloud fraction (decimal).</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                                  &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;   bq(tdims%i_start:tdims%i_end,                                        &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      tdims%j_start:tdims%j_end,bl_levels),                             &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                <span class="comment">! OUT A buoyancy parameter for clear air</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;   bt(tdims%i_start:tdims%i_end,                                        &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      tdims%j_start:tdims%j_end,bl_levels),                             &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                <span class="comment">! OUT A buoyancy parameter for clear air</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;   bq_cld(tdims%i_start:tdims%i_end,                                    &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;          tdims%j_start:tdims%j_end,bl_levels),                         &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                              <span class="comment">! OUT A buoyancy parameter for cloudy air</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;   bt_cld(tdims%i_start:tdims%i_end,                                    &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;          tdims%j_start:tdims%j_end,bl_levels),                         &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                              <span class="comment">! OUT A buoyancy parameter for cloudy air</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;   bq_gb(tdims%i_start:tdims%i_end,                                     &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;         tdims%j_start:tdims%j_end,bl_levels),                          &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                <span class="comment">! OUT A grid-box mean buoyancy parameter</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;   bt_gb(tdims%i_start:tdims%i_end,                                     &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;         tdims%j_start:tdims%j_end,bl_levels),                          &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                <span class="comment">! OUT A grid-box mean buoyancy parameter</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;   a_qs(tdims%i_start:tdims%i_end,                                      &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;         tdims%j_start:tdims%j_end,bl_levels),                          &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                              <span class="comment">! OUT Saturated lapse rate factor</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;   a_dqsdt(tdims%i_start:tdims%i_end,                                   &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;           tdims%j_start:tdims%j_end,bl_levels),                        &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                              <span class="comment">! OUT Saturated lapse rate factor</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;   dqsdt(tdims%i_start:tdims%i_end,                                     &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;         tdims%j_start:tdims%j_end,bl_levels)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                              <span class="comment">! OUT Derivative of q_SAT w.r.t. T</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;   qs(tdims%i_start:tdims%i_end,                                        &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      tdims%j_start:tdims%j_end)      <span class="comment">! WORK Saturated mixing ratio.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    i,j,                                                                &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    k</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    bc</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keywordtype">REAL</span> :: etar,grcp,lcrcp,lfrcp,ls,lsrcp</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  parameter(                                                           &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;   etar=1.0/(1.0-repsilon),                                             &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                <span class="comment">! Used in buoyancy parameter BETAC.</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;   grcp=g/cp,                                                           &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                <span class="comment">! Used in DZTL, FTL calculations.</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;   lcrcp=lc/cp,                                                         &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                <span class="comment">! Latent heat of condensation / CP.</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;   lfrcp=lf/cp,                                                         &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                <span class="comment">! Latent heat of fusion / CP.</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;   ls=lc+lf,                                                            &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                                <span class="comment">! Latent heat of sublimation.</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;   lsrcp=ls/cp                                                          &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                <span class="comment">! Latent heat of sublimation / CP.</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  )</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;BUOY_TQ&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">! 1.  Loop round levels.</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordflow">DO</span> k = 1, bl_levels</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">! 1.1 Calculate saturated specific humidity at pressure and</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">!     temperature of current level.</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">! DEPENDS ON: qsat_mix</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">CALL </span><a class="code" href="qsat__mix_8f90.xhtml#ab2c9bd03497c107afdc2ea71e3887626" title="Saturation Specific Humidity/mixing Scheme(Qsat):Vapour to Liquid/Ice. ">qsat_mix</a>(qs,t(1,1,k),p(1,1,k),tdims%i_end*tdims%j_end,lq_mix_bl)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">DO</span> j = tdims%j_start, tdims%j_end</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      <span class="keywordflow">DO</span> i = tdims%i_start, tdims%i_end</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">! 1.2 Calculate buoyancy parameters BT and BQ, required for the</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">!     calculation of stability.</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        bt(i,j,k) = 1.0/t(i,j,k)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        bq(i,j,k) =                                                     &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;          c_virtual/(1.0+c_virtual*q(i,j,k)-qcl(i,j,k)-qcf(i,j,k))</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">IF</span> (t(i,j,k)  &gt;   tm) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;          dqsdt(i,j,k) = (repsilon * lc * qs(i,j))                      &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                       / ( r * t(i,j,k) * t(i,j,k) )</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">!                      ...  (Clausius-Clapeyron) for T above freezing</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;          a_qs(i,j,k) = 1.0 / (1.0 + lcrcp*dqsdt(i,j,k))</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;          a_dqsdt(i,j,k) = a_qs(i,j,k) * dqsdt(i,j,k)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;          bc = lcrcp*bt(i,j,k) - etar*bq(i,j,k)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;          dqsdt(i,j,k) = (repsilon * ls * qs(i,j))                      &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                       / ( r * t(i,j,k) * t(i,j,k) )</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">!                      ...  (Clausius-Clapeyron) for T below freezing</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;          a_qs(i,j,k) = 1.0 / (1.0 + lsrcp*dqsdt(i,j,k))</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;          a_dqsdt(i,j,k) = a_qs(i,j,k) * dqsdt(i,j,k)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;          bc = lsrcp*bt(i,j,k) - etar*bq(i,j,k)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">! 1.3 Calculate in-cloud buoyancy parameters.</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        bt_cld(i,j,k) = bt(i,j,k) - a_dqsdt(i,j,k) * bc</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        bq_cld(i,j,k) = bq(i,j,k) + a_qs(i,j,k) * bc</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">! 1.4 Calculate grid-box mean buoyancy parameters.</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        bt_gb(i,j,k) = bt(i,j,k) +                                      &amp;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                       cf(i,j,k)*( bt_cld(i,j,k) - bt(i,j,k) )</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        bq_gb(i,j,k) = bq(i,j,k) +                                      &amp;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                       cf(i,j,k)*( bq_cld(i,j,k) - bq(i,j,k) )</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! p_points,j</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! p_points,i</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">! bl_levels</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;BUOY_TQ&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="buoy__tq_8f90.xhtml#ad53e19e42e98eab0a8b898b3abb25806" title="SUBROUTINE BUOY_TQ SUBROUTINE BUOY_TQ. ">buoy_tq</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
