<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/top_level/dumpctl.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_b65d766d7948d607099cfdc8ce198b76.xhtml">top_level</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">dumpctl.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="dumpctl_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="dumpctl_8f90.xhtml#a3d8f404cc09e60a4e2702620d55a783d" title="Routine: DUMPCTL -!&gt;!&gt; Purpose: Controls the production and naming of output dump files...">dumpctl</a> (                                              &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;#include &quot;argd1.h&quot;</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="dumpctl_8f90.xhtml#a3d8f404cc09e60a4e2702620d55a783d">   16</a></span>&#160;#include &quot;argduma.h&quot;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;#include &quot;arglndm.h&quot;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;#include &quot;argptra.h&quot;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;#include &quot;argsts.h&quot;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    I_AO,MEANLEV,lwritd1,tmpfname,writestep,ICODE,CMESSAGE)</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacefilenamelength__mod.xhtml" title="Module for allocation of Filename length. Module for allocation of Filename length. ">filenamelength_mod</a><span class="keywordtype">, ONLY</span> :       &amp;      <a class="code" href="namespacefilenamelength__mod.xhtml#a1f0ba129cfb2cc488313a144ac04a0e8" title="The module sets the max length of a filename in the UM. ">filenamelength</a></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceiau__mod.xhtml" title="Parameters and variables for Incremental Analysis Update (IAU) scheme. ">iau_mod</a><span class="keywordtype">, ONLY</span> :                  &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;      <a class="code" href="namespaceiau__mod.xhtml#a9217785542f77daf4b9fabafc7382ee7">l_iau</a></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordtype">USE </span>atm_fields_bounds_mod</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a><span class="keywordtype">, ONLY</span> :                       &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <a class="code" href="namespaceio.xhtml#a697a0c6022f3650289b1150987fad504">iodisksynchronise</a>,               &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <a class="code" href="namespaceio.xhtml#a33c87273417f625a2acbe2cc93ed0776">iofence</a></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemodel__file.xhtml" title="A simple data module containing variables related to STASH buffering. ">model_file</a><span class="keywordtype">, ONLY</span> :               &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <a class="code" href="namespacemodel__file.xhtml#a07b515dfc8147e86355cd71196399c5d">model_file_open</a>,                 &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      model_file_close,                &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      storealllookups,                    &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      synchroniseall</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemppio__job__control.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">mppio_job_control</a><span class="keywordtype">, ONLY</span> :        &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <a class="code" href="interfacemppio__job__control_1_1jobcntrl.xhtml" title="API for model code. Send a command/string to the pipe file. ">jobcntrl</a></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemppio__job__control__common.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">mppio_job_control_common</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <a class="code" href="namespacemppio__job__control__common.xhtml#a931f1417bb29bcd5298c3b0f246c35e2">jc_delete</a>,                        &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <a class="code" href="namespacemppio__job__control__common.xhtml#a077d4fa710d00a5dfacdb270147ad30e">jc_archivedump</a>   use <a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a>      use um_parvars</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecontrol__max__sizes.xhtml" title="This file belongs in section: Misc. ">control_max_sizes</a></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceum__input__control__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">um_input_control_mod</a><span class="keywordtype">, ONLY</span> :     &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacenlstgen__mod.xhtml" title="Control variables Control variables. ">nlstgen_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacenlstgen__mod.xhtml#aded406ffa8d50a7c4a6325c5b75eb03d">steps_per_periodim</a>, <a class="code" href="namespacenlstgen__mod.xhtml#a4a6ed31ef0d09bdc976baf277d1acbe7">secs_per_periodim</a>,  &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <a class="code" href="namespacenlstgen__mod.xhtml#a5ee4ff12e6cb7044da2744229da35b1a" title="Number of steps between atmosphere restart dumps. ">dumpfreqim</a>, <a class="code" href="namespacenlstgen__mod.xhtml#ae25566ab02e3cd7a996cf5d83df03867" title="Archiving frequency for atmos dumps. ">archdump_freqim</a>, <a class="code" href="namespacenlstgen__mod.xhtml#aab63fef7fda2465f9b9a9c3540d99a53">archdump_offsetim</a></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacetypstsz__mod.xhtml" title="This file belongs in section: Top_level This file belongs in section: Top_level. ">typstsz_mod</a></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacenlstcall__mod.xhtml" title="Control variables Control variables. ">nlstcall_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>, &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                           <a class="code" href="namespacenlstcall__mod.xhtml#a2177992cd2f710e3d57f4b0b9c389b52">model_analysis_hrs</a>, &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                           <a class="code" href="namespacenlstcall__mod.xhtml#a528dd6af82d1afa18e91f45831cadeff">model_analysis_mins</a>, &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                           <a class="code" href="namespacenlstcall__mod.xhtml#a28feded25ee0c3bf8d91cc063e2da08d">lclimrealyr</a>, &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                           <a class="code" href="namespacenlstcall__mod.xhtml#a093d8fba92fe24edca614a560bf99982">expt_id</a>, &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                           <a class="code" href="namespacenlstcall__mod.xhtml#a30ba95a899a5e6d20426b260ac710463" title="!&gt; associated with model !&gt; (Non-Operational expts) !&gt; !&gt; Operational run name !&gt; (Operational expts)...">job_id</a>, &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                           <a class="code" href="namespacenlstcall__mod.xhtml#ac8bee74e99550307aa6d2a184b0860ad" title="!&gt; used for networking ">model_status</a>, &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                           <a class="code" href="namespacenlstcall__mod.xhtml#a1fedc7c6f932cbd1a35925dce954eb35">model_assim_mode</a>, &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                           <a class="code" href="namespacenlstcall__mod.xhtml#a2c9d1a0b1e859fd097264f74a585484c">time_convention</a></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacechsunits__mod.xhtml" title="copied from include file chsunits.h ">chsunits_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacechsunits__mod.xhtml#af6e26d3a6a1fedf0b44203712a772f8e">nunits</a></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacefile__units__mod.xhtml">file_units_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacefile__units__mod.xhtml#a21ad99eade3c51380f41db5679ab7ed5">ft_environ</a>, <a class="code" href="namespacefile__units__mod.xhtml#a347ca6d6a8fb4c82d7fa2743f5115418">len_ft_envir</a></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#include &quot;typsize.h&quot;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typd1.h&quot;</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typduma.h&quot;</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typlndm.h&quot;</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typptra.h&quot;</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typsts.h&quot;</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor"></span>  <span class="comment">!</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keywordtype">INTEGER</span> I_AO             <span class="comment">! IN  - Atmosphere/Ocean indicator</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="comment">! MEANLEV is actually flag for analysis dump (-1). Or set to zero</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordtype">INTEGER</span> MEANLEV          <span class="comment">! IN  - Mean period level for dump</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordtype">INTEGER</span> writestep        <span class="comment">! IN  - Timestep on which to write it</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keywordtype">CHARACTER(LEN=filenamelength)</span> :: tmpfname                              <span class="comment">! IN  - Name of file to be written</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                           <span class="comment">!       containing temporary copy of D1</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordtype">LOGICAL</span> lwritd1          <span class="comment">! IN  - True if doing a WRITD1 temp write</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="keywordtype">INTEGER</span> ICODE            <span class="comment">! OUT - Error return code</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keywordtype">CHARACTER(LEN=80)</span> CMESSAGE</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="comment">!*  !  Common blocks</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#include &quot;chistory.h&quot;</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;ctime.h&quot;</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor"></span><span class="comment">!</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordtype">LOGICAL</span> LARCHIVE         <span class="comment">! WORK  - Switch for dump archiving</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordtype">CHARACTER(LEN=filenamelength)</span> :: filename</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordtype">CHARACTER(LEN=1)</span>     C1</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keywordtype">INTEGER</span> MYEAR,MMONTH,MDAY,MHOUR,MMIN,MSEC  <span class="comment">! Creation date</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordtype">INTEGER</span>     I,J              <span class="comment">! Loop counters</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordtype">INTEGER</span>       NFTOUT,                                             &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                <span class="comment">! Output unit number</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;     buflen                                              &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                <span class="comment">! Length of i/o buffer for WRITDUMP</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;     ,toggle                                              &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                <span class="comment">! Dummy argument for GET_NAME</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;     ,reinit_steps                                        &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                                <span class="comment">! Dummy argument for GET_NAME</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;     &amp;,len_dumpname                                                     &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                <span class="comment">!No of characters in file name</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;     &amp;,error                                                            &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                <span class="comment">!Error code returned by OPEN</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;     &amp;,step                                                             &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                <span class="comment">!Step number</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;     &amp;,archdump_monfreq                                                 &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                <span class="comment">! dump archiving frequency (in months)</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;     &amp;,archdump_monoffset                                               &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                <span class="comment">! dump archiving offset (in months)</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;     &amp;,disk_address                                                     &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                <span class="comment">! Current rounded disk address</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;     &amp;,number_of_data_words_on_disk                                     &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                                <span class="comment">! Number of data words on disk</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;     &amp;,number_of_data_words_in_memory  <span class="comment">! Number of Data Words in memory</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">CHARACTER(LEN=1)</span>   FILETYPE    <span class="comment">! Code letter for file type</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordtype">CHARACTER(LEN=1)</span>   LETTER_3    <span class="comment">! dummy argument for GET_NAME</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordtype">CHARACTER(LEN=filenamelength)</span> ::  dumpname  <span class="comment">! Model generated dump name</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordtype">INTEGER</span> STP1im(<a class="code" href="namespacesubmodel__mod.xhtml#a18ce4823dd82e0b1acf145974c83cd54" title="Data module to contain information about submodels. Largely unnecessary but used for consistency with...">n_internal_model_max</a>)<span class="comment">!NO OF STEPS SINCE im DUMP</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordtype">INTEGER</span> STP2im(<a class="code" href="namespacesubmodel__mod.xhtml#a18ce4823dd82e0b1acf145974c83cd54" title="Data module to contain information about submodels. Largely unnecessary but used for consistency with...">n_internal_model_max</a>)<span class="comment">!NO OF STEPS BETWEEN im</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">! PERIOD 1 MEANS</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordtype">INTEGER</span> D1_ADDR_SUBMODEL_ID  <span class="comment">! submodel id in D1_ADDR array</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordtype">INTEGER</span> :: i_dump_period_days <span class="comment">! Dump period in days</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordtype">INTEGER</span> :: i_dump_period_secs <span class="comment">! Dump period in seconds</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keywordtype">INTEGER</span> :: i_sec_of_today     <span class="comment">! Number of seconds in day of current timestep</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">!  IF (lhook) CALL dr_hook(&#39;DUMPCTL&#39;,zhook_in,zhook_handle)</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordflow">IF</span> (i_ao == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">DO</span> i=1,len_dumphist+1</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      a_dumphist(i) = rmdi</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!  4. Assign dump name to appropriate IO unit and open for write.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">!     NB: Analysis dumps have preassigned names</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">!  IF (MEANLEV == 0 .OR. lwritd1) THEN</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="comment">!      Cater for instantaneous dumps</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">IF</span>(i_ao == 1)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      nftout=22    <span class="comment">! Atmos</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (meanlev == -1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="comment">!      Cater for analysis dumps</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">IF</span>(i_ao == 1)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      nftout=28    <span class="comment">! Atmos</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">!   Construct dump name from model information using defined</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">!   naming convention.</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">!  dumpname = &#39; &#39;</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keywordflow">IF</span> (meanlev /= -1) <span class="keywordflow">THEN</span>             <span class="comment">! Analyses already named</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">IF</span> (lwritd1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      step = stepim(i_ao)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordflow">IF</span> (step  /=  writestep) <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="keyword">WRITE</span>(dumpname,<span class="stringliteral">&#39;(A,I4.4)&#39;</span>) <span class="stringliteral">&#39;..........&#39;</span>,step</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="keywordflow">DO</span> i=1,10</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">IF</span>(tmpfname(i:i) /= <span class="stringliteral">&#39; &#39;</span>) dumpname(i:i)=tmpfname(i:i)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      <span class="comment">!</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      filetype=<span class="stringliteral">&#39;d&#39;</span>                      <span class="comment">! Indicates dump</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      toggle=1</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      reinit_steps=0                    <span class="comment">! default dummy value</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      letter_3=<span class="stringliteral">&#39;a&#39;</span>                      <span class="comment">! default dummy value</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      <span class="keywordflow">IF</span> (i_ao == 1 .AND. (<a class="code" href="namespacenlstcall__mod.xhtml#a1fedc7c6f932cbd1a35925dce954eb35">model_assim_mode</a> == <span class="stringliteral">&quot;Atmosphere&quot;</span> .OR. &amp;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;         <a class="code" href="namespaceiau__mod.xhtml#a9217785542f77daf4b9fabafc7382ee7">l_iau</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <a class="code" href="namespacenlstcall__mod.xhtml#a2177992cd2f710e3d57f4b0b9c389b52">model_analysis_hrs</a> = <span class="keywordtype">REAL</span>(<a class="code" href="namespacenlstcall__mod.xhtml#a528dd6af82d1afa18e91f45831cadeff">model_analysis_mins</a>)/60.0</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">! DEPENDS ON: get_name</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keyword">CALL </span>get_name(<a class="code" href="namespacenlstcall__mod.xhtml#a093d8fba92fe24edca614a560bf99982">expt_id</a>,<a class="code" href="namespacenlstcall__mod.xhtml#a30ba95a899a5e6d20426b260ac710463" title="!&gt; associated with model !&gt; (Non-Operational expts) !&gt; !&gt; Operational run name !&gt; (Operational expts)...">job_id</a>,i_ao,meanlev,toggle,             &amp;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;           reinit_steps,filetype,letter_3,<a class="code" href="namespacenlstcall__mod.xhtml#ac8bee74e99550307aa6d2a184b0860ad" title="!&gt; used for networking ">model_status</a>,               &amp;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;           <a class="code" href="namespacenlstcall__mod.xhtml#a2c9d1a0b1e859fd097264f74a585484c">time_convention</a>,<a class="code" href="namespacenlstcall__mod.xhtml#a2177992cd2f710e3d57f4b0b9c389b52">model_analysis_hrs</a>,dumpname,icode,cmessage,&amp;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;           <a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a>)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">! DEPENDS ON: get_name</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keyword">CALL </span>get_name(<a class="code" href="namespacenlstcall__mod.xhtml#a093d8fba92fe24edca614a560bf99982">expt_id</a>,<a class="code" href="namespacenlstcall__mod.xhtml#a30ba95a899a5e6d20426b260ac710463" title="!&gt; associated with model !&gt; (Non-Operational expts) !&gt; !&gt; Operational run name !&gt; (Operational expts)...">job_id</a>,i_ao,meanlev,toggle,             &amp;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;           reinit_steps,filetype,letter_3,<a class="code" href="namespacenlstcall__mod.xhtml#ac8bee74e99550307aa6d2a184b0860ad" title="!&gt; used for networking ">model_status</a>,               &amp;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;           <a class="code" href="namespacenlstcall__mod.xhtml#a2c9d1a0b1e859fd097264f74a585484c">time_convention</a>,0.0,dumpname,icode,cmessage,<a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a>)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      <span class="keywordflow">IF</span> (icode &gt;  0) <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="comment">! Get name for atmosphere analysis dump from ATMANL env var    CALL fort_get_env(ft_environ(nftout), len_ft_envir(nftout),  &amp;</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;       dumpname,<a class="code" href="namespacefilenamelength__mod.xhtml#a1f0ba129cfb2cc488313a144ac04a0e8" title="The module sets the max length of a filename in the UM. ">filenamelength</a>,icode)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordflow">IF</span> (icode &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A)&#39;</span>)                                                &amp;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;         <span class="stringliteral">&#39;PPCTL_INIT: Error getting value of environment variable &#39;</span>,  &amp;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;         trim(<a class="code" href="namespacefile__units__mod.xhtml#a21ad99eade3c51380f41db5679ab7ed5">ft_environ</a>(nftout))</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dumpctl&#39;</span>)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">! Write all pp files&#39; cached lookups to ensure that current data is! is in the files&#39; output stream</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keyword">CALL </span>storealllookups()</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">! Flush all pp files&#39; units to ensure that data is commited from the! application</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  <span class="keyword">CALL </span>synchroniseall()</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <span class="comment">! compute the new addresses and lengths</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keywordflow">IF</span>(i_ao == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">! DEPENDS ON: set_dumpfile_address</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keyword">CALL </span>set_dumpfile_address(                                        &amp;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;       a_fixhd, len_fixhd,                                            &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;       a_lookup, len1_lookup, a_len2_lookup,                          &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;       number_of_data_words_in_memory, number_of_data_words_on_disk,  &amp;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;       disk_address)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">!  4.1 Open unit for dump :</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A,A,I3)&#39;</span>)<span class="stringliteral">&quot;DUMPCTL: Opening new file &quot;</span>,trim(dumpname), &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;     <span class="stringliteral">&quot; on unit &quot;</span>,nftout</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dumpctl&#39;</span>)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  len_dumpname=len_trim(dumpname)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespacemodel__file.xhtml#a07b515dfc8147e86355cd71196399c5d">model_file_open</a>(nftout,dumpname,len_dumpname,1,1,error,allowremap=.true.)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  <span class="keywordflow">IF</span> (error /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    icode = 1</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    cmessage=<span class="stringliteral">&quot;DUMPCTL : Fail to open output dump - may already exist&quot;</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  icode=0       </div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  output the new <a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a> of this dumpfile</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  <span class="keywordflow">IF</span>(<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keywordflow">IF</span>(printstatus &gt;= prstatus_diag) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A,A,I4,A,i10,A)&#39;</span>)                             &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;          <span class="stringliteral">&#39;Dumpfile Size for File &#39;</span>,trim(dumpname),<span class="stringliteral">&#39; on Unit &#39;</span>, &amp;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;          nftout,<span class="stringliteral">&#39; to be set to &#39;</span>, disk_address,<span class="stringliteral">&#39; Words&#39;</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dumpctl&#39;</span>)</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keyword">CALL </span>set_dumpfile_length(nftout, disk_address)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">! !  5. Write dump on appropriate unit putting timestamp in header</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">!  IF (I_AO == 1) THEN</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="comment">! Creation date and time</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keyword">CALL </span>date_time(a_fixhd(35),a_fixhd(36),a_fixhd(37),             &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;       a_fixhd(38),a_fixhd(39),a_fixhd(40))</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="comment">! Maximum length of field, required for IO buffer</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    buflen=a_lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,1)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keywordflow">IF</span> (a_len2_lookup &gt;  1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      <span class="keywordflow">DO</span> i=2,a_len2_lookup</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        buflen=max(buflen,a_lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,i))</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    d1_addr_submodel_id = <a class="code" href="namespacesubmodel__mod.xhtml#afa0d02e91180c750bc3e4d6cfb82f095" title="Submodel number for each submodel id. ">submodel_for_sm</a>(<a class="code" href="namespacesubmodel__mod.xhtml#a35421488a2f90015da0e1069913da490" title="Atmos SM partition in Long and Short form. ">atmos_sm</a>)</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">! DEPENDS ON: um_writdump</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keyword">CALL </span><a class="code" href="um__writdump_8f90.xhtml#a68c74db5b1541140d6fdbecf0dc2d8b6" title="SUBROUTINE UM_WRITDUMP. ">um_writdump</a>(nftout,a_fixhd,len_fixhd,           &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;       a_inthd,a_len_inthd,                              &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;       a_realhd,a_len_realhd,                            &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;       a_levdepc,a_len1_levdepc,a_len2_levdepc,          &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;       a_rowdepc,a_len1_rowdepc,a_len2_rowdepc,          &amp;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;       a_coldepc,a_len1_coldepc,a_len2_coldepc,          &amp;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;       a_flddepc,a_len1_flddepc,a_len2_flddepc,          &amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;       a_extcnst,a_len_extcnst,                          &amp;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;       a_dumphist,len_dumphist,                          &amp;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;       a_cfi1,a_len_cfi1,                                &amp;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;       a_cfi2,a_len_cfi2,                                &amp;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;       a_cfi3,a_len_cfi3,                                &amp;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;       a_lookup,len1_lookup,a_len2_lookup,               &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;       a_mpp_lookup,mpp_len1_lookup,                     &amp;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;       buflen,                                           &amp;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <a class="code" href="namespacesubmodel__mod.xhtml#a35421488a2f90015da0e1069913da490" title="Atmos SM partition in Long and Short form. ">atmos_sm</a>,                                         &amp;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;       no_obj_d1(d1_addr_submodel_id),                &amp;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;       d1_addr(1,1,d1_addr_submodel_id),              &amp;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;       a_len_data,d1)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    a_fixhd(5)=1    <span class="comment">! set fixhd(5) back to instantaneous dump</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">!  5.1 Close unit</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  <span class="comment">! Commit outstanding data to disk       CALL ioDiskSynchronise(nftout)</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">! Ensure the file_close occurs after the PP files have been updated</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">! (SynchroniseAll has completed)</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a33c87273417f625a2acbe2cc93ed0776">iofence</a>(nftout)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  len_dumpname=len_trim(dumpname)         <span class="keyword">CALL </span>model_file_close(nftout,dumpname,len_dumpname,1,0,icode)</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;now set the current <a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a> back to zero after we have done</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">!  the o/p</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  <span class="keywordflow">IF</span>(<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keyword">CALL </span>set_dumpfile_length(nftout, 0)</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">! 5.2 Exit here for WRITD1 temporary writes of dumps since</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">!     no requests need to be sent to the archive server</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;  <span class="keywordflow">IF</span> (lwritd1) <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">! !  6. Construct dump processing requests and send to slave task</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">!   Save dump name for writing to restart file on successful completion</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">!   of timestep</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;  <a class="code" href="chistg_8h.xhtml#ad0c4483c74b3484e4b9ac6c43f5e7a07">checkpoint_dump_im</a>(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)=dumpname</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">!  6.2 If current dump is to be archived construct archiving request</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">!      followed by delete request if appropriate</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">!  LARCHIVE = .FALSE.</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;  <span class="keywordflow">IF</span> (meanlev &lt;= 0 .AND. <a class="code" href="namespacenlstgen__mod.xhtml#a5ee4ff12e6cb7044da2744229da35b1a" title="Number of steps between atmosphere restart dumps. ">dumpfreqim</a>(i_ao) &gt;  0                    &amp;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;     .AND. <a class="code" href="namespacenlstgen__mod.xhtml#ae25566ab02e3cd7a996cf5d83df03867" title="Archiving frequency for atmos dumps. ">archdump_freqim</a>(i_ao) &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="comment">!         No meaning, regular dumping, regular archiving</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacenlstcall__mod.xhtml#a28feded25ee0c3bf8d91cc063e2da08d">lclimrealyr</a>) <span class="keywordflow">THEN</span> <span class="comment">! get freq + offset in terms of real</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;      <span class="comment">! months from 360d-style freq + offset</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;      <span class="keywordflow">IF</span> (i_day  ==  1 .AND. i_hour  ==  0) <span class="keywordflow">THEN</span> <span class="comment">! end of month</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        archdump_monfreq=(<a class="code" href="namespacenlstgen__mod.xhtml#a5ee4ff12e6cb7044da2744229da35b1a" title="Number of steps between atmosphere restart dumps. ">dumpfreqim</a>(i_ao)*<a class="code" href="namespacenlstgen__mod.xhtml#ae25566ab02e3cd7a996cf5d83df03867" title="Archiving frequency for atmos dumps. ">archdump_freqim</a>(i_ao)* &amp;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;           <a class="code" href="namespacenlstgen__mod.xhtml#a4a6ed31ef0d09bdc976baf277d1acbe7">secs_per_periodim</a>(i_ao))/                &amp;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;           (30*86400*<a class="code" href="namespacenlstgen__mod.xhtml#aded406ffa8d50a7c4a6325c5b75eb03d">steps_per_periodim</a>(i_ao))</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        archdump_monoffset=(<a class="code" href="namespacenlstgen__mod.xhtml#a5ee4ff12e6cb7044da2744229da35b1a" title="Number of steps between atmosphere restart dumps. ">dumpfreqim</a>(i_ao)*<a class="code" href="namespacenlstgen__mod.xhtml#aab63fef7fda2465f9b9a9c3540d99a53">archdump_offsetim</a>(i_ao)&amp;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;           *<a class="code" href="namespacenlstgen__mod.xhtml#a4a6ed31ef0d09bdc976baf277d1acbe7">secs_per_periodim</a>(i_ao))/               &amp;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;           (30*86400*<a class="code" href="namespacenlstgen__mod.xhtml#aded406ffa8d50a7c4a6325c5b75eb03d">steps_per_periodim</a>(i_ao))</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">!  N.B. i_month is used below, not (i_month-1), because offset!  is from _start_ of 1st month</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="keywordflow">IF</span>(mod((i_month-(<a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(2)+archdump_monoffset)),&amp;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;           archdump_monfreq)  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;          larchive = .true.</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( <a class="code" href="ihistg_8h.xhtml#a2dc33634d19eb85af552b5099e51fd7c">h_stepim</a>(i_ao)/<a class="code" href="namespacenlstgen__mod.xhtml#a5ee4ff12e6cb7044da2744229da35b1a" title="Number of steps between atmosphere restart dumps. ">dumpfreqim</a>(i_ao)  &gt;=                 &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;       <a class="code" href="namespacenlstgen__mod.xhtml#aab63fef7fda2465f9b9a9c3540d99a53">archdump_offsetim</a>(i_ao) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">!           Have passed the timestep from which to start archiving</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">!           Calculate whether this timestep is an archive time</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;           larchive = (mod((<a class="code" href="ihistg_8h.xhtml#a2dc33634d19eb85af552b5099e51fd7c">h_stepim</a>(i_ao)/                            &amp;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;         <a class="code" href="namespacenlstgen__mod.xhtml#a5ee4ff12e6cb7044da2744229da35b1a" title="Number of steps between atmosphere restart dumps. ">dumpfreqim</a>(i_ao)-<a class="code" href="namespacenlstgen__mod.xhtml#aab63fef7fda2465f9b9a9c3540d99a53">archdump_offsetim</a>(i_ao)),       &amp;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;         <a class="code" href="namespacenlstgen__mod.xhtml#ae25566ab02e3cd7a996cf5d83df03867" title="Archiving frequency for atmos dumps. ">archdump_freqim</a>(i_ao)) == 0)</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;     <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (meanlev &lt;= 0 .AND. <a class="code" href="namespacenlstgen__mod.xhtml#a5ee4ff12e6cb7044da2744229da35b1a" title="Number of steps between atmosphere restart dumps. ">dumpfreqim</a>(i_ao) == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">!         No meaning, no regular dumping.  Will archive if archiving</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">!         frequency is greater than 0.</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    larchive= (<a class="code" href="namespacenlstgen__mod.xhtml#ae25566ab02e3cd7a996cf5d83df03867" title="Archiving frequency for atmos dumps. ">archdump_freqim</a>(i_ao) &gt;  0)</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="keywordflow">     END IF</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordflow">IF</span> (larchive) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;      <span class="comment">!           Archiving turned on</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfacemppio__job__control_1_1jobcntrl.xhtml" title="API for model code. Send a command/string to the pipe file. ">jobcntrl</a>(<a class="code" href="namespacemppio__job__control__common.xhtml#a077d4fa710d00a5dfacdb270147ad30e">jc_archivedump</a>,dumpname)</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;DUMPCTL&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="dumpctl_8f90.xhtml#a3d8f404cc09e60a4e2702620d55a783d" title="Routine: DUMPCTL -!&gt;!&gt; Purpose: Controls the production and naming of output dump files...">dumpctl</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
