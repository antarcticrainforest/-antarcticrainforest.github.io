<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/cloud_w_mod-6a.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">cloud_w_mod-6a.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="cloud__w__mod-6a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespacecloud__w__6a__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacecloud__w__6a__mod.xhtml" title="Convective cloud microphysics routine. ">cloud_w_6a_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacecloud__w__6a__mod.xhtml#a7e8def91aa3539fc803de522c149a6d8" title="Calculates preciptation produced in lifting parcel from layer k to k+1. ">cloud_w_6a</a> (k, npnts, start_lev,                                &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                       flxkp1, qclpk, qcfpk,                               &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                       thekp1, qekp1, qsekp1,                              &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                       ekp14, ekp34, delpkp1,                              &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                       blowst, bwkp1, bland, bterm, l_q_interact,          &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                       lcbase, lctop,                                      &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                       qclpkp1, qcfpkp1,                                   &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                       tcw, depth, cclwp, lcca,                            &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                       iccb, icct, prekp1, cca, ccwkp1)</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="namespacecloud__w__6a__mod.xhtml#a7e8def91aa3539fc803de522c149a6d8">   36</a></span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: cp, c_virtual</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__run__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_run_mod</a><span class="keywordtype">, Only</span>:                                                   &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#af96d1981356dbc9cd0de5cca3fa86135">mparwtr</a>, <a class="code" href="namespacecv__run__mod.xhtml#a899ca5a3ec267ac2bc8c5c3c7f02c1da">qlmin</a>, <a class="code" href="namespacecv__run__mod.xhtml#afeb3a49abf5d3a14ee5fd741b58c123d">fac_qsat</a>, <a class="code" href="namespacecv__run__mod.xhtml#a876c614e80c6bfb4bcd7a5f6074dfab2">ccw_for_precip_opt</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecon__rad__6a__mod.xhtml" title="Convective cloud microphysics routine. ">con_rad_6a_mod</a></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;-<span class="comment">! Variables that are input</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;-<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: k                   <span class="comment">! Present model layer number</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: npnts               <span class="comment">! Vector length</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: start_lev(npnts)    <span class="comment">! Level at which convection initiated</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: flxkp1(npnts)    <span class="comment">! Parcel mass flux in layer k+1 (Pa/s)</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qclpk(npnts)     <span class="comment">! Par. qcl in layer k (kg/kg)</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qcfpk(npnts)     <span class="comment">! Par. qcf in layer k (kg/kg)</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: thekp1(npnts)    <span class="comment">! Env. pot. temperature in layer k+1 (K)</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qekp1(npnts)     <span class="comment">! Env. spec. humidity in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qsekp1(npnts)    <span class="comment">! Env. saturated specific humidity in                                    ! in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: ekp14(npnts)     <span class="comment">! Entrainment coefficient at level k+1/4</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                    <span class="comment">! multiplied by appropriate layer thickness</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: ekp34(npnts)     <span class="comment">! Entrainment coefficient at level k+3/4                                    ! multiplied by appropriate layer thickness</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: delpkp1(npnts)   <span class="comment">! pressure difference across layer k+1 (Pa)</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: blowst(npnts) <span class="comment">! mask for those points at which stability</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                    <span class="comment">! is low enough for convection to occur</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: bwkp1(npnts)  <span class="comment">! mask for parcels which have liquid                                    ! condensate in layer k+1</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: bland(npnts)  <span class="comment">! Land/sea mask</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: bterm(npnts)  <span class="comment">! Mask for parcels which terminate                                    ! in layer k+1</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: l_q_interact  <span class="comment">! True if PC2 is switched on</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;-<span class="comment">! Variables that are input and output</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;-<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(INOUT)</span> :: lcbase(npnts)<span class="comment">! Lowest conv. cloud base level</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(INOUT)</span> :: lctop(npnts) <span class="comment">! Lowest conv. cloud top level</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: qclpkp1(npnts)<span class="comment">! Parcel liquid condensate mixing ratio</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                                    <span class="comment">! in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                    <span class="comment">! IN:  before precipitation</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                    <span class="comment">! OUT: after precipitation</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: qcfpkp1(npnts)<span class="comment">! Parcel liquid condensate mixing ratio</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                    <span class="comment">! in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                                    <span class="comment">! IN:  before precipitation</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                                    <span class="comment">! OUT: after precipitation</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: tcw(npnts)    <span class="comment">! Total condensed water (kg/m**2/s)</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                                    <span class="comment">! IN summed to layer k</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                    <span class="comment">! OUT summed to layer k+1</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: depth(npnts)  <span class="comment">! Depth of convective cloud (m)</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                                    <span class="comment">! IN summed to layer k                                    ! OUT summed to layer k+1</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: cclwp(npnts)  <span class="comment">! Condensed water path (kg/m**2)</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                    <span class="comment">! IN summed to layer k</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                    <span class="comment">! OUT summed to layer k+1</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: lcca(npnts)   <span class="comment">! Lowest conv. cloud amount (%)</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;-<span class="comment">! Variables which are output</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;-<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(OUT)</span> :: iccb(npnts)  <span class="comment">! convective cloud base_level</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(OUT)</span> :: icct(npnts)  <span class="comment">! convective cloud top level</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: prekp1(npnts)   <span class="comment">! precipitation from parcel as it rises                                    ! from layer k to k+1 (kg/m**2/s)</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: cca(npnts)      <span class="comment">! convective cloud amount (%)</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: ccwkp1(npnts)   <span class="comment">! Total condensate in level k+1 (kg/kg)</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;-<span class="comment">! Local variables</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;-</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordtype">INTEGER</span> :: i                <span class="comment">! Loop counter</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordtype">REAL</span> :: mparmult            <span class="comment">! Factor used to multiply mparwtr, value between</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                            <span class="comment">! 1. and ~3. being 1.0 for deeper clouds.</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordtype">REAL</span> :: tmp_ccwkp1(npnts)   <span class="comment">! Total condensate in level k+1 before precipitation</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                            <span class="comment">! (kg/kg)</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keywordtype">REAL</span> :: ccwk(npnts)         <span class="comment">! Total condensate in level k (kg/kg)</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                   <span class="keywordtype">REAL</span> :: xmin(npnts)         <span class="comment">! Maxmimum amount of cloud water retained by the                            ! parcel before the parcel precipitates (kg/kg)</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CLOUD_W_6A&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;-<span class="comment">! Store convective cloud liquid water before Precipitation</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;-<span class="comment">!</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  tmp_ccwkp1(i) = qclpkp1(i) + qcfpkp1(i)  <span class="comment">! Total condensate in level k+1                                           ! before precipitation</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  ccwk(i)       = qclpk(i)   + qcfpk(i)    <span class="comment">! Total condensate in level k</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  prekp1(i)     = 0.0                      <span class="comment">! initialise precipitation to zero</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;-<span class="comment">! Calculate Precipitation from layer k+1 and adjust cloud water</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;-</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordflow">SELECT CASE</span> (<a class="code" href="namespacecv__run__mod.xhtml#a876c614e80c6bfb4bcd7a5f6074dfab2">ccw_for_precip_opt</a>)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordflow">CASE</span> (4)            <span class="comment">! xmin profile based on qsat with user defined                      ! minimum, maximum and qsat scaling.</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;           xmin(i) = max(min(<a class="code" href="namespacecv__run__mod.xhtml#af96d1981356dbc9cd0de5cca3fa86135">mparwtr</a>, <a class="code" href="namespacecv__run__mod.xhtml#afeb3a49abf5d3a14ee5fd741b58c123d">fac_qsat</a>*qsekp1(i)), <a class="code" href="namespacecv__run__mod.xhtml#a899ca5a3ec267ac2bc8c5c3c7f02c1da">qlmin</a>)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordflow">CASE</span> (3)            <span class="comment">! Manoj&#39;s function for congestus</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                                             <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      mparmult = 1.5 + 0.5*tanh((3000.0 -depth(i))/800.0)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      xmin(i)  = min(<a class="code" href="namespacecv__run__mod.xhtml#af96d1981356dbc9cd0de5cca3fa86135">mparwtr</a>*mparmult, <a class="code" href="namespacecv__run__mod.xhtml#afeb3a49abf5d3a14ee5fd741b58c123d">fac_qsat</a>*qsekp1(i))</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="comment">! If a land point and liquid water in the layer      ! increase the minimum cloud water for Precipitation</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      <span class="comment">! The reasons for this are an attempt to take some account of      ! more aerosols over land leading to more small cloud drops and</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      <span class="comment">! therefore more cloud water before Precipitation. </span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <span class="keywordflow">IF</span> (bwkp1(i) .AND. bland(i)) xmin(i) =xmin(i)*2.0</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <span class="comment">! limit max value to 0.003 kg/kg</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      xmin(i) = min(xmin(i),0.003)         </div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span>   <span class="comment">! PC2</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="comment">! Limit xmin(i)</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        xmin(i) = max(xmin(i), <a class="code" href="namespacecv__run__mod.xhtml#a899ca5a3ec267ac2bc8c5c3c7f02c1da">qlmin</a>)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordflow">CASE</span> (2)            <span class="comment">! Manoj&#39;s function dependent on depth of cloud</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      mparmult = 2.0 + 1.0*tanh((1500.0 -depth(i))/1000.0)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      xmin(i)  = min(<a class="code" href="namespacecv__run__mod.xhtml#af96d1981356dbc9cd0de5cca3fa86135">mparwtr</a>*mparmult, <a class="code" href="namespacecv__run__mod.xhtml#afeb3a49abf5d3a14ee5fd741b58c123d">fac_qsat</a>*qsekp1(i))</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="comment">! If a land point and liquid water in the layer      ! increase the minimum cloud water for Precipitation</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="comment">! The reasons for this are an attempt to take some account of      ! more aerosols over land leading to more small cloud drops and</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="comment">! therefore more cloud water before Precipitation. </span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="comment">! If a land point and liquid water in the layer      IF (bwkp1(i) .AND. bland(i)) xmin(i) = xmin(i)*2.0</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="comment">! Limit xmin</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        xmin(i) = max(xmin(i), <a class="code" href="namespacecv__run__mod.xhtml#a899ca5a3ec267ac2bc8c5c3c7f02c1da">qlmin</a>)</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keywordflow">CASE</span> (1)            <span class="comment">! No test on a critical depth for Precipitation</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                      <span class="comment">! Option in use for HadGEM2</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      xmin(i) = min(<a class="code" href="namespacecv__run__mod.xhtml#af96d1981356dbc9cd0de5cca3fa86135">mparwtr</a>, <a class="code" href="namespacecv__run__mod.xhtml#afeb3a49abf5d3a14ee5fd741b58c123d">fac_qsat</a>*qsekp1(i))</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="comment">! If a land point and liquid water in the layer      IF (bwkp1(i) .AND. bland(i)) xmin(i) = xmin(i)*2.0</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      <span class="comment">! Limit xmin</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        xmin(i) = max(xmin(i), <a class="code" href="namespacecv__run__mod.xhtml#a899ca5a3ec267ac2bc8c5c3c7f02c1da">qlmin</a>)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordflow">END SELECT</span>      <span class="comment">! test on value of ccw_for_precip_opt</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="comment">! Precipitate if cloud water in the layer &gt; xmin</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keywordflow">IF</span> ( bwkp1(i) ) <span class="keywordflow">THEN</span>  <span class="comment">!If condensate is liquid</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      <span class="keywordflow">IF</span> ( qclpkp1(i) &gt; xmin(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        prekp1(i)  = (qclpkp1(i) - xmin(i)) * flxkp1(i) /g</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        qclpkp1(i) = xmin(i)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <span class="keywordflow">ELSE</span> <span class="comment">!Condensate is frozen</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <span class="keywordflow">IF</span> ( qcfpkp1(i) &gt; xmin(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        prekp1(i)  = (qcfpkp1(i) - xmin(i)) * flxkp1(i) /g</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        qcfpkp1(i) = xmin(i)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;   <span class="comment">!Update the convective cloud water. Do not permit negative CCW.</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  ccwkp1(i) = max(qclpkp1(i) + qcfpkp1(i), 0.0)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;-<span class="comment">! Calculate convective cloud base, convective cloud top, total condensed</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">! water/ice and convective cloud amount</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">! SUBROUTINE CON_RAD - now called after rainout has occurred</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">! UM Documentation paper 27</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">! Section (9)</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;-</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespacecon__rad__6a__mod.xhtml#ae6461e6aebd8115c307fa577fdf28083" title="Calculates convective cloud top, base and amount. ">con_rad_6a</a> (k, npnts, start_lev,                        &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                 ccwk, ccwkp1, tmp_ccwkp1, flxkp1, delpkp1,  &amp;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                 l_q_interact, bterm,                        &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                 tcw, cclwp, lcca, lcbase, lctop,            &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                 iccb, icct, cca)</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;-</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CLOUD_W_6A&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespacecloud__w__6a__mod.xhtml#a7e8def91aa3539fc803de522c149a6d8" title="Calculates preciptation produced in lifting parcel from layer k to k+1. ">cloud_w_6a</a></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacecloud__w__6a__mod.xhtml" title="Convective cloud microphysics routine. ">cloud_w_6a_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
