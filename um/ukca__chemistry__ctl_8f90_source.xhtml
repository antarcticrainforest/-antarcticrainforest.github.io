<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/UKCA/ukca_chemistry_ctl.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_3b087d695daa154bfcb7242bcfd0fbd3.xhtml">UKCA</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ukca_chemistry_ctl.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ukca__chemistry__ctl_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="ukca__chemistry__ctl_8f90.xhtml#a236899d464f41a41baacbb5737d98bd7" title="!&gt; (c) [University of Cambridge] [2008]. All rights reserved.!&gt; This routine has been licensed to the...">ukca_chemistry_ctl</a>(i_month, i_day_number, i_hour,     &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                      r_minute, secs_per_step,                         &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                      ntracers,                                        &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                      ndiags,                                          &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                      sinlat,                                          &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                      coslat,                                          &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                      true_longitude,                                  &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                      pres, temp, q,                                   &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                      qcf, qcl, rh,                                    &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                      p_layer_boundaries,                              &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                      r_theta_levels,                                  &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                      z_top_of_model,                                  &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                      cos_zenith_angle,                                &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                      tracer,                                          &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                      user_diags,                                      &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                      t_surf, dzl, z0m, u_s,                           &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                      drain, crain,                                    &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                      cloud_frac,                                      &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                      fastj_dj,                                        &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                      volume, mass,                                    &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                      land_points, land_index,                         &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                      tile_pts, tile_index, tile_frac,                 &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                      zbl, surf_hf, seaice_frac, stcon,                &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                      soilmc_lp, fland, laift_lp, canhtft_lp,          &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                      z0tile_lp, t0tile_lp, canwctile_lp,              &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                      pv_at_theta,                                     &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                      theta,                                           &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                      um_ozone3d,                                      &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                      uph2so4inaer,                                    &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                      delso2_wet_h2o2,                                 &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                      delso2_wet_o3,                                   &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                      delh2so4_chem,                                   &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                      delso2_drydep,                                   &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                      delso2_wetdep,                                   &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                      so4_sa                                           &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                      )</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="ukca__chemistry__ctl_8f90.xhtml#a236899d464f41a41baacbb5737d98bd7">   56</a></span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      <span class="keywordtype">USE </span>conversions_mod<span class="keywordtype">, ONLY</span>: pi_over_180, pi</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <span class="keywordtype">USE </span>nstypes<span class="keywordtype">, ONLY</span>: ntype, npft</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordtype">USE </span>asad_mod</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceasad__chem__flux__diags.xhtml" title="(c) [University of Cambridge] [2008]. All rights reserved. ">asad_chem_flux_diags</a></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceukca__d1__defs.xhtml" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_d1_defs</a></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceukca__cspecies.xhtml" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_cspecies</a></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceukca__tropopause.xhtml" title="Purpose: Module containing subroutine to calculate the pressure of. ">ukca_tropopause</a></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceukca__strat__update.xhtml" title="(c) [University of Cambridge] [2008]. All rights reserved. ">ukca_strat_update</a></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <span class="keywordtype">USE </span>ukca_constants<span class="keywordtype">,       ONLY</span>: c_o3, c_h2o, c_hono2, c_o1d,     &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                                      avogadro, boltzmann</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceukca__dissoc.xhtml" title="Module to contain photolysis rate arrays. ">ukca_dissoc</a></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceukca__phot2d.xhtml" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_phot2d</a><span class="keywordtype">,          ONLY</span>: <a class="code" href="namespaceukca__phot2d.xhtml#af09d98aceaad8a6935ea26c0cb91426e">ukca_photin</a>, <a class="code" href="namespaceukca__phot2d.xhtml#a9f7ee5cae1d45e59c2fba833b357b828">ukca_curve</a>,         &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                      <a class="code" href="namespaceukca__phot2d.xhtml#a8675f88c22c4e76c6dac22e7b59ac997">ukca_inpr2d</a>, <a class="code" href="namespaceukca__phot2d.xhtml#afd317de3b26addbbe1ac8a62443e14b0">nolev</a>, <a class="code" href="namespaceukca__phot2d.xhtml#a9f76e81e6a90179ee12edb21cba5a23d">nlphot</a>,      &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                      <a class="code" href="namespaceukca__phot2d.xhtml#a03e3535d017e232fa046c0d884125468">ntphot</a>, <a class="code" href="namespaceukca__phot2d.xhtml#a8164b18004814f78e1598f21b0a777b9" title="Photolysis rates from 2-D model which have been interpolated onto 3-D. ">pjin</a>, <a class="code" href="namespaceukca__phot2d.xhtml#a21efd37a0f05a9bae1eb9f94de658059" title="2D model level pressures ">pr2d</a></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      <span class="keywordtype">USE </span>ukca_option_mod<span class="keywordtype">,      ONLY</span>: l_ukca_raq, l_ukca_trop,         &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                      l_ukca_trophet, l_ukca_use_2dtop,&amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                      l_ukca_h2o_feedback, l_ukca_chem,&amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                      l_ukca_het_psc, l_ukca_achem,    &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                      l_ukca_advh2o, l_ukca_aerchem,   &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                      l_ukca_intdd,      &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                      i_ukca_photol, fastjx_prescutoff,&amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                      dts0</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="keywordtype">USE </span>ukca_photo_scheme_mod<span class="keywordtype">, ONLY</span>: i_ukca_phot2d, i_ukca_fastj,    &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                                       i_ukca_fastjx</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      <span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">,  ONLY</span>: g</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                                <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a>          use um_parvars</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacetypstsz__mod.xhtml" title="This file belongs in section: Top_level This file belongs in section: Top_level. ">typstsz_mod</a></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">#include &quot;typsize.h&quot;</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;c_mdi.h&quot;#include &quot;typsts.h&quot;</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ntracers          <span class="comment">! no. of tracers</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ndiags            <span class="comment">! no. of diagnostics</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: i_month           <span class="comment">! month</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: i_day_number      <span class="comment">! day</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: i_hour            <span class="comment">! hour</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: uph2so4inaer      <span class="comment">! flag for H2SO4 updating</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: land_points</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: land_index(land_points)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: tile_pts(ntype)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: tile_index(land_points,ntype)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: r_minute                           <span class="comment">! minute</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: secs_per_step                      <span class="comment">! time step</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: z_top_of_model                     <span class="comment">! top of model (m)</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: sinlat(row_length, rows)        <span class="comment">! sin(latitude)</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: coslat(row_length, rows)           <span class="comment">! cos(latitude)</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: true_longitude(row_length,rows)    <span class="comment">! longitude</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: pres(row_length,rows,model_levels) <span class="comment">! pressure</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: p_layer_boundaries(row_length,rows,    &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                               0:model_levels) <span class="comment">! pressure</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: r_theta_levels(row_length,rows,             &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                           0:model_levels)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: temp(row_length,rows,model_levels) <span class="comment">! actual temp</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: dzl(row_length, rows, bl_levels)   <span class="comment">! thickness</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: u_s(row_length, rows)              <span class="comment">! ustar</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: z0m(row_length, rows)              <span class="comment">! roughness</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: t_surf(row_length, rows)           <span class="comment">! surface temp</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: drain(row_length,rows,model_levels) <span class="comment">! 3-D LS rain</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: crain(row_length,rows,model_levels) <span class="comment">! 3-D convec</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: cos_zenith_angle(row_length, rows) <span class="comment">! cosine of ZA</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: volume(row_length,rows,model_levels) <span class="comment">! cell vol.</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: mass(row_length, rows, model_levels) <span class="comment">! cell mass</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: pv_at_theta(row_length, rows, model_levels) <span class="comment">! PV</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: theta(row_length, rows, model_levels)<span class="comment">! theta</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: um_ozone3d(row_length, rows, model_levels) <span class="comment">! O3</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qcf(row_length, rows, wet_levels)  <span class="comment">! qcf</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qcl(row_length, rows, wet_levels)  <span class="comment">! qcl</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: rh(row_length, rows, wet_levels)    <span class="comment">! RH frac</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: cloud_frac(row_length, rows, wet_levels)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: so4_sa(row_length,rows,model_levels)  <span class="comment">! aerosol</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">!                                                        surface area</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">!       Variables for interactive dry deposition scheme</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: tile_frac(land_points,ntype)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: zbl(row_length,rows)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: surf_hf(row_length,rows)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: seaice_frac(row_length,rows)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: stcon(row_length,rows,npft)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: soilmc_lp(land_points)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: fland(land_points)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: laift_lp(land_points,npft)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: canhtft_lp(land_points,npft)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: z0tile_lp(land_points,ntype)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: t0tile_lp(land_points,ntype)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: canwctile_lp(land_points,ntype)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: fastj_dj(row_length,rows,model_levels,   &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                        jppj)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: q(row_length,rows,model_levels)   <span class="comment">! water vapo</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: tracer(row_length,rows,                  &amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                      model_levels,ntracers)     <span class="comment">! tracer MMR</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: user_diags(row_length,rows,              &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                                        model_levels,ndiags)     <span class="comment">! chem diags</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">! SO2 increments</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: delSO2_wet_H2O2(row_length,rows,           &amp;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                             model_levels)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: delSO2_wet_O3(row_length,rows,model_levels)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: delh2so4_chem(row_length,rows,model_levels)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: delSO2_drydep(row_length,rows,model_levels)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: delSO2_wetdep(row_length,rows,model_levels)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="keywordtype">INTEGER</span> :: nlev_in_bl(row_length, rows)     <span class="comment">! No levs in bl</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <span class="keywordtype">INTEGER</span> :: nlev_in_bl2(theta_field_size)    <span class="comment">! No levs in bl</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span> :: nr            <span class="comment">! no of rxns for BE</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span> :: n_be_calls    <span class="comment">! no of call to BE solver</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span> :: first_row</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span> :: first_column</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="keywordtype">INTEGER</span> :: i             <span class="comment">! Loop variable</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="keywordtype">INTEGER</span> :: j             <span class="comment">! loop variable</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      <span class="keywordtype">INTEGER</span> :: js            <span class="comment">! loop variable</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      <span class="keywordtype">INTEGER</span> :: k             <span class="comment">! loop variable</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      <span class="keywordtype">INTEGER</span> :: l             <span class="comment">! loop variable</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      <span class="keywordtype">INTEGER</span> :: ll            <span class="comment">! loop variable</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      <span class="keywordtype">INTEGER</span> :: m             <span class="comment">! loop variable</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      <span class="keywordtype">INTEGER</span> :: n             <span class="comment">! loop variable</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <span class="keywordtype">INTEGER</span> :: sp            <span class="comment">! loop variable</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      <span class="keywordtype">INTEGER</span> :: n_pnts        <span class="comment">! no. of pts in 2D passed to CDRIVE</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">EXTERNAL</span> :: asad_findreaction <span class="comment">! integer function</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      <span class="keywordtype">INTEGER</span>           :: ierr                     <span class="comment">! Error code: asad diags routines</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      <span class="keywordtype">INTEGER</span>           :: errcode                  <span class="comment">! Error code: ereport</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      <span class="keywordtype">CHARACTER(LEN=72)</span> :: cmessage                 <span class="comment">! Error message</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      <span class="keywordtype">CHARACTER(LEN=10)</span>      :: prods(2)                 <span class="comment">! Products</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      <span class="keywordtype">LOGICAL</span>           :: blmask(theta_field_size) <span class="comment">! mask</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: fxb = 23.45 * pi_over_180 <span class="comment">! tropic of capricorn</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: fxc = 24.0/ pi</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span>      :: DTS                       <span class="comment">! B. Euler timestep</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">!       Pressure level above which top boundary conditions are applied</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: p_above = 7000.           <span class="comment">! Pa</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordtype">REAL</span> :: tgmt               <span class="comment">! GMT time (decimal represent</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordtype">REAL</span> :: declin             <span class="comment">! declination</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordtype">REAL</span> :: total_water        <span class="comment">! Total water</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordtype">REAL</span> :: const              <span class="comment">! constant</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: limit = 1200.   <span class="comment">! seconds. For timesteps</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                                           <span class="comment">! greater than this we halve</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                                           <span class="comment">! the chemical timestep</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                           <span class="comment">! (for IMPACT).</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">! SO2 increments in molecules/cm^3</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;      <span class="keywordtype">REAL</span> :: SO2_wetox_H2O2(theta_field_size)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      <span class="keywordtype">REAL</span> :: SO2_wetox_O3(theta_field_size)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      <span class="keywordtype">REAL</span> :: SO2_dryox_OH(theta_field_size)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: BE_rc(:,:)       <span class="comment">! 1-D Rate coeff array</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: zfnatr(:,:)      <span class="comment">! 1-D array of non-transported tracers</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: ystore(:)        <span class="comment">! array to store H2SO4 when updated in MODE</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;      <span class="keywordtype">REAL</span> :: zftr(theta_field_size,jpctr)  <span class="comment">! 1-D array of tracers</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <span class="keywordtype">REAL</span> :: zp  (theta_field_size)        <span class="comment">! 1-D pressure</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      <span class="keywordtype">REAL</span> :: zt  (theta_field_size)        <span class="comment">! 1-D temperature</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;      <span class="keywordtype">REAL</span> :: zclw(theta_field_size)        <span class="comment">! 1-D cloud liquid water</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      <span class="keywordtype">REAL</span> :: zfcloud(theta_field_size)     <span class="comment">! 1-D cloud fraction</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      <span class="keywordtype">REAL</span> :: cdot(theta_field_size,jpctr)  <span class="comment">! 1-D chem. tendency</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      <span class="keywordtype">REAl</span> :: zq(theta_field_size)          <span class="comment">! 1-D water vapour mmr</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      <span class="keywordtype">REAL</span> :: pjinda(rows, <a class="code" href="namespaceukca__phot2d.xhtml#a03e3535d017e232fa046c0d884125468">ntphot</a>, jppj)    <span class="comment">! PJIN at one level</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      <span class="keywordtype">REAL</span> :: zprt(row_length, rows, jppj)  <span class="comment">! 2-D photolysis rates</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      <span class="keywordtype">REAL</span> :: zprt1d(theta_field_size,jppj) <span class="comment">! 1-D photolysis rates</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;      <span class="keywordtype">REAL</span> :: tloc  (row_length, rows)      <span class="comment">! local time</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordtype">REAL</span> :: daylen(row_length, rows)      <span class="comment">! local daylength</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      <span class="keywordtype">REAL</span> :: cs_hour_ang(row_length, rows) <span class="comment">! cosine hour angle</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      <span class="keywordtype">REAL</span> :: tanlat(row_length, rows)      <span class="comment">! tangens of latitude</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      <span class="keywordtype">REAL</span> :: zdryrt(row_length, rows, jpdd)                <span class="comment">! dry dep rate</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      <span class="keywordtype">REAL</span> :: zdryrt2(theta_field_size, jpdd)               <span class="comment">! dry dep rate</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      <span class="keywordtype">REAL</span> :: zwetrt(row_length, rows, model_levels, jpdw)  <span class="comment">! wet dep rate</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      <span class="keywordtype">REAL</span> :: zwetrt2(theta_field_size, jpdw)               <span class="comment">! wet dep rat</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      <span class="keywordtype">REAL</span> :: zwetrt3(theta_field_size, model_levels, jpdw) <span class="comment">! wet dep rat</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      <span class="keywordtype">REAL</span> :: zfrdiss2(theta_field_size,jpdw,jpeq+1)        <span class="comment">! dissolved fraction</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      <span class="keywordtype">REAL</span> :: zfrdiss(row_length, rows, model_levels, jpdw, jpeq+1)</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;      <span class="keywordtype">REAL</span> :: rc_het(theta_field_size,2)                <span class="comment">! heterog rates for trop chem</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;      <span class="keywordtype">REAL</span> :: kp_nh(row_length, rows, model_levels)     <span class="comment">! Dissociation const</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      <span class="keywordtype">REAL</span> :: kp_nh2(theta_field_size)                  <span class="comment">! Dissociation const</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;      <span class="keywordtype">REAL</span> :: ozonecol(row_length, rows, model_levels)  <span class="comment">! for strat chem</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      <span class="keywordtype">REAL</span> :: BE_tnd(theta_field_size)                  <span class="comment">! total no density</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      <span class="keywordtype">REAL</span> :: BE_h2o(theta_field_size)                  <span class="comment">! water vapour concn</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      <span class="keywordtype">REAL</span> :: BE_o2(theta_field_size)                   <span class="comment">! oxygen concn</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;      <span class="keywordtype">REAL</span> :: BE_vol(theta_field_size)                  <span class="comment">! gridbox volume</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      <span class="keywordtype">REAL</span> :: BE_wetrt(theta_field_size,jpspec)         <span class="comment">! wet dep rates (s-1)</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;      <span class="keywordtype">REAL</span> :: BE_dryrt(theta_field_size,jpspec)         <span class="comment">! dry dep rates (s-1)</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;      <span class="keywordtype">REAL</span> :: BE_deprt(theta_field_size,jpspec)         <span class="comment">! dep rates (s-1)</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      <span class="keywordtype">REAL</span> :: BE_frdiss(theta_field_size,jpspec,jpeq+1) <span class="comment">! dissolved fraction</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      <span class="keywordtype">REAL</span> :: BE_y (theta_field_size,jpspec)            <span class="comment">!</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="keywordtype">REAL</span> :: strat_ch4loss(theta_field_size,model_levels) <span class="comment">! for strat ch4 loss</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;      <span class="keywordtype">REAL</span> :: k_dms(theta_field_size,5)                 <span class="comment">! dms rate coeffs</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      <span class="keywordtype">REAL</span> :: pr2dj(<a class="code" href="namespaceukca__phot2d.xhtml#a9f76e81e6a90179ee12edb21cba5a23d">nlphot</a>)                             <span class="comment">! 2D photolysis level pres</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span> :: first_lat</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span> :: dellat</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span> :: first_lon</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span> :: dellon</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">SAVE</span> :: firstcall = .true.</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">! Variables for heterogeneous chemistry</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: shno3_3d(:,:,:)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keywordtype">LOGICAL</span> :: stratflag(theta_field_size)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_CHEMISTRY_CTL&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        n_pnts = rows * row_length</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        nr = <a class="code" href="namespaceukca__d1__defs.xhtml#ab8a8536ba854713ad1eebe8513de101b">nr_therm</a> + <a class="code" href="namespaceukca__d1__defs.xhtml#a973c73eaf1127a0f5fc0a0a3f7c89c89">nr_phot</a></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">IF</span> (.NOT. <span class="keyword">ALLOCATED</span>(zfnatr)) <span class="keyword">ALLOCATE</span>(zfnatr(n_pnts,nnaf))        <span class="keywordflow">IF</span> (.NOT. <span class="keyword">ALLOCATED</span>(ystore) .AND. uph2so4inaer == 1)            &amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                                     <span class="keyword">ALLOCATE</span>(ystore(theta_field_size))</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keywordflow">IF</span> (firstcall) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">!         Check that theta_field_size = n_pnts</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;          <span class="keywordflow">IF</span> (theta_field_size /= n_pnts) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            cmessage=<span class="stringliteral">&#39;theta_field_size not equal to n_pnts&#39;</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_CHEMISTRY_CTL&#39;</span>,n_pnts,cmessage)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">! Determine where the domain is in latitude</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;          first_lat = asin(sinlat(1,1))</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;          dellat = asin(sinlat(1,2)) - first_lat</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;          first_row = int((first_lat + 0.5*pi) / dellat + 0.00001) + 1</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">! Determine where the domain is in longitude</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;          first_lon = true_longitude(1,2)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;          dellon = true_longitude(2,2) - first_lon</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;          first_column = int(first_lon / dellon + 0.00001) + 1</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">!         Update ASAD timestep variables</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;          dtime = secs_per_step</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">!         Backward Euler timestep variables</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;          n_be_calls = int(dtime/dts0)</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">! Ensure we call BE at least once</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;          <span class="keywordflow">IF</span> (n_be_calls == 0) n_be_calls = 1</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">! Calculate the BE Timestep</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;          dts=dtime/n_be_calls</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;          <span class="keywordflow">IF</span> ( <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a561deb02a924c55956927c57a4c52691">prstatus_oper</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;n_be_calls, dts= &#39;</span>,n_be_calls, dts</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_chemistry_ctl&#39;</span>)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">!         Check whether water vapour is advective tracer. Then,</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">!         check whether UM and ASAD advective tracers correspond</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">!         to each other.</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;          <span class="keywordflow">IF</span> ((l_ukca_advh2o) .AND. (<a class="code" href="namespaceukca__cspecies.xhtml#a8884f05abbfaeedef271563df972d530">n_h2o</a> == 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            cmessage=<span class="stringliteral">&#39;No tracer for advected water vapour&#39;</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            errcode = 4</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_CHEMISTRY_CTL&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">! Allocate stratospheric photolysis arrays</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;          <span class="keywordflow">IF</span> (l_ukca_strat .OR. l_ukca_stratcfc .OR. l_ukca_strattrop)  &amp;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceukca__dissoc.xhtml#af5efa0090df55f10ef669dcf52ed0e5c" title="UKCA stratospheric photolysis module Test version ">ukca_strat_photol_init</a>()</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">! Identify the SO2+OH rate coeff, the products are alternatives depending</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">!  on whether the H2SO4 tracer updating is to be done in ASAD or in MODE.</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        iso2_oh = 0</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        ih2so4_hv = 0</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="keywordflow">IF</span> (l_ukca_achem) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;          prods = (/<span class="stringliteral">&#39;H2SO4     &#39;</span>,<span class="stringliteral">&#39;HO2       &#39;</span>/)</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;          iso2_oh = asad_findreaction( <span class="stringliteral">&#39;SO2       &#39;</span>, <span class="stringliteral">&#39;OH        &#39;</span>,      &amp;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                                 prods, 2, spt, ntrkx, jptk+1, jpspt )</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;          <span class="keywordflow">IF</span> (iso2_oh == 0) <span class="keywordflow">THEN</span>   <span class="comment">! check for stratospheric sulphur chemistry</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            prods = (/<span class="stringliteral">&#39;SO3       &#39;</span>,<span class="stringliteral">&#39;H2O       &#39;</span>/)</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            iso2_oh = asad_findreaction( <span class="stringliteral">&#39;SO2       &#39;</span>, <span class="stringliteral">&#39;OH        &#39;</span>,    &amp;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                                 prods, 2, spt, ntrkx, jptk+1, jpspt )</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            prods = (/<span class="stringliteral">&#39;SO3       &#39;</span>,<span class="stringliteral">&#39;OH        &#39;</span>/)</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            ih2so4_hv = asad_findreaction( <span class="stringliteral">&#39;H2SO4     &#39;</span>, <span class="stringliteral">&#39;PHOTON    &#39;</span>,  &amp;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                                 prods, 2, spj, nprkx, jppj+1, jpspj )</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;          <span class="keywordflow">IF</span> (iso2_oh == 0 .AND. ih2so4_hv == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            cmessage=<span class="stringliteral">&#39; Sulphur chemistry reactions not found&#39;</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) cmessage</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_chemistry_ctl&#39;</span>)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;iso2_oh: &#39;</span>,iso2_oh,<span class="stringliteral">&#39; ih2so4_hv: &#39;</span>,ih2so4_hv</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_chemistry_ctl&#39;</span>)</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            errcode = 1</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_CHEMISTRY_CTL&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keywordflow">        END IF</span>   <span class="comment">! L_ukca_achem</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! of initialization of chemistry subroutine (firstcall)</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">!       Calculate local time as function of longitude</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        tgmt = <span class="keywordtype">REAL(i_hour)</span> + r_minute/60.0                             &amp;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                            + secs_per_step * 0.5 / 3600.0</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">!        IF (tgmt &lt; 0.) tgmt = tgmt + 24.</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        tloc = tgmt + 24.0 * true_longitude/pi/2.0</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="keywordflow">WHERE</span> (tloc &gt; 24.0) tloc = tloc - 24.0</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">!       Calculate Declination Angle and Daylength for each row for</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment">!       current day of the year.</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment">!       Ensure COS of HOUR ANGLE does not exceed + or - 1, and set DAY</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment">!       LENGTH of 1st &amp; last rows to be the same as that of adjacent rows</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment">!       to avoid possible problems at the poles (tan(90)=infinity).</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        daylen = 0.0</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordflow">DO</span> i=1,rows</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;          <span class="keywordflow">DO</span> j=1,row_length</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            <span class="keywordflow">IF</span> (abs(coslat(j,i)) &lt; 1e-10) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;              <span class="keywordflow">IF</span> (sinlat(j,i) &gt;= 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                tanlat(j,i) = 1.0e20</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                tanlat(j,i) = -1.0e20</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;              tanlat(j,i)=sinlat(j,i)/coslat(j,i)</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        declin = fxb * sin(pi_over_180*(266.0+i_day_number))</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        cs_hour_ang = -tanlat * tan(declin)</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="keywordflow">WHERE</span> (cs_hour_ang &lt; -1.0) cs_hour_ang = -1.0</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <span class="keywordflow">WHERE</span> (cs_hour_ang &gt;  1.0) cs_hour_ang =  1.0</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        daylen = fxc * acos(cs_hour_ang)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">! Eliminate spurious negative values from sinlat</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        <span class="keywordflow">IF</span> (maxval(sinlat) &gt; 0.0 .AND. minval(sinlat) &lt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;          <span class="keywordflow">WHERE</span> (sinlat &lt; 1e-10) sinlat = 0.0</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment">!       Call routine to calculate dry deposition rates.</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        zdryrt  = 0.0</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        zdryrt2 = 0.0</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        <span class="keywordflow">IF</span> (ndepd /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;          <span class="keywordflow">IF</span> (l_ukca_intdd) <span class="keywordflow">THEN</span>           <span class="comment">! Call interactive dry dep</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">! DEPENDS ON: ukca_ddepctl</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            <span class="keyword">CALL </span><a class="code" href="ukca__ddepctl_8f90.xhtml#aae3f71733c90e86a6f1e1bf90d93a504" title="!&gt; (c) [University of Cambridge] [2008]. All rights reserved.!&gt; This routine has been licensed to the...">ukca_ddepctl</a>(row_length, rows, bl_levels,             &amp;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;              land_points, land_index, tile_pts, tile_index,           &amp;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;              secs_per_step, sinlat, tile_frac, t_surf,                &amp;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;              p_layer_boundaries(:,:,0), dzl, zbl, surf_hf, u_s,       &amp;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;              rh, stcon, soilmc_lp, fland, seaice_frac, laift_lp,      &amp;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;              canhtft_lp, z0tile_lp, t0tile_lp, canwctile_lp,          &amp;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;              nlev_in_bl, zdryrt)</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;          <span class="keywordflow">ELSE</span>                             <span class="comment">! Call prescribed dry dep</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment">! DEPENDS ON: ukca_ddeprt</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            <span class="keyword">CALL </span>ukca_ddeprt(daylen, tloc, n_pnts, dzl, bl_levels,     &amp;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                                     z0m, u_s, t_surf,                 &amp;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                                     sinlat, i_month,                  &amp;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                                     1, n_pnts,                        &amp;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                                     zdryrt)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment">!       Call routine to calculate wet deposition rates.</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        zwetrt  = 0.0</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        zwetrt2 = 0.0</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <span class="keywordflow">IF</span> (ndepw /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment">! DEPENDS ON: ukca_wdeprt</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;          <span class="keyword">CALL </span>ukca_wdeprt(drain, crain, n_pnts, model_levels, temp,    &amp;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                           sinlat, secs_per_step, 1,n_pnts, zwetrt)</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">! Calculate dissolved fraction</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;      <span class="keywordflow">IF</span> (l_ukca_aerchem) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment">! DEPENDS ON: ukca_fracdiss</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        <span class="keyword">CALL </span>ukca_fracdiss(row_length, rows, model_levels, wet_levels,  &amp;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                         temp, pres, rh, qcl, zfrdiss, kp_nh)</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">!       Call routine to read in 2D photolysis rates once per day and</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">!       interpolate to model latitude and levels.</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        <span class="keywordflow">IF</span> ( (i_ukca_photol == i_ukca_phot2d) .AND.                     &amp;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;             ((i_hour == 0 .AND. r_minute == 0.) .OR. firstcall) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceukca__phot2d.xhtml#af09d98aceaad8a6935ea26c0cb91426e">ukca_photin</a>(i_day_number, row_length, rows,              &amp;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                           model_levels, n_pnts,                        &amp;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                           first_row, global_row_length, global_rows,   &amp;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                           reshape(sinlat,(/theta_field_size/)),        &amp;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                           pres, jppj)</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ((i_ukca_photol == i_ukca_fastj) .OR.                   &amp;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                 (i_ukca_photol == i_ukca_fastjx) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceukca__phot2d.xhtml#a8675f88c22c4e76c6dac22e7b59ac997">ukca_inpr2d</a>(<a class="code" href="namespaceukca__phot2d.xhtml#a21efd37a0f05a9bae1eb9f94de658059" title="2D model level pressures ">pr2d</a>,pr2dj)  <span class="comment">! for stratosphere only</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">!       Calculate ozone column for stratospheric photolysis</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        <span class="keywordflow">IF</span> (l_ukca_strat .OR. l_ukca_stratcfc .OR. l_ukca_strattrop)    &amp;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;          <span class="keywordflow">THEN</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceukca__cspecies.xhtml#a807b167daff71fffaef46a020d3893fd">n_o3</a> &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceukca__strat__update.xhtml#aaae20a5201451430c4485b192d6ca408">ukca_calc_ozonecol</a>(model_levels, rows, row_length,     &amp;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                           z_top_of_model, p_layer_boundaries, pres,    &amp;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                           tracer(:,:,:,<a class="code" href="namespaceukca__cspecies.xhtml#a807b167daff71fffaef46a020d3893fd">n_o3</a>)/c_o3,                     &amp;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                           ozonecol)</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="comment">! Calculate total chlorine and total bromine before chemistry</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceukca__cspecies.xhtml#a932496c860a86e77a0473b9c6a85a6c0">nn_cl</a> &gt; 0)  <span class="keywordflow">THEN</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceukca__strat__update.xhtml#a98ce63a13bca0ef779db5205d500890e">ukca_conserve</a>(row_length, rows, model_levels, ntracers,&amp;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                 tracer, pres, drain, crain, um_ozone3d, .true.)</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="keywordflow">        ENDIF</span>    <span class="comment">! L_ukca_strat etc</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment">! if heterogeneous chemistry is selected, allocate solid HNO3 array</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;      <span class="keywordflow">IF</span> (l_ukca_het_psc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        <span class="keywordflow">IF</span> (.NOT. <span class="keyword">ALLOCATED</span>(shno3_3d)) &amp;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;             <span class="keyword">ALLOCATE</span>(shno3_3d(row_length, rows, model_levels))</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        shno3_3d = 0.</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="comment">!       Initialize budget variables</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;      strat_ch4loss          = 0.0</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment">! Wet deposition rates for asad</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;      <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="keywordflow">DO</span> l=1,jpdw</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;          zwetrt3(:,k,l) = reshape(zwetrt(:,:,k,l),(/theta_field_size/))</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="comment">! Need this line here for ASAD interactive DD.</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;      nlev_in_bl2(:) = reshape(nlev_in_bl(:,:),(/theta_field_size/))</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment">! Model levels loop</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;      <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="comment">! Copy water vapour and ice field into 1-D arrays</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        <span class="keywordflow">IF</span> (l_ukca_het_psc) <span class="keywordflow">THEN</span>          <span class="keywordflow">IF</span> (k &lt;= wet_levels) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            sph2o(:) = reshape(qcf(:,:,k),(/theta_field_size/))/c_h2o          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            sph2o(:) = 0.0</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        zdryrt2(:,:) = 0.0e0</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        <span class="keywordflow">IF</span> (l_ukca_intdd) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;           <span class="comment">! Interactive scheme extracts from levels in boundary layer</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;           blmask(:) = (k &lt;= nlev_in_bl2(:))</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;           <span class="keywordflow">DO</span> l=1,jpdd</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;              <span class="keywordflow">WHERE</span> (blmask(:))</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                 zdryrt2(:,l) = &amp;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                      reshape(zdryrt(:,:,l),(/theta_field_size/))</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="keywordflow">              ENDWHERE</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="keywordflow">           END DO</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        <span class="keywordflow">ELSE</span>    <span class="comment">! non-interactive</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;           <span class="keywordflow">IF</span> (k == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;              <span class="keywordflow">DO</span> l=1,jpdd</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                 zdryrt2(:,l) = &amp;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                      reshape(zdryrt(:,:,l),(/theta_field_size/))</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="keywordflow">              END DO</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="comment">!       Put pressure, temperature and tracer mmr into 1-D arrays</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="comment">!       for use in ASAD chemical solver</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        zp(:) = reshape(pres(:,:,k),(/theta_field_size/))</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        zt(:) = reshape(temp(:,:,k),(/theta_field_size/))</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;        zq(:) = reshape(q(:,:,k),(/theta_field_size/))</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        <span class="keywordflow">IF</span> (l_ukca_aerchem) <span class="keywordflow">THEN</span>          <span class="keywordflow">IF</span> (k &lt;= wet_levels) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;            zclw(:) = reshape(qcl(:,:,k),(/theta_field_size/))</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;            zfcloud(:) = reshape(cloud_frac(:,:,k),(/theta_field_size/))</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;            zclw(:) = 0.0</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;            zfcloud(:) = 0.0</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="keywordflow">          END IF</span><span class="keywordflow">        END IF</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment">! Convert mmr into vmr for tracers</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        <span class="keywordflow">DO</span> js=1,jpctr</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;          zftr(:,js) = reshape(tracer(:,:,k,js),                        &amp;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                              (/theta_field_size/))/<a class="code" href="namespaceukca__cspecies.xhtml#a444e4a957abb0d729c16fcb65439d836">c_species</a>(js)</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="comment">! Update non-advected species</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        <span class="keywordflow">DO</span> js=1,nnaf          zfnatr(:,js) = reshape(user_diags(:,:,k,js),(/n_pnts/))/      &amp;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                         <a class="code" href="namespaceukca__cspecies.xhtml#a8870cb6852e1ecf80cc8212396299d65">c_na_species</a>(js)<span class="keywordflow">        ENDDO</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="comment">! Calculate photolysis.! Calculate TOMCAT-heritage photolysis if PHOT2D is selected.</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        <span class="keywordflow">IF</span> (i_ukca_photol == i_ukca_phot2d) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="comment">!         Interpolate 2D photolysis rates as function of longitude</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="comment">!         per model step.</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;          pjinda = <a class="code" href="namespaceukca__phot2d.xhtml#a8164b18004814f78e1598f21b0a777b9" title="Photolysis rates from 2-D model which have been interpolated onto 3-D. ">pjin</a>(1:rows,k,:,:)</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceukca__phot2d.xhtml#a9f7ee5cae1d45e59c2fba833b357b828">ukca_curve</a>(pjinda, reshape(tloc,(/n_pnts/)),            &amp;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                          reshape(daylen,(/n_pnts/)), n_pnts,          &amp;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                          model_levels, rows, row_length, zprt1d)</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;          zprt = reshape(zprt1d,(/row_length, rows, jppj/))</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;          zprt = 0.</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="comment">! Calculate SLIMCAT-heritage photolysis if PHOT2D is selected or for</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="comment">! middle-atmosphere chemistry in the mesosphere. STRAT_PHOTOL merges</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment">! the SLIMCAT rates with TOMCAT rates as calculated above.</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="comment">! If FASTJX is selected, only photolysis for wavelengths less than 175 nm</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="comment">! is calculated, and the result is added to the FAST-JX rates. This! only matters at heights &gt; 60 km as below the short wavelengths can be ignored.</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        <span class="keywordflow">IF</span> (l_ukca_strat .OR. l_ukca_strattrop .OR. l_ukca_stratcfc)    &amp;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;          <span class="keywordflow">THEN</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;          <span class="keywordflow">IF</span> ((i_ukca_photol == i_ukca_fastj) .OR.                      &amp;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;              (i_ukca_photol == i_ukca_fastjx)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;            <span class="keywordflow">IF</span>(minval(pres(:,:,k)) &lt; fastjx_prescutoff .AND.            &amp;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;               fastjx_mode /= 3) <span class="keywordflow">THEN</span>              <span class="keyword">CALL </span><a class="code" href="namespaceukca__strat__update.xhtml#ada597c0931034f77ac21b5681b182788" title="UKCA stratospheric photolysis main routine. Test version ">ukca_strat_photol</a>(pres(:,:,k), temp(:,:,k),          &amp;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                   ozonecol(:,:,k), cos_zenith_angle,                   &amp;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                   zprt)</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="comment">! Add up j-rates for lambda &lt; 177 nm with those for lambda &gt;= 177 nm,! calculated within FAST-JX.</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;              <span class="keywordflow">IF</span>(fastjx_mode /= 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                zprt = zprt + fastj_dj(:,:,k,:)</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;              fastj_dj(:,:,k,:) = zprt</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;<span class="comment">! Below cutoff simply use FAST-JX rates. Ignore short wavelengths.</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;              zprt = fastj_dj(:,:,k,:)</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;          else<span class="comment">! No FAST-JX here.</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceukca__strat__update.xhtml#ada597c0931034f77ac21b5681b182788" title="UKCA stratospheric photolysis main routine. Test version ">ukca_strat_photol</a>(pres(:,:,k), temp(:,:,k),            &amp;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                 ozonecol(:,:,k), cos_zenith_angle,                     &amp;</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                 zprt)</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;            fastj_dj(:,:,k,:) = zprt<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="comment">! tropospheric chemistry selected here. Use FAST-JX rates or previously</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="comment">! calculated 2-D rates.</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;          <span class="keywordflow">IF</span> ((i_ukca_photol == i_ukca_fastj) .OR.                      &amp;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;              (i_ukca_photol == i_ukca_fastjx)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            zprt = fastj_dj(:,:,k,:)</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;     <span class="comment">! Map photolysis rates onto 1-D array.</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        <span class="keywordflow">DO</span> l=1,jppj</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;          zprt1d(:,l) = reshape(zprt(:,:,l),(/theta_field_size/))</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="comment">!       Call ASAD routines to do chemistry integration</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="comment">!       In lowest levels choose half the dynamical timestep for</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="comment">!       chemistry. If dynamical timestep &gt; 20 min, use half and</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;<span class="comment">!       quarter of dynamical timestep for chemistry.</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        <span class="keywordflow">IF</span> (.NOT.(l_ukca_trop .OR. l_ukca_aerchem .OR.                  &amp;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                  l_ukca_raq)) <span class="keywordflow">THEN</span>                      <span class="comment">! Not B-E</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="comment">! fill stratospheric flag indicator and SO4 surface area</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="comment">! retrieve tropospheric heterogenous rates from previous time step</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;          <span class="keywordflow">IF</span>(l_ukca_trophet) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;            rc_het(:,1) = reshape(user_diags(:,:,k,10),                 &amp;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;                                  (/theta_field_size/))       <span class="comment">! N2O5</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;            rc_het(:,2) = reshape(user_diags(:,:,k,11),                 &amp;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                                  (/theta_field_size/))       <span class="comment">! HO2+HO2</span></div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;          stratflag(:) = (.NOT. reshape(<a class="code" href="namespaceukca__tropopause.xhtml#a84dd228535b365720c619f0a6be9542f" title="Logical set to true for gridpoints within the troposphere. ">l_troposphere</a>(:,:,k),           &amp;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                                    (/theta_field_size/)) )</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;          za(:) = reshape(so4_sa(:,:,k),(/theta_field_size/))</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;          <span class="keywordflow">IF</span> (method == 3) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="comment">! timestep for Newton-Raphson solver: 1 hour. Note that in this case</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;<span class="comment">! UKCA_CHEMISTRY_CTL is only called every 2nd/3rd dynamical timestep</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;<span class="comment">! (for a 30 / 20 minutes stepsize), and dtime should equal 1 h.</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;<span class="comment">! In case of non-convergence Newton-Raphson contains automatic stepsize</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="comment">! refinement.</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;<span class="comment">! secs_per_step is the *CHEMISTRY* timestep and not the model timestep,! and equals INTERVAL*TIMESTEP, where INTERVAL=3600/INT(TIMESTEP) and! determines when chemistry is called            dtime = secs_per_step !*2  ! changed 2010/02/08 20:40            ncsteps = 1</span></div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            cdt = 3600.0 <span class="comment">!dtime</span></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;          <span class="keywordflow">ELSEIF</span> (method == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;<span class="comment">! use about 15 or 10 minutes, depending on dynamical timestep</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;            <span class="keywordflow">IF</span> (secs_per_step &lt; limit) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;              cdt = dtime</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;              ncsteps = 1</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;              cdt = 0.5*dtime</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;              ncsteps = 2</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;          <span class="keywordflow">IF</span> (uph2so4inaer == 1) then<span class="comment">! H2SO4 will be updated in MODE, so store old value here            ystore(:) = y(:,nn_h2so4)          END IF</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="comment">! DEPENDS ON: asad_cdrive</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;          <span class="keyword">CALL </span><a class="code" href="asad__cdrive_8f90.xhtml#a7173c03e0c72a19e5fb83121b0425381" title="(c) [University of Cambridge] [2008]. All rights reserved. ">asad_cdrive</a>(cdot, zftr, zp, zt, zq,                      &amp;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                           reshape(cloud_frac(:,:,k),(/n_pnts/)),       &amp;</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;                           reshape(qcl(:,:,k),(/n_pnts/)),              &amp;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;                           k,zdryrt2, zwetrt3, rc_het,                  &amp;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;                           zprt1d, n_pnts, stratflag)</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;          <span class="keywordflow">IF</span> (l_ukca_het_psc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;<span class="comment">! Save MMR of NAT PSC particles into 3-D array for PSC sedimentation.</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="comment">! Note that sphno3 is NAT in number density of HNO3.</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;            <span class="keywordflow">IF</span> (any(sphno3(1:theta_field_size) &gt; 0.)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;              shno3_3d(:,:,k) = reshape(sphno3(:)/tnd(:),               &amp;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                                   (/row_length,rows/))*c_hono2</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;              shno3_3d(:,:,k) = 0.</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;          <span class="comment">! copy over O(1D) into chem_diags</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;          <span class="keywordflow">IF</span> (lvmr) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;             user_diags(1:row_length,1:rows,k,1) = &amp;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                  reshape(y(:,<a class="code" href="namespaceukca__cspecies.xhtml#af4538be42fba20392987af96d3c872a3">nn_o1d</a>)/tnd(:),(/row_length,rows/))*c_o1d</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;             user_diags(1:row_length,1:rows,k,1) = &amp;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;                  reshape(y(:,<a class="code" href="namespaceukca__cspecies.xhtml#af4538be42fba20392987af96d3c872a3">nn_o1d</a>),(/row_length,rows/))*c_o1d</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;          <span class="keywordflow">IF</span> (l_ukca_chem .AND. l_ukca_achem) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;<span class="comment">! Calculate chemical fluxes for MODE</span></div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;            <span class="keywordflow">IF</span> (ihso3_h2o2 &gt; 0) delso2_wet_h2o2(:,:,k) =                &amp;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;              delso2_wet_h2o2(:,:,k) + reshape(rk(:,ihso3_h2o2)*        &amp;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;              y(:,<a class="code" href="namespaceukca__cspecies.xhtml#ac3a77a85ca9ecf3b1271a69579ae3798">nn_so2</a>)*y(:,<a class="code" href="namespaceukca__cspecies.xhtml#a34865b792bcdca88c65ea263180e89ec">nn_h2o2</a>),(/row_length,rows/))*cdt</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;            <span class="keywordflow">IF</span> (ihso3_o3 &gt; 0) delso2_wet_o3(:,:,k) =                    &amp;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;              delso2_wet_o3(:,:,k) + reshape(rk(:,ihso3_o3)*            &amp;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;              y(:,<a class="code" href="namespaceukca__cspecies.xhtml#ac3a77a85ca9ecf3b1271a69579ae3798">nn_so2</a>)*y(:,<a class="code" href="namespaceukca__cspecies.xhtml#adc3bc7c6144d23e1d11163b7a4b64332">nn_o3</a>),(/row_length,rows/))*cdt</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;            <span class="keywordflow">IF</span> (iso3_o3 &gt; 0) delso2_wet_o3(:,:,k) =                     &amp;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;              delso2_wet_o3(:,:,k) + reshape(rk(:,iso3_o3)*             &amp;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;              y(:,<a class="code" href="namespaceukca__cspecies.xhtml#ac3a77a85ca9ecf3b1271a69579ae3798">nn_so2</a>)*y(:,<a class="code" href="namespaceukca__cspecies.xhtml#adc3bc7c6144d23e1d11163b7a4b64332">nn_o3</a>),(/row_length,rows/))*cdt</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;            <span class="keywordflow">IF</span> (iso2_oh &gt; 0 .AND. ih2so4_hv &gt; 0) <span class="keywordflow">THEN</span>  <span class="comment">! net H2SO4 production</span></div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;              delh2so4_chem(:,:,k) = delh2so4_chem(:,:,k) +             &amp;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;               (reshape(rk(:,iso2_oh)*y(:,<a class="code" href="namespaceukca__cspecies.xhtml#ac3a77a85ca9ecf3b1271a69579ae3798">nn_so2</a>)*y(:,<a class="code" href="namespaceukca__cspecies.xhtml#ae96f5020d9c153aea0641ea3652c318d">nn_oh</a>),           &amp;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;               (/row_length,rows/)) - reshape(rk(:,ih2so4_hv)*          &amp;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;                y(:,<a class="code" href="namespaceukca__cspecies.xhtml#a6c05b4b94266221bfa6eaf41b44c236e">nn_h2so4</a>),(/row_length,rows/)))*cdt</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;            <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (iso2_oh &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;              delh2so4_chem(:,:,k) = delh2so4_chem(:,:,k) +             &amp;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;               reshape(rk(:,iso2_oh)*y(:,<a class="code" href="namespaceukca__cspecies.xhtml#ac3a77a85ca9ecf3b1271a69579ae3798">nn_so2</a>)*y(:,<a class="code" href="namespaceukca__cspecies.xhtml#ae96f5020d9c153aea0641ea3652c318d">nn_oh</a>),            &amp;</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;               (/row_length,rows/))*cdt</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="comment">! Restore H2SO4 tracer as it will be updated in MODE using delh2so4_chem</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;            <span class="keywordflow">IF</span> (uph2so4inaer == 1) y(:,<a class="code" href="namespaceukca__cspecies.xhtml#a6c05b4b94266221bfa6eaf41b44c236e">nn_h2so4</a>) = ystore(:)<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;<span class="comment">! 3D flux diagnostics</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceasad__chem__flux__diags.xhtml#a49a1ad79333fb93988a78550b69907ab">l_asad_use_chem_diags</a> .AND.                               &amp;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;               ((<a class="code" href="namespaceasad__chem__flux__diags.xhtml#a34dd88336cf2d935f5c9958931e3aa90">l_asad_use_flux_rxns</a> .OR. <a class="code" href="namespaceasad__chem__flux__diags.xhtml#ac183e1818ee3767e0d3bb8748731c65b">l_asad_use_rxn_rates</a>) .OR.   &amp;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;               (<a class="code" href="namespaceasad__chem__flux__diags.xhtml#a0419abe84d1cf893c6053239d089241e">l_asad_use_wetdep</a> .OR. <a class="code" href="namespaceasad__chem__flux__diags.xhtml#a990bd765a0a3b81e5b38e8454569ecec">l_asad_use_drydep</a>)))             &amp;</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;               <span class="keyword">CALL </span><a class="code" href="namespaceasad__chem__flux__diags.xhtml#a43d3592ae8854764ee3c50bfc43174f8">asad_chemical_diagnostics</a>(row_length,rows,          &amp;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;               model_levels,k,secs_per_step,volume,ierr)</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="comment">! PSC diagnostics</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceasad__chem__flux__diags.xhtml#a49a1ad79333fb93988a78550b69907ab">l_asad_use_chem_diags</a> .AND. <a class="code" href="namespaceasad__chem__flux__diags.xhtml#abee5d1e1c177f9a9bb2001769547d205">l_asad_use_psc_diagnostic</a>)    &amp;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;               <span class="keyword">CALL </span><a class="code" href="namespaceasad__chem__flux__diags.xhtml#a2e1e5b25689040a28ae6e7c7790e1dab">asad_psc_diagnostic</a>(row_length,rows,k,ierr)</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="comment">! Bring results back from vmr to mmr. Treat water</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;<span class="comment">! vapour separately if necessary.</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;          <span class="keywordflow">IF</span> (l_ukca_h2o_feedback) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;            <span class="keywordflow">DO</span> l=1,jpctr</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;              tracer(:,:,k,l) = reshape(zftr(:,l),(/row_length,rows/))  &amp;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                                        *<a class="code" href="namespaceukca__cspecies.xhtml#a444e4a957abb0d729c16fcb65439d836">c_species</a>(l)</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;            q(:,:,k) = reshape(zftr(:,<a class="code" href="namespaceukca__cspecies.xhtml#a8884f05abbfaeedef271563df972d530">n_h2o</a>),(/row_length,rows/))*c_h2o</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespaceukca__cspecies.xhtml#a8884f05abbfaeedef271563df972d530">n_h2o</a> &lt; jpctr) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;              <span class="keywordflow">DO</span> l=<a class="code" href="namespaceukca__cspecies.xhtml#a8884f05abbfaeedef271563df972d530">n_h2o</a>+1,jpctr</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;                tracer(:,:,k,l) = reshape(zftr(:,l),                    &amp;</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;                                (/row_length,rows/))*<a class="code" href="namespaceukca__cspecies.xhtml#a444e4a957abb0d729c16fcb65439d836">c_species</a>(l)</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;<span class="keywordflow">              END DO</span></div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespaceukca__cspecies.xhtml#a8884f05abbfaeedef271563df972d530">n_h2o</a> &gt; 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;              <span class="keywordflow">DO</span> l=1,<a class="code" href="namespaceukca__cspecies.xhtml#a8884f05abbfaeedef271563df972d530">n_h2o</a>-1</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                tracer(:,:,k,l) = reshape(zftr(:,l),                    &amp;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                                (/row_length,rows/))*<a class="code" href="namespaceukca__cspecies.xhtml#a444e4a957abb0d729c16fcb65439d836">c_species</a>(l)</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;<span class="keywordflow">              END DO</span></div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="comment">! Set SS species concentrations for output (stratospheric configurations)</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;          <span class="keywordflow">IF</span> (o1d_in_ss) user_diags(:,:,k,1) =                          &amp;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;            reshape(y(:,<a class="code" href="namespaceukca__cspecies.xhtml#af4538be42fba20392987af96d3c872a3">nn_o1d</a>)/tnd(:),(/row_length,rows/))*            &amp;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;            <a class="code" href="namespaceukca__cspecies.xhtml#a444e4a957abb0d729c16fcb65439d836">c_species</a>(<a class="code" href="namespaceukca__cspecies.xhtml#af4538be42fba20392987af96d3c872a3">nn_o1d</a>)                              <span class="comment">! O1D mmr</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;          <span class="keywordflow">IF</span> (o3p_in_ss) user_diags(:,:,k,2) =                          &amp;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;            reshape(y(:,<a class="code" href="namespaceukca__cspecies.xhtml#afa0ca39cb8b4104e29b3c6eb4e4b025f">nn_o3p</a>)/tnd(:),(/row_length,rows/))*            &amp;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;            <a class="code" href="namespaceukca__cspecies.xhtml#a444e4a957abb0d729c16fcb65439d836">c_species</a>(<a class="code" href="namespaceukca__cspecies.xhtml#afa0ca39cb8b4104e29b3c6eb4e4b025f">nn_o3p</a>)                              <span class="comment">! O3P mmr</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;        <span class="keywordflow">ELSE</span>  <span class="comment">! Backward Euler with non-families</span></div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;<span class="comment">!         Calculate total number  density, o2, h2o, and tracer</span></div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;<span class="comment">!         concentrations for Backward Euler solver</span></div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;          const = boltzmann*1.0e6</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;          nlev_in_bl2(:) = reshape(nlev_in_bl(:,:),(/theta_field_size/))</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;          be_tnd(:) = zp(:) / (const * zt(:) )</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;          be_o2(:)  = 0.2095 * be_tnd(:)</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;          be_h2o(:) = zq(:)*be_tnd(:)</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;          be_vol(:) = reshape(volume(:,:,k),(/theta_field_size/))*1.0e6 <span class="comment">!  m3-&gt;cm3</span></div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;          <span class="keywordflow">DO</span> l=1,jpdw</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;            zwetrt2(:,l) = reshape(zwetrt(:,:,k,l),(/theta_field_size/))</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;          <span class="keywordflow">DO</span> l=1,jpdd</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;            zdryrt2(:,l) = reshape(zdryrt(:,:,l),(/theta_field_size/))</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;          <span class="keywordflow">DO</span> l=1,jpctr</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;            zftr(:,l) = zftr(:,l) * be_tnd(:)</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;<span class="comment">! Update non-advected species (only for B-E solvers)</span></div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;          <span class="keywordflow">IF</span> (.NOT. <span class="keyword">ALLOCATED</span>(zfnatr)) <span class="keyword">ALLOCATE</span>(zfnatr(n_pnts,nnaf))          <span class="keywordflow">DO</span> js=1,nnaf            zfnatr(:,js) = reshape(user_diags(:,:,k,js),(/n_pnts/))/    &amp;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;                           <a class="code" href="namespaceukca__cspecies.xhtml#a8870cb6852e1ecf80cc8212396299d65">c_na_species</a>(js)<span class="keywordflow">          ENDDO</span>          <span class="keywordflow">DO</span> l=1,nnaf</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;            zfnatr(:,l) = zfnatr(:,l) * be_tnd(:)</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;          <span class="keywordflow">IF</span> (l_ukca_aerchem) <span class="keywordflow">THEN</span>            <span class="keywordflow">DO</span> l=1,jpdw</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;              <span class="keywordflow">DO</span> j=1,jpeq+1</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                zfrdiss2(:,l,j) = reshape(zfrdiss(:,:,k,l,j),           &amp;</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;                                  (/theta_field_size/))<span class="keywordflow">              END DO</span></div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;            kp_nh2(:) = reshape(kp_nh(:,:,k),(/theta_field_size/))<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<span class="comment">!         Assign wet and dry deposition rates to species</span></div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;<span class="comment">! DEPENDS ON: ukca_be_wetdep</span></div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;          <span class="keyword">CALL </span><a class="code" href="ukca__be__wetdep_8f90.xhtml#affb186bae71ba6f07b4df92951d73af0" title="array owetrt. ">ukca_be_wetdep</a>(n_pnts, zwetrt2, be_wetrt)</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;<span class="comment">! DEPENDS ON: ukca_be_drydep</span></div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;          <span class="keyword">CALL </span><a class="code" href="ukca__be__drydep_8f90.xhtml#af6ce864756897c3c7b7908e049608c29" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_be_drydep</a>(k, n_pnts, nlev_in_bl2, zdryrt2, be_dryrt)<span class="comment">! Assign fractional dissociation</span></div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;          <span class="keywordflow">IF</span>(l_ukca_aerchem) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;            <span class="keywordflow">DO</span> i=1,jpeq+1</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;<span class="comment">! DEPENDS ON: ukca_be_wetdep</span></div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;              <span class="keyword">CALL </span><a class="code" href="ukca__be__wetdep_8f90.xhtml#affb186bae71ba6f07b4df92951d73af0" title="array owetrt. ">ukca_be_wetdep</a>(n_pnts, zfrdiss2(:,:,i),              &amp;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;                                  be_frdiss(:,:,i))</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;<span class="comment">!         Calculate reaction rate coefficients</span></div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;          <span class="keywordflow">IF</span> (.NOT. <span class="keyword">ALLOCATED</span>(be_rc)) &amp;</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;               <span class="keyword">ALLOCATE</span>(be_rc(theta_field_size,<a class="code" href="namespaceukca__d1__defs.xhtml#ab8a8536ba854713ad1eebe8513de101b">nr_therm</a>))</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;                   <span class="keywordflow">IF</span> (l_ukca_raq) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;<span class="comment">! DEPENDS ON: ukca_chemco_raq</span></div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;            <span class="keyword">CALL </span><a class="code" href="ukca__chemco__raq_8f90.xhtml#aec2ab5bc09b2e9a4f205395722cec6a6" title="Calculate the reaction rate co-efficients for use in the. ">ukca_chemco_raq</a>(<a class="code" href="namespaceukca__d1__defs.xhtml#ab8a8536ba854713ad1eebe8513de101b">nr_therm</a>, n_pnts, zt(1:n_pnts),        &amp;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;                            be_tnd(1:n_pnts), be_h2o(1:n_pnts),         &amp;</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;                            be_o2(1:n_pnts), be_rc(1:n_pnts,:))</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160; <span class="comment">! DEPENDS ON: ukca_chemco</span></div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;          <span class="keyword">CALL </span><a class="code" href="ukca__chemco_8f90.xhtml#a0568427eb83e153d8bc64fcba88097ad" title="To calculate the reaction rate co-efficients for use in the. ">ukca_chemco</a>(<a class="code" href="namespaceukca__d1__defs.xhtml#ab8a8536ba854713ad1eebe8513de101b">nr_therm</a>, n_pnts, zt(1:n_pnts),              &amp;</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;                           be_tnd(1:n_pnts), be_h2o(1:n_pnts),          &amp;</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;                           be_o2(1:n_pnts), zclw(1:n_pnts),             &amp;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;                           zfcloud(1:n_pnts), be_frdiss(1:n_pnts,:,:),  &amp;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;                           k_dms(1:n_pnts,:), be_rc(1:n_pnts,:))</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;<span class="comment">!         Assign tracer concentrations to species concentrations</span></div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;          be_y(1:n_pnts,1:jpspec) = 0.0</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;          <span class="keywordflow">DO</span> i = 1,jpspec</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;            <span class="keywordflow">DO</span> j = 1,jpctr</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;              <span class="keywordflow">IF</span> (speci(i) == advt(j)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;                be_y(1:n_pnts,i) = zftr(1:n_pnts,j)</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;                <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;<span class="keywordflow">            ENDDO</span></div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;<span class="keywordflow">          ENDDO</span></div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;<span class="comment">! Assign non-advected concentrations to species concentrations</span></div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;          <span class="keywordflow">DO</span> i = 1,jpspec            <span class="keywordflow">DO</span> j = 1,nnaf              <span class="keywordflow">IF</span> (speci(i) == nadvt(j)) <span class="keywordflow">THEN</span>                be_y(1:n_pnts,i) = zfnatr(1:n_pnts,j)                 <span class="keywordflow">EXIT</span><span class="keywordflow">              ENDIF</span><span class="keywordflow">            ENDDO</span><span class="keywordflow">          ENDDO</span></div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;          <span class="keywordflow">IF</span> (l_ukca_aerchem) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;            so2_wetox_h2o2(:) = 0.0</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;            so2_dryox_oh(:)   = 0.0</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;            so2_wetox_o3(:)   = 0.0</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;            delso2_wet_h2o2(:,:,:) = 0.0</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;            delso2_wet_o3(:,:,:)   = 0.0</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;            delh2so4_chem(:,:,:)   = 0.0</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;            delso2_drydep(:,:,:)   = 0.0</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;            delso2_wetdep(:,:,:)   = 0.0</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;<span class="comment">!         Call Backward Euler solver</span></div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;<span class="comment">!         N.B. Emissions already added, via call to TR_MIX from</span></div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;<span class="comment">!         UKCA_EMISSION_CTL</span></div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;          <span class="keywordflow">IF</span> (l_ukca_aerchem) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;<span class="comment">! DEPENDS ON: ukca_deriv_aero</span></div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;            <span class="keyword">CALL </span><a class="code" href="ukca__deriv__aero_8f90.xhtml#a9d2372c62beb210e7f2e1a98d306d9c6" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_deriv_aero</a>(<a class="code" href="namespaceukca__d1__defs.xhtml#ab8a8536ba854713ad1eebe8513de101b">nr_therm</a>, <a class="code" href="namespaceukca__d1__defs.xhtml#a973c73eaf1127a0f5fc0a0a3f7c89c89">nr_phot</a>, n_be_calls,         &amp;</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;                          be_rc(1:n_pnts,:),                            &amp;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;                          be_wetrt(1:n_pnts,:), be_dryrt(1:n_pnts,:),   &amp;</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;                          zprt1d(1:n_pnts,:), k_dms(1:n_pnts,:),        &amp;</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;                          be_h2o(1:n_pnts), be_tnd(1:n_pnts),           &amp;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;                          be_o2(1:n_pnts),                              &amp;</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;                          dts, be_y(1:n_pnts,:),                        &amp;</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                          so2_wetox_h2o2(1:n_pnts),                     &amp;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                          so2_wetox_o3(1:n_pnts),                       &amp;</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                          so2_dryox_oh(1:n_pnts) )</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;          <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (l_ukca_raq) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;<span class="comment">! DEPENDS ON: ukca_deriv_raq</span></div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;            <span class="keyword">CALL </span><a class="code" href="ukca__deriv__raq_8f90.xhtml#a382bf326c2f79e93aba176c673781fbd" title="Perform a chemical integration using the Backward Euler. ">ukca_deriv_raq</a>(<a class="code" href="namespaceukca__d1__defs.xhtml#ab8a8536ba854713ad1eebe8513de101b">nr_therm</a>, n_be_calls,                   &amp;</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;                       n_pnts,                                          &amp;</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;                       be_rc(1:n_pnts,:), be_wetrt(1:n_pnts,:),         &amp;</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;                       be_dryrt(1:n_pnts,:), zprt1d(1:n_pnts,:),        &amp;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;                       be_h2o(1:n_pnts), be_tnd(1:n_pnts),              &amp;</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;                       be_o2(1:n_pnts),                                 &amp;</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;                       dts, be_y(1:n_pnts,:) )</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;<span class="comment">! DEPENDS ON: ukca_deriv</span></div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;            <span class="keyword">CALL </span><a class="code" href="ukca__deriv_8f90.xhtml#a16d234beeb33da426397ebfda4283a57" title="To perform a chemical integration using the Backward Euler. ">ukca_deriv</a>(nr, n_be_calls, n_pnts,                    &amp;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;                       be_rc(1:n_pnts,:), be_wetrt(1:n_pnts,:),        &amp;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                       be_dryrt(1:n_pnts,:), zprt1d(1:n_pnts,:),       &amp;</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;                       be_h2o(1:n_pnts), be_tnd(1:n_pnts),             &amp;</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;                       be_o2(1:n_pnts),                                &amp;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;                       dts, be_y(1:n_pnts,:) )</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;          <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(be_rc)) <span class="keyword">DEALLOCATE</span>(be_rc)</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;          <span class="keywordflow">IF</span> (k == model_levels .OR. k == model_levels-1 .OR.          &amp;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;              k == model_levels-2 .AND. (.NOT. l_ukca_use_2dtop)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;<span class="comment">! DEPENDS ON: ukca_ch4_stratloss</span></div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;            <span class="keyword">CALL </span><a class="code" href="ukca__ch4__stratloss_8f90.xhtml#ab5507d8b0d11012f727a5b6bdbd1ccf6" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_ch4_stratloss</a>(n_be_calls, n_pnts,                &amp;</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;                       be_vol(1:n_pnts), dts,                          &amp;</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;                       be_y(1:n_pnts,<a class="code" href="namespaceukca__cspecies.xhtml#aa29e8e63c5659858c319d521475c61a9">nn_ch4</a>), strat_ch4loss(1:n_pnts,k))</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;          <span class="keywordflow">DO</span> j = 1,jpctr</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;            <span class="keywordflow">DO</span> i = 1,jpspec</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;              <span class="keywordflow">IF</span> (advt(j) == speci(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;                zftr(1:n_pnts,j) = be_y(1:n_pnts,i)</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;                <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;<span class="keywordflow">            ENDDO</span></div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;<span class="keywordflow">          ENDDO</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;          <span class="keywordflow">DO</span> js = 1, jpctr</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;            tracer(:,:,k,js) = reshape(zftr(:,js)/be_tnd(:),           &amp;</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;                                   (/row_length,rows/))*<a class="code" href="namespaceukca__cspecies.xhtml#a444e4a957abb0d729c16fcb65439d836">c_species</a>(js)</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;<span class="comment">! Convert non-advected tracers back to mmr</span></div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;          <span class="keywordflow">DO</span> j = 1,nnaf</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;            <span class="keywordflow">DO</span> i = 1,jpspec</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;              <span class="keywordflow">IF</span> (nadvt(j) == speci(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;                zfnatr(:,j) = be_y(1:n_pnts,i)/be_tnd(1:n_pnts)</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;                <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;<span class="keywordflow">            ENDDO</span></div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;<span class="keywordflow">          ENDDO</span></div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceukca__d1__defs.xhtml#abbf2628450b9026592993d416af77422">n_chem_diags</a> &gt;= nnaf) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;            <span class="keywordflow">DO</span> js = 1, nnaf</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;              user_diags(:,:,k,js)=reshape(zfnatr(:,js),                &amp;</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;                                  (/row_length,rows/))*<a class="code" href="namespaceukca__cspecies.xhtml#a8870cb6852e1ecf80cc8212396299d65">c_na_species</a>(js)</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;            cmessage=<span class="stringliteral">&#39; Not enough space in user_diags for &#39;</span>//           &amp;</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;                     <span class="stringliteral">&#39;non-advected tracers&#39;</span></div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;            errcode = 1</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_CHEMISTRY_CTL&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceukca__d1__defs.xhtml#abbf2628450b9026592993d416af77422">n_chem_diags</a> &gt;= 22) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;            <span class="keywordflow">IF</span> (.NOT.(l_ukca_raq)) <span class="keywordflow">THEN</span>   <span class="comment">! trop CH4 burden in mol</span></div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;              user_diags(:,:,k,16) = reshape(zftr(:,<a class="code" href="namespaceukca__cspecies.xhtml#adaafde869e60bb4d18796e1910475feb">n_ch4</a>),             &amp;</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;                                  (/row_length,rows/))*volume(:,:,k)*   &amp;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;                                   1.0e6/avogadro</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;<span class="comment">! trop O3 burden in mol</span></div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;              user_diags(:,:,k,17) = reshape(zftr(:,<a class="code" href="namespaceukca__cspecies.xhtml#a807b167daff71fffaef46a020d3893fd">n_o3</a>),              &amp;</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;                                  (/row_length,rows/))*volume(:,:,k)*   &amp;</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;                                   1.0e6/avogadro</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;<span class="comment">! trop OH burden in mol</span></div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;              user_diags(:,:,k,18) = reshape(be_y(:,<a class="code" href="namespaceukca__cspecies.xhtml#ae96f5020d9c153aea0641ea3652c318d">nn_oh</a>),             &amp;</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;                                  (/row_length,rows/))*volume(:,:,k)*   &amp;</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;                                   1.0e6/avogadro</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;<span class="comment">! strat CH4 burden in mol</span></div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;              user_diags(:,:,k,19) = user_diags(:,:,k,16)</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;<span class="comment">! pv-theta surface</span></div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;              user_diags(:,:,k,20) = <a class="code" href="namespaceukca__tropopause.xhtml#a14d6e3d42df08ccf76c8d324eff2856a" title="Pressures of the theta, pv, and combined tropopause. ">p_tropopause</a>(:,:)      <span class="comment">! pv-theta surface</span></div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;<span class="comment">! strat ch4-oh rxn flux</span></div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;              user_diags(:,:,k,21) = 0.0</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;<span class="comment">! strat ch4 loss</span></div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;              user_diags(:,:,k,22) = reshape(strat_ch4loss(:,k),        &amp;</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;                                  (/row_length,rows/))</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;              <span class="keywordflow">WHERE</span> (<a class="code" href="namespaceukca__tropopause.xhtml#a84dd228535b365720c619f0a6be9542f" title="Logical set to true for gridpoints within the troposphere. ">l_troposphere</a>(:,:,:))</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;                user_diags(:,:,:,19) = 0.0   <span class="comment">! strat ch4 burden in mol</span></div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;                user_diags(:,:,:,21) = 0.0   <span class="comment">! strat ch4-oh rxn flux</span></div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;              <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;                user_diags(:,:,:,16) = 0.0   <span class="comment">! trop ch4 burden in mol</span></div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;                user_diags(:,:,:,17) = 0.0   <span class="comment">! trop o3  burden in mol</span></div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;                user_diags(:,:,:,18) = 0.0   <span class="comment">! trop oh  burden in mol</span></div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;<span class="keywordflow">              ENDWHERE</span></div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;                     <span class="keywordflow">ELSE</span>   <span class="comment">! There are 18 non-advected species in RAQ chemistry</span></div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;<span class="comment">! trop CH4 burden in mol</span></div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;              user_diags(:,:,k,19) = reshape(zftr(:,<a class="code" href="namespaceukca__cspecies.xhtml#adaafde869e60bb4d18796e1910475feb">n_ch4</a>),             &amp;</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;                                  (/row_length,rows/))*volume(:,:,k)*   &amp;</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;                                   1.0e6/avogadro</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;<span class="comment">! trop O3 burden in mol</span></div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;              user_diags(:,:,k,20) = reshape(zftr(:,<a class="code" href="namespaceukca__cspecies.xhtml#a807b167daff71fffaef46a020d3893fd">n_o3</a>),              &amp;</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;                                  (/row_length,rows/))*volume(:,:,k)*   &amp;</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;                                   1.0e6/avogadro</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;<span class="comment">! trop OH burden in mol</span></div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;              user_diags(:,:,k,21) = reshape(be_y(:,<a class="code" href="namespaceukca__cspecies.xhtml#ae96f5020d9c153aea0641ea3652c318d">nn_oh</a>),             &amp;</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;                                  (/row_length,rows/))*volume(:,:,k)*   &amp;</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;                                   1.0e6/avogadro</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;<span class="comment">! pv-theta surface</span></div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;              user_diags(:,:,k,22) = <a class="code" href="namespaceukca__tropopause.xhtml#a14d6e3d42df08ccf76c8d324eff2856a" title="Pressures of the theta, pv, and combined tropopause. ">p_tropopause</a>(:,:)   <span class="comment">! pv-theta surface</span></div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;                         <span class="keywordflow">WHERE</span> (.NOT. <a class="code" href="namespaceukca__tropopause.xhtml#a84dd228535b365720c619f0a6be9542f" title="Logical set to true for gridpoints within the troposphere. ">l_troposphere</a>(:,:,:))</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;                user_diags(:,:,:,19) = 0.0   <span class="comment">! trop ch4 burden in mol</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;                user_diags(:,:,:,20) = 0.0   <span class="comment">! trop o3  burden in mol</span></div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;                user_diags(:,:,:,21) = 0.0   <span class="comment">! trop oh  burden in mol</span></div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;<span class="keywordflow">              ENDWHERE</span></div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;<span class="keywordflow">            ENDIF</span>     <span class="comment">! L_ukca_RAQ</span></div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;            cmessage=<span class="stringliteral">&#39; Not enough space for tropospheric diags. &#39;</span>//     &amp;</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;                     <span class="stringliteral">&#39;in user_diags array.&#39;</span></div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;            errcode = 1</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_CHEMISTRY_CTL&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;<span class="keywordflow">          END IF</span>        <span class="comment">! n_chem_diags &gt;= 22</span></div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;             <span class="keywordflow">IF</span> (l_ukca_aerchem) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;            delso2_wet_h2o2(:,:,k)=reshape(so2_wetox_h2o2(:),           &amp;</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;                                   (/row_length,rows/))</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;            delso2_wet_o3(:,:,k)=reshape(so2_wetox_o3(:),               &amp;</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;                                   (/row_length,rows/))</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;            delh2so4_chem(:,:,k)=reshape(so2_dryox_oh(:),               &amp;</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;                                   (/row_length,rows/))</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;            delso2_drydep(:,:,k) = reshape(be_dryrt(:,<a class="code" href="namespaceukca__cspecies.xhtml#ac3a77a85ca9ecf3b1271a69579ae3798">nn_so2</a>)*          &amp;</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;                        be_y(:,<a class="code" href="namespaceukca__cspecies.xhtml#ac3a77a85ca9ecf3b1271a69579ae3798">nn_so2</a>),(/row_length,rows/)) * dts</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;            delso2_wetdep(:,:,k) = reshape(be_wetrt(:,<a class="code" href="namespaceukca__cspecies.xhtml#ac3a77a85ca9ecf3b1271a69579ae3798">nn_so2</a>)*          &amp;</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;                        be_y(:,<a class="code" href="namespaceukca__cspecies.xhtml#ac3a77a85ca9ecf3b1271a69579ae3798">nn_so2</a>),(/row_length,rows/)) * dts</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;<span class="keywordflow">      END DO</span>            <span class="comment">! level loop (k)</span></div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;<span class="comment">! Rescale bromine and chlorine tracers to guarantee conservation of total</span></div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;<span class="comment">! chlorine, bromine, and hydrogen over timestep. Only makes sense if at least</span></div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;<span class="comment">! chlorine chemistry is present.</span></div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceukca__cspecies.xhtml#a932496c860a86e77a0473b9c6a85a6c0">nn_cl</a> &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceukca__strat__update.xhtml#a98ce63a13bca0ef779db5205d500890e">ukca_conserve</a>(row_length, rows, model_levels, ntracers,&amp;</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;                 tracer, pres, drain, crain, um_ozone3d,.false.)</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;      <span class="keywordflow">IF</span> (l_ukca_strat .OR. l_ukca_stratcfc .OR. l_ukca_strattrop)      &amp;</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;         <span class="keywordflow">THEN</span></div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;        <span class="keywordflow">IF</span> (l_ukca_het_psc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;<span class="comment">! Do NAT PSC sedimentation</span></div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;<span class="comment">! take NAT out of gasphase again</span></div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;          tracer(:,:,:,<a class="code" href="namespaceukca__cspecies.xhtml#ab2244e3ab3c7c311695d0b5ca19be9f1">n_hono2</a>) = tracer(:,:,:,<a class="code" href="namespaceukca__cspecies.xhtml#ab2244e3ab3c7c311695d0b5ca19be9f1">n_hono2</a>) - shno3_3d</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;<span class="comment">! DEPENDS ON: ukca_sediment</span></div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;          <span class="keyword">CALL </span><a class="code" href="ukca__sediment_8f90.xhtml#ae21d2095e55e5948b28aab0eff4e910b" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_sediment</a>(rows, row_length, model_levels, shno3_3d,  &amp;</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;                   qcf, r_theta_levels, mass, secs_per_step)</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;<span class="comment">! add solid-phase HNO3 back to gasphase HNO3</span></div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;          tracer(:,:,:,<a class="code" href="namespaceukca__cspecies.xhtml#ab2244e3ab3c7c311695d0b5ca19be9f1">n_hono2</a>) = tracer(:,:,:,<a class="code" href="namespaceukca__cspecies.xhtml#ab2244e3ab3c7c311695d0b5ca19be9f1">n_hono2</a>) + shno3_3d</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;<span class="comment">! Again calculate ozone column, this time from actual post-chemistry</span></div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;<span class="comment">! ozone, for diagnostic purposes</span></div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;        <span class="keywordflow">IF</span> (l_ukca_strat .OR. l_ukca_strattrop .OR. l_ukca_stratcfc)    &amp;</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;          <span class="keywordflow">THEN</span></div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceukca__cspecies.xhtml#a807b167daff71fffaef46a020d3893fd">n_o3</a> &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceukca__strat__update.xhtml#aaae20a5201451430c4485b192d6ca408">ukca_calc_ozonecol</a>(model_levels, rows, row_length,     &amp;</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;                               z_top_of_model,p_layer_boundaries,pres,  &amp;</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;                               tracer(:,:,:,<a class="code" href="namespaceukca__cspecies.xhtml#a807b167daff71fffaef46a020d3893fd">n_o3</a>)/c_o3,                 &amp;</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;                               user_diags(:,:,:,<a class="code" href="namespaceukca__d1__defs.xhtml#a4e07eb90b88ce94f98252128741a5e1c">icd_o3col</a>))</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;            <span class="comment">! convert to Dobson Units from molecules/cm2</span></div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;            user_diags(:,:,:,<a class="code" href="namespaceukca__d1__defs.xhtml#a4e07eb90b88ce94f98252128741a5e1c">icd_o3col</a>) = user_diags(:,:,:,<a class="code" href="namespaceukca__d1__defs.xhtml#a4e07eb90b88ce94f98252128741a5e1c">icd_o3col</a>)/  &amp;</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;                                          2.685e16</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="keywordflow">          END IF</span>   <span class="comment">! n_o3</span></div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;<span class="comment">! Copy NAT MMR into user_diagostics</span></div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;          <span class="keywordflow">IF</span> (l_ukca_het_psc) user_diags(:,:,:,<a class="code" href="namespaceukca__d1__defs.xhtml#aed3236f44705a64e9979db1608bc94ad">icd_nat</a>)=shno3_3d(:,:,:)</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;<span class="comment">! Tracer overwrites required to stop accumulation of tracer mass in the uppermost layers</span></div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;        <span class="keywordflow">DO</span> i=1,rows</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;          <span class="keywordflow">DO</span> j=1,row_length</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;            tracer(j,i,model_levels  ,:) = tracer(j,i,model_levels-2,:)</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;            tracer(j,i,model_levels-1,:) = tracer(j,i,model_levels-2,:)</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;      <span class="keywordflow">ELSE</span>     <span class="comment">! tropospheric chemistry</span></div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;<span class="comment">! Call routine to overwrite O3, CH4 and NOy species once per day</span></div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;<span class="comment">! above level defined by p_above. Only for tropospheric chemistry</span></div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;<span class="comment">! DEPENDS ON: ukca_stratf</span></div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;        <span class="keyword">CALL </span>ukca_stratf(i_day_number, row_length,rows, model_levels,  &amp;</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;                      n_pnts, first_row, global_row_length,            &amp;</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;                      global_rows, jpctr, sinlat, pres,                &amp;</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;                      um_ozone3d, p_above,                             &amp;</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;                      tracer(1:row_length,1:rows,1:model_levels,       &amp;</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;                             1:jpctr))</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;<span class="keywordflow">      END IF</span>     <span class="comment">! L_ukca_strat etc</span></div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;      <span class="keywordflow">IF</span> (l_ukca_het_psc .AND. <span class="keyword">ALLOCATED</span>(shno3_3d)) <span class="keyword">DEALLOCATE</span>(shno3_3d)</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;      <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(zfnatr)) <span class="keyword">DEALLOCATE</span>(zfnatr)</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;      <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(ystore)) <span class="keyword">DEALLOCATE</span>(ystore)</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;      <span class="keywordflow">IF</span> (firstcall) firstcall = .false.</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_CHEMISTRY_CTL&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="ukca__chemistry__ctl_8f90.xhtml#a236899d464f41a41baacbb5737d98bd7" title="!&gt; (c) [University of Cambridge] [2008]. All rights reserved.!&gt; This routine has been licensed to the...">ukca_chemistry_ctl</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
