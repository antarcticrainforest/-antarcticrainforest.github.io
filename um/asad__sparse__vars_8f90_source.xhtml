<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/UKCA/asad_sparse_vars.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_3b087d695daa154bfcb7242bcfd0fbd3.xhtml">UKCA</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">asad_sparse_vars.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="asad__sparse__vars_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!  Description:</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!  Code Description:</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml">   34</a></span>&#160;      <span class="keyword">MODULE</span> <a class="code" href="namespaceasad__sparse__vars.xhtml" title="!&gt; Copyright (c) 2008, Regents of the University of California!&gt; All rights reserved.!&gt;!&gt; Redistribution and use in source and binary forms, with or without!&gt; modification, are permitted provided that the following conditions are!&gt; met:!&gt;!&gt; * Redistributions of source code must retain the above copyright!&gt; notice, this list of conditions and the following disclaimer. !&gt; * Redistributions in binary form must reproduce the above!&gt; copyright notice, this list of conditions and the following!&gt; disclaimer in the documentation and/or other materials provided!&gt; with the distribution. !&gt; * Neither the name of the University of California, Irvine nor the!&gt; names of its contributors may be used to endorse or promote!&gt; products derived from this software without specific prior!&gt; written permission.!&gt;!&gt; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS!&gt;       IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED!&gt; TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A!&gt; PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER!&gt; OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,!&gt; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,!&gt; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR!&gt; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF!&gt; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING!&gt; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS!&gt; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.!&gt;!&gt; !&gt; Copyright (c) 2008, Regents of the University of California!&gt; All rights reserved.!&gt;!&gt; Redistribution and use in source and binary forms, with or without!&gt; modification, are permitted provided that the following conditions are!&gt; met:!&gt;!&gt; * Redistributions of source code must retain the above copyright!&gt; notice, this list of conditions and the following disclaimer. !&gt; * Redistributions in binary form must reproduce the above!&gt; copyright notice, this list of conditions and the following!&gt; disclaimer in the documentation and/or other materials provided!&gt; with the distribution. !&gt; * Neither the name of the University of California, Irvine nor the!&gt; names of its contributors may be used to endorse or promote!&gt; products derived from this software without specific prior!&gt; written permission.!&gt;!&gt; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS!&gt;       IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED!&gt; TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A!&gt; PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER!&gt; OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,!&gt; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,!&gt; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR!&gt; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF!&gt; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING!&gt; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS!&gt; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.!&gt;!&gt; ">asad_sparse_vars</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      <span class="keywordtype">USE </span>asad_mod</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a>          implicit none</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;typsize.h&quot;</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#a35df979200460c19e2f363d2fb1f633b">   45</a></span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: <a class="code" href="namespaceasad__sparse__vars.xhtml#a35df979200460c19e2f363d2fb1f633b">maxterms</a> = 160  <span class="comment">! maximum number of nonzero</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                           <span class="comment">! terms for individual species</span></div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#a1677563880590861ff02a4079c4965a3">   47</a></span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: <a class="code" href="namespaceasad__sparse__vars.xhtml#a1677563880590861ff02a4079c4965a3">maxfterms</a> = 100    <span class="comment">! maximum number of terms</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                         <span class="comment">! involving fractional  products</span></div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#a43d25131262b4ae20fc74abd193ccac1">   49</a></span>&#160;      <span class="keywordtype">INTEGER</span> :: <a class="code" href="namespaceasad__sparse__vars.xhtml#a43d25131262b4ae20fc74abd193ccac1">total</a></div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">   50</a></span>&#160;      <span class="keywordtype">INTEGER</span> :: <a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a>    <span class="comment">! total number of nonzero entries in Jacobian</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#a5b5fd34c898c9a6a744d44542c1f3110">   52</a></span>&#160;      <span class="keywordtype">INTEGER</span> :: <a class="code" href="namespaceasad__sparse__vars.xhtml#a5b5fd34c898c9a6a744d44542c1f3110">nposterms</a>(spfjsize_max), <a class="code" href="namespaceasad__sparse__vars.xhtml#aa6983d739a2a35fc8e748df879b6cbd6">nnegterms</a>(spfjsize_max),      &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                 <a class="code" href="namespaceasad__sparse__vars.xhtml#accc5a9084512cca7d4908ed6cd87b8a3">nfracterms</a>(spfjsize_max)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#ae69cd570f2930ad4112bda7143670251">   55</a></span>&#160;      <span class="keywordtype">INTEGER</span> :: <a class="code" href="namespaceasad__sparse__vars.xhtml#ae69cd570f2930ad4112bda7143670251">posterms</a>(spfjsize_max, <a class="code" href="namespaceasad__sparse__vars.xhtml#a35df979200460c19e2f363d2fb1f633b">maxterms</a>)</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#a0fa3d57039fefcddc4fe7c57e3c48e2d">   56</a></span>&#160;      <span class="keywordtype">INTEGER</span> :: <a class="code" href="namespaceasad__sparse__vars.xhtml#a0fa3d57039fefcddc4fe7c57e3c48e2d">negterms</a>(spfjsize_max, <a class="code" href="namespaceasad__sparse__vars.xhtml#a35df979200460c19e2f363d2fb1f633b">maxterms</a>)</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#af75f0af5ddc944ff745b99bb6657bcc3">   57</a></span>&#160;      <span class="keywordtype">INTEGER</span> :: <a class="code" href="namespaceasad__sparse__vars.xhtml#af75f0af5ddc944ff745b99bb6657bcc3">fracterms</a>(spfjsize_max, <a class="code" href="namespaceasad__sparse__vars.xhtml#a1677563880590861ff02a4079c4965a3">maxfterms</a>)</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#ad0494243108331b7821adfbacc40dff1">   58</a></span>&#160;      <span class="keywordtype">INTEGER</span> :: <a class="code" href="namespaceasad__sparse__vars.xhtml#ad0494243108331b7821adfbacc40dff1">base_tracer</a>(spfjsize_max)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#a4a801a6e7f04713a3f953cea69d90796">   60</a></span>&#160;      <span class="keywordtype">REAL</span> :: <a class="code" href="namespaceasad__sparse__vars.xhtml#a4a801a6e7f04713a3f953cea69d90796">fraction</a>(spfjsize_max, <a class="code" href="namespaceasad__sparse__vars.xhtml#a1677563880590861ff02a4079c4965a3">maxfterms</a>)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      <span class="keyword">CONTAINS</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="namespaceasad__sparse__vars.xhtml#aa239bf98e3a1f0d0f6fd4c88b3cfd783" title="!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!...">setup_spfuljac</a>(n_points)</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#aa239bf98e3a1f0d0f6fd4c88b3cfd783">   68</a></span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: n_points</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">INTEGER</span> :: errcode                <span class="comment">! Variable passed to ereport</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="keywordtype">INTEGER</span> :: irj</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordtype">INTEGER</span> :: ifamd</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="keywordtype">INTEGER</span> :: itrd</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordtype">INTEGER</span> :: i</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <span class="keywordtype">INTEGER</span> :: j</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      <span class="keywordtype">INTEGER</span> :: jc</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <span class="keywordtype">INTEGER</span> :: itrcr</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="keywordtype">INTEGER</span> :: j3</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="keywordtype">INTEGER</span> :: jn</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keywordtype">INTEGER</span> :: js</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keywordtype">INTEGER</span> :: jl</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      <span class="keywordtype">INTEGER</span> :: i1</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <span class="keywordtype">INTEGER</span> :: i2</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordtype">INTEGER</span> :: is</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="keywordtype">INTEGER</span> :: kr</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="keywordtype">INTEGER</span> :: ikr</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keywordtype">INTEGER</span> :: krj</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="keywordtype">INTEGER</span> :: ij1</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="keywordtype">INTEGER</span> :: itemp1</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordtype">INTEGER</span> :: ik(jpmsp)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keywordtype">INTEGER</span> :: ij(jpmsp)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="keywordtype">INTEGER</span> :: activity(jpctr)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">ALLOCATABLE</span> :: p(:,:)    <span class="comment">! permutation matrix</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">ALLOCATABLE</span> :: temp(:,:) <span class="comment">! temporary index matrix</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">ALLOCATABLE</span> :: map(:,:)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <span class="keywordtype">LOGICAL</span> :: lj(jpmsp)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="keywordtype">CHARACTER</span> :: ityped*2</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      <span class="keywordtype">CHARACTER(LEN=72)</span> :: cmessage</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! index map for nonzero entries in Jacobian</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ASAD_SPARSE_VARS:SETUP_SPFULJAC&#39;</span>,        &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                              zhook_in,zhook_handle)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <span class="keywordflow">IF</span> (.NOT. <span class="keyword">ALLOCATED</span>(map)) <span class="keyword">ALLOCATE</span>(map(jpctr, jpctr))</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      map = 0</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      <span class="keywordflow">DO</span> i=1,jpctr</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        map(i,i) = 1</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">!     -!           2.  Calc. full Jacobian matrix.</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">!               -- - -- !</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <span class="keywordflow">DO</span> jc = 1, ntrf</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        itrcr = nltrf(jc)</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">DO</span> j3 = 1,nmzjac(itrcr)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;          irj = nzjac1(j3,itrcr)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;          <span class="keywordflow">DO</span> jn=1,jpmsp</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            ij(jn)=njcoth(irj,jn)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            lj(jn)= (ij(jn) /= 0)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;          <span class="keywordflow">DO</span> jn=1,jpmsp</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">IF</span>(lj(jn)) map(ij(jn),itrcr) = 1</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;          <span class="keywordflow">IF</span>(npdfr(irj,1) /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            i1 = npdfr(irj,1)</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            i2 = npdfr(irj,2)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="keywordflow">DO</span> jn = i1, i2</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;              is = ntabpd(jn,1)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;              map(is,itrcr) = 1</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">!  Go through the steady state additions to the Jacobian; currently</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">!  assume that only O(1D) and O(3P) are modelled, and that both are</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">!  required for the O3 loss rate.</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="keywordflow">DO</span> jc = 1, nstst</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">DO</span> j3 = 1,nmsjac(jc)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;          irj = nsjac1(j3,jc)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;          <span class="keywordflow">DO</span> jn=1,jpmsp</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            ij(jn)=njcoth(irj,jn)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            lj(jn)= (ij(jn) /= 0)</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;          <span class="keywordflow">DO</span> jn=1,jpmsp</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">IF</span>(lj(jn)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;              map(ij(jn),ntro3 ) = 1</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">!              map(ij(jn),ntroh ) = 1</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">!              map(ij(jn),ntrho2) = 1</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">!              map(ij(jn),ntrno ) = 1</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">!     -!          4.  Add deposition terms to Jacobian diagonal.</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">!               - -- -- --!</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      <span class="keywordflow">IF</span> ( (ndepw  /=  0) .OR. (ndepd  /=  0) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="keywordflow">DO</span> js = 1, jpspec</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;          ifamd = moffam(js)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;          itrd = madvtr(js)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;          ityped = ctype(js)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;          <span class="keywordflow">IF</span> ( itrd /= 0 ) map(itrd,itrd) = 1</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">! produce pointer variables</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      <a class="code" href="namespaceasad__sparse__vars.xhtml#a43d25131262b4ae20fc74abd193ccac1">total</a> = <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(map)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      <span class="keywordflow">IF</span> (mype == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a561deb02a924c55956927c57a4c52691">prstatus_oper</a>)  <span class="keywordflow">THEN</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)      &amp;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="stringliteral">&#39;TOTAL NUMBER OF NONZERO ENTRIES IN JACOBIAN: &#39;</span>,<a class="code" href="namespaceasad__sparse__vars.xhtml#a43d25131262b4ae20fc74abd193ccac1">total</a></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;asad_sparse_vars&#39;</span>)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      is=0</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;      pointer2(:,:)=0</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      <span class="keywordflow">DO</span> i=1,jpctr</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">DO</span> j=1,jpctr</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">! calculate forward and backward pointers for sparse representation</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;          <span class="keywordflow">IF</span> (map(i,j) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            is = is + 1</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">! backward pointer</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            pointer2(i,j) = is</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">! Reorder species to minimize fill-in</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <span class="keywordflow">DO</span> i=1,jpctr</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        activity(i) = <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(map(:,i)) + <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(map(i,:))</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        ro(i) = i</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <span class="keywordflow">DO</span> i=1,jpctr-1</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keywordflow">DO</span> j=i+1,jpctr</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;          <span class="keywordflow">IF</span> (activity(i) &gt; activity(j)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">! exchange i and j tracers if i is more active than j.</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            itemp1 = ro(i)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            ro(i) = ro(j)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            ro(j) = itemp1</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            itemp1 = activity(i)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            activity(i) = activity(j)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            activity(j) = itemp1</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      <span class="keywordflow">DO</span> i=1,jpctr</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">IF</span> (mype == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a561deb02a924c55956927c57a4c52691">prstatus_oper</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;IN ASAD SETUP_SPFULJAC: &#39;</span>,&amp;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;               advt(ro(i)),<span class="stringliteral">&#39; &#39;</span>,activity(i)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;asad_sparse_vars&#39;</span>)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">! reorganize pointer variable to account for varying fill-in</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      <span class="keywordflow">IF</span> (.NOT. <span class="keyword">ALLOCATED</span>(p)) <span class="keyword">ALLOCATE</span>(p(jpctr,jpctr))</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;      <span class="keywordflow">IF</span> (.NOT. <span class="keyword">ALLOCATED</span>(temp)) <span class="keyword">ALLOCATE</span>(temp(jpctr,jpctr))</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      p = 0</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      <span class="keywordflow">DO</span> i=1,jpctr</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        p(i,ro(i)) = 1</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">! Calculate P*A</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      <span class="keywordflow">DO</span> i=1,jpctr</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">DO</span> j=1,jpctr</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;          temp(i,j) = <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(p(i,:) * pointer2(:,j))</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">! form P*A*P&#39; -&gt; A</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      pointer(:,:) = 0.0</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      <span class="keywordflow">DO</span> i=1,jpctr</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="keywordflow">DO</span> j=1,jpctr</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;          pointer(i,j) = <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(temp(i,:) * p(j,:))</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(p)) <span class="keyword">DEALLOCATE</span>(p)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;      <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(temp)) <span class="keyword">DEALLOCATE</span>(temp)</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(map)) <span class="keyword">DEALLOCATE</span>(map)</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">! calculate production and loss terms</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;      <a class="code" href="namespaceasad__sparse__vars.xhtml#a5b5fd34c898c9a6a744d44542c1f3110">nposterms</a> = 0</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;      <a class="code" href="namespaceasad__sparse__vars.xhtml#aa6983d739a2a35fc8e748df879b6cbd6">nnegterms</a> = 0</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      <a class="code" href="namespaceasad__sparse__vars.xhtml#accc5a9084512cca7d4908ed6cd87b8a3">nfracterms</a> = 0</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">!     -!           2.  Calc. full Jacobian matrix.</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">!               -- - -- !</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      <span class="keywordflow">DO</span> jc = 1, ntrf</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        itrcr = nltrf(jc)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keywordflow">DO</span> j3 = 1,nmzjac(itrcr)</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;          irj = nzjac1(j3,itrcr)</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;          <span class="keywordflow">DO</span> jn=1,jpmsp</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            ij(jn)=njcoth(irj,jn)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            lj(jn)= (ij(jn) /= 0)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;          <span class="keywordflow">DO</span> jn=1,2</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            <span class="keywordflow">IF</span> (lj(jn)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;              i = pointer2(ij(jn),itrcr)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;              <a class="code" href="namespaceasad__sparse__vars.xhtml#aa6983d739a2a35fc8e748df879b6cbd6">nnegterms</a>(i) = <a class="code" href="namespaceasad__sparse__vars.xhtml#aa6983d739a2a35fc8e748df879b6cbd6">nnegterms</a>(i) + 1</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;              <span class="keywordflow">IF</span> (<a class="code" href="namespaceasad__sparse__vars.xhtml#aa6983d739a2a35fc8e748df879b6cbd6">nnegterms</a>(i) &gt; <a class="code" href="namespaceasad__sparse__vars.xhtml#a35df979200460c19e2f363d2fb1f633b">maxterms</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                errcode=1</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                cmessage=<span class="stringliteral">&#39; Increase maxterms&#39;</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;SETUP_SPFULJAC&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;              <a class="code" href="namespaceasad__sparse__vars.xhtml#a0fa3d57039fefcddc4fe7c57e3c48e2d">negterms</a>(i,<a class="code" href="namespaceasad__sparse__vars.xhtml#aa6983d739a2a35fc8e748df879b6cbd6">nnegterms</a>(i)) = irj</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;          <span class="keywordflow">IF</span> (nfrpx(irj) == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            <span class="keywordflow">DO</span> jn=3,jpmsp</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;              <span class="keywordflow">IF</span> (lj(jn)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                i = pointer2(ij(jn),itrcr)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                <a class="code" href="namespaceasad__sparse__vars.xhtml#a5b5fd34c898c9a6a744d44542c1f3110">nposterms</a>(i) = <a class="code" href="namespaceasad__sparse__vars.xhtml#a5b5fd34c898c9a6a744d44542c1f3110">nposterms</a>(i) + 1</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                <span class="keywordflow">IF</span> (<a class="code" href="namespaceasad__sparse__vars.xhtml#a5b5fd34c898c9a6a744d44542c1f3110">nposterms</a>(i) &gt; <a class="code" href="namespaceasad__sparse__vars.xhtml#a35df979200460c19e2f363d2fb1f633b">maxterms</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                  errcode=2</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                  cmessage=<span class="stringliteral">&#39; Increase maxterms&#39;</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;SETUP_SPFULJAC&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keywordflow">                END IF</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                <a class="code" href="namespaceasad__sparse__vars.xhtml#ae69cd570f2930ad4112bda7143670251">posterms</a>(i,<a class="code" href="namespaceasad__sparse__vars.xhtml#a5b5fd34c898c9a6a744d44542c1f3110">nposterms</a>(i)) = irj</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            <span class="keywordflow">DO</span> jn=3,jpmsp</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;              <span class="keywordflow">IF</span> (lj(jn)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                i = pointer2(ij(jn),itrcr)</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                <a class="code" href="namespaceasad__sparse__vars.xhtml#accc5a9084512cca7d4908ed6cd87b8a3">nfracterms</a>(i) = <a class="code" href="namespaceasad__sparse__vars.xhtml#accc5a9084512cca7d4908ed6cd87b8a3">nfracterms</a>(i) + 1</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                <span class="keywordflow">IF</span> (<a class="code" href="namespaceasad__sparse__vars.xhtml#accc5a9084512cca7d4908ed6cd87b8a3">nfracterms</a>(i) &gt; <a class="code" href="namespaceasad__sparse__vars.xhtml#a1677563880590861ff02a4079c4965a3">maxfterms</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                  errcode = 3</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                  cmessage=<span class="stringliteral">&#39; Increase maxfterms&#39;</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;SETUP_SPFULJAC&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="keywordflow">                END IF</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                <span class="keywordflow">IF</span> (nfrpx(irj)+jn-3 &gt; jpfrpx) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                  cmessage = <span class="stringliteral">&#39; frpx array index &gt; jpfrpx&#39;</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                  errcode = 3</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) cmessage</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;asad_sparse_vars&#39;</span>)</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;irj: &#39;</span>,irj,<span class="stringliteral">&#39; nfrpx(irj): &#39;</span>,nfrpx(irj)</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;asad_sparse_vars&#39;</span>)</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;i: &#39;</span>,i,<span class="stringliteral">&#39; jn: &#39;</span>,jn</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;asad_sparse_vars&#39;</span>)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;SETUP_SPFULJAC&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="keywordflow">                END IF</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                <a class="code" href="namespaceasad__sparse__vars.xhtml#af75f0af5ddc944ff745b99bb6657bcc3">fracterms</a>(i,<a class="code" href="namespaceasad__sparse__vars.xhtml#accc5a9084512cca7d4908ed6cd87b8a3">nfracterms</a>(i)) = irj</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                <a class="code" href="namespaceasad__sparse__vars.xhtml#a4a801a6e7f04713a3f953cea69d90796">fraction</a>(i,<a class="code" href="namespaceasad__sparse__vars.xhtml#accc5a9084512cca7d4908ed6cd87b8a3">nfracterms</a>(i)) = frpx(nfrpx(irj)+jn-3)</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;          <span class="keywordflow">IF</span> (npdfr(irj,1) /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            i1 = npdfr(irj,1)</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            i2 = npdfr(irj,2)</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            <span class="keywordflow">DO</span> jn = i1, i2</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;              is = ntabpd(jn,1)</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;              i = pointer2(is,itrcr)</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;              <a class="code" href="namespaceasad__sparse__vars.xhtml#accc5a9084512cca7d4908ed6cd87b8a3">nfracterms</a>(i) = <a class="code" href="namespaceasad__sparse__vars.xhtml#accc5a9084512cca7d4908ed6cd87b8a3">nfracterms</a>(i) + 1</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;              <span class="keywordflow">IF</span> (<a class="code" href="namespaceasad__sparse__vars.xhtml#accc5a9084512cca7d4908ed6cd87b8a3">nfracterms</a>(i) &gt; <a class="code" href="namespaceasad__sparse__vars.xhtml#a1677563880590861ff02a4079c4965a3">maxfterms</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                errcode=3</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                cmessage=<span class="stringliteral">&#39; Increase maxfterms&#39;</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;SETUP_SPFULJAC&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;              <a class="code" href="namespaceasad__sparse__vars.xhtml#af75f0af5ddc944ff745b99bb6657bcc3">fracterms</a>(i,<a class="code" href="namespaceasad__sparse__vars.xhtml#accc5a9084512cca7d4908ed6cd87b8a3">nfracterms</a>(i)) = irj</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;              <a class="code" href="namespaceasad__sparse__vars.xhtml#a4a801a6e7f04713a3f953cea69d90796">fraction</a>(i,<a class="code" href="namespaceasad__sparse__vars.xhtml#accc5a9084512cca7d4908ed6cd87b8a3">nfracterms</a>(i)) = ztabpd(jn,1)</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">! calculate base_tracer (i.e., number of base tracer that goes with each</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">! matrix element</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;      <span class="keywordflow">DO</span> i=1,jpctr</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="keywordflow">DO</span> j=1,jpctr</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;          i1 = pointer2(j,i)</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;          <span class="keywordflow">IF</span> (i1 &gt; 0) <a class="code" href="namespaceasad__sparse__vars.xhtml#ad0494243108331b7821adfbacc40dff1">base_tracer</a>(i1)=i</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">! calculate number of matrix elements after factorization. Make sure it is</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">! smaller than the set maximum.</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;      <a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a> = <a class="code" href="namespaceasad__sparse__vars.xhtml#a43d25131262b4ae20fc74abd193ccac1">total</a></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;      pointer1 = <span class="keywordtype">pointer</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;      <span class="keywordflow">DO</span> kr=1,jpctr</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="keywordflow">DO</span> i=kr+1,jpctr</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;          ikr = pointer1(i,kr)</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;          <span class="keywordflow">IF</span> (ikr &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            <span class="keywordflow">DO</span> j=kr+1,jpctr</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;              krj = pointer1(kr,j)</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;              <span class="keywordflow">IF</span> (krj &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                ij1 = pointer1(i,j)</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">! Distinguish whether matrix element is zero or not. If not, proceed</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">! as in dense case. If it is, create new matrix element.</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                <span class="keywordflow">IF</span> (ij1 &lt;= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                  <a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a> = <a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a> + 1</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                  <span class="keywordflow">IF</span> (<a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a> &gt; spfjsize_max) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                    errcode=<a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Total1 exceeded spfjsize_max: &#39;</span>,<a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a>, &amp;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                                spfjsize_max</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;asad_sparse_vars&#39;</span>)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                    cmessage=<span class="stringliteral">&#39;Increase spfjsize_max&#39;</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                    <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>                                        &amp;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                      (<span class="stringliteral">&#39;SETUP_SPFULJAC&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="keywordflow">                  END IF</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                  pointer1(i,j) = <a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keywordflow">                END IF</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;      <span class="keywordflow">IF</span> (mype == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Initial and final fill-in: &#39;</span>,<a class="code" href="namespaceasad__sparse__vars.xhtml#a43d25131262b4ae20fc74abd193ccac1">total</a>, <a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;asad_sparse_vars&#39;</span>)</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;spfjsize_max is currently set to: &#39;</span>,spfjsize_max</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;asad_sparse_vars&#39;</span>)</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Reduce spfjsize_max if much greater than total1 &#39;</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;asad_sparse_vars&#39;</span>)</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ASAD_SPARSE_VARS:SETUP_SPFULJAC&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="namespaceasad__sparse__vars.xhtml#aa239bf98e3a1f0d0f6fd4c88b3cfd783" title="!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!...">setup_spfuljac</a></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="namespaceasad__sparse__vars.xhtml#ad753346de8a81d2a9e6222a4de492270">spfuljac</a>(n_points)</div><div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#ad753346de8a81d2a9e6222a4de492270">  418</a></span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment">!  Routine to calculate the sparse full Jacobian</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">!  Filter for negatives before entering!</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">! 28/3/2006 Include derivative of SS species with respect to</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">! ozone (deriv) in calculation of Jacobian</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment">!                                 Olaf Morgenstern</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="comment">! 5/4/2006 Bug removed with indexing of dpd and dpw</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="comment">!                                 Olaf Morgenstern</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment">! 21/6/2006 Adapted from fuljac to calculate sparse</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment">!           full Jacobian.</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment">!                                 Olaf Morgenstern</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">! Subroutine interface</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: n_points</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;      <span class="keywordtype">REAL</span> :: deltt</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;      <span class="keywordtype">REAL</span> :: fr</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;      <span class="keywordtype">CHARACTER (LEN=2)</span> :: ityped</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;      <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">SAVE</span> :: first = .true.</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;      <span class="keywordtype">INTEGER</span> :: p</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;      <span class="keywordtype">INTEGER</span> :: irj</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;      <span class="keywordtype">INTEGER</span> :: ifamd</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      <span class="keywordtype">INTEGER</span> :: itrd</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      <span class="keywordtype">INTEGER</span> :: i</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;      <span class="keywordtype">INTEGER</span> :: j</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;      <span class="keywordtype">INTEGER</span> :: jc</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;      <span class="keywordtype">INTEGER</span> :: itrcr</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;      <span class="keywordtype">INTEGER</span> :: j3</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;      <span class="keywordtype">INTEGER</span> :: jn</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      <span class="keywordtype">INTEGER</span> :: js</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;      <span class="keywordtype">INTEGER</span> :: jl</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;      <span class="keywordtype">INTEGER</span> :: i1</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;      <span class="keywordtype">INTEGER</span> :: i2</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;      <span class="keywordtype">INTEGER</span> :: is</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;      <span class="keywordtype">INTEGER</span> :: ij(jpmsp)</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;      <span class="keywordtype">INTEGER</span> :: ik(jpmsp)</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;      <span class="keywordtype">LOGICAL</span> :: lj(jpmsp)</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ASAD_SPARSE_VARS:SPFULJAC&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;      deltt=1./cdt</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;      <span class="keywordflow">IF</span> (first) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="comment">! Determine number and positions of nonzero elements in sparse</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment">! full Jacobian</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceasad__sparse__vars.xhtml#aa239bf98e3a1f0d0f6fd4c88b3cfd783" title="!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!&gt;!...">setup_spfuljac</a>(n_points)</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        first = .false.</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;      spfj = 0.</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment">! Calculate diagonal element of Jacobian</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;      <span class="keywordflow">DO</span> i=1,jpctr</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        spfj(:,pointer2(i,i))=-deltt*f(:,i)</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="comment">!     -!           2.  Calc. full Jacobian matrix.</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment">!               -- - -- !</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="comment">! Sum up positive non-fractional, negative, and fractional terms</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment">! Count down (I think that&#39;s faster...)</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;      <span class="keywordflow">DO</span> p=1,<a class="code" href="namespaceasad__sparse__vars.xhtml#a43d25131262b4ae20fc74abd193ccac1">total</a></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        <span class="keywordflow">DO</span> i=<a class="code" href="namespaceasad__sparse__vars.xhtml#a5b5fd34c898c9a6a744d44542c1f3110">nposterms</a>(p),1,-1</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;          spfj(:,p) = spfj(:,p) + prk(:,<a class="code" href="namespaceasad__sparse__vars.xhtml#ae69cd570f2930ad4112bda7143670251">posterms</a>(p,i))</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="keywordflow">DO</span> i=<a class="code" href="namespaceasad__sparse__vars.xhtml#aa6983d739a2a35fc8e748df879b6cbd6">nnegterms</a>(p),1,-1</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;          spfj(:,p) = spfj(:,p) - prk(:,<a class="code" href="namespaceasad__sparse__vars.xhtml#a0fa3d57039fefcddc4fe7c57e3c48e2d">negterms</a>(p,i))</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        <span class="keywordflow">DO</span> i=<a class="code" href="namespaceasad__sparse__vars.xhtml#accc5a9084512cca7d4908ed6cd87b8a3">nfracterms</a>(p),1,-1</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;          spfj(:,p) = spfj(:,p) + <a class="code" href="namespaceasad__sparse__vars.xhtml#a4a801a6e7f04713a3f953cea69d90796">fraction</a>(p,i)*prk(:,<a class="code" href="namespaceasad__sparse__vars.xhtml#af75f0af5ddc944ff745b99bb6657bcc3">fracterms</a>(p,i))</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment">!  Go through the steady state additions to the Jacobian; currently</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment">!  assume that only O(1D) [and O(3P)] are modelled, and that [both] are</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment">!  required for the O3 loss rate.</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;      <span class="keywordflow">DO</span> jc = 1, nstst</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        <span class="keywordflow">DO</span> j3 = 1,nmsjac(jc)</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;          irj = nsjac1(j3,jc)</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;          <span class="keywordflow">DO</span> jn=1,jpmsp</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            ij(jn)=njcoth(irj,jn)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            lj(jn)=ij(jn) /= 0</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;          <span class="keywordflow">DO</span> jn=1,2</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            <span class="keywordflow">IF</span> (lj(jn)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;              p = pointer2(ij(jn),ntro3)</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;              spfj(:,p) = spfj(:,p) -                                   &amp;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                prk(:,irj)*deriv(:,jc,1) <span class="comment">! *prkrat(jc)</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;          <span class="keywordflow">DO</span> jn=3,jpmsp</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            <span class="keywordflow">IF</span> (lj(jn)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;              p = pointer2(ij(jn),ntro3)</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;              spfj(:,p) = spfj(:,p) +                                   &amp;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                prk(:,irj)*deriv(:,jc,1) <span class="comment">! *prkrat(jc)</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="comment">!     -!          4.  Add deposition terms to Jacobian diagonal.</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="comment">!               - -- -- --!</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;      <span class="keywordflow">IF</span> ( (ndepw  /=  0) .OR. (ndepd  /=  0) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        <span class="keywordflow">DO</span> js = 1, jpspec</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;          ifamd = moffam(js)</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;          itrd = madvtr(js)</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;          ityped = ctype(js)</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;          <span class="keywordflow">IF</span> ( ifamd /= 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;            <span class="keywordflow">DO</span> jl=1,n_points</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;              <span class="keywordflow">IF</span> ((ityped == jpfm) .OR. ((ityped == jpif) .AND.         &amp;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;              linfam(jl,itrd))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                p = pointer2(ifamd,ifamd)</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                spfj(jl,p)=spfj(jl,p)                                   &amp;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                - nodd(js)*(dpd(jl,js)+dpw(jl,js))*y(jl,js)</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;          <span class="keywordflow">IF</span> ( itrd /= 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;            p = pointer2(itrd,itrd)</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;            spfj(:,p) = spfj(:,p) - (dpd(:,js)+dpw(:,js))*y(:,js)</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="comment">!     !          5.  Jacobian elements in final form</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="comment">!              -- -- -- -- !</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;      <span class="keywordflow">DO</span> p=1,<a class="code" href="namespaceasad__sparse__vars.xhtml#a43d25131262b4ae20fc74abd193ccac1">total</a></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        spfj(:,p)=spfj(:,p)/f(:,<a class="code" href="namespaceasad__sparse__vars.xhtml#ad0494243108331b7821adfbacc40dff1">base_tracer</a>(p))   <span class="comment">! filter f earlier!</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ASAD_SPARSE_VARS:SPFULJAC&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="namespaceasad__sparse__vars.xhtml#ad753346de8a81d2a9e6222a4de492270">spfuljac</a></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="comment">!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="namespaceasad__sparse__vars.xhtml#a23f8f41526216f818abcd5cadfb3a186">splinslv2</a>(zb,zx,n_points,rafeps,rafbig)</div><div class="line"><a name="l00573"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#a23f8f41526216f818abcd5cadfb3a186">  573</a></span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="comment">!***** SUB -LINSLV- does simple Gaussian elimination</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="comment">!*****     fj(N,N)*X(N) = B(N)  BY REDUCING THE A-MATRIX IN PLACE.</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="comment">!***** THE ENTRY -RESOLV- ASSUMES THAT THE fj-MATRIX HAS BEEN PROPERLY</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment">!*****     REDUCED AND JUST SOLVES FOR X(N).  THIS OPTION SAVES TIME</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment">!*****     WHEN THE SYSTEM IS TO BE RESOLVED WITH A NEW B-VECTOR.</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment">! 7/7/2006  Adapted to do sparse matrix algebra and species reordering</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="comment">!           to improve throughput. For a typical application, this</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="comment">!           reduces CPU time by at least a factor of 2.</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="comment">!                                     Olaf Morgenstern</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="comment">! 1/9/2006  Check diagonal elements of Jacobian whether they are close</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="comment">!           to 0. Improves stability. Olaf Morgenstern</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="comment">! Subroutine interface</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: n_points</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: rafeps</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: rafbig</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: zb(theta_field_size,jpctr)</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>   :: zx(theta_field_size,jpctr)</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;      <span class="keywordtype">INTEGER</span> :: kr</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;      <span class="keywordtype">INTEGER</span> :: jl</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;      <span class="keywordtype">INTEGER</span> :: i</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;      <span class="keywordtype">INTEGER</span> :: j</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;      <span class="keywordtype">INTEGER</span> :: ikr</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;      <span class="keywordtype">INTEGER</span> :: krj</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;      <span class="keywordtype">INTEGER</span> :: ij</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;      <span class="keywordtype">REAL</span> :: zb1(theta_field_size,jpctr)</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;      <span class="keywordtype">REAL</span> :: zx1(theta_field_size,jpctr)</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;      <span class="keywordtype">REAL</span> :: pivot(theta_field_size)</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;      <span class="keywordtype">REAL</span> :: kfact(theta_field_size)</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;      <span class="keywordtype">REAL</span> :: tmp</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="comment">! copy pointer variables into new representations; we do not</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="comment">! want to change these.</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ASAD_SPARSE_VARS:SPLINSLV2&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="comment">! Version optimised for IBM by using the fsel IBM-only intrinsic</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="preprocessor">#if defined(IBM)</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;<span class="preprocessor"></span>      <span class="keywordflow">DO</span> j=1,spfjsize_max        <span class="keywordflow">DO</span> i=1,theta_field_size          tmp=fsel(spfj(i,j)+rafbig,spfj(i,j),-rafbig)          spfj(i,j)=fsel(tmp-rafbig,rafbig,tmp)<span class="keywordflow">        END DO</span>      end do<span class="preprocessor">#else</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;<span class="preprocessor"></span>      <span class="keywordflow">DO</span> j=1,spfjsize_max        <span class="keywordflow">DO</span> i=1,theta_field_size          spfj(i,j)=min(max(spfj(i,j),-rafbig),rafbig)<span class="keywordflow">        END DO</span>      end do<span class="preprocessor">#endif</span></div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;      <a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a> = <a class="code" href="namespaceasad__sparse__vars.xhtml#a43d25131262b4ae20fc74abd193ccac1">total</a></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;      pointer1 = <span class="keywordtype">pointer</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;      <span class="keywordflow">DO</span> kr=1,jpctr</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        pivot = spfj(:,pointer1(kr,kr))</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <span class="keywordflow">WHERE</span> (abs(pivot) &gt; rafeps)</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;          pivot = 1./pivot</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;        <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;          pivot = rafbig</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<span class="keywordflow">        ENDWHERE</span></div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="comment">!        PIVOT = 1./spfj(:,pointer1(kr,kr))</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        <span class="keywordflow">DO</span> i=kr+1,jpctr</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;          ikr = pointer1(i,kr)</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;          <span class="keywordflow">IF</span> (ikr &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;            kfact = spfj(:,ikr)*pivot</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;            spfj(:,ikr) = kfact</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;            <span class="keywordflow">DO</span> j=kr+1,jpctr</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;              krj = pointer1(kr,j)</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;              <span class="keywordflow">IF</span> (krj &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                ij = pointer1(i,j)</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="comment">! Distinguish whether matrix element is zero or not. If not, proceed</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;<span class="comment">! as in dense case. If it is, create new matrix element.</span></div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                <span class="keywordflow">IF</span> (ij &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                  spfj(:,ij) = spfj(:,ij) - kfact*spfj(:,krj)</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                  <a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a> = <a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a> + 1</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                  pointer1(i,j) = <a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                  spfj(:,<a class="code" href="namespaceasad__sparse__vars.xhtml#ad155fdae44416bf2b80814744b91e5f1">total1</a>) = -kfact*spfj(:,krj)</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="keywordflow">                END IF</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;<span class="comment">! Filter spfj</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;<span class="comment">! Version optimised for IBM by using the fsel IBM-only intrinsic</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="preprocessor">#if defined(IBM)</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;<span class="preprocessor"></span>      <span class="keywordflow">DO</span> j=1,spfjsize_max        <span class="keywordflow">DO</span> i=1,theta_field_size          tmp=fsel(spfj(i,j)+rafbig,spfj(i,j),-rafbig)          spfj(i,j)=fsel(tmp-rafbig,rafbig,tmp)<span class="keywordflow">        END DO</span>      end do<span class="preprocessor">#else</span></div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="preprocessor"></span>      <span class="keywordflow">DO</span> j=1,spfjsize_max        <span class="keywordflow">DO</span> i=1,theta_field_size          spfj(i,j)=min(max(spfj(i,j),-rafbig),rafbig)<span class="keywordflow">        END DO</span>      end do<span class="preprocessor">#endif</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="comment">!c      call resolv2(zb,zx,n_points,rafeps)!resolv2 manually inlined below</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="comment">! Form P*zb (permutation of RHS)</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;      <span class="keywordflow">DO</span> i=1,jpctr</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        zb1(:,i) = zb(:,ro(i))</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;      <span class="keywordflow">DO</span> kr=1,jpctr-1</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;        <span class="keywordflow">DO</span> i=kr+1,jpctr</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;          ikr = pointer1(i,kr)</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;          <span class="keywordflow">IF</span> (ikr &gt; 0)                                                  &amp;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;            zb1(:,i) = zb1(:,i) - spfj(:,ikr) * zb1(:,kr)</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;      <span class="keywordflow">DO</span> kr=jpctr,1,-1</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;        zx1(:,kr) = zb1(:,kr)</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        <span class="keywordflow">DO</span> j=kr+1,jpctr</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;          krj = pointer1(kr,j)</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;          <span class="keywordflow">IF</span> (krj &gt; 0)                                                  &amp;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;            zx1(:,kr) = zx1(:,kr) - spfj(:,krj) * zx1(:,j)</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        pivot = spfj(:,pointer1(kr,kr))</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        <span class="keywordflow">WHERE</span> (abs(pivot) &lt; rafeps) pivot = rafeps</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        zx1(:,kr) = min(max(zx1(:,kr),-rafbig),rafbig)/pivot</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="comment">! Form P&#39; zx1 = zx (result of linear system)</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;      <span class="keywordflow">DO</span> j=1,jpctr</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;        zx(:,ro(j)) = zx1(:,j)</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ASAD_SPARSE_VARS:SPLINSLV2&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="namespaceasad__sparse__vars.xhtml#a23f8f41526216f818abcd5cadfb3a186">splinslv2</a></div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="comment">!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="namespaceasad__sparse__vars.xhtml#ae04e4ddadac276b623d0bae52db956bd">spresolv2</a>(zb,zx,n_points,rafeps)</div><div class="line"><a name="l00712"></a><span class="lineno"><a class="line" href="namespaceasad__sparse__vars.xhtml#ae04e4ddadac276b623d0bae52db956bd">  712</a></span>&#160;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="comment">!            ENTRY FOR BACK SOLUTION WITH DIFFERENT B-VALUE</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="comment">! 7/7/2006 Modified to perform sparse matrix processing and species</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;<span class="comment">!          reordering.               Olaf Morgenstern</span></div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;<span class="comment">! 17/8/2006 Bug removed              Olaf Morgenstern</span></div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;        <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;<span class="comment">! Subroutine interface</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: n_points</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: rafeps</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: zb(theta_field_size,jpctr)</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: zx(theta_field_size,jpctr)</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;      <span class="keywordtype">INTEGER</span> :: kr</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;      <span class="keywordtype">INTEGER</span> :: jl</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;      <span class="keywordtype">INTEGER</span> :: i</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;      <span class="keywordtype">INTEGER</span> :: j</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;      <span class="keywordtype">INTEGER</span> :: krj</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;      <span class="keywordtype">INTEGER</span> :: ikr</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;      <span class="keywordtype">REAL</span> :: zb1(theta_field_size, jpctr)</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;      <span class="keywordtype">REAL</span> :: zx1(theta_field_size, jpctr)</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;      <span class="keywordtype">REAL</span> :: pivot(theta_field_size)</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;<span class="comment">! Form P*zb (permutation of RHS)</span></div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ASAD_SPARSE_VARS:SPRESOLV2&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;      <span class="keywordflow">DO</span> i=1,jpctr</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;        zb1(:,i) = zb(:,ro(i))</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;      <span class="keywordflow">DO</span> kr=1,jpctr-1</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;        <span class="keywordflow">DO</span> i=kr+1,jpctr</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;          ikr = pointer1(i,kr)</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;          <span class="keywordflow">IF</span> (ikr &gt; 0) zb1(:,i) = zb1(:,i) - spfj(:,ikr)*zb1(:,kr)</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;      <span class="keywordflow">DO</span> kr=jpctr,1,-1</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;        zx1(:,kr) = zb1(:,kr)</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;        <span class="keywordflow">DO</span> j=kr+1,jpctr</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;          krj = pointer1(kr,j)</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;          <span class="keywordflow">IF</span> (krj &gt; 0) zx1(:,kr) = zx1(:,kr) - spfj(:,krj)*zx1(:,j)</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;        pivot = spfj(:,pointer1(kr,kr))</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        <span class="keywordflow">WHERE</span>(abs(pivot) &lt; rafeps) pivot = rafeps</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;        zx1(:,kr) = zx1(:,kr) / pivot</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;      <span class="keywordflow">DO</span> i=1,jpctr</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;        zx(:,ro(i)) = zx1(:,i)</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ASAD_SPARSE_VARS:SPRESOLV2&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="namespaceasad__sparse__vars.xhtml#ae04e4ddadac276b623d0bae52db956bd">spresolv2</a></div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;<span class="keyword">      END MODULE </span><a class="code" href="namespaceasad__sparse__vars.xhtml" title="!&gt; Copyright (c) 2008, Regents of the University of California!&gt; All rights reserved.!&gt;!&gt; Redistribution and use in source and binary forms, with or without!&gt; modification, are permitted provided that the following conditions are!&gt; met:!&gt;!&gt; * Redistributions of source code must retain the above copyright!&gt; notice, this list of conditions and the following disclaimer. !&gt; * Redistributions in binary form must reproduce the above!&gt; copyright notice, this list of conditions and the following!&gt; disclaimer in the documentation and/or other materials provided!&gt; with the distribution. !&gt; * Neither the name of the University of California, Irvine nor the!&gt; names of its contributors may be used to endorse or promote!&gt; products derived from this software without specific prior!&gt; written permission.!&gt;!&gt; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS!&gt;       IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED!&gt; TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A!&gt; PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER!&gt; OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,!&gt; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,!&gt; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR!&gt; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF!&gt; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING!&gt; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS!&gt; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.!&gt;!&gt; !&gt; Copyright (c) 2008, Regents of the University of California!&gt; All rights reserved.!&gt;!&gt; Redistribution and use in source and binary forms, with or without!&gt; modification, are permitted provided that the following conditions are!&gt; met:!&gt;!&gt; * Redistributions of source code must retain the above copyright!&gt; notice, this list of conditions and the following disclaimer. !&gt; * Redistributions in binary form must reproduce the above!&gt; copyright notice, this list of conditions and the following!&gt; disclaimer in the documentation and/or other materials provided!&gt; with the distribution. !&gt; * Neither the name of the University of California, Irvine nor the!&gt; names of its contributors may be used to endorse or promote!&gt; products derived from this software without specific prior!&gt; written permission.!&gt;!&gt; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS!&gt;       IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED!&gt; TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A!&gt; PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER!&gt; OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,!&gt; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,!&gt; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR!&gt; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF!&gt; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING!&gt; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS!&gt; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.!&gt;!&gt; ">asad_sparse_vars</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
