<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/stash/multi_spatial.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_807f876cb6d36c1a4c0b1b86608d148a.xhtml">stash</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">multi_spatial.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="multi__spatial_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="multi__spatial_8f90.xhtml#ade4d2e0edcbb3c9113bf99c7f1f8341d" title="Routine: MULTI_SPATIAL -!&gt; ">multi_spatial</a>(fieldin,vx,vy,vz,gr,st_grid,             &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;     &amp;                         fld_type,halo_type,                      &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;     &amp;                         halo_x,halo_y,                           &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;     &amp;                         lcyclic,                                 &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;     &amp;     lmasswt,horiz_size,num_vert_levels,                          &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;     &amp;     no_of_levels_masswt,                                         &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;     &amp;     p,pstar,                                                     &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;     &amp;     cos_v_latitude,cos_theta_latitude,land,sea,                  &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;     &amp;     row_length,rows,n_rows,model_levels,                         &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;     &amp;     fieldout,lenout,amdi,                                        &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;     &amp;     control,control_size,                                        &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;     &amp;     stash_series,series_entry_size,no_records,                   &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;     &amp;     num_stash_levels,index_lev,level_list,start_ts,extraw,       &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;     &amp;     n_rows_out,n_cols_out,                                       &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;     &amp;     real_hd,len_realhd,int_hd,len_inthd,                         &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;     &amp;     icode,errmssg)</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="multi__spatial_8f90.xhtml#ade4d2e0edcbb3c9113bf99c7f1f8341d">   44</a></span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <span class="keywordtype">USE </span>gcom_mod<span class="keywordtype">, ONLY</span>: gc_none</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacesterr__mod.xhtml" title="This file belongs in section: MPP This file belongs in section: MPP. ">sterr_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacesterr__mod.xhtml#acdb2e6a61588cac36f91d12dec1d66a3" title="LL Comdeck: STERR !&gt;LL LL Purpose: PARAMETER names for STASH processing error codes; LL fatal errors ...">st_upper_less_lower</a>, <a class="code" href="namespacesterr__mod.xhtml#a0a12269de14a27b7369a63fee081458c">st_not_supported</a>,       &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                           <a class="code" href="namespacesterr__mod.xhtml#a6c2139e7752118b04a9d28399cbf7e59">st_no_data</a>,<a class="code" href="namespacesterr__mod.xhtml#a3fef235e146bfdeb9e079b772a20e455">st_nd</a>, <a class="code" href="namespacesterr__mod.xhtml#a7e4e4e3504d9be4056f7df8c93cb0607" title="Error codes. ">st_bad_array_param</a>,        &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                           <a class="code" href="namespacesterr__mod.xhtml#a95f0d7bb5571ad3d70d29e92596c29a2">st_bad_address</a>, <a class="code" href="namespacesterr__mod.xhtml#aed2797a79e113bcd5dfa2c506e8b5d13">st_unknown</a>,                  &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                           <a class="code" href="namespacesterr__mod.xhtml#a90d86755b68518ff4eadca98b5e4829f">st_bad_wraparound</a>, <a class="code" href="namespacesterr__mod.xhtml#acbc99a186bfa22836a15011bbfab322e">st_illegal_weight</a>,        &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                           <a class="code" href="namespacesterr__mod.xhtml#ad4bb0c7f8a56303b621903174e500b0b">unknown_weight</a>, <a class="code" href="namespacesterr__mod.xhtml#a6988b8d77a2c2cfb1efc1369d5cab713">unknown_mask</a>,                &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                           <a class="code" href="namespacesterr__mod.xhtml#a87933374e689177ab096fd22890c18ba">unknown_processing</a>, <a class="code" href="namespacesterr__mod.xhtml#af96e562eddc960843ce1b2559bc51921">nonsense</a></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordtype">INTEGER</span> vx,vy,vz          <span class="comment">! IN size of fieldin</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordtype">INTEGER</span> gr                <span class="comment">! IN ppxref gridtype code</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      <span class="keywordtype">INTEGER</span> st_grid           <span class="comment">! IN STASH internal gridtype code</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;     &amp; fld_type                                                         &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                               <span class="comment">! IN field type (u/v/p) of input field</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;     &amp;,halo_type                                                        &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                               <span class="comment">! IN halo type of input field</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;     &amp;,halo_x                                                           &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                               <span class="comment">! IN halo size East-West</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;     &amp;,halo_y                  <span class="comment">! IN halo size North-South</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <span class="keywordtype">LOGICAL</span> lcyclic           <span class="comment">! IN TRUE if cyclic EW BCs</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      <span class="keywordtype">LOGICAL</span> lmasswt           <span class="comment">! IN TRUE if level-dep mass-wts OK</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordtype">INTEGER</span> row_length,rows,n_rows,model_levels <span class="comment">! IN size parameters</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <span class="keywordtype">REAL</span> fieldin(vx*vy*vz)    <span class="comment">! IN data field</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      <span class="keywordtype">INTEGER</span> horiz_size        <span class="comment">! OUT no. of points in horizontal slice</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordtype">INTEGER</span> num_vert_levels   <span class="comment">! OUT no of horizontal slices.</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keywordtype">INTEGER</span>  no_of_levels_masswt <span class="comment">! IN: levels for mass weighting array</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="keywordtype">INTEGER</span> num_stash_levels  <span class="comment">! IN size of vertical levels list.</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      <span class="keywordtype">INTEGER</span> index_lev(num_stash_levels) <span class="comment">! IN offsets for each horiz fi</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="keywordtype">INTEGER</span> level_list(num_stash_levels) <span class="comment">! IN level for each horiz. fi</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;     &amp; p(1-offx:row_length+offx,1-offy:rows+offy,model_levels)          &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                              <span class="comment">! IN pressure (rho levels)</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;     &amp;,pstar(row_length,rows)                                           &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                                              <span class="comment">! IN surface pressure</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;     &amp;,cos_v_latitude(row_length,n_rows)                                &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                                              <span class="comment">! IN v-grid area fn</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;     &amp;,cos_theta_latitude(row_length,rows)    <span class="comment">! IN T-grid area fn</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordtype">LOGICAL</span> land(row_length,rows)           <span class="comment">! IN land mask</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <span class="keywordtype">LOGICAL</span>  sea(row_length,rows)           <span class="comment">! IN sea mask</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      <span class="keywordtype">INTEGER</span> lenout               <span class="comment">! IN max size of output field</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <span class="keywordtype">REAL</span> fieldout(lenout)        <span class="comment">! OUT output field</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="keywordtype">REAL</span> amdi                    <span class="comment">! IN missing data indicator</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="keywordtype">INTEGER</span> len_realhd           <span class="comment">! IN size of real header</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keywordtype">INTEGER</span> len_inthd            <span class="comment">! IN size of integer header</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keywordtype">REAL</span> real_hd(len_realhd)     <span class="comment">! IN real header</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      <span class="keywordtype">INTEGER</span> int_hd(len_inthd)    <span class="comment">! IN integer header</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <span class="keywordtype">INTEGER</span> control_size         <span class="comment">! IN size of control array</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordtype">INTEGER</span> control(control_size)<span class="comment">! IN control array (mostly not used)</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="keywordtype">INTEGER</span> series_entry_size    <span class="comment">! IN no of entries in each record.</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="keywordtype">INTEGER</span> no_records           <span class="comment">! IN no of records to process.</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keywordtype">INTEGER</span> extraw               <span class="comment">! OUT no of words required by extra d</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="keywordtype">INTEGER</span> n_rows_out,n_cols_out<span class="comment">! OUT data-set size and extent</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="keywordtype">LOGICAL</span> start_ts             <span class="comment">! IN true if first time-series timest</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordtype">INTEGER</span> stash_series(series_entry_size,no_records) <span class="comment">! IN</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">! IN control data for calls to spatial</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="keywordtype">INTEGER</span> icode                       <span class="comment">! OUT error code</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span> errmssg              <span class="comment">! OUT error message</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">!*! Parameters</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">#include &quot;stparam.h&quot;</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">!*L</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">! Subroutines called</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      <span class="keywordtype">EXTERNAL</span> <a class="code" href="spatial_8f90.xhtml#a1a8ed3040f333fb8eaffb10ae7545f55" title="LL Routine: SPATIAL -!&gt;LL. ">spatial</a></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      <span class="keywordtype">EXTERNAL</span> <a class="code" href="stash__comp__grid_8f90.xhtml#aeed95e6638993f9d63c28229bce326e3" title="LL SUBROUTINE STASH_COMP_GRID!&gt;LL. ">stash_comp_grid</a>,extra_make_vector,<a class="code" href="extra__ts__info_8f90.xhtml#ad9a20d1328cfa53d18c30a9d787090ab" title="LL -!&gt;LL Stash routine. ">extra_ts_info</a></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <span class="keywordtype">INTEGER</span> fake_record(control_size) <span class="comment">! fake_record for SPATIAL call</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="keywordtype">INTEGER</span> pp_ptr <span class="comment">! ptr to pp_field for where output from spatial goe</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keywordtype">INTEGER</span> i,j                       <span class="comment">! loop variable</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keywordtype">INTEGER</span> data_size                 <span class="comment">! size of data.</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <span class="keywordtype">INTEGER</span> index_size</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      <span class="keywordtype">INTEGER</span> this_index_lev   <span class="comment">! index of input level</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="keywordtype">INTEGER</span> kl <span class="comment">! loop count for levels</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <span class="keywordtype">INTEGER</span> stash_list_start <span class="comment">! the start address in index_levs for lev</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      <span class="keywordtype">INTEGER</span> stash_list_end <span class="comment">! the end address in index_levs for levels</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      <span class="keywordtype">INTEGER</span> what_process <span class="comment">! what kind of processing is requested</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keywordtype">INTEGER</span> what_mask <span class="comment">! what mask is wanted.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="keywordtype">INTEGER</span> extra_start <span class="comment">! start address in fieldout for extra data</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      <span class="keywordtype">REAL</span> bdx,bzx,bdy,bzy <span class="comment">! grid descriptors</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;     &amp;  proc_start_x                                                    &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                        <span class="comment">! processor co-ords of processor at origin</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;     &amp;, proc_start_y                                                    &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                        <span class="comment">! (SW corner) of subarea</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;     &amp;, start_pe                                                        &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                        <span class="comment">! processor id of this processor</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;     &amp;, dummy1,dummy2                                                   &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                        <span class="comment">! unused return variables from</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">!                         GLOBAL_TO_LOCAL_RC</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;     &amp;, info            <span class="comment">! GCOM return variable</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;     &amp;  global_mean <span class="comment">! global mean returned by call to SPATIAL</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      <span class="keyword">COMMON</span> /mpp_static_var/ global_mean  <span class="comment">!must be memory aligned</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">!                                           to allow fast shmem</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">!L!L 1. Error checking</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">!  Check we are in fact doing a time series. Error if not.</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;MULTI_SPATIAL&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="keywordflow">IF</span> ((control(st_proc_no_code) /= st_time_series_code).and.        &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;     &amp;   (control(st_proc_no_code) /= st_time_series_mean)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        icode=<a class="code" href="namespacesterr__mod.xhtml#aed2797a79e113bcd5dfa2c506e8b5d13">st_unknown</a></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keyword">write</span>(errmssg,99)control(st_proc_no_code)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;99      <span class="keyword">format</span>(3<a class="code" href="namespaceregrid__types.xhtml#a7ca70352d6d7a250eb1f293e3801d767">x</a>,<span class="stringliteral">&#39;MULTI_SP : unexpected call to extract timeseries&#39;</span>,i5)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">goto</span> 999            <span class="comment">! jump to return</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">!L!L 2. Workout what kind of processing we are doing and what mask is used</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;       what_mask=mod(control(st_gridpoint_code),block_size)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;       what_process=control(st_gridpoint_code)-what_mask</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;       extraw=0</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">!L note that the first word in fieldout is assumed to be</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">!L the word where the first spatial domain mean for this timeseries</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">!L  will be stored</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">!L Next we compute the grid discriptors -- as used by extra data</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;       <span class="keywordflow">IF</span> (start_ts) <span class="keywordflow">THEN</span> <span class="comment">! compute grid descrip</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;         extraw=6*(no_records+1)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;         extra_start=control(st_output_length)-extraw+1</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">! DEPENDS ON: stash_comp_grid</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;         <span class="keyword">CALL </span><a class="code" href="stash__comp__grid_8f90.xhtml#aeed95e6638993f9d63c28229bce326e3" title="LL SUBROUTINE STASH_COMP_GRID!&gt;LL. ">stash_comp_grid</a>(bzx,bzy,bdx,bdy,0,st_grid,                &amp;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;     &amp;     1,1,real_hd,len_realhd,int_hd,len_inthd,extract_base+1,      &amp;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;     &amp;     icode,errmssg)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordflow">       ENDIF</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">!L 3. Set up pseudo STASH record to be passed to SPATIAL on each call</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">!L    to extract a sample from the input field.</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      fake_record(st_input_bottom)=control(st_input_bottom)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      fake_record(st_input_top)=control(st_input_top)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      fake_record(st_weight_code)=control(st_weight_code)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">! doing a field mean on this sub-domain with mask specified by control.</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      pp_ptr=1</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">!L!L 4. Loop over samples and extract global mean within subdomain for</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">!L    each, appending to output field</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      <span class="keywordflow">DO</span> i=1,no_records <span class="comment">! loop over sub domains</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        data_size=stash_series(series_size,i)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">!L 4.1 Do preliminary verifications on stash_series</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">!L 4.1.1 Gridtype code</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">IF</span> (stash_series(series_grid_type,i) /= series_grid_code) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">! NB: Latitude/longitude range conversion to gridpoint range needs to</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">!     be added</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;          icode=<a class="code" href="namespacesterr__mod.xhtml#a0a12269de14a27b7369a63fee081458c">st_not_supported</a></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;          errmssg=<span class="stringliteral">&#39;MULTI_SP : only support grid point processing&#39;</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;          <span class="keywordflow">goto</span> 999</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">!L!L 5. Set up the fake record domain info depending on what kind of</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">!L    &quot;primary&quot; processing is requested.</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">!L    As far as stash is concerned everything looks like a global mean</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">!L    here and it is just a question of setting up the fake record</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">!L    correctly.</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        fake_record(st_gridpoint_code)=                                 &amp;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;     &amp;    (stash_series(series_proc_code,i)/block_size)*block_size      &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;     &amp;      +what_mask</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keywordflow">IF</span> (what_process == extract_base) <span class="keywordflow">THEN</span> <span class="comment">! an extract</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;          fake_record(st_north_code)=stash_series(series_north,i)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;          fake_record(st_south_code)=stash_series(series_south,i)</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;          fake_record(st_west_code)= stash_series(series_west,i)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          fake_record(st_east_code)= stash_series(series_east,i)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;          stash_list_start=stash_series(series_list_start,i)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;          stash_list_end=stash_series(series_list_end,i)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;          fake_record(st_input_bottom)=stash_list_start</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;          fake_record(st_input_top)=stash_list_end</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keywordflow">ELSEIF</span> (what_process == zonal_mean_base) <span class="keywordflow">THEN</span> <span class="comment">! a zonal_mean</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;          fake_record(st_north_code)=stash_series(series_north,i)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;          fake_record(st_south_code)=stash_series(series_south,i)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;          fake_record(st_west_code)= control(st_west_code)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;          fake_record(st_east_code)= control(st_east_code)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;          stash_list_start=stash_series(series_list_start,i)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;          stash_list_end=stash_series(series_list_end,i)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;          fake_record(st_input_bottom)=stash_list_start</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;          fake_record(st_input_top)=stash_list_end</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">ELSEIF</span> (what_process == merid_mean_base) <span class="keywordflow">THEN</span> <span class="comment">! a merid_mean</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;          fake_record(st_north_code)= control(st_north_code)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;          fake_record(st_south_code)= control(st_south_code)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;          fake_record(st_east_code)=stash_series(series_east,i)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;          fake_record(st_west_code)=stash_series(series_west,i)</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;          stash_list_start=stash_series(series_list_start,i)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;          stash_list_end=stash_series(series_list_end,i)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;          fake_record(st_input_bottom)=stash_list_start</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;          fake_record(st_input_top)=stash_list_end</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">ELSEIF</span> (what_process == vert_mean_base) <span class="keywordflow">THEN</span> <span class="comment">! a vert_mean</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;          fake_record(st_north_code)=stash_series(series_north,i)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;          fake_record(st_south_code)=stash_series(series_south,i)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;          fake_record(st_east_code)=stash_series(series_east,i)</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;          fake_record(st_west_code)=stash_series(series_west,i)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;          stash_list_start=1</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;          stash_list_end=num_stash_levels</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;          fake_record(st_input_bottom)=stash_list_start</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;          fake_record(st_input_top)=stash_list_end</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keywordflow">ELSEIF</span> (what_process == field_mean_base) <span class="keywordflow">THEN</span> <span class="comment">! a field_mean</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;          fake_record(st_north_code)=control(st_north_code)</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;          fake_record(st_south_code)=control(st_south_code)</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;          fake_record(st_east_code)=control(st_east_code)</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;          fake_record(st_west_code)=control(st_west_code)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;          stash_list_start=1</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;          stash_list_end=num_stash_levels</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;          fake_record(st_input_bottom)=stash_list_start</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;          fake_record(st_input_top)=stash_list_end</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">ELSE</span> <span class="comment">! error code...</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;          icode=<a class="code" href="namespacesterr__mod.xhtml#a87933374e689177ab096fd22890c18ba">unknown_processing</a></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;          <span class="keyword">write</span>(errmssg,111) <span class="stringliteral">&#39;unknown processing option&#39;</span>,what_process</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;          <span class="keywordflow">goto</span> 999 <span class="comment">! jump to error return</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">!L Check record (south &gt; north and west &lt; east)</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keywordflow">IF</span> (fake_record(st_north_code) &lt;                                &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;     &amp;    fake_record(st_south_code))<span class="keywordflow">then</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;          <span class="keyword">write</span>(errmssg,101)fake_record(st_north_code),                 &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;     &amp;       fake_record(st_south_code),i</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;          icode=<a class="code" href="namespacesterr__mod.xhtml#a7e4e4e3504d9be4056f7df8c93cb0607" title="Error codes. ">st_bad_array_param</a></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;          <span class="keywordflow">goto</span> 999 <span class="comment">! error exit</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keywordflow">IF</span> (fake_record(st_west_code) &gt;                                 &amp;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;     &amp;    fake_record(st_east_code))<span class="keywordflow">then</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;          <span class="keyword">write</span>(errmssg,102)fake_record(st_west_code),                  &amp;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;     &amp;       fake_record(st_east_code),i</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;          icode=<a class="code" href="namespacesterr__mod.xhtml#a7e4e4e3504d9be4056f7df8c93cb0607" title="Error codes. ">st_bad_array_param</a></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;          <span class="keywordflow">goto</span> 999 <span class="comment">! error exit</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">! Determine which pe holds the first point of the subdomain, ie the</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">! bottom left hand corner [=SW], that SPATIAL will process.</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">! This is the pe used to gather all points of the subdomain and</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">! calculate their global mean in STGLOM before sending these to pe0</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">! for storage and output.</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">! DEPENDS ON: global_to_local_rc</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keyword">CALL </span><a class="code" href="global__to__local__rc_8f90.xhtml#a6bec1b86b17072ccc0424fa93a40fda9" title="Parallel UM : Transform from global to local co-ordinates: Parallel UM : Transform from global to loc...">global_to_local_rc</a>(gr,halo_type,                           &amp;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;     &amp;    fake_record(st_west_code),fake_record(st_south_code),         &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;     &amp;    proc_start_x, proc_start_y,                                   &amp;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;     &amp;    dummy1,dummy2)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        start_pe=proc_start_x+proc_start_y*nproc_x</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment">! NB: At present timeseries samples are global (ie. 3D) means, so</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">!     there is no levels loop outside the call to SPATIAL here !     this may be extended at some point to allow multi-level</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">!     timeseries sampling inside a levels loop</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">!     n_cols_out and n_rows_out are recalculated within SPATIAL but are</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">!     now appropriate for an individual timeseries sample, not the whole</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">!     field.  They are reset for the whole field after subdomain loop.</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        lcyclic=.false.</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        this_index_lev = 1     <span class="comment">! no (none) levels loop</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">! DEPENDS ON: spatial</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;       <span class="keyword">CALL </span><a class="code" href="spatial_8f90.xhtml#a1a8ed3040f333fb8eaffb10ae7545f55" title="LL Routine: SPATIAL -!&gt;LL. ">spatial</a>(fieldin,vx,vy,vz,gr,st_grid,                        &amp;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;     &amp;       fld_type,halo_type,                                        &amp;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;     &amp;       halo_x,halo_y,                                             &amp;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;     &amp;       lcyclic,lmasswt,                                           &amp;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;     &amp;       n_cols_out,n_rows_out,this_index_lev,                      &amp;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;     &amp;       level_list(stash_list_start),                              &amp;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;     &amp;       index_lev(stash_list_start),                               &amp;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;     &amp;       (stash_list_end+1-stash_list_start),                       &amp;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;     &amp;       no_of_levels_masswt,                                       &amp;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;     &amp;       p,pstar,                                                   &amp;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;     &amp;       cos_v_latitude,cos_theta_latitude,land,sea,                &amp;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;     &amp;       row_length,rows,n_rows,blsize(2,fld_type),model_levels,    &amp;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;     &amp;       global_mean,1,                                             &amp;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;     &amp;       fake_record,control_size,amdi,                             &amp;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;     &amp;       icode,errmssg)</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keywordflow">IF</span> (icode /= 0) <span class="keywordflow">goto</span> 999 <span class="comment">! got some error so jump to return</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">! Must move the global_mean data to PE 0 which stores all timeseries</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">! data</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">! (NB. This assumes that the output from SPATIAL is just a</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">!      single number)</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>  ==  start_pe) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;          info=gc_none</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;          <span class="keyword">CALL </span>gc_rsend(100,1,0,info,fieldout(pp_ptr),global_mean)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;          info=gc_none</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;          <span class="keyword">CALL </span>gc_rrecv(100,1,start_pe,info,                            &amp;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;     &amp;                  fieldout(pp_ptr),global_mean)</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;          fieldout(pp_ptr)=0.0</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        pp_ptr=pp_ptr+(n_cols_out*n_rows_out)  <span class="comment">! increment the pp_ptr</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">! NB: n_cols_out and n_rows_out should both be 1 as timeseries samples</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">!       are currently designed to be scalar quantities only.</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">!L check on n_cols_out and n_rows_out</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="keywordflow">IF</span> (n_cols_out /= 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;          errmssg=<span class="stringliteral">&#39;MULTI_SP : n_cols_out &lt;&gt; 1&#39;</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;          icode=<a class="code" href="namespacesterr__mod.xhtml#a0a12269de14a27b7369a63fee081458c">st_not_supported</a></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;          <span class="keywordflow">goto</span> 999</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="keywordflow">IF</span> (n_rows_out /= 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;          errmssg=<span class="stringliteral">&#39;MULTI_SP : n_rows_out &lt;&gt; 1&#39;</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;          icode=<a class="code" href="namespacesterr__mod.xhtml#a0a12269de14a27b7369a63fee081458c">st_not_supported</a></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;          <span class="keywordflow">goto</span> 999</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keywordflow">IF</span> (start_ts) <span class="keywordflow">THEN</span> <span class="comment">! put the descriptive info for this record</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">! DEPENDS ON: extra_make_vector</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;          <span class="keyword">CALL </span>extra_make_vector(fake_record,control_size,              &amp;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;     &amp;      i,no_records,fieldout(extra_start),extraw,bzx,bzy,bdx,bdy)</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="keywordflow">      ENDDO</span>   <span class="comment">! end the loop over sub-domains</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;      horiz_size=pp_ptr-1</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;      num_vert_levels=1</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">!L -!L 7. If this is the first time in a time-series then</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">!L     put the codes describing the extra data into the extra data fld</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">!L     In addition set pphoriz out to the total length</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">!L       as well as setting the input vetor to missing</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment">!L       where no values are set</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;       n_cols_out=no_records</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;       n_rows_out=control(st_period_code)/control(st_freq_code)</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;       horiz_size=n_cols_out</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;       <span class="keywordflow">IF</span> (start_ts) <span class="keywordflow">THEN</span>  <span class="comment">! on start timestep we have entire vector</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;         horiz_size=n_cols_out*n_rows_out+extraw</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">! DEPENDS ON: extra_ts_info</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;         <span class="keyword">CALL </span><a class="code" href="extra__ts__info_8f90.xhtml#ad9a20d1328cfa53d18c30a9d787090ab" title="LL -!&gt;LL Stash routine. ">extra_ts_info</a>(fieldout(extra_start),extraw,no_records)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;         <span class="keywordflow">do</span> i=no_records+1,extra_start-1</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;           fieldout(i)=amdi</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="keywordflow">         enddo</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;          <span class="keywordflow">DO</span> i=no_records+1,lenout</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            fieldout(i)=0.0</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="keywordflow">          ENDDO</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="keywordflow">       ENDIF</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;999   <span class="keywordflow">CONTINUE</span> <span class="comment">! jump here for error exit</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;111   <span class="keyword">FORMAT</span>(<span class="stringliteral">&#39;MULTI_SP :  &gt;&gt;&gt;FATAL ERROR &lt;&lt;&#39;</span>,a40,i5,i5)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;101   <span class="keyword">FORMAT</span>(<span class="stringliteral">&#39;MULTI_SP : north &lt; south&#39;</span>,2i5,<span class="stringliteral">&#39; in record &#39;</span>,i5)</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;102   <span class="keyword">FORMAT</span>(<span class="stringliteral">&#39;MULTI_SP : west &gt; east&#39;</span>,2i5,<span class="stringliteral">&#39;in record &#39;</span>,i5 )</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;MULTI_SPATIAL&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="multi__spatial_8f90.xhtml#ade4d2e0edcbb3c9113bf99c7f1f8341d" title="Routine: MULTI_SPATIAL -!&gt; ">multi_spatial</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
