<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/include/other/c_fort2c_2a.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b0856f6b0d80ccb263b2f415c91f9e17.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_4505daeba67b11d8c4f8b85497fb8236.xhtml">other</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">c_fort2c_2a.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="c__fort2c__2a_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef CFORT2C_2A_H</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define CFORT2C_2A_H</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">/* Description:                                                     */</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">/*                                                                  */</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">/* Definitions needed for Fortran to C Interface                    */</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">/*                                                                  */</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">/* Information:                                                     */</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">/*                                                                  */</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">/* Provides definitions needed for Fortran to C interface.          */</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">/* Declares variable type real to have the same wordlength          */</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">/* as a Fortran REAL data type, integer to have the same            */</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">/* wordlength as Fortran INTEGER data type.  Also provides          */</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">/* and interface for printing messages to stdout via the            */</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">/* definition CALL_MESSAGE_PRINT.                                   */</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#if defined(C_INT)</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/* Fortran INTEGER is equivalent to C int */</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">int</span> <a class="code" href="c__fort2c__2a_8h.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a>;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="c__fort2c__2a_8h.xhtml#a94318a4ea1a471b1cde307654587204c">u_integer</a>;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#elif defined(C_LONG_INT)</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">/* Fortran INTEGER is equivalent to C long int */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">int</span> <a class="code" href="c__fort2c__2a_8h.xhtml#a94318a4ea1a471b1cde307654587204c">u_integer</a>;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">long</span> <span class="keywordtype">int</span> <a class="code" href="c__fort2c__2a_8h.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a>;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#elif defined(C_LONG_LONG_INT)</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">/* Fortran INTEGER is equivalent to C long long int */</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> <span class="keywordtype">int</span> <a class="code" href="c__fort2c__2a_8h.xhtml#a94318a4ea1a471b1cde307654587204c">u_integer</a>;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> <span class="keywordtype">int</span> <a class="code" href="c__fort2c__2a_8h.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a>;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">/* DEFAULT: Fortran INTEGER is equivalent to C int */</span></div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="c__fort2c__2a_8h.xhtml#a94318a4ea1a471b1cde307654587204c">   32</a></span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="c__fort2c__2a_8h.xhtml#a94318a4ea1a471b1cde307654587204c">u_integer</a>;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="c__fort2c__2a_8h.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">   33</a></span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">int</span> <a class="code" href="c__fort2c__2a_8h.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a>;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">/* We cannot tell what type of data is being written since we might have </span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"> * packed data which is unsafe to be represented by a real datatype.  Using an</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"> * integer for um_data_t will allow us to not have to deal with unrepresentable</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> * bit patterns in floating point numbers.</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#if defined(FRL8)</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">/* Fortran REAL is equivalent to C double */</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">double</span> <a class="code" href="c__fort2c__2a_8h.xhtml#a031f8951175b43076c2084a6c2173410">real</a>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">typedef</span> <a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> <a class="code" href="c__fort2c__2a_8h.xhtml#a37403417beea25ea13a11ca4bb12659a">um_data_t</a>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">/* Fortran REAL is equivalent to C float */</span></div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="c__fort2c__2a_8h.xhtml#a031f8951175b43076c2084a6c2173410">   47</a></span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">float</span> <a class="code" href="c__fort2c__2a_8h.xhtml#a031f8951175b43076c2084a6c2173410">real</a>;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="c__fort2c__2a_8h.xhtml#a37403417beea25ea13a11ca4bb12659a">   48</a></span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">int</span> <a class="code" href="c__fort2c__2a_8h.xhtml#a37403417beea25ea13a11ca4bb12659a">um_data_t</a>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">/* Define the function that outputs the text string for          */</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">/* messages.  Note that the trailing newline character is        */</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">/* to be supplied by the print routine, and is no longer         */</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">/* in the string.  Similarly, leading new lines are now handled  */</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">/* by the print routine - typically a newline is inserted for    */</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">/* each change of unit.                                          */</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="c__fort2c__2a_8h.xhtml#a96207e4b40450e26909c380a8c14b493">   59</a></span>&#160;<span class="preprocessor">#define MAX_OUTSTR 384</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#if defined(IBM) || defined(XT4)</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#include&lt;string.h&gt;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">/* DEPENDS ON : print_from_c.o */</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keywordtype">void</span> <a class="code" href="print__from__c_8f90.xhtml#ae720924c863e485c1ab44a0c194bcf0d" title="Routine: PR_F_C1A!&gt; ">print_from_c</a>(<a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> *, <span class="keywordtype">char</span> [], <span class="keywordtype">size_t</span>); </div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#define CALL_MESSAGE_PRINT(text) \</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor"> print_from_c(the_unit,text,strlen(text))</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">void</span> print_from_c_(<a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> *, <span class="keywordtype">char</span> [], <span class="keywordtype">size_t</span>); </div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#define CALL_MESSAGE_PRINT(text) \</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor"> print_from_c_(the_unit,text,strlen(text))</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordtype">void</span> PRINT_FROM_C(<a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> *, <span class="keywordtype">char</span> [], <span class="keywordtype">size_t</span>); </div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#define CALL_MESSAGE_PRINT(text) \</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor"> PRINT_FROM_C(the_unit,text,strlen(text))</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="c__fort2c__2a_8h.xhtml#a4e5eb0357202094964fd7f4fe5ad9eab">   78</a></span>&#160;<span class="preprocessor">#define CALL_MESSAGE_PRINT(text) fprintf(stdout, &quot;%s\n&quot;, text)</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">/* End C_FORT2C                                                    */</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor">#endif</span></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
