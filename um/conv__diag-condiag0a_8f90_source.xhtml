<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/conv_diag-condiag0a.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">conv_diag-condiag0a.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="conv__diag-condiag0a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceconv__diag__0a__mod.xhtml">    1</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceconv__diag__0a__mod.xhtml">conv_diag_0a_mod</a></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespaceconv__diag__0a__mod.xhtml#a77a925217d0eae538e590ec90b42d802" title="Diagnosis of convective occurrence and type. ">conv_diag_0a</a>(                                          &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;!&gt; IN values defining field dimensions and subset to be processed :</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  row_length, rows                                                &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;!&gt; IN values defining vertical grid of model atmosphere :</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;, bl_levels, model_levels, wet_model_levels                       &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;, land_points                                                     &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;, p, p_theta_lev,exner_rho                                        &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;, rho_only, rho_theta, z_full, z_half                             &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;!&gt; IN Model switches</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;, l_mixing_ratio,l_ctile, l_extra_call                            &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;, no_cumulus                                                      &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;!&gt; IN Cloud data :</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;, qcf, qcl, cloud_fraction                                        &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;!&gt; IN everything not covered so far :</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;, pstar, q, theta, exner_theta_levels, u_p, v_p, u_0_p, v_0_p     &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;, tstar_land, tstar_sea, tstar_sice, z0msea                       &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;, l_flux_bc, flux_e, flux_h, l_spec_z0, z0m_scm, z0h_scm          &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;, tstar, land_mask, flandg, ice_fract, timestep                   &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;, w_copy, w_max                                                   &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;, deep_flag, past_precip, past_conv_ht                            &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;!&gt; SCM Diagnostics (dummy values in full UM)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;, nscmdpkgs,l_scmdiags                                            &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;, zh,zhpar,dzh,z_lcl,z_lcl_uv,delthvu,ql_ad,ntml,ntpar,nlcl       &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;, cumulus, l_shallow,l_congestus, l_congestus2, conv_type, cin    &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;, cape, wstar, wthvs, entrain_coef, qsat_lcl                      &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;, error                                                           &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; )</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="namespaceconv__diag__0a__mod.xhtml#a77a925217d0eae538e590ec90b42d802">   44</a></span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">, ONLY</span>:                                    &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  pdims, pdims_s, tdims_s, tdims, qdims, wdims</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacelevel__heights__mod.xhtml" title="Constants necessary for model level heights in advection and other schemes. Constants necessary for m...">level_heights_mod</a><span class="keywordtype">, ONLY</span>: &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>             &amp;  <span class="comment">! Radii on theta levels (m)</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; ,r_rho_levels                  <span class="comment">! Radii on rho levels (m)</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>:                                      &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  cp, kappa, r, repsilon, c_virtual</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: lc, lf, tm</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g, earth_radius</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor"></span><span class="keywordtype">USE </span><a class="code" href="namespaces__scmop__mod.xhtml">s_scmop_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>                                   &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5a13db9f3d2b54dc7f02f3fa3fc19ece">t_max</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a45eef9702d217d7da71dcf394198f2d6">t_min</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5a6f815019b3004ecc7040ec4b4d1fd4">t_acc</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a597140e5cb551f5f4651c9b4cd534865">t_div</a>, <a class="code" href="namespaces__scmop__mod.xhtml#acfaa64e6b4c579d708188c5774d8ac7d">t_mult</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a58d068616503a332fdbc2e4c7bb9f23b">t_acc_div</a>         &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#acaad14680fec34a8c1c206ebeb34d239">t_acc_mult</a>, <a class="code" href="namespaces__scmop__mod.xhtml#ab61b1909fcdb9b3f9552d14f2f8839fe">t_const</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a25166a280622f5787108c0078a033004">only_radsteps</a>                                   &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a9e42893fdbe56b604355689cd9248c63">d_sl</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5914c497075c8cbd0e5cd1d211e1a123">d_soilt</a>, <a class="code" href="namespaces__scmop__mod.xhtml#ad97dd1acaa61800db9233ae60f5b1e84">d_bl</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a1462f6faadb6334b311e602285d8a286">d_soilm</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a80fd65616a49171a9ac7ecac7338d70a">d_tile</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a92a2c3b6b4b2b0dd800234719ca7207b">d_vis</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>   &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a11d031129d23dbffdab391dd303cdd08">d_allxtra</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5de685a17fc8f67d938e5982544ec05f">d_land</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a049e4924fd63af8676e1697fcde11654">d_cloud</a>                                           &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a6ff96781019d621303b6d86d6d2486a5">scmdiag_gen</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5564776c9d09d933db80c6c1c3c47b3d">scmdiag_rad</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a6099058c886f9254fabef330fa2caedd">scmdiag_bl</a>,   <a class="code" href="namespaces__scmop__mod.xhtml#aa95516bacfa8a4f2932fc3e17f5f6b65">scmdiag_surf</a>,  <a class="code" href="namespaces__scmop__mod.xhtml#a89d9b3531f7c5739e1d9b9edf0583d58">scmdiag_land</a>  &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a762d12a388196f9c5a907e8090d18e3a">scmdiag_sea</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a40ccacb1e960d2ef3da728d637e5ebe2">scmdiag_lsp</a>, <a class="code" href="namespaces__scmop__mod.xhtml#abf142f0f2bdc021960cf0c6a5ecd065b">scmdiag_conv</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a73ce0babd803e10fbcb82921346b3ccc">scmdiag_lscld</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a2b946f89404f7668eb56ca960c3c3de6">scmdiag_pc2</a>   &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a61abfb55fdd33cfc5d44f00076f252c8">scmdiag_forc</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a8a1879aca60631ef706c8ce42618ced6">scmdiag_incs</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a765b6df27a911737054c8df3c0746c15">scmdiag_gwd</a></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor"></span><span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceconv__surf__flux__mod.xhtml">conv_surf_flux_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceconv__surf__flux__mod.xhtml#a8204c4be1078f5efd8ae3367d03b40d2" title="Calculate surface fluxes for convective diagnosis. ">conv_surf_flux</a></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacefield__types.xhtml">field_types</a></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  row_length            &amp; <span class="comment">! Local number of points on a row</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; ,rows                    <span class="comment">! Local number of rows in a theta field</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">! (b) Defining vertical grid of model atmosphere.</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  bl_levels            &amp; <span class="comment">! Max. no. of &quot;boundary&quot; levels allowed.</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; ,model_levels         &amp; <span class="comment">! number of model levels</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; ,wet_model_levels     &amp; <span class="comment">! number of wet model levels</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; ,land_points            <span class="comment">! number of land points</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                          &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  p(pdims_s%i_start:pdims_s%i_end,           &amp; <span class="comment">! pressure  on rho levels (Pa)</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    pdims_s%j_start:pdims_s%j_end,           &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    pdims_s%k_start:pdims_s%k_end)           &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; ,p_theta_lev(tdims%i_start:tdims%i_end,     &amp; <span class="comment">! P on theta lev (Pa)</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;              tdims%j_start:tdims%j_end,     &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                          1:tdims%k_end)     &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; ,exner_rho(pdims_s%i_start:pdims_s%i_end,   &amp; <span class="comment">! Exner on rho level</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            pdims_s%j_start:pdims_s%j_end,   &amp; <span class="comment">!</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            pdims_s%k_start:pdims_s%k_end)   &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; ,rho_only(row_length,rows,1:pdims%k_end)    &amp; <span class="comment">! density (kg/m3)</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; ,rho_theta(row_length,rows,1:tdims%k_end-1) &amp; <span class="comment">! rho th lev (kg/m3)</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; ,z_full(row_length,rows,1:tdims%k_end)      &amp; <span class="comment">! height th lev (m)</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; ,z_half(row_length,rows,1:pdims%k_end)        <span class="comment">! height rho lev (m)</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> ::   &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  l_mixing_ratio        &amp; <span class="comment">! true moisture input as mixing ratios</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                          <span class="comment">! false moisture input as specific humidity</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; ,l_ctile               &amp; <span class="comment">! true if coastal tiling</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; ,l_flux_bc             &amp; <span class="comment">! true if SCM using specified surface fluxes</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; ,l_spec_z0             &amp; <span class="comment">! true if roughness length has been specified</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; ,l_extra_call            <span class="comment">! true this is an additional call to conv_diag</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                          <span class="comment">! within a timestep</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> ::   &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  no_cumulus(row_length,rows)   <span class="comment">! Points overruled by BL</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">! (c) Cloud data.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                          &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  qcf(qdims%i_start:qdims%i_end,             &amp; <span class="comment">! Cloud ice (kg per kg air)</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      qdims%j_start:qdims%j_end,             &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                  1:qdims%k_end)             &amp;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; ,qcl(qdims%i_start:qdims%i_end,             &amp; <span class="comment">!Cloud liquid water (kg/kg air)</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      qdims%j_start:qdims%j_end,             &amp;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                  1:qdims%k_end)             &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; ,cloud_fraction(qdims%i_start:qdims%i_end,  &amp; <span class="comment">!  Cloud fraction</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                 qdims%j_start:qdims%j_end,  &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                             1:qdims%k_end)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">! (d) Atmospheric + any other data not covered so far, incl control.</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                             &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  pstar(row_length, rows)                       &amp; <span class="comment">! Surface pressure (Pa)</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; ,q(qdims%i_start:qdims%i_end,                  &amp; <span class="comment">! water vapour (kg/kg)</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    qdims%j_start:qdims%j_end,                  &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                1:qdims%k_end)                  &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; ,theta(tdims%i_start:tdims%i_end,              &amp; <span class="comment">! Theta (Kelvin)</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        tdims%j_start:tdims%j_end,              &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                    1:tdims%k_end)              &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; ,exner_theta_levels(tdims%i_start:tdims%i_end, &amp; <span class="comment">! exner pressure theta lev</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                     tdims%j_start:tdims%j_end, &amp; <span class="comment">!  (Pa)</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                 1:tdims%k_end)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::            &amp;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  u_p(row_length, rows)        &amp; <span class="comment">! U(1) on P-grid.</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; ,v_p(row_length, rows)        &amp; <span class="comment">! V(1) on P-grid.</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; ,u_0_p(row_length,rows)       &amp; <span class="comment">! W&#39;ly component of surface current</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                                 <span class="comment">!    (metres per second) on P-grid.</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; ,v_0_p(row_length,rows)       &amp; <span class="comment">! S&#39;ly component of surface current</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                                 <span class="comment">!    (metres per second) on P-grid.</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; ,flux_e(row_length,rows)      &amp; <span class="comment">! Specified surface</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                 <span class="comment">!    latent heat flux (W/m^2)</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; ,flux_h(row_length,rows)      &amp; <span class="comment">! Specified surface</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                                 <span class="comment">!    sensible heat fluxes (in W/m2)</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; ,z0msea(row_length,rows)      &amp; <span class="comment">! Sea roughness length for momentum (m)</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; ,z0m_scm(row_length,rows)     &amp; <span class="comment">! Namelist input z0m (if &gt;0)</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; ,z0h_scm(row_length,rows)       <span class="comment">! Namelist input z0h (if &gt;0)</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  tstar_land(row_length, rows) &amp; <span class="comment">! Surface T on land</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; ,tstar_sea(row_length, rows)  &amp; <span class="comment">! Surface T on sea</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; ,tstar_sice(row_length, rows)   <span class="comment">! Surface T on sea-ice</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::    &amp;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  tstar(row_length,rows)    <span class="comment">! Surface temperature (= top soil layer temperature)</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                            <span class="comment">! (K). NOTE only inout for SCM</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> ::         &amp;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  land_mask(row_length, rows)   <span class="comment">! T If land, F Elsewhere.</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::            &amp;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  flandg(pdims_s%i_start:pdims_s%i_end, &amp; <span class="comment">! Land fraction of gridbox</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;         pdims_s%j_start:pdims_s%j_end) &amp; <span class="comment">! on all points</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; ,ice_fract(row_length,rows)              <span class="comment">! fraction of sea that has ice</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                  &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  timestep                           &amp; <span class="comment">! timestep (seconds).</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; ,w_copy(wdims%i_start:wdims%i_end,  &amp; <span class="comment">! vertical velocity W (m/s)</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;         wdims%j_start:wdims%j_end,  &amp;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                     0:wdims%k_end)  &amp; <span class="comment">! Not exact match to module values</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160; ,w_max(row_length,rows)               <span class="comment">! Column max vertical velocity (m/s)</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::              &amp;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  deep_flag(row_length,rows)     &amp; <span class="comment">! 0-1.0, 1 if deep last time step</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; ,past_precip(row_length,rows)   &amp; <span class="comment">! convective precip rate last step</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                                   <span class="comment">! or a decayed value.</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; ,<a class="code" href="arg__atm__fields_8h.xhtml#ac2ab80216560d9dc65b389939071ab64">past_conv_ht</a>(row_length,rows)    <span class="comment">! convective height (m)</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">! Additional variables for SCM diagnostics which are dummy in full UM</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  &amp;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  nscmdpkgs               <span class="comment">! No of diagnostics packages</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> ::   &amp;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  l_scmdiags(nscmdpkgs)   <span class="comment">! Logicals for diagnostics packages</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::         &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  zh(row_length,rows)            <span class="comment">! Height above surface of top</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                                 <span class="comment">!  of boundary layer (metres).</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::             &amp;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  zhpar(row_length,rows)         &amp; <span class="comment">! Height of max parcel ascent (m)</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; ,dzh(row_length,rows)           &amp; <span class="comment">! Height of inversion top (m)</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; ,z_lcl(row_length,rows)         &amp; <span class="comment">! Height of lifting condensation</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                   <span class="comment">! level  (m)</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; ,z_lcl_uv(row_length,rows)      &amp; <span class="comment">! Height of lifting condensation</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                   <span class="comment">! level on uv grid (m) (Not set 0A scheme)</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; ,delthvu(row_length,rows)       &amp; <span class="comment">! Integral of undilute parcel buoyancy</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                                   <span class="comment">! over convective cloud layer</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                                   <span class="comment">! (for convection scheme)</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; ,ql_ad(row_length,rows)         &amp; <span class="comment">! adiabatic liquid water content at</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                   <span class="comment">! inversion or cloud top (kg/kg) (Not 0A)</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; ,entrain_coef(row_length,rows)  &amp; <span class="comment">! Entrainment coefficient        (Not 0A)</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; ,qsat_lcl(row_length,rows)      &amp; <span class="comment">! qsat at cloud base (kg/kg)     (Not 0A)</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; ,cape(row_length, rows)         &amp; <span class="comment">! CAPE from parcel ascent (m2/s2)</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; ,cin(row_length, rows)            <span class="comment">! CIN from parcel ascent (m2/s2)</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> ::      &amp;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  ntml(row_length,rows)      &amp; <span class="comment">! Number of model levels in the</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                               <span class="comment">! turbulently mixed layer.</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; ,ntpar(row_length,rows)     &amp; <span class="comment">! Max levels for parcel ascent</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; ,nlcl(row_length,rows)        <span class="comment">! No. of model layers below the</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                               <span class="comment">! lifting condensation level.</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(OUT)</span> ::         &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  cumulus(row_length,rows)     &amp; <span class="comment">! Logical indicator for convection</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; ,l_shallow(row_length,rows)   &amp; <span class="comment">! Logical indicator for shallow Cu   (Not 0A)</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160; ,l_congestus(row_length,rows) &amp; <span class="comment">! Logical indicator for congestus Cu (Not 0A)</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; ,l_congestus2(row_length,rows)  <span class="comment">! Logical ind 2 for congestus Cu     (Not 0A)</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">! Required for extra call to conv_diag as values from original BL call</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">! may return zero values based on initial timestep profiles. (Not 0A)</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::    &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  wstar(row_length,rows)  &amp; <span class="comment">! Convective sub-cloud velocity scale (m/s)</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; ,wthvs(row_length,rows)    <span class="comment">! surface flux of wthv (K m/s)</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> :: &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  error                     <span class="comment">! 0 - no error in this routine</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">! Redundant arguments</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">! ! Convective type array ::</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  conv_type(row_length, rows)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">! Variables defined locally</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">! NOTE - compression arrays are defined for row_length*rows though only</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">!        nunstable points are used. Memory could be reduced by using</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">!        ALLOCATE. Less memory may be required if we did not use compression</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">!        in the first place as some arrays are copies.</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">!        Compression is being done as it speeds up some of the code.</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keywordtype">CHARACTER(LEN=*)</span>, <span class="keywordtype">PARAMETER</span> ::  routinename = <span class="stringliteral">&#39;conv_diag_0a&#39;</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keywordtype">INTEGER</span> ::   &amp;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  i,j,ii     &amp; <span class="comment">! Local Loop counter (horizontal field index).</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; ,k          &amp; <span class="comment">! Locla Loop counter (vertical level index).</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; ,nunstable    <span class="comment">! total number of unstable points</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keywordtype">INTEGER</span> :: &amp;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  index_i(row_length*rows)   &amp; <span class="comment">! column number of unstable points</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; ,index_j(row_length*rows)     <span class="comment">! row number of unstable points</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">! uncompressed arrays - all points</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordtype">REAL</span> ::                         &amp;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  fb_surf(row_length, rows)       <span class="comment">! Change in theta_v from surface</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                  <span class="comment">! to layer 1 (note diff from BL)</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="keywordtype">REAL</span>  ::                        &amp;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  tv1_sd( row_length*rows)      &amp; <span class="comment">! Approx to standard dev of level</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                                  <span class="comment">! 1 virtual temperature (K).</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160; ,bl_vscale2(row_length*rows)   &amp; <span class="comment">! Velocity scale squared for                                  ! boundary layer eddies (m2/s2)</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160; ,flandg_c(row_length*rows)       <span class="comment">! fraction of land compressed</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="preprocessor"></span><span class="comment">! Declare arrays for scm diagnostics</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordtype">REAL</span> ::                                                              &amp;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  rout(row_length,rows)                                              &amp;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160; ,rout2d(row_length,rows,1:tdims%k_end)</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">! Mixing ratio, r,  versus specific humidity, q</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">! In most cases the expression to first order are the same</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">!  Tl = T - (lc/cp)qcl - [(lc+lf)/cp]qcf</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">!  Tl = T - (lc/cp)rcl - [(lc+lf)/cp]rcf  - equally correct definition</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">! thetav = theta(1+cvq)         accurate</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">!        = theta(1+r/repsilon)/(1+r) ~ theta(1+cvr) approximate</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">! svl = (Tl+gz/cp)*(1+(1/repsilon-1)qt)</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">!     ~ (Tl+gz/cp)*(1+(1/repsilon-1)rt)</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">! dqsat/dT = repsilon*Lc*qsat/(R*T*T)</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">! drsat/dT = repsilon*Lc*rsat/(R*T*T)  equally approximate</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">! Only altering the expression for vapour pressure</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">!  e = qp/repsilon       - approximation</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">!  e = rp/(repsilon+r)   - accurate</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CONV_DIAG_0A&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment">! 1.0 Initialisation</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;error = 0</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">! 1.1 Verify grid/subset definitions.</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="keywordflow">IF</span> ( bl_levels &lt;  1 .OR. rows &lt;  1 .OR. tdims%k_end &lt;  1 .OR.    &amp;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;     qdims%k_end &lt;  1 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;  error = 1</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">! 1.2 initialisation of output arrays</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;  <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    cumulus(i,j)     = .false.</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    l_shallow(i,j)   = .false.</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="comment">! set false as not used if no convection</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    l_congestus(i,j) = .false.</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    l_congestus2(i,j) = .false.</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="comment">! Requried by Boundary layer scheme</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    ntml(i,j) = 1</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    nlcl(i,j) = 1</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="comment">! Only used in this routine as no convection call and no convection</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="comment">! and no call to stash for section 5.</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    delthvu(i,j) = 0.0</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    ql_ad(i,j)    = 0.0</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    cape(i,j)     = 0.0</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    cin(i,j)      = 0.0</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="comment">! required by Boundary layer scheme</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    z_lcl(i,j) = z_half(i,j,nlcl(i,j)+1)</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="comment">! set to zero as not used</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    z_lcl_uv(i,j) = 0.0</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    zhpar(i,j)    = 0.0          <span class="comment">! set to zero    dzh(i,j)      =-9.9E9        ! initialise to large and negative    entrain_coef(i,j) = -99.0    ! indicates not set</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    ntpar(i,j) = 1</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="comment">! Calculation of surface buoyancy flux and level one standard deviation</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment">! of virtual temperature.</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceconv__surf__flux__mod.xhtml#a8204c4be1078f5efd8ae3367d03b40d2" title="Calculate surface fluxes for convective diagnosis. ">conv_surf_flux</a>(                                              &amp;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;  row_length, rows                                                &amp;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;, model_levels, wet_model_levels, land_points                     &amp;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;, l_mixing_ratio,l_ctile, l_flux_bc, l_spec_z0                    &amp;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;, land_mask                                                       &amp;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;, pstar, tstar_land, tstar_sea, tstar_sice, zh, flandg            &amp;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;, ice_fract, u_p, v_p, u_0_p, v_0_p                               &amp;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;, flux_e, flux_h,  z0msea, z0m_scm, z0h_scm                       &amp;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;, z_full, q, theta, exner_theta_levels                            &amp;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;, tstar, fb_surf, tv1_sd, bl_vscale2 )</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="comment">! 2.0 Decide on unstable points  ( fb_surf &gt; 0.0 )</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="comment">!     Only work on these points for the rest of the calculations.</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;nunstable = 0           <span class="comment">! total number of unstable points</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;  <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <span class="keywordflow">IF</span> ( fb_surf(i,j)  &gt;   0.0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;      nunstable = nunstable + 1</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;      index_i(nunstable) = i</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;      index_j(nunstable) = j</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">! I</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="keywordflow">END DO</span> <span class="comment">! J</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment">! land fraction on just unstable points</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="keywordflow">IF</span> (nunstable &gt; 0) <span class="keywordflow">THEN</span>  <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    i = index_i(ii)      j = index_j(ii)      flandg_c(ii) = flandg(i,j)</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment">! Work on just unstable points to diagnose whether convective.</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment">! DEPENDS ON: conv_diag_comp_0a</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;  <span class="keyword">CALL </span><a class="code" href="conv__diag__comp-0a_8f90.xhtml#a78a8fa44cacc398f731b165c2f466a1f" title="To diagnose convective occurrence and type. ">conv_diag_comp_0a</a>(                                               &amp;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;          row_length, rows                                              &amp;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        , bl_levels, tdims%k_end, qdims%k_end, nunstable                &amp;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        , index_i, index_j                                              &amp;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        , l_mixing_ratio                                                &amp;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        , p, p_theta_lev, exner_rho                                     &amp;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        , rho_only, rho_theta, z_full, z_half                           &amp;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        , qcf, qcl, cloud_fraction                                      &amp;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        , pstar, q, theta, exner_theta_levels                           &amp;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        , land_mask, flandg_c, timestep                                 &amp;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        , w_copy ,w_max, tv1_sd, bl_vscale2                             &amp;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        , deep_flag, past_precip, <a class="code" href="arg__atm__fields_8h.xhtml#ac2ab80216560d9dc65b389939071ab64">past_conv_ht</a>                          &amp;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        , nscmdpkgs, l_scmdiags                                         &amp;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        , ntml, ntpar, nlcl                                             &amp;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        , cumulus, l_shallow, l_congestus, l_congestus2, conv_type      &amp;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        , zh,zhpar,dzh,z_lcl,z_lcl_uv,delthvu,ql_ad                     &amp;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        , cin, cape,entrain_coef                                        &amp;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        , qsat_lcl                                                      &amp;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;          )</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;  <span class="comment">! Reset zh as done in conv_diag_comp for all points</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      zh(i,j) = z_half(i,j,2)</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="keywordflow">       END IF</span>        <span class="comment">! unstable points only</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">! SCM output</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment">!  SCM Diagnostics for no unstable points!  Unstable diagnostics are output from conv_diag_comp but this routine!  is not called for stable points so null (zero values) are output from</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">!  this routine for stable points.</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="keywordflow">IF</span> (nunstable == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;  <span class="keywordflow">IF</span> (l_scmdiags(<a class="code" href="namespaces__scmop__mod.xhtml#abf142f0f2bdc021960cf0c6a5ecd065b">scmdiag_conv</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="comment">! Zero output    rout(:,:)=0.0</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    rout2d(:,:,:) = 0.0</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <span class="comment">! Single level fields</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout, <span class="stringliteral">&#39;k_plume&#39;</span>                                      &amp;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;       , <span class="stringliteral">&#39;model level for parcel start&#39;</span>,<span class="stringliteral">&#39; &#39;</span>                             &amp;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;       , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout, <span class="stringliteral">&#39;qw_plume&#39;</span>                                     &amp;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;       , <span class="stringliteral">&#39;initial parcel water&#39;</span>,<span class="stringliteral">&#39;kg/kg&#39;</span>                                 &amp;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;       , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout, <span class="stringliteral">&#39;sl_plume&#39;</span>                                     &amp;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;       , <span class="stringliteral">&#39;initial parcel energy&#39;</span>,<span class="stringliteral">&#39;J&#39;</span>                                    &amp;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;       , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    <span class="comment">! Multi-level fields</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout2d, <span class="stringliteral">&#39;buoy_undil&#39;</span>                                 &amp;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;       , <span class="stringliteral">&#39;parcel buoyancy -undilute&#39;</span>,<span class="stringliteral">&#39;K&#39;</span>                                &amp;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;       , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename) </div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout2d, <span class="stringliteral">&#39;t_parc_undil&#39;</span>                               &amp;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;       , <span class="stringliteral">&#39;Undilute Parcel temperature&#39;</span>,<span class="stringliteral">&#39;K&#39;</span>                              &amp;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;       , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! L_SCMDiags(SCMDiag_conv)</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;  <span class="keywordflow">IF</span> (l_scmdiags(<a class="code" href="namespaces__scmop__mod.xhtml#a6099058c886f9254fabef330fa2caedd">scmdiag_bl</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    rout2d(:,:,:) = 0.0</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout2d,<span class="stringliteral">&#39;thv_par&#39;</span>                                     &amp;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;       , <span class="stringliteral">&#39;thetav parcel&#39;</span>,<span class="stringliteral">&#39;K&#39;</span>                                            &amp;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;       , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout2d,<span class="stringliteral">&#39;thv_env&#39;</span>                                     &amp;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;       , <span class="stringliteral">&#39;Environment thetav&#39;</span>,<span class="stringliteral">&#39;K&#39;</span>                                       &amp;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;       , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! L_SCMDiags(SCMDiag_bl)</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="keywordflow">END IF</span>   <span class="comment">!  nunstable == 0</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;-<span class="comment">! SCM Diagnostics always present</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;-<span class="comment">! SCM always present</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="keywordflow">IF</span> (l_scmdiags(<a class="code" href="namespaces__scmop__mod.xhtml#abf142f0f2bdc021960cf0c6a5ecd065b">scmdiag_conv</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;  <span class="comment">! Single-level fields</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;  <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;  <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(delthvu,<span class="stringliteral">&#39;delthvu&#39;</span>                                      &amp;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;     , <span class="stringliteral">&#39;CAPE from conv_diag&#39;</span>,<span class="stringliteral">&#39;J&#39;</span>                                        &amp;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;     , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;  <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;  <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(z_lcl,<span class="stringliteral">&#39;z_lcl&#39;</span>                                          &amp;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;     , <span class="stringliteral">&#39;LCL height&#39;</span>,<span class="stringliteral">&#39;m&#39;</span>                                                 &amp;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;     , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;  <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;  <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(cin,<span class="stringliteral">&#39;cin&#39;</span>                                              &amp;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;     , <span class="stringliteral">&#39;undilute parcel CIN&#39;</span>,<span class="stringliteral">&#39; &#39;</span>                                        &amp;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;     , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;  <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;  <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(cape,<span class="stringliteral">&#39;cape&#39;</span>                                            &amp;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;     , <span class="stringliteral">&#39;undilute parcel CAPE&#39;</span>,<span class="stringliteral">&#39; &#39;</span>                                       &amp;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;     , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;  <span class="comment">! Multi-level fields</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;  <span class="keywordflow">DO</span> k=1,tdims%k_end</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;      <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        rout2d(i,j,k) = theta(i,j,k) * exner_theta_levels(i,j,k)</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;         <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;  <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout2d,<span class="stringliteral">&#39;t_cdiag&#39;</span>                                       &amp;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;     , <span class="stringliteral">&#39;temperature cond_diag&#39;</span>,<span class="stringliteral">&#39;K&#39;</span>                                      &amp;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;     , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;  <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;  <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(q,<span class="stringliteral">&#39;q_cdiag&#39;</span>                                            &amp;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;     , <span class="stringliteral">&#39;q cond_diag&#39;</span>,<span class="stringliteral">&#39;kg/kg&#39;</span>                                            &amp;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;     , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;<span class="preprocessor"></span>-</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;9999   <span class="keywordflow">CONTINUE</span>  <span class="comment">! Branch for error exit.</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CONV_DIAG_0A&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespaceconv__diag__0a__mod.xhtml#a77a925217d0eae538e590ec90b42d802" title="Diagnosis of convective occurrence and type. ">conv_diag_0a</a></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceconv__diag__0a__mod.xhtml">conv_diag_0a_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
