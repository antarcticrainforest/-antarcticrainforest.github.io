<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/dump_io/readflds.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_dc377c3c325b720b1e9a3b21c5b1edf6.xhtml">dump_io</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">readflds.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="readflds_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="readflds_8f90.xhtml#a5bf07e72f8a7b10c3dc7a5c6ce2f2593" title="Reads in a number of fields from UM format file. ">readflds</a>(nftin, number_of_fields,                      &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                    first_field,lookup,len1_lookup_arg,           &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                    d1,disused,fixhd,                             &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;#if defined(CONVIEEE) || defined(CUMF) || defined(PUMF)                \</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="readflds_8f90.xhtml#a5bf07e72f8a7b10c3dc7a5c6ce2f2593">   13</a></span>&#160; || defined(varopsver) || defined(<a class="code" href="makebc_8f90.xhtml#aad3dcc5934fd611a5fc18e3c568bb479" title="Subroutine MAKEBC : Creates a boundary dataset from model dumps. ">makebc</a>)</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;                    expand,                                       &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor"></span>                    icode,cmessage)</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a>    use um_parvars</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacerimtypes.xhtml" title="This file belongs in section: MPP. ">rimtypes</a></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacelbc__mod.xhtml" title="This file belongs in section: MPP. ">lbc_mod</a></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecppxref__mod.xhtml" title="Code Owner: See Unified Model Code Owners HTML page. ">cppxref_mod</a><span class="keywordtype">, ONLY</span>:                                             &amp;    <a class="code" href="namespacecppxref__mod.xhtml#a92932120a5316135ed39321fd93d34eb">ppx_grid_type</a>,<a class="code" href="namespacecppxref__mod.xhtml#a87f5601b500940f0dac2b738bc36a718">ppx_halo_type</a>,                                   &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#ab16b2f9d028e49ff82eaacd581e61312">ppx_atm_rim</a>,<a class="code" href="namespacecppxref__mod.xhtml#ae96aac89eee231d15583208a76c22d50">ppx_wam_rim</a>,                                       &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#a1304868a5faa8c9d88f340924063d659">ppx_atm_lbc_orog</a>,<a class="code" href="namespacecppxref__mod.xhtml#ac9d6e3c5870b390dc64ded5f768c3295">ppx_atm_compressed</a>,                           &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#af57185f8bd6471c59e021839b65568ee">ppx_atm_tall</a>,<a class="code" href="namespacecppxref__mod.xhtml#ac431b87d080e44fd0bffdd4a9119d921">ppx_atm_cuall</a>,<a class="code" href="namespacecppxref__mod.xhtml#a6fc3b22758e9414eceae30e1acc84e3d">ppx_atm_cvall</a></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  nftin                                                           &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                         <span class="comment">! IN: unit number to read data from</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;, number_of_fields                                                &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                         <span class="comment">! IN: number of fields to read in</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;, first_field                                                     &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                         <span class="comment">! IN: first field to read in</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;, len1_lookup_arg                                                 &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                         <span class="comment">! IN: first dimension of LOOKUP table</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;, lookup(len1_lookup_arg,*)                                       &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                         <span class="comment">! IN: lookup table starting at field 1</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;, disused                                                         &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                         <span class="comment">! IN: Not used since move to MPP</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;, fixhd(*)                                                        &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                         <span class="comment">! IN: fixed length header</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;, expand                                                          &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                         <span class="comment">! IN: (=1 if WGDOS or RLE packed data</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                         <span class="comment">!      is to be expanded)</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                         <span class="comment">! Only used for small execs etc</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;, icode                  <span class="comment">! OUT: return code</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  d1(*)                  <span class="comment">! OUT: array to return the data in</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keywordtype">CHARACTER(LEN=80)</span>                                                      &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  cmessage               <span class="comment">! OUT: Error message if ICODE &lt;&gt; 0</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;d1_addr.h&quot;</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typsize.h&quot;</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: fh_lookupsize2 = 152</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  k                                                               &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                         <span class="comment">! loop over fields to read in</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;, d1_off                                                          &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                         <span class="comment">! local offset into D1 for this field</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;, pack_code                                                       &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                         <span class="comment">! packing code for field</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;, field_start                                                     &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                         <span class="comment">! location of field on disk</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;, data_size                                                       &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                         <span class="comment">! number of words of data on disk</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                         <span class="comment">! (including padding for WFIO)</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;, data_read_size                                                  &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                         <span class="comment">! number of words to read from disk</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;, data_full_size                                                  &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                         <span class="comment">! number of words after any unpacking</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;, len_io                                                          &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                         <span class="comment">! number of words read from disk</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;, num_cray_words                                                  &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;, num_unpack_values                                               &amp;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;, len_full_word                                                   &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;, field_item                                                      &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                         <span class="comment">! Item number of field</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;, field_sect                                                      &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                         <span class="comment">! Section number of field</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;, field_model                                                     &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                         <span class="comment">! Model ID of field</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;, grid_type                                                       &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                         <span class="comment">! grid type code</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;, fld_type                                                        &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                         <span class="comment">! field type (P,U or V)</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;, halo_type                                                       &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                         <span class="comment">! halo type code</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;, i                                                               &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                         <span class="comment">! loop index</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;, local_len              <span class="comment">! size of field section on this PE</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  fake_d1_addr(d1_list_len)    <span class="comment">! Fake D1_ADDR record to</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                               <span class="comment">! pass into read_multi</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordtype">INTEGER</span> unset                  <span class="comment">! unset values</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<a class="code" href="namespaceukca__radaer__struct__mod.xhtml#a7b11899c3ce190bb3d00d3a633af780e">parameter</a>(unset=-1)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">! Functions</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keywordtype">INTEGER</span> get_fld_type,exppxi</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;READFLDS&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor">#if !defined(VAROPSVER)</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="preprocessor"></span><span class="keywordflow">IF</span> (fixhd(12) &lt;  403) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;READFLDS: file created by UM version &#39;</span>, fixhd(12)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  icode=1</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  cmessage=<span class="stringliteral">&#39;READFLDS: Cannot read files from before vn4.3&#39;</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;d1_off=0</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keywordflow">DO</span> k=first_field,first_field+number_of_fields-1</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  pack_code=mod((lookup(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>,k)),10)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">! Set up the location of the field on disk</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  field_start=lookup(<a class="code" href="namespacelookup__addresses.xhtml#afbf7195b85d47a8f92d0769c84f846a4">lbegin</a>,k) <span class="comment">! position of field in file</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keywordflow">IF</span> (field_start &lt;= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;READFLDS: start address =&#39;</span>,field_start</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    icode=1</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    cmessage=<span class="stringliteral">&#39;READFLDS: start address of field not given&#39;</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">! data_size contains the number of words of data used to store the</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">! field on disk (needs to be halved if 32 bit packing has been used)</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordflow">IF</span> (pack_code  ==  2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    data_size=(lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,k)+1)/2</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    data_size=lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,k)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">! data_full_size is the number of words required to store the field</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">! in memory after any unpacking is done.</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="comment">! This is to give buf the correct size in RDUNPCK, as</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="comment">! buf will be the final expanded size of whole field</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="comment">! including extra data</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="comment">! warning lbext - may be -32768 missing value !</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordflow">IF</span> ((pack_code == 4).AND.(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a36fe53c5769dee10ac1c6609f9fa6c2d">lbext</a>, k) &gt;  0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    data_full_size=max(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a54e6ad5def513311547cbefc60aee032">lbrow</a>, k)*lookup(<a class="code" href="namespacelookup__addresses.xhtml#a9ae4b281a4481f6737cda3288e5d7971">lbnpt</a>, k)          &amp;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      +lookup(<a class="code" href="namespacelookup__addresses.xhtml#a36fe53c5769dee10ac1c6609f9fa6c2d">lbext</a>, k) ,lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,k))</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    data_full_size=max(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a54e6ad5def513311547cbefc60aee032">lbrow</a>, k)*lookup(<a class="code" href="namespacelookup__addresses.xhtml#a9ae4b281a4481f6737cda3288e5d7971">lbnpt</a>, k)          &amp;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      ,lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,k))</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordflow">IF</span> ((lookup(<a class="code" href="namespacelookup__addresses.xhtml#a54e6ad5def513311547cbefc60aee032">lbrow</a>,k) &lt;  0).OR.                                  &amp;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a9ae4b281a4481f6737cda3288e5d7971">lbnpt</a>,k) &lt;  0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    data_full_size=lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,k)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">! data_read_size contains the number of words to data that need to</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">! be read in for a field. Each field has extra words of dummy data</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">! added at the end to ensure each field starts on a disk sector</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">! boundary.    data_read_size = lookup(lbnrec,K)</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">! The last field on a dump does not have these extra words</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">! added.  So check against number of lookups and if next lookup is -99 assume</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">! we are at the end.  Otherwise assume we are the last field.</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keywordflow">IF</span> (k &lt; fixhd(fh_lookupsize2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">IF</span> (lookup(<a class="code" href="namespacelookup__addresses.xhtml#aabd1e58da18c133f0ceeba0db78c9ecf">lbyr</a>,k+1) == -99) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      data_read_size = data_size</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keywordflow">    END iF</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    data_read_size = data_size</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="keywordflow">IF</span> (data_read_size &lt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;READFLDS: number of words to read =&#39;</span>,             &amp;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;     data_read_size</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    icode=1</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    cmessage=<span class="stringliteral">&#39;READFLDS: number of words to read not given&#39;</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">! data_full_size needs to be at least as big as data_read_size since</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">! it is used to dimension the BUF array in READ_MULTI.</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  data_full_size = max(data_full_size, data_read_size)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">! Move file pointer to the start of the field</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a>(nftin,field_start,icode)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)                                                    &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;     <span class="stringliteral">&#39;READFLDS - SETPOS failed to move file pointer to &#39;</span>,         &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;     field_start,<span class="stringliteral">&#39; on unit &#39;</span>,nftin</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;SETPOS returned error code &#39;</span>,icode</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    icode=100</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    cmessage=<span class="stringliteral">&#39;SETPOS failed in READFLDS. See output.&#39;</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">! Get some information about this field</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  field_item=mod(lookup(42,k),1000)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  field_sect=(lookup(42,k)-field_item)/1000</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  field_model=lookup(45,k)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  <span class="keywordflow">IF</span> (fixhd(5)  &gt;=  6 .AND. fixhd(5)  &lt;=  9) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">! Set grid_type and halo_type for ACobs and VARobs, Cx and CovStats</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">! (FIXHD(5)=6, 7, 8 and 9, respectively).</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    grid_type = 1</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    halo_type = <a class="code" href="namespaceum__parparams.xhtml#a68c927ba74941b266080d8e2affaa431">halo_type_no_halo</a></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">! DEPENDS ON: exppxi</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    grid_type=exppxi(field_model,field_sect,field_item,           &amp;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                          <a class="code" href="namespacecppxref__mod.xhtml#a92932120a5316135ed39321fd93d34eb">ppx_grid_type</a>,                          &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                          icode,cmessage)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">! DEPENDS ON: exppxi</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    halo_type=exppxi(field_model,field_sect,field_item,           &amp;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                          <a class="code" href="namespacecppxref__mod.xhtml#a87f5601b500940f0dac2b738bc36a718">ppx_halo_type</a>,                          &amp;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                          icode,cmessage)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)                                                  &amp;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="stringliteral">&#39;READFLDS - EXPPXI failed to get PPXREF information &#39;</span>,    &amp;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="stringliteral">&#39;for field: &#39;</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Model ID : &#39;</span>,field_model</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Section  : &#39;</span>,field_sect</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Item     : &#39;</span>,field_item</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Error code was &#39;</span>,icode</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Error message was &#39;</span>,cmessage</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      icode=1</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      cmessage=<span class="stringliteral">&#39;READFLDS failed to get PPXREF information&#39;</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">! For Utitlies (except Makebc) we dont want to know about haloes.</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="preprocessor">#if defined(UTILIO) &amp;&amp; !defined(MAKEBC)</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="preprocessor"></span>  <span class="keywordflow">IF</span> ((grid_type &lt;  0).OR.(grid_type &gt;  100)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">!         WRITE(6,*)&#39;READFL1A: CANNOT GET GRID_TYPE INFO&#39;</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">!         WRITE(6,*)&#39;          FROM STASHMASTER FOR &#39;</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">!         WRITE(6,*)&#39;          SECTION &#39;,FIELD_SECT,&#39; ITEM &#39;,FIELD_ITEM</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">!         WRITE(6,*)&#39;          GRID_TYPE SET TO 1 (NORMAL GRID)&#39;</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <span class="keywordflow">IF</span> (fixhd(12) &gt;= 500) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keywordflow">IF</span> ((halo_type &lt;  1).OR.(halo_type &gt;  3)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">!           WRITE(6,*)&#39;READFL1A: CANNOT GET HALO_TYPE INFO&#39;</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">!           WRITE(6,*)&#39;          FROM STASHMASTER FOR &#39;</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">!           WRITE(6,*)&#39;          SECTION &#39;,FIELD_SECT,</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">!    &amp;                           &#39; ITEM &#39;,FIELD_ITEM</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">!           WRITE(6,*)&#39;          HALO_TYPE SET TO 3 (NO HALO)&#39;</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    halo_type=<a class="code" href="namespaceum__parparams.xhtml#a68c927ba74941b266080d8e2affaa431">halo_type_no_halo</a></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="preprocessor">#if !defined (PUMF) &amp;&amp; !defined (CUMF)</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor"></span>  grid_type=1</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="preprocessor"></span>  <span class="keywordflow">IF</span> (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a1a73e7452b09315ded35e3b6ef082e6b">lbhem</a>,k) &lt;  99) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    halo_type=3</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="preprocessor"></span><span class="comment">! DEPENDS ON: get_fld_type</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  fld_type=get_fld_type(grid_type) <span class="comment">! field type P,U or V</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">! Set up fake D1_ADDR record to describe data to be read in</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">! Only set those items actually required by read_multi</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">! Assume that no diagnostic type fields will be read.</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  <span class="keywordflow">DO</span> i=1,d1_list_len</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    fake_d1_addr(i)=unset</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  fake_d1_addr(d1_object_type)=prognostic</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  fake_d1_addr(d1_imodl)=field_model</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  fake_d1_addr(d1_section)=field_sect</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  fake_d1_addr(d1_item)=field_item</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  fake_d1_addr(d1_halo_type)=halo_type</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;  fake_d1_addr(d1_length)=lasize(1,fld_type,halo_type)*           &amp;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                          lasize(2,fld_type,halo_type)</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;  fake_d1_addr(d1_no_levels)=1</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">! Grid type - for LBCs we need some special logic...</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  <span class="keywordflow">IF</span> ( (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a1a73e7452b09315ded35e3b6ef082e6b">lbhem</a>,k)  &gt;=  99) .AND.                            &amp;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                                         <span class="comment">! This is a LBC field</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;       (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a1a73e7452b09315ded35e3b6ef082e6b">lbhem</a>,k)  &lt;   1000)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="keywordflow">IF</span> (field_model  ==  <a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;      <span class="keywordflow">IF</span> (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a1a73e7452b09315ded35e3b6ef082e6b">lbhem</a>,k)  ==  99) <span class="keywordflow">THEN</span> <span class="comment">! Old style LBCs</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        fake_d1_addr(d1_grid_type)=<a class="code" href="namespacecppxref__mod.xhtml#ab16b2f9d028e49ff82eaacd581e61312">ppx_atm_rim</a></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;      <span class="keywordflow">ELSE</span> <span class="comment">! New style LBCs with different field types</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        fake_d1_addr(d1_grid_type)=grid_type</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keywordflow">IF</span> (grid_type  ==  <a class="code" href="namespacecppxref__mod.xhtml#a1304868a5faa8c9d88f340924063d659">ppx_atm_lbc_orog</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;          fake_d1_addr(d1_length)=                                &amp;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            <a class="code" href="namespacelbc__mod.xhtml#a3c24401c46c12cd36f5a4e3982ff15b9">lenrima</a>(fld_type,halo_type,<a class="code" href="namespacerimtypes.xhtml#ac437854b94b867cc74e2aec791403bc0">rima_type_orog</a>)*           &amp;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;            (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a1a73e7452b09315ded35e3b6ef082e6b">lbhem</a>,k)-100)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;          fake_d1_addr(d1_length)=                                &amp;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            <a class="code" href="namespacelbc__mod.xhtml#a3c24401c46c12cd36f5a4e3982ff15b9">lenrima</a>(fld_type,halo_type,<a class="code" href="namespacerimtypes.xhtml#a83b3fa297a843a39c568b0777e45b929">rima_type_norm</a>)*           &amp;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a1a73e7452b09315ded35e3b6ef082e6b">lbhem</a>,k)-100)</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! IF (grid_type  ==  ppx_atm_lbc_orog)</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        fake_d1_addr(d1_no_levels)=lookup(<a class="code" href="namespacelookup__addresses.xhtml#a1a73e7452b09315ded35e3b6ef082e6b">lbhem</a>,k)-100</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! IF (LOOKUP(LBHEM,K)  ==  99)</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;      icode=2</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;READFLDS: Cannot process LBC for model type &#39;</span>,  &amp;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                 field_model</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;      cmessage=<span class="stringliteral">&#39;READFLDS : Cannot read LBCS for this model type&#39;</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;      <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;  <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (fixhd(5) == 4  .AND.                                   &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                                           <span class="comment">! Ancillary File</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;          (mod( lookup(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>,k)/10, 10 ) == 0 )  .AND.           &amp;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;           grid_type == <a class="code" href="namespacecppxref__mod.xhtml#ac9d6e3c5870b390dc64ded5f768c3295">ppx_atm_compressed</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="comment">! Compressed in stashmaster but uncompressed in header</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">SELECT CASE</span>( fld_type )</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;      <span class="keywordflow">CASE</span>( fld_type_p )</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        fake_d1_addr(d1_grid_type) = <a class="code" href="namespacecppxref__mod.xhtml#af57185f8bd6471c59e021839b65568ee">ppx_atm_tall</a></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;      <span class="keywordflow">CASE</span>( fld_type_u )</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        fake_d1_addr(d1_grid_type) = <a class="code" href="namespacecppxref__mod.xhtml#ac431b87d080e44fd0bffdd4a9119d921">ppx_atm_cuall</a></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;      <span class="keywordflow">CASE</span>( fld_type_v )</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        fake_d1_addr(d1_grid_type) = <a class="code" href="namespacecppxref__mod.xhtml#a6fc3b22758e9414eceae30e1acc84e3d">ppx_atm_cvall</a></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keywordflow">    END SELECT</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;  <span class="keywordflow">ELSE</span> <span class="comment">! not an LBC</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    fake_d1_addr(d1_grid_type)=grid_type</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">! Read the field from disk and distribute it over the processors</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment">! DEPENDS ON: read_multi</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;  <span class="keyword">CALL </span><a class="code" href="read__multi_8f90.xhtml#a7268914bcad9771de45cc3c118edbac1" title="Parallel UM interface to BUFFIN - primarily for small execs. ">read_multi</a>(nftin,d1(d1_off+1),data_read_size,              &amp;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                  data_full_size,len_io,local_len,                &amp;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                  lookup(1,k),fixhd(12),fake_d1_addr,             &amp;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                  fake_d1_addr(d1_no_levels),                     &amp;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="preprocessor">#if defined(CONVIEEE) || defined(CUMF) || defined(PUMF)      \</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="preprocessor"></span> || defined(varopsver) || defined(<a class="code" href="makebc_8f90.xhtml#aad3dcc5934fd611a5fc18e3c568bb479" title="Subroutine MAKEBC : Creates a boundary dataset from model dumps. ">makebc</a>)</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                  expand,                                         &amp;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="preprocessor"></span>                  icode,cmessage)</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">! Check for I/O errors</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;  <span class="keywordflow">IF</span> ((icode  /=  0) .OR. (len_io  /=  data_read_size)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;READFLDS : Error reading in field &#39;</span>,k</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;UNIT &#39;</span>,nftin</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;MODEL ID &#39;</span>,field_model</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;SECTION &#39;</span>,field_sect</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;ITEM &#39;</span>,field_item</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="keywordflow">IF</span> (fixhd(5) &lt;  6 .OR. fixhd(5) &gt;  10) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">! DEPENDS ON: pr_look</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;      <span class="keyword">CALL </span><a class="code" href="pr__look_8f90.xhtml#a2fb0fb7746c91f2a3c62b5034f7d7fec" title="SUBROUTINE PR_LOOK!&gt; ">pr_look</a>(                                               &amp;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;              lookup,lookup,len1_lookup_arg,k)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    cmessage=<span class="stringliteral">&#39;READFLDS: I/O error&#39;</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="preprocessor">#if defined(UTILIO)</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="preprocessor"></span>  <span class="keywordflow">IF</span>(<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">! Write out information about the field just read in</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="keywordflow">IF</span> (mype  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;      <span class="keywordflow">IF</span> (fixhd(5) &lt;  6 .OR. fixhd(5) &gt;  10) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="comment">! DEPENDS ON: pr_look</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        <span class="keyword">CALL </span><a class="code" href="pr__look_8f90.xhtml#a2fb0fb7746c91f2a3c62b5034f7d7fec" title="SUBROUTINE PR_LOOK!&gt; ">pr_look</a>(                                             &amp;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                lookup,lookup,len1_lookup_arg,k)</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        <span class="keywordflow">IF</span> &amp;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="preprocessor">#if defined(CONVIEEE) || defined(CUMF) || defined(PUMF)                \</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="preprocessor"></span> || defined(varopsver) || defined(<a class="code" href="makebc_8f90.xhtml#aad3dcc5934fd611a5fc18e3c568bb479" title="Subroutine MAKEBC : Creates a boundary dataset from model dumps. ">makebc</a>)</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            ( ((pack_code  ==  1).OR.(pack_code  ==  4)) .AND.     &amp;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            (expand  /=  1)) &amp;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="preprocessor"></span>            (pack_code  ==  1) &amp;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="preprocessor"></span>            <span class="keywordflow">THEN</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;WGDOS packing not supported .&#39;</span>,             &amp;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                     <span class="stringliteral">&#39;Field summary omitted.&#39;</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (pack_code  ==  3) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;GRIB compression not supported .&#39;</span>,          &amp;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                     <span class="stringliteral">&#39;Field summary omitted.&#39;</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;RLE packing not supported .&#39;</span>,               &amp;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                     <span class="stringliteral">&#39;Field summary omitted.&#39;</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (fixhd(5)  ==  5) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Boundary dataset .&#39;</span>,                        &amp;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                     <span class="stringliteral">&#39;Field summary omitted.&#39;</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>,k)  &lt;   0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Time series field. &#39;</span>,                       &amp;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                     <span class="stringliteral">&#39;Field summary omitted.&#39;</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;readflds&#39;</span>)</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">! Write out summary of field</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;          <span class="keywordflow">IF</span> ( (fixhd(2)  ==  1) .AND.                            &amp;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;             (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a4f2a173b22a48250d86265493664e6ad">item_code</a>,k) == 30) ) <span class="keywordflow">THEN</span> <span class="comment">! Land-sea mask</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">! DEPENDS ON: pr_lfld</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            <span class="keyword">CALL </span><a class="code" href="pr__lfld_8f90.xhtml#a78f2fcaee160bab6f36a746afd08c25f" title="SUBROUTINE PR_LFLD!&gt; ">pr_lfld</a>(lookup,lookup,64,d1(d1_off+1),k)</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;          <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>,k) == 1) <span class="keywordflow">THEN</span>  <span class="comment">!  Real</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">! DEPENDS ON: pr_rfld</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            <span class="keyword">CALL </span><a class="code" href="pr__rfld_8f90.xhtml#ada76aa41d88e73cb7140bafcbaff6a40" title="SUBROUTINE PR_RFLD!&gt; ">pr_rfld</a>(lookup,lookup,d1(d1_off+1),k)</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;          <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>,k) == 2) <span class="keywordflow">THEN</span>  <span class="comment">!  Integer</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">! DEPENDS ON: pr_ifld</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            <span class="keyword">CALL </span><a class="code" href="pr__ifld_8f90.xhtml#af3138d8f85ef3a566dd26bd891de85ac" title="SUBROUTINE PR_IFLD!&gt; ">pr_ifld</a>(lookup,lookup,d1(d1_off+1),k)</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;          <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>,k) == 3) <span class="keywordflow">THEN</span>  <span class="comment">!  Logical</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">! DEPENDS ON: pr_lfld</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            <span class="keyword">CALL </span><a class="code" href="pr__lfld_8f90.xhtml#a78f2fcaee160bab6f36a746afd08c25f" title="SUBROUTINE PR_LFLD!&gt; ">pr_lfld</a>(lookup,lookup,64,d1(d1_off+1),k)</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">! type of field</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! if this field can have a summary</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! if this file is suitable for summaries</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! IF (mype  ==  0)</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! PrintStatus &gt;= PrStatus_Diag</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;  d1_off=d1_off+local_len</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;  <span class="keywordflow">IF</span>(local_len == 0)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    d1_off=d1_off+lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,k)</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="keywordflow">END DO</span> <span class="comment">! K : loop over fields</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;READFLDS&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="readflds_8f90.xhtml#a5bf07e72f8a7b10c3dc7a5c6ce2f2593" title="Reads in a number of fields from UM format file. ">readflds</a></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
