<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/glue_conv-gconv4a.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">glue_conv-gconv4a.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="glue__conv-gconv4a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceglue__conv__4a__mod.xhtml">    1</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceglue__conv__4a__mod.xhtml">glue_conv_4a_mod</a></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a>      implicit none</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespaceglue__conv__4a__mod.xhtml#a4cb48dc3e9cfb0ea5d0daf6d1889ed9b" title="Gather-scatter routine for deep and shallow convection points. ">glue_conv_4a</a>(np_field,npnts,nlev,nbl,call_number,seg_num  &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;,                 th,q,qcl,qcf, qrain, qgraup, qcf2               &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;,                 cf_liquid,cf_frozen,bulk_cf,pstar               &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;,                 bland,u,v,w                                     &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;,                 tracer, dthbydt, dqbydt, dqclbydt, dqcfbydt     &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;,                 dcflbydt, dcffbydt, dbcfbydt, dubydt, dvbydt    &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;,                 rain, snow, rain_3d, snow_3d                    &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;,                 cca0_dp, cca0_md, cca0_sh                       &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;,              cca0, iccb0, icct0, cclwp0, ccw0, lcbase0, cca0_2d &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;, lctop, lcca, cca,  iccb,  icct,  cclwp,  ccw,  lcbase,  cca_2d  &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;,                 freeze_lev, deep_cfl_limited, mid_cfl_limited   &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;,                 l_mid_all,kterm_deep,kterm_shall                &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;,                 precip_deep,precip_shall,precip_mid,precip_cong &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;,                 wstar_dn,wstar_up,mb1,mb2,kterm_congest         &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;,                 n_cumulus,uw0,vw0,w_max,zlcl,zlcl_uv,ztop_uv    &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;,                 entrain_coef,deep_flag,past_precip,past_conv_ht &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;,                 cape_out                                        &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;,                 n_dp, n_cg, n_sh, n_md                          &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;,                 r_rho,r_theta,rho,rho_theta,delta_smag          &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;,                 exner_layer_boundaries                          &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;,                 exner_layer_centres                             &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;,                 p_layer_boundaries                              &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;,                 p_layer_centres                                 &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;,                 z_theta, z_rho                                  &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;,                 timestep,t1_sd,q1_sd                            &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;,                 ntml,ntpar,conv_type,l_shallow_bl               &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;,                 l_pc2_diag_sh_pts, l_congestus, l_mid           &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;,                 cumulus_bl,wstar,wthvs,delthvu_bl,ql_ad         &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;,                 qsat_lcl,ftl,fqt                                &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;,                 l_tracer,ntra,trlev,n_cca_lev                   &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;,                 l_mixing_ratio, l_mcr_qrain, l_mcr_qgraup       &amp;,                 l_mcr_qcf2, l_calc_dxek,l_q_interact            &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;,                 up_flux_half, up_flux, dwn_flux                 &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;,                 entrain_up,detrain_up,entrain_dwn,detrain_dwn   &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;,                 uw_deep,vw_deep,uw_shall,vw_shall,uw_mid,vw_mid &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;,         wqt_flux_sh,wthetal_flux_sh,wthetav_flux_sh,wql_flux_sh &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;,          mf_deep,mf_congest,mf_shall,mf_midlev                  &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;,          dt_deep,dt_congest,dt_shall,dt_midlev                  &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;,          dq_deep,dq_congest,dq_shall,dq_midlev                  &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;,          du_deep,du_congest,du_shall,du_midlev                  &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;,          dv_deep,dv_congest,dv_shall,dv_midlev                  &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;,          ind_cape_reduced, cape_ts_used, ind_deep, ind_shall    &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                 )</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="namespaceglue__conv__4a__mod.xhtml#a4cb48dc3e9cfb0ea5d0daf6d1889ed9b">   52</a></span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__run__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_run_mod</a><span class="keywordtype">,  ONLY</span>:                                            &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#a9fa9c42ad2da411d2451fd13fbf43514">l_mom</a>,        <a class="code" href="namespacecv__run__mod.xhtml#a7ddab8ad2889a14db728b72fe398f83a">adapt</a>,        <a class="code" href="namespacecv__run__mod.xhtml#af9faef42a21a8c785c0991210fb1ea6c">termconv</a>,                         &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#ada531c8ab7a2db9fa523fe9801878406">cca2d_sh_opt</a>, <a class="code" href="namespacecv__run__mod.xhtml#a7846be122d0bceb429c3059b23d5c322">cca2d_md_opt</a>, <a class="code" href="namespacecv__run__mod.xhtml#a002d5db81c3dd179df9ea3583793ac5e">cca2d_dp_opt</a>,                     &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#a74dd2e3ba506db0ec2c153104690c257">cca_sh_knob</a>,  <a class="code" href="namespacecv__run__mod.xhtml#af213e9b8fba147db9dec3a1face6baf1">cca_md_knob</a>,  <a class="code" href="namespacecv__run__mod.xhtml#a30a740b68ae78a60151a732d22ad24ab">cca_dp_knob</a>,                      &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#a60ac382c4e37ea7bcdfe608775d57764">ccw_sh_knob</a>,  <a class="code" href="namespacecv__run__mod.xhtml#a515e2624e492b01a1cd49d9429b3ed96">ccw_md_knob</a>,  <a class="code" href="namespacecv__run__mod.xhtml#abbec708342cffae2fd3abdf28ef705b5">ccw_dp_knob</a>,                      &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#adf12c4d96378c409f40e87de2282a982">bl_cnv_mix</a>,   <a class="code" href="namespacecv__run__mod.xhtml#a189bd900b35bbaab037f8d39b741df9e">l_anvil</a>,      <a class="code" href="namespacecv__run__mod.xhtml#a39c8fc98ba63da9cee70fe2a91887ced">l_dcpl_cld4pc2</a>,                   &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a>,      <a class="code" href="namespacecv__run__mod.xhtml#af3aff8585bb16fdc7cddc62da16fd0d7">l_3d_cca</a>,     <a class="code" href="namespacecv__run__mod.xhtml#a7c5e9f2b1af9e229ed225af8fc6f7112">l_pc2_diag_sh</a></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__stash__flg__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_stash_flg_mod</a><span class="keywordtype">, ONLY</span>:                                       &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="namespacecv__stash__flg__mod.xhtml#aaa805ef81602a9e8e678e5f68be250ee">flg_up_flx</a>, flg_up_flx_half, <a class="code" href="namespacecv__stash__flg__mod.xhtml#a645dd024842155b75c5b638f11391ac9">flg_dwn_flx</a>,                     &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="namespacecv__stash__flg__mod.xhtml#a594eca06c1e2300b31f8c2bba686ff1e">flg_entr_up</a>, <a class="code" href="namespacecv__stash__flg__mod.xhtml#a9986060bf6c1a80468d9ae32b6bafcf9">flg_entr_dwn</a>, <a class="code" href="namespacecv__stash__flg__mod.xhtml#a23946cc9e076aa4865e7ed4049aa6e81">flg_detr_up</a>, <a class="code" href="namespacecv__stash__flg__mod.xhtml#ad0f02382d0dbfd786770638461d8ec1f">flg_detr_dwn</a>,         &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="namespacecv__stash__flg__mod.xhtml#a8ad7f9b76c238f1296578bc734c44ca3" title="CMT diagnostics. ">flg_uw_dp</a>, <a class="code" href="namespacecv__stash__flg__mod.xhtml#aa98da005ff21a3429a63c19b3402d51c">flg_vw_dp</a>, <a class="code" href="namespacecv__stash__flg__mod.xhtml#ad13801fb31f0f607d924aba4b0ab0839">flg_uw_shall</a>, <a class="code" href="namespacecv__stash__flg__mod.xhtml#a866a659288edb036141e19b4892f24d9">flg_vw_shall</a>,             &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="namespacecv__stash__flg__mod.xhtml#a07d96035eb5459cb6d7d19ce42605813">flg_uw_mid</a>, <a class="code" href="namespacecv__stash__flg__mod.xhtml#af9e9924917c7bb34ddc6e70aa6a81f22">flg_vw_mid</a></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: tm</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor"></span><span class="keywordtype">USE </span><a class="code" href="namespaces__scmop__mod.xhtml">s_scmop_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>                                   &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5a13db9f3d2b54dc7f02f3fa3fc19ece">t_max</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a45eef9702d217d7da71dcf394198f2d6">t_min</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5a6f815019b3004ecc7040ec4b4d1fd4">t_acc</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a597140e5cb551f5f4651c9b4cd534865">t_div</a>, <a class="code" href="namespaces__scmop__mod.xhtml#acfaa64e6b4c579d708188c5774d8ac7d">t_mult</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a58d068616503a332fdbc2e4c7bb9f23b">t_acc_div</a>         &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#acaad14680fec34a8c1c206ebeb34d239">t_acc_mult</a>, <a class="code" href="namespaces__scmop__mod.xhtml#ab61b1909fcdb9b3f9552d14f2f8839fe">t_const</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a25166a280622f5787108c0078a033004">only_radsteps</a>                                   &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a9e42893fdbe56b604355689cd9248c63">d_sl</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5914c497075c8cbd0e5cd1d211e1a123">d_soilt</a>, <a class="code" href="namespaces__scmop__mod.xhtml#ad97dd1acaa61800db9233ae60f5b1e84">d_bl</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a1462f6faadb6334b311e602285d8a286">d_soilm</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a80fd65616a49171a9ac7ecac7338d70a">d_tile</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a92a2c3b6b4b2b0dd800234719ca7207b">d_vis</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>   &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a11d031129d23dbffdab391dd303cdd08">d_allxtra</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5de685a17fc8f67d938e5982544ec05f">d_land</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a049e4924fd63af8676e1697fcde11654">d_cloud</a>                                           &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a6ff96781019d621303b6d86d6d2486a5">scmdiag_gen</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5564776c9d09d933db80c6c1c3c47b3d">scmdiag_rad</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a6099058c886f9254fabef330fa2caedd">scmdiag_bl</a>,   <a class="code" href="namespaces__scmop__mod.xhtml#aa95516bacfa8a4f2932fc3e17f5f6b65">scmdiag_surf</a>,  <a class="code" href="namespaces__scmop__mod.xhtml#a89d9b3531f7c5739e1d9b9edf0583d58">scmdiag_land</a>  &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a762d12a388196f9c5a907e8090d18e3a">scmdiag_sea</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a40ccacb1e960d2ef3da728d637e5ebe2">scmdiag_lsp</a>, <a class="code" href="namespaces__scmop__mod.xhtml#abf142f0f2bdc021960cf0c6a5ecd065b">scmdiag_conv</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a73ce0babd803e10fbcb82921346b3ccc">scmdiag_lscld</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a2b946f89404f7668eb56ca960c3c3de6">scmdiag_pc2</a>   &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a61abfb55fdd33cfc5d44f00076f252c8">scmdiag_forc</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a8a1879aca60631ef706c8ce42618ced6">scmdiag_incs</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a765b6df27a911737054c8df3c0746c15">scmdiag_gwd</a></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor"></span><span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacerad__input__mod.xhtml" title="Input control for radiation. Input control for radiation. ">rad_input_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacerad__input__mod.xhtml#ae6d31cf8ad5fe911da19ee6a3e31bc50">l_cca_dp_prog</a>, <a class="code" href="namespacerad__input__mod.xhtml#a51e9c4e7c6277e2523d8eaa9b8daf28f">l_cca_md_prog</a>, <a class="code" href="namespacerad__input__mod.xhtml#abae54fa352e2792d74b0ae77bb3d5518">l_cca_sh_prog</a></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: np_field <span class="comment">! No of points in a full field</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                                <span class="comment">!(note all multi-dimensional fields</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                <span class="comment">!  passed to routine MUST be</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                <span class="comment">!   dimensioned with np_field)</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: npnts    <span class="comment">! No. of points in segment</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: nlev     <span class="comment">! No. of model layers</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ntml(npnts) <span class="comment">! Top level of surface mixed</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                   <span class="comment">! layer defined relative to</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                   <span class="comment">! theta,q grid</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ntpar(npnts) <span class="comment">! Top level of initial parcel</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                    <span class="comment">! ascent in BL scheme defined</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                    <span class="comment">! relative to theta,q grid</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: n_cca_lev<span class="comment">! No. of convective cloud</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                <span class="comment">! amount levels (1 for 2D,</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                <span class="comment">! nlevs for 3D)</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: nbl      <span class="comment">! No. of boundary layer levels</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: call_number <span class="comment">! Current convection sweep</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: seg_num  <span class="comment">! segment number</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ntra     <span class="comment">! No. of tracer fields</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: trlev    <span class="comment">! No. of model levels on which</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                <span class="comment">! tracers are included</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: n_dp     <span class="comment">! Number of deep points</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: n_cg     <span class="comment">! Number of congestus points</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: n_sh     <span class="comment">! Number of shallow points</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: n_md     <span class="comment">! Number of mid points</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: delthvu_bl(npnts) <span class="comment">!Integral of undilute parcel</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                                      <span class="comment">! buoyancy over convective cloud</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                                      <span class="comment">! layer (Kelvin m)</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  ql_ad(npnts)      &amp; <span class="comment">! adiabatic liquid water content at inversion (kg/kg)</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;, qsat_lcl(npnts)   &amp; <span class="comment">! qsat at cloud base (kg/kg) (NOT USED 4A)</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;, ftl(npnts)        &amp; <span class="comment">! Surface sensible heat flux from BL</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                      <span class="comment">! (W/m2) i.e. cp*rho*w&#39;tl&#39;</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;, fqt(npnts)          <span class="comment">! Total water flux from surface (kg/m2/s)</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                      <span class="comment">! i.e. rho*w&#39;qT&#39;</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: exner_layer_centres(np_field,0:nlev) <span class="comment">!Exner</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: exner_layer_boundaries(np_field,0:nlev)<span class="comment">!Exner</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                                           <span class="comment">! at half level above</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                                           <span class="comment">! exner_layer_centres</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: pstar(npnts) <span class="comment">! Surface pressure (Pa)</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: p_layer_centres(np_field,0:nlev) <span class="comment">!Pressure(Pa)</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: p_layer_boundaries(np_field,0:nlev) <span class="comment">! Pressure</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                                        <span class="comment">! at half level above</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                                                        <span class="comment">! p_layer_centres (Pa)</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: z_theta(np_field,nlev) <span class="comment">! height of theta</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                                           <span class="comment">! levels above surface (m)</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: z_rho(np_field,nlev)    <span class="comment">! height of rho levels</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                                            <span class="comment">! above surface (m)</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: t1_sd(np_field) <span class="comment">! Standard deviation of</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                                    <span class="comment">! turbulent fluctuations of</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                    <span class="comment">! layer 1 temp. (K)</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: q1_sd(np_field) <span class="comment">! Standard deviation of</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                    <span class="comment">! turbulent fluctuations of</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                                    <span class="comment">! layer 1 q (kg/kg)</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: th(np_field,nlev) <span class="comment">! Model potential temperature (K)</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: q(np_field,nlev) <span class="comment">! Model water vapour (kg/kg)</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: timestep    <span class="comment">! Model timestep (s)</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: uw0(np_field) <span class="comment">! U-comp of surface stress(N/m2)</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: vw0(np_field) <span class="comment">! V-comp of surface stress(N/m2)</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: w_max(np_field) <span class="comment">! max w in column</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: u(np_field,nlev) <span class="comment">!Model U field (m/s)</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: v(np_field,nlev) <span class="comment">!Model V field (m/s)</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: w(np_field,nlev) <span class="comment">!Model W field (m/s)</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: wstar(npnts) <span class="comment">! Convective velocity scale (m/s)</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: wthvs(npnts) <span class="comment">! Surface flux of THV  (Pa m/s2)</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: zlcl(npnts) <span class="comment">! Lifting condensation level accurate</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                <span class="comment">! height (m) (NOT USED)</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: zlcl_uv(npnts) <span class="comment">! Lifting condensation level</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                                   <span class="comment">! defined for the uv grid (m)</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: ztop_uv(npnts) <span class="comment">! Top of cloud layer</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                   <span class="comment">! defined for the uv grid (m)</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: r_rho(np_field,nlev)      <span class="comment">! radius rho lev (m)</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: r_theta(np_field,0:nlev)  <span class="comment">! radius th lev (m)</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: rho(np_field,nlev)        <span class="comment">! density kg/m3</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: rho_theta(np_field,nlev)  <span class="comment">! th lev kg/m3</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: delta_smag(np_field)      <span class="comment">! grid size used in smag (m)</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_tracer <span class="comment">! Switch for inclusion of tracers</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  l_mixing_ratio       &amp; <span class="comment">! true - input moisture mixing ratio</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                         <span class="comment">! false - input moisture specific humidity</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; ,l_mcr_qrain          &amp; <span class="comment">! true - prognostic rain</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; ,l_mcr_qgraup         &amp; <span class="comment">! true - prognostic graupel</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; ,l_mcr_qcf2           &amp; <span class="comment">! true - prognostic qcf2 ,l_calc_dxek          &amp; ! Switch for calculation of condensate increment</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; ,l_q_interact           <span class="comment">! Switch allows overwriting parcel variables when</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                         <span class="comment">! calculating condensate incr.</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_shallow_bl(npnts) <span class="comment">! Shallow cumulus indicator</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_pc2_diag_sh_pts(npnts) <span class="comment">! Carry</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                                                <span class="comment">! diagnostic shallow convective</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                                                <span class="comment">! information for PC2</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_congestus(npnts) <span class="comment">! congestus cumulus</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_mid(npnts)       <span class="comment">! possible mid-level cnv</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: cumulus_bl(npnts)  <span class="comment">! Cumulus indicator</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: bland(npnts) <span class="comment">! Land/sea mask</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">! NOT USED 4A</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::   &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; entrain_coef(npnts)  &amp;  <span class="comment">! entrainmentceofficients</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;,deep_flag(npnts)     &amp;  <span class="comment">! history of deep convection</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;,past_precip(npnts)   &amp;  <span class="comment">! history of convective precip</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;,past_conv_ht(npnts)     <span class="comment">! history of convective height</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">! Arguments with intent INOUT:</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">! NOTE - All moist variables passed down to this routine are :</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">! specific humidities if l_mixing_ratio = .false.</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">! mixing ratios       if l_mixing_ratio = .true.</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::      &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  qcl(np_field,nlev)        &amp; <span class="comment">! Liq condensate (kg/kg)</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; ,qcf(np_field,nlev)        &amp; <span class="comment">! Ice condensate (kg/kg)</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160; ,qrain(np_field,nlev)      &amp; <span class="comment">! rain (kg/kg)</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; ,qgraup(np_field,nlev)     &amp; <span class="comment">! graupel (kg/kg)</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; ,qcf2(np_field,nlev)       &amp; <span class="comment">! 2nd ice type (kg/kg)</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; ,cf_liquid(np_field,nlev)  &amp; <span class="comment">! Liq water cloud volume (fraction)</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160; ,cf_frozen(np_field,nlev)  &amp; <span class="comment">! Frozen water cloud volume (fraction?)</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; ,bulk_cf(np_field,nlev)      <span class="comment">! Bulk total cloud volume ( )</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: tracer(np_field,trlev,ntra) <span class="comment">!Model tracer</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                                                   <span class="comment">! fields (kg/kg)</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">! Arguments with intent OUT:</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: dqclbydt(np_field,nlev) <span class="comment">! Increments to liq</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                                <span class="comment">! condensate due to convection</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                                <span class="comment">! (kg/kg/s)</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: dqcfbydt(np_field,nlev) <span class="comment">! Increments to ice</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                                <span class="comment">! condensate due to convection</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                                <span class="comment">! (kg/kg/s)</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: dcflbydt(np_field,nlev) <span class="comment">! Increments to liq</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                                <span class="comment">! cloud volume due to convection</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                                <span class="comment">! (/s)</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: dcffbydt(np_field,nlev) <span class="comment">! Increments to ice</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                <span class="comment">! cloud volume due to convection</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                                <span class="comment">! (/s)</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: dbcfbydt(np_field,nlev) <span class="comment">! Increments to</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                                <span class="comment">! total cld volume due to</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                                <span class="comment">! convection(/s)</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: dthbydt(np_field,nlev) <span class="comment">! Increments to</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                         <span class="comment">! potential temp. due to convection (K/s)</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: dqbydt(np_field,nlev) <span class="comment">! Increments to q due</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                                           <span class="comment">! to convection (kg/kg/s)</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: dubydt(np_field,nlev+1) <span class="comment">! Increments to U due</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                                             <span class="comment">! to CMT (m/s2)</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: dvbydt(np_field,nlev+1) <span class="comment">! Increments to V due</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                                             <span class="comment">! to CMT (m/s2)</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: rain(npnts) <span class="comment">! Surface convective rainfall (kg/m2/s)</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: snow(npnts) <span class="comment">! Surface convective snowfall (kg/m2/s)</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: rain_3d(np_field,nlev) <span class="comment">! convective rainfall flux (kg/m2/s)</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: snow_3d(np_field,nlev) <span class="comment">! convective snowfall flux (kg/m2/s)</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">! Section 5 Convective Cloud properties</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::       &amp;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;  cca(np_field,n_cca_lev)  &amp;<span class="comment">! Cnv. cld amount (0-1)</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;, ccw(np_field,nlev)       &amp;<span class="comment">! Cnv. in-cld water (kg/kg)</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;, cclwp(npnts)             &amp;<span class="comment">! Cond. water path (kg/m^2)</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;, lcca(npnts)               <span class="comment">! Cnv. cld amount at base of lowest</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                            <span class="comment">! cloud layer (no anvil). (0-1)</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> ::    &amp;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  iccb(npnts)              &amp;<span class="comment">! Cnv. cld base level (Highest Cld layer)</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;, icct(npnts)              &amp;<span class="comment">! Cnv. cld top  level (Highest Cld layer)</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;, lcbase(npnts)            &amp;<span class="comment">! Cnv. cld base level (Lowest  Cld layer)</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;, lctop(npnts)              <span class="comment">! Cnv. cld top  level (Lowest  Cld layer)</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">! Section 0 Convective Cloud properties for Radiative impacts</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="keywordtype">REAL</span> ::       &amp;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;  cca0(np_field,n_cca_lev) &amp;<span class="comment">! Cnv. cld amount (0-1)</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;, cca0_sh(np_field,n_cca_lev) &amp;<span class="comment">! Shallow cnv. cld amount (0-1)</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;, cca0_md(np_field,n_cca_lev) &amp;<span class="comment">! Mid-level cnv. cld amount (0-1)</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;, cca0_dp(np_field,n_cca_lev) &amp;<span class="comment">! Deep cnv. cld amount (0-1)</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;, ccw0(np_field,nlev)      &amp;<span class="comment">! Cnv. in-cld water (kg/kg)</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;, cclwp0(npnts)             <span class="comment">! Cond. water path (kg/m^2)</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> ::    &amp;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;  iccb0(npnts)             &amp;<span class="comment">! Cnv. cld base level (Highest Cld layer)</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;, icct0(npnts)             &amp;<span class="comment">! Cnv. cld top  level (Highest Cld layer)</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;, lcbase0(npnts)            <span class="comment">! Cnv. cld base level (Lowest  Cld layer)</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: freeze_lev(npnts) <span class="comment">!index for freezing lev</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: kterm_deep(npnts) <span class="comment">! index deep conv</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: kterm_shall(npnts) <span class="comment">! termination level for shallow</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: l_mid_all(npnts)  <span class="comment">! on exit true if mid level</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                                          <span class="comment">! convection has triggered</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::      &amp;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;  deep_cfl_limited(npnts) &amp; <span class="comment">! indicator for cfl limited deep conv</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; ,mid_cfl_limited(npnts)    <span class="comment">! indicator for cfl limited mid-levelconv</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: precip_deep(npnts)  <span class="comment">! deep precip (kg/m2/s)</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: precip_shall(npnts) <span class="comment">! shallow precip(kg/m2/s)</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: precip_mid(npnts)   <span class="comment">! mid precip (kg/m2/s)</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: precip_cong(npnts)  <span class="comment">!congestus precip(kg/m2/s)</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: up_flux(np_field,nlev) <span class="comment">! Updraught mass flux (Pa/s)</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: up_flux_half(np_field,nlev)</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                                <span class="comment">! Updraught mass flux</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                                <span class="comment">! on half levels (Pa/s)</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: dwn_flux(np_field,nlev) <span class="comment">! Downdraught mass</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                                <span class="comment">! flux (Pa/s)</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: entrain_up(np_field,nlev) <span class="comment">! Fractional</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                                <span class="comment">! entrainment rate into updraughts</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                                <span class="comment">! (Pa/s)</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: detrain_up(np_field,nlev) <span class="comment">! Fractional</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                                <span class="comment">! detrainment rate into updraughts</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                                <span class="comment">! (Pa/s)</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: entrain_dwn(np_field,nlev) <span class="comment">! Fractional</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                                <span class="comment">! entrainment rate into</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                                <span class="comment">! downdraughts (Pa/s)</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: detrain_dwn(np_field,nlev) <span class="comment">! Fractional</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                                <span class="comment">! detrainment rate into</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                                <span class="comment">! downdraughts (Pa/s)</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">! Diagnostics relating to momentum fluxes</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::     &amp;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; uw_deep(np_field,nlev)  &amp; <span class="comment">! X-comp. of stress from deep convection (kg/m/s2)</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;,vw_deep(np_field,nlev)  &amp; <span class="comment">! Y-comp. of stress from deep convection (kg/m/s2)</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;,uw_shall(np_field,nlev) &amp; <span class="comment">! X-comp. of stress from shallow convection (kg/m/s2)</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;,vw_shall(np_field,nlev) &amp; <span class="comment">! Y-comp. of stress from shallow convection (kg/m/s2)</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;,uw_mid(np_field,nlev)   &amp; <span class="comment">! U comp of stress from mid convection (kg/m/s2)</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;,vw_mid(np_field,nlev)     <span class="comment">! V comp of stress from mid convection (kg/m/s2)</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: cape_out(npnts) <span class="comment">! Saved convective available</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                                     <span class="comment">! potential energy for diagnostic</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                                     <span class="comment">! output (Jkg-1)</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment">! Flux diagnostics - only available from turbulence based schemes</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">! (not actually used in this routine - OUT shouldnt be used)</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="keywordtype">REAL</span>              ::                                              &amp;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  wqt_flux_sh(np_field,nlev)                                      &amp;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                                 <span class="comment">! w&#39;qt&#39; flux</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;, wql_flux_sh(np_field,nlev)                                      &amp;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                                <span class="comment">! w&#39;ql&#39; flux</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;, wthetal_flux_sh(np_field,nlev)                                  &amp;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                                <span class="comment">! w&#39;thetal&#39; flux</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;, wthetav_flux_sh(np_field,nlev)                                  &amp;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                                <span class="comment">! w&#39;thetav&#39; flux</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;, wstar_dn(npnts)                                                 &amp;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;, wstar_up(npnts)                                                 &amp;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;, mb1(npnts)                                                      &amp;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;, mb2(npnts)                                                      &amp;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;, mf_deep(np_field,nlev),mf_congest(np_field,nlev)                &amp;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;, mf_shall(np_field,nlev),mf_midlev(np_field,nlev)                &amp;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;, dt_deep(np_field,nlev),dt_congest(np_field,nlev)                &amp;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;, dt_shall(np_field,nlev),dt_midlev(np_field,nlev)                &amp;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;, dq_deep(np_field,nlev),dq_congest(np_field,nlev)                &amp;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;, dq_shall(np_field,nlev),dq_midlev(np_field,nlev)                &amp;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;, du_deep(np_field,nlev),du_congest(np_field,nlev)                &amp;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;, du_shall(np_field,nlev),du_midlev(np_field,nlev)                &amp;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;, dv_deep(np_field,nlev),dv_congest(np_field,nlev)                &amp;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;, dv_shall(np_field,nlev),dv_midlev(np_field,nlev)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::         &amp;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160; ind_cape_reduced(np_field)  &amp; <span class="comment">! indicates cape timescale reduced</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;,cape_ts_used(np_field)      &amp; <span class="comment">! cape timescale used for deep (s)</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;,ind_deep(np_field)          &amp; <span class="comment">! 1.0 if deep convection 0.0 otherwise</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;,ind_shall(np_field)           <span class="comment">! 1.0 if shallow convection 0.0 otherwise</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="comment">! This is not used in this routine (shouldnt use OUT)</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keywordtype">INTEGER</span>           ::                                         &amp;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;  kterm_congest(npnts)   <span class="comment">! termination level for congestus</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment">! Redundant arguments</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: n_cumulus</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: conv_type(npnts)</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment">! local required in move mixing to glue</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="keywordtype">REAL</span> :: dtrabydt(npnts,nlev,ntra) <span class="comment">! Increment to tracer due to</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                                  <span class="comment">! convection (kg/kg/s)</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="keywordtype">CHARACTER (LEN=12)</span>, <span class="keywordtype">PARAMETER</span> ::  routinename = <span class="stringliteral">&#39;glue_conv_4a&#39;</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="keywordtype">CHARACTER (LEN=80)</span> ::                                             &amp;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;  cmessage                   <span class="comment">! error message</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="keywordtype">INTEGER</span> :: errorstatus       <span class="comment">! error status</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">! LOCAL compressed arrays to be passed to DEEP convection scheme.</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">! Arrays are identified by underscore DP (_dp) and are of length</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">! n_dp where n_dp is the number of points diagnosed as deep in the</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment">! boundary layer diagnosis routine. For full desriptions of variables</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">! see above.</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="keywordtype">INTEGER</span> :: error_point      <span class="comment">! location of problem deep point</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="keywordtype">INTEGER</span> :: dpi(n_dp)        <span class="comment">! index for deep points in full grid</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="keywordtype">INTEGER</span> :: ntml_dp(n_dp)</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="keywordtype">INTEGER</span> :: ntpar_dp(n_dp)</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="keywordtype">LOGICAL</span> :: bland_dp(n_dp)</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="keywordtype">REAL</span> ::                                                            &amp;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;  pstar_dp(n_dp)                                                   &amp;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;, recip_pstar_dp(n_dp)                                             &amp;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;, t1_sd_dp(n_dp)                                                   &amp;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;, q1_sd_dp(n_dp)                                                   &amp;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;, uw0_dp(n_dp)                                                     &amp;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;, vw0_dp(n_dp)                                                     &amp;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;, zlcl_uv_dp(n_dp)                                                 &amp;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;, wstar_dp(n_dp)                                                   &amp;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;, delthvu_dp(n_dp)</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="keywordtype">REAL</span> ::                                                            &amp;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;  p_layer_centres_dp(n_dp,0:nlev)                                  &amp;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;, p_layer_boundaries_dp(n_dp,0:nlev)                               &amp;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;, exner_layer_centres_dp(n_dp,0:nlev)                              &amp;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;, exner_layer_boundaries_dp(n_dp,0:nlev)                           &amp;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;, r2rho_dp(n_dp,nlev)                                              &amp;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;, r2rho_th_dp(n_dp,nlev)                                           &amp;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;, rho_dp(n_dp,nlev)                                                &amp;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;, rho_theta_dp(n_dp,nlev)                                          &amp;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;, dr_across_th_dp(n_dp,nlev)                                       &amp;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;, dr_across_rh_dp(n_dp,nlev)                                       &amp;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;, z_theta_dp(n_dp,nlev)                                            &amp;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;, z_rho_dp(n_dp,nlev)                                              &amp;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;, r_theta_dp(n_dp,0:nlev)                                          &amp;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;, r_rho_dp(n_dp,nlev)</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="keywordtype">REAL</span> :: w_max_dp(n_dp)</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="keywordtype">REAL</span> :: u_dp(n_dp,nlev)</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="keywordtype">REAL</span> :: v_dp(n_dp,nlev)</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="keywordtype">REAL</span> :: th_dp(n_dp,nlev)</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="keywordtype">REAL</span> :: q_dp(n_dp,nlev)</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="keywordtype">REAL</span> :: tracer_dp(n_dp,trlev,ntra)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="keywordtype">REAL</span> :: dthbydt_dp(n_dp,nlev)</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="keywordtype">REAL</span> :: dqbydt_dp(n_dp,nlev)</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="keywordtype">REAL</span> :: dubydt_dp(n_dp,nlev)</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="keywordtype">REAL</span> :: dvbydt_dp(n_dp,nlev)</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="keywordtype">REAL</span> :: rain_dp(n_dp)</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="keywordtype">REAL</span> :: snow_dp(n_dp)</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="keywordtype">REAL</span> :: rain_3d_dp(n_dp,nlev)</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="keywordtype">REAL</span> :: snow_3d_dp(n_dp,nlev)</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="keywordtype">REAL</span> :: tcw_dp(n_dp)</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="keywordtype">INTEGER</span> ::                                                        &amp;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;  iccb_dp(n_dp)                                                   &amp;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;, icct_dp(n_dp)                                                   &amp;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;, lcbase_dp(n_dp)                                                 &amp;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;, lctop_dp(n_dp)                                                  &amp;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;, freeze_lev_dp(n_dp)</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="keywordtype">REAL</span> :: cclwp_dp(n_dp)</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="keywordtype">REAL</span> :: cca_dp(n_dp,n_cca_lev)</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="keywordtype">REAL</span> :: ccw_dp(n_dp,nlev)</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="keywordtype">REAL</span> :: lcca_dp(n_dp)</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="keywordtype">REAL</span> :: up_flux_dp(n_dp,nlev)</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="keywordtype">REAL</span> :: up_flux_half_dp(n_dp,nlev)</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="keywordtype">REAL</span> :: dwn_flux_dp(n_dp,nlev)</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="keywordtype">REAL</span> :: entrain_up_dp(n_dp,nlev)</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="keywordtype">REAL</span> :: detrain_up_dp(n_dp,nlev)</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="keywordtype">REAL</span> :: entrain_dwn_dp(n_dp,nlev)</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="keywordtype">REAL</span> :: detrain_dwn_dp(n_dp,nlev)</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="keywordtype">REAL</span> :: uw_deep_dp(n_dp,nlev)</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="keywordtype">REAL</span> :: vw_deep_dp(n_dp,nlev)</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="keywordtype">REAL</span> :: cape_out_dp(n_dp)</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="keywordtype">REAL</span> :: qse_dp(n_dp,nlev)</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="comment">!PC2</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="keywordtype">REAL</span> ::                                                           &amp;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;  qcl_dp(n_dp,nlev)                                               &amp;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;, qcf_dp(n_dp,nlev)                                               &amp;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;, cf_liquid_dp(n_dp,nlev)                                         &amp;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;, cf_frozen_dp(n_dp,nlev)                                         &amp;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;, bulk_cf_dp(n_dp,nlev)                                           &amp;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;, dqclbydt_dp(n_dp,nlev)                                          &amp;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;, dqcfbydt_dp(n_dp,nlev)                                          &amp;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;, dcflbydt_dp(n_dp,nlev)                                          &amp;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;, dcffbydt_dp(n_dp,nlev)                                          &amp;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;, dbcfbydt_dp(n_dp,nlev)</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="keywordtype">REAL</span> :: dtrabydt_dp(n_dp,nlev,ntra) <span class="comment">! Increment to tracer due to</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                                    <span class="comment">! convection (kg/kg/s)</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="keywordtype">INTEGER</span> :: kterm_dp(n_dp)    <span class="comment">! required by mid level scheme</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="keywordtype">REAL</span> :: cca_2d_dp(n_dp)      <span class="comment">! required by mid level scheme</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="keywordtype">REAL</span> :: ind_cape_reduced_dp(n_dp)</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="keywordtype">REAL</span> :: cape_ts_used_dp(n_dp)</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="keywordtype">REAL</span> :: cfl_limited_dp(n_dp)</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="keywordtype">REAL</span> :: ind_deep_dp(n_dp)</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="comment">!  compressed SCM diagnostics for adaptive modset</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="keywordtype">REAL</span> :: rbuoy_p_out_dp(n_dp,nlev)</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;<span class="keywordtype">REAL</span> :: the_out_dp(n_dp,nlev)</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="keywordtype">REAL</span> :: thp_out_dp(n_dp,nlev)</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="keywordtype">REAL</span> :: qe_out_dp(n_dp,nlev)</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="keywordtype">REAL</span> :: qp_out_dp(n_dp,nlev)</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="comment">!temporary local diagnostics</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="keywordtype">INTEGER</span> :: thp_out_copy_count</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="keywordtype">INTEGER</span> :: thp_out_md_count</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="keywordtype">INTEGER</span> :: th_count</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="comment">! LOCAL compressed arrays to be passed to SHALLOW convection scheme.</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="comment">! Arrays are identified by underscore SH (_sh) and are of length</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="comment">! n_sh where n_sh is the number of points diagnosed as shallow in the</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="comment">! boundary layer diagnosis routine.For full desriptions of variables</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="comment">! see above.</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="keywordtype">INTEGER</span> :: shi(n_sh)      <span class="comment">! index for shallow points in full grid</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="keywordtype">INTEGER</span> :: ntml_sh(n_sh)</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="keywordtype">INTEGER</span> :: ntpar_sh(n_sh)</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="keywordtype">REAL</span> :: pstar_sh(n_sh)</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;<span class="keywordtype">REAL</span> :: recip_pstar_sh(n_sh)</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="keywordtype">REAL</span> :: p_layer_centres_sh(n_sh,0:nlev)</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="keywordtype">REAL</span> :: p_layer_boundaries_sh(n_sh,0:nlev)</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="keywordtype">LOGICAL</span> :: bland_sh(n_sh)</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="keywordtype">REAL</span> :: exner_layer_centres_sh(n_sh,0:nlev)</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<span class="keywordtype">REAL</span> :: exner_layer_boundaries_sh(n_sh,0:nlev)</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;<span class="keywordtype">REAL</span> ::                        &amp;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;  z_theta_sh(n_sh,nlev)        &amp;</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;, z_rho_sh(n_sh,nlev)          &amp;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;, r2rho_th_sh(n_sh,nlev)       &amp;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;, dr_across_th_sh(n_sh,nlev)</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;<span class="keywordtype">REAL</span> :: delthvu_sh(n_sh)</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;<span class="keywordtype">REAL</span> :: t1_sd_sh(n_sh)</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;<span class="keywordtype">REAL</span> :: q1_sd_sh(n_sh)</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;<span class="keywordtype">REAL</span> :: uw0_sh(n_sh)</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;<span class="keywordtype">REAL</span> :: vw0_sh(n_sh)</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="keywordtype">REAL</span> :: wstar_sh(n_sh)</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="keywordtype">REAL</span> :: wthvs_sh(n_sh)</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="keywordtype">REAL</span> :: zlcl_uv_sh(n_sh)</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="keywordtype">REAL</span> :: ztop_uv_sh(n_sh)</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;<span class="keywordtype">REAL</span> :: u_sh(n_sh,nlev)</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;<span class="keywordtype">REAL</span> :: v_sh(n_sh,nlev)</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;<span class="keywordtype">REAL</span> :: th_sh(n_sh,nlev)</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="keywordtype">REAL</span> :: q_sh(n_sh,nlev)</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="keywordtype">REAL</span> :: tracer_sh(n_sh,trlev,ntra)</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="keywordtype">REAL</span> :: dthbydt_sh(n_sh,nlev)</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="keywordtype">REAL</span> :: dqbydt_sh(n_sh,nlev)</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="keywordtype">REAL</span> :: dubydt_sh(n_sh,nlev)</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="keywordtype">REAL</span> :: dvbydt_sh(n_sh,nlev)</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;<span class="keywordtype">REAL</span> :: rain_sh(n_sh)</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="keywordtype">REAL</span> :: snow_sh(n_sh)</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="keywordtype">REAL</span> :: rain_3d_sh(n_sh,nlev)</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="keywordtype">REAL</span> :: snow_3d_sh(n_sh,nlev)</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="keywordtype">REAL</span> :: tcw_sh(n_sh)</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="keywordtype">INTEGER</span> :: iccb_sh(n_sh)</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;<span class="keywordtype">INTEGER</span> :: icct_sh(n_sh)</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;<span class="keywordtype">REAL</span> :: cclwp_sh(n_sh)</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;<span class="keywordtype">REAL</span> :: cca_sh(n_sh,n_cca_lev)</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;<span class="keywordtype">REAL</span> :: ccw_sh(n_sh,nlev)</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;<span class="keywordtype">REAL</span> :: lcca_sh(n_sh)</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="keywordtype">INTEGER</span> :: lcbase_sh(n_sh)</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="keywordtype">INTEGER</span> :: lctop_sh(n_sh)</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="keywordtype">INTEGER</span> :: freeze_lev_sh(n_sh)</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="keywordtype">REAL</span> :: up_flux_sh(n_sh,nlev)</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="keywordtype">REAL</span> :: up_flux_half_sh(n_sh,nlev)</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="keywordtype">REAL</span> :: dwn_flux_sh(n_sh,nlev)</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;<span class="keywordtype">REAL</span> :: entrain_up_sh(n_sh,nlev)</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;<span class="keywordtype">REAL</span> :: detrain_up_sh(n_sh,nlev)</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="keywordtype">REAL</span> :: entrain_dwn_sh(n_sh,nlev)</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;<span class="keywordtype">REAL</span> :: detrain_dwn_sh(n_sh,nlev)</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;<span class="keywordtype">REAL</span> :: uw_shall_sh(n_sh,nlev)</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="keywordtype">REAL</span> :: vw_shall_sh(n_sh,nlev)</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;<span class="keywordtype">REAL</span> :: cape_out_sh(n_sh)</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;<span class="keywordtype">REAL</span> :: qse_sh(n_sh,nlev)</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;<span class="keywordtype">REAL</span> :: qcl_sh(n_sh,nlev)</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;<span class="keywordtype">REAL</span> :: qcf_sh(n_sh,nlev)</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;<span class="keywordtype">REAL</span> :: cf_liquid_sh(n_sh,nlev)</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;<span class="keywordtype">REAL</span> :: cf_frozen_sh(n_sh,nlev)</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;<span class="keywordtype">REAL</span> :: bulk_cf_sh(n_sh,nlev)</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;<span class="keywordtype">REAL</span> :: dqclbydt_sh(n_sh,nlev)</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;<span class="keywordtype">REAL</span> :: dqcfbydt_sh(n_sh,nlev)</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="keywordtype">REAL</span> :: dcflbydt_sh(n_sh,nlev)</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;<span class="keywordtype">REAL</span> :: dcffbydt_sh(n_sh,nlev)</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="keywordtype">REAL</span> :: dbcfbydt_sh(n_sh,nlev)</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="keywordtype">REAL</span> :: dtrabydt_sh(n_sh,nlev,ntra) <span class="comment">! Increment to tracer due to</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;                                    <span class="comment">! convection (kg/kg/s)</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="keywordtype">REAL</span> :: cca_2d_sh(n_sh)        <span class="comment">! required by mid level scheme</span></div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;<span class="comment">!  compressed SCM diagnostics for adaptive modset</span></div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;<span class="keywordtype">REAL</span> :: rbuoy_p_out_sh(n_sh,nlev)</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;<span class="keywordtype">REAL</span> :: the_out_sh(n_sh,nlev)</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;<span class="keywordtype">REAL</span> :: thp_out_sh(n_sh,nlev)</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;<span class="keywordtype">REAL</span> :: qe_out_sh(n_sh,nlev)</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;<span class="keywordtype">REAL</span> :: qp_out_sh(n_sh,nlev)</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;<span class="comment">! LOCAL compressed arrays to be passed to MID-LEVEL convection scheme.</span></div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;<span class="comment">! Arrays are identified by underscore MD (_md) and are of length</span></div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;<span class="comment">! npnts where npnts is the total number of points in the grid (since</span></div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;<span class="comment">! mid-level convection may occur on any point previously diagnosed as</span></div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;<span class="comment">! shallow or deep).</span></div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;<span class="comment">!  compressed SCM diagnostics for adaptive modset</span></div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;<span class="keywordtype">REAL</span> :: rbuoy_p_out_md(n_md,nlev)</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;<span class="keywordtype">REAL</span> :: the_out_md(n_md,nlev)</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;<span class="keywordtype">REAL</span> :: thp_out_md(n_md,nlev)</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;<span class="keywordtype">REAL</span> :: qe_out_md(n_md,nlev)</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;<span class="keywordtype">REAL</span> :: qp_out_md(n_md,nlev)</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;<span class="keywordtype">INTEGER</span> :: midtrig(n_md)   <span class="comment">! Level at which mid level convection</span></div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                           <span class="comment">! may start</span></div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;<span class="keywordtype">INTEGER</span> :: mdi(n_md)       <span class="comment">! index for mid points in full grid</span></div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;<span class="keywordtype">REAL</span> :: p_layer_centres_md(n_md,0:nlev)</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<span class="keywordtype">REAL</span> :: p_layer_boundaries_md(n_md,0:nlev)</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;<span class="keywordtype">REAL</span> :: exner_layer_centres_md(n_md,0:nlev)</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;<span class="keywordtype">REAL</span> :: exner_layer_boundaries_md(n_md,0:nlev)</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;<span class="keywordtype">REAL</span> :: rho_theta_md(n_md,nlev), rho_md(n_md,nlev)</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;<span class="keywordtype">REAL</span> :: z_theta_md(n_md,nlev), z_rho_md(n_md,nlev)</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;<span class="keywordtype">REAL</span> :: r_theta_md(n_md,0:nlev), r_rho_md(n_md,nlev)</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;<span class="keywordtype">REAL</span> :: w_max_md(n_md)</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;<span class="keywordtype">REAL</span> :: u_md(n_md,nlev)</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;<span class="keywordtype">REAL</span> :: v_md(n_md,nlev)</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;<span class="keywordtype">REAL</span> :: th_md(n_md,nlev)</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;<span class="keywordtype">REAL</span> :: q_md(n_md,nlev)</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;<span class="keywordtype">REAL</span> :: tracer_md(n_md,trlev,ntra)</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;<span class="keywordtype">REAL</span> :: dthbydt_md(n_md,nlev)</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;<span class="keywordtype">REAL</span> :: dqbydt_md(n_md,nlev)</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;<span class="keywordtype">REAL</span> :: dubydt_md(n_md,nlev)</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;<span class="keywordtype">REAL</span> :: dvbydt_md(n_md,nlev)</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;<span class="keywordtype">REAL</span> :: rain_md(n_md)</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;<span class="keywordtype">REAL</span> :: snow_md(n_md)</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;<span class="keywordtype">REAL</span> :: rain_3d_md(n_md,nlev)</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="keywordtype">REAL</span> :: snow_3d_md(n_md,nlev)</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;<span class="keywordtype">REAL</span> :: tcw_md(n_md)</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;<span class="keywordtype">INTEGER</span> :: iccb_md(n_md)</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;<span class="keywordtype">INTEGER</span> :: icct_md(n_md)</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;<span class="keywordtype">REAL</span> :: cclwp_md(n_md)</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;<span class="keywordtype">REAL</span> :: cca_md(n_md,n_cca_lev)</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;<span class="keywordtype">REAL</span> :: ccw_md(n_md,nlev)</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;<span class="keywordtype">REAL</span> :: lcca_md(n_md)</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;<span class="keywordtype">INTEGER</span> :: lcbase_md(n_md)</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;<span class="keywordtype">INTEGER</span> :: lctop_md(n_md)</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;<span class="keywordtype">INTEGER</span> :: freeze_lev_md(n_md)</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;<span class="keywordtype">REAL</span> :: t1_sd_md(n_md)</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;<span class="keywordtype">REAL</span> :: q1_sd_md(n_md)</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;<span class="keywordtype">REAL</span> :: pstar_md(n_md)</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;<span class="keywordtype">REAL</span> :: recip_pstar_md(n_md)</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;<span class="keywordtype">LOGICAL</span> :: bland_md(n_md)</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;<span class="keywordtype">INTEGER</span> :: ntpar_md(n_md)</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;<span class="keywordtype">INTEGER</span> :: ntml_md(n_md)</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;<span class="keywordtype">REAL</span> :: up_flux_md(n_md,nlev)</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;<span class="keywordtype">REAL</span> :: up_flux_half_md(n_md,nlev)</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;<span class="keywordtype">REAL</span> :: dwn_flux_md(n_md,nlev)</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;<span class="keywordtype">REAL</span> :: entrain_up_md(n_md,nlev)</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;<span class="keywordtype">REAL</span> :: detrain_up_md(n_md,nlev)</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;<span class="keywordtype">REAL</span> :: entrain_dwn_md(n_md,nlev)</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;<span class="keywordtype">REAL</span> :: detrain_dwn_md(n_md,nlev)</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;<span class="keywordtype">REAL</span> :: cape_out_md(n_md)</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;<span class="keywordtype">REAL</span> :: cfl_limited_md(n_md)</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;<span class="keywordtype">REAL</span> :: qcl_md(n_md,nlev)</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;<span class="keywordtype">REAL</span> :: qcf_md(n_md,nlev)</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;<span class="keywordtype">REAL</span> :: cf_liquid_md(n_md,nlev)</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;<span class="keywordtype">REAL</span> :: cf_frozen_md(n_md,nlev)</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;<span class="keywordtype">REAL</span> :: bulk_cf_md(n_md,nlev)</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;<span class="keywordtype">REAL</span> :: dqclbydt_md(n_md,nlev)</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;<span class="keywordtype">REAL</span> :: dqcfbydt_md(n_md,nlev)</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;<span class="keywordtype">REAL</span> :: dcflbydt_md(n_md,nlev)</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;<span class="keywordtype">REAL</span> :: dcffbydt_md(n_md,nlev)</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;<span class="keywordtype">REAL</span> :: dbcfbydt_md(n_md,nlev)</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;<span class="keywordtype">REAL</span> :: dtrabydt_md(n_md,nlev,ntra) <span class="comment">! Increment to tracer due to</span></div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;                                    <span class="comment">! convection (kg/kg/s)</span></div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;<span class="keywordtype">REAL</span> :: qse_md(n_md,nlev)      <span class="comment">! Saturation mixing ratio of</span></div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;                               <span class="comment">! cloud environment (kg/kg)</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;<span class="keywordtype">REAL</span> :: cca_2d_md(n_md)        <span class="comment">! required by mid level scheme</span></div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_mid_md(n_md)     <span class="comment">! true if mid level convection</span></div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;                              <span class="comment">! compressed version of l_mid_all</span></div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;<span class="comment">! Mixing ratio / specific humidity conversions</span></div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;<span class="comment">!  The full model holds q, qcl and qcf, all of which should be used in the</span></div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;<span class="comment">!  conversions and evaluation of qt. (High resolution versions can also</span></div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;<span class="comment">!  hold other moist variables.) The current mass flux scheme without</span></div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;<span class="comment">!  PC2 assume qt=q i.e. it ignores the presence of qcl and qcf.</span></div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;<span class="comment">!  This assumption is also true of the new shallow turbulence based scheme.!  Let m indicate mixing ratio and q specific then</span></div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;<span class="comment">!  Now taking account of all moist variables</span></div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;<span class="comment">!      qt = qv + qcl + qcf + (qrain + qgraup + qcf2)</span></div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;<span class="comment">!      mt = mv + mcl + mcf + (mrain + mgraup + mcf2)</span></div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;<span class="comment">! Note there could be problems if qcf2 is present as in this case qcf holds</span></div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;<span class="comment">! the snow like ice and qcf2 the ice crystals so what is &quot;seen&quot; and incremented</span></div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;<span class="comment">! by convection (i.e. qcf) could be inappropriate.</span></div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;<span class="comment">!  Not PC2</span></div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;<span class="comment">!      dqcl = 0.0,      dqcf = 0.0</span></div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;<span class="comment">!      dmcl = 0.0,      dmcf = 0.0</span></div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;<span class="comment">!  Before scheme</span></div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;<span class="comment">!  mv(t) = qv(t)/(1-qt(t))          or qv(t) = mv(t)/(1+mt(t))</span></div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;<span class="comment">!  after scheme</span></div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;<span class="comment">!  mv(t+dt) = qv(t+dt)/(1-qt(t+dt)) or qv(t+dt) = mv(t+dt)/(1+mt(t+dt))</span></div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;<span class="comment">!  where</span></div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;<span class="comment">!  dmv= mv(t+dt) -  mv(t)           or dqv  =  qv(t+dt)- qv(t)</span></div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;<span class="comment">! How to convert increments</span></div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;<span class="comment">!  dmv = (dqv + qv*dqt - qt*dqv)/[(1-qt)(1-qt-dqt)]</span></div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;<span class="comment">!   or</span></div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;<span class="comment">!  dqv = (dmv + mt*dmv - mv*dmt)/[(1+mt)(1+mt+dmt)]</span></div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;<span class="comment">! if mt = mv  then dqv = dmv /[(1+mt)(1+mt+dmt)]</span></div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;<span class="comment">! Conversion of qsat</span></div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;<span class="comment">! rsat - mixing ratio saturation value</span></div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;<span class="comment">! qsat=rsat/(1+rsat)      and rsat=qsat(1-qsat)</span></div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;<span class="comment">!  Arrays required for mixing ratio to specific conversions</span></div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;<span class="keywordtype">REAL</span> :: qt(npnts,nlev)    <span class="comment">! total water variable either mixing</span></div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;                          <span class="comment">! ratio or specific humidity (kg/kg)</span></div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;                          <span class="comment">! qt = q + qcl + qcf + (qrain+qgraup+qcf2)</span></div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;                          <span class="comment">! ( ) extra moist variables not in most runs.REAL ::                &amp;</span></div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;  dqt                  &amp;  <span class="comment">! total moisture increment per timestep</span></div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;, dqtt                 &amp;  <span class="comment">! total moisture increment per s</span></div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;, denom                   <span class="comment">! 1./denominator</span></div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;<span class="comment">!  Arrays required by 3d CCA calculation</span></div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;<span class="keywordtype">REAL</span> :: cca_2d(npnts)        <span class="comment">! 2d convective cloud (section 5)</span></div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;<span class="keywordtype">REAL</span> :: cca0_2d(npnts)       <span class="comment">! 2d convective cloud (section 0)</span></div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;<span class="keywordtype">REAL</span> :: tcw(npnts)           <span class="comment">! total column water on all points</span></div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;<span class="comment">! Saturation mixing ratio calulation and 1/pstar</span></div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;<span class="keywordtype">REAL</span> :: recip_pstar(npnts)      <span class="comment">! Reciprocal of pstar array</span></div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;<span class="keywordtype">REAL</span> :: qse(npnts,nlev)         <span class="comment">! Saturation specific humidity of</span></div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;                                <span class="comment">! cloud environment (kg/kg)</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;<span class="keywordtype">REAL</span> :: pt(npnts)               <span class="comment">! Temporary store for P in calc.</span></div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;                                <span class="comment">! of sat. mixing ratio. (Pa)</span></div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;<span class="keywordtype">REAL</span> :: tt(npnts)               <span class="comment">! Temporary store for T in calc.</span></div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;                                <span class="comment">! of saturation mixing ratio. (K)</span></div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;<span class="keywordtype">REAL</span> :: ttkm1(npnts)            <span class="comment">! Temporary store for T in layer</span></div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;                                <span class="comment">! k-1 for use in freezing level</span></div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;                                <span class="comment">! calc. for anvil. (K)</span></div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;<span class="comment">!  compressed SCM diagnostics for adaptive modset</span></div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;<span class="keywordtype">REAL</span> :: rbuoy_p_out(npnts,nlev)</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;<span class="keywordtype">REAL</span> :: the_out(npnts,nlev)</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;<span class="keywordtype">REAL</span> :: thp_out(npnts,nlev)</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;<span class="keywordtype">REAL</span> :: qe_out(npnts,nlev)</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;<span class="keywordtype">REAL</span> :: qp_out(npnts,nlev)</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;<span class="comment">! copies so we can see if mid convection modifies the profile</span></div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;<span class="keywordtype">REAL</span> :: rbuoy_p_out_copy(npnts,nlev)</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;<span class="keywordtype">REAL</span> :: the_out_copy(npnts,nlev)</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;<span class="keywordtype">REAL</span> :: thp_out_copy(npnts,nlev)</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;<span class="keywordtype">REAL</span> :: qe_out_copy(npnts,nlev)</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;<span class="keywordtype">REAL</span> :: qp_out_copy(npnts,nlev)</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;<span class="comment">!  arrays required by grid calculations</span></div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;<span class="keywordtype">REAL</span> ::                    &amp;</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160; r2rho_th(npnts,nlev)      &amp; <span class="comment">! radius**2 density theta lev (kg/m)</span></div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;,r2rho(npnts,nlev)         &amp; <span class="comment">! radius**2 density rho lev (kg/m)</span></div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;,dr_across_th(npnts,nlev)  &amp; <span class="comment">! thickness of theta levels (m)</span></div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;,dr_across_rh(npnts,nlev)    <span class="comment">! thickness of rho levels (m)</span></div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;<span class="comment">!  arrays required by energy correction</span></div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;<span class="keywordtype">INTEGER</span> :: index1(npnts)</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;<span class="keywordtype">INTEGER</span> :: nconv_all         <span class="comment">! Total number of points convecting</span></div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;<span class="comment">!   required by check on -ve q</span></div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;<span class="keywordtype">REAL</span> :: qminincolumn(npnts)     <span class="comment">! Minimum value for q in column</span></div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;                                <span class="comment">! (kg/kg)</span></div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;<span class="keywordtype">REAL</span> :: temp1(npnts)            <span class="comment">! work array</span></div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;<span class="comment">! array required by tracers at end</span></div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;<span class="keywordtype">REAL</span> :: limited_step(npnts)     <span class="comment">! Reduced step size for tracer</span></div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;                                <span class="comment">! mixing</span></div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;<span class="keywordtype">REAL</span> :: step_test(npnts)        <span class="comment">! Work array used in reducing step</span></div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;<span class="comment">! Parameters</span></div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: qmin = 1.0e-8 <span class="comment">! Global minimum allowed Q</span></div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: safety_margin = 1.0e-100 <span class="comment">! Small number used in</span></div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;                                <span class="comment">! tracer step reduction</span></div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;<span class="preprocessor"></span><span class="keywordtype">REAL</span> :: rout(npnts)</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="keywordtype">REAL</span> :: r2out(npnts,nlev+1)</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;<span class="keywordtype">CHARACTER (LEN=15)</span> :: sname</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;<span class="keywordtype">CHARACTER (LEN=100)</span> :: lname</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;<span class="keywordtype">CHARACTER (LEN=11)</span> :: units</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;<span class="comment">! Loop counters</span></div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;<span class="keywordtype">INTEGER</span> :: i,j,k,ktra,idp</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;GLUE_CONV_4A&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;<span class="comment">! Initialise output variables</span></div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;<span class="comment">! Note a lot of the variables are initialised in ni_conv_ctl so don&#39;t</span></div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;<span class="comment">! need to be iniitalised here.</span></div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;<span class="keywordflow">DO</span> i=1, npnts</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;  ind_cape_reduced(i) = 0.0</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;  cape_ts_used(i)     = 0.0</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;  ind_deep(i)         = 0.0</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;  ind_shall(i)        = 0.0</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;  kterm_shall(i)      = ntpar(i)   <span class="comment">! set to same as ntpar</span></div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;<span class="preprocessor"></span> <span class="comment">! initialize adaptive en/detrainment variables</span></div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160; <span class="comment">! full arrays initialized to environmental profile</span></div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;<span class="keywordflow">DO</span> k = 1, nlev</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;  <span class="keywordflow">DO</span> i = 1, npnts</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;    rbuoy_p_out(i,k)=0.0</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;    the_out(i,k)=th(i,k)</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;    thp_out(i,k)=th(i,k)</div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;    qe_out(i,k)=q(i,k)</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;    qp_out(i,k)=q(i,k)</div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;    rbuoy_p_out_copy(i,k)=0.0</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;    the_out_copy(i,k)=th(i,k)</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;    thp_out_copy(i,k)=th(i,k)</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;    qe_out_copy(i,k)=q(i,k)</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;    qp_out_copy(i,k)=q(i,k)</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160; <span class="comment">! compressed arrays initialised to zero (will be</span></div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160; <span class="comment">! initialised to compressed versions of environmental</span></div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160; <span class="comment">! profile within DPCONV, SHCONV and MDCONV</span></div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;<span class="keywordflow">DO</span> k = 1, nlev</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;  <span class="keywordflow">DO</span> i = 1, n_dp</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;    rbuoy_p_out_dp(i,k)=0.0</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;    the_out_dp(i,k)=0.0</div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;    thp_out_dp(i,k)=0.0</div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;    qe_out_dp(i,k)=0.0</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;    qp_out_dp(i,k)=0.0</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;<span class="keywordflow">DO</span> k = 1, nlev</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;  <span class="keywordflow">DO</span> i = 1, n_sh</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;    rbuoy_p_out_sh(i,k)=0.0</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;    the_out_sh(i,k)=0.0</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;    thp_out_sh(i,k)=0.0</div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;    qe_out_sh(i,k)=0.0</div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;    qp_out_sh(i,k)=0.0</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;<span class="keywordflow">DO</span> k = 1, nlev</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;  <span class="keywordflow">DO</span> i = 1, n_md</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;    rbuoy_p_out_md(i,k)=0.0</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;    the_out_md(i,k)=0.0</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;    thp_out_md(i,k)=0.0</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;    qe_out_md(i,k)=0.0</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;    qp_out_md(i,k)=0.0</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;<span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;  <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;    dqbydt(i,k)              = 0.0</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;    dthbydt(i,k)             = 0.0</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;    dqclbydt(i,k)            = 0.0</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;    dqcfbydt(i,k)            = 0.0</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;    dcflbydt(i,k)            = 0.0</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;    dcffbydt(i,k)            = 0.0</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;    dbcfbydt(i,k)            = 0.0</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;    ccw(i,k)                 = 0.0</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;<span class="comment">! Initialisation of qt used for mixing/specific conversions</span></div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;<span class="comment">! Taking account of all possible moist variables even if not use in the! convection scheme</span></div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;<span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;  <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;    qt(i,k) = q(i,k) + qcl(i,k) + qcf(i,k)</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;<span class="keywordflow">IF</span> (l_mcr_qrain) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;  <span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;      qt(i,k) = qt(i,k) + qrain(i,k)</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;<span class="keywordflow">IF</span> (l_mcr_qgraup) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;  <span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;      qt(i,k) = qt(i,k) + qgraup(i,k)</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;<span class="keywordflow">IF</span> (l_mcr_qcf2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;  <span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;      qt(i,k) = qt(i,k) + qcf2(i,k)</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a9fa9c42ad2da411d2451fd13fbf43514">l_mom</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;  <span class="keywordflow">DO</span> k=1,nlev+1</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;      dubydt(i,k)              = 0.0</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;      dvbydt(i,k)              = 0.0</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;<span class="keywordflow">IF</span> (l_tracer) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;  <span class="keywordflow">DO</span> ktra = 1,ntra</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;      <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;        dtrabydt(i,k,ktra)  = 0.0   <span class="comment">! tracer increments</span></div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;<span class="comment">! Initialise diagnostics if requested</span></div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#aaa805ef81602a9e8e678e5f68be250ee">flg_up_flx</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;      up_flux(i,k)             = 0.0</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;<span class="keywordflow">IF</span> (flg_up_flx_half) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;      up_flux_half(i,k)             = 0.0</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a645dd024842155b75c5b638f11391ac9">flg_dwn_flx</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;      dwn_flux(i,k)            = 0.0</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a594eca06c1e2300b31f8c2bba686ff1e">flg_entr_up</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;      entrain_up(i,k)          = 0.0</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a23946cc9e076aa4865e7ed4049aa6e81">flg_detr_up</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;      detrain_up(i,k)          = 0.0</div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a9986060bf6c1a80468d9ae32b6bafcf9">flg_entr_dwn</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;      entrain_dwn(i,k)         = 0.0</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#ad0f02382d0dbfd786770638461d8ec1f">flg_detr_dwn</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;      detrain_dwn(i,k)         = 0.0</div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;</div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;<span class="comment">! Extra variable initialisation for safety</span></div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;<span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;  tcw(i)      = 0.0</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a8ad7f9b76c238f1296578bc734c44ca3" title="CMT diagnostics. ">flg_uw_dp</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;      uw_deep(i,k)  = 0.0</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#aa98da005ff21a3429a63c19b3402d51c">flg_vw_dp</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;      vw_deep(i,k)  = 0.0</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#ad13801fb31f0f607d924aba4b0ab0839">flg_uw_shall</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;      uw_shall(i,k) = 0.0</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a866a659288edb036141e19b4892f24d9">flg_vw_shall</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;      vw_shall(i,k) = 0.0</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a07d96035eb5459cb6d7d19ce42605813">flg_uw_mid</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;      uw_mid(i,k) = 0.0</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#af9e9924917c7bb34ddc6e70aa6a81f22">flg_vw_mid</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;      vw_mid(i,k) = 0.0</div><div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;</div><div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;</div><div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;<span class="comment">! Required to get same convective cloud as old scheme</span></div><div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;<span class="comment">! Need to pass values from deep and shallow to mid level.</span></div><div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;<span class="comment">! Currently conversion of 2d to 3d makes use of total 2d from</span></div><div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;<span class="comment">! shallow/deep and mid in a column. If in future the conversion</span></div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;<span class="comment">! does not work on a column total this could be removed.</span></div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;</div><div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;<span class="keywordflow">DO</span> i=1,n_md</div><div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;  tcw_md(i) = 0.0</div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;  iccb_md(i) = 0</div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;  icct_md(i) = 0</div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;  cca_2d_md(i) = 0.0</div><div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;</div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;</div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;<span class="comment">!  grid information</span></div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;<span class="comment">! Calculate quantities involving density etc for future use</span></div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;<span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;  <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;    dr_across_rh(i,k) = r_theta(i,k) - r_theta(i,k-1)</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;    r2rho(i,k)        = r_rho(i,k)*r_rho(i,k)*rho(i,k)</div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;<span class="comment">! rho_theta only set for nlev-1</span></div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;</div><div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;k=1     <span class="comment">! bottom theta level thicker</span></div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;  <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;    dr_across_th(i,k) = r_rho(i,k+1) - r_theta(i,0)</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;    r2rho_th(i,k)     = r_theta(i,k)*r_theta(i,k)*rho_theta(i,k)</div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;<span class="keywordflow">DO</span> k=2,nlev-1</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;  <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;    dr_across_th(i,k) = r_rho(i,k+1) - r_rho(i,k)</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;    r2rho_th(i,k)     = r_theta(i,k)*r_theta(i,k)*rho_theta(i,k)</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;</div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;k=nlev     <span class="comment">! top layer  (hope not used ?</span></div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;           <span class="comment">!             assume density as layer below)</span></div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;  <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;    dr_across_th(i,k) = r_theta(i,nlev) - r_rho(i,k)</div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;    r2rho_th(i,k)     = r_theta(i,k)*r_theta(i,k)*rho_theta(i,k-1)</div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;</div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;</div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;<span class="comment">! 1.0 Section to calculate fields used by all convection types.</span></div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;<span class="comment">! Note cheaper to do here than in individual routines.</span></div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;<span class="comment">! Create saturation mixing ratio arrays  &amp; calculate freeze level</span></div><div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;</div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;<span class="comment">! Calculate 1/pstar and initialize freeze_lev array.</span></div><div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;<span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;  recip_pstar(i)=1.0 / pstar(i)</div><div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;  freeze_lev(i) = 1</div><div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;</div><div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;<span class="comment">! Loop over levels</span></div><div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;</div><div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;<span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;</div><div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;<span class="comment">! Find freezing level</span></div><div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;</div><div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;  <span class="keywordflow">IF</span> (k  ==  1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;      tt(i) = th(i,k) * exner_layer_centres(i,k)</div><div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;      pt(i) = p_layer_centres(i,k)</div><div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;</div><div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;<span class="comment">! Commented out as initialisation sets freeze_lev to 1.</span></div><div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;<span class="comment">! Code left incase altered in future.</span></div><div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;</div><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;<span class="comment">!            If (tt(i)  &lt;   TM) then</span></div><div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;<span class="comment">!              freeze_lev(i) = k</span></div><div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;<span class="comment">!            End If</span></div><div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;</div><div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;      ttkm1(i) = tt(i)</div><div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;      tt(i) = th(i,k) * exner_layer_centres(i,k)</div><div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;      pt(i) = p_layer_centres(i,k)</div><div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;      <span class="keywordflow">IF</span> (tt(i)  &lt;   tm .AND. ttkm1(i)  &gt;=  tm) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;        <span class="keywordflow">IF</span> (freeze_lev(i) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;          freeze_lev(i) = k</div><div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;</div><div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;</div><div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;<span class="comment">! Calculate saturation specific humidity as mass flux schemes all expect</span></div><div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;<span class="comment">! specific input</span></div><div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;</div><div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;<span class="comment">! DEPENDS ON: qsat_mix</span></div><div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;  <span class="keyword">CALL </span><a class="code" href="qsat__mix_8f90.xhtml#ab2c9bd03497c107afdc2ea71e3887626" title="Saturation Specific Humidity/mixing Scheme(Qsat):Vapour to Liquid/Ice. ">qsat_mix</a>(qse(1,k),tt,pt,npnts,.false.)</div><div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;</div><div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;<span class="keywordflow">END DO</span>  <span class="comment">! nlev</span></div><div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;</div><div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;</div><div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;<span class="comment">! 1.0 DEEP Convection</span></div><div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;<span class="comment">! 1.1 Compress input variable arrays for deep convection scheme to</span></div><div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;<span class="comment">!     length n_dp (deep points only)</span></div><div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;</div><div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;<span class="keywordflow">IF</span> (n_dp  &gt;   0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;  j = 0</div><div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;  <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;    <span class="keywordflow">IF</span> (cumulus_bl(i).AND..NOT.l_shallow_bl(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;      j                        = j+1</div><div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;      dpi(j)                   = i</div><div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;</div><div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;  <span class="comment">! Initialise output variables</span></div><div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;  <span class="keywordflow">DO</span> k=1, nlev</div><div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;    <span class="keywordflow">DO</span> i=1, n_dp</div><div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;      rain_3d_dp(i,k) = 0.0</div><div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;      snow_3d_dp(i,k) = 0.0</div><div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;<span class="comment">! In only variables</span></div><div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;</div><div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;  <span class="keywordflow">DO</span> j=1,n_dp</div><div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;    bland_dp(j)           = bland(dpi(j))</div><div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;    ntml_dp(j)            = ntml(dpi(j))</div><div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;    ntpar_dp(j)           = ntpar(dpi(j))</div><div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;    pstar_dp(j)           = pstar(dpi(j))</div><div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;    recip_pstar_dp(j)     = recip_pstar(dpi(j))</div><div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;    q1_sd_dp(j)           = q1_sd(dpi(j))</div><div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;    t1_sd_dp(j)           = t1_sd(dpi(j))</div><div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;    uw0_dp(j)             = uw0(dpi(j))</div><div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;    vw0_dp(j)             = vw0(dpi(j))</div><div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;    w_max_dp(j)           = w_max(dpi(j))</div><div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;    wstar_dp(j)           = wstar(dpi(j))</div><div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;    zlcl_uv_dp(j)         = zlcl_uv(dpi(j))</div><div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;    freeze_lev_dp(j)      = freeze_lev(dpi(j))</div><div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;    delthvu_dp(j)         = delthvu_bl(dpi(j))</div><div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;</div><div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;  <span class="keywordflow">DO</span> k = 0,nlev</div><div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;    <span class="keywordflow">DO</span> j=1,n_dp</div><div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;      p_layer_centres_dp(j,k)    = p_layer_centres(dpi(j),k)</div><div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;      p_layer_boundaries_dp(j,k) = p_layer_boundaries(dpi(j),k)</div><div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;</div><div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;      exner_layer_centres_dp(j,k)    = exner_layer_centres(dpi(j),k)</div><div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;      exner_layer_boundaries_dp(j,k) = exner_layer_boundaries(dpi(j),k)</div><div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;      r_theta_dp(j,k)  = r_theta(dpi(j),k)</div><div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;</div><div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;    <span class="keywordflow">DO</span> j=1,n_dp</div><div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;      u_dp(j,k)           = u(dpi(j),k)</div><div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;      v_dp(j,k)           = v(dpi(j),k)</div><div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;      th_dp(j,k)          = th(dpi(j),k)</div><div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;      z_theta_dp(j,k)     = z_theta(dpi(j),k)</div><div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;      z_rho_dp(j,k)       = z_rho(dpi(j),k)</div><div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;      r_rho_dp(j,k)       = r_rho(dpi(j),k)</div><div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;      r2rho_th_dp(j,k)     = r2rho_th(dpi(j),k)</div><div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;      r2rho_dp(j,k)        = r2rho(dpi(j),k)</div><div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;      rho_theta_dp(j,k)    = rho_theta(dpi(j),k)</div><div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;      rho_dp(j,k)          = rho(dpi(j),k)</div><div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;      dr_across_th_dp(j,k) = dr_across_th(dpi(j),k)</div><div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;      dr_across_rh_dp(j,k) = dr_across_rh(dpi(j),k)</div><div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;</div><div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;<span class="comment">! G-R mass flux scheme requires input of specific humidity</span></div><div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;</div><div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;  <span class="keywordflow">IF</span> (l_mixing_ratio) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;</div><div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;      <span class="keywordflow">DO</span> j = 1,n_dp</div><div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;        q_dp(j,k)   = q(dpi(j),k)  /(1.0+qt(dpi(j),k))</div><div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;        qse_dp(j,k) = qse(dpi(j),k)  <span class="comment">! copy specific value</span></div><div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;        qcl_dp(j,k) = qcl(dpi(j),k)/(1.0+qt(dpi(j),k))</div><div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;        qcf_dp(j,k) = qcf(dpi(j),k)/(1.0+qt(dpi(j),k))</div><div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;</div><div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;  <span class="keywordflow">ELSE</span>   <span class="comment">! Input is specific humidity therefore no problems</span></div><div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;</div><div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;      <span class="keywordflow">DO</span> j = 1,n_dp</div><div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;        q_dp(j,k)   = q(dpi(j),k)</div><div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;        qse_dp(j,k) = qse(dpi(j),k) <span class="comment">! copy specific value</span></div><div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;        qcl_dp(j,k) = qcl(dpi(j),k)</div><div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;        qcf_dp(j,k) = qcf(dpi(j),k)</div><div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;</div><div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! (l_mixing_ratio)</span></div><div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;</div><div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;</div><div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;<span class="comment">! In/out variables</span></div><div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;</div><div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;</div><div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;    <span class="keywordflow">DO</span> j=1,n_dp</div><div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;      cf_liquid_dp(j,k)   = cf_liquid(dpi(j),k)</div><div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;      cf_frozen_dp(j,k)   = cf_frozen(dpi(j),k)</div><div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;      bulk_cf_dp(j,k)     = bulk_cf(dpi(j),k)</div><div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;</div><div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;  <span class="keywordflow">IF</span> (l_tracer) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;    <span class="keywordflow">DO</span> ktra = 1,ntra</div><div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;      <span class="keywordflow">DO</span> k = 1,trlev</div><div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;        <span class="keywordflow">DO</span> j=1,n_dp</div><div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;          tracer_dp(j,k,ktra)  = tracer(dpi(j),k,ktra)</div><div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;      <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;        <span class="keywordflow">DO</span> j=1,n_dp</div><div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;          dtrabydt_dp(j,k,ktra)  = 0.0</div><div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;</div><div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;</div><div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;</div><div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;<span class="comment">! 1.2 Call deep convection code</span></div><div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;</div><div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;<span class="comment">! DEPENDS ON: deep_conv_4a</span></div><div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;  <span class="keyword">CALL </span><a class="code" href="deep__conv-dpconv4a_8f90.xhtml#a4a054214a4fde2ea5c75f564b22b7730" title="Deep convection scheme. ">deep_conv_4a</a>(                                              &amp;</div><div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;                 <span class="comment">!IN</span></div><div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;                 nbl,nlev,ntra,n_cca_lev,n_dp,trlev,              &amp;</div><div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;                 bland_dp, delthvu_dp, exner_layer_centres_dp,    &amp;</div><div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;                 exner_layer_boundaries_dp,                       &amp;</div><div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;                 l_calc_dxek, l_q_interact,                       &amp;</div><div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;                 l_tracer, ntml_dp, ntpar_dp,                     &amp;</div><div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;                 pstar_dp,p_layer_centres_dp,                     &amp;</div><div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;                 p_layer_boundaries_dp,                           &amp;</div><div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;                 z_theta_dp, z_rho_dp, r_theta_dp, r_rho_dp,      &amp;</div><div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;                 rho_theta_dp,rho_dp,r2rho_th_dp,r2rho_dp,        &amp;</div><div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;                 dr_across_th_dp,dr_across_rh_dp,                 &amp;</div><div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;                 q_dp,q1_sd_dp,                                   &amp;</div><div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;                 t1_sd_dp,th_dp,timestep,u_dp,v_dp,               &amp;</div><div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;                 uw0_dp, vw0_dp, w_max_dp, wstar_dp,              &amp;</div><div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;                 zlcl_uv_dp ,freeze_lev_dp,                       &amp;</div><div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;                 recip_pstar_dp,qse_dp,                           &amp;</div><div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;                 <span class="comment">!INOUT</span></div><div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;                 bulk_cf_dp,cf_frozen_dp,cf_liquid_dp,            &amp;</div><div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;                 qcf_dp,qcl_dp,tracer_dp,                         &amp;</div><div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;                 <span class="comment">!OUT</span></div><div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;                 cape_out_dp,cclwp_dp,ccw_dp,cca_dp,              &amp;</div><div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;                 dbcfbydt_dp,dcffbydt_dp,dcflbydt_dp,             &amp;</div><div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;                 dqbydt_dp,dqcfbydt_dp,dqclbydt_dp,               &amp;</div><div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;                 dthbydt_dp,dubydt_dp,dvbydt_dp,dtrabydt_dp,      &amp;</div><div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;                 detrain_up_dp,detrain_dwn_dp,entrain_up_dp,      &amp;</div><div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;                 entrain_dwn_dp,                                  &amp;</div><div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;                 iccb_dp,icct_dp,lcca_dp,lcbase_dp,lctop_dp,      &amp;</div><div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;                 rain_dp, snow_dp, rain_3d_dp, snow_3d_dp,        &amp;</div><div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;                 up_flux_dp, up_flux_half_dp,                     &amp;</div><div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;                 dwn_flux_dp,uw_deep_dp,vw_deep_dp,kterm_dp,      &amp;</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;                 tcw_dp,cca_2d_dp,                                &amp;</div><div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;                 rbuoy_p_out_dp,the_out_dp,thp_out_dp,            &amp;</div><div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;                 qe_out_dp,qp_out_dp,ind_cape_reduced_dp,         &amp;</div><div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;                 cape_ts_used_dp,cfl_limited_dp,ind_deep_dp,      &amp;</div><div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;                 error_point                                      &amp;</div><div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;                 )</div><div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;  <span class="keywordflow">IF</span> (error_point /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;     errorstatus = 2   <span class="comment">! will cause model to fail     write(cmessage,&#39;(a37,i12,a8,i3,a9,i2)&#39;)                      &amp;</span></div><div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;     <span class="stringliteral">&#39;Deep conv went to model top at point &#39;</span>,                     &amp;</div><div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;      dpi(error_point),<span class="stringliteral">&#39; in seg &#39;</span>,seg_num,<span class="stringliteral">&#39; on call &#39;</span>,call_number</div><div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;</div><div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename, errorstatus, cmessage )</div><div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;</div><div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;<span class="keywordflow">  END IF</span>  </div><div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;</div><div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;<span class="comment">! 1.3 Write data from deep convection points to full arrays</span></div><div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;</div><div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;</div><div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;  <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;    cape_out(dpi(i))           = cape_out_dp(i)</div><div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;    cclwp(dpi(i))              = cclwp_dp(i)</div><div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;    iccb(dpi(i))               = iccb_dp(i)</div><div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;    icct(dpi(i))               = icct_dp(i)</div><div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;</div><div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;    lcca(dpi(i))               = lcca_dp(i)</div><div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;    lcbase(dpi(i))             = lcbase_dp(i)</div><div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;    lctop(dpi(i))              = lctop_dp(i)</div><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;</div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;    rain(dpi(i))               = rain_dp(i)</div><div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;    snow(dpi(i))               = snow_dp(i)</div><div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;    precip_deep(dpi(i))        = rain_dp(i) + snow_dp(i)</div><div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;    kterm_deep(dpi(i))         = kterm_dp(i)</div><div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;    ind_cape_reduced(dpi(i))   = ind_cape_reduced_dp(i)</div><div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;    cape_ts_used(dpi(i))       = cape_ts_used_dp(i)</div><div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;    deep_cfl_limited(dpi(i))   = cfl_limited_dp(i)</div><div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;    ind_deep(dpi(i))           = ind_deep_dp(i)</div><div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;</div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;    tcw(dpi(i)) = tcw_dp(i)</div><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;    cca_2d(dpi(i)) = cca_2d_dp(i)</div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;</div><div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a9fa9c42ad2da411d2451fd13fbf43514">l_mom</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;    <span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;        dubydt(dpi(i),k)         = dubydt_dp(i,k)</div><div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;        dvbydt(dpi(i),k)         = dvbydt_dp(i,k)</div><div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;</div><div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;    <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;      dthbydt(dpi(i),k)        = dthbydt_dp(i,k)</div><div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;      dcflbydt(dpi(i),k)       = dcflbydt_dp(i,k)</div><div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;      dcffbydt(dpi(i),k)       = dcffbydt_dp(i,k)</div><div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;      dbcfbydt(dpi(i),k)       = dbcfbydt_dp(i,k)</div><div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;      ccw(dpi(i),k)            = ccw_dp(i,k)</div><div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;</div><div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;  <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;    <span class="keywordflow">DO</span> i=1, n_dp</div><div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;      cca(dpi(i),k) = cca_dp(i,k)</div><div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;</div><div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;</div><div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;</div><div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a39c8fc98ba63da9cee70fe2a91887ced">l_dcpl_cld4pc2</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;    <span class="comment">! Then scaling is done by CCRad, even if PC2 = .true.</span></div><div class="line"><a name="l01632"></a><span class="lineno"> 1632</span>&#160;    <span class="comment">! To zero CCA (section 0) for PC2 use the CCRAD knobs</span></div><div class="line"><a name="l01633"></a><span class="lineno"> 1633</span>&#160;    <span class="comment">! cca_knobs should be set to 0.0 in UMUI for PC2</span></div><div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;</div><div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;    <span class="comment">! Use of Anvils will affect both section 0/5 diags if CCRad knobs</span></div><div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;    <span class="comment">! are not set to 0.0, this may required further attention in future</span></div><div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;      <span class="keywordflow">DO</span> k=1, nlev</div><div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;        <span class="keywordflow">DO</span> i=1, n_dp</div><div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;          ccw0(dpi(i),k) = ccw_dp(i,k) * <a class="code" href="namespacecv__run__mod.xhtml#abbec708342cffae2fd3abdf28ef705b5">ccw_dp_knob</a></div><div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;</div><div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;      <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;        <span class="keywordflow">DO</span> i=1, n_dp</div><div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;          cca0(dpi(i),k) = cca_dp(i,k) * <a class="code" href="namespacecv__run__mod.xhtml#a30a740b68ae78a60151a732d22ad24ab">cca_dp_knob</a></div><div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;</div><div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;</div><div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;      <span class="keywordflow">DO</span> k=1, nlev</div><div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;        <span class="keywordflow">DO</span> i=1, n_dp</div><div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;          ccw0(dpi(i),k) = ccw_dp(i,k)</div><div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;</div><div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;      <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;        <span class="keywordflow">DO</span> i=1, n_dp</div><div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;          cca0(dpi(i),k) = cca_dp(i,k)</div><div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01661"></a><span class="lineno"> 1661</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;</div><div class="line"><a name="l01664"></a><span class="lineno"> 1664</span>&#160;    <span class="keywordflow">DO</span> i=1, n_dp</div><div class="line"><a name="l01665"></a><span class="lineno"> 1665</span>&#160;      cclwp0(dpi(i)) = cclwp(dpi(i))</div><div class="line"><a name="l01666"></a><span class="lineno"> 1666</span>&#160;      iccb0(dpi(i)) = iccb(dpi(i))</div><div class="line"><a name="l01667"></a><span class="lineno"> 1667</span>&#160;      icct0(dpi(i)) = icct(dpi(i))</div><div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160;      lcbase0(dpi(i)) = lcbase(dpi(i))</div><div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;<span class="comment">!         cca0_2d(dpi(i)) = cca0_2d(dpi(i))</span></div><div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;</div><div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;  <span class="keywordflow">ELSE</span> <span class="comment">! Non-CCRad Code</span></div><div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;</div><div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160;    <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01675"></a><span class="lineno"> 1675</span>&#160;    <span class="comment">! PC2 Code (PC2 has no deep contribution)</span></div><div class="line"><a name="l01676"></a><span class="lineno"> 1676</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01677"></a><span class="lineno"> 1677</span>&#160;    <span class="comment">! Non-PC2 Code</span></div><div class="line"><a name="l01678"></a><span class="lineno"> 1678</span>&#160;      <span class="keywordflow">DO</span> i=1, n_dp</div><div class="line"><a name="l01679"></a><span class="lineno"> 1679</span>&#160;        cclwp0(dpi(i)) = cclwp(dpi(i))</div><div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;        iccb0(dpi(i)) = iccb(dpi(i))</div><div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;        icct0(dpi(i)) = icct(dpi(i))</div><div class="line"><a name="l01682"></a><span class="lineno"> 1682</span>&#160;        lcbase0(dpi(i)) = lcbase(dpi(i))</div><div class="line"><a name="l01683"></a><span class="lineno"> 1683</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01684"></a><span class="lineno"> 1684</span>&#160;</div><div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;      <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;        <span class="keywordflow">DO</span> i=1, n_dp</div><div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;          cca0(dpi(i),k) = cca_dp(i,k)</div><div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01690"></a><span class="lineno"> 1690</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01691"></a><span class="lineno"> 1691</span>&#160;</div><div class="line"><a name="l01692"></a><span class="lineno"> 1692</span>&#160;<span class="keywordflow">  END IF</span>        <span class="comment">! l_ccrad</span></div><div class="line"><a name="l01693"></a><span class="lineno"> 1693</span>&#160;</div><div class="line"><a name="l01694"></a><span class="lineno"> 1694</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacerad__input__mod.xhtml#ae6d31cf8ad5fe911da19ee6a3e31bc50">l_cca_dp_prog</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01695"></a><span class="lineno"> 1695</span>&#160;    <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l01696"></a><span class="lineno"> 1696</span>&#160;      <span class="keywordflow">DO</span> i=1, n_dp</div><div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160;        cca0_dp(dpi(i),k) = cca_dp(i,k)</div><div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01699"></a><span class="lineno"> 1699</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01700"></a><span class="lineno"> 1700</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160;</div><div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160;</div><div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;</div><div class="line"><a name="l01704"></a><span class="lineno"> 1704</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l01705"></a><span class="lineno"> 1705</span>&#160;<span class="preprocessor"></span>  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01706"></a><span class="lineno"> 1706</span>&#160;    <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01707"></a><span class="lineno"> 1707</span>&#160;      rbuoy_p_out(dpi(i),k)      = rbuoy_p_out_dp(i,k)</div><div class="line"><a name="l01708"></a><span class="lineno"> 1708</span>&#160;      the_out(dpi(i),k)        = the_out_dp(i,k)</div><div class="line"><a name="l01709"></a><span class="lineno"> 1709</span>&#160;      thp_out(dpi(i),k)        = thp_out_dp(i,k)</div><div class="line"><a name="l01710"></a><span class="lineno"> 1710</span>&#160;<span class="comment">! output remains in mixing/specific as scheme not converted</span></div><div class="line"><a name="l01711"></a><span class="lineno"> 1711</span>&#160;      qe_out(dpi(i),k)         = qe_out_dp(i,k)</div><div class="line"><a name="l01712"></a><span class="lineno"> 1712</span>&#160;      qp_out(dpi(i),k)         = qp_out_dp(i,k)</div><div class="line"><a name="l01713"></a><span class="lineno"> 1713</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01716"></a><span class="lineno"> 1716</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l01717"></a><span class="lineno"> 1717</span>&#160;</div><div class="line"><a name="l01718"></a><span class="lineno"> 1718</span>&#160;<span class="comment">! G-R outputs specific humidity</span></div><div class="line"><a name="l01719"></a><span class="lineno"> 1719</span>&#160;</div><div class="line"><a name="l01720"></a><span class="lineno"> 1720</span>&#160;  <span class="keywordflow">IF</span> (l_mixing_ratio) <span class="keywordflow">THEN</span>  <span class="comment">! Requires conversion</span></div><div class="line"><a name="l01721"></a><span class="lineno"> 1721</span>&#160;</div><div class="line"><a name="l01722"></a><span class="lineno"> 1722</span>&#160;    <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span>  <span class="comment">! PC2</span></div><div class="line"><a name="l01723"></a><span class="lineno"> 1723</span>&#160;</div><div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;      <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160;        <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01726"></a><span class="lineno"> 1726</span>&#160;          dqtt = dqbydt_dp(i,k)+dqclbydt_dp(i,k)+dqcfbydt_dp(i,k)</div><div class="line"><a name="l01727"></a><span class="lineno"> 1727</span>&#160;          dqt  = dqtt*timestep</div><div class="line"><a name="l01728"></a><span class="lineno"> 1728</span>&#160;          denom = 1.0/((1.0-qt(dpi(i),k))*(1.0-qt(dpi(i),k)-dqt))</div><div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;          dqbydt(dpi(i),k)   =  denom *                               &amp;</div><div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160;               ( dqbydt_dp(i,k)*(1.0-qt(dpi(i),k))+q_dp(i,k)*dqtt )</div><div class="line"><a name="l01731"></a><span class="lineno"> 1731</span>&#160;          dqclbydt(dpi(i),k) =  denom *                               &amp;</div><div class="line"><a name="l01732"></a><span class="lineno"> 1732</span>&#160;             ( dqclbydt_dp(i,k)*(1.0-qt(dpi(i),k))+qcl_dp(i,k)*dqtt )</div><div class="line"><a name="l01733"></a><span class="lineno"> 1733</span>&#160;          dqcfbydt(dpi(i),k) =  denom *                               &amp;</div><div class="line"><a name="l01734"></a><span class="lineno"> 1734</span>&#160;             ( dqcfbydt_dp(i,k)*(1.0-qt(dpi(i),k))+qcf_dp(i,k)*dqtt )</div><div class="line"><a name="l01735"></a><span class="lineno"> 1735</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01736"></a><span class="lineno"> 1736</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01737"></a><span class="lineno"> 1737</span>&#160;</div><div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;    <span class="keywordflow">ELSE</span>                    <span class="comment">! Not PC2</span></div><div class="line"><a name="l01739"></a><span class="lineno"> 1739</span>&#160;                          <span class="comment">! No qcl and qcf increments anyway</span></div><div class="line"><a name="l01740"></a><span class="lineno"> 1740</span>&#160;      <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01741"></a><span class="lineno"> 1741</span>&#160;        <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160;          dqt   = dqbydt_dp(i,k)*timestep</div><div class="line"><a name="l01743"></a><span class="lineno"> 1743</span>&#160;          denom = 1.0/((1.0-qt(dpi(i),k))*(1.0-qt(dpi(i),k)-dqt))</div><div class="line"><a name="l01744"></a><span class="lineno"> 1744</span>&#160;          dqbydt(dpi(i),k)    =  dqbydt_dp(i,k) *denom</div><div class="line"><a name="l01745"></a><span class="lineno"> 1745</span>&#160;          dqclbydt(dpi(i),k)  = 0.0</div><div class="line"><a name="l01746"></a><span class="lineno"> 1746</span>&#160;          dqcfbydt(dpi(i),k)  = 0.0</div><div class="line"><a name="l01747"></a><span class="lineno"> 1747</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01748"></a><span class="lineno"> 1748</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01749"></a><span class="lineno"> 1749</span>&#160;</div><div class="line"><a name="l01750"></a><span class="lineno"> 1750</span>&#160;<span class="keywordflow">    END IF</span>                  <span class="comment">! test on PC2</span></div><div class="line"><a name="l01751"></a><span class="lineno"> 1751</span>&#160;</div><div class="line"><a name="l01752"></a><span class="lineno"> 1752</span>&#160;  <span class="keywordflow">ELSE</span>        <span class="comment">! output is specific humidity therefore no problems</span></div><div class="line"><a name="l01753"></a><span class="lineno"> 1753</span>&#160;</div><div class="line"><a name="l01754"></a><span class="lineno"> 1754</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01755"></a><span class="lineno"> 1755</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01756"></a><span class="lineno"> 1756</span>&#160;        dqbydt(dpi(i),k)   = dqbydt_dp(i,k)</div><div class="line"><a name="l01757"></a><span class="lineno"> 1757</span>&#160;        dqclbydt(dpi(i),k) = dqclbydt_dp(i,k)</div><div class="line"><a name="l01758"></a><span class="lineno"> 1758</span>&#160;        dqcfbydt(dpi(i),k) = dqcfbydt_dp(i,k)</div><div class="line"><a name="l01759"></a><span class="lineno"> 1759</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01760"></a><span class="lineno"> 1760</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01761"></a><span class="lineno"> 1761</span>&#160;</div><div class="line"><a name="l01762"></a><span class="lineno"> 1762</span>&#160;<span class="keywordflow">  END IF</span>      <span class="comment">! Test on l_mixing_ratio</span></div><div class="line"><a name="l01763"></a><span class="lineno"> 1763</span>&#160;</div><div class="line"><a name="l01764"></a><span class="lineno"> 1764</span>&#160;</div><div class="line"><a name="l01765"></a><span class="lineno"> 1765</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#aaa805ef81602a9e8e678e5f68be250ee">flg_up_flx</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01766"></a><span class="lineno"> 1766</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01767"></a><span class="lineno"> 1767</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01768"></a><span class="lineno"> 1768</span>&#160;        up_flux(dpi(i),k)        = up_flux_dp(i,k)</div><div class="line"><a name="l01769"></a><span class="lineno"> 1769</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01770"></a><span class="lineno"> 1770</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01771"></a><span class="lineno"> 1771</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01772"></a><span class="lineno"> 1772</span>&#160;  <span class="keywordflow">IF</span> (flg_up_flx_half) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01773"></a><span class="lineno"> 1773</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01774"></a><span class="lineno"> 1774</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01775"></a><span class="lineno"> 1775</span>&#160;        up_flux_half(dpi(i),k)        = up_flux_half_dp(i,k)</div><div class="line"><a name="l01776"></a><span class="lineno"> 1776</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01777"></a><span class="lineno"> 1777</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01778"></a><span class="lineno"> 1778</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a645dd024842155b75c5b638f11391ac9">flg_dwn_flx</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01780"></a><span class="lineno"> 1780</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01781"></a><span class="lineno"> 1781</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01782"></a><span class="lineno"> 1782</span>&#160;        dwn_flux(dpi(i),k)       = dwn_flux_dp(i,k)</div><div class="line"><a name="l01783"></a><span class="lineno"> 1783</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01784"></a><span class="lineno"> 1784</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01785"></a><span class="lineno"> 1785</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01786"></a><span class="lineno"> 1786</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a594eca06c1e2300b31f8c2bba686ff1e">flg_entr_up</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01787"></a><span class="lineno"> 1787</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01788"></a><span class="lineno"> 1788</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01789"></a><span class="lineno"> 1789</span>&#160;        entrain_up(dpi(i),k)     = entrain_up_dp(i,k)</div><div class="line"><a name="l01790"></a><span class="lineno"> 1790</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01791"></a><span class="lineno"> 1791</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01792"></a><span class="lineno"> 1792</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a23946cc9e076aa4865e7ed4049aa6e81">flg_detr_up</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01794"></a><span class="lineno"> 1794</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01795"></a><span class="lineno"> 1795</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;        detrain_up(dpi(i),k)     = detrain_up_dp(i,k)</div><div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01798"></a><span class="lineno"> 1798</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01799"></a><span class="lineno"> 1799</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01800"></a><span class="lineno"> 1800</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a9986060bf6c1a80468d9ae32b6bafcf9">flg_entr_dwn</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01801"></a><span class="lineno"> 1801</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01802"></a><span class="lineno"> 1802</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;        entrain_dwn(dpi(i),k)    = entrain_dwn_dp(i,k)</div><div class="line"><a name="l01804"></a><span class="lineno"> 1804</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01805"></a><span class="lineno"> 1805</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01807"></a><span class="lineno"> 1807</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#ad0f02382d0dbfd786770638461d8ec1f">flg_detr_dwn</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01808"></a><span class="lineno"> 1808</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01809"></a><span class="lineno"> 1809</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01810"></a><span class="lineno"> 1810</span>&#160;        detrain_dwn(dpi(i),k)    = detrain_dwn_dp(i,k)</div><div class="line"><a name="l01811"></a><span class="lineno"> 1811</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01812"></a><span class="lineno"> 1812</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01813"></a><span class="lineno"> 1813</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01814"></a><span class="lineno"> 1814</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a8ad7f9b76c238f1296578bc734c44ca3" title="CMT diagnostics. ">flg_uw_dp</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01815"></a><span class="lineno"> 1815</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01816"></a><span class="lineno"> 1816</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01817"></a><span class="lineno"> 1817</span>&#160;        uw_deep(dpi(i),k)        = uw_deep_dp(i,k)</div><div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01819"></a><span class="lineno"> 1819</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01820"></a><span class="lineno"> 1820</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01821"></a><span class="lineno"> 1821</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#aa98da005ff21a3429a63c19b3402d51c">flg_vw_dp</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01822"></a><span class="lineno"> 1822</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01823"></a><span class="lineno"> 1823</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01824"></a><span class="lineno"> 1824</span>&#160;        vw_deep(dpi(i),k)        = vw_deep_dp(i,k)</div><div class="line"><a name="l01825"></a><span class="lineno"> 1825</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01826"></a><span class="lineno"> 1826</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01827"></a><span class="lineno"> 1827</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01828"></a><span class="lineno"> 1828</span>&#160;</div><div class="line"><a name="l01829"></a><span class="lineno"> 1829</span>&#160;  <span class="keywordflow">IF</span> (l_tracer) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01830"></a><span class="lineno"> 1830</span>&#160;    <span class="keywordflow">DO</span> ktra = 1,ntra</div><div class="line"><a name="l01831"></a><span class="lineno"> 1831</span>&#160;      <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01832"></a><span class="lineno"> 1832</span>&#160;        <span class="keywordflow">DO</span> i = 1, n_dp</div><div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;          dtrabydt(dpi(i),k,ktra)  = dtrabydt_dp(i,k,ktra)</div><div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;</div><div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;<span class="comment">! Merge dp 3d rain &amp; snow profiles</span></div><div class="line"><a name="l01840"></a><span class="lineno"> 1840</span>&#160;</div><div class="line"><a name="l01841"></a><span class="lineno"> 1841</span>&#160;  <span class="keywordflow">DO</span> k=1, nlev</div><div class="line"><a name="l01842"></a><span class="lineno"> 1842</span>&#160;    <span class="keywordflow">DO</span> i=1, n_dp</div><div class="line"><a name="l01843"></a><span class="lineno"> 1843</span>&#160;      rain_3d(dpi(i),k) = rain_3d_dp(i,k)</div><div class="line"><a name="l01844"></a><span class="lineno"> 1844</span>&#160;      snow_3d(dpi(i),k) = snow_3d_dp(i,k)</div><div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01846"></a><span class="lineno"> 1846</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;</div><div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">!n_dp &gt; 0</span></div><div class="line"><a name="l01849"></a><span class="lineno"> 1849</span>&#160;</div><div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;</div><div class="line"><a name="l01851"></a><span class="lineno"> 1851</span>&#160;</div><div class="line"><a name="l01852"></a><span class="lineno"> 1852</span>&#160;<span class="comment">! 2.0 SHALLOW convection</span></div><div class="line"><a name="l01853"></a><span class="lineno"> 1853</span>&#160;<span class="comment">! 2.1 Compress input variable arrays for shallow convection scheme to</span></div><div class="line"><a name="l01854"></a><span class="lineno"> 1854</span>&#160;<span class="comment">!     length n_sh (shallow points only)</span></div><div class="line"><a name="l01855"></a><span class="lineno"> 1855</span>&#160;</div><div class="line"><a name="l01856"></a><span class="lineno"> 1856</span>&#160;<span class="keywordflow">IF</span> (n_sh  &gt;   0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01857"></a><span class="lineno"> 1857</span>&#160;  j = 0</div><div class="line"><a name="l01858"></a><span class="lineno"> 1858</span>&#160;  <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l01859"></a><span class="lineno"> 1859</span>&#160;    <span class="keywordflow">IF</span> (cumulus_bl(i).AND.l_shallow_bl(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01860"></a><span class="lineno"> 1860</span>&#160;      j                        = j+1</div><div class="line"><a name="l01861"></a><span class="lineno"> 1861</span>&#160;      shi(j)                   = i</div><div class="line"><a name="l01862"></a><span class="lineno"> 1862</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01863"></a><span class="lineno"> 1863</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01864"></a><span class="lineno"> 1864</span>&#160;</div><div class="line"><a name="l01865"></a><span class="lineno"> 1865</span>&#160;<span class="comment">! initialise 3d rain varibles</span></div><div class="line"><a name="l01866"></a><span class="lineno"> 1866</span>&#160;</div><div class="line"><a name="l01867"></a><span class="lineno"> 1867</span>&#160;  <span class="keywordflow">DO</span> k=1, nlev</div><div class="line"><a name="l01868"></a><span class="lineno"> 1868</span>&#160;    <span class="keywordflow">DO</span> i=1, n_sh</div><div class="line"><a name="l01869"></a><span class="lineno"> 1869</span>&#160;      rain_3d_sh(i,k) = 0.0</div><div class="line"><a name="l01870"></a><span class="lineno"> 1870</span>&#160;      snow_3d_sh(i,k) = 0.0</div><div class="line"><a name="l01871"></a><span class="lineno"> 1871</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01872"></a><span class="lineno"> 1872</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01873"></a><span class="lineno"> 1873</span>&#160;</div><div class="line"><a name="l01874"></a><span class="lineno"> 1874</span>&#160;<span class="comment">! In only variables</span></div><div class="line"><a name="l01875"></a><span class="lineno"> 1875</span>&#160;</div><div class="line"><a name="l01876"></a><span class="lineno"> 1876</span>&#160;  <span class="keywordflow">DO</span> j = 1,n_sh</div><div class="line"><a name="l01877"></a><span class="lineno"> 1877</span>&#160;    bland_sh(j)           = bland(shi(j))</div><div class="line"><a name="l01878"></a><span class="lineno"> 1878</span>&#160;    delthvu_sh(j)         = delthvu_bl(shi(j))</div><div class="line"><a name="l01879"></a><span class="lineno"> 1879</span>&#160;    ntml_sh(j)            = ntml(shi(j))</div><div class="line"><a name="l01880"></a><span class="lineno"> 1880</span>&#160;    ntpar_sh(j)           = ntpar(shi(j))</div><div class="line"><a name="l01881"></a><span class="lineno"> 1881</span>&#160;    pstar_sh(j)           = pstar(shi(j))</div><div class="line"><a name="l01882"></a><span class="lineno"> 1882</span>&#160;    recip_pstar_sh(j)     = recip_pstar(shi(j))</div><div class="line"><a name="l01883"></a><span class="lineno"> 1883</span>&#160;    q1_sd_sh(j)           = q1_sd(shi(j))</div><div class="line"><a name="l01884"></a><span class="lineno"> 1884</span>&#160;    t1_sd_sh(j)           = t1_sd(shi(j))</div><div class="line"><a name="l01885"></a><span class="lineno"> 1885</span>&#160;    uw0_sh(j)             = uw0(shi(j))</div><div class="line"><a name="l01886"></a><span class="lineno"> 1886</span>&#160;    vw0_sh(j)             = vw0(shi(j))</div><div class="line"><a name="l01887"></a><span class="lineno"> 1887</span>&#160;    wstar_sh(j)           = wstar(shi(j))</div><div class="line"><a name="l01888"></a><span class="lineno"> 1888</span>&#160;    wthvs_sh(j)           = wthvs(shi(j))</div><div class="line"><a name="l01889"></a><span class="lineno"> 1889</span>&#160;    zlcl_uv_sh(j)         = zlcl_uv(shi(j))</div><div class="line"><a name="l01890"></a><span class="lineno"> 1890</span>&#160;    ztop_uv_sh(j)         = ztop_uv(shi(j))</div><div class="line"><a name="l01891"></a><span class="lineno"> 1891</span>&#160;    freeze_lev_sh(j)      = freeze_lev(shi(j))</div><div class="line"><a name="l01892"></a><span class="lineno"> 1892</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01893"></a><span class="lineno"> 1893</span>&#160;</div><div class="line"><a name="l01894"></a><span class="lineno"> 1894</span>&#160;  <span class="keywordflow">DO</span> k = 0,nlev</div><div class="line"><a name="l01895"></a><span class="lineno"> 1895</span>&#160;    <span class="keywordflow">DO</span> j = 1,n_sh</div><div class="line"><a name="l01896"></a><span class="lineno"> 1896</span>&#160;      p_layer_centres_sh(j,k)        = p_layer_centres(shi(j),k)</div><div class="line"><a name="l01897"></a><span class="lineno"> 1897</span>&#160;      p_layer_boundaries_sh(j,k)     = p_layer_boundaries(shi(j),k)</div><div class="line"><a name="l01898"></a><span class="lineno"> 1898</span>&#160;      exner_layer_centres_sh(j,k)    = exner_layer_centres(shi(j),k)</div><div class="line"><a name="l01899"></a><span class="lineno"> 1899</span>&#160;      exner_layer_boundaries_sh(j,k) = exner_layer_boundaries(shi(j),k)</div><div class="line"><a name="l01900"></a><span class="lineno"> 1900</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01901"></a><span class="lineno"> 1901</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01902"></a><span class="lineno"> 1902</span>&#160;</div><div class="line"><a name="l01903"></a><span class="lineno"> 1903</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01904"></a><span class="lineno"> 1904</span>&#160;    <span class="keywordflow">DO</span> j = 1,n_sh</div><div class="line"><a name="l01905"></a><span class="lineno"> 1905</span>&#160;      u_sh(j,k)           = u(shi(j),k)</div><div class="line"><a name="l01906"></a><span class="lineno"> 1906</span>&#160;      v_sh(j,k)           = v(shi(j),k)</div><div class="line"><a name="l01907"></a><span class="lineno"> 1907</span>&#160;      th_sh(j,k)          = th(shi(j),k)</div><div class="line"><a name="l01908"></a><span class="lineno"> 1908</span>&#160;      z_theta_sh(j,k)     = z_theta(shi(j),k)</div><div class="line"><a name="l01909"></a><span class="lineno"> 1909</span>&#160;      z_rho_sh(j,k)       = z_rho(shi(j),k)</div><div class="line"><a name="l01910"></a><span class="lineno"> 1910</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01911"></a><span class="lineno"> 1911</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01912"></a><span class="lineno"> 1912</span>&#160;</div><div class="line"><a name="l01913"></a><span class="lineno"> 1913</span>&#160;<span class="comment">! Moisture - scheme requires input of specific humidity</span></div><div class="line"><a name="l01914"></a><span class="lineno"> 1914</span>&#160;</div><div class="line"><a name="l01915"></a><span class="lineno"> 1915</span>&#160;  <span class="keywordflow">IF</span> (l_mixing_ratio) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01916"></a><span class="lineno"> 1916</span>&#160;<span class="comment">!  Conversion required</span></div><div class="line"><a name="l01917"></a><span class="lineno"> 1917</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01918"></a><span class="lineno"> 1918</span>&#160;      <span class="keywordflow">DO</span> j = 1,n_sh</div><div class="line"><a name="l01919"></a><span class="lineno"> 1919</span>&#160;        q_sh(j,k)   = q(shi(j),k)  /(1.0+qt(shi(j),k))</div><div class="line"><a name="l01920"></a><span class="lineno"> 1920</span>&#160;        qse_sh(j,k) = qse(shi(j),k)  <span class="comment">! copy specific value</span></div><div class="line"><a name="l01921"></a><span class="lineno"> 1921</span>&#160;        qcl_sh(j,k) = qcl(shi(j),k)/(1.0+qt(shi(j),k))</div><div class="line"><a name="l01922"></a><span class="lineno"> 1922</span>&#160;        qcf_sh(j,k) = qcf(shi(j),k)/(1.0+qt(shi(j),k))</div><div class="line"><a name="l01923"></a><span class="lineno"> 1923</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01924"></a><span class="lineno"> 1924</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01925"></a><span class="lineno"> 1925</span>&#160;</div><div class="line"><a name="l01926"></a><span class="lineno"> 1926</span>&#160;  <span class="keywordflow">ELSE</span>     <span class="comment">! Input is specific humidity therefore no problems</span></div><div class="line"><a name="l01927"></a><span class="lineno"> 1927</span>&#160;</div><div class="line"><a name="l01928"></a><span class="lineno"> 1928</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01929"></a><span class="lineno"> 1929</span>&#160;      <span class="keywordflow">DO</span> j = 1,n_sh</div><div class="line"><a name="l01930"></a><span class="lineno"> 1930</span>&#160;        q_sh(j,k)   = q(shi(j),k)</div><div class="line"><a name="l01931"></a><span class="lineno"> 1931</span>&#160;        qse_sh(j,k) = qse(shi(j),k) <span class="comment">! copy specific value</span></div><div class="line"><a name="l01932"></a><span class="lineno"> 1932</span>&#160;        qcl_sh(j,k) = qcl(shi(j),k)</div><div class="line"><a name="l01933"></a><span class="lineno"> 1933</span>&#160;        qcf_sh(j,k) = qcf(shi(j),k)</div><div class="line"><a name="l01934"></a><span class="lineno"> 1934</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01935"></a><span class="lineno"> 1935</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01936"></a><span class="lineno"> 1936</span>&#160;</div><div class="line"><a name="l01937"></a><span class="lineno"> 1937</span>&#160;<span class="keywordflow">  END IF</span>   <span class="comment">! Test on l_mixing_ratio</span></div><div class="line"><a name="l01938"></a><span class="lineno"> 1938</span>&#160;</div><div class="line"><a name="l01939"></a><span class="lineno"> 1939</span>&#160;<span class="comment">! In/out variables</span></div><div class="line"><a name="l01940"></a><span class="lineno"> 1940</span>&#160;</div><div class="line"><a name="l01941"></a><span class="lineno"> 1941</span>&#160;</div><div class="line"><a name="l01942"></a><span class="lineno"> 1942</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01943"></a><span class="lineno"> 1943</span>&#160;    <span class="keywordflow">DO</span> j = 1,n_sh</div><div class="line"><a name="l01944"></a><span class="lineno"> 1944</span>&#160;      cf_liquid_sh(j,k)   = cf_liquid(shi(j),k)</div><div class="line"><a name="l01945"></a><span class="lineno"> 1945</span>&#160;      cf_frozen_sh(j,k)   = cf_frozen(shi(j),k)</div><div class="line"><a name="l01946"></a><span class="lineno"> 1946</span>&#160;      bulk_cf_sh(j,k)     = bulk_cf(shi(j),k)</div><div class="line"><a name="l01947"></a><span class="lineno"> 1947</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01948"></a><span class="lineno"> 1948</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01949"></a><span class="lineno"> 1949</span>&#160;</div><div class="line"><a name="l01950"></a><span class="lineno"> 1950</span>&#160;  <span class="keywordflow">IF</span> (l_tracer) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01951"></a><span class="lineno"> 1951</span>&#160;    <span class="keywordflow">DO</span> ktra = 1,ntra</div><div class="line"><a name="l01952"></a><span class="lineno"> 1952</span>&#160;      <span class="keywordflow">DO</span> k = 1,trlev</div><div class="line"><a name="l01953"></a><span class="lineno"> 1953</span>&#160;        <span class="keywordflow">DO</span> j = 1,n_sh</div><div class="line"><a name="l01954"></a><span class="lineno"> 1954</span>&#160;          tracer_sh(j,k,ktra)  = tracer(shi(j),k,ktra)</div><div class="line"><a name="l01955"></a><span class="lineno"> 1955</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01956"></a><span class="lineno"> 1956</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01957"></a><span class="lineno"> 1957</span>&#160;      <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l01958"></a><span class="lineno"> 1958</span>&#160;        <span class="keywordflow">DO</span> j = 1,n_sh</div><div class="line"><a name="l01959"></a><span class="lineno"> 1959</span>&#160;          dtrabydt_sh(j,k,ktra)  = 0.0</div><div class="line"><a name="l01960"></a><span class="lineno"> 1960</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01961"></a><span class="lineno"> 1961</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01962"></a><span class="lineno"> 1962</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01963"></a><span class="lineno"> 1963</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01964"></a><span class="lineno"> 1964</span>&#160;</div><div class="line"><a name="l01965"></a><span class="lineno"> 1965</span>&#160;</div><div class="line"><a name="l01966"></a><span class="lineno"> 1966</span>&#160;</div><div class="line"><a name="l01967"></a><span class="lineno"> 1967</span>&#160;<span class="comment">! 2.2 Call shallow convection code</span></div><div class="line"><a name="l01968"></a><span class="lineno"> 1968</span>&#160;</div><div class="line"><a name="l01969"></a><span class="lineno"> 1969</span>&#160;<span class="comment">! DEPENDS ON: shallow_conv_4a</span></div><div class="line"><a name="l01970"></a><span class="lineno"> 1970</span>&#160;  <span class="keyword">CALL </span><a class="code" href="shallow__conv-shconv4a_8f90.xhtml#aee87339d94d1e5bd657d531a71992cf3" title="Shallow convection scheme. ">shallow_conv_4a</a>(                                           &amp;</div><div class="line"><a name="l01971"></a><span class="lineno"> 1971</span>&#160;                     <span class="comment">!IN</span></div><div class="line"><a name="l01972"></a><span class="lineno"> 1972</span>&#160;                     nbl,nlev,ntra,n_cca_lev,n_sh,trlev,          &amp;</div><div class="line"><a name="l01973"></a><span class="lineno"> 1973</span>&#160;                     bland_sh,delthvu_sh,exner_layer_centres_sh,  &amp;</div><div class="line"><a name="l01974"></a><span class="lineno"> 1974</span>&#160;                     exner_layer_boundaries_sh,                   &amp;</div><div class="line"><a name="l01975"></a><span class="lineno"> 1975</span>&#160;                     l_calc_dxek,                                 &amp;</div><div class="line"><a name="l01976"></a><span class="lineno"> 1976</span>&#160;                     l_q_interact, l_tracer, ntml_sh, ntpar_sh,   &amp;</div><div class="line"><a name="l01977"></a><span class="lineno"> 1977</span>&#160;                     pstar_sh,p_layer_centres_sh,                 &amp;</div><div class="line"><a name="l01978"></a><span class="lineno"> 1978</span>&#160;                     p_layer_boundaries_sh,z_theta_sh,z_rho_sh,   &amp;</div><div class="line"><a name="l01979"></a><span class="lineno"> 1979</span>&#160;                     r2rho_th_sh, dr_across_th_sh,                &amp;</div><div class="line"><a name="l01980"></a><span class="lineno"> 1980</span>&#160;                     q_sh,q1_sd_sh,t1_sd_sh,th_sh,timestep,       &amp;</div><div class="line"><a name="l01981"></a><span class="lineno"> 1981</span>&#160;                     u_sh,v_sh,uw0_sh,vw0_sh,wstar_sh,wthvs_sh,   &amp;</div><div class="line"><a name="l01982"></a><span class="lineno"> 1982</span>&#160;                     zlcl_uv_sh,ztop_uv_sh,freeze_lev_sh,         &amp;</div><div class="line"><a name="l01983"></a><span class="lineno"> 1983</span>&#160;                     recip_pstar_sh,qse_sh,                       &amp;</div><div class="line"><a name="l01984"></a><span class="lineno"> 1984</span>&#160;                     <span class="comment">!INOUT</span></div><div class="line"><a name="l01985"></a><span class="lineno"> 1985</span>&#160;                     bulk_cf_sh,cf_frozen_sh,cf_liquid_sh,        &amp;</div><div class="line"><a name="l01986"></a><span class="lineno"> 1986</span>&#160;                     qcf_sh,qcl_sh,tracer_sh,                     &amp;</div><div class="line"><a name="l01987"></a><span class="lineno"> 1987</span>&#160;                     <span class="comment">!OUT</span></div><div class="line"><a name="l01988"></a><span class="lineno"> 1988</span>&#160;                     cape_out_sh,cclwp_sh,ccw_sh,cca_sh,          &amp;</div><div class="line"><a name="l01989"></a><span class="lineno"> 1989</span>&#160;                     dbcfbydt_sh,dcffbydt_sh,dcflbydt_sh,         &amp;</div><div class="line"><a name="l01990"></a><span class="lineno"> 1990</span>&#160;                     dqbydt_sh,dqcfbydt_sh,dqclbydt_sh,           &amp;</div><div class="line"><a name="l01991"></a><span class="lineno"> 1991</span>&#160;                     dthbydt_sh,dubydt_sh,dvbydt_sh,dtrabydt_sh,  &amp;</div><div class="line"><a name="l01992"></a><span class="lineno"> 1992</span>&#160;                     detrain_up_sh,detrain_dwn_sh,entrain_up_sh,  &amp;</div><div class="line"><a name="l01993"></a><span class="lineno"> 1993</span>&#160;                     entrain_dwn_sh,                              &amp;</div><div class="line"><a name="l01994"></a><span class="lineno"> 1994</span>&#160;                     iccb_sh,icct_sh,                             &amp;</div><div class="line"><a name="l01995"></a><span class="lineno"> 1995</span>&#160;                     lcca_sh,lcbase_sh,lctop_sh,                  &amp;</div><div class="line"><a name="l01996"></a><span class="lineno"> 1996</span>&#160;                     rain_sh, snow_sh, rain_3d_sh, snow_3d_sh,    &amp;</div><div class="line"><a name="l01997"></a><span class="lineno"> 1997</span>&#160;                     up_flux_sh, up_flux_half_sh,                 &amp;</div><div class="line"><a name="l01998"></a><span class="lineno"> 1998</span>&#160;                     dwn_flux_sh,uw_shall_sh,vw_shall_sh,         &amp;</div><div class="line"><a name="l01999"></a><span class="lineno"> 1999</span>&#160;                     tcw_sh,cca_2d_sh                             &amp;</div><div class="line"><a name="l02000"></a><span class="lineno"> 2000</span>&#160;                     ,rbuoy_p_out_sh,the_out_sh,thp_out_sh        &amp;</div><div class="line"><a name="l02001"></a><span class="lineno"> 2001</span>&#160;                     ,qe_out_sh,qp_out_sh                         &amp;</div><div class="line"><a name="l02002"></a><span class="lineno"> 2002</span>&#160;                     )</div><div class="line"><a name="l02003"></a><span class="lineno"> 2003</span>&#160;</div><div class="line"><a name="l02004"></a><span class="lineno"> 2004</span>&#160;</div><div class="line"><a name="l02005"></a><span class="lineno"> 2005</span>&#160;<span class="comment">! 2.3 Write data from shallow convection points to full arrays</span></div><div class="line"><a name="l02006"></a><span class="lineno"> 2006</span>&#160;</div><div class="line"><a name="l02007"></a><span class="lineno"> 2007</span>&#160;</div><div class="line"><a name="l02008"></a><span class="lineno"> 2008</span>&#160;  <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02009"></a><span class="lineno"> 2009</span>&#160;    cape_out(shi(i))           = cape_out_sh(i)</div><div class="line"><a name="l02010"></a><span class="lineno"> 2010</span>&#160;    cclwp(shi(i))              = cclwp_sh(i)</div><div class="line"><a name="l02011"></a><span class="lineno"> 2011</span>&#160;    iccb(shi(i))               = iccb_sh(i)</div><div class="line"><a name="l02012"></a><span class="lineno"> 2012</span>&#160;    icct(shi(i))               = icct_sh(i)</div><div class="line"><a name="l02013"></a><span class="lineno"> 2013</span>&#160;</div><div class="line"><a name="l02014"></a><span class="lineno"> 2014</span>&#160;    lcca(shi(i))               = lcca_sh(i)</div><div class="line"><a name="l02015"></a><span class="lineno"> 2015</span>&#160;    lcbase(shi(i))             = lcbase_sh(i)</div><div class="line"><a name="l02016"></a><span class="lineno"> 2016</span>&#160;    lctop(shi(i))              = lctop_sh(i)</div><div class="line"><a name="l02017"></a><span class="lineno"> 2017</span>&#160;    rain(shi(i))               = rain_sh(i)</div><div class="line"><a name="l02018"></a><span class="lineno"> 2018</span>&#160;    snow(shi(i))               = snow_sh(i)</div><div class="line"><a name="l02019"></a><span class="lineno"> 2019</span>&#160;    precip_shall(shi(i))       = rain_sh(i) + snow_sh(i)</div><div class="line"><a name="l02020"></a><span class="lineno"> 2020</span>&#160;</div><div class="line"><a name="l02021"></a><span class="lineno"> 2021</span>&#160;    tcw(shi(i)) = tcw_sh(i)</div><div class="line"><a name="l02022"></a><span class="lineno"> 2022</span>&#160;    cca_2d(shi(i)) = cca_2d_sh(i)</div><div class="line"><a name="l02023"></a><span class="lineno"> 2023</span>&#160;    ind_shall(shi(i)) = 1.0       <span class="comment">! all shall points  END DO</span></div><div class="line"><a name="l02024"></a><span class="lineno"> 2024</span>&#160;</div><div class="line"><a name="l02025"></a><span class="lineno"> 2025</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a9fa9c42ad2da411d2451fd13fbf43514">l_mom</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02026"></a><span class="lineno"> 2026</span>&#160;    <span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l02027"></a><span class="lineno"> 2027</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02028"></a><span class="lineno"> 2028</span>&#160;        dubydt(shi(i),k)         = dubydt_sh(i,k)</div><div class="line"><a name="l02029"></a><span class="lineno"> 2029</span>&#160;        dvbydt(shi(i),k)         = dvbydt_sh(i,k)</div><div class="line"><a name="l02030"></a><span class="lineno"> 2030</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02031"></a><span class="lineno"> 2031</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02032"></a><span class="lineno"> 2032</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02033"></a><span class="lineno"> 2033</span>&#160;</div><div class="line"><a name="l02034"></a><span class="lineno"> 2034</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02035"></a><span class="lineno"> 2035</span>&#160;    <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02036"></a><span class="lineno"> 2036</span>&#160;      dthbydt(shi(i),k)        = dthbydt_sh(i,k)</div><div class="line"><a name="l02037"></a><span class="lineno"> 2037</span>&#160;      dcflbydt(shi(i),k)       = dcflbydt_sh(i,k)</div><div class="line"><a name="l02038"></a><span class="lineno"> 2038</span>&#160;      dcffbydt(shi(i),k)       = dcffbydt_sh(i,k)</div><div class="line"><a name="l02039"></a><span class="lineno"> 2039</span>&#160;      dbcfbydt(shi(i),k)       = dbcfbydt_sh(i,k)</div><div class="line"><a name="l02040"></a><span class="lineno"> 2040</span>&#160;      ccw(shi(i),k)            = ccw_sh(i,k)</div><div class="line"><a name="l02041"></a><span class="lineno"> 2041</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02042"></a><span class="lineno"> 2042</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02043"></a><span class="lineno"> 2043</span>&#160;</div><div class="line"><a name="l02044"></a><span class="lineno"> 2044</span>&#160;  <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l02045"></a><span class="lineno"> 2045</span>&#160;    <span class="keywordflow">DO</span> i=1, n_sh</div><div class="line"><a name="l02046"></a><span class="lineno"> 2046</span>&#160;      cca(shi(i),k) = cca_sh(i,k)</div><div class="line"><a name="l02047"></a><span class="lineno"> 2047</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02048"></a><span class="lineno"> 2048</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02049"></a><span class="lineno"> 2049</span>&#160;</div><div class="line"><a name="l02050"></a><span class="lineno"> 2050</span>&#160;</div><div class="line"><a name="l02051"></a><span class="lineno"> 2051</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02052"></a><span class="lineno"> 2052</span>&#160;</div><div class="line"><a name="l02053"></a><span class="lineno"> 2053</span>&#160;    <span class="keywordflow">DO</span> i=1, n_sh</div><div class="line"><a name="l02054"></a><span class="lineno"> 2054</span>&#160;      iccb0(shi(i)) = iccb(shi(i))</div><div class="line"><a name="l02055"></a><span class="lineno"> 2055</span>&#160;      icct0(shi(i)) = icct(shi(i))</div><div class="line"><a name="l02056"></a><span class="lineno"> 2056</span>&#160;      cclwp0(shi(i)) = cclwp(shi(i))</div><div class="line"><a name="l02057"></a><span class="lineno"> 2057</span>&#160;      lcbase0(shi(i)) = lcbase(shi(i))</div><div class="line"><a name="l02058"></a><span class="lineno"> 2058</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02059"></a><span class="lineno"> 2059</span>&#160;</div><div class="line"><a name="l02060"></a><span class="lineno"> 2060</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a39c8fc98ba63da9cee70fe2a91887ced">l_dcpl_cld4pc2</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02061"></a><span class="lineno"> 2061</span>&#160;</div><div class="line"><a name="l02062"></a><span class="lineno"> 2062</span>&#160;      <span class="keywordflow">DO</span> k=1, nlev</div><div class="line"><a name="l02063"></a><span class="lineno"> 2063</span>&#160;        <span class="keywordflow">DO</span> i=1, n_sh</div><div class="line"><a name="l02064"></a><span class="lineno"> 2064</span>&#160;          ccw0(shi(i),k) = ccw_sh(i,k) * <a class="code" href="namespacecv__run__mod.xhtml#a60ac382c4e37ea7bcdfe608775d57764">ccw_sh_knob</a></div><div class="line"><a name="l02065"></a><span class="lineno"> 2065</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02066"></a><span class="lineno"> 2066</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02067"></a><span class="lineno"> 2067</span>&#160;</div><div class="line"><a name="l02068"></a><span class="lineno"> 2068</span>&#160;      <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l02069"></a><span class="lineno"> 2069</span>&#160;        <span class="keywordflow">DO</span> i=1, n_sh</div><div class="line"><a name="l02070"></a><span class="lineno"> 2070</span>&#160;          cca0(shi(i),k) = cca_sh(i,k) * <a class="code" href="namespacecv__run__mod.xhtml#a74dd2e3ba506db0ec2c153104690c257">cca_sh_knob</a></div><div class="line"><a name="l02071"></a><span class="lineno"> 2071</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02072"></a><span class="lineno"> 2072</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02073"></a><span class="lineno"> 2073</span>&#160;</div><div class="line"><a name="l02074"></a><span class="lineno"> 2074</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02075"></a><span class="lineno"> 2075</span>&#160;</div><div class="line"><a name="l02076"></a><span class="lineno"> 2076</span>&#160;      <span class="keywordflow">DO</span> k=1, nlev</div><div class="line"><a name="l02077"></a><span class="lineno"> 2077</span>&#160;        <span class="keywordflow">DO</span> i=1, n_sh</div><div class="line"><a name="l02078"></a><span class="lineno"> 2078</span>&#160;          ccw0(shi(i),k) = ccw_sh(i,k)</div><div class="line"><a name="l02079"></a><span class="lineno"> 2079</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02080"></a><span class="lineno"> 2080</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02081"></a><span class="lineno"> 2081</span>&#160;</div><div class="line"><a name="l02082"></a><span class="lineno"> 2082</span>&#160;      <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l02083"></a><span class="lineno"> 2083</span>&#160;        <span class="keywordflow">DO</span> i=1, n_sh</div><div class="line"><a name="l02084"></a><span class="lineno"> 2084</span>&#160;          cca0(shi(i),k) = cca_sh(i,k)</div><div class="line"><a name="l02085"></a><span class="lineno"> 2085</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02086"></a><span class="lineno"> 2086</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02087"></a><span class="lineno"> 2087</span>&#160;</div><div class="line"><a name="l02088"></a><span class="lineno"> 2088</span>&#160;<span class="keywordflow">    END IF</span>  <span class="comment">! l_dcpl_cld4pc2</span></div><div class="line"><a name="l02089"></a><span class="lineno"> 2089</span>&#160;</div><div class="line"><a name="l02090"></a><span class="lineno"> 2090</span>&#160;  <span class="keywordflow">ELSE</span> <span class="comment">! Non-ccrad code</span></div><div class="line"><a name="l02091"></a><span class="lineno"> 2091</span>&#160;</div><div class="line"><a name="l02092"></a><span class="lineno"> 2092</span>&#160;    <span class="keywordflow">IF</span> ( l_q_interact .AND. (.NOT. <a class="code" href="namespacecv__run__mod.xhtml#a7c5e9f2b1af9e229ed225af8fc6f7112">l_pc2_diag_sh</a>) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02093"></a><span class="lineno"> 2093</span>&#160;    <span class="comment">! Do nothing as PC2 only keeps shallow component</span></div><div class="line"><a name="l02094"></a><span class="lineno"> 2094</span>&#160;    <span class="comment">! if l_pc2_diag_sh=.TRUE.</span></div><div class="line"><a name="l02095"></a><span class="lineno"> 2095</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02096"></a><span class="lineno"> 2096</span>&#160;    <span class="comment">! Either PC2=.FALSE. OR PC2=.TRUE. and it wants</span></div><div class="line"><a name="l02097"></a><span class="lineno"> 2097</span>&#160;    <span class="comment">! Shallow cloud</span></div><div class="line"><a name="l02098"></a><span class="lineno"> 2098</span>&#160;</div><div class="line"><a name="l02099"></a><span class="lineno"> 2099</span>&#160;      <span class="keywordflow">DO</span> i=1, n_sh</div><div class="line"><a name="l02100"></a><span class="lineno"> 2100</span>&#160;        iccb0(shi(i)) = iccb(shi(i))</div><div class="line"><a name="l02101"></a><span class="lineno"> 2101</span>&#160;        icct0(shi(i)) = icct(shi(i))</div><div class="line"><a name="l02102"></a><span class="lineno"> 2102</span>&#160;        cclwp0(shi(i)) = cclwp(shi(i))</div><div class="line"><a name="l02103"></a><span class="lineno"> 2103</span>&#160;        lcbase0(shi(i)) = lcbase(shi(i))</div><div class="line"><a name="l02104"></a><span class="lineno"> 2104</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02105"></a><span class="lineno"> 2105</span>&#160;</div><div class="line"><a name="l02106"></a><span class="lineno"> 2106</span>&#160;      <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l02107"></a><span class="lineno"> 2107</span>&#160;        <span class="keywordflow">DO</span> i=1, n_sh</div><div class="line"><a name="l02108"></a><span class="lineno"> 2108</span>&#160;          cca0(shi(i),k) = cca_sh(i,k)</div><div class="line"><a name="l02109"></a><span class="lineno"> 2109</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02110"></a><span class="lineno"> 2110</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02111"></a><span class="lineno"> 2111</span>&#160;</div><div class="line"><a name="l02112"></a><span class="lineno"> 2112</span>&#160;<span class="comment">!         ! Although ccw0 is not passed up to atm_step</span></div><div class="line"><a name="l02113"></a><span class="lineno"> 2113</span>&#160;<span class="comment">!         ! because (l_ccrad=.false.), shallow points</span></div><div class="line"><a name="l02114"></a><span class="lineno"> 2114</span>&#160;<span class="comment">!         ! are kept because they may needed in ni_imp_ctl</span></div><div class="line"><a name="l02115"></a><span class="lineno"> 2115</span>&#160;<span class="comment">!         ! by l_pc2_diag_sh. This needs, needs looking into/possibly</span></div><div class="line"><a name="l02116"></a><span class="lineno"> 2116</span>&#160;<span class="comment">!         ! fixing.</span></div><div class="line"><a name="l02117"></a><span class="lineno"> 2117</span>&#160;</div><div class="line"><a name="l02118"></a><span class="lineno"> 2118</span>&#160;<span class="comment">!         DO k=1, nlev</span></div><div class="line"><a name="l02119"></a><span class="lineno"> 2119</span>&#160;<span class="comment">!           DO i=1, n_sh</span></div><div class="line"><a name="l02120"></a><span class="lineno"> 2120</span>&#160;<span class="comment">!             ccw0(shi(i),k) = ccw_sh(i,k)</span></div><div class="line"><a name="l02121"></a><span class="lineno"> 2121</span>&#160;<span class="comment">!           END DO</span></div><div class="line"><a name="l02122"></a><span class="lineno"> 2122</span>&#160;<span class="comment">!         END DO</span></div><div class="line"><a name="l02123"></a><span class="lineno"> 2123</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l02124"></a><span class="lineno"> 2124</span>&#160;<span class="comment">!         DO i=1, n_sh</span></div><div class="line"><a name="l02125"></a><span class="lineno"> 2125</span>&#160;<span class="comment">!           cca0_2d(shi(i)) = cca_2d_sh(i)</span></div><div class="line"><a name="l02126"></a><span class="lineno"> 2126</span>&#160;<span class="comment">!         END DO</span></div><div class="line"><a name="l02127"></a><span class="lineno"> 2127</span>&#160;</div><div class="line"><a name="l02128"></a><span class="lineno"> 2128</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l02129"></a><span class="lineno"> 2129</span>&#160;</div><div class="line"><a name="l02130"></a><span class="lineno"> 2130</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! l_ccrad</span></div><div class="line"><a name="l02131"></a><span class="lineno"> 2131</span>&#160;</div><div class="line"><a name="l02132"></a><span class="lineno"> 2132</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacerad__input__mod.xhtml#abae54fa352e2792d74b0ae77bb3d5518">l_cca_sh_prog</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02133"></a><span class="lineno"> 2133</span>&#160;    <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l02134"></a><span class="lineno"> 2134</span>&#160;      <span class="keywordflow">DO</span> i=1, n_sh</div><div class="line"><a name="l02135"></a><span class="lineno"> 2135</span>&#160;        cca0_sh(shi(i),k) = cca_sh(i,k)</div><div class="line"><a name="l02136"></a><span class="lineno"> 2136</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02137"></a><span class="lineno"> 2137</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02138"></a><span class="lineno"> 2138</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02139"></a><span class="lineno"> 2139</span>&#160;</div><div class="line"><a name="l02140"></a><span class="lineno"> 2140</span>&#160;</div><div class="line"><a name="l02141"></a><span class="lineno"> 2141</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l02142"></a><span class="lineno"> 2142</span>&#160;<span class="preprocessor"></span>  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02143"></a><span class="lineno"> 2143</span>&#160;    <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02144"></a><span class="lineno"> 2144</span>&#160;      rbuoy_p_out(shi(i),k)    = rbuoy_p_out_sh(i,k)</div><div class="line"><a name="l02145"></a><span class="lineno"> 2145</span>&#160;      the_out(shi(i),k)        = the_out_sh(i,k)</div><div class="line"><a name="l02146"></a><span class="lineno"> 2146</span>&#160;      thp_out(shi(i),k)        = thp_out_sh(i,k)</div><div class="line"><a name="l02147"></a><span class="lineno"> 2147</span>&#160;      qe_out(shi(i),k)         = qe_out_sh(i,k)</div><div class="line"><a name="l02148"></a><span class="lineno"> 2148</span>&#160;      qp_out(shi(i),k)         = qp_out_sh(i,k)</div><div class="line"><a name="l02149"></a><span class="lineno"> 2149</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02150"></a><span class="lineno"> 2150</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02151"></a><span class="lineno"> 2151</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l02152"></a><span class="lineno"> 2152</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l02153"></a><span class="lineno"> 2153</span>&#160;</div><div class="line"><a name="l02154"></a><span class="lineno"> 2154</span>&#160;<span class="comment">! G-R requires input of specific humidity</span></div><div class="line"><a name="l02155"></a><span class="lineno"> 2155</span>&#160;</div><div class="line"><a name="l02156"></a><span class="lineno"> 2156</span>&#160;  <span class="keywordflow">IF</span> (l_mixing_ratio) <span class="keywordflow">THEN</span> <span class="comment">! requires conversion</span></div><div class="line"><a name="l02157"></a><span class="lineno"> 2157</span>&#160;</div><div class="line"><a name="l02158"></a><span class="lineno"> 2158</span>&#160;    <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span>  <span class="comment">! PC2</span></div><div class="line"><a name="l02159"></a><span class="lineno"> 2159</span>&#160;</div><div class="line"><a name="l02160"></a><span class="lineno"> 2160</span>&#160;      <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02161"></a><span class="lineno"> 2161</span>&#160;        <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02162"></a><span class="lineno"> 2162</span>&#160;          dqtt  = dqbydt_sh(i,k)+dqclbydt_sh(i,k)+dqcfbydt_sh(i,k)</div><div class="line"><a name="l02163"></a><span class="lineno"> 2163</span>&#160;          dqt   = dqtt*timestep</div><div class="line"><a name="l02164"></a><span class="lineno"> 2164</span>&#160;          denom = 1.0/((1.0-qt(shi(i),k))*(1.0-qt(shi(i),k)-dqt))</div><div class="line"><a name="l02165"></a><span class="lineno"> 2165</span>&#160;          dqbydt(shi(i),k)   = denom *                                   &amp;</div><div class="line"><a name="l02166"></a><span class="lineno"> 2166</span>&#160;               ( dqbydt_sh(i,k)*(1.0-qt(shi(i),k))+q_sh(i,k)*dqtt )</div><div class="line"><a name="l02167"></a><span class="lineno"> 2167</span>&#160;          dqclbydt(shi(i),k) = denom *                                   &amp;</div><div class="line"><a name="l02168"></a><span class="lineno"> 2168</span>&#160;             ( dqclbydt_sh(i,k)*(1.0-qt(shi(i),k))+qcl_sh(i,k)*dqtt )</div><div class="line"><a name="l02169"></a><span class="lineno"> 2169</span>&#160;          dqcfbydt(shi(i),k) = denom *                                   &amp;</div><div class="line"><a name="l02170"></a><span class="lineno"> 2170</span>&#160;             ( dqcfbydt_sh(i,k)*(1.0-qt(shi(i),k))+qcf_sh(i,k)*dqtt )</div><div class="line"><a name="l02171"></a><span class="lineno"> 2171</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02172"></a><span class="lineno"> 2172</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02173"></a><span class="lineno"> 2173</span>&#160;</div><div class="line"><a name="l02174"></a><span class="lineno"> 2174</span>&#160;    <span class="keywordflow">ELSE</span>                    <span class="comment">! Not PC2</span></div><div class="line"><a name="l02175"></a><span class="lineno"> 2175</span>&#160;                         <span class="comment">! No qcl and qcf increments anyway</span></div><div class="line"><a name="l02176"></a><span class="lineno"> 2176</span>&#160;      <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02177"></a><span class="lineno"> 2177</span>&#160;        <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02178"></a><span class="lineno"> 2178</span>&#160;          dqt   = dqbydt_sh(i,k)*timestep</div><div class="line"><a name="l02179"></a><span class="lineno"> 2179</span>&#160;          denom = 1.0/((1.0-qt(shi(i),k))*(1.0-qt(shi(i),k)-dqt))</div><div class="line"><a name="l02180"></a><span class="lineno"> 2180</span>&#160;          dqbydt(shi(i),k)    = dqbydt_sh(i,k) *denom</div><div class="line"><a name="l02181"></a><span class="lineno"> 2181</span>&#160;          dqclbydt(shi(i),k)  = 0.0</div><div class="line"><a name="l02182"></a><span class="lineno"> 2182</span>&#160;          dqcfbydt(shi(i),k)  = 0.0</div><div class="line"><a name="l02183"></a><span class="lineno"> 2183</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02184"></a><span class="lineno"> 2184</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02185"></a><span class="lineno"> 2185</span>&#160;</div><div class="line"><a name="l02186"></a><span class="lineno"> 2186</span>&#160;<span class="keywordflow">    END IF</span>                  <span class="comment">! end test on PC2</span></div><div class="line"><a name="l02187"></a><span class="lineno"> 2187</span>&#160;</div><div class="line"><a name="l02188"></a><span class="lineno"> 2188</span>&#160;  <span class="keywordflow">ELSE</span>   <span class="comment">! output is specific humidity therefore no problems</span></div><div class="line"><a name="l02189"></a><span class="lineno"> 2189</span>&#160;</div><div class="line"><a name="l02190"></a><span class="lineno"> 2190</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02191"></a><span class="lineno"> 2191</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02192"></a><span class="lineno"> 2192</span>&#160;        dqbydt(shi(i),k)   = dqbydt_sh(i,k)</div><div class="line"><a name="l02193"></a><span class="lineno"> 2193</span>&#160;        dqclbydt(shi(i),k) = dqclbydt_sh(i,k)</div><div class="line"><a name="l02194"></a><span class="lineno"> 2194</span>&#160;        dqcfbydt(shi(i),k) = dqcfbydt_sh(i,k)</div><div class="line"><a name="l02195"></a><span class="lineno"> 2195</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02196"></a><span class="lineno"> 2196</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02197"></a><span class="lineno"> 2197</span>&#160;</div><div class="line"><a name="l02198"></a><span class="lineno"> 2198</span>&#160;<span class="keywordflow">  END IF</span>      <span class="comment">! Test on l_mixing_ratio</span></div><div class="line"><a name="l02199"></a><span class="lineno"> 2199</span>&#160;</div><div class="line"><a name="l02200"></a><span class="lineno"> 2200</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#aaa805ef81602a9e8e678e5f68be250ee">flg_up_flx</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02201"></a><span class="lineno"> 2201</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02202"></a><span class="lineno"> 2202</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02203"></a><span class="lineno"> 2203</span>&#160;        up_flux(shi(i),k)        = up_flux_sh(i,k)</div><div class="line"><a name="l02204"></a><span class="lineno"> 2204</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02205"></a><span class="lineno"> 2205</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02206"></a><span class="lineno"> 2206</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02207"></a><span class="lineno"> 2207</span>&#160;  <span class="keywordflow">IF</span> (flg_up_flx_half) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02208"></a><span class="lineno"> 2208</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02209"></a><span class="lineno"> 2209</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02210"></a><span class="lineno"> 2210</span>&#160;        up_flux_half(shi(i),k)   = up_flux_half_sh(i,k)</div><div class="line"><a name="l02211"></a><span class="lineno"> 2211</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02212"></a><span class="lineno"> 2212</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02213"></a><span class="lineno"> 2213</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02214"></a><span class="lineno"> 2214</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a645dd024842155b75c5b638f11391ac9">flg_dwn_flx</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02215"></a><span class="lineno"> 2215</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02216"></a><span class="lineno"> 2216</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02217"></a><span class="lineno"> 2217</span>&#160;        dwn_flux(shi(i),k)       = dwn_flux_sh(i,k)</div><div class="line"><a name="l02218"></a><span class="lineno"> 2218</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02219"></a><span class="lineno"> 2219</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02220"></a><span class="lineno"> 2220</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02221"></a><span class="lineno"> 2221</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a594eca06c1e2300b31f8c2bba686ff1e">flg_entr_up</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02222"></a><span class="lineno"> 2222</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02223"></a><span class="lineno"> 2223</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02224"></a><span class="lineno"> 2224</span>&#160;        entrain_up(shi(i),k)     = entrain_up_sh(i,k)</div><div class="line"><a name="l02225"></a><span class="lineno"> 2225</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02226"></a><span class="lineno"> 2226</span>&#160;<span class="keywordflow">    END DO</span><span class="keywordflow">  END IF</span></div><div class="line"><a name="l02227"></a><span class="lineno"> 2227</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a23946cc9e076aa4865e7ed4049aa6e81">flg_detr_up</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02228"></a><span class="lineno"> 2228</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02229"></a><span class="lineno"> 2229</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02230"></a><span class="lineno"> 2230</span>&#160;        detrain_up(shi(i),k)     = detrain_up_sh(i,k)</div><div class="line"><a name="l02231"></a><span class="lineno"> 2231</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02232"></a><span class="lineno"> 2232</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02233"></a><span class="lineno"> 2233</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02234"></a><span class="lineno"> 2234</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a9986060bf6c1a80468d9ae32b6bafcf9">flg_entr_dwn</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02235"></a><span class="lineno"> 2235</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02236"></a><span class="lineno"> 2236</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02237"></a><span class="lineno"> 2237</span>&#160;        entrain_dwn(shi(i),k)    = entrain_dwn_sh(i,k)</div><div class="line"><a name="l02238"></a><span class="lineno"> 2238</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02239"></a><span class="lineno"> 2239</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02240"></a><span class="lineno"> 2240</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02241"></a><span class="lineno"> 2241</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#ad0f02382d0dbfd786770638461d8ec1f">flg_detr_dwn</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02242"></a><span class="lineno"> 2242</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02243"></a><span class="lineno"> 2243</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02244"></a><span class="lineno"> 2244</span>&#160;        detrain_dwn(shi(i),k)    = detrain_dwn_sh(i,k)</div><div class="line"><a name="l02245"></a><span class="lineno"> 2245</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02246"></a><span class="lineno"> 2246</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02247"></a><span class="lineno"> 2247</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02248"></a><span class="lineno"> 2248</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#ad13801fb31f0f607d924aba4b0ab0839">flg_uw_shall</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02249"></a><span class="lineno"> 2249</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02250"></a><span class="lineno"> 2250</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02251"></a><span class="lineno"> 2251</span>&#160;        uw_shall(shi(i),k)       = uw_shall_sh(i,k)</div><div class="line"><a name="l02252"></a><span class="lineno"> 2252</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02253"></a><span class="lineno"> 2253</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02254"></a><span class="lineno"> 2254</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02255"></a><span class="lineno"> 2255</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a866a659288edb036141e19b4892f24d9">flg_vw_shall</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02256"></a><span class="lineno"> 2256</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02257"></a><span class="lineno"> 2257</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02258"></a><span class="lineno"> 2258</span>&#160;        vw_shall(shi(i),k)       = vw_shall_sh(i,k)</div><div class="line"><a name="l02259"></a><span class="lineno"> 2259</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02260"></a><span class="lineno"> 2260</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02261"></a><span class="lineno"> 2261</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02262"></a><span class="lineno"> 2262</span>&#160;</div><div class="line"><a name="l02263"></a><span class="lineno"> 2263</span>&#160;  <span class="keywordflow">IF</span> (l_tracer) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02264"></a><span class="lineno"> 2264</span>&#160;    <span class="keywordflow">DO</span> ktra = 1,ntra</div><div class="line"><a name="l02265"></a><span class="lineno"> 2265</span>&#160;      <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02266"></a><span class="lineno"> 2266</span>&#160;        <span class="keywordflow">DO</span> i = 1,n_sh</div><div class="line"><a name="l02267"></a><span class="lineno"> 2267</span>&#160;          dtrabydt(shi(i),k,ktra)  = dtrabydt_sh(i,k,ktra)</div><div class="line"><a name="l02268"></a><span class="lineno"> 2268</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02269"></a><span class="lineno"> 2269</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02270"></a><span class="lineno"> 2270</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02271"></a><span class="lineno"> 2271</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02272"></a><span class="lineno"> 2272</span>&#160;</div><div class="line"><a name="l02273"></a><span class="lineno"> 2273</span>&#160;<span class="comment">! Merge sh 3d rain &amp; snow profiles</span></div><div class="line"><a name="l02274"></a><span class="lineno"> 2274</span>&#160;</div><div class="line"><a name="l02275"></a><span class="lineno"> 2275</span>&#160;  <span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l02276"></a><span class="lineno"> 2276</span>&#160;    <span class="keywordflow">DO</span> i=1,n_sh</div><div class="line"><a name="l02277"></a><span class="lineno"> 2277</span>&#160;      rain_3d(shi(i),k) = rain_3d_sh(i,k)</div><div class="line"><a name="l02278"></a><span class="lineno"> 2278</span>&#160;      snow_3d(shi(i),k) = snow_3d_sh(i,k)</div><div class="line"><a name="l02279"></a><span class="lineno"> 2279</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02280"></a><span class="lineno"> 2280</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02281"></a><span class="lineno"> 2281</span>&#160;</div><div class="line"><a name="l02282"></a><span class="lineno"> 2282</span>&#160;<span class="keywordflow">END IF</span>     <span class="comment">! n_sh &gt; 0</span></div><div class="line"><a name="l02283"></a><span class="lineno"> 2283</span>&#160;</div><div class="line"><a name="l02284"></a><span class="lineno"> 2284</span>&#160;</div><div class="line"><a name="l02285"></a><span class="lineno"> 2285</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l02286"></a><span class="lineno"> 2286</span>&#160;<span class="preprocessor"></span><span class="comment">! make copies of rbuoy etc. for checking purposes</span></div><div class="line"><a name="l02287"></a><span class="lineno"> 2287</span>&#160;<span class="comment">!Used after mid convection to see if mid has updated values</span></div><div class="line"><a name="l02288"></a><span class="lineno"> 2288</span>&#160;<span class="keywordflow">DO</span> k = 1, nlev</div><div class="line"><a name="l02289"></a><span class="lineno"> 2289</span>&#160;  <span class="keywordflow">DO</span> i = 1, npnts</div><div class="line"><a name="l02290"></a><span class="lineno"> 2290</span>&#160;    rbuoy_p_out_copy(i,k) = rbuoy_p_out(i,k)</div><div class="line"><a name="l02291"></a><span class="lineno"> 2291</span>&#160;    the_out_copy(i,k) = the_out(i,k)</div><div class="line"><a name="l02292"></a><span class="lineno"> 2292</span>&#160;    thp_out_copy(i,k) = thp_out(i,k)</div><div class="line"><a name="l02293"></a><span class="lineno"> 2293</span>&#160;    qe_out_copy(i,k) = qe_out(i,k)</div><div class="line"><a name="l02294"></a><span class="lineno"> 2294</span>&#160;    qp_out_copy(i,k) = qp_out(i,k)</div><div class="line"><a name="l02295"></a><span class="lineno"> 2295</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02296"></a><span class="lineno"> 2296</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l02297"></a><span class="lineno"> 2297</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l02298"></a><span class="lineno"> 2298</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l02299"></a><span class="lineno"> 2299</span>&#160;</div><div class="line"><a name="l02300"></a><span class="lineno"> 2300</span>&#160;<span class="comment">! 3.0 MID-LEVEL Convection</span></div><div class="line"><a name="l02301"></a><span class="lineno"> 2301</span>&#160;<span class="comment">! 3.1 Set lowest level that mid level convection can trigger</span></div><div class="line"><a name="l02302"></a><span class="lineno"> 2302</span>&#160;</div><div class="line"><a name="l02303"></a><span class="lineno"> 2303</span>&#160;<span class="keywordflow">IF</span> (n_md &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02304"></a><span class="lineno"> 2304</span>&#160;</div><div class="line"><a name="l02305"></a><span class="lineno"> 2305</span>&#160;  <span class="keywordflow">DO</span> k=1, nlev</div><div class="line"><a name="l02306"></a><span class="lineno"> 2306</span>&#160;    <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02307"></a><span class="lineno"> 2307</span>&#160;      rain_3d_md(i,k) = 0.0</div><div class="line"><a name="l02308"></a><span class="lineno"> 2308</span>&#160;      snow_3d_md(i,k) = 0.0</div><div class="line"><a name="l02309"></a><span class="lineno"> 2309</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02310"></a><span class="lineno"> 2310</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02311"></a><span class="lineno"> 2311</span>&#160;</div><div class="line"><a name="l02312"></a><span class="lineno"> 2312</span>&#160;  j = 0</div><div class="line"><a name="l02313"></a><span class="lineno"> 2313</span>&#160;  <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l02314"></a><span class="lineno"> 2314</span>&#160;    <span class="keywordflow">IF</span> (l_mid(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02315"></a><span class="lineno"> 2315</span>&#160;      j      = j+1</div><div class="line"><a name="l02316"></a><span class="lineno"> 2316</span>&#160;      mdi(j) = i</div><div class="line"><a name="l02317"></a><span class="lineno"> 2317</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l02318"></a><span class="lineno"> 2318</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02319"></a><span class="lineno"> 2319</span>&#160;</div><div class="line"><a name="l02320"></a><span class="lineno"> 2320</span>&#160;</div><div class="line"><a name="l02321"></a><span class="lineno"> 2321</span>&#160;  idp=0</div><div class="line"><a name="l02322"></a><span class="lineno"> 2322</span>&#160;  <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02323"></a><span class="lineno"> 2323</span>&#160;    <span class="keywordflow">IF</span> (.NOT. cumulus_bl(mdi(i))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02324"></a><span class="lineno"> 2324</span>&#160;      midtrig(i) = ntml(mdi(i)) + 1</div><div class="line"><a name="l02325"></a><span class="lineno"> 2325</span>&#160;      <span class="keywordflow">IF</span> (ntml(mdi(i))  ==  nbl) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02326"></a><span class="lineno"> 2326</span>&#160;        midtrig(i) = ntml(mdi(i))</div><div class="line"><a name="l02327"></a><span class="lineno"> 2327</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l02328"></a><span class="lineno"> 2328</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02329"></a><span class="lineno"> 2329</span>&#160;</div><div class="line"><a name="l02330"></a><span class="lineno"> 2330</span>&#160;<span class="comment">!  Cumulus points ie deep or shallow convection has occurred</span></div><div class="line"><a name="l02331"></a><span class="lineno"> 2331</span>&#160;</div><div class="line"><a name="l02332"></a><span class="lineno"> 2332</span>&#160;      midtrig(i) = ntpar(mdi(i)) + 2</div><div class="line"><a name="l02333"></a><span class="lineno"> 2333</span>&#160;</div><div class="line"><a name="l02334"></a><span class="lineno"> 2334</span>&#160;</div><div class="line"><a name="l02335"></a><span class="lineno"> 2335</span>&#160;<span class="comment">! NTPAR has a maximum value which can be less than the top level for</span></div><div class="line"><a name="l02336"></a><span class="lineno"> 2336</span>&#160;<span class="comment">! deep. Deep convection may terminate above this. Need to prevent mid</span></div><div class="line"><a name="l02337"></a><span class="lineno"> 2337</span>&#160;<span class="comment">! level convection occurring at the same levels as deep.</span></div><div class="line"><a name="l02338"></a><span class="lineno"> 2338</span>&#160;</div><div class="line"><a name="l02339"></a><span class="lineno"> 2339</span>&#160;      <span class="keywordflow">IF</span>(.NOT.l_shallow_bl(mdi(i))) <span class="keywordflow">THEN</span>   <span class="comment">! deep points</span></div><div class="line"><a name="l02340"></a><span class="lineno"> 2340</span>&#160;        <span class="keywordflow">IF</span> (kterm_deep(mdi(i)) &gt;  ntpar(mdi(i))+2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02341"></a><span class="lineno"> 2341</span>&#160;          midtrig(i) = kterm_deep(mdi(i))</div><div class="line"><a name="l02342"></a><span class="lineno"> 2342</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l02343"></a><span class="lineno"> 2343</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! deep points</span></div><div class="line"><a name="l02344"></a><span class="lineno"> 2344</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l02345"></a><span class="lineno"> 2345</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02346"></a><span class="lineno"> 2346</span>&#160;</div><div class="line"><a name="l02347"></a><span class="lineno"> 2347</span>&#160;</div><div class="line"><a name="l02348"></a><span class="lineno"> 2348</span>&#160;<span class="comment">! 3.2 Copy all input arrays to arrays ending in _md for passing to</span></div><div class="line"><a name="l02349"></a><span class="lineno"> 2349</span>&#160;<span class="comment">!     mid-level scheme</span></div><div class="line"><a name="l02350"></a><span class="lineno"> 2350</span>&#160;</div><div class="line"><a name="l02351"></a><span class="lineno"> 2351</span>&#160;</div><div class="line"><a name="l02352"></a><span class="lineno"> 2352</span>&#160;<span class="comment">! In only variables</span></div><div class="line"><a name="l02353"></a><span class="lineno"> 2353</span>&#160;</div><div class="line"><a name="l02354"></a><span class="lineno"> 2354</span>&#160;  <span class="keywordflow">DO</span> j=1,n_md</div><div class="line"><a name="l02355"></a><span class="lineno"> 2355</span>&#160;    bland_md(j)           = bland(mdi(j))</div><div class="line"><a name="l02356"></a><span class="lineno"> 2356</span>&#160;    ntml_md(j)            = ntml(mdi(j))</div><div class="line"><a name="l02357"></a><span class="lineno"> 2357</span>&#160;    ntpar_md(j)           = ntpar(mdi(j))</div><div class="line"><a name="l02358"></a><span class="lineno"> 2358</span>&#160;    pstar_md(j)           = pstar(mdi(j))</div><div class="line"><a name="l02359"></a><span class="lineno"> 2359</span>&#160;    recip_pstar_md(j)     = recip_pstar(mdi(j))</div><div class="line"><a name="l02360"></a><span class="lineno"> 2360</span>&#160;    q1_sd_md(j)           = q1_sd(mdi(j))</div><div class="line"><a name="l02361"></a><span class="lineno"> 2361</span>&#160;    t1_sd_md(j)           = t1_sd(mdi(j))</div><div class="line"><a name="l02362"></a><span class="lineno"> 2362</span>&#160;    w_max_md(j)           = w_max(mdi(j))</div><div class="line"><a name="l02363"></a><span class="lineno"> 2363</span>&#160;    freeze_lev_md(j)      = freeze_lev(mdi(j))</div><div class="line"><a name="l02364"></a><span class="lineno"> 2364</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02365"></a><span class="lineno"> 2365</span>&#160;</div><div class="line"><a name="l02366"></a><span class="lineno"> 2366</span>&#160;  <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02367"></a><span class="lineno"> 2367</span>&#160;    <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02368"></a><span class="lineno"> 2368</span>&#160;      tcw_md(i)    = tcw(mdi(i))</div><div class="line"><a name="l02369"></a><span class="lineno"> 2369</span>&#160;      cca_2d_md(i) = cca_2d(mdi(i))</div><div class="line"><a name="l02370"></a><span class="lineno"> 2370</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02371"></a><span class="lineno"> 2371</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02372"></a><span class="lineno"> 2372</span>&#160;</div><div class="line"><a name="l02373"></a><span class="lineno"> 2373</span>&#160;  <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02374"></a><span class="lineno"> 2374</span>&#160;    iccb_md(i) = iccb(mdi(i))</div><div class="line"><a name="l02375"></a><span class="lineno"> 2375</span>&#160;    icct_md(i) = icct(mdi(i))</div><div class="line"><a name="l02376"></a><span class="lineno"> 2376</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02377"></a><span class="lineno"> 2377</span>&#160;</div><div class="line"><a name="l02378"></a><span class="lineno"> 2378</span>&#160;  <span class="keywordflow">DO</span> k = 0,nlev</div><div class="line"><a name="l02379"></a><span class="lineno"> 2379</span>&#160;    <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02380"></a><span class="lineno"> 2380</span>&#160;      p_layer_centres_md(i,k)      = p_layer_centres(mdi(i),k)</div><div class="line"><a name="l02381"></a><span class="lineno"> 2381</span>&#160;      p_layer_boundaries_md(i,k)   = p_layer_boundaries(mdi(i),k)</div><div class="line"><a name="l02382"></a><span class="lineno"> 2382</span>&#160;      exner_layer_centres_md(i,k)  = exner_layer_centres(mdi(i),k)</div><div class="line"><a name="l02383"></a><span class="lineno"> 2383</span>&#160;      exner_layer_boundaries_md(i,k) = exner_layer_boundaries(mdi(i),k)</div><div class="line"><a name="l02384"></a><span class="lineno"> 2384</span>&#160;      r_theta_md(i,k)              = r_theta(mdi(i),k)</div><div class="line"><a name="l02385"></a><span class="lineno"> 2385</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02386"></a><span class="lineno"> 2386</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02387"></a><span class="lineno"> 2387</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02388"></a><span class="lineno"> 2388</span>&#160;    <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02389"></a><span class="lineno"> 2389</span>&#160;      u_md(i,k)           = u(mdi(i),k)</div><div class="line"><a name="l02390"></a><span class="lineno"> 2390</span>&#160;      v_md(i,k)           = v(mdi(i),k)</div><div class="line"><a name="l02391"></a><span class="lineno"> 2391</span>&#160;      th_md(i,k)          = th(mdi(i),k)</div><div class="line"><a name="l02392"></a><span class="lineno"> 2392</span>&#160;      rho_md(i,k)         = rho(mdi(i),k)</div><div class="line"><a name="l02393"></a><span class="lineno"> 2393</span>&#160;      rho_theta_md(i,k)   = rho_theta(mdi(i),k)</div><div class="line"><a name="l02394"></a><span class="lineno"> 2394</span>&#160;      z_theta_md(i,k)     = z_theta(mdi(i),k)</div><div class="line"><a name="l02395"></a><span class="lineno"> 2395</span>&#160;      z_rho_md(i,k)       = z_rho(mdi(i),k)</div><div class="line"><a name="l02396"></a><span class="lineno"> 2396</span>&#160;      r_rho_md(i,k)       = r_rho(mdi(i),k)</div><div class="line"><a name="l02397"></a><span class="lineno"> 2397</span>&#160;      cf_liquid_md(i,k)   = cf_liquid(mdi(i),k)</div><div class="line"><a name="l02398"></a><span class="lineno"> 2398</span>&#160;      cf_frozen_md(i,k)   = cf_frozen(mdi(i),k)</div><div class="line"><a name="l02399"></a><span class="lineno"> 2399</span>&#160;      bulk_cf_md(i,k)     = bulk_cf(mdi(i),k)</div><div class="line"><a name="l02400"></a><span class="lineno"> 2400</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02401"></a><span class="lineno"> 2401</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02402"></a><span class="lineno"> 2402</span>&#160;</div><div class="line"><a name="l02403"></a><span class="lineno"> 2403</span>&#160;</div><div class="line"><a name="l02404"></a><span class="lineno"> 2404</span>&#160;<span class="comment">! Moisture - scheme requires input of specific humidity</span></div><div class="line"><a name="l02405"></a><span class="lineno"> 2405</span>&#160;</div><div class="line"><a name="l02406"></a><span class="lineno"> 2406</span>&#160;  <span class="keywordflow">IF</span> (l_mixing_ratio) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02407"></a><span class="lineno"> 2407</span>&#160;  <span class="comment">!  Conversion required</span></div><div class="line"><a name="l02408"></a><span class="lineno"> 2408</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02409"></a><span class="lineno"> 2409</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02410"></a><span class="lineno"> 2410</span>&#160;        q_md(i,k)   = q(mdi(i),k)  /(1.0+qt(mdi(i),k))</div><div class="line"><a name="l02411"></a><span class="lineno"> 2411</span>&#160;        qse_md(i,k) = qse(mdi(i),k)  <span class="comment">! copy specific value</span></div><div class="line"><a name="l02412"></a><span class="lineno"> 2412</span>&#160;        qcl_md(i,k) = qcl(mdi(i),k)/(1.0+qt(mdi(i),k))</div><div class="line"><a name="l02413"></a><span class="lineno"> 2413</span>&#160;        qcf_md(i,k) = qcf(mdi(i),k)/(1.0+qt(mdi(i),k))</div><div class="line"><a name="l02414"></a><span class="lineno"> 2414</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02415"></a><span class="lineno"> 2415</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02416"></a><span class="lineno"> 2416</span>&#160;</div><div class="line"><a name="l02417"></a><span class="lineno"> 2417</span>&#160;  <span class="keywordflow">ELSE</span>       <span class="comment">! input is specific humidity therefore no problems</span></div><div class="line"><a name="l02418"></a><span class="lineno"> 2418</span>&#160;</div><div class="line"><a name="l02419"></a><span class="lineno"> 2419</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02420"></a><span class="lineno"> 2420</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02421"></a><span class="lineno"> 2421</span>&#160;        q_md(i,k)   = q(mdi(i),k)</div><div class="line"><a name="l02422"></a><span class="lineno"> 2422</span>&#160;        qse_md(i,k) = qse(mdi(i),k)  <span class="comment">! copy specific value</span></div><div class="line"><a name="l02423"></a><span class="lineno"> 2423</span>&#160;        qcl_md(i,k) = qcl(mdi(i),k)</div><div class="line"><a name="l02424"></a><span class="lineno"> 2424</span>&#160;        qcf_md(i,k) = qcf(mdi(i),k)</div><div class="line"><a name="l02425"></a><span class="lineno"> 2425</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02426"></a><span class="lineno"> 2426</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02427"></a><span class="lineno"> 2427</span>&#160;</div><div class="line"><a name="l02428"></a><span class="lineno"> 2428</span>&#160;<span class="keywordflow">  END IF</span>     <span class="comment">! Test on l_mixing_ratio</span></div><div class="line"><a name="l02429"></a><span class="lineno"> 2429</span>&#160;</div><div class="line"><a name="l02430"></a><span class="lineno"> 2430</span>&#160;  <span class="keywordflow">IF</span> (l_tracer) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02431"></a><span class="lineno"> 2431</span>&#160;    <span class="keywordflow">DO</span> ktra = 1,ntra</div><div class="line"><a name="l02432"></a><span class="lineno"> 2432</span>&#160;      <span class="keywordflow">DO</span> k = 1,trlev</div><div class="line"><a name="l02433"></a><span class="lineno"> 2433</span>&#160;        <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02434"></a><span class="lineno"> 2434</span>&#160;          tracer_md(i,k,ktra)  = tracer(mdi(i),k,ktra)</div><div class="line"><a name="l02435"></a><span class="lineno"> 2435</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02436"></a><span class="lineno"> 2436</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02437"></a><span class="lineno"> 2437</span>&#160;      <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02438"></a><span class="lineno"> 2438</span>&#160;        <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02439"></a><span class="lineno"> 2439</span>&#160;          dtrabydt_md(i,k,ktra)  = 0.0</div><div class="line"><a name="l02440"></a><span class="lineno"> 2440</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02441"></a><span class="lineno"> 2441</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02442"></a><span class="lineno"> 2442</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02443"></a><span class="lineno"> 2443</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02444"></a><span class="lineno"> 2444</span>&#160;</div><div class="line"><a name="l02445"></a><span class="lineno"> 2445</span>&#160;</div><div class="line"><a name="l02446"></a><span class="lineno"> 2446</span>&#160;<span class="comment">! 3.3 Call mid-level convection code</span></div><div class="line"><a name="l02447"></a><span class="lineno"> 2447</span>&#160;</div><div class="line"><a name="l02448"></a><span class="lineno"> 2448</span>&#160;</div><div class="line"><a name="l02449"></a><span class="lineno"> 2449</span>&#160;<span class="comment">! DEPENDS ON: mid_conv_4a</span></div><div class="line"><a name="l02450"></a><span class="lineno"> 2450</span>&#160;  <span class="keyword">CALL </span><a class="code" href="mid__conv-mdconv4a_8f90.xhtml#a27f844a5905bbf9765e10d27e2f7e157" title="Mid-level convection scheme. ">mid_conv_4a</a>(                                               &amp;</div><div class="line"><a name="l02451"></a><span class="lineno"> 2451</span>&#160;                <span class="comment">!IN</span></div><div class="line"><a name="l02452"></a><span class="lineno"> 2452</span>&#160;                nbl,nlev,ntra,n_cca_lev,n_md,trlev,               &amp;</div><div class="line"><a name="l02453"></a><span class="lineno"> 2453</span>&#160;                bland_md,w_max_md,exner_layer_centres_md,         &amp;</div><div class="line"><a name="l02454"></a><span class="lineno"> 2454</span>&#160;                exner_layer_boundaries_md,                        &amp;</div><div class="line"><a name="l02455"></a><span class="lineno"> 2455</span>&#160;                l_calc_dxek, l_q_interact,                        &amp;</div><div class="line"><a name="l02456"></a><span class="lineno"> 2456</span>&#160;                l_tracer, midtrig, ntml_md, ntpar_md,             &amp;</div><div class="line"><a name="l02457"></a><span class="lineno"> 2457</span>&#160;                freeze_lev_md,pstar_md, p_layer_centres_md,       &amp;</div><div class="line"><a name="l02458"></a><span class="lineno"> 2458</span>&#160;                p_layer_boundaries_md,                            &amp;</div><div class="line"><a name="l02459"></a><span class="lineno"> 2459</span>&#160;                r_theta_md, r_rho_md,                             &amp;</div><div class="line"><a name="l02460"></a><span class="lineno"> 2460</span>&#160;                z_theta_md, z_rho_md, rho_md, rho_theta_md,       &amp;</div><div class="line"><a name="l02461"></a><span class="lineno"> 2461</span>&#160;                q_md, q1_sd_md, t1_sd_md,                         &amp;</div><div class="line"><a name="l02462"></a><span class="lineno"> 2462</span>&#160;                th_md,timestep,u_md,v_md,recip_pstar_md,qse_md,   &amp;</div><div class="line"><a name="l02463"></a><span class="lineno"> 2463</span>&#160;                <span class="comment">!INOUT</span></div><div class="line"><a name="l02464"></a><span class="lineno"> 2464</span>&#160;                bulk_cf_md,cf_frozen_md,cf_liquid_md,             &amp;</div><div class="line"><a name="l02465"></a><span class="lineno"> 2465</span>&#160;                qcf_md,qcl_md,tracer_md,                          &amp;</div><div class="line"><a name="l02466"></a><span class="lineno"> 2466</span>&#160;                <span class="comment">!OUT</span></div><div class="line"><a name="l02467"></a><span class="lineno"> 2467</span>&#160;                cape_out_md,cclwp_md,ccw_md,cca_md,               &amp;</div><div class="line"><a name="l02468"></a><span class="lineno"> 2468</span>&#160;                dbcfbydt_md,dcffbydt_md,dcflbydt_md,              &amp;</div><div class="line"><a name="l02469"></a><span class="lineno"> 2469</span>&#160;                dqbydt_md,dqcfbydt_md,dqclbydt_md,                &amp;</div><div class="line"><a name="l02470"></a><span class="lineno"> 2470</span>&#160;                dthbydt_md,dubydt_md,dvbydt_md,dtrabydt_md,       &amp;</div><div class="line"><a name="l02471"></a><span class="lineno"> 2471</span>&#160;                detrain_up_md,detrain_dwn_md,entrain_up_md,       &amp;</div><div class="line"><a name="l02472"></a><span class="lineno"> 2472</span>&#160;                entrain_dwn_md,                                   &amp;</div><div class="line"><a name="l02473"></a><span class="lineno"> 2473</span>&#160;                iccb_md,icct_md,                                  &amp;</div><div class="line"><a name="l02474"></a><span class="lineno"> 2474</span>&#160;                lcca_md,lcbase_md,lctop_md,                       &amp;</div><div class="line"><a name="l02475"></a><span class="lineno"> 2475</span>&#160;                rain_md, snow_md, rain_3d_md, snow_3d_md,         &amp;</div><div class="line"><a name="l02476"></a><span class="lineno"> 2476</span>&#160;                up_flux_md, up_flux_half_md,                      &amp;</div><div class="line"><a name="l02477"></a><span class="lineno"> 2477</span>&#160;                dwn_flux_md,tcw_md,l_mid_md,cca_2d_md,            &amp;</div><div class="line"><a name="l02478"></a><span class="lineno"> 2478</span>&#160;                rbuoy_p_out_md,the_out_md,thp_out_md,             &amp;</div><div class="line"><a name="l02479"></a><span class="lineno"> 2479</span>&#160;                qe_out_md,qp_out_md,                              &amp;</div><div class="line"><a name="l02480"></a><span class="lineno"> 2480</span>&#160;                uw_mid, vw_mid, cfl_limited_md, error_point       &amp;</div><div class="line"><a name="l02481"></a><span class="lineno"> 2481</span>&#160;                )</div><div class="line"><a name="l02482"></a><span class="lineno"> 2482</span>&#160;</div><div class="line"><a name="l02483"></a><span class="lineno"> 2483</span>&#160;  <span class="keywordflow">IF</span> (error_point /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02484"></a><span class="lineno"> 2484</span>&#160;    errorstatus = 3   <span class="comment">! will cause model to fail    write(cmessage,&#39;(a47,i12,a16,i2)&#39;)                                  &amp;</span></div><div class="line"><a name="l02485"></a><span class="lineno"> 2485</span>&#160;    <span class="stringliteral">&#39;Mid conv went to the top of the model at point &#39;</span>,                  &amp;</div><div class="line"><a name="l02486"></a><span class="lineno"> 2486</span>&#160;    mdi(error_point),<span class="stringliteral">&#39; in seg on call &#39;</span>,call_number</div><div class="line"><a name="l02487"></a><span class="lineno"> 2487</span>&#160;</div><div class="line"><a name="l02488"></a><span class="lineno"> 2488</span>&#160;    <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename, errorstatus, cmessage )</div><div class="line"><a name="l02489"></a><span class="lineno"> 2489</span>&#160;</div><div class="line"><a name="l02490"></a><span class="lineno"> 2490</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02491"></a><span class="lineno"> 2491</span>&#160;</div><div class="line"><a name="l02492"></a><span class="lineno"> 2492</span>&#160;</div><div class="line"><a name="l02493"></a><span class="lineno"> 2493</span>&#160;<span class="comment">! 3.4 Write data from mid-level convection to full arrays</span></div><div class="line"><a name="l02494"></a><span class="lineno"> 2494</span>&#160;</div><div class="line"><a name="l02495"></a><span class="lineno"> 2495</span>&#160;</div><div class="line"><a name="l02496"></a><span class="lineno"> 2496</span>&#160;  <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02497"></a><span class="lineno"> 2497</span>&#160;</div><div class="line"><a name="l02498"></a><span class="lineno"> 2498</span>&#160;<span class="comment">! Cloud variables - only overwrite deep or shallow values if</span></div><div class="line"><a name="l02499"></a><span class="lineno"> 2499</span>&#160;<span class="comment">! iccb_md  and icct_md &gt; 0</span></div><div class="line"><a name="l02500"></a><span class="lineno"> 2500</span>&#160;</div><div class="line"><a name="l02501"></a><span class="lineno"> 2501</span>&#160;    <span class="keywordflow">IF</span> (iccb_md(i)  &gt;   0 .AND. icct_md(i)  &gt;   0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02502"></a><span class="lineno"> 2502</span>&#160;      iccb(mdi(i))  = iccb_md(i)</div><div class="line"><a name="l02503"></a><span class="lineno"> 2503</span>&#160;      icct(mdi(i))  = icct_md(i)</div><div class="line"><a name="l02504"></a><span class="lineno"> 2504</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l02505"></a><span class="lineno"> 2505</span>&#160;</div><div class="line"><a name="l02506"></a><span class="lineno"> 2506</span>&#160;<span class="comment">! Overwrite lowest cloud values only if cumulus = .F.</span></div><div class="line"><a name="l02507"></a><span class="lineno"> 2507</span>&#160;</div><div class="line"><a name="l02508"></a><span class="lineno"> 2508</span>&#160;    <span class="keywordflow">IF</span> (.NOT. cumulus_bl(mdi(i))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02509"></a><span class="lineno"> 2509</span>&#160;      lcca(mdi(i))   = lcca_md(i)</div><div class="line"><a name="l02510"></a><span class="lineno"> 2510</span>&#160;      lcbase(mdi(i)) = lcbase_md(i)</div><div class="line"><a name="l02511"></a><span class="lineno"> 2511</span>&#160;      lctop(mdi(i))  = lctop_md(i)</div><div class="line"><a name="l02512"></a><span class="lineno"> 2512</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l02513"></a><span class="lineno"> 2513</span>&#160;</div><div class="line"><a name="l02514"></a><span class="lineno"> 2514</span>&#160;<span class="comment">! Write remaining data to full arrays</span></div><div class="line"><a name="l02515"></a><span class="lineno"> 2515</span>&#160;</div><div class="line"><a name="l02516"></a><span class="lineno"> 2516</span>&#160;    cape_out(mdi(i))   = cape_out(mdi(i)) + cape_out_md(i)</div><div class="line"><a name="l02517"></a><span class="lineno"> 2517</span>&#160;    cclwp(mdi(i))      = cclwp(mdi(i))    + cclwp_md(i)</div><div class="line"><a name="l02518"></a><span class="lineno"> 2518</span>&#160;    rain(mdi(i))       = rain(mdi(i))     + rain_md(i)</div><div class="line"><a name="l02519"></a><span class="lineno"> 2519</span>&#160;    snow(mdi(i))       = snow(mdi(i))     + snow_md(i)</div><div class="line"><a name="l02520"></a><span class="lineno"> 2520</span>&#160;    precip_mid(mdi(i)) = rain_md(i)       + snow_md(i)</div><div class="line"><a name="l02521"></a><span class="lineno"> 2521</span>&#160;    mid_cfl_limited(mdi(i)) = cfl_limited_md(i)</div><div class="line"><a name="l02522"></a><span class="lineno"> 2522</span>&#160;</div><div class="line"><a name="l02523"></a><span class="lineno"> 2523</span>&#160;    l_mid_all(mdi(i))  = l_mid_md(i)</div><div class="line"><a name="l02524"></a><span class="lineno"> 2524</span>&#160;</div><div class="line"><a name="l02525"></a><span class="lineno"> 2525</span>&#160;  <span class="comment">!=====================================================================</span></div><div class="line"><a name="l02526"></a><span class="lineno"> 2526</span>&#160;  <span class="comment">! NOTE: At this point if l_ccrad = T, then cca_2d_md is ONLY equal</span></div><div class="line"><a name="l02527"></a><span class="lineno"> 2527</span>&#160;  <span class="comment">!       to that from mid-level cloud on a given grid point.  The</span></div><div class="line"><a name="l02528"></a><span class="lineno"> 2528</span>&#160;  <span class="comment">!       original code I.E. l_ccrad = F means that cca_2d_md will</span></div><div class="line"><a name="l02529"></a><span class="lineno"> 2529</span>&#160;  <span class="comment">!       include that from sh/dp aswell.</span></div><div class="line"><a name="l02530"></a><span class="lineno"> 2530</span>&#160;  <span class="comment">!=====================================================================</span></div><div class="line"><a name="l02531"></a><span class="lineno"> 2531</span>&#160;</div><div class="line"><a name="l02532"></a><span class="lineno"> 2532</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02533"></a><span class="lineno"> 2533</span>&#160;</div><div class="line"><a name="l02534"></a><span class="lineno"> 2534</span>&#160;</div><div class="line"><a name="l02535"></a><span class="lineno"> 2535</span>&#160;<span class="comment">! Merge md 3d rain &amp; snow profiles</span></div><div class="line"><a name="l02536"></a><span class="lineno"> 2536</span>&#160;  <span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l02537"></a><span class="lineno"> 2537</span>&#160;    <span class="keywordflow">DO</span> i=1,n_md</div><div class="line"><a name="l02538"></a><span class="lineno"> 2538</span>&#160;      rain_3d(mdi(i),k) = rain_3d(mdi(i),k) + rain_3d_md(i,k)</div><div class="line"><a name="l02539"></a><span class="lineno"> 2539</span>&#160;      snow_3d(mdi(i),k) = snow_3d(mdi(i),k) + snow_3d_md(i,k)</div><div class="line"><a name="l02540"></a><span class="lineno"> 2540</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02541"></a><span class="lineno"> 2541</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02542"></a><span class="lineno"> 2542</span>&#160;</div><div class="line"><a name="l02543"></a><span class="lineno"> 2543</span>&#160;</div><div class="line"><a name="l02544"></a><span class="lineno"> 2544</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a9fa9c42ad2da411d2451fd13fbf43514">l_mom</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02545"></a><span class="lineno"> 2545</span>&#160;    <span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l02546"></a><span class="lineno"> 2546</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02547"></a><span class="lineno"> 2547</span>&#160;        dubydt(mdi(i),k) = dubydt(mdi(i),k) + dubydt_md(i,k)</div><div class="line"><a name="l02548"></a><span class="lineno"> 2548</span>&#160;        dvbydt(mdi(i),k) = dvbydt(mdi(i),k) + dvbydt_md(i,k)</div><div class="line"><a name="l02549"></a><span class="lineno"> 2549</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02550"></a><span class="lineno"> 2550</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02551"></a><span class="lineno"> 2551</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02552"></a><span class="lineno"> 2552</span>&#160;</div><div class="line"><a name="l02553"></a><span class="lineno"> 2553</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02554"></a><span class="lineno"> 2554</span>&#160;    <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02555"></a><span class="lineno"> 2555</span>&#160;      dthbydt(mdi(i),k)  = dthbydt(mdi(i),k)  + dthbydt_md(i,k)</div><div class="line"><a name="l02556"></a><span class="lineno"> 2556</span>&#160;      dcflbydt(mdi(i),k) = dcflbydt(mdi(i),k) + dcflbydt_md(i,k)</div><div class="line"><a name="l02557"></a><span class="lineno"> 2557</span>&#160;      dcffbydt(mdi(i),k) = dcffbydt(mdi(i),k) + dcffbydt_md(i,k)</div><div class="line"><a name="l02558"></a><span class="lineno"> 2558</span>&#160;      dbcfbydt(mdi(i),k) = dbcfbydt(mdi(i),k) + dbcfbydt_md(i,k)</div><div class="line"><a name="l02559"></a><span class="lineno"> 2559</span>&#160;      ccw(mdi(i),k)      = ccw(mdi(i),k)      + ccw_md(i,k)</div><div class="line"><a name="l02560"></a><span class="lineno"> 2560</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02561"></a><span class="lineno"> 2561</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02562"></a><span class="lineno"> 2562</span>&#160;</div><div class="line"><a name="l02563"></a><span class="lineno"> 2563</span>&#160;</div><div class="line"><a name="l02564"></a><span class="lineno"> 2564</span>&#160;  <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l02565"></a><span class="lineno"> 2565</span>&#160;    <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02566"></a><span class="lineno"> 2566</span>&#160;      cca(mdi(i),k) = cca(mdi(i),k) + cca_md(i,k)</div><div class="line"><a name="l02567"></a><span class="lineno"> 2567</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02568"></a><span class="lineno"> 2568</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02569"></a><span class="lineno"> 2569</span>&#160;</div><div class="line"><a name="l02570"></a><span class="lineno"> 2570</span>&#160;</div><div class="line"><a name="l02571"></a><span class="lineno"> 2571</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02572"></a><span class="lineno"> 2572</span>&#160;</div><div class="line"><a name="l02573"></a><span class="lineno"> 2573</span>&#160;    <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02574"></a><span class="lineno"> 2574</span>&#160;      cclwp0(mdi(i)) = cclwp(mdi(i))</div><div class="line"><a name="l02575"></a><span class="lineno"> 2575</span>&#160;      iccb0(mdi(i)) = iccb(mdi(i))</div><div class="line"><a name="l02576"></a><span class="lineno"> 2576</span>&#160;      icct0(mdi(i)) = icct(mdi(i))</div><div class="line"><a name="l02577"></a><span class="lineno"> 2577</span>&#160;      lcbase0(mdi(i)) = lcbase(mdi(i))</div><div class="line"><a name="l02578"></a><span class="lineno"> 2578</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02579"></a><span class="lineno"> 2579</span>&#160;</div><div class="line"><a name="l02580"></a><span class="lineno"> 2580</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a39c8fc98ba63da9cee70fe2a91887ced">l_dcpl_cld4pc2</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02581"></a><span class="lineno"> 2581</span>&#160;    <span class="comment">! Then scaling is done by CCRad, even if PC2 = .true.</span></div><div class="line"><a name="l02582"></a><span class="lineno"> 2582</span>&#160;    <span class="comment">! To zero CCA (section 0) for PC2 use the CCRAD knobs</span></div><div class="line"><a name="l02583"></a><span class="lineno"> 2583</span>&#160;    <span class="comment">! cca_knobs should be set to 0.0 in umui for PC2</span></div><div class="line"><a name="l02584"></a><span class="lineno"> 2584</span>&#160;</div><div class="line"><a name="l02585"></a><span class="lineno"> 2585</span>&#160;    <span class="comment">! Anvils if selected will affect both section 0/5 diags</span></div><div class="line"><a name="l02586"></a><span class="lineno"> 2586</span>&#160;    <span class="comment">! if ccrads are not set to 0.0, this may required further</span></div><div class="line"><a name="l02587"></a><span class="lineno"> 2587</span>&#160;    <span class="comment">! attention in future</span></div><div class="line"><a name="l02588"></a><span class="lineno"> 2588</span>&#160;      <span class="keywordflow">DO</span> k=1, nlev</div><div class="line"><a name="l02589"></a><span class="lineno"> 2589</span>&#160;        <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02590"></a><span class="lineno"> 2590</span>&#160;          ccw0(mdi(i),k) = ccw0(mdi(i),k) + ccw_md(i,k) * <a class="code" href="namespacecv__run__mod.xhtml#a515e2624e492b01a1cd49d9429b3ed96">ccw_md_knob</a></div><div class="line"><a name="l02591"></a><span class="lineno"> 2591</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02592"></a><span class="lineno"> 2592</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02593"></a><span class="lineno"> 2593</span>&#160;</div><div class="line"><a name="l02594"></a><span class="lineno"> 2594</span>&#160;      <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l02595"></a><span class="lineno"> 2595</span>&#160;        <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02596"></a><span class="lineno"> 2596</span>&#160;          cca0(mdi(i),k) = cca0(mdi(i),k) + cca_md(i,k) * <a class="code" href="namespacecv__run__mod.xhtml#af213e9b8fba147db9dec3a1face6baf1">cca_md_knob</a></div><div class="line"><a name="l02597"></a><span class="lineno"> 2597</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02598"></a><span class="lineno"> 2598</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02599"></a><span class="lineno"> 2599</span>&#160;</div><div class="line"><a name="l02600"></a><span class="lineno"> 2600</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02601"></a><span class="lineno"> 2601</span>&#160;</div><div class="line"><a name="l02602"></a><span class="lineno"> 2602</span>&#160;      <span class="keywordflow">DO</span> k=1, nlev</div><div class="line"><a name="l02603"></a><span class="lineno"> 2603</span>&#160;        <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02604"></a><span class="lineno"> 2604</span>&#160;          ccw0(mdi(i),k) = ccw0(mdi(i),k) + ccw_md(i,k)</div><div class="line"><a name="l02605"></a><span class="lineno"> 2605</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02606"></a><span class="lineno"> 2606</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02607"></a><span class="lineno"> 2607</span>&#160;</div><div class="line"><a name="l02608"></a><span class="lineno"> 2608</span>&#160;      <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l02609"></a><span class="lineno"> 2609</span>&#160;        <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02610"></a><span class="lineno"> 2610</span>&#160;          cca0(mdi(i),k) = cca0(mdi(i),k) + cca_md(i,k)</div><div class="line"><a name="l02611"></a><span class="lineno"> 2611</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02612"></a><span class="lineno"> 2612</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02613"></a><span class="lineno"> 2613</span>&#160;</div><div class="line"><a name="l02614"></a><span class="lineno"> 2614</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! l_dcpl_cld4pc2</span></div><div class="line"><a name="l02615"></a><span class="lineno"> 2615</span>&#160;</div><div class="line"><a name="l02616"></a><span class="lineno"> 2616</span>&#160;</div><div class="line"><a name="l02617"></a><span class="lineno"> 2617</span>&#160;  <span class="comment">! If l_ccrad=T add on cca_2d_sh,cca_2d_dp to cca_2d.</span></div><div class="line"><a name="l02618"></a><span class="lineno"> 2618</span>&#160;  <span class="comment">! Contributions from cca_2d_sh/cca_2d_dp have already</span></div><div class="line"><a name="l02619"></a><span class="lineno"> 2619</span>&#160;  <span class="comment">! been applied to cca_sh/cca_dp</span></div><div class="line"><a name="l02620"></a><span class="lineno"> 2620</span>&#160;</div><div class="line"><a name="l02621"></a><span class="lineno"> 2621</span>&#160;  <span class="comment">! However, contributions from cca_2d_sh/cca_2d_dp need</span></div><div class="line"><a name="l02622"></a><span class="lineno"> 2622</span>&#160;  <span class="comment">! to be included in the cca_2d diagnostic so as not to</span></div><div class="line"><a name="l02623"></a><span class="lineno"> 2623</span>&#160;  <span class="comment">! upset any Downstream products that use it.</span></div><div class="line"><a name="l02624"></a><span class="lineno"> 2624</span>&#160;  <span class="comment">! (at this cca_2d point only holds cca_2d_md)</span></div><div class="line"><a name="l02625"></a><span class="lineno"> 2625</span>&#160;</div><div class="line"><a name="l02626"></a><span class="lineno"> 2626</span>&#160;  <span class="comment">! cca_2d_md entered mid_conv as an empty array,</span></div><div class="line"><a name="l02627"></a><span class="lineno"> 2627</span>&#160;  <span class="comment">! i.e. no contribution from shallow/deep.</span></div><div class="line"><a name="l02628"></a><span class="lineno"> 2628</span>&#160;  <span class="comment">! Add any contribution from mid level to preserve</span></div><div class="line"><a name="l02629"></a><span class="lineno"> 2629</span>&#160;  <span class="comment">! CCA_2d diagnostic.</span></div><div class="line"><a name="l02630"></a><span class="lineno"> 2630</span>&#160;</div><div class="line"><a name="l02631"></a><span class="lineno"> 2631</span>&#160;    <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02632"></a><span class="lineno"> 2632</span>&#160;      cca_2d(mdi(i)) = cca_2d(mdi(i)) + cca_2d_md(i)</div><div class="line"><a name="l02633"></a><span class="lineno"> 2633</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02634"></a><span class="lineno"> 2634</span>&#160;</div><div class="line"><a name="l02635"></a><span class="lineno"> 2635</span>&#160;  <span class="keywordflow">ELSE</span> <span class="comment">! Non-CCRad</span></div><div class="line"><a name="l02636"></a><span class="lineno"> 2636</span>&#160;</div><div class="line"><a name="l02637"></a><span class="lineno"> 2637</span>&#160;    <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02638"></a><span class="lineno"> 2638</span>&#160;    <span class="comment">! PC2 Code (PC2 has no mid-level contribution)</span></div><div class="line"><a name="l02639"></a><span class="lineno"> 2639</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02640"></a><span class="lineno"> 2640</span>&#160;    <span class="comment">! Non-PC2 Code</span></div><div class="line"><a name="l02641"></a><span class="lineno"> 2641</span>&#160;      <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02642"></a><span class="lineno"> 2642</span>&#160;        cclwp0(mdi(i)) = cclwp(mdi(i))</div><div class="line"><a name="l02643"></a><span class="lineno"> 2643</span>&#160;        iccb0(mdi(i)) = iccb(mdi(i))</div><div class="line"><a name="l02644"></a><span class="lineno"> 2644</span>&#160;        icct0(mdi(i)) = icct(mdi(i))</div><div class="line"><a name="l02645"></a><span class="lineno"> 2645</span>&#160;        lcbase0(mdi(i)) = lcbase(mdi(i))</div><div class="line"><a name="l02646"></a><span class="lineno"> 2646</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02647"></a><span class="lineno"> 2647</span>&#160;</div><div class="line"><a name="l02648"></a><span class="lineno"> 2648</span>&#160;      <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l02649"></a><span class="lineno"> 2649</span>&#160;        <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02650"></a><span class="lineno"> 2650</span>&#160;          cca0(mdi(i),k) = cca0(mdi(i),k) + cca_md(i,k)</div><div class="line"><a name="l02651"></a><span class="lineno"> 2651</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02652"></a><span class="lineno"> 2652</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02653"></a><span class="lineno"> 2653</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l02654"></a><span class="lineno"> 2654</span>&#160;</div><div class="line"><a name="l02655"></a><span class="lineno"> 2655</span>&#160;  <span class="comment">! In non-ccrad configs, the cca_2d_md array is not empty when</span></div><div class="line"><a name="l02656"></a><span class="lineno"> 2656</span>&#160;  <span class="comment">! entering mid-conv; it holds contributions from deep_conv/</span></div><div class="line"><a name="l02657"></a><span class="lineno"> 2657</span>&#160;  <span class="comment">! shallow_conv, so we can just copy cca_2d_md back to cca_2d</span></div><div class="line"><a name="l02658"></a><span class="lineno"> 2658</span>&#160;    <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02659"></a><span class="lineno"> 2659</span>&#160;      cca_2d(mdi(i)) = cca_2d_md(i)</div><div class="line"><a name="l02660"></a><span class="lineno"> 2660</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02661"></a><span class="lineno"> 2661</span>&#160;</div><div class="line"><a name="l02662"></a><span class="lineno"> 2662</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! l_ccrad</span></div><div class="line"><a name="l02663"></a><span class="lineno"> 2663</span>&#160;</div><div class="line"><a name="l02664"></a><span class="lineno"> 2664</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacerad__input__mod.xhtml#a51e9c4e7c6277e2523d8eaa9b8daf28f">l_cca_md_prog</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02665"></a><span class="lineno"> 2665</span>&#160;    <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l02666"></a><span class="lineno"> 2666</span>&#160;      <span class="keywordflow">DO</span> i=1, n_md</div><div class="line"><a name="l02667"></a><span class="lineno"> 2667</span>&#160;        cca0_md(mdi(i),k) = cca_md(i,k)</div><div class="line"><a name="l02668"></a><span class="lineno"> 2668</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02669"></a><span class="lineno"> 2669</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02670"></a><span class="lineno"> 2670</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02671"></a><span class="lineno"> 2671</span>&#160;</div><div class="line"><a name="l02672"></a><span class="lineno"> 2672</span>&#160;</div><div class="line"><a name="l02673"></a><span class="lineno"> 2673</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l02674"></a><span class="lineno"> 2674</span>&#160;<span class="preprocessor"></span>  <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02675"></a><span class="lineno"> 2675</span>&#160;    <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02676"></a><span class="lineno"> 2676</span>&#160;<span class="comment">! with mid level arrays from parcel, check that values</span></div><div class="line"><a name="l02677"></a><span class="lineno"> 2677</span>&#160;<span class="comment">! have changed from the values they were initialised to</span></div><div class="line"><a name="l02678"></a><span class="lineno"> 2678</span>&#160;<span class="comment">! so that we only overwrite at points where mid level convection</span></div><div class="line"><a name="l02679"></a><span class="lineno"> 2679</span>&#160;<span class="comment">! has taken place and don&#39;t inadvertently over-write shallow and</span></div><div class="line"><a name="l02680"></a><span class="lineno"> 2680</span>&#160;<span class="comment">! deep values with the original model profiles.</span></div><div class="line"><a name="l02681"></a><span class="lineno"> 2681</span>&#160;<span class="comment">!If test should be on parcel values, &#39;cos environment values</span></div><div class="line"><a name="l02682"></a><span class="lineno"> 2682</span>&#160;<span class="comment">!shouldn&#39;t change</span></div><div class="line"><a name="l02683"></a><span class="lineno"> 2683</span>&#160;<span class="comment">!looking for points where shallow and deep didn&#39;t affect original</span></div><div class="line"><a name="l02684"></a><span class="lineno"> 2684</span>&#160;<span class="comment">!profile, but mid did</span></div><div class="line"><a name="l02685"></a><span class="lineno"> 2685</span>&#160;      <span class="keywordflow">IF</span> ((rbuoy_p_out_copy(mdi(i),k)  ==  0.0)                     &amp;</div><div class="line"><a name="l02686"></a><span class="lineno"> 2686</span>&#160;           .AND. (rbuoy_p_out_md(i,k)  /=  0.0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02687"></a><span class="lineno"> 2687</span>&#160;        rbuoy_p_out(mdi(i),k) = rbuoy_p_out_md(i,k)</div><div class="line"><a name="l02688"></a><span class="lineno"> 2688</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l02689"></a><span class="lineno"> 2689</span>&#160;</div><div class="line"><a name="l02690"></a><span class="lineno"> 2690</span>&#160;      <span class="keywordflow">IF</span> ((thp_out_copy(mdi(i),k)  ==  th(mdi(i),k)) .AND.          &amp;</div><div class="line"><a name="l02691"></a><span class="lineno"> 2691</span>&#160;          (thp_out_md(i,k)  /=  th(mdi(i),k))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02692"></a><span class="lineno"> 2692</span>&#160;        the_out(mdi(i),k) = the_out_md(i,k)</div><div class="line"><a name="l02693"></a><span class="lineno"> 2693</span>&#160;        thp_out(mdi(i),k) = thp_out_md(i,k)</div><div class="line"><a name="l02694"></a><span class="lineno"> 2694</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l02695"></a><span class="lineno"> 2695</span>&#160;      <span class="keywordflow">IF</span> ((qp_out_copy(mdi(i),k)  ==  q(mdi(i),k)) .AND.            &amp;</div><div class="line"><a name="l02696"></a><span class="lineno"> 2696</span>&#160;          (qp_out_md(i,k)  /=  q(mdi(i),k))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02697"></a><span class="lineno"> 2697</span>&#160;        qe_out(mdi(i),k) = qe_out_md(i,k)</div><div class="line"><a name="l02698"></a><span class="lineno"> 2698</span>&#160;        qp_out(mdi(i),k) = qp_out_md(i,k)</div><div class="line"><a name="l02699"></a><span class="lineno"> 2699</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l02700"></a><span class="lineno"> 2700</span>&#160;</div><div class="line"><a name="l02701"></a><span class="lineno"> 2701</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02702"></a><span class="lineno"> 2702</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02703"></a><span class="lineno"> 2703</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l02704"></a><span class="lineno"> 2704</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l02705"></a><span class="lineno"> 2705</span>&#160;</div><div class="line"><a name="l02706"></a><span class="lineno"> 2706</span>&#160;</div><div class="line"><a name="l02707"></a><span class="lineno"> 2707</span>&#160;<span class="comment">! G-R outputs specific humidity</span></div><div class="line"><a name="l02708"></a><span class="lineno"> 2708</span>&#160;</div><div class="line"><a name="l02709"></a><span class="lineno"> 2709</span>&#160;  <span class="keywordflow">IF</span> (l_mixing_ratio) <span class="keywordflow">THEN</span>  <span class="comment">! Requires conversion</span></div><div class="line"><a name="l02710"></a><span class="lineno"> 2710</span>&#160;</div><div class="line"><a name="l02711"></a><span class="lineno"> 2711</span>&#160;    <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span>  <span class="comment">! PC2</span></div><div class="line"><a name="l02712"></a><span class="lineno"> 2712</span>&#160;</div><div class="line"><a name="l02713"></a><span class="lineno"> 2713</span>&#160;      <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02714"></a><span class="lineno"> 2714</span>&#160;        <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02715"></a><span class="lineno"> 2715</span>&#160;          dqtt= dqbydt_md(i,k)+dqclbydt_md(i,k)+dqcfbydt_md(i,k)</div><div class="line"><a name="l02716"></a><span class="lineno"> 2716</span>&#160;          dqt = dqtt*timestep</div><div class="line"><a name="l02717"></a><span class="lineno"> 2717</span>&#160;          denom = 1.0/((1.0-qt(mdi(i),k))*(1.0-qt(mdi(i),k)-dqt))</div><div class="line"><a name="l02718"></a><span class="lineno"> 2718</span>&#160;          dqbydt(mdi(i),k)   =  dqbydt(mdi(i),k) + denom *           &amp;</div><div class="line"><a name="l02719"></a><span class="lineno"> 2719</span>&#160;                     ( dqbydt_md(i,k)*(1.0-qt(mdi(i),k))+ q(mdi(i),k)*dqtt )</div><div class="line"><a name="l02720"></a><span class="lineno"> 2720</span>&#160;          dqclbydt(mdi(i),k) = dqclbydt(mdi(i),k) + denom *          &amp;</div><div class="line"><a name="l02721"></a><span class="lineno"> 2721</span>&#160;                     ( dqclbydt_md(i,k)*(1.0-qt(mdi(i),k))+ qcl(mdi(i),k)*dqtt )</div><div class="line"><a name="l02722"></a><span class="lineno"> 2722</span>&#160;          dqcfbydt(mdi(i),k) = dqcfbydt(mdi(i),k) +  denom *         &amp;</div><div class="line"><a name="l02723"></a><span class="lineno"> 2723</span>&#160;                     ( dqcfbydt_md(i,k)*(1.0-qt(mdi(i),k))+ qcf(mdi(i),k)*dqtt )</div><div class="line"><a name="l02724"></a><span class="lineno"> 2724</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02725"></a><span class="lineno"> 2725</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02726"></a><span class="lineno"> 2726</span>&#160;</div><div class="line"><a name="l02727"></a><span class="lineno"> 2727</span>&#160;    <span class="keywordflow">ELSE</span>                    <span class="comment">! Not PC2</span></div><div class="line"><a name="l02728"></a><span class="lineno"> 2728</span>&#160;                            <span class="comment">! No qcl and qcf increments anyway</span></div><div class="line"><a name="l02729"></a><span class="lineno"> 2729</span>&#160;      <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02730"></a><span class="lineno"> 2730</span>&#160;        <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02731"></a><span class="lineno"> 2731</span>&#160;          dqt   = dqbydt_md(i,k)*timestep</div><div class="line"><a name="l02732"></a><span class="lineno"> 2732</span>&#160;          denom = 1.0/((1.0-qt(mdi(i),k))*(1.0-qt(mdi(i),k)-dqt))</div><div class="line"><a name="l02733"></a><span class="lineno"> 2733</span>&#160;          dqbydt(mdi(i),k)    = dqbydt(mdi(i),k) + dqbydt_md(i,k)*denom</div><div class="line"><a name="l02734"></a><span class="lineno"> 2734</span>&#160;          dqclbydt(mdi(i),k)  = 0.0</div><div class="line"><a name="l02735"></a><span class="lineno"> 2735</span>&#160;          dqcfbydt(mdi(i),k)  = 0.0</div><div class="line"><a name="l02736"></a><span class="lineno"> 2736</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02737"></a><span class="lineno"> 2737</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02738"></a><span class="lineno"> 2738</span>&#160;</div><div class="line"><a name="l02739"></a><span class="lineno"> 2739</span>&#160;<span class="keywordflow">    END IF</span>                  <span class="comment">! test on PC2</span></div><div class="line"><a name="l02740"></a><span class="lineno"> 2740</span>&#160;</div><div class="line"><a name="l02741"></a><span class="lineno"> 2741</span>&#160;  <span class="keywordflow">ELSE</span>        <span class="comment">! output is specific humidity therefore no problems</span></div><div class="line"><a name="l02742"></a><span class="lineno"> 2742</span>&#160;</div><div class="line"><a name="l02743"></a><span class="lineno"> 2743</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02744"></a><span class="lineno"> 2744</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02745"></a><span class="lineno"> 2745</span>&#160;        dqbydt(mdi(i),k)   = dqbydt(mdi(i),k)   + dqbydt_md(i,k)</div><div class="line"><a name="l02746"></a><span class="lineno"> 2746</span>&#160;        dqclbydt(mdi(i),k) = dqclbydt(mdi(i),k) + dqclbydt_md(i,k)</div><div class="line"><a name="l02747"></a><span class="lineno"> 2747</span>&#160;        dqcfbydt(mdi(i),k) = dqcfbydt(mdi(i),k) + dqcfbydt_md(i,k)</div><div class="line"><a name="l02748"></a><span class="lineno"> 2748</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02749"></a><span class="lineno"> 2749</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02750"></a><span class="lineno"> 2750</span>&#160;</div><div class="line"><a name="l02751"></a><span class="lineno"> 2751</span>&#160;<span class="keywordflow">  END IF</span>      <span class="comment">! Test on l_mixing_ratio</span></div><div class="line"><a name="l02752"></a><span class="lineno"> 2752</span>&#160;</div><div class="line"><a name="l02753"></a><span class="lineno"> 2753</span>&#160;</div><div class="line"><a name="l02754"></a><span class="lineno"> 2754</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#aaa805ef81602a9e8e678e5f68be250ee">flg_up_flx</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02755"></a><span class="lineno"> 2755</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02756"></a><span class="lineno"> 2756</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02757"></a><span class="lineno"> 2757</span>&#160;        up_flux(mdi(i),k)     = up_flux(mdi(i),k) + up_flux_md(i,k)</div><div class="line"><a name="l02758"></a><span class="lineno"> 2758</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02759"></a><span class="lineno"> 2759</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02760"></a><span class="lineno"> 2760</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02761"></a><span class="lineno"> 2761</span>&#160;  <span class="keywordflow">IF</span> (flg_up_flx_half) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02762"></a><span class="lineno"> 2762</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02763"></a><span class="lineno"> 2763</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02764"></a><span class="lineno"> 2764</span>&#160;        up_flux_half(mdi(i),k)= up_flux_half(mdi(i),k) + up_flux_half_md(i,k)</div><div class="line"><a name="l02765"></a><span class="lineno"> 2765</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02766"></a><span class="lineno"> 2766</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02767"></a><span class="lineno"> 2767</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02768"></a><span class="lineno"> 2768</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a645dd024842155b75c5b638f11391ac9">flg_dwn_flx</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02769"></a><span class="lineno"> 2769</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02770"></a><span class="lineno"> 2770</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02771"></a><span class="lineno"> 2771</span>&#160;        dwn_flux(mdi(i),k)     = dwn_flux(mdi(i),k) + dwn_flux_md(i,k)</div><div class="line"><a name="l02772"></a><span class="lineno"> 2772</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02773"></a><span class="lineno"> 2773</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02774"></a><span class="lineno"> 2774</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02775"></a><span class="lineno"> 2775</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a594eca06c1e2300b31f8c2bba686ff1e">flg_entr_up</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02776"></a><span class="lineno"> 2776</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02777"></a><span class="lineno"> 2777</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02778"></a><span class="lineno"> 2778</span>&#160;        entrain_up(mdi(i),k)   = entrain_up(mdi(i),k) + entrain_up_md(i,k)</div><div class="line"><a name="l02779"></a><span class="lineno"> 2779</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02780"></a><span class="lineno"> 2780</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02781"></a><span class="lineno"> 2781</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02782"></a><span class="lineno"> 2782</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a23946cc9e076aa4865e7ed4049aa6e81">flg_detr_up</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02783"></a><span class="lineno"> 2783</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02784"></a><span class="lineno"> 2784</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02785"></a><span class="lineno"> 2785</span>&#160;        detrain_up(mdi(i),k)   = detrain_up(mdi(i),k) + detrain_up_md(i,k)</div><div class="line"><a name="l02786"></a><span class="lineno"> 2786</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02787"></a><span class="lineno"> 2787</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02788"></a><span class="lineno"> 2788</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02789"></a><span class="lineno"> 2789</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a9986060bf6c1a80468d9ae32b6bafcf9">flg_entr_dwn</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02790"></a><span class="lineno"> 2790</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02791"></a><span class="lineno"> 2791</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02792"></a><span class="lineno"> 2792</span>&#160;        entrain_dwn(mdi(i),k)  = entrain_dwn(mdi(i),k) + entrain_dwn_md(i,k)</div><div class="line"><a name="l02793"></a><span class="lineno"> 2793</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02794"></a><span class="lineno"> 2794</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02795"></a><span class="lineno"> 2795</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02796"></a><span class="lineno"> 2796</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#ad0f02382d0dbfd786770638461d8ec1f">flg_detr_dwn</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02797"></a><span class="lineno"> 2797</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02798"></a><span class="lineno"> 2798</span>&#160;      <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02799"></a><span class="lineno"> 2799</span>&#160;        detrain_dwn(mdi(i),k)  = detrain_dwn(mdi(i),k) + detrain_dwn_md(i,k)</div><div class="line"><a name="l02800"></a><span class="lineno"> 2800</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02801"></a><span class="lineno"> 2801</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02802"></a><span class="lineno"> 2802</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02803"></a><span class="lineno"> 2803</span>&#160;  <span class="keywordflow">IF</span> (l_tracer) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02804"></a><span class="lineno"> 2804</span>&#160;    <span class="keywordflow">DO</span> ktra = 1,ntra</div><div class="line"><a name="l02805"></a><span class="lineno"> 2805</span>&#160;      <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l02806"></a><span class="lineno"> 2806</span>&#160;        <span class="keywordflow">DO</span> i = 1,n_md</div><div class="line"><a name="l02807"></a><span class="lineno"> 2807</span>&#160;          dtrabydt(mdi(i),k,ktra)  = dtrabydt(mdi(i),k,ktra)      &amp;</div><div class="line"><a name="l02808"></a><span class="lineno"> 2808</span>&#160;                                    + dtrabydt_md(i,k,ktra)</div><div class="line"><a name="l02809"></a><span class="lineno"> 2809</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02810"></a><span class="lineno"> 2810</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02811"></a><span class="lineno"> 2811</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02812"></a><span class="lineno"> 2812</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02813"></a><span class="lineno"> 2813</span>&#160;</div><div class="line"><a name="l02814"></a><span class="lineno"> 2814</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! (n_md &gt; 0) Test</span></div><div class="line"><a name="l02815"></a><span class="lineno"> 2815</span>&#160;</div><div class="line"><a name="l02816"></a><span class="lineno"> 2816</span>&#160;</div><div class="line"><a name="l02817"></a><span class="lineno"> 2817</span>&#160;<span class="comment">!write adaptive scm diagnostics</span></div><div class="line"><a name="l02818"></a><span class="lineno"> 2818</span>&#160;<span class="comment">!commented out because current version causes problems with</span></div><div class="line"><a name="l02819"></a><span class="lineno"> 2819</span>&#160;<span class="comment">!substepping - code still available for future development work.</span></div><div class="line"><a name="l02820"></a><span class="lineno"> 2820</span>&#160;<span class="comment">!#if defined(SCMA)</span></div><div class="line"><a name="l02821"></a><span class="lineno"> 2821</span>&#160;<span class="comment">!      sname=&#39;rbuoy_p_out&#39;</span></div><div class="line"><a name="l02822"></a><span class="lineno"> 2822</span>&#160;<span class="comment">!      lname=&#39;buoyancy excess as used in Parcel&#39;</span></div><div class="line"><a name="l02823"></a><span class="lineno"> 2823</span>&#160;<span class="comment">!      units=&#39;K &#39;</span></div><div class="line"><a name="l02824"></a><span class="lineno"> 2824</span>&#160;<span class="comment">!      call SCMoutput(rbuoy_p_out,</span></div><div class="line"><a name="l02825"></a><span class="lineno"> 2825</span>&#160;<span class="comment">!     &amp;               sname,lname,units,t_inst,d_all,stream(3),&#39;&#39;)</span></div><div class="line"><a name="l02826"></a><span class="lineno"> 2826</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l02827"></a><span class="lineno"> 2827</span>&#160;<span class="comment">!      sname=&#39;the_out&#39;</span></div><div class="line"><a name="l02828"></a><span class="lineno"> 2828</span>&#160;<span class="comment">!      lname=&#39;th_E as used in Parcel&#39;</span></div><div class="line"><a name="l02829"></a><span class="lineno"> 2829</span>&#160;<span class="comment">!      units=&#39;K &#39;</span></div><div class="line"><a name="l02830"></a><span class="lineno"> 2830</span>&#160;<span class="comment">!      call SCMoutput(the_out,</span></div><div class="line"><a name="l02831"></a><span class="lineno"> 2831</span>&#160;<span class="comment">!     &amp;               sname,lname,units,t_inst,d_all,stream(3),&#39;&#39;)</span></div><div class="line"><a name="l02832"></a><span class="lineno"> 2832</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l02833"></a><span class="lineno"> 2833</span>&#160;<span class="comment">!      sname=&#39;thp_out&#39;</span></div><div class="line"><a name="l02834"></a><span class="lineno"> 2834</span>&#160;<span class="comment">!      lname=&#39;th_P as used in Parcel&#39;</span></div><div class="line"><a name="l02835"></a><span class="lineno"> 2835</span>&#160;<span class="comment">!      units=&#39;K &#39;</span></div><div class="line"><a name="l02836"></a><span class="lineno"> 2836</span>&#160;<span class="comment">!      call SCMoutput(the_out,</span></div><div class="line"><a name="l02837"></a><span class="lineno"> 2837</span>&#160;<span class="comment">!     &amp;               sname,lname,units,t_inst,d_all,stream(3),&#39;&#39;)</span></div><div class="line"><a name="l02838"></a><span class="lineno"> 2838</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l02839"></a><span class="lineno"> 2839</span>&#160;<span class="comment">!      sname=&#39;qe_out&#39;</span></div><div class="line"><a name="l02840"></a><span class="lineno"> 2840</span>&#160;<span class="comment">!      lname=&#39;q_E as used in Parcel&#39;</span></div><div class="line"><a name="l02841"></a><span class="lineno"> 2841</span>&#160;<span class="comment">!      units=&#39;kg/kg&#39;</span></div><div class="line"><a name="l02842"></a><span class="lineno"> 2842</span>&#160;<span class="comment">!      call SCMoutput(qe_out,</span></div><div class="line"><a name="l02843"></a><span class="lineno"> 2843</span>&#160;<span class="comment">!     &amp;               sname,lname,units,t_inst,d_all,stream(3),&#39;&#39;)</span></div><div class="line"><a name="l02844"></a><span class="lineno"> 2844</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l02845"></a><span class="lineno"> 2845</span>&#160;<span class="comment">!      sname=&#39;qp_out&#39;</span></div><div class="line"><a name="l02846"></a><span class="lineno"> 2846</span>&#160;<span class="comment">!      lname=&#39;q_P as used in Parcel&#39;</span></div><div class="line"><a name="l02847"></a><span class="lineno"> 2847</span>&#160;<span class="comment">!      units=&#39;kg/kg &#39;</span></div><div class="line"><a name="l02848"></a><span class="lineno"> 2848</span>&#160;<span class="comment">!      call SCMoutput(qp_out,</span></div><div class="line"><a name="l02849"></a><span class="lineno"> 2849</span>&#160;<span class="comment">!     &amp;               sname,lname,units,t_inst,d_all,stream(3),&#39;&#39;)</span></div><div class="line"><a name="l02850"></a><span class="lineno"> 2850</span>&#160;</div><div class="line"><a name="l02851"></a><span class="lineno"> 2851</span>&#160;<span class="comment">!#endif</span></div><div class="line"><a name="l02852"></a><span class="lineno"> 2852</span>&#160;</div><div class="line"><a name="l02853"></a><span class="lineno"> 2853</span>&#160;<span class="comment">! 4.0 Energy correction calculation - involves integral over</span></div><div class="line"><a name="l02854"></a><span class="lineno"> 2854</span>&#160;<span class="comment">!     whole column therefore this should not be placed in the</span></div><div class="line"><a name="l02855"></a><span class="lineno"> 2855</span>&#160;<span class="comment">!     separate calls to deep, shallow and mid. Some locations will</span></div><div class="line"><a name="l02856"></a><span class="lineno"> 2856</span>&#160;<span class="comment">!     have both shallow and mid level or deep and mid level convection</span></div><div class="line"><a name="l02857"></a><span class="lineno"> 2857</span>&#160;</div><div class="line"><a name="l02858"></a><span class="lineno"> 2858</span>&#160;<span class="comment">!     UM documentation paper 27 - section 12.</span></div><div class="line"><a name="l02859"></a><span class="lineno"> 2859</span>&#160;<span class="comment">! First work out which points convection has occurred at .</span></div><div class="line"><a name="l02860"></a><span class="lineno"> 2860</span>&#160;</div><div class="line"><a name="l02861"></a><span class="lineno"> 2861</span>&#160;nconv_all=0</div><div class="line"><a name="l02862"></a><span class="lineno"> 2862</span>&#160;<span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l02863"></a><span class="lineno"> 2863</span>&#160;  <span class="keywordflow">IF</span> (cumulus_bl(i).OR.l_mid_all(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02864"></a><span class="lineno"> 2864</span>&#160;    nconv_all = nconv_all + 1</div><div class="line"><a name="l02865"></a><span class="lineno"> 2865</span>&#160;    index1(nconv_all) = i</div><div class="line"><a name="l02866"></a><span class="lineno"> 2866</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02867"></a><span class="lineno"> 2867</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l02868"></a><span class="lineno"> 2868</span>&#160;</div><div class="line"><a name="l02869"></a><span class="lineno"> 2869</span>&#160;<span class="keywordflow">IF</span> (nconv_all &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02870"></a><span class="lineno"> 2870</span>&#160;</div><div class="line"><a name="l02871"></a><span class="lineno"> 2871</span>&#160;<span class="comment">! DEPENDS ON: cor_engy_4a</span></div><div class="line"><a name="l02872"></a><span class="lineno"> 2872</span>&#160;  <span class="keyword">CALL </span><a class="code" href="cor__engy-coreng1a_8f90.xhtml#aa729704424909118eedcf74806d736d3" title="Ensure conservation of moist static energy. ">cor_engy_4a</a>(np_field,npnts,nconv_all,nlev,dthbydt,dqbydt,snow &amp;</div><div class="line"><a name="l02873"></a><span class="lineno"> 2873</span>&#160;                  ,exner_layer_centres,p_layer_boundaries,index1)</div><div class="line"><a name="l02874"></a><span class="lineno"> 2874</span>&#160;</div><div class="line"><a name="l02875"></a><span class="lineno"> 2875</span>&#160;</div><div class="line"><a name="l02876"></a><span class="lineno"> 2876</span>&#160;<span class="comment">! 5.0  Total water conservation  - also works on whole column</span></div><div class="line"><a name="l02877"></a><span class="lineno"> 2877</span>&#160;</div><div class="line"><a name="l02878"></a><span class="lineno"> 2878</span>&#160;</div><div class="line"><a name="l02879"></a><span class="lineno"> 2879</span>&#160;<span class="comment">! only check columns where convection has occurred.</span></div><div class="line"><a name="l02880"></a><span class="lineno"> 2880</span>&#160;</div><div class="line"><a name="l02881"></a><span class="lineno"> 2881</span>&#160;</div><div class="line"><a name="l02882"></a><span class="lineno"> 2882</span>&#160;  <span class="keywordflow">DO</span> j = 1,nconv_all</div><div class="line"><a name="l02883"></a><span class="lineno"> 2883</span>&#160;    i=index1(j)</div><div class="line"><a name="l02884"></a><span class="lineno"> 2884</span>&#160;    qminincolumn(j) = q(i,nlev)</div><div class="line"><a name="l02885"></a><span class="lineno"> 2885</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02886"></a><span class="lineno"> 2886</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev-1</div><div class="line"><a name="l02887"></a><span class="lineno"> 2887</span>&#160;    <span class="keywordflow">DO</span> j = 1,nconv_all</div><div class="line"><a name="l02888"></a><span class="lineno"> 2888</span>&#160;      i=index1(j)</div><div class="line"><a name="l02889"></a><span class="lineno"> 2889</span>&#160;      <span class="keywordflow">IF</span> (q(i,k)  &lt;   qminincolumn(j)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02890"></a><span class="lineno"> 2890</span>&#160;        qminincolumn(j) = q(i,k)</div><div class="line"><a name="l02891"></a><span class="lineno"> 2891</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l02892"></a><span class="lineno"> 2892</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02893"></a><span class="lineno"> 2893</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02894"></a><span class="lineno"> 2894</span>&#160;</div><div class="line"><a name="l02895"></a><span class="lineno"> 2895</span>&#160;</div><div class="line"><a name="l02896"></a><span class="lineno"> 2896</span>&#160;<span class="comment">! Ensure Q does not go below global allowed minimum (QMIN)</span></div><div class="line"><a name="l02897"></a><span class="lineno"> 2897</span>&#160;</div><div class="line"><a name="l02898"></a><span class="lineno"> 2898</span>&#160;  <span class="keywordflow">DO</span> j = 1,nconv_all</div><div class="line"><a name="l02899"></a><span class="lineno"> 2899</span>&#160;    qminincolumn(j)=max(qmin,qminincolumn(j))</div><div class="line"><a name="l02900"></a><span class="lineno"> 2900</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02901"></a><span class="lineno"> 2901</span>&#160;</div><div class="line"><a name="l02902"></a><span class="lineno"> 2902</span>&#160;</div><div class="line"><a name="l02903"></a><span class="lineno"> 2903</span>&#160;<span class="comment">! Apply an artificial upwards flux from k-1 level to ensure Q</span></div><div class="line"><a name="l02904"></a><span class="lineno"> 2904</span>&#160;<span class="comment">! remians above minimum value in the column.</span></div><div class="line"><a name="l02905"></a><span class="lineno"> 2905</span>&#160;</div><div class="line"><a name="l02906"></a><span class="lineno"> 2906</span>&#160;</div><div class="line"><a name="l02907"></a><span class="lineno"> 2907</span>&#160;  <span class="keywordflow">DO</span> k = nlev,2,-1</div><div class="line"><a name="l02908"></a><span class="lineno"> 2908</span>&#160;<span class="comment">! NEC SX6 compiler directive so that next loop vectorized</span></div><div class="line"><a name="l02909"></a><span class="lineno"> 2909</span>&#160;<span class="comment">!CDIR NODEP</span></div><div class="line"><a name="l02910"></a><span class="lineno"> 2910</span>&#160;    <span class="keywordflow">DO</span> j = 1,nconv_all</div><div class="line"><a name="l02911"></a><span class="lineno"> 2911</span>&#160;      i=index1(j)</div><div class="line"><a name="l02912"></a><span class="lineno"> 2912</span>&#160;      temp1(j)=q(i,k) + dqbydt(i,k) * timestep</div><div class="line"><a name="l02913"></a><span class="lineno"> 2913</span>&#160;</div><div class="line"><a name="l02914"></a><span class="lineno"> 2914</span>&#160;      <span class="keywordflow">IF</span> (temp1(j)  &lt;   qminincolumn(j)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02915"></a><span class="lineno"> 2915</span>&#160;</div><div class="line"><a name="l02916"></a><span class="lineno"> 2916</span>&#160;        dqbydt(i,k-1) = dqbydt(i,k-1) -                           &amp;</div><div class="line"><a name="l02917"></a><span class="lineno"> 2917</span>&#160;              ((qminincolumn(j) - q(i,k)) / timestep-dqbydt(i,k)) &amp;</div><div class="line"><a name="l02918"></a><span class="lineno"> 2918</span>&#160;               * ( - (p_layer_boundaries(i,k) -                   &amp;</div><div class="line"><a name="l02919"></a><span class="lineno"> 2919</span>&#160;                      p_layer_boundaries(i,k-1)))                 &amp;</div><div class="line"><a name="l02920"></a><span class="lineno"> 2920</span>&#160;               / ( - (p_layer_boundaries(i,k-1) -                 &amp;</div><div class="line"><a name="l02921"></a><span class="lineno"> 2921</span>&#160;                      p_layer_boundaries(i,k-2)))</div><div class="line"><a name="l02922"></a><span class="lineno"> 2922</span>&#160;</div><div class="line"><a name="l02923"></a><span class="lineno"> 2923</span>&#160;        dqbydt(i,k) = (qminincolumn(j) - q(i,k)) / timestep</div><div class="line"><a name="l02924"></a><span class="lineno"> 2924</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l02925"></a><span class="lineno"> 2925</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! nconv_all loop</span></div><div class="line"><a name="l02926"></a><span class="lineno"> 2926</span>&#160;<span class="keywordflow">  END DO</span>  <span class="comment">! nlev</span></div><div class="line"><a name="l02927"></a><span class="lineno"> 2927</span>&#160;</div><div class="line"><a name="l02928"></a><span class="lineno"> 2928</span>&#160;</div><div class="line"><a name="l02929"></a><span class="lineno"> 2929</span>&#160;<span class="comment">! 6.0  Subroutine MIX_INC mixes convective increments in the boundary</span></div><div class="line"><a name="l02930"></a><span class="lineno"> 2930</span>&#160;<span class="comment">!      layer (essentially distributes incr. at ntml over layers 1 to</span></div><div class="line"><a name="l02931"></a><span class="lineno"> 2931</span>&#160;<span class="comment">!      ntml e.g. incr(1) = incr(2) = incr(ntml)/ntml)</span></div><div class="line"><a name="l02932"></a><span class="lineno"> 2932</span>&#160;<span class="comment">!      Works on boundary layer - columns integrals involved.</span></div><div class="line"><a name="l02933"></a><span class="lineno"> 2933</span>&#160;</div><div class="line"><a name="l02934"></a><span class="lineno"> 2934</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#adf12c4d96378c409f40e87de2282a982">bl_cnv_mix</a> == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02935"></a><span class="lineno"> 2935</span>&#160;<span class="comment">! DEPENDS ON: mix_inc</span></div><div class="line"><a name="l02936"></a><span class="lineno"> 2936</span>&#160;    <span class="keyword">CALL </span><a class="code" href="mix__inc-mixinc3c_8f90.xhtml#a25edd1c471a3847f98f8957ed0d34048">mix_inc</a>(np_field,npnts,nconv_all,nlev,nbl,ntml,          &amp;</div><div class="line"><a name="l02937"></a><span class="lineno"> 2937</span>&#160;               dthbydt,dqbydt,dubydt,dvbydt,l_tracer,ntra,        &amp;</div><div class="line"><a name="l02938"></a><span class="lineno"> 2938</span>&#160;               dtrabydt,p_layer_boundaries,                       &amp;</div><div class="line"><a name="l02939"></a><span class="lineno"> 2939</span>&#160;               p_layer_centres,index1)</div><div class="line"><a name="l02940"></a><span class="lineno"> 2940</span>&#160;</div><div class="line"><a name="l02941"></a><span class="lineno"> 2941</span>&#160;</div><div class="line"><a name="l02942"></a><span class="lineno"> 2942</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l02943"></a><span class="lineno"> 2943</span>&#160;<span class="keywordflow">END IF</span>    <span class="comment">! test on nconv_all</span></div><div class="line"><a name="l02944"></a><span class="lineno"> 2944</span>&#160;</div><div class="line"><a name="l02945"></a><span class="lineno"> 2945</span>&#160;</div><div class="line"><a name="l02946"></a><span class="lineno"> 2946</span>&#160;<span class="comment">! 7.0  Calculate convective cloud amount on model levels if</span></div><div class="line"><a name="l02947"></a><span class="lineno"> 2947</span>&#160;<span class="comment">!      l_3d_cca = .true.</span></div><div class="line"><a name="l02948"></a><span class="lineno"> 2948</span>&#160;</div><div class="line"><a name="l02949"></a><span class="lineno"> 2949</span>&#160;<span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02950"></a><span class="lineno"> 2950</span>&#160;</div><div class="line"><a name="l02951"></a><span class="lineno"> 2951</span>&#160;  <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l02952"></a><span class="lineno"> 2952</span>&#160;    <span class="keywordflow">DO</span> i=1, npnts</div><div class="line"><a name="l02953"></a><span class="lineno"> 2953</span>&#160;      cca(i,k) = 0.0</div><div class="line"><a name="l02954"></a><span class="lineno"> 2954</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02955"></a><span class="lineno"> 2955</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l02956"></a><span class="lineno"> 2956</span>&#160;</div><div class="line"><a name="l02957"></a><span class="lineno"> 2957</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#af3aff8585bb16fdc7cddc62da16fd0d7">l_3d_cca</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02958"></a><span class="lineno"> 2958</span>&#160;</div><div class="line"><a name="l02959"></a><span class="lineno"> 2959</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a189bd900b35bbaab037f8d39b741df9e">l_anvil</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02960"></a><span class="lineno"> 2960</span>&#160;</div><div class="line"><a name="l02961"></a><span class="lineno"> 2961</span>&#160;<span class="comment">! DEPENDS ON: calc_3d_cca</span></div><div class="line"><a name="l02962"></a><span class="lineno"> 2962</span>&#160;      <span class="keyword">CALL </span><a class="code" href="calc__3d__cca-cal3dcca_8f90.xhtml#a3d503da74a859db2cab9165346128c28" title="*****************************COPYRIGHT************************************** ************************...">calc_3d_cca</a>                                            &amp;</div><div class="line"><a name="l02963"></a><span class="lineno"> 2963</span>&#160;         ( np_field, npnts, nlev, n_cca_lev, nbl, iccb, icct      &amp;</div><div class="line"><a name="l02964"></a><span class="lineno"> 2964</span>&#160;         , p_layer_boundaries, freeze_lev, cca_2d, cca, z_theta   &amp;</div><div class="line"><a name="l02965"></a><span class="lineno"> 2965</span>&#160;         , z_rho )</div><div class="line"><a name="l02966"></a><span class="lineno"> 2966</span>&#160;</div><div class="line"><a name="l02967"></a><span class="lineno"> 2967</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02968"></a><span class="lineno"> 2968</span>&#160;</div><div class="line"><a name="l02969"></a><span class="lineno"> 2969</span>&#160;      <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l02970"></a><span class="lineno"> 2970</span>&#160;        <span class="keywordflow">DO</span> i=1, npnts</div><div class="line"><a name="l02971"></a><span class="lineno"> 2971</span>&#160;          <span class="keywordflow">IF</span> ( k &gt;= iccb(i) .AND. &amp;</div><div class="line"><a name="l02972"></a><span class="lineno"> 2972</span>&#160;               k &lt;= icct(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02973"></a><span class="lineno"> 2973</span>&#160;            cca(i,k) = cca_2d(i)</div><div class="line"><a name="l02974"></a><span class="lineno"> 2974</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l02975"></a><span class="lineno"> 2975</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02976"></a><span class="lineno"> 2976</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02977"></a><span class="lineno"> 2977</span>&#160;</div><div class="line"><a name="l02978"></a><span class="lineno"> 2978</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l02979"></a><span class="lineno"> 2979</span>&#160;</div><div class="line"><a name="l02980"></a><span class="lineno"> 2980</span>&#160;  <span class="keywordflow">ELSE</span> <span class="comment">! CCA is a single level field and l_ccrad is false</span></div><div class="line"><a name="l02981"></a><span class="lineno"> 2981</span>&#160;</div><div class="line"><a name="l02982"></a><span class="lineno"> 2982</span>&#160;    <span class="keywordflow">DO</span> i=1, npnts</div><div class="line"><a name="l02983"></a><span class="lineno"> 2983</span>&#160;      cca(i,1) = cca_2d(i)</div><div class="line"><a name="l02984"></a><span class="lineno"> 2984</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02985"></a><span class="lineno"> 2985</span>&#160;</div><div class="line"><a name="l02986"></a><span class="lineno"> 2986</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! l_3d_cca</span></div><div class="line"><a name="l02987"></a><span class="lineno"> 2987</span>&#160;</div><div class="line"><a name="l02988"></a><span class="lineno"> 2988</span>&#160;</div><div class="line"><a name="l02989"></a><span class="lineno"> 2989</span>&#160;</div><div class="line"><a name="l02990"></a><span class="lineno"> 2990</span>&#160;<span class="comment">! Section 0 cloud properties</span></div><div class="line"><a name="l02991"></a><span class="lineno"> 2991</span>&#160;</div><div class="line"><a name="l02992"></a><span class="lineno"> 2992</span>&#160;  <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02993"></a><span class="lineno"> 2993</span>&#160;</div><div class="line"><a name="l02994"></a><span class="lineno"> 2994</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a7c5e9f2b1af9e229ed225af8fc6f7112">l_pc2_diag_sh</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02995"></a><span class="lineno"> 2995</span>&#160;      <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l02996"></a><span class="lineno"> 2996</span>&#160;        <span class="keywordflow">DO</span> i=1, n_sh</div><div class="line"><a name="l02997"></a><span class="lineno"> 2997</span>&#160;          <span class="keywordflow">IF</span> ( k &gt;= iccb_sh(i) .AND. &amp;</div><div class="line"><a name="l02998"></a><span class="lineno"> 2998</span>&#160;               k &lt; icct_sh(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02999"></a><span class="lineno"> 2999</span>&#160;            cca0(shi(i),k) = cca_2d_sh(i)</div><div class="line"><a name="l03000"></a><span class="lineno"> 3000</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l03001"></a><span class="lineno"> 3001</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l03002"></a><span class="lineno"> 3002</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l03003"></a><span class="lineno"> 3003</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l03004"></a><span class="lineno"> 3004</span>&#160;      <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l03005"></a><span class="lineno"> 3005</span>&#160;        <span class="keywordflow">DO</span> i=1, npnts</div><div class="line"><a name="l03006"></a><span class="lineno"> 3006</span>&#160;          cca0(i,k) = 0.0</div><div class="line"><a name="l03007"></a><span class="lineno"> 3007</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l03008"></a><span class="lineno"> 3008</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l03009"></a><span class="lineno"> 3009</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l03010"></a><span class="lineno"> 3010</span>&#160;</div><div class="line"><a name="l03011"></a><span class="lineno"> 3011</span>&#160;  <span class="keywordflow">ELSE</span> <span class="comment">! NOT l_q_interact</span></div><div class="line"><a name="l03012"></a><span class="lineno"> 3012</span>&#160;</div><div class="line"><a name="l03013"></a><span class="lineno"> 3013</span>&#160;    <span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l03014"></a><span class="lineno"> 3014</span>&#160;      <span class="keywordflow">DO</span> i=1, npnts</div><div class="line"><a name="l03015"></a><span class="lineno"> 3015</span>&#160;        cca0(i,k) = cca(i,k)</div><div class="line"><a name="l03016"></a><span class="lineno"> 3016</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l03017"></a><span class="lineno"> 3017</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l03018"></a><span class="lineno"> 3018</span>&#160;</div><div class="line"><a name="l03019"></a><span class="lineno"> 3019</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l03020"></a><span class="lineno"> 3020</span>&#160;</div><div class="line"><a name="l03021"></a><span class="lineno"> 3021</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! .NOT. CCRad</span></div><div class="line"><a name="l03022"></a><span class="lineno"> 3022</span>&#160;</div><div class="line"><a name="l03023"></a><span class="lineno"> 3023</span>&#160;</div><div class="line"><a name="l03024"></a><span class="lineno"> 3024</span>&#160;<span class="comment">! 8.0  Update tracer field</span></div><div class="line"><a name="l03025"></a><span class="lineno"> 3025</span>&#160;<span class="comment">!      More efficient to do here rather than in subroutines.</span></div><div class="line"><a name="l03026"></a><span class="lineno"> 3026</span>&#160;<span class="comment">!      This seems to be an expensive bit of code on NEC.</span></div><div class="line"><a name="l03027"></a><span class="lineno"> 3027</span>&#160;<span class="comment">!      Changed to operate on just convective points.</span></div><div class="line"><a name="l03028"></a><span class="lineno"> 3028</span>&#160;</div><div class="line"><a name="l03029"></a><span class="lineno"> 3029</span>&#160;</div><div class="line"><a name="l03030"></a><span class="lineno"> 3030</span>&#160;<span class="keywordflow">IF</span> (l_tracer.AND.(nconv_all &gt;  0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l03031"></a><span class="lineno"> 3031</span>&#160;</div><div class="line"><a name="l03032"></a><span class="lineno"> 3032</span>&#160;</div><div class="line"><a name="l03033"></a><span class="lineno"> 3033</span>&#160;<span class="comment">! Adjust timestep to prevent any negative values invading the tracer</span></div><div class="line"><a name="l03034"></a><span class="lineno"> 3034</span>&#160;<span class="comment">! fields (adjusted timestep is a function of geograhical  location and</span></div><div class="line"><a name="l03035"></a><span class="lineno"> 3035</span>&#160;<span class="comment">! tracer type.</span></div><div class="line"><a name="l03036"></a><span class="lineno"> 3036</span>&#160;</div><div class="line"><a name="l03037"></a><span class="lineno"> 3037</span>&#160;  <span class="keywordflow">DO</span> ktra=1,ntra</div><div class="line"><a name="l03038"></a><span class="lineno"> 3038</span>&#160;<span class="comment">! initialise step to timestep</span></div><div class="line"><a name="l03039"></a><span class="lineno"> 3039</span>&#160;    <span class="keywordflow">DO</span> i = 1,nconv_all</div><div class="line"><a name="l03040"></a><span class="lineno"> 3040</span>&#160;      limited_step(i) =timestep</div><div class="line"><a name="l03041"></a><span class="lineno"> 3041</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l03042"></a><span class="lineno"> 3042</span>&#160;</div><div class="line"><a name="l03043"></a><span class="lineno"> 3043</span>&#160;    <span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l03044"></a><span class="lineno"> 3044</span>&#160;      <span class="keywordflow">DO</span> j = 1,nconv_all</div><div class="line"><a name="l03045"></a><span class="lineno"> 3045</span>&#160;        i=index1(j)</div><div class="line"><a name="l03046"></a><span class="lineno"> 3046</span>&#160;<span class="comment">! negative increments  may have a problem</span></div><div class="line"><a name="l03047"></a><span class="lineno"> 3047</span>&#160;        <span class="keywordflow">IF</span> (dtrabydt(i,k,ktra)  &lt;   0.0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l03048"></a><span class="lineno"> 3048</span>&#160;</div><div class="line"><a name="l03049"></a><span class="lineno"> 3049</span>&#160;          step_test(j) = (0.9999 * abs(tracer(i,k,ktra))) /       &amp;</div><div class="line"><a name="l03050"></a><span class="lineno"> 3050</span>&#160;                    (abs(dtrabydt(i,k,ktra)) + safety_margin)</div><div class="line"><a name="l03051"></a><span class="lineno"> 3051</span>&#160;</div><div class="line"><a name="l03052"></a><span class="lineno"> 3052</span>&#160;          <span class="keywordflow">IF</span> (step_test(j)   &lt;   limited_step(j) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l03053"></a><span class="lineno"> 3053</span>&#160;<span class="comment">! then increment is bigger than tracer and timestep needs to be reduced</span></div><div class="line"><a name="l03054"></a><span class="lineno"> 3054</span>&#160;            limited_step(j) = step_test(j)</div><div class="line"><a name="l03055"></a><span class="lineno"> 3055</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l03056"></a><span class="lineno"> 3056</span>&#160;</div><div class="line"><a name="l03057"></a><span class="lineno"> 3057</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l03058"></a><span class="lineno"> 3058</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l03059"></a><span class="lineno"> 3059</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l03060"></a><span class="lineno"> 3060</span>&#160;</div><div class="line"><a name="l03061"></a><span class="lineno"> 3061</span>&#160;<span class="comment">! Update tracer field using limited_step.</span></div><div class="line"><a name="l03062"></a><span class="lineno"> 3062</span>&#160;</div><div class="line"><a name="l03063"></a><span class="lineno"> 3063</span>&#160;    <span class="keywordflow">DO</span> k = 1,nlev</div><div class="line"><a name="l03064"></a><span class="lineno"> 3064</span>&#160;<span class="comment">! NEC compiler directive</span></div><div class="line"><a name="l03065"></a><span class="lineno"> 3065</span>&#160;<span class="comment">!CDIR NODEP</span></div><div class="line"><a name="l03066"></a><span class="lineno"> 3066</span>&#160;      <span class="keywordflow">DO</span> j = 1,nconv_all</div><div class="line"><a name="l03067"></a><span class="lineno"> 3067</span>&#160;        i=index1(j)</div><div class="line"><a name="l03068"></a><span class="lineno"> 3068</span>&#160;        tracer(i,k,ktra) = tracer(i,k,ktra) +                       &amp;</div><div class="line"><a name="l03069"></a><span class="lineno"> 3069</span>&#160;                         dtrabydt(i,k,ktra) * limited_step(j)</div><div class="line"><a name="l03070"></a><span class="lineno"> 3070</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l03071"></a><span class="lineno"> 3071</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l03072"></a><span class="lineno"> 3072</span>&#160;</div><div class="line"><a name="l03073"></a><span class="lineno"> 3073</span>&#160;<span class="keywordflow">  END DO</span>  <span class="comment">! ktra loop</span></div><div class="line"><a name="l03074"></a><span class="lineno"> 3074</span>&#160;<span class="keywordflow">END IF</span>   <span class="comment">! L_tracer</span></div><div class="line"><a name="l03075"></a><span class="lineno"> 3075</span>&#160;</div><div class="line"><a name="l03076"></a><span class="lineno"> 3076</span>&#160;</div><div class="line"><a name="l03077"></a><span class="lineno"> 3077</span>&#160;</div><div class="line"><a name="l03078"></a><span class="lineno"> 3078</span>&#160;</div><div class="line"><a name="l03079"></a><span class="lineno"> 3079</span>&#160;<span class="comment">! Check no CCA/CCA is greater than 1.0</span></div><div class="line"><a name="l03080"></a><span class="lineno"> 3080</span>&#160;<span class="keywordflow">DO</span> k=1, n_cca_lev</div><div class="line"><a name="l03081"></a><span class="lineno"> 3081</span>&#160;  <span class="keywordflow">DO</span> i=1, npnts</div><div class="line"><a name="l03082"></a><span class="lineno"> 3082</span>&#160;    cca0(i,k) = max(0.0, cca0(i,k))</div><div class="line"><a name="l03083"></a><span class="lineno"> 3083</span>&#160;    cca(i,k)  = max(0.0, cca(i,k))</div><div class="line"><a name="l03084"></a><span class="lineno"> 3084</span>&#160;</div><div class="line"><a name="l03085"></a><span class="lineno"> 3085</span>&#160;    <span class="keywordflow">IF</span> (cca0(i,k) &gt;= 1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l03086"></a><span class="lineno"> 3086</span>&#160;      cca0(i,k) = min(0.99e+0, cca0(i,k))</div><div class="line"><a name="l03087"></a><span class="lineno"> 3087</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l03088"></a><span class="lineno"> 3088</span>&#160;    <span class="keywordflow">IF</span> (cca(i,k) &gt;= 1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l03089"></a><span class="lineno"> 3089</span>&#160;      cca(i,k) = min(0.99e+0, cca(i,k))</div><div class="line"><a name="l03090"></a><span class="lineno"> 3090</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l03091"></a><span class="lineno"> 3091</span>&#160;</div><div class="line"><a name="l03092"></a><span class="lineno"> 3092</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l03093"></a><span class="lineno"> 3093</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l03094"></a><span class="lineno"> 3094</span>&#160;</div><div class="line"><a name="l03095"></a><span class="lineno"> 3095</span>&#160;</div><div class="line"><a name="l03096"></a><span class="lineno"> 3096</span>&#160;-</div><div class="line"><a name="l03097"></a><span class="lineno"> 3097</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;GLUE_CONV_4A&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l03098"></a><span class="lineno"> 3098</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l03099"></a><span class="lineno"> 3099</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespaceglue__conv__4a__mod.xhtml#a4cb48dc3e9cfb0ea5d0daf6d1889ed9b" title="Gather-scatter routine for deep and shallow convection points. ">glue_conv_4a</a></div><div class="line"><a name="l03100"></a><span class="lineno"> 3100</span>&#160;</div><div class="line"><a name="l03101"></a><span class="lineno"> 3101</span>&#160;<span class="keyword">    END MODULE </span><a class="code" href="namespaceglue__conv__4a__mod.xhtml">glue_conv_4a_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
