<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/radiation_control/open_cloud_gen.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_f3ced4ca4d97f20ad26ce2534c2046c2.xhtml">radiation_control</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">open_cloud_gen.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="open__cloud__gen_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  global_row_length, global_rows                                        &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;, me, n_proc, at_extremity                                              &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;, row_length, rows                                                      &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;, n_layer, n_wet_layer                                                  &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;, n_profile, p_temp, offx, offy                                         &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;, w_cloud1, dp_corr_strat, cct, cloud_levels                            &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;, cca, n_cca_levels, ccw, qcl_n, qcf_n, xx_cos_theta_latitude           &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;, l_rad_step_diag, l_rad_step_prog, model_domain                        &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;, val_year, val_day_number, val_hour, val_minute                        &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;, val_second                                                            &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;, ierr)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacedynamics__grid__mod.xhtml" title="Input control for dynamics. Input control for dynamics. ">dynamics_grid_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacerad__pcf.xhtml" title="Radiation Program Configuration File. ">rad_pcf</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacerand__no__mcica.xhtml" title="Generate random numbers that are consistent across all machine. ">rand_no_mcica</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemcica__mod.xhtml" title="Global data module for variables used in McICA scheme. ">mcica_mod</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacesw__control__struct.xhtml" title="This module declares the controlling structure for SW radiation. ">sw_control_struct</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacerad__input__mod.xhtml" title="Input control for radiation. Input control for radiation. ">rad_input_mod</a><span class="keywordtype">, ONLY</span>: rad_mcica_sampling, rad_mcica_sigma</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keywordtype">USE </span>cld_generator_mod</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceum__parparams.xhtml" title="This file belongs in section: MPP. ">um_parparams</a></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keywordtype">USE </span>um_parvars<span class="keywordtype">, ONLY</span> : g_datastart</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecloud__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cloud_inputs_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacecloud__inputs__mod.xhtml#a209a966a410f9734b761f5c1aac7bd1f">l_add_cca_to_mcica</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacelevel__heights__mod.xhtml" title="Constants necessary for model level heights in advection and other schemes. Constants necessary for m...">level_heights_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacefsd__parameters__mod.xhtml" title="Global module for setting and storing parameters used in. ">fsd_parameters_mod</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemphys__bypass__mod.xhtml" title="Global bypass module for switches concerned with microphysics. ">mphys_bypass_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemphys__bypass__mod.xhtml#aa3d77eebd1bc1821d0e42bba7e9db5be">mp_dell</a>, <a class="code" href="namespacemphys__bypass__mod.xhtml#af15e86f1314d21b0f6adcf7073a840bf">mp_delp</a></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                             &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    ierr</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    global_row_length                                                   &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  , global_rows                                                         &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  , n_proc                                                              &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  , me</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    at_extremity(4) <span class="comment">!           Indicates if this processor is at north, south</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    row_length                                                          &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  , rows                                                                &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  , n_profile                                                           &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  , n_layer                                                             &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  , n_wet_layer                                                         &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  , n_cca_levels                                                        &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  , offx                                                                &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    val_year                                                            &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  , val_day_number                                                      &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  , val_hour                                                            &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  , val_minute                                                          &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  , val_second</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    p_temp(n_profile, 0:n_layer)                                        &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">!           Pressure</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  , w_cloud1(n_profile, n_wet_layer)                                    &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">!           Amount of cloud</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  , cca(n_profile, n_cca_levels)                                        &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">!           Convective cloud amount</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  , ccw(n_profile, n_wet_layer)                                         &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">!           Convective in-cloud water content (kg/kg)</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  , qcl_n(n_profile, n_wet_layer), qcf_n(n_profile, n_wet_layer)        &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  , xx_cos_theta_latitude(1-offx:row_length+offx,1-offy:rows+offy)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">!           Finite volume cosine of latitude.      !</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">!                       Properties of clouds</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    dp_corr_strat<span class="comment">!           Decorrelation pressure scale for large scale cloud!</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    cct(n_profile)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">!           Level of top of convective cloud</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                               &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    cloud_levels</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">!           Number of global cloud levels</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">!                       Model Switches</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordtype">LOGICAL</span> ::                                                            &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    l_rad_step_diag                                                     &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">!           true if fast radiation timestep    (3C)</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  , l_rad_step_prog</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">!           true if slow radiation timestep    (3C)</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    model_domain</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">!           whether the model is global or limited area.            !</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">!                       Local variables.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    i                                                                   &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">!           Loop variable</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  , <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>                                                                   &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">!           Loop variable</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  , <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>                                                                   &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">!           Loop variable</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  , l                                                                   &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!           Loop variable</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  , ll                                                                  &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">!           Loop variable</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  , info                                                                &amp;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">!           Loop variable</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  , list(n_profile)                                                     &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">!           Global location of each point on the processor.</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  , random_dummy_init                                                   &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">!           Seed for generating seeds for random numbers used in the</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">!           generator           , random_dummy(n_profile)                                             &amp;</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">!           Seed for generating seeds for random numbers used in the</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">!           generator</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  , first_row                                                           &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">!           index of first row</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  , last_row                                                            &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">!           index of last row</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  , cloud_top</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">!           Top global cloudy layer</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    p(n_profile, n_layer)                                               &amp;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">!           Pressure</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  , <a class="code" href="eps_8f90.xhtml#a607b0ae2f37e1479804bcce0b85f4125">eps</a>                                                                 &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">!           small number to prevent division by zero.</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  , cloud_scale                                                         &amp;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">!           cloud fraction times gridbox size</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  , thickness_part(n_profile, n_layer)                                  &amp;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">!           part of FSD param related to layer thickness</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  , dp_corr_cloud(n_profile,n_layer)                                    &amp;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">!           Cloud fraction decorrelation length</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  , dp_corr_cond(n_profile,n_layer)                                     &amp;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">!           Cloud condensate decorrelation length</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  , sigma_qcw(n_profile,n_layer)                                        &amp;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">!           Normalized cloud condensate std. dev</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  , w_cloud(n_profile, 0:n_layer)                                       &amp;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">!           Amount of cloud</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  , c_cloud(n_profile, n_layer)                                         &amp;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">!           Amount of convective cloud</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  , c_ratio(n_profile, n_layer)                                         &amp;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">!           Ratio of convective cloud condensate to mean condensate</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  , ls_ratio(n_profile, n_layer)                                        &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">!           Ratio of large-scale cloud condensate to mean condensate</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  , mix_ratio(n_profile, n_layer)                                       &amp;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">!           Mean in-cloud condensate mixing ratio</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  , x_in_km<span class="comment">!           grid-box size in km</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keywordtype">REAL</span>,<span class="keywordtype">PARAMETER</span> ::                                                     &amp;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    one_third = 1.0/3.0</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">!           Constant for use in FSD parametrization</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="keywordtype">REAL</span>,<span class="keywordtype">PARAMETER</span> ::                                                     &amp;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    root_two = sqrt(2.0)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">!           Constant for use in FSD parametrization</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keywordtype">LOGICAL</span> ::                                                            &amp;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    l_layer_clear</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">!           Flag for layer free of clouds</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: temp_rand(:,:,:)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;OPEN_CLOUD_GEN&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="keywordflow">IF</span> ((l_rad_step_prog) .OR. (l_rad_step_diag)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">IF</span> ((<a class="code" href="namespacesw__control__struct.xhtml#a528a2b88d2af0c01436ddcb22c82e9fa">sw_control</a>(1)%i_cloud == <a class="code" href="namespacerad__pcf.xhtml#a3e0388f3761d38be1d8f207b51cdf9cd">ip_cloud_mcica</a>) .OR.                  &amp;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        (<a class="code" href="namespacesw__control__struct.xhtml#a528a2b88d2af0c01436ddcb22c82e9fa">sw_control</a>(1)%i_fsd /= ip_fsd_constant)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      <a class="code" href="eps_8f90.xhtml#a607b0ae2f37e1479804bcce0b85f4125">eps</a>=epsilon(<a class="code" href="eps_8f90.xhtml#a607b0ae2f37e1479804bcce0b85f4125">eps</a>)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>=1,n_wet_layer</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">DO</span> i=1,n_profile</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a209a966a410f9734b761f5c1aac7bd1f">l_add_cca_to_mcica</a> .AND. <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a> &lt;= n_cca_levels .AND.          &amp;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;              cca(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) &gt; 0.0 .AND. ccw(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            w_cloud(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=cca(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)+(1.0-cca(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>))*w_cloud1(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            c_cloud(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = 0.0</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            c_ratio(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = 0.0</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            ls_ratio(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = 1.0</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            w_cloud(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=w_cloud1(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;          <span class="keywordflow">IF</span> (w_cloud(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) &gt; <a class="code" href="namespacemcica__mod.xhtml#afbc165abced7e9de221d2c556f9d3f6f" title="global array of random numbers for first level in cloud generator ">cut</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a209a966a410f9734b761f5c1aac7bd1f">l_add_cca_to_mcica</a> .AND. <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a> &lt;= n_cca_levels .AND.        &amp;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                cca(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) &gt; 0.0 .AND. ccw(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;              c_cloud(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=cca(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;              mix_ratio(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = ( qcl_n(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)+qcf_n(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) &amp;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                +cca(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)*ccw(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) ) / w_cloud(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;              c_ratio(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = ccw(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) / mix_ratio(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;              ls_ratio(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = (qcl_n(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)+qcf_n(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)) &amp;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                / (w_cloud1(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)*mix_ratio(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) + <a class="code" href="eps_8f90.xhtml#a607b0ae2f37e1479804bcce0b85f4125">eps</a>)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            w_cloud(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = 0.0</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacesw__control__struct.xhtml#a528a2b88d2af0c01436ddcb22c82e9fa">sw_control</a>(1)%i_fsd == ip_fsd_constant) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>=1, n_layer</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">DO</span> i=1, n_profile</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;          sigma_qcw(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=rad_mcica_sigma</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=1,n_layer</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>=1,rows</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;          <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            l=(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>-1)*row_length+i</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            ll=n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            x_in_km = 0.001*sqrt( <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * <a class="code" href="namespacemphys__bypass__mod.xhtml#aa3d77eebd1bc1821d0e42bba7e9db5be">mp_dell</a>      &amp;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                                 * <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * <a class="code" href="namespacemphys__bypass__mod.xhtml#af15e86f1314d21b0f6adcf7073a840bf">mp_delp</a>      &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                                 * xx_cos_theta_latitude(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)  )</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keywordflow">IF</span> (w_cloud(l,ll) == 1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;              sigma_qcw(l,ll) = root_two * <a class="code" href="namespacefsd__parameters__mod.xhtml#a0e65e19c4599cc41406fa8a68ee8ebba" title="Parameters for FSD parametrization. ">f_arr</a>(1,i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)               &amp;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;              * (x_in_km ** one_third)                                  &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;              * ((((<a class="code" href="namespacefsd__parameters__mod.xhtml#a2ba360bdeb3fee77c4ee9c9e448cf84a" title="Array of regime and layer thickness dependent parameters required for parametrization of FSD...">f_cons</a>(1) * x_in_km) ** <a class="code" href="namespacefsd__parameters__mod.xhtml#a2ba360bdeb3fee77c4ee9c9e448cf84a" title="Array of regime and layer thickness dependent parameters required for parametrization of FSD...">f_cons</a>(2)) + 1)             &amp;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;              ** (<a class="code" href="namespacefsd__parameters__mod.xhtml#a2ba360bdeb3fee77c4ee9c9e448cf84a" title="Array of regime and layer thickness dependent parameters required for parametrization of FSD...">f_cons</a>(3)))</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;              cloud_scale=w_cloud(l,ll)*x_in_km</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;              sigma_qcw(l,ll) = root_two *                              &amp;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                (<a class="code" href="namespacefsd__parameters__mod.xhtml#a0e65e19c4599cc41406fa8a68ee8ebba" title="Parameters for FSD parametrization. ">f_arr</a>(2,i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)-(<a class="code" href="namespacefsd__parameters__mod.xhtml#a0e65e19c4599cc41406fa8a68ee8ebba" title="Parameters for FSD parametrization. ">f_arr</a>(3,i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)*w_cloud(l,ll)))         &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                * (cloud_scale ** one_third)                            &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                * ((((<a class="code" href="namespacefsd__parameters__mod.xhtml#a2ba360bdeb3fee77c4ee9c9e448cf84a" title="Array of regime and layer thickness dependent parameters required for parametrization of FSD...">f_cons</a>(1) * cloud_scale) ** <a class="code" href="namespacefsd__parameters__mod.xhtml#a2ba360bdeb3fee77c4ee9c9e448cf84a" title="Array of regime and layer thickness dependent parameters required for parametrization of FSD...">f_cons</a>(2)) + 1)       &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                ** (<a class="code" href="namespacefsd__parameters__mod.xhtml#a2ba360bdeb3fee77c4ee9c9e448cf84a" title="Array of regime and layer thickness dependent parameters required for parametrization of FSD...">f_cons</a>(3)))</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      <span class="keyword">ALLOCATE</span>(<a class="code" href="namespacemcica__mod.xhtml#aa38b2213601ad2acacd2ee24e4e8d0d0">cloud_inhom_param_full</a>(n_profile,1:n_layer))</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>=1, n_layer</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="keywordflow">DO</span> i=1, n_profile</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">! Calculate scaling parameter, =EXP(MEAN(LOG(water content)))/MEAN(WC)</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">! from standard deviation of water content, assuming a log-normal</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">! distribution to simplify the maths.          cloud_inhom_param_full(i,j)=(1.0/SQRT((sigma_qcw(i,j)**2)+1))</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;         <span class="keywordflow">IF</span> (<a class="code" href="namespacesw__control__struct.xhtml#a528a2b88d2af0c01436ddcb22c82e9fa">sw_control</a>(1)%i_cloud == <a class="code" href="namespacerad__pcf.xhtml#a3e0388f3761d38be1d8f207b51cdf9cd">ip_cloud_mcica</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;      cloud_levels=1</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>=1,n_wet_layer</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keywordflow">DO</span> i=1,n_profile</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;          <span class="keywordflow">IF</span> (w_cloud(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) .gt. <a class="code" href="namespacemcica__mod.xhtml#afbc165abced7e9de221d2c556f9d3f6f" title="global array of random numbers for first level in cloud generator ">cut</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            cloud_levels=<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="preprocessor">#if! defined(SCMA)</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="preprocessor"></span><span class="comment">! To obtain reproducible results independent of the</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">! decomposition of the domain used on an MPP machine a global</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">! value for the topmost cloudy layer is used.</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;      <span class="keyword">CALL </span>gc_imax(1, n_proc, info, cloud_levels)</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;      cloud_top=n_layer+1-cloud_levels</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;      <span class="keywordflow">IF</span>  (l_rad_step_prog) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">! Set the SW and LW values of subcol_k (the number of sub-columns! each k-term &quot;sees&quot;) and subcol_reorder (a reordering of the! sub-columns so that each sub-column is equivalently important in! the SW and LW).</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordflow">SELECT CASE</span> (rad_mcica_sampling)</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keywordflow">CASE</span> (<a class="code" href="namespacemcica__mod.xhtml#adf6383068b4406dbc914b9744d3e121e" title="SW order of sub-columns. ">ip_mcica_full_sampling</a>)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;          <a class="code" href="namespacemcica__mod.xhtml#ade22439662d1464c606b53429df1f3bd" title="Value of condensate content for each sub-column. ">subcol_need</a>=<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;          <a class="code" href="namespacemcica__mod.xhtml#adf6a754200a0c8f311a35d48da256f6d" title="number of sub-columns to generate ">sw_subcol_k</a>=<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;          <a class="code" href="namespacemcica__mod.xhtml#ad42f2f862fa4bc02a9bda0a666b3239a" title="Number of subcolumns for each k_term in each band. ">lw_subcol_k</a>=<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;          <span class="keyword">ALLOCATE</span>(<a class="code" href="namespacemcica__mod.xhtml#ab038e068616ae2c51198bafda9e0b88b" title="Order of sub-columns points to either SW or LW. (Sub-columns are!&gt; rearranged so that each sub-column...">lw_subcol_reorder</a>(<a class="code" href="namespacemcica__mod.xhtml#ade22439662d1464c606b53429df1f3bd" title="Value of condensate content for each sub-column. ">subcol_need</a>))</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;          <span class="keywordflow">DO</span> i=1,<a class="code" href="namespacemcica__mod.xhtml#ade22439662d1464c606b53429df1f3bd" title="Value of condensate content for each sub-column. ">subcol_need</a></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            <a class="code" href="namespacemcica__mod.xhtml#ab038e068616ae2c51198bafda9e0b88b" title="Order of sub-columns points to either SW or LW. (Sub-columns are!&gt; rearranged so that each sub-column...">lw_subcol_reorder</a>(i)=i</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keywordflow">CASE</span> (<a class="code" href="namespacemcica__mod.xhtml#a9ec236e270e22b4b93b7aec5025cde0a" title="Each k-term &quot;sees&quot; every sub-column. ">ip_mcica_single_sampling</a>)</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;          <a class="code" href="namespacemcica__mod.xhtml#ade22439662d1464c606b53429df1f3bd" title="Value of condensate content for each sub-column. ">subcol_need</a>=<a class="code" href="namespacemcica__mod.xhtml#a5aac50c80d7b2cb76d98eac3aaa84f86" title="Number of cloudy sub-columns required (i.e. MAX of SW and LW) ">subcol_need_single</a></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;          <a class="code" href="namespacemcica__mod.xhtml#adf6a754200a0c8f311a35d48da256f6d" title="number of sub-columns to generate ">sw_subcol_k</a>=1</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;          <a class="code" href="namespacemcica__mod.xhtml#ad42f2f862fa4bc02a9bda0a666b3239a" title="Number of subcolumns for each k_term in each band. ">lw_subcol_k</a>=1</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;          <span class="keyword">ALLOCATE</span>(<a class="code" href="namespacemcica__mod.xhtml#ab038e068616ae2c51198bafda9e0b88b" title="Order of sub-columns points to either SW or LW. (Sub-columns are!&gt; rearranged so that each sub-column...">lw_subcol_reorder</a>(<a class="code" href="namespacemcica__mod.xhtml#ade22439662d1464c606b53429df1f3bd" title="Value of condensate content for each sub-column. ">subcol_need</a>))</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;          <span class="keywordflow">DO</span> i=1,<a class="code" href="namespacemcica__mod.xhtml#ade22439662d1464c606b53429df1f3bd" title="Value of condensate content for each sub-column. ">subcol_need</a></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            <a class="code" href="namespacemcica__mod.xhtml#ab038e068616ae2c51198bafda9e0b88b" title="Order of sub-columns points to either SW or LW. (Sub-columns are!&gt; rearranged so that each sub-column...">lw_subcol_reorder</a>(i) =                                      &amp;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;              mod(<a class="code" href="namespacemcica__mod.xhtml#a71c4601098aad838a6896d822cb4927e" title="LW order of sub-columns. ">lw_subcol_reorder_single</a>(i),<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a>)</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespacemcica__mod.xhtml#ab038e068616ae2c51198bafda9e0b88b" title="Order of sub-columns points to either SW or LW. (Sub-columns are!&gt; rearranged so that each sub-column...">lw_subcol_reorder</a>(i) == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;              <a class="code" href="namespacemcica__mod.xhtml#ab038e068616ae2c51198bafda9e0b88b" title="Order of sub-columns points to either SW or LW. (Sub-columns are!&gt; rearranged so that each sub-column...">lw_subcol_reorder</a>(i) = <a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        <span class="keywordflow">CASE</span> (<a class="code" href="namespacemcica__mod.xhtml#a2bcecd4cc1797c65c02fb663b92a542c" title="Each k-term &quot;sees&quot; a single sub-column. ">ip_mcica_optimal_sampling</a>)</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;          <a class="code" href="namespacemcica__mod.xhtml#ade22439662d1464c606b53429df1f3bd" title="Value of condensate content for each sub-column. ">subcol_need</a>=<a class="code" href="namespacemcica__mod.xhtml#af7c6e153c73e11f7bdff24a0dd92497d" title="Number of cloudy sub-columns required for single sampling. ">subcol_need_optimal</a></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">!          sw_subcol_k and lw_subcol_k have been read from data file</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;          <span class="keyword">ALLOCATE</span>(<a class="code" href="namespacemcica__mod.xhtml#ab038e068616ae2c51198bafda9e0b88b" title="Order of sub-columns points to either SW or LW. (Sub-columns are!&gt; rearranged so that each sub-column...">lw_subcol_reorder</a>(<a class="code" href="namespacemcica__mod.xhtml#ade22439662d1464c606b53429df1f3bd" title="Value of condensate content for each sub-column. ">subcol_need</a>))</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;          <span class="keywordflow">DO</span> i=1,<a class="code" href="namespacemcica__mod.xhtml#ade22439662d1464c606b53429df1f3bd" title="Value of condensate content for each sub-column. ">subcol_need</a></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            <a class="code" href="namespacemcica__mod.xhtml#ab038e068616ae2c51198bafda9e0b88b" title="Order of sub-columns points to either SW or LW. (Sub-columns are!&gt; rearranged so that each sub-column...">lw_subcol_reorder</a>(i) =                                      &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;              mod(<a class="code" href="namespacemcica__mod.xhtml#acaef8ef0963c15ed9b51304b9997c8e9" title="LW order of sub-columns (for single sampling) ">lw_subcol_reorder_optimal</a>(i),<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a>)</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespacemcica__mod.xhtml#ab038e068616ae2c51198bafda9e0b88b" title="Order of sub-columns points to either SW or LW. (Sub-columns are!&gt; rearranged so that each sub-column...">lw_subcol_reorder</a>(i) == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;              <a class="code" href="namespacemcica__mod.xhtml#ab038e068616ae2c51198bafda9e0b88b" title="Order of sub-columns points to either SW or LW. (Sub-columns are!&gt; rearranged so that each sub-column...">lw_subcol_reorder</a>(i) = <a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="keywordflow">              END SELECT</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keyword">ALLOCATE</span>(<a class="code" href="namespacemcica__mod.xhtml#a7671322ba40a9a590761e83477055980" title="Number of cloudy sub-columns required for optimal sampling. ">sw_subcol_reorder</a>(<a class="code" href="namespacemcica__mod.xhtml#ade22439662d1464c606b53429df1f3bd" title="Value of condensate content for each sub-column. ">subcol_need</a>))</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="keywordflow">DO</span> i=1,<a class="code" href="namespacemcica__mod.xhtml#ade22439662d1464c606b53429df1f3bd" title="Value of condensate content for each sub-column. ">subcol_need</a></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;          <a class="code" href="namespacemcica__mod.xhtml#a7671322ba40a9a590761e83477055980" title="Number of cloudy sub-columns required for optimal sampling. ">sw_subcol_reorder</a>(i) = mod(i, <a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a>)</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacemcica__mod.xhtml#a7671322ba40a9a590761e83477055980" title="Number of cloudy sub-columns required for optimal sampling. ">sw_subcol_reorder</a>(i) == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            <a class="code" href="namespacemcica__mod.xhtml#a7671322ba40a9a590761e83477055980" title="Number of cloudy sub-columns required for optimal sampling. ">sw_subcol_reorder</a>(i) = <a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>=1,n_layer</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;          <span class="keywordflow">DO</span> i=1,n_profile</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            p(i,n_layer+1-<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=p_temp(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>=1, n_layer</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;          <span class="keywordflow">DO</span> i=1, n_profile</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            dp_corr_cloud(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=dp_corr_strat</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            dp_corr_cond(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=dp_corr_cloud(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)*0.5</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            <span class="keyword">ALLOCATE</span>(<a class="code" href="namespacemcica__mod.xhtml#a4e8939b91fb97c31bff276dacf174ab0" title="number of cloudy sub-columns in each profile ">clw_sub_full</a>(n_profile,cloud_top:n_layer,<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a>))</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment">!        ALLOCATE(cic_sub_full(n_profile,cloud_top:n_layer,tot_subcol_gen))</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keyword">ALLOCATE</span>(temp_rand(n_profile,1,<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a>))</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="keyword">ALLOCATE</span>(<a class="code" href="namespacemcica__mod.xhtml#aeb1c5a522cc1872bce6d121529c2c183" title="The first subcolumn each band sees, required to prevent each band seeing only the same first few colu...">frac_cloudy_full</a>(n_profile))</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <span class="keyword">ALLOCATE</span>(<a class="code" href="namespacemcica__mod.xhtml#ad59a90eeb512d54704ff183035248f7c" title="fraction of the profile which is cloudy ">ncldy</a>(n_profile))</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 0</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        first_row=0</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        last_row=rows-1</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;          <span class="keywordflow">IF</span> (model_domain.eq.mt_global) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keywordflow">IF</span> (at_extremity(<a class="code" href="namespaceum__parparams.xhtml#a055cccbf23dd97e54f86b7be2fbfccb3">psouth</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;              first_row=1</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;              <span class="keywordflow">DO</span> i=0, row_length-1</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> + 1</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                list(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=1</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="keywordflow">              END DO</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            <span class="keywordflow">IF</span> (at_extremity(<a class="code" href="namespaceum__parparams.xhtml#a575a86c6ed199d617f169b0bbd20ec88">pnorth</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;              last_row = rows-2</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! vatpoles</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>=first_row, last_row</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;          <span class="keywordflow">DO</span> i=0, row_length-1</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> + 1</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            list(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = (g_datastart(2,me)+<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>-1)*global_row_length         &amp;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                       + g_datastart(1,me)+i</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;          <span class="keywordflow">IF</span> ((model_domain.eq.mt_global).AND.(at_extremity(<a class="code" href="namespaceum__parparams.xhtml#a575a86c6ed199d617f169b0bbd20ec88">pnorth</a>))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            <span class="keywordflow">DO</span> i=0, row_length-1</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;              <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> + 1</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;              list(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=(global_rows-1)*global_row_length+1</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! vatpoles</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        random_dummy_init=(abs(val_year-2000)*366*24*60*60)             &amp;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;          +(val_day_number*24*60*60)+(val_hour*60*60)                   &amp;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;          +(val_minute*60)+val_second</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            <span class="keywordflow">DO</span> i=1,n_profile</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;          random_dummy(i)=random_dummy_init+list(i)</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;   <span class="comment">! The initial values of random dummy are successive integers, which! result in random numbers that are close to each other.This first! call to mcica_rand_no is to ensure that the seed for each! profile is itself random.</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespacerand__no__mcica.xhtml#a1fb04f20ff7dcb74d11b1409b7deafb5">mcica_rand_no</a>(random_dummy, temp_rand,n_profile            &amp;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;          ,<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a>)</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <span class="keyword">ALLOCATE</span>(<a class="code" href="namespacemcica__mod.xhtml#a4d00f914e1f79a04290b4d535ddfafcf" title="Each k-term &quot;sees&quot; an optimal number of sub-columns. ">rand_seed_x</a>(n_profile,<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a>))</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="keywordflow">DO</span> i=1,<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespacerand__no__mcica.xhtml#a1fb04f20ff7dcb74d11b1409b7deafb5">mcica_rand_no</a>(random_dummy, temp_rand,n_profile,1)</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;          <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>=1, n_profile</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            <a class="code" href="namespacemcica__mod.xhtml#a4d00f914e1f79a04290b4d535ddfafcf" title="Each k-term &quot;sees&quot; an optimal number of sub-columns. ">rand_seed_x</a>(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,i)=random_dummy(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;             <span class="keyword">ALLOCATE</span>(<a class="code" href="namespacemcica__mod.xhtml#a519008806184f9a0cb5ea5befd495a91" title="global array of random numbers for first level in cloud generator ">rand_seed_y</a>(n_profile,<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a>))</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        <span class="keywordflow">DO</span> i=1,<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespacerand__no__mcica.xhtml#a1fb04f20ff7dcb74d11b1409b7deafb5">mcica_rand_no</a>(random_dummy, temp_rand,n_profile,1)</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;          <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>=1, n_profile</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            <a class="code" href="namespacemcica__mod.xhtml#a519008806184f9a0cb5ea5befd495a91" title="global array of random numbers for first level in cloud generator ">rand_seed_y</a>(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,i)=random_dummy(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">! Zero out fields</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <span class="keywordflow">DO</span> i = 1,n_profile</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;          <a class="code" href="namespacemcica__mod.xhtml#ad59a90eeb512d54704ff183035248f7c" title="fraction of the profile which is cloudy ">ncldy</a>(i)  = 0</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, <a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;          <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a> = cloud_top, n_layer</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            <span class="keywordflow">DO</span> i = 1, n_profile</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment">!              cic_sub_full(i,j,k) = 0.0</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;              <a class="code" href="namespacemcica__mod.xhtml#a4e8939b91fb97c31bff276dacf174ab0" title="number of cloudy sub-columns in each profile ">clw_sub_full</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 0.0</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">! Set the overlap used in the cloud generator</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        <a class="code" href="namespacemcica__mod.xhtml#a7ca28a7821c7aee3b97cdfc2f1dccd0a" title="Plane-parallel homogeneous flag. ">ioverlap</a>=<a class="code" href="namespacesw__control__struct.xhtml#a528a2b88d2af0c01436ddcb22c82e9fa">sw_control</a>(1)%i_overlap</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        <span class="keyword">CALL </span><a class="code" href="cld__generator__mod_8f90.xhtml#a6ae3cac3e56976f034cc7cef28e29797">cld_generator</a>(n_layer, cloud_top, n_profile               &amp;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        , <a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a>, dp_corr_cloud, dp_corr_cond, sigma_qcw       &amp;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        , w_cloud, c_cloud, c_ratio, ls_ratio, p, 1, n_profile)</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(<a class="code" href="namespacemcica__mod.xhtml#a519008806184f9a0cb5ea5befd495a91" title="global array of random numbers for first level in cloud generator ">rand_seed_y</a>)) <span class="keyword">DEALLOCATE</span>(<a class="code" href="namespacemcica__mod.xhtml#a519008806184f9a0cb5ea5befd495a91" title="global array of random numbers for first level in cloud generator ">rand_seed_y</a>)            <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(<a class="code" href="namespacemcica__mod.xhtml#a4d00f914e1f79a04290b4d535ddfafcf" title="Each k-term &quot;sees&quot; an optimal number of sub-columns. ">rand_seed_x</a>)) <span class="keyword">DEALLOCATE</span>(<a class="code" href="namespacemcica__mod.xhtml#a4d00f914e1f79a04290b4d535ddfafcf" title="Each k-term &quot;sees&quot; an optimal number of sub-columns. ">rand_seed_x</a>)            <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(temp_rand)) <span class="keyword">DEALLOCATE</span>(temp_rand)    </div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        <span class="keywordflow">IF</span> (rad_mcica_sampling /= <a class="code" href="namespacemcica__mod.xhtml#adf6383068b4406dbc914b9744d3e121e" title="SW order of sub-columns. ">ip_mcica_full_sampling</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;          <span class="keywordflow">DO</span> i=1,n_profile</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            <a class="code" href="namespacemcica__mod.xhtml#aeb1c5a522cc1872bce6d121529c2c183" title="The first subcolumn each band sees, required to prevent each band seeing only the same first few colu...">frac_cloudy_full</a>(i)=<span class="keywordtype">REAL</span>(<a class="code" href="namespacemcica__mod.xhtml#ad59a90eeb512d54704ff183035248f7c" title="fraction of the profile which is cloudy ">ncldy</a>(i))/<span class="keywordtype">REAL</span>(<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a>)</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (rad_mcica_sampling == <a class="code" href="namespacemcica__mod.xhtml#adf6383068b4406dbc914b9744d3e121e" title="SW order of sub-columns. ">ip_mcica_full_sampling</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">! In this case we treat the clear sub-columns as cloudy sub-columns</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="comment">! so the clear-sky fraction is implicit in the summing of the! &quot;cloudy&quot; sub-columns</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;          <span class="keywordflow">DO</span> i=1,n_profile</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            <a class="code" href="namespacemcica__mod.xhtml#aeb1c5a522cc1872bce6d121529c2c183" title="The first subcolumn each band sees, required to prevent each band seeing only the same first few colu...">frac_cloudy_full</a>(i)=1.0</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        <span class="keywordflow">IF</span> (rad_mcica_sampling /= <a class="code" href="namespacemcica__mod.xhtml#adf6383068b4406dbc914b9744d3e121e" title="SW order of sub-columns. ">ip_mcica_full_sampling</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment">! For the case where are less cloudy subcolumns than required,! copy cloudy values to ensure enough cloudy subcolumns</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;          <span class="keywordflow">DO</span> i=1, n_profile</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespacemcica__mod.xhtml#ad59a90eeb512d54704ff183035248f7c" title="fraction of the profile which is cloudy ">ncldy</a>(i) &lt; <a class="code" href="namespacemcica__mod.xhtml#ade22439662d1464c606b53429df1f3bd" title="Value of condensate content for each sub-column. ">subcol_need</a> .AND. <a class="code" href="namespacemcica__mod.xhtml#ad59a90eeb512d54704ff183035248f7c" title="fraction of the profile which is cloudy ">ncldy</a>(i) &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;              <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>=<a class="code" href="namespacemcica__mod.xhtml#ad59a90eeb512d54704ff183035248f7c" title="fraction of the profile which is cloudy ">ncldy</a>(i)+1,min(<a class="code" href="namespacemcica__mod.xhtml#ade22439662d1464c606b53429df1f3bd" title="Value of condensate content for each sub-column. ">subcol_need</a>,<a class="code" href="namespacemcica__mod.xhtml#a596706b7b34710a8477adc25a528aa81" title="Overlap flag. ">tot_subcol_gen</a>)</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=cloud_top,n_layer</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                  l=<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>-<a class="code" href="namespacemcica__mod.xhtml#ad59a90eeb512d54704ff183035248f7c" title="fraction of the profile which is cloudy ">ncldy</a>(i)</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                  <a class="code" href="namespacemcica__mod.xhtml#a4e8939b91fb97c31bff276dacf174ab0" title="number of cloudy sub-columns in each profile ">clw_sub_full</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=<a class="code" href="namespacemcica__mod.xhtml#a4e8939b91fb97c31bff276dacf174ab0" title="number of cloudy sub-columns in each profile ">clw_sub_full</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>,l)</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment">!                  cic_sub_full(i,k,j)=cic_sub_full(i,k,l)</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="keywordflow">                END DO</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="keywordflow">              END DO</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="keyword">      END </span>if<span class="comment">! l_rad_step_prog</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    else<span class="comment">! If not using McICA in either SW or LW</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;      l_layer_clear=.true.</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>=n_wet_layer,1,-1</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="keywordflow">DO</span> i=1,n_profile</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;          l_layer_clear = l_layer_clear .AND.                             &amp;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;            (w_cloud1(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) &lt;= 0.0e+00) .AND. (cct(i) &lt; <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>-1)</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="keywordflow">IF</span> (.NOT.l_layer_clear) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;          cloud_levels = <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;          <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="preprocessor">#if ! defined(SCMA)</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="preprocessor"></span><span class="comment">!     To obtain reproducible results independent of the</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment">!     decomposition of the domain used on an MPP machine a global</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment">!     value for the topmost cloudy layer is used.</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;      <span class="keyword">CALL </span>gc_imax(1, n_proc, info, cloud_levels)</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="keyword">    END </span>if<span class="comment">! not mcica</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="keyword">  END </span>if<span class="comment">! l_rad_step_prog .OR. l_rad_step_diag</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;OPEN_CLOUD_GEN&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="keyword">END SUBROUTINE </span>open_cloud_gen</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
