<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/pptoanc/dataw.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_fcec092a282082ccd7dedb2505cd9407.xhtml">pptoanc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">dataw.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="dataw_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">      subroutine </span><a class="code" href="dataw_8f90.xhtml#a102d2ec87977c864ff04cc8a0098d633" title="Subroutine interface: Subroutine interface: ">dataw</a>(rows,columns,fieldsize,nlevels,levn,len_extra,   &amp;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;     &amp; fieldn,len1_lookup_all,lookup_all,fixhd,                         &amp;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;     &amp; len_cfi, cfi1, cfi2, cfi3, fldsizelev,ftin1,ftout,               &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;     &amp; tracer_grid,add_wrap_pts,ibm_to_cray,compress,rmdi_input,wave,   &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;     &amp; lsmask, l_bit_32,                                                &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;     &amp; icode)</div><div class="line"><a name="l00009"></a><span class="lineno"><a class="line" href="dataw_8f90.xhtml#a102d2ec87977c864ff04cc8a0098d633">    9</a></span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;        <span class="keywordtype">USE </span><a class="code" href="namespaceum__types.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">um_types</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceum__types.xhtml#a9470dbfbe40a87f88b6cde47783187d1">real32</a></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;        <span class="keywordtype">USE </span><a class="code" href="namespacemask__compression.xhtml" title="This file belongs in section: Packing Tools. ">mask_compression</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemask__compression.xhtml#acb339fbf0c2985509169d255246c5fd2" title="Subroutine Compress_To_Mask -!&gt; Purpose: Selects land points values from input horizontal field!&gt; and...">compress_to_mask</a></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;        <span class="keywordtype">USE </span><a class="code" href="namespacedecomp__db.xhtml" title="This file belongs in section: MPP. ">decomp_db</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfacedecomp__db_1_1decompose.xhtml">decompose</a></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;        <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;            <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;            <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;        <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;       </div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">! Description: This writes the data out using WRITFLD.</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordtype">integer</span> rows       <span class="comment">! number of rows in input pp field</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">integer</span> columns    <span class="comment">! number of columns in input pp field</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <span class="keywordtype">integer</span> fieldsize  <span class="comment">! number of points in output anc. field</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <span class="keywordtype">integer</span> nlevels    <span class="comment">! number of levels</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <span class="keywordtype">integer</span> levn       <span class="comment">! current level number</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      <span class="keywordtype">integer</span> len_extra</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <span class="keywordtype">integer</span> ftin1</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <span class="keywordtype">integer</span> ftout</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordtype">integer</span> fieldn</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordtype">integer</span> len1_lookup_all</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordtype">integer</span> icode          <span class="comment">! error status</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <span class="keywordtype">real</span> rmdi_input</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      <span class="keywordtype">logical</span> tracer_grid</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      <span class="keywordtype">logical</span> add_wrap_pts</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <span class="keywordtype">logical</span> ibm_to_cray</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <span class="keywordtype">logical</span> compress</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keywordtype">logical</span> l_bit_32</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <span class="keywordtype">integer</span> lookup_all(len1_lookup_all,*)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      <span class="keywordtype">integer</span> fixhd(*)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      <span class="keywordtype">integer</span> len_cfi(3)         <span class="comment">! dimensions of arrays</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      <span class="keywordtype">integer</span> cfi1(len_cfi(1))   <span class="comment">!   compressed</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <span class="keywordtype">integer</span> cfi2(len_cfi(2))   <span class="comment">!   field index</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordtype">integer</span> cfi3(len_cfi(3))   <span class="comment">!   arrays</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordtype">integer</span> fldsizelev(nlevels)   <span class="comment">! size of output field on each level</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      <span class="keywordtype">logical</span> lsmask(rows*columns)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <span class="keywordtype">real(KIND=real32)</span> datain(rows*columns)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      <span class="keywordtype">real</span> data_field(rows*columns)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      <span class="keywordtype">real</span> field_wrap(columns+2,rows)</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordtype">real</span> field_to_write(fieldsize)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="keywordtype">real</span> extra_data(len_extra+1)  <span class="comment">! space for extra data</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordtype">integer</span> i</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <span class="keywordtype">integer</span> j,istart,iend,ii</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      <span class="keywordtype">integer</span> field_type          <span class="comment">! 0 for tracers; 1 for velocities</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordtype">integer</span> no_cmp   <span class="comment">! # of pts in full compressed field (all levels)</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keywordtype">integer</span> no_rows_m   <span class="comment">! number of rows east-west on model grid</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="keywordtype">integer</span> n_sea_points</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="keywordtype">logical</span> LTimer      <span class="comment">! timer switch (set to false)</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <span class="keywordtype">logical</span> cyclic_grid <span class="comment">! T =&gt; input field to OA_PACK has</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                          <span class="comment">!      overlap points</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keywordtype">logical</span> wave <span class="comment">! creating wave dump</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">CHARACTER(LEN=256)</span> cmessage      <span class="comment">! error message</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;     &amp;  tot_levels        <span class="comment">! IN  :total number of levels</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="keywordtype">REAL</span> P1,P2</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="keywordtype">LOGICAL</span> LNER</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      lner(p1,p2) = ((abs(p1-p2))  &lt;   (1.e-6*abs(p1+p2)))</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keyword">Call </span><a class="code" href="readdata_8f90.xhtml#a852f47bdfada79d62b0aba49f2d1f8c1" title="Subroutine interface: ">readdata</a>( rows, columns, ftin1, ibm_to_cray, len_extra,      &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;     &amp;               l_bit_32, .false., data_field, extra_data )</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">!L 1.1 Convert real missing data indicators</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="keywordflow">if</span> ( rmdi_input  /=  <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a>) <span class="keywordflow">then</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        i=0</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">do</span> j = 1,rows*columns</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;          <span class="keywordflow">if</span> ( lner(data_field(j), rmdi_input) ) <span class="keywordflow">then</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">!         if ( rmdi_input  &gt;   0.0 ) then</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;             data_field(j) = <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;             i=i+1</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordflow">          end if</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keywordflow">        end do</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">if</span> (i &gt;  0) <span class="keywordflow">then</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) i,<span class="stringliteral">&#39; RMDI converted from &#39;</span>,rmdi_input,<span class="stringliteral">&#39; to &#39;</span>,<a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dataw&#39;</span>)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keywordflow">        endif</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">!L 2. Add in wrap points when add_wrap_pts=t</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keywordflow">if</span> (add_wrap_pts) <span class="keywordflow">then</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">do</span> j=1,rows</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;          <span class="keywordflow">do</span> i=1,columns</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            field_wrap(i,j)=data_field(i+(j-1)*columns)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">do</span> j=1,rows</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;          field_wrap(columns+1,j)=field_wrap(1,j)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;          field_wrap(columns+2,j)=field_wrap(2,j)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">!L 3. Pack data using compression indices when compress=t</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;       <span class="keywordflow">if</span> (compress) <span class="keywordflow">then</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;         <span class="keywordflow">if</span>(.not.wave) <span class="keywordflow">then</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;           <span class="keywordflow">if</span> (tracer_grid) <span class="keywordflow">then</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            field_type = 0</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            no_rows_m = rows</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;           <span class="keywordflow">else</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            field_type = 1</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            no_rows_m = rows + 1</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keywordflow">           end if</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;           no_cmp = 0</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;           <span class="keywordflow">do</span> i = 1, nlevels   <span class="comment">! do not use levn in this loop</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;             no_cmp = no_cmp + fldsizelev(i)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keywordflow">           end do</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;           cyclic_grid = .true.   <span class="comment">! input pp fields do not</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                   <span class="comment">! have wrap-points</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;           ltimer = .false.</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;           icode  = 0</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">! DEPENDS ON: oa_pack</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;           <span class="keyword">call </span><a class="code" href="oa__pack_8f90.xhtml#acd2e5462081ffe3753e2d4cc19b86483" title="LL Routines: OA_PACK, OA_UNPACK and OA_LEV_CMP. ">oa_pack</a>(icode, cmessage, ltimer,                        &amp;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;     &amp;       no_rows_m, columns+2, nlevels, len_cfi(1), fieldsize,      &amp;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;     &amp;       cfi1, cfi2, cfi3, no_cmp, <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a>,                            &amp;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;     &amp;       levn, field_type, cyclic_grid, field_wrap,                 &amp;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;     &amp;       field_to_write)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;           <span class="keywordflow">if</span> (icode  &gt;   0) <span class="keywordflow">then</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;             <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;error from OA_PACK:&#39;</span>, cmessage</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;             <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dataw&#39;</span>)</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;             <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keywordflow">           end if</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;         <span class="keywordflow">else</span>       <span class="comment">! add_wrap .and. compress .and. wave</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">! compress using SLMASK for wave model - use SEA POINTS set to TRUE</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">! a value for n-SEA-points is returned from this subroutine</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">!!!!! This needs attention</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespacemask__compression.xhtml#acb339fbf0c2985509169d255246c5fd2" title="Subroutine Compress_To_Mask -!&gt; Purpose: Selects land points values from input horizontal field!&gt; and...">compress_to_mask</a>(data_field,field_to_write,lsmask,       &amp;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                rows*columns,n_sea_points)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;after to land points no_cmp is &#39;</span>,n_sea_points</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dataw&#39;</span>)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            no_cmp=n_sea_points</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordflow">         endif</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">else</span>      <span class="comment">! add_wrap .and. .not. compress</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;          <span class="keywordflow">do</span> j=1,rows</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">do</span> i=1,columns+2</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;              field_to_write(i+(j-1)*(columns+2) ) =  field_wrap(i,j)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordflow">        endif</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      <span class="keywordflow">else</span>         <span class="comment">! .not. add_wrap</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">!L 3.1 Pack data using compression indices when compress=t</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">if</span> (compress) <span class="keywordflow">then</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;          <span class="keywordflow">if</span>(.not. wave) <span class="keywordflow">then</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;           <span class="keywordflow">if</span> (tracer_grid) <span class="keywordflow">then</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            field_type = 0</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            no_rows_m = rows</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;           <span class="keywordflow">else</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            field_type = 1</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            no_rows_m = rows + 1</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keywordflow">           end if</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;           no_cmp = 0</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;           <span class="keywordflow">do</span> i = 1, nlevels   <span class="comment">! do not use levn in this loop</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;             no_cmp = no_cmp + fldsizelev(i)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordflow">           end do</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;           cyclic_grid = .false.   <span class="comment">! input pp fields do not</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                   <span class="comment">! have wrap-points</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;           ltimer = .false.</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;           icode  = 0</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">! DEPENDS ON: oa_pack</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;           <span class="keyword">call </span><a class="code" href="oa__pack_8f90.xhtml#acd2e5462081ffe3753e2d4cc19b86483" title="LL Routines: OA_PACK, OA_UNPACK and OA_LEV_CMP. ">oa_pack</a>(icode, cmessage, ltimer,                        &amp;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;     &amp;       no_rows_m, columns, nlevels, len_cfi(1), fieldsize,        &amp;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;     &amp;       cfi1, cfi2, cfi3, no_cmp, <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a>,                            &amp;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;     &amp;       levn, field_type, cyclic_grid, data_field, field_to_write)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;           <span class="keywordflow">if</span> (icode  &gt;   0) <span class="keywordflow">then</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;             <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;error from OA_PACK:&#39;</span>, cmessage</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;             <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dataw&#39;</span>)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;             <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keywordflow">           end if</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;          <span class="keywordflow">else</span>         <span class="comment">! .not. add_wrap .and. compress .and. wave</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">! compress using SLMASK for wave model - use SEA POINTS set to TRUE</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">! a value for n-SEA-points is returned from this subroutine</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespacemask__compression.xhtml#acb339fbf0c2985509169d255246c5fd2" title="Subroutine Compress_To_Mask -!&gt; Purpose: Selects land points values from input horizontal field!&gt; and...">compress_to_mask</a>(data_field,field_to_write,lsmask,       &amp;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                rows*columns,n_sea_points)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;after to land points no_cmp is &#39;</span>,n_sea_points</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dataw&#39;</span>)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            no_cmp=n_sea_points</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keywordflow">          endif</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;         <span class="keywordflow">else</span>         <span class="comment">! .not. add_wrap .and. .not. compress</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;          <span class="keywordflow">do</span> j = 1, fieldsize</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            field_to_write(j) =  data_field(j)</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keywordflow">          end do</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordflow">         endif</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">!L 5. Output data using WRITFLDS</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">!C TEMP print out data LSMASK for wave dump</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      <span class="keywordflow">if</span>(lookup_all(23,fieldn) == 38) <span class="keywordflow">then</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dataw&#39;</span>)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;before writing data array&#39;</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dataw&#39;</span>)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        istart=1</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        iend=istart+columns-1</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordflow">do</span> i=rows,1,-1</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) (field_to_write(ii),ii=istart,iend)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dataw&#39;</span>)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;          istart=istart+columns</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;          iend=iend+columns</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keywordflow">        enddo</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfacedecomp__db_1_1decompose.xhtml">decompose</a>(columns, rows,0,0,1)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">! DEPENDS ON: writflds</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;      <span class="keyword">CALL </span><a class="code" href="writflds_8f90.xhtml#a7f2868de1c8efeacaabebc4d0683d680" title="Write out fields to a UM format file. ">writflds</a>(ftout,1,fieldn,lookup_all,                          &amp;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;     &amp;              len1_lookup_all,field_to_write,fieldsize,           &amp;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;     &amp;              fixhd,                                              &amp;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;     &amp;              icode,cmessage )</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;      <span class="keywordflow">if</span> (icode  &gt;   0) <span class="keywordflow">then</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;error from WRITFLDS:&#39;</span>, cmessage</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dataw&#39;</span>)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;9999  <span class="keywordflow">continue</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;      <span class="keywordflow">return</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="dataw_8f90.xhtml#a102d2ec87977c864ff04cc8a0098d633" title="Subroutine interface: Subroutine interface: ">dataw</a></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment">! Purpose: Works out the lookup tables for the dump/ancillary    *</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">!           file header from the pp fields                       *</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">! Subroutine interface:</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">!+ Skip namelists in f90 compiled UM code removing need for</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">!+ assign -f 77 g:sf  in script</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">! Subroutine Interface:</span></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
