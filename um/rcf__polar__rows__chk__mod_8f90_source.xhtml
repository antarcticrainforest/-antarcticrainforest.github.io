<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/qxreconf/rcf_polar_rows_chk_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_448e69cd1e368218ef2123538d498dc2.xhtml">qxreconf</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">rcf_polar_rows_chk_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="rcf__polar__rows__chk__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno"><a class="line" href="namespacercf__polar__rows__chk__mod.xhtml">    2</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacercf__polar__rows__chk__mod.xhtml">rcf_polar_rows_chk_mod</a></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacercf__polar__rows__chk__mod.xhtml#a6b497da44b1031ad61910c382465ba6f" title="Subroutine Rcf_Polar_Rows_Chk. ">rcf_polar_rows_chk</a>( fields, field_count, grid, decomp, hdr, &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                               local_lsm, data_source )</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="namespacercf__polar__rows__chk__mod.xhtml#a6b497da44b1031ad61910c382465ba6f">   28</a></span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacercf__field__type__mod.xhtml" title="Defines the field_type data-type Defines the field_type data-type. ">rcf_field_type_mod</a><span class="keywordtype">, ONLY</span>:       &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacercf__global__to__local__mod.xhtml" title="Parallel RCF: Transform from global to local co-ordinates: Parallel RCF: Transform from global to loc...">rcf_global_to_local_mod</a><span class="keywordtype">, ONLY</span>:  &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="namespacercf__global__to__local__mod.xhtml#a77b8a85bffb7822e380fae0f558091d1">rcf_get_fld_type</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacercf__data__source__mod.xhtml" title="Definitions for data-type defining source of a field Definitions for data-type defining source of a f...">rcf_data_source_mod</a><span class="keywordtype">, ONLY</span>:      &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="structrcf__data__source__mod_1_1data__source__type.xhtml">data_source_type</a>,               &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="namespacercf__data__source__mod.xhtml#aed20a99b437b95600fdeec4087c0ebe6">ancillary_file</a></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">USE </span>um_parvars<span class="keywordtype">, ONLY</span>:          &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    fld_type_p,                     &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    atnorth, atsouth,               &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    gc_proc_row_group,              &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    nproc_x, nproc</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span>:              &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacercf__read__field__mod.xhtml" title="Wrapper for the READFLDS routine. Wrapper for the READFLDS routine. ">rcf_read_field_mod</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="namespacercf__read__field__mod.xhtml#a31084c176946b7db5991b2cb66973198" title="Subroutine Rcf_Read_Field - read in a field. ">rcf_read_field</a></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacercf__alloc__field__mod.xhtml" title="Module to allocate and deallocate space for field data Module to allocate and deallocate space for fi...">rcf_alloc_field_mod</a><span class="keywordtype">, ONLY</span> :     &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a>,                &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacercf__umhead__mod.xhtml" title="Data module defining um_header_type Data module defining um_header_type. ">rcf_umhead_mod</a><span class="keywordtype">, ONLY</span> :          &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="structrcf__umhead__mod_1_1um__header__type.xhtml" title="Global Type Definitions: ">um_header_type</a></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacercf__grid__type__mod.xhtml" title="Module to define a grid data type. Module to define a grid data type. ">rcf_grid_type_mod</a><span class="keywordtype">, ONLY</span>:        &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="structrcf__grid__type__mod_1_1grid__type.xhtml" title="Defines the grid_type data type. ">grid_type</a></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacemask__compression.xhtml" title="This file belongs in section: Packing Tools. ">mask_compression</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemask__compression.xhtml#a52de765c26bfe8598cb6f6598e168940">expand_from_mask</a></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecppxref__mod.xhtml" title="Code Owner: See Unified Model Code Owners HTML page. ">cppxref_mod</a><span class="keywordtype">, ONLY</span> :             &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#ac9d6e3c5870b390dc64ded5f768c3295">ppx_atm_compressed</a>,             &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    ppx_type_real,                  &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#ac7a51e48487fc3f069d300616a516903">ppx_type_int</a>,                   &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#a38e46a579ddd1f4c199d507e0ca92476">ppx_type_log</a></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keywordtype">TYPE</span>( <a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a> ), <span class="keywordtype">POINTER</span>           :: fields(:)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>                   :: field_count</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;type(<a class="code" href="structrcf__grid__type__mod_1_1grid__type.xhtml" title="Defines the grid_type data type. ">grid_type</a>), <span class="keywordtype">TARGET</span>, <span class="keywordtype">INTENT(IN)</span>  :: grid</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keywordtype">TYPE</span>( <a class="code" href="structrcf__umhead__mod_1_1um__header__type.xhtml" title="Global Type Definitions: ">um_header_type</a> ), <span class="keywordtype">INTENT(IN)</span>    :: hdr</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>                   :: decomp</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">TARGET</span>                       :: local_lsm(:)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keywordtype">TYPE</span>( <a class="code" href="structrcf__data__source__mod_1_1data__source__type.xhtml">data_source_type</a> ), <span class="keywordtype">POINTER</span>     :: data_source(:)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">INTEGER</span>                       :: i               <span class="comment">! looper (field)</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">INTEGER</span>                       :: j               <span class="comment">! looper (level)</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keywordtype">INTEGER</span>                       :: k               <span class="comment">! looper (column)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keywordtype">INTEGER</span>                       :: pole            <span class="comment">! looper (pole)</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordtype">INTEGER</span>                       :: fld_type        <span class="comment">! field on P, U or V grid?</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keywordtype">INTEGER</span>                       :: info            <span class="comment">! error return from GCOM calls</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">INTEGER</span>                       :: ErrorStatus     <span class="comment">! error reporting</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">INTEGER</span>                       :: faults          <span class="comment">! flag for non-uniform rows</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordtype">INTEGER</span>                       :: row_start(1:2)  <span class="comment">! start index of searchable row</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keywordtype">INTEGER</span>                       :: row_end(1:2)    <span class="comment">! end index of searchable row</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordtype">INTEGER</span>                       :: counter         <span class="comment">! index counter</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>             :: row_data(:)  <span class="comment">! temp store for polar row data</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">REAL</span>                          :: polar_max    <span class="comment">! maximum along polar row</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keywordtype">REAL</span>                          :: polar_min    <span class="comment">! minimum along polar row</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keywordtype">REAL</span>                          :: MDI          <span class="comment">! generic Missing Data Indicator</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordtype">CHARACTER (LEN=20)</span>, <span class="keywordtype">PARAMETER</span> :: RoutineName = <span class="stringliteral">&#39;Rcf_Check_Polar_Rows&#39;</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keywordtype">CHARACTER (LEN=80)</span>            :: Cmessage</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">POINTER</span>    :: <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a>        <span class="comment">! temp structure for each level</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">TARGET</span>     :: field_decmp  <span class="comment">! for uncompressed fields</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">! Initialise faults (assume everything is uniform)</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;faults = 0</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordflow">DO</span> i = 1, field_count               <span class="comment">! loop over all fields</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">! Only need to check ancillaries</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! Everything else should be an invalid dump or already interpolated</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordflow">IF</span> ( data_source( i ) % source /= <a class="code" href="namespacercf__data__source__mod.xhtml#aed20a99b437b95600fdeec4087c0ebe6">ancillary_file</a> ) cycle</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  fld_type = <a class="code" href="namespacercf__global__to__local__mod.xhtml#a77b8a85bffb7822e380fae0f558091d1">rcf_get_fld_type</a>( fields(i) % stashmaster % grid_type )</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">! Only want to check fields lying on the P grid</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keywordflow">IF</span> ( fld_type == fld_type_p ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">! Get field data</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> =&gt; fields(i)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a>( <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> )</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacercf__read__field__mod.xhtml#a31084c176946b7db5991b2cb66973198" title="Subroutine Rcf_Read_Field - read in a field. ">rcf_read_field</a>( <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a>, hdr, decomp )</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">! Compressed data needs unpacking first:</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % stashmaster % grid_type == <a class="code" href="namespacecppxref__mod.xhtml#ac9d6e3c5870b390dc64ded5f768c3295">ppx_atm_compressed</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      field_decmp % levels          = <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % levels</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      field_decmp % rows            = grid % loc_p_rows</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      field_decmp % row_len         = grid % loc_p_row_length</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      field_decmp % level_size      = field_decmp % rows * field_decmp % row_len</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      field_decmp % glob_rows       = grid % glob_p_rows</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      field_decmp % glob_row_len    = grid % glob_p_row_length</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      field_decmp % glob_level_size = field_decmp % glob_rows *                &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                                       field_decmp % glob_row_len</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      field_decmp % stashmaster =&gt; <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % stashmaster</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a>( field_decmp )</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      <span class="keywordflow">DO</span> j = 1, <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % levels</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacemask__compression.xhtml#a52de765c26bfe8598cb6f6598e168940">expand_from_mask</a>(field_decmp % data(:,j),                         &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % data(:, j),                                                &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            local_lsm, field_decmp % level_size,                               &amp;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % level_size )</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> =&gt; field_decmp</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">! Grid data required for searching:</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    row_start(1) = 1</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    row_end(1)   = <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % row_len</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    row_start(2) = <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % level_size - <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % row_len + 1</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    row_end(2)   = <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % level_size</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keyword">ALLOCATE</span>( row_data( <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % row_len ) )</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">! Check data is of a type suitable for testing</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % stashmaster % data_type == ppx_type_real .OR.                  &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % stashmaster % data_type == <a class="code" href="namespacecppxref__mod.xhtml#ac7a51e48487fc3f069d300616a516903">ppx_type_int</a>  .OR.                  &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % stashmaster % data_type == <a class="code" href="namespacecppxref__mod.xhtml#a38e46a579ddd1f4c199d507e0ca92476">ppx_type_log</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keywordflow">DO</span> j = 1, <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % levels   <span class="comment">! iterate across levels</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">DO</span> pole = 1, 2    <span class="comment">! loop over poles</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">! Set up an array containing the row data, whatever type it is:</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;          <span class="keywordflow">SELECT CASE</span> ( <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % stashmaster % data_type )</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;          <span class="keywordflow">CASE</span> (ppx_type_real)                  <span class="comment">! real fields</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            row_data(1:<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % row_len) =                                      &amp;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;               <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % data(row_start(pole):row_end(pole), j)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            mdi = rmdi</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;          <span class="keywordflow">CASE</span> (<a class="code" href="namespacecppxref__mod.xhtml#ac7a51e48487fc3f069d300616a516903">ppx_type_int</a>)                   <span class="comment">! integer fields</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            row_data(1:<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % row_len) =                                      &amp;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;               <span class="keywordtype">REAL( field % data_int(row_start(pole):row_end(pole), j)</span> )</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            mdi = <span class="keywordtype">REAL</span>(imdi)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">! Logicals: set values individually, true = 1, false = 0</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;          <span class="keywordflow">CASE</span> (<a class="code" href="namespacecppxref__mod.xhtml#a38e46a579ddd1f4c199d507e0ca92476">ppx_type_log</a>)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            counter = 1</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="keywordflow">DO</span> k = row_start(pole), row_end(pole)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;              <span class="keywordflow">IF</span> ( <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % data_log(k, j) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                row_data(counter) = 1.0</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                row_data(counter) = 0.0</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;              counter = counter + 1</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            mdi = -1.0           <span class="comment">! Dummy value</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keywordflow">          END SELECT</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">! Begin checking polar rows</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;          <span class="keywordflow">IF</span> ( (pole == 1 .AND. atsouth) .OR. (pole == 2 .AND. atnorth) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">! Initialise max/min (in case all values are MDIs)</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            polar_max = 0.0</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            polar_min = 0.0</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">! Search row data for maxima:</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % row_len &gt; 0) <span class="keywordflow">THEN</span>  <span class="comment">! avoid zero-length arrays</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;              polar_max = maxval(row_data, <a class="code" href="atm__lsm_8h.xhtml#a553a9f22845d6a8028979bc57d16c4ed">mask</a> = row_data /= mdi)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;              polar_min = minval(row_data, <a class="code" href="atm__lsm_8h.xhtml#a553a9f22845d6a8028979bc57d16c4ed">mask</a> = row_data /= mdi)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">! Find maxima across all processors along row:</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keyword">CALL </span>gcg_rmax(1, gc_proc_row_group, info, polar_max)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keyword">CALL </span>gcg_rmin(1, gc_proc_row_group, info, polar_min)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">! If max &gt; min then row is not uniform; flag up the error</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keywordflow">IF</span> ( polar_max &gt; polar_min )        &amp;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;               faults = 1</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordflow">          END IF</span>          <span class="comment">! end of polar row checking</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">! If found, ensure all PEs are aware of a fault          CALL gc_imax(1, nproc, info, faults)</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordflow">        END DO</span>     <span class="comment">! end loop over poles</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="keywordflow">      END DO</span>     <span class="comment">! end of loop across levels</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">! Not real, int or log data</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      errorstatus = -10</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      cmessage = <span class="stringliteral">&#39;Unsupported datatype&#39;</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordflow">IF</span> ( faults &gt; 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      errorstatus = 20</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      <span class="keyword">WRITE</span>(cmessage, <span class="stringliteral">&#39;(A, I3, A, I4)&#39;</span>)                                     &amp;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;       <span class="stringliteral">&#39;Non-uniform polar row in output dump: STASH section &#39;</span>,              &amp;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % stashmaster % section, <span class="stringliteral">&#39; item &#39;</span>, <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % stashmaster % item</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keyword">DEALLOCATE</span>( row_data )</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> % stashmaster % grid_type == <a class="code" href="namespacecppxref__mod.xhtml#ac9d6e3c5870b390dc64ded5f768c3295">ppx_atm_compressed</a>)                &amp;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a>( field_decmp )</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a>( <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a> )</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keywordflow">  END IF</span>     <span class="comment">! end test over P grid</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keywordflow">END DO</span>     <span class="comment">! end loop over fields</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespacercf__polar__rows__chk__mod.xhtml#a6b497da44b1031ad61910c382465ba6f" title="Subroutine Rcf_Polar_Rows_Chk. ">rcf_polar_rows_chk</a></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacercf__polar__rows__chk__mod.xhtml">rcf_polar_rows_chk_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
