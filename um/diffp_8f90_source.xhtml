<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/fieldcalc/diffp.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_925d6107435631a137c191c3b43797c1.xhtml">fieldcalc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">diffp.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="diffp_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="diffp_8f90.xhtml#aad082f5b8769acd0106487c49813d25f" title="Routines to calculate Clear Air Turbulence diagnostics. ">diffp</a>( NumLevs,      &amp;  ! in</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;                  PRef,         &amp;  ! in</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;                  FFields,      &amp;  ! in</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;                  PFields,      &amp;  ! in</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                  dFdP,         &amp;  ! inout</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                  ErrorStatus )    <span class="comment">! inout</span></div><div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="diffp_8f90.xhtml#aad082f5b8769acd0106487c49813d25f">   11</a></span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceio__mod.xhtml" title="Module containing derived types used for IO in Fieldcalc. ">io_mod</a><span class="keywordtype">, ONLY</span>:         &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <a class="code" href="structio__mod_1_1pp__header__type.xhtml" title="Global Type Definitions: ">pp_header_type</a>,         &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceerr__mod.xhtml" title="Module containing error codes for Fieldcalc. ">err_mod</a><span class="keywordtype">, ONLY</span>:        &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keywordtype">IMPLICIT None</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: NumLevs                      <span class="comment">! No. levels</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: PRef                            <span class="comment">! P where deriv reqd</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>), <span class="keywordtype">INTENT(IN)</span> :: FFields(numlevs) <span class="comment">! Input variable, F</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>), <span class="keywordtype">INTENT(IN)</span> :: PFields(numlevs) <span class="comment">! Corresp. P vals</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>), <span class="keywordtype">INTENT(INOUT)</span> :: dFdP          <span class="comment">! Deriv wrt p</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> :: ErrorStatus</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keywordtype">CHARACTER(LEN=*)</span>, <span class="keywordtype">PARAMETER</span> :: RoutineName = <span class="stringliteral">&quot;DiffP&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor"></span><span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: NPts = 6                      <span class="comment">! No. spline coeffs</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">INTEGER</span> :: i, j, jlwr, jupr, jmid, k, halfn</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">REAL</span> :: dx, t</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">REAL</span> :: b(npts), c(npts), d(npts)                       <span class="comment">! Spline coeffs</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">REAL</span> :: deltay(npts-1), deltax(npts-1), dydx(npts-1)    <span class="comment">! Spline inputs</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">ALLOCATABLE</span> :: Lower (:,:)    <span class="comment">! Lower model level</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">ALLOCATABLE</span> :: Upper (:,:)    <span class="comment">! Upper model level</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">CALL </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a>( routinename, 3 )</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordflow">IF</span> ( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="comment">! Previous error - do not proceed</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordflow">IF</span> ( <span class="keyword">ASSOCIATED</span>( dfdp % RData ) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keyword">DEALLOCATE</span>( dfdp % RData )</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;dfdp % Hdr = ffields(1) % Hdr</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">ALLOCATE</span>( dfdp % RData(dfdp % Hdr % NumCols, &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                       dfdp % Hdr % NumRows) )</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;dfdp % Hdr % BMDI = <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;dfdp % Hdr % STCode = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">ALLOCATE</span> ( lower( ffields(1) % Hdr % NumCols,   &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                   ffields(1) % Hdr % NumRows ) )</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">ALLOCATE</span> ( upper( ffields(1) % Hdr % NumCols,   &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                   ffields(1) % Hdr % NumRows ) )</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;halfn = npts/2</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">#if defined(VECTOR)</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor"></span><span class="keywordflow">DO</span> j = 1,ffields(1) % Hdr % NumRows</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;   <span class="keywordflow">DO</span> i = 1,ffields(1) % Hdr % NumCols</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="keywordflow">IF</span> (pref &gt;= pfields(halfn) % RData(i,j)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;         <span class="comment">! all smaller</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;         lower(i,j) = halfn</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;         upper(i,j) = halfn+1</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (pref &lt; pfields(numlevs+1-halfn) % RData(i,j)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;         <span class="comment">! all lower</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;         lower(i,j) = numlevs-halfn</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;         upper(i,j) =  numlevs+1-halfn</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;         lower(i,j) = -1 <span class="comment">! One level to find</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordflow">   END DO</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordflow">DO</span> k=halfn , numlevs+1-halfn</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;   <span class="keywordflow">DO</span> j = 1,ffields(1) % Hdr % NumRows</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;       <span class="keywordflow">DO</span> i = 1,ffields(1) % Hdr % NumCols</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;       <span class="keywordflow">IF</span> ( ( pfields(k) % RData(i,j) &gt; pref  ) &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;          .AND.( pfields(k+1) % RData(i,j) &lt;= pref  ) &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;          .AND.(lower(i,j).eq.-1) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;          lower(i,j) = k</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;          upper(i,j) = k+1</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordflow">       END DO</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordflow">   END DO</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor"></span><span class="keywordflow">DO</span> j = 1,ffields(1) % Hdr % NumRows</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordflow">DO</span> i = 1,ffields(1) % Hdr % NumCols</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="comment">! Divide and conquer to find level containing PRef</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    jlwr = halfn</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    jupr = numlevs+1-halfn</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">DO</span> <span class="keywordflow">WHILE</span> ( (jupr-jlwr) &gt; 1 )</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      jmid = (jlwr+jupr)/2</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <span class="keywordflow">IF</span> ( pref &gt;= pfields(jmid) % RData(i,j) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        jupr = jmid</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <span class="keywordflow">IF</span> ( pref &lt;  pfields(jmid) % RData(i,j) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        jlwr = jmid</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    lower(i,j) = jlwr</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    upper(i,j) = jupr</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordflow">  ENDDO</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keywordflow">ENDDO</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keywordflow">DO</span> j = 1,ffields(1) % Hdr % NumRows</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;   <span class="keywordflow">DO</span> i = 1,ffields(1) % Hdr % NumCols</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    jlwr = lower(i,j)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    jupr = upper(i,j)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="comment">! Use fields in reverse order so that pressure is increasing</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    dx = pref - pfields(jupr) % RData(i,j)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">DO</span> k = 1,npts-1</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      deltax(k) = pfields(jupr+halfn  -k) % RData(i,j)-  &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                  pfields(jupr+halfn-1-k) % RData(i,j)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      deltay(k) = ffields(jupr+halfn  -k) % RData(i,j)-  &amp;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                  ffields(jupr+halfn-1-k) % RData(i,j)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">! the coefficients b(i), c(i), and d(i), i=1,2,...,NPts are computed</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">! for a cubic interpolating spline</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">! s(u) = y(i) + b(i)*(u-x(i)) + c(i)*(u-x(i))**2 + d(i)*(u-x(i))**3</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">!   derivative= b(i) + 2.*c(i)*(u-x(i)) + 3.*d(i)*(u-x(i))**2</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">! where  x(i) &lt; u &lt; x(i+1), using horner&#39;s rule</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">! if  u &lt; x(1) then  i = 1  is used.</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">! if  u &gt;= x(n) then  i = n  is used.</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">! A binary search is performed to determine the proper interval.</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">! input..</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">!   NPts = the number of data points or knots (NPts.ge.2)</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">!   x = the abscissas of the knots in strictly increasing order</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">!   y = the ordinates of the knots</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">! output..</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">!   b, c, d  = arrays of spline coefficients as defined above.</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">! using  p  to denote differentiation,</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">!   y(i) = s(x(i))</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">!   b(i) = sp(x(i))</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">!   c(i) = spp(x(i))/2</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">!   d(i) = sppp(x(i))/6  (derivative from the right)</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">! Tridiagonal system: b = diagonal, d = offdiagonal, c = RH side.</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">! Third derivs at  x(1)  and  x(n) obtained from divided differences</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="comment">! Derivative to the right</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    dydx(1:npts-1) = deltay(1:npts-1) / deltax(1:npts-1)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="comment">! Difference in right and left derivative</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    c(2:npts-1) = dydx(2:npts-1) - dydx(1:npts-2)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="comment">! b(k)=x(k+1)-x(k-1)</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    b(1)        = -deltax(1)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    b(npts)     = -deltax(npts-1)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    b(2:npts-1) = deltax(1:npts-2) + deltax(2:npts-1)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    c(1)    = c(3)     /b(3)      - c(2)     /b(2)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    c(npts) = c(npts-2)/b(npts-2) - c(npts-1)/b(npts-1)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    c(1)    = c(1)   *b(1)   **2/( b(3)     -b(1) )</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    c(npts) = c(npts)*b(npts)**2/( b(npts-2)-b(npts) )</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    b(2:npts-1) = 2.*b(2:npts-1)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;--  forward elimination</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">DO</span> k = 1, npts-1</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      t = deltax(k)/b(k)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      b(k+1) = b(k+1) - t*deltax(k)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      c(k+1) = c(k+1) - t*c(k)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keywordflow">    ENDDO</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    c(npts) = c(npts)/b(npts)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;-  back substitution</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordflow">DO</span> k = npts-1, halfn, -1</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      c(k) = (c(k) - deltax(k)*c(k+1))/b(k) <span class="comment">!2nd derivative / 6</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keywordflow">    ENDDO</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    b(halfn) = dydx(halfn) - deltax(halfn)*(c(halfn+1) + 2.*c(halfn))</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    d(halfn) = (c(halfn+1) - c(halfn)) /deltax(halfn) <span class="comment">! = 3rd deriv/6</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    c(halfn) = 3.*c(halfn)                            <span class="comment">! = 2nd deriv/2</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;-- evaluate the derivative of the cubic spline function</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    dfdp % RData(i,j) = b(halfn) + dx*(2.0*c(halfn) + 3.0*dx*d(halfn))</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keywordflow">  ENDDO</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordflow">ENDDO</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keyword">DEALLOCATE</span> ( lower )</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keyword">DEALLOCATE</span> ( upper )</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">! DEPENDS ON: timer</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keyword">CALL </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a>( routinename, 4 )</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="diffp_8f90.xhtml#aad082f5b8769acd0106487c49813d25f" title="Routines to calculate Clear Air Turbulence diagnostics. ">diffp</a></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
