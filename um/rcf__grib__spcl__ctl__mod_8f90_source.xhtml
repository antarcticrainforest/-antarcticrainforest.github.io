<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/qxreconf/rcf_grib_spcl_ctl_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_448e69cd1e368218ef2123538d498dc2.xhtml">qxreconf</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">rcf_grib_spcl_ctl_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="rcf__grib__spcl__ctl__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno"><a class="line" href="namespacercf__grib__spcl__ctl__mod.xhtml">    4</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacercf__grib__spcl__ctl__mod.xhtml" title="Establish what information is contained within the GRIB file Establish what information is contained ...">rcf_grib_spcl_ctl_mod</a></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">! Description: This routine holds the &#39;logic&#39; which results in calls</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">  SUBROUTINE </span><a class="code" href="namespacercf__grib__spcl__ctl__mod.xhtml#a89175e414666bc7a9a703d4b1ecd602e" title="SUBROUTINE Rcf_Grib_Spcl_Ctl. ">rcf_grib_spcl_ctl</a>(FieldData,L_FldData,Lists,Current,              &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      Hdr_Dmy,Hdr_Itm,List_no,Lkps_Posn)</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="namespacercf__grib__spcl__ctl__mod.xhtml#a89175e414666bc7a9a703d4b1ecd602e">   49</a></span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__grib__block__params__mod.xhtml" title="Define the &#39;Grib_record&#39; type and the parameters for the &#39;blocks&#39; Define the &#39;Grib_record&#39; type and t...">rcf_grib_block_params_mod</a><span class="keywordtype">, ONLY</span> :                                      &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <a class="code" href="structrcf__grib__block__params__mod_1_1list__marker.xhtml" title="======================================================================= The Derived Type to /mark/ th...">list_marker</a>,     <a class="code" href="structrcf__grib__block__params__mod_1_1grib__record.xhtml" title="======================================================================= The Derived Type used to hold...">grib_record</a>,                                          &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <a class="code" href="namespacercf__grib__block__params__mod.xhtml#aeb61ab7449885119b464086c73b36549">p_latgrdpnt1</a>,    <a class="code" href="namespacercf__grib__block__params__mod.xhtml#a0c2083adabc7a925243912d5bc858e43">p_latextrmpt</a>,                                         &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <a class="code" href="namespacercf__grib__block__params__mod.xhtml#a53194af39226ae7881b9e918b407fd66">p_param_id</a>,      <a class="code" href="namespacercf__grib__block__params__mod.xhtml#af3fa7c4de6830e16a26ff15a082c4931" title="======================================================================= Variables Usedfor calls to &#39;D...">lenarraymax</a>,                                          &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <a class="code" href="namespacercf__grib__block__params__mod.xhtml#a42e82cbf1a0768469e588944a20b5735">grb_data_log</a>,    <a class="code" href="namespacercf__grib__block__params__mod.xhtml#a7b0430a815d169ee01e988e13ba3c5f5">grb_data_int</a>,                                         &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <a class="code" href="namespacercf__grib__block__params__mod.xhtml#a0d5753ea0706fd47e1291ed7c0771e5f">eid_surf_press</a>,  <a class="code" href="namespacercf__grib__block__params__mod.xhtml#a4624322c18e7ac3cfb31de6d34980c35">eid_log_surf_press</a></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__grib__lookups__mod.xhtml" title="List parameters and cross reference info for GRIB data List parameters and cross reference info for G...">rcf_grib_lookups_mod</a><span class="keywordtype">, ONLY</span> :                                           &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <a class="code" href="namespacercf__grib__lookups__mod.xhtml#afd046c4082e410bc4e9834cf21afe5ae">grib_max_fields</a>,                                                       &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <a class="code" href="namespacercf__grib__lookups__mod.xhtml#a4d03cf4e46ccd06598c1444f181dd38f" title="The misc field is used to store header data not stored in the other lists. ">grborigecmwf</a></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__headaddress__mod.xhtml" title="Magic numbers for header components Magic numbers for header components. ">rcf_headaddress_mod</a><span class="keywordtype">, ONLY</span> :                                            &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <a class="code" href="namespacercf__headaddress__mod.xhtml#aa5e58ea15b775f7f0a0631d6c48aa6b1">ic_ylen</a>,<a class="code" href="namespacercf__headaddress__mod.xhtml#a51c39c573d62fd172876f24575ee5c3e">ic_xlen</a></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__umhead__mod.xhtml" title="Data module defining um_header_type Data module defining um_header_type. ">rcf_umhead_mod</a><span class="keywordtype">, ONLY</span> :                                                 &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <a class="code" href="structrcf__umhead__mod_1_1um__header__type.xhtml" title="Global Type Definitions: ">um_header_type</a>            <span class="comment">! Derived containing UM header info</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :                                                     &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,  &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,&amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>,                                                           &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__stashcodes__mod.xhtml" title="List of stashcode magic numbers List of stashcode magic numbers. ">rcf_stashcodes_mod</a><span class="keywordtype">, ONLY</span> :                                             &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <a class="code" href="namespacercf__stashcodes__mod.xhtml#a29a39e580382b422b6620cce1413f04c">stashcode_orog</a>,          <a class="code" href="namespacercf__stashcodes__mod.xhtml#abf9490128fb974a411e4987cede2a050">stashcode_exner</a>,                              &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <a class="code" href="namespacercf__stashcodes__mod.xhtml#a33e0e3878c03ea7915281c010370ddcf">stashcode_lsm</a>,                                                         &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <a class="code" href="namespacercf__stashcodes__mod.xhtml#a51359debdb0d8653890885df16f5f736">stashcode_pstar</a>,         <a class="code" href="namespacercf__stashcodes__mod.xhtml#a388aadc57d98f3ad083a4a12553de866">stashcode_soil_temp</a>,                          &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <a class="code" href="namespacercf__stashcodes__mod.xhtml#ad0f205a438d215ac41aeea5e162b025b">stashcode_soil_moist</a>,    <a class="code" href="namespacercf__stashcodes__mod.xhtml#aaae333d12ebca2a532b8e3c345e7abaa">stashcode_mean_snow</a></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordtype">USE </span>um_parvars<span class="keywordtype">, ONLY</span> :                                                     &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__grib__spcl__orog__mod.xhtml" title="Convert geopotential field to Orography Convert geopotential field to Orography. ">rcf_grib_spcl_orog_mod</a><span class="keywordtype">, ONLY</span> :                                         &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <a class="code" href="namespacercf__grib__spcl__orog__mod.xhtml#aeaa38cac876f507be5632e3a1328b783" title="SUBROUTINE Rcf_Grib_Spcl_Orog. ">rcf_grib_spcl_orog</a></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__grib__spcl__lsm__mod.xhtml" title="Convert GRIB LSM to Logical UM one Convert GRIB LSM to Logical UM one. ">rcf_grib_spcl_lsm_mod</a><span class="keywordtype">, ONLY</span> :                                          &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <a class="code" href="namespacercf__grib__spcl__lsm__mod.xhtml#a8dedd972f212f43bf63f255f1416ca3e" title="SUBROUTINE Rcf_Grib_Spcl_LSM. ">rcf_grib_spcl_lsm</a></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__grib__spcl__exner__mod.xhtml" title="Calculate Exner from pressure levels Calculate Exner from pressure levels. ">rcf_grib_spcl_exner_mod</a><span class="keywordtype">, ONLY</span> :                                        &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <a class="code" href="namespacercf__grib__spcl__exner__mod.xhtml#a5800399ce999e274b479f0434a920879" title="SUBROUTINE Rcf_Grib_Spcl_Exner. ">rcf_grib_spcl_exner</a></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__grib__spcl__lpstar__mod.xhtml" title="Convert log(pstar) into pstar Convert log(pstar) into pstar. ">rcf_grib_spcl_lpstar_mod</a><span class="keywordtype">, ONLY</span> :                                       &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <a class="code" href="namespacercf__grib__spcl__lpstar__mod.xhtml#a0745875c298c5318706568588d1dadcb" title="SUBROUTINE Rcf_Grib_Spcl_LPstar. ">rcf_grib_spcl_lpstar</a></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__grib__spcl__soilm__mod.xhtml" title="Convert volumetric soil moisture to soil moisture amount Convert volumetric soil moisture to soil moi...">rcf_grib_spcl_soilm_mod</a><span class="keywordtype">, ONLY</span> :                                        &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <a class="code" href="namespacercf__grib__spcl__soilm__mod.xhtml#a292a11825996347a46f4f8c41d63d432" title="SUBROUTINE Rcf_Grib_Spcl_SoilM. ">rcf_grib_spcl_soilm</a></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__grib__spcl__snow__mod.xhtml" title="Convert snow amount from m to mm Convert snow amount from m to mm. ">rcf_grib_spcl_snow_mod</a><span class="keywordtype">, ONLY</span> :                                         &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <a class="code" href="namespacercf__grib__spcl__snow__mod.xhtml#af05227731092eb3b1cb52b87a613d4db" title="SUBROUTINE Rcf_Grib_Spcl_Snow. ">rcf_grib_spcl_snow</a></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> :                                                    &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__reverse__field__mod.xhtml" title="This file belongs in section: Reconfiguration. ">rcf_reverse_field_mod</a><span class="keywordtype">, ONLY</span> :                                          &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="interfacercf__reverse__field__mod_1_1rcf__reverse__field.xhtml" title="Reverse the position of &quot;n_rows&quot; rows for each level of the 3D data array passed into the routine suc...">rcf_reverse_field</a></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacemask__compression.xhtml" title="This file belongs in section: Packing Tools. ">mask_compression</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemask__compression.xhtml#acb339fbf0c2985509169d255246c5fd2" title="Subroutine Compress_To_Mask -!&gt; Purpose: Selects land points values from input horizontal field!&gt; and...">compress_to_mask</a></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">! Declarations:</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">!   These are of the form:!     INTEGER, INTENT(IN) :: ExampleVariable    !Description of variable</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">! Global variables (#include statements etc):</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">! Subroutine arguments</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>                 :: Lkps_Posn</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>                 :: List_no</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    type(<a class="code" href="structrcf__grib__block__params__mod_1_1list__marker.xhtml" title="======================================================================= The Derived Type to /mark/ th...">list_marker</a>), <span class="keywordtype">INTENT(IN)</span>      :: lists(0:<a class="code" href="namespacercf__grib__lookups__mod.xhtml#afd046c4082e410bc4e9834cf21afe5ae">grib_max_fields</a>)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    type(<a class="code" href="structrcf__umhead__mod_1_1um__header__type.xhtml" title="Global Type Definitions: ">um_header_type</a>),<span class="keywordtype">INTENT(IN)</span>    :: hdr_dmy</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span>                 :: FieldData(<a class="code" href="namespacercf__grib__block__params__mod.xhtml#af3fa7c4de6830e16a26ff15a082c4931" title="======================================================================= Variables Usedfor calls to &#39;D...">lenarraymax</a>)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(INOUT)</span>              :: L_FldData(<a class="code" href="namespacercf__grib__block__params__mod.xhtml#af3fa7c4de6830e16a26ff15a082c4931" title="======================================================================= Variables Usedfor calls to &#39;D...">lenarraymax</a>)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    type(<a class="code" href="structrcf__grib__block__params__mod_1_1grib__record.xhtml" title="======================================================================= The Derived Type used to hold...">grib_record</a>),<span class="keywordtype">POINTER</span>          :: current</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    type(<a class="code" href="structrcf__umhead__mod_1_1um__header__type.xhtml" title="Global Type Definitions: ">um_header_type</a>),<span class="keywordtype">INTENT(INOUT)</span> :: hdr_itm</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">! Comdecks</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="preprocessor"></span><span class="comment">! contains LBLREC (amongst others)</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">! Local constants</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">PARAMETER</span>     :: RoutineName=<span class="stringliteral">&#39;Rcf_GRIB_Spcl_Ctl&#39;</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordtype">CHARACTER (LEN=80)</span>               :: Cmessage(2)   <span class="comment">! used for EReport</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordtype">INTEGER</span>                          :: ErrorStatus   <span class="comment">! used for EReport</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordtype">INTEGER</span>                          :: i</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">INTEGER</span>                          :: Criteria</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordtype">REAL</span>                             :: LandPacked(<a class="code" href="namespacercf__grib__block__params__mod.xhtml#af3fa7c4de6830e16a26ff15a082c4931" title="======================================================================= Variables Usedfor calls to &#39;D...">lenarraymax</a>)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordtype">INTEGER</span>                          :: LandPoints</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">! Local variables for saved land sea mask</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">! Note: although L_GotLSM is initialised as false, it acts as a saved</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">! variable from then on.</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordtype">LOGICAL</span>,<span class="keywordtype">SAVE</span>  :: LandSeaMask(<a class="code" href="namespacercf__grib__block__params__mod.xhtml#af3fa7c4de6830e16a26ff15a082c4931" title="======================================================================= Variables Usedfor calls to &#39;D...">lenarraymax</a>)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordtype">LOGICAL</span>,<span class="keywordtype">SAVE</span>  :: l_gotlsm=.false.</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">!  Routine Code Start :</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">!  Block 1 : Simple transformations</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">SELECT CASE</span> (current % Stashcode)</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">CASE</span> (<a class="code" href="namespacercf__stashcodes__mod.xhtml#a29a39e580382b422b6620cce1413f04c">stashcode_orog</a>)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      <span class="keywordflow">IF</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&quot;Special treatment for orography&quot;</span>, &amp;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            src=<span class="stringliteral">&#39;rcf_grib_spcl_ctl_mod&#39;</span>)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacercf__grib__spcl__orog__mod.xhtml#aeaa38cac876f507be5632e3a1328b783" title="SUBROUTINE Rcf_Grib_Spcl_Orog. ">rcf_grib_spcl_orog</a>(current,fielddata)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">CASE</span> (<a class="code" href="namespacercf__stashcodes__mod.xhtml#a33e0e3878c03ea7915281c010370ddcf">stashcode_lsm</a>)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      <span class="keywordflow">IF</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&quot;Special treatment for landsea mask&quot;</span>, &amp;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            src=<span class="stringliteral">&#39;rcf_grib_spcl_ctl_mod&#39;</span>)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacercf__grib__spcl__lsm__mod.xhtml#a8dedd972f212f43bf63f255f1416ca3e" title="SUBROUTINE Rcf_Grib_Spcl_LSM. ">rcf_grib_spcl_lsm</a>(current,fielddata,l_flddata,hdr_itm,              &amp;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;          lkps_posn)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">CASE</span> (<a class="code" href="namespacercf__stashcodes__mod.xhtml#abf9490128fb974a411e4987cede2a050">stashcode_exner</a>)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <span class="keywordflow">IF</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&quot;Special treatment for exner pressure&quot;</span>, &amp;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            src=<span class="stringliteral">&#39;rcf_grib_spcl_ctl_mod&#39;</span>)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacercf__grib__spcl__exner__mod.xhtml#a5800399ce999e274b479f0434a920879" title="SUBROUTINE Rcf_Grib_Spcl_Exner. ">rcf_grib_spcl_exner</a>(current,fielddata)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordflow">CASE</span> (<a class="code" href="namespacercf__stashcodes__mod.xhtml#a51359debdb0d8653890885df16f5f736">stashcode_pstar</a>)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      <span class="keywordflow">IF</span> (current % Block_1(<a class="code" href="namespacercf__grib__block__params__mod.xhtml#a53194af39226ae7881b9e918b407fd66">p_param_id</a>) == <a class="code" href="namespacercf__grib__block__params__mod.xhtml#a4624322c18e7ac3cfb31de6d34980c35">eid_log_surf_press</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">IF</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&quot;Special treatment for log surface pressure&quot;</span>, &amp;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;              src=<span class="stringliteral">&#39;rcf_grib_spcl_ctl_mod&#39;</span>)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacercf__grib__spcl__lpstar__mod.xhtml#a0745875c298c5318706568588d1dadcb" title="SUBROUTINE Rcf_Grib_Spcl_LPstar. ">rcf_grib_spcl_lpstar</a>(current,fielddata)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">CASE</span> (<a class="code" href="namespacercf__stashcodes__mod.xhtml#ad0f205a438d215ac41aeea5e162b025b">stashcode_soil_moist</a>)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;      <span class="keywordflow">IF</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&quot;Special treatment for soil moisture&quot;</span>, &amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            src=<span class="stringliteral">&#39;rcf_grib_spcl_ctl_mod&#39;</span>)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacercf__grib__spcl__soilm__mod.xhtml#a292a11825996347a46f4f8c41d63d432" title="SUBROUTINE Rcf_Grib_Spcl_SoilM. ">rcf_grib_spcl_soilm</a>(current,fielddata)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordflow">CASE</span> (<a class="code" href="namespacercf__stashcodes__mod.xhtml#aaae333d12ebca2a532b8e3c345e7abaa">stashcode_mean_snow</a>)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      <span class="keywordflow">IF</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&quot;Special treatment for snow amount&quot;</span>, &amp;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            src=<span class="stringliteral">&#39;rcf_grib_spcl_ctl_mod&#39;</span>)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacercf__grib__spcl__snow__mod.xhtml#af05227731092eb3b1cb52b87a613d4db" title="SUBROUTINE Rcf_Grib_Spcl_Snow. ">rcf_grib_spcl_snow</a>(current,fielddata)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordflow">    END SELECT</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">!  Block 2 : Global transformations</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">! Check data is stored South to North not North to South</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">IF</span> ( current % Block_2(<a class="code" href="namespacercf__grib__block__params__mod.xhtml#aeb61ab7449885119b464086c73b36549">p_latgrdpnt1</a>) &gt;                                     &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        current % Block_2(<a class="code" href="namespacercf__grib__block__params__mod.xhtml#a0c2083adabc7a925243912d5bc858e43">p_latextrmpt</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      <span class="keywordflow">IF</span> ( <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>   ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keywordflow">IF</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(2A)&#39;</span>)<span class="stringliteral">&quot;About to reverse latitudes of &quot;</span>,current % Desc</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_grib_spcl_ctl_mod&#39;</span>)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      <span class="keywordflow">SELECT CASE</span>(current % Data_Type)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      <span class="keywordflow">CASE</span> (<a class="code" href="namespacercf__grib__block__params__mod.xhtml#a42e82cbf1a0768469e588944a20b5735">grb_data_log</a>)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfacercf__reverse__field__mod_1_1rcf__reverse__field.xhtml" title="Reverse the position of &quot;n_rows&quot; rows for each level of the 3D data array passed into the routine suc...">rcf_reverse_field</a>(l_flddata,     &amp;     <span class="comment">! Data to reverse</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            hdr_itm % IntC (<a class="code" href="namespacercf__headaddress__mod.xhtml#a51c39c573d62fd172876f24575ee5c3e">ic_xlen</a>), &amp; <span class="comment">! Row Length</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            hdr_itm % IntC (<a class="code" href="namespacercf__headaddress__mod.xhtml#aa5e58ea15b775f7f0a0631d6c48aa6b1">ic_ylen</a>), &amp; <span class="comment">! No. of rows</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            1,             &amp;     <span class="comment">! No. of levels in Data</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            lkps_posn,     &amp;     <span class="comment">! Position in lookups</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            hdr_itm)             <span class="comment">! UM Hdr for updating</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      <span class="keywordflow">CASE</span> (<a class="code" href="namespacercf__grib__block__params__mod.xhtml#a7b0430a815d169ee01e988e13ba3c5f5">grb_data_int</a>)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="comment">! At present there is no code to flip an Integer data field</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        cmessage(1) = <span class="stringliteral">&#39;Tried to Flip Integer Data Type without any code&#39;</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        errorstatus = 10</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage(1) )</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keywordflow">      CASE Default</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfacercf__reverse__field__mod_1_1rcf__reverse__field.xhtml" title="Reverse the position of &quot;n_rows&quot; rows for each level of the 3D data array passed into the routine suc...">rcf_reverse_field</a>(fielddata,     &amp;     <span class="comment">! Data to reverse</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            hdr_itm % IntC (<a class="code" href="namespacercf__headaddress__mod.xhtml#a51c39c573d62fd172876f24575ee5c3e">ic_xlen</a>), &amp; <span class="comment">! Row Length</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            hdr_itm % IntC (<a class="code" href="namespacercf__headaddress__mod.xhtml#aa5e58ea15b775f7f0a0631d6c48aa6b1">ic_ylen</a>), &amp; <span class="comment">! No. of rows</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            1,             &amp;     <span class="comment">! No. of levels in Data</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            lkps_posn,     &amp;     <span class="comment">! Position in lookups</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            hdr_itm)             <span class="comment">! UM Hdr for updating</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keywordflow">      END SELECT</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">!  Block 3 : Complex transformations</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">! If data needs to be land packed, then do so.</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">! Must be done after any other field manipulations.</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">! - Will be dependent on stash code</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keywordflow">SELECT CASE</span> (current % Stashcode)</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordflow">CASE</span> (<a class="code" href="namespacercf__stashcodes__mod.xhtml#a33e0e3878c03ea7915281c010370ddcf">stashcode_lsm</a>)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="comment">! Store land/sea mask in case needed for land packing below</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;      <span class="keywordflow">IF</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&quot;Store Land/Sea Mask for landpacking&quot;</span>, &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            src=<span class="stringliteral">&#39;rcf_grib_spcl_ctl_mod&#39;</span>)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      landseamask=l_flddata</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;      l_gotlsm=.true.</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordflow">CASE</span> (<a class="code" href="namespacercf__stashcodes__mod.xhtml#a388aadc57d98f3ad083a4a12553de866">stashcode_soil_temp</a>,                                                 &amp;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <a class="code" href="namespacercf__stashcodes__mod.xhtml#ad0f205a438d215ac41aeea5e162b025b">stashcode_soil_moist</a>)</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;      <span class="keywordflow">IF</span> (.NOT. l_gotlsm) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        cmessage(1) = <span class="stringliteral">&#39;LSM not available for land packing&#39;</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        errorstatus = 10</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage(1) )</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;      <span class="keywordflow">IF</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I5)&#39;</span>) <span class="stringliteral">&quot;Performing land-packing for stashcode &quot;</span>,    &amp;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            current % Stashcode</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_grib_spcl_ctl_mod&#39;</span>)</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="comment">! Use main UM routine compress_to_mask to do the land packing.</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacemask__compression.xhtml#acb339fbf0c2985509169d255246c5fd2" title="Subroutine Compress_To_Mask -!&gt; Purpose: Selects land points values from input horizontal field!&gt; and...">compress_to_mask</a>(fielddata,    &amp; <span class="comment">! Data to landpack</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;          landpacked,   &amp; <span class="comment">! Landpacked data</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;          landseamask,  &amp; <span class="comment">! land/sea mask</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;          <a class="code" href="namespacercf__grib__block__params__mod.xhtml#af3fa7c4de6830e16a26ff15a082c4931" title="======================================================================= Variables Usedfor calls to &#39;D...">lenarraymax</a>,  &amp; <span class="comment">! size of input/output arrays</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;          landpoints)     <span class="comment">! number of landpoints</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="comment">! Put the land packed values at the head of the FieldData</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="comment">! array so that the reconfiguration sees the correct values.</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;      fielddata(1:landpoints)=landpacked(1:landpoints)</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keywordflow">    END SELECT</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">!  Cleaning Up afterwards</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keyword">  END SUBROUTINE </span><a class="code" href="namespacercf__grib__spcl__ctl__mod.xhtml#a89175e414666bc7a9a703d4b1ecd602e" title="SUBROUTINE Rcf_Grib_Spcl_Ctl. ">rcf_grib_spcl_ctl</a></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacercf__grib__spcl__ctl__mod.xhtml" title="Establish what information is contained within the GRIB file Establish what information is contained ...">rcf_grib_spcl_ctl_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
