<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/AC_assimilation/ac_ctl.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_5477e5296db3a3418fff85838c21a0ef.xhtml">AC_assimilation</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ac_ctl.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ac__ctl_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="namespaceac__ctl__mod.xhtml">   13</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceac__ctl__mod.xhtml" title="LL Subroutine AC_CTL -!&gt;LL. ">ac_ctl_mod</a></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="namespaceac__ctl__mod.xhtml#ad9b0579e33ec2ee1b36e3d11b5386b72">ac_ctl</a>(INT18,P_FIELDDA,Q_LEVELSDA,                     &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;     &amp; model_levelsda, theta_star_inc_halo,                             &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;     &amp; q_star, qcl_star, qcf_star,                                      &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;     &amp; OBS_FLAG,OBS,obs_flag_len,obs_len,                               &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;     &amp; p, p_theta_levels, exner_theta_levels,                           &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;     &amp; fv_cos_theta_latitude,                                           &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;     &amp; cf_area, cf_bulk, cf_liquid, cf_frozen,                          &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;     &amp; pstar, ntml, cumulus,                                            &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;     &amp; STASHwork,lambda_p,phi_p,                                        &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;#include &quot;argduma.h&quot;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="namespaceac__ctl__mod.xhtml#ad9b0579e33ec2ee1b36e3d11b5386b72">   29</a></span>&#160;#include &quot;argsts.h&quot;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;     &amp;                  l_mixing_ratio, ICODE, CMESSAGE)</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordtype">USE </span>atm_fields_bounds_mod   </div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: cp</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceac__diagnostics__mod.xhtml" title="Diagnostics necessary for AC assimilation scheme. Diagnostics necessary for AC assimilation scheme...">ac_diagnostics_mod</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecloud__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cloud_inputs_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecloud__inputs__mod.xhtml#aa78b4269f497a654e3b5b5c5ac866fcf">rhcrit</a>, <a class="code" href="namespacecloud__inputs__mod.xhtml#af2526dc522554e1852d2b801552264d8">l_cld_area</a>,  <a class="code" href="namespacecloud__inputs__mod.xhtml#a0beb50d23fbd057bc3ebb23973490bbf">l_acf_cusack</a>,          &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                            <a class="code" href="namespacecloud__inputs__mod.xhtml#ae04fb44426849e3f308912a8311bb53b">l_pc2</a>,  <a class="code" href="namespacecloud__inputs__mod.xhtml#a6c812fb3aac239f0dedbc794d787ae46">l_acf_brooks</a></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: lc</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacedynamics__input__mod.xhtml" title="Input control for dynamics. Input control for dynamics. ">dynamics_input_mod</a><span class="keywordtype">, ONLY</span>: l_regular</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecontrol__max__sizes.xhtml" title="This file belongs in section: Misc. ">control_max_sizes</a></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecderived__mod.xhtml" title="This file belongs in section: Top_level This file belongs in section: Top_level. ">cderived_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecderived__mod.xhtml#a2e96e1b74dc2d27fb6baafa3c407c93d">delta_lambda</a>, <a class="code" href="namespacecderived__mod.xhtml#ad299e07a2af8bbfea02242c74bd9b870">delta_phi</a></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecomobs__mod.xhtml" title="This file belongs in section: AC Assimilation. ">comobs_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecomobs__mod.xhtml#a34b9f81bde395513b5b1053ae84c5d7d">nobtypmx</a></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceac__mod.xhtml" title="LL Subroutine: AC. ">ac_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceac__mod.xhtml#a1f3d4cd45ff537a30b428c4eb398234d">ac</a></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceum__input__control__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">um_input_control_mod</a><span class="keywordtype">,  ONLY</span>: model_domain</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacetypstsz__mod.xhtml" title="This file belongs in section: Top_level This file belongs in section: Top_level. ">typstsz_mod</a></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacenlstcall__mod.xhtml" title="Control variables Control variables. ">nlstcall_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacenlstcall__mod.xhtml#ab4f74e5820852a02850463f38b181c64">ltimer</a></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacechsunits__mod.xhtml" title="copied from include file chsunits.h ">chsunits_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacechsunits__mod.xhtml#af6e26d3a6a1fedf0b44203712a772f8e">nunits</a></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;          <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;          <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;     </div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#include &quot;typsize.h&quot;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typduma.h&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typsts.h&quot;</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordtype">INTEGER</span>       INT18        <span class="comment">! Dummy variable for STASH_MAXLEN(18)</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="keywordtype">INTEGER</span>       P_FIELDDA,Q_LEVELSDA</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <span class="keywordtype">INTEGER</span> model_levelsda             <span class="comment">! copy of model_levels</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                         <span class="comment">!    for dynamic allocation</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordtype">INTEGER</span>       ICODE        <span class="comment">! Return code : 0 Normal Exit</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordtype">REAL</span> theta_star_inc_halo(1-offx:row_length+offx,                  &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                                       <span class="comment">! latest</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;     &amp;               1-offy:rows+offy, model_levelsda) <span class="comment">! theta</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      <span class="keywordtype">REAL</span> q_star(p_fieldda,q_levelsda)            <span class="comment">! specific humidity,</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="keywordtype">REAL</span> qcl_star(p_fieldda,q_levelsda)          <span class="comment">! cloud liquid,</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <span class="keywordtype">REAL</span> qcf_star(p_fieldda,q_levelsda)          <span class="comment">! cloud ice content</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      <span class="keywordtype">CHARACTER(LEN=*)</span> CMESSAGE     <span class="comment">! Error message if return code &gt;0</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keywordtype">INTEGER</span> :: obs_flag_len,obs_len</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <span class="keywordtype">INTEGER</span> :: OBS_FLAG(obs_flag_len)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">REAL</span>    :: OBS(obs_len)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <span class="keywordtype">Logical</span>, <span class="keywordtype">intent(in)</span>::                                             &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;     &amp; l_mixing_ratio            <span class="comment">! Use mixing ratio (if code available)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordtype">Real</span>, <span class="keywordtype">Intent (InOut)</span> ::                                           &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;     &amp;  p(pdims_s%i_start:pdims_s%i_end,                                &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;          pdims_s%j_start:pdims_s%j_end,                                &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;          pdims_s%k_start:pdims_s%k_end+1)                              &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;     &amp;, p_theta_levels(tdims_s%i_start:tdims_s%i_end,                   &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                       tdims_s%j_start:tdims_s%j_end,                   &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                       tdims_s%k_start:tdims_s%k_end)                   &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;     &amp;, exner_theta_levels(tdims_s%i_start:tdims_s%i_end,               &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                           tdims_s%j_start:tdims_s%j_end,               &amp;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                           tdims_s%k_start:tdims_s%k_end)               &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;     &amp;, fv_cos_theta_latitude(tdims_s%i_start:tdims_s%i_end,            &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                              tdims_s%j_start:tdims_s%j_end)            &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;     &amp;, cf_area(qdims%i_start:qdims%i_end,                              &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                qdims%j_start:qdims%j_end,                              &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                              qdims%k_end)                              &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;     &amp;, cf_bulk(qdims_l%i_start:qdims_l%i_end,                          &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                qdims_l%j_start:qdims_l%j_end,                          &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                qdims_l%k_start:qdims_l%k_end)                          &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                    &amp;, cf_liquid(qdims_l%i_start:qdims_l%i_end,                        &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                  qdims_l%j_start:qdims_l%j_end,                        &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                  qdims_l%k_start:qdims_l%k_end)                        &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;     &amp;, cf_frozen(qdims_l%i_start:qdims_l%i_end,                        &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                  qdims_l%j_start:qdims_l%j_end,                        &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                  qdims_l%k_start:qdims_l%k_end)                        &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                      &amp;, pstar(pdims%i_start:pdims%i_end,                                &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;              pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;       <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                        &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;     &amp;  ntml(pdims%i_start:pdims%i_end,                                 &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;             pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;       <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                        &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;     &amp;  cumulus(qdims%i_start:qdims%i_end,                              &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                qdims%j_start:qdims%j_end)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keywordtype">Real</span> lambda_p(tdims_l%i_start:tdims_l%i_end)      <span class="keywordtype">Real</span> phi_p   (tdims_l%i_start:tdims_l%i_end,                      &amp;                    tdims_l%j_start:tdims_l%j_end)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;#include <span class="stringliteral">&quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#include &quot;ctime.h&quot;</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;csizeobs.h&quot;</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;chistory.h&quot;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;ctracera.h&quot;</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;cruntimc.h&quot;</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor">#include &quot;comacp.h&quot;</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      <span class="keywordtype">REAL</span> lcrcp</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      parameter(lcrcp=lc/cp)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">! PC2 options are only important if L_pc2 = .true.</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">! Seek advice from the PC2 team before altering these parameters</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">! from .true., you will need to have put in place large amounts</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">! of extra code first.</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="keywordtype">LOGICAL</span>,<span class="keywordtype">PARAMETER</span>:: L_pc2_cond=.true.  <span class="comment">! Do condensation and</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">! liquid cloud fraction changes.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      <span class="keywordtype">LOGICAL</span>,<span class="keywordtype">PARAMETER</span>:: L_pc2_cfl =.true.  <span class="comment">! Do liquid cloud</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">! fraction changes. This requires that the condensation as a</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">! result of assimilation is calculated directly.</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">! Note: One must not try to run with condensation on but liquid cloud</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">! fraction off with this code.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      <span class="keywordtype">LOGICAL</span>,<span class="keywordtype">PARAMETER</span>:: L_pc2_cff =.true.  <span class="comment">! Do ice cloud fraction</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">! changes. This requires that the ice increment from assimilation is</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">! calculated directly.</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">!L Dynamically allocated area for stash processing</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      <span class="keywordtype">REAL</span> STASHWORK(*)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;     &amp;       STASHMACRO_TAG,                                            &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                                       <span class="comment">! STASHmacro tag number</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;     &amp;       mdi,                                                       &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                                       <span class="comment">! Missing data indicator</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;     &amp;       <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>, error                  <span class="comment">! do loop variable/ error</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordtype">INTEGER</span> J                        <span class="comment">! DO Loop Variable.</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keywordtype">INTEGER</span> I, IIND                  <span class="comment">! temporary scalars</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="keywordtype">INTEGER</span> im_index                 <span class="comment">! Internal model index</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="keywordtype">INTEGER</span> Q_LEVELS, P_FIELD          <span class="comment">! copies of Q_LEVELSDA,</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                                         <span class="comment">! P_FIELDDA to avoid edits</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="keywordtype">INTEGER</span> rhc_row_length, rhc_rows   <span class="comment">! rhcrit dimensions</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="keywordtype">INTEGER</span> int_p                      <span class="comment">! field pointers</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="keywordtype">INTEGER</span> j_start, j_end             <span class="comment">! start and end indices</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="keywordtype">INTEGER</span> i_start, i_end             <span class="comment">! for processors</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <span class="keywordtype">INTEGER</span> ji                         <span class="comment">! 2D array index for halo</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                         <span class="comment">! i/j variables</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      <span class="keywordtype">INTEGER</span> levels_per_level, large_levels <span class="comment">! needed by ls_arcld</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="keywordtype">REAL</span> RHCPT (1,1,q_levelsda)        <span class="comment">! rhcrit array</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keywordtype">REAL</span> p_layer_centres(row_length, rows, 0:model_levelsda)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">!          pressure at layer centres. Same as p_theta_levels</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">!          except bottom level = pstar, and at top = 0</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="keywordtype">REAL</span> p_layer_boundaries(row_length, rows, 0:model_levelsda)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">!                pressure at layer boundaries. Same as p except at</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">!                bottom level = pstar, and at top = 0.</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      <span class="keywordtype">REAL</span> exner_layer_centres(row_length, rows, model_levelsda)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">!          exner at layer centres. Same as exner_theta_levels</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      <span class="keywordtype">REAL</span> WORK(p_fieldda,q_levelsda)    <span class="comment">! array for large-scale</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                                         <span class="comment">! latent heating</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                                         <span class="comment">! or ls_cld dummy output</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <span class="keywordtype">REAL</span> WORK2(p_fieldda,q_levelsda)   <span class="comment">! convective heating</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                         <span class="comment">! or ls_cld dummy output</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <span class="keywordtype">REAL</span> theta_star(p_fieldda,model_levelsda) <span class="comment">! non-halo theta</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      <span class="keywordtype">REAL</span> bulk_cloud_nohalo(row_length,rows,q_levelsda)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      <span class="keywordtype">REAL</span> DUMMY_FIELD(p_fieldda)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      <span class="comment">! These variables are for PC2 calculations</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">DIMENSION(:,:,:)</span>, <span class="keywordtype">ALLOCATABLE</span>::                             &amp;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;     &amp;           q_work                                                 &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                     <span class="comment">! Vapour work array (kg kg-1)</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;     &amp;,          qcl_work                                               &amp;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                     <span class="comment">! Liquid work array (kg kg-1)</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;     &amp;,          qcf_work                                               &amp;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                     <span class="comment">! Ice work array    (kg kg-1)</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;     &amp;,          t_work                                                 &amp;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                     <span class="comment">! Temperature/theta work array</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">!                                    ! please see inline comments (K)</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;     &amp;,          bulk_cloud_fraction                                    &amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                                       <span class="comment">! Bulk cloud fraction (no units)</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;     &amp;,          cloud_fraction_liquid                                  &amp;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                                       <span class="comment">! Liquid cloud fraction  &quot;</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;     &amp;,          cloud_fraction_frozen                                  &amp;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                                       <span class="comment">! Ice cloud fraction     &quot;</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;     &amp;,          delta_q                                                &amp;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                                 <span class="comment">! Change in q to force condensation</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;     &amp;,          delta_qcl                                              &amp;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                                 <span class="comment">! Change in qcl to force condensation</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;     &amp;,          delta_qcf                                              &amp;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                 <span class="comment">! Change in qcf</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;     &amp;,          delta_t                                                &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                                 <span class="comment">! Change in t to force condensation</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;     &amp;,          pc2_work        <span class="comment">! A work array for PC2.</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">! Declare allocatable arrays for passing cloud fractions</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">! to LS_ACF_Brooks</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      <span class="keywordtype">Real</span>, <span class="keywordtype">DIMENSION (:,:,:)</span>, <span class="keywordtype">ALLOCATABLE</span>::                            &amp;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;     &amp; cf_bulk_nohalo, cf_liquid_nohalo, cf_frozen_nohalo</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">! Start Routine</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;AC_CTL&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      q_levels = q_levelsda</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      p_field  = p_fieldda</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      <span class="keywordflow">DO</span> j=1,p_fieldda</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;         dummy_field(j) =0.0</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">!L 1.0 Get address for each field from its STASH section/item code</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">!L     and STASHmacro tag  (searching only on STASHmacro tag)</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      mdi            = imdi</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;      stashmacro_tag = 30</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">! Initialise STASHWORK for section 18.</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;      <span class="keywordflow">DO</span> j = 1, int18</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        stashwork(j) = rmdi</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">! Create local versions of exner and p on layer centres/boundaries.</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">! These local arrays have NO halo.</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;      <span class="keywordflow">Do</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordflow">Do</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;          p_layer_centres(i,j,0) = pstar(i,j)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;          p_layer_boundaries(i,j,0) = pstar(i,j)</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keywordflow">      End Do</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, pdims%k_end - 1</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">Do</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;          <span class="keywordflow">Do</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            p_layer_boundaries(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = p(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1)            p_layer_centres(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = <a class="code" href="varcld_8h.xhtml#acd7a57e90bb1e737ecae71f1c1830ad6">p_theta_levels</a>(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)            exner_layer_centres(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=exner_theta_levels(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)<span class="keywordflow">          End Do</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keywordflow">      End Do</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=model_levels</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      <span class="keywordflow">Do</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keywordflow">Do</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;          p_layer_boundaries(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 0.0</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;          p_layer_centres(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = <a class="code" href="varcld_8h.xhtml#acd7a57e90bb1e737ecae71f1c1830ad6">p_theta_levels</a>(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)          exner_layer_centres(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=exner_theta_levels(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keywordflow">      End Do</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">!L 1.5 large scale rainfall rate LSRR stored in ac_diagnostics module</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceac__diagnostics__mod.xhtml#a301c0a5b42a1abd13153976e50842fe1" title="This module is used to pass diagnostics from physics routines to the AC assimilation scheme...">lsrr</a>(1)  ==  rmdi) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        icode    = 4203</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        cmessage = <span class="stringliteral">&quot;AC_CTL: large scale rainfall rate not available&quot;</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;AC_CTL 4203 &#39;</span>,icode,cmessage</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ac_ctl&#39;</span>)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;      <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">!L 1.6 large scale snowfall rate LSSR stored in ac_diagnostics module</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceac__diagnostics__mod.xhtml#a2ed4f550af2552ae1d8c0daa2194cce3">lssr</a>(1)  ==  rmdi) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        icode    = 4204</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        cmessage = <span class="stringliteral">&quot;AC_CTL: large scale snowfall rate not available&quot;</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;AC_CTL 4204 &#39;</span>,icode,cmessage</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ac_ctl&#39;</span>)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;      <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;           <span class="keywordflow">IF</span> (use_conv_in_mops) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">!L 1.7 convective rainfall rate CVRR stored in ac_diagnostics module</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;       <span class="keywordflow">IF</span> (<a class="code" href="namespaceac__diagnostics__mod.xhtml#a1d18118f19894ecc7de1822d3bb0f903">cvrr</a>(1)  ==  rmdi) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;         icode    = 5205</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;         cmessage = <span class="stringliteral">&quot;AC_CTL: convective rainfall rate not available&quot;</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;       <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">!L 1.8 convective snowfall rate CVSR stored in ac_diagnostics module</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;       <span class="keywordflow">IF</span> (<a class="code" href="namespaceac__diagnostics__mod.xhtml#aa88062434097628c2ea3d06888cabda1">cvsr</a>(1)  ==  rmdi) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;         icode    = 5206</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;         cmessage = <span class="stringliteral">&quot;AC_CTL: convective snowfall rate not available&quot;</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;       <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">!L 1.10 convective cloud cover on each model level CONVCC stored in module</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;       <span class="keywordflow">IF</span> (<a class="code" href="namespaceac__diagnostics__mod.xhtml#af771db5d09e324487ca2df4ba12897ca">convcc</a>(1,1)  ==  rmdi) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;         icode    = 5212</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;         cmessage = <span class="stringliteral">&quot;AC_CTL: convective cloud amount not available&quot;</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;       <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">!L 1.11 bulk cloud fraction (liquid+ice) after large scale cloud CF_LSC</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;       <span class="keywordflow">IF</span> (<a class="code" href="namespaceac__diagnostics__mod.xhtml#a37117ac17fa53114a2da080c1178b153">cf_lsc</a>(1,1)  ==  rmdi) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;         icode    = 9201</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;         cmessage = <span class="stringliteral">&quot;AC_CTL: cf after large scale cloud not available&quot;</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="keywordflow">       ENDIF</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;       <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="keywordflow">      ENDIF</span>  <span class="comment">!(IF USE_CONV_IN_MOPS)</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;          <span class="keywordflow">IF</span>( l_lhn ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment">!  seek convective heating rate and</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">!  diagnostics for calculating large-scale latent heating rate</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;      <span class="keywordflow">IF</span> (use_conv_in_mops) then<span class="comment">!L 1.13 temperature increment across convection TINC_CVN stored in module</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;       <span class="keywordflow">IF</span> (<a class="code" href="namespaceac__diagnostics__mod.xhtml#ae445481d6b83b28e48b09d7a691431c2">tinc_cvn</a>(1,1)  ==  rmdi) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;         icode    = 5181</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;         cmessage = <span class="stringliteral">&quot;AC_CTL: temp incrs across conv&#39;n not available&quot;</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="keywordflow">       ENDIF</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;       <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keywordflow">      ENDIF</span> </div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">!L 1.14 temperature increment across large scale precipitation TINC_PPN</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceac__diagnostics__mod.xhtml#ad2995e9e59180abd0cec2e19ff4faf5d">tinc_ppn</a>(1,1)  ==  rmdi) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        icode    = 4181</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        cmessage = <span class="stringliteral">&quot;AC_CTL: temp incrs across ls_ppn not available&quot;</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;      <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">!L 1.15 cloud liquid water after large scale cloud QCL_LSC stored in module</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceac__diagnostics__mod.xhtml#aa7aab3b0802d220000673993d2c8906e">qcl_lsc</a>(1,1)  ==  rmdi) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        icode    = 9206</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        cmessage = <span class="stringliteral">&quot;AC_CTL: qcl after large scale cloud not available&quot;</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;      <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">!L 1.16 cloud liquid water after advection QCL_ADV stored in ac_diagnostics module</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceac__diagnostics__mod.xhtml#a9cee9cfc3f696dab44301d004a978d2c">qcl_adv</a>(1,1)  ==  rmdi) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        icode    = 12254</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        cmessage = <span class="stringliteral">&quot;AC_CTL: qcl after advection not available&quot;</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;      <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">! 1.25  Calculate &#39;large-scale&#39; latent heating contributions</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment">!              DO K=1,Q_LEVELS</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;         <span class="keywordflow">DO</span> j=1,p_field</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;          work(j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = <a class="code" href="namespaceac__diagnostics__mod.xhtml#ad2995e9e59180abd0cec2e19ff4faf5d">tinc_ppn</a>(j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) +                                   &amp;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;     &amp;              lcrcp*( <a class="code" href="namespaceac__diagnostics__mod.xhtml#aa7aab3b0802d220000673993d2c8906e">qcl_lsc</a>(j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)- <a class="code" href="namespaceac__diagnostics__mod.xhtml#a9cee9cfc3f696dab44301d004a978d2c">qcl_adv</a>(j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  )</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="keywordflow">       END DO</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">!  large scale latent heating currently dT/dt in K/timestep</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment">!  as is convective heating - convert both to dtheta/dt in K/s</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;       <span class="keywordflow">IF</span> (use_conv_in_mops) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, q_levels</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;          <span class="keywordflow">Do</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="keywordflow">Do</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;              int_p = (j-1) * row_length + i</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;              work(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  =  work(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) /                          &amp;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;     &amp;           (exner_layer_centres(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * secs_per_stepim(<a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a>))</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;              work2(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =  <a class="code" href="namespaceac__diagnostics__mod.xhtml#ae445481d6b83b28e48b09d7a691431c2">tinc_cvn</a>(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) /                      &amp;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;     &amp;           (exner_layer_centres(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * secs_per_stepim(<a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a>))</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="keywordflow">            End Do</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keywordflow">          End Do</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;       <span class="keywordflow">ELSE</span>     <span class="comment">! IF USE_CONV_IN_MOPS is false</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, q_levels</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;          <span class="keywordflow">Do</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            <span class="keywordflow">Do</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;              int_p = (j-1) * row_length + i</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;              work(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  =  work(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) /                          &amp;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;     &amp;           (exner_layer_centres(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * secs_per_stepim(<a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a>))</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;              work2(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 0.0</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="keywordflow">            End Do</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="keywordflow">          End Do</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="keywordflow">       ENDIF</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;      <span class="keywordflow">ELSE</span>     <span class="comment">!  if LHN not selected</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment">!                 initialise dummy heating rate array to pass to AC</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;       <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=1,q_levels</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;         <span class="keywordflow">DO</span> j=1,p_field</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;           work(j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =  0.0</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;           work2(j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =  0.0</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="keywordflow">       END DO</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="keywordflow">      END IF</span>   <span class="comment">!  L_LHN</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">!L!L 2.  Section 18 Data Assimilation</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespacenlstcall__mod.xhtml#ab4f74e5820852a02850463f38b181c64">ltimer</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment">! DEPENDS ON: timer</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <span class="keyword">CALL </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a>(<span class="stringliteral">&#39;AC      &#39;</span>, 3)</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;      im_index=<a class="code" href="namespacesubmodel__mod.xhtml#a5a10dac97f579ecbf0c1c1879901e2e0" title="Sequence number of internal model indexed by internal model identifier required to map from id to STA...">internal_model_index</a>(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment">!  copy non halo values from theta_star_inc_halo to</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">!  2-d array theta_star</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;      <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> =             1, tdims%k_end</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        <span class="keywordflow">Do</span> j = tdims%j_start, tdims%j_end</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;          <span class="keywordflow">Do</span> i = tdims%i_start, tdims%i_end</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            int_p = (j-1) * row_length + i</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            theta_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = theta_star_inc_halo(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="keywordflow">          End Do</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="keywordflow">      End Do</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        <span class="keywordflow">If</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#ae04fb44426849e3f308912a8311bb53b">l_pc2</a> .and.                                                 &amp;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;     &amp;     (l_pc2_cond .or. l_pc2_cfl .or. l_pc2_cff)   ) <span class="keywordflow">then</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">! Input values needed for the PC2 scheme</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keyword">Allocate</span> ( q_work(qdims%i_start:qdims%i_end,                  &amp;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                            qdims%j_start:qdims%j_end,                  &amp;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                            q_levelsda) )</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        <span class="keyword">Allocate</span> ( qcl_work(qdims%i_start:qdims%i_end,                  &amp;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                            qdims%j_start:qdims%j_end,                  &amp;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                            q_levelsda) )</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        <span class="keyword">Allocate</span> ( qcf_work(qdims%i_start:qdims%i_end,                  &amp;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                            qdims%j_start:qdims%j_end,                  &amp;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                            q_levelsda) )</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <span class="keyword">Allocate</span> ( t_work(qdims%i_start:qdims%i_end,                  &amp;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                            qdims%j_start:qdims%j_end,                  &amp;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                            q_levelsda) )</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        <span class="keyword">Allocate</span> ( pc2_work(qdims%i_start:qdims%i_end,                  &amp;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                            qdims%j_start:qdims%j_end,                  &amp;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                            q_levelsda) )</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, q_levelsda</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;          <span class="keywordflow">Do</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;            <span class="keywordflow">Do</span> i= qdims%i_start, qdims%i_end</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;              int_p = (j-1) * row_length + i</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;              <span class="comment">! Copy input values into the work arrays</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;              q_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = q_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;              qcl_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = qcl_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;              qcf_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = qcf_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;              t_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = theta_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;              <span class="comment">! t_work is now theta before AC assimilation</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;              pc2_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = exner_layer_centres(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;              <span class="comment">! pc2_work is now exner before AC assimilation</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="keywordflow">            End Do</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="keywordflow">          End Do</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="keywordflow">      End If</span>  <span class="comment">! L_pc2 .and. (L_pc2_cond.or.L_pc2_cfl.or.L_pc2_cff)</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;      <span class="keywordflow">IF</span> (use_conv_in_mops) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;       <span class="keyword">CALL </span><a class="code" href="namespaceac__mod.xhtml#a1f3d4cd45ff537a30b428c4eb398234d">ac</a> (                                                         &amp;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;     &amp;   model_levels, wet_levels, row_length, rows, bl_levels,          &amp;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;     &amp;   a_max_obs_size, a_max_no_obs, theta_field_size,                 &amp;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;     &amp;   stepim(<a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a>), secs_per_stepim(<a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a>),                    &amp;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;     &amp;   exner_layer_centres, pstar,                                     &amp;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;     &amp;   p_layer_centres(1,1,1),                                         &amp;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;     &amp;   theta_star, q_star, qcl_star, qcf_star,                         &amp;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;     &amp;   <a class="code" href="namespaceac__diagnostics__mod.xhtml#af771db5d09e324487ca2df4ba12897ca">convcc</a>, <a class="code" href="namespaceac__diagnostics__mod.xhtml#a301c0a5b42a1abd13153976e50842fe1" title="This module is used to pass diagnostics from physics routines to the AC assimilation scheme...">lsrr</a>, <a class="code" href="namespaceac__diagnostics__mod.xhtml#a2ed4f550af2552ae1d8c0daa2194cce3">lssr</a>, <a class="code" href="namespaceac__diagnostics__mod.xhtml#a1d18118f19894ecc7de1822d3bb0f903">cvrr</a>, <a class="code" href="namespaceac__diagnostics__mod.xhtml#aa88062434097628c2ea3d06888cabda1">cvsr</a>,                                 &amp;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;     &amp;   <a class="code" href="namespaceac__diagnostics__mod.xhtml#a37117ac17fa53114a2da080c1178b153">cf_lsc</a>,work2,work, <a class="code" href="namespacecloud__inputs__mod.xhtml#aa78b4269f497a654e3b5b5c5ac866fcf">rhcrit</a>,                                      &amp;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;     &amp;   obs_flag,obs,                                                   &amp;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;     &amp;   stindex(1,1,18,im_index),                                       &amp;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;     &amp;   stlist, <a class="code" href="namespacetypstsz__mod.xhtml#afc9e413a1e99e61e593d489ea92db107" title="Sizes derived from STASHC file of UMUI/Rose job. Includes those sizes needed to dimension arrays in t...">len_stlist</a>, si(1,18,im_index), sf(1,18),                &amp;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;     &amp;   stashwork, stash_levels,                                        &amp;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;     &amp;   <a class="code" href="namespacetypstsz__mod.xhtml#a5a0231faa6b8ea777d308f0d8929b12b">num_stash_levels</a>, stash_pseudo_levels, <a class="code" href="namespacetypstsz__mod.xhtml#a72972ee66e046bccc7b39ee78280eedd">num_stash_pseudo</a>,        &amp;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;     &amp;  lambda_p,phi_p,l_regular,                                        &amp;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;     &amp;   icode, cmessage)</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;       <span class="keyword">CALL </span><a class="code" href="namespaceac__mod.xhtml#a1f3d4cd45ff537a30b428c4eb398234d">ac</a> (                                                         &amp;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;     &amp;   model_levels, wet_levels, row_length, rows, bl_levels,          &amp;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;     &amp;   a_max_obs_size, a_max_no_obs, theta_field_size,                 &amp;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;     &amp;   stepim(<a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a>), secs_per_stepim(<a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a>),                    &amp;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;     &amp;   exner_layer_centres, pstar,                                     &amp;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;     &amp;   p_layer_centres(1,1,1),                                         &amp;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;     &amp;   theta_star, q_star, qcl_star, qcf_star,                         &amp;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;     &amp;   work2, <a class="code" href="namespaceac__diagnostics__mod.xhtml#a301c0a5b42a1abd13153976e50842fe1" title="This module is used to pass diagnostics from physics routines to the AC assimilation scheme...">lsrr</a>, <a class="code" href="namespaceac__diagnostics__mod.xhtml#a2ed4f550af2552ae1d8c0daa2194cce3">lssr</a>, dummy_field, dummy_field,                    &amp;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;     &amp;   <a class="code" href="namespaceac__diagnostics__mod.xhtml#a37117ac17fa53114a2da080c1178b153">cf_lsc</a>,work2,work, <a class="code" href="namespacecloud__inputs__mod.xhtml#aa78b4269f497a654e3b5b5c5ac866fcf">rhcrit</a>,                                      &amp;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;     &amp;   obs_flag,obs,                                                   &amp;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;     &amp;   stindex(1,1,18,im_index),                                       &amp;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;     &amp;   stlist, <a class="code" href="namespacetypstsz__mod.xhtml#afc9e413a1e99e61e593d489ea92db107" title="Sizes derived from STASHC file of UMUI/Rose job. Includes those sizes needed to dimension arrays in t...">len_stlist</a>, si(1,18,im_index), sf(1,18),                &amp;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;     &amp;   stashwork, stash_levels,                                        &amp;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;     &amp;   <a class="code" href="namespacetypstsz__mod.xhtml#a5a0231faa6b8ea777d308f0d8929b12b">num_stash_levels</a>, stash_pseudo_levels, <a class="code" href="namespacetypstsz__mod.xhtml#a72972ee66e046bccc7b39ee78280eedd">num_stash_pseudo</a>,        &amp;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;     &amp;   lambda_p,phi_p,l_regular,                                       &amp;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;     &amp;   icode, cmessage)</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;      <span class="comment">! For PC2 we need to calculate the forcing values of qT and TL</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <span class="keywordflow">If</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#ae04fb44426849e3f308912a8311bb53b">l_pc2</a>) <span class="keywordflow">then</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        <span class="keywordflow">If</span> (l_pc2_cond .or. l_pc2_cfl .or. l_pc2_cff) <span class="keywordflow">then</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        <span class="keyword">Allocate</span> ( delta_q(qdims%i_start:qdims%i_end,                  &amp;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                             qdims%j_start:qdims%j_end,                  &amp;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                             q_levelsda) )</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        <span class="keyword">Allocate</span> ( delta_qcl(qdims%i_start:qdims%i_end,                  &amp;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                             qdims%j_start:qdims%j_end,                  &amp;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                             q_levelsda) )</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        <span class="keyword">Allocate</span> ( delta_qcf(qdims%i_start:qdims%i_end,                  &amp;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                             qdims%j_start:qdims%j_end,                  &amp;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                             q_levelsda) )</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        <span class="keyword">Allocate</span> ( delta_t(qdims%i_start:qdims%i_end,                  &amp;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                             qdims%j_start:qdims%j_end,                  &amp;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                             q_levelsda) )</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        <span class="keyword">Allocate</span> ( bulk_cloud_fraction(qdims%i_start:qdims%i_end,        &amp;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                             qdims%j_start:qdims%j_end,                  &amp;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                             q_levelsda)  )</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        <span class="keyword">Allocate</span> ( cloud_fraction_liquid(qdims%i_start:qdims%i_end,      &amp;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                                         qdims%j_start:qdims%j_end,      &amp;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                                         q_levelsda))</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        <span class="keyword">Allocate</span> ( cloud_fraction_frozen(qdims%i_start:qdims%i_end,      &amp;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                                         qdims%j_start:qdims%j_end,      &amp;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                                         q_levelsda))</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, q_levelsda</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;          <span class="keywordflow">Do</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;            <span class="keywordflow">Do</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;              int_p = (j-1) * row_length + i</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;              <span class="comment">! Calculate the increments across the AC scheme</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;              delta_q(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =  q_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - q_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;              delta_qcl(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =  qcl_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - qcl_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;              delta_qcf(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =  qcf_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - qcf_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;              <span class="comment">! t_work is currently theta before AC assimilation (K)</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;              delta_t(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =  exner_layer_centres(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)            &amp;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;     &amp;                         * (theta_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - t_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) )</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;              <span class="comment">! deltat is now change in temperature associated with</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;              <span class="comment">! AC assimilation minus the adiabatic contribution</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;              <span class="comment">! associated with the change in pressure. This last</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;              <span class="comment">! part is dealt with in pc2_pressure_ctl.</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;              <span class="comment">! Pc2_work currently contains exner before AC assim</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;              t_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =  pc2_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * t_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;              <span class="comment">! t_work now contains temperature before AC assimilation</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;              pc2_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =  0.0</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;              <span class="comment">! pc2_work now contains an array of zeros</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;              <span class="comment">! Now copy cloud fraction information from the prognostics</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;              <span class="comment">! arrays</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;              bulk_cloud_fraction(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = cf_bulk(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)              cloud_fraction_liquid(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = cf_liquid(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)              cloud_fraction_frozen(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = cf_frozen(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="keywordflow">            End Do</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="keywordflow">          End Do</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <span class="comment">! Now force condensation and cloud fraction updates.</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        <span class="comment">! PC2 is not set up for prognostic area_cloud_fraction.</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="comment">! DEPENDS ON: pc2_assim</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        <span class="keyword">Call </span><a class="code" href="pc2__assim_8f90.xhtml#afdbf8a6d6faad1e216dacd5728a21c6a" title="Cloud Scheme: Forcing due to advection (adiabatic cooling) ">pc2_assim</a>( secs_per_stepim(<a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a>), l_pc2_cfl, l_pc2_cff &amp;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;     &amp;,                 l_mixing_ratio                                  &amp;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;     &amp;,                 t_work(1,1,1), bulk_cloud_fraction(1,1,1)       &amp;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;     &amp;,                 cloud_fraction_liquid(1,1,1)                    &amp;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;     &amp;,                 cloud_fraction_frozen(1,1,1)                    &amp;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;     &amp;,                 q_work(1,1,1), qcl_work(1,1,1), qcf_work(1,1,1) &amp;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;     &amp;,              p_layer_centres(1:row_length,1:rows,1:q_levelsda)  &amp;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;     &amp;,                 delta_t(1,1,1), delta_q(1,1,1), delta_qcl(1,1,1)&amp;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;     &amp;,                 delta_qcf(1,1,1),pc2_work(1,1,1)                &amp;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;     &amp;                  )</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        <span class="comment">! q_work, qcl_work and t_work have now been updated by the</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        <span class="comment">! forcing and condensation terms together.</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        <span class="comment">! cloud_fraction_liquid (and _frozen and _bulk) has been</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        <span class="comment">! updated by the condensation. qcf_work and p_work are not</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        <span class="comment">! updated.</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        <span class="comment">! Now copy q_work, qcl_work and t_work variables back</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        <span class="comment">! into the inout variables if we haven&#39;t a confident</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        <span class="comment">! direct estimate of condensation from another source.</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        <span class="keywordflow">If</span> (l_pc2_cond) <span class="keywordflow">then</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;          <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> =             1, qdims%k_end</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;            <span class="keywordflow">Do</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;              <span class="keywordflow">Do</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                int_p = (j-1) * row_length + i</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                q_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = q_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                qcl_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = qcl_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                <span class="comment">! Remember the inout variable is theta, not temp.</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                theta_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = t_work(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                     &amp;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;     &amp;                              / exner_layer_centres(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="keywordflow">              End Do</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="keywordflow">            End Do</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="keywordflow">          End Do</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="keywordflow">        End If</span>  <span class="comment">! L_pc2_cond</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <span class="comment">! Update the D1 cloud fractions</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> =             1, qdims%k_end</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;          <span class="keywordflow">Do</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;            <span class="keywordflow">Do</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;              cf_bulk(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = bulk_cloud_fraction(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)              cf_liquid(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = cloud_fraction_liquid(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)              cf_frozen(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = cloud_fraction_frozen(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)<span class="keywordflow">            End Do</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="keywordflow">          End Do</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;          <span class="keywordflow">If</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#af2526dc522554e1852d2b801552264d8">l_cld_area</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;            <span class="keywordflow">If</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a6c812fb3aac239f0dedbc794d787ae46">l_acf_brooks</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;              <span class="keyword">Allocate</span> ( cf_bulk_nohalo(qdims%i_start:qdims%i_end,      &amp;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                                          qdims%j_start:qdims%j_end,      &amp;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                                                      1:qdims%k_end) )</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;              <span class="keyword">Allocate</span> ( cf_liquid_nohalo(qdims%i_start:qdims%i_end,      &amp;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                                          qdims%j_start:qdims%j_end,      &amp;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                                                      1:qdims%k_end) )</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;              <span class="keyword">Allocate</span> ( cf_frozen_nohalo(qdims%i_start:qdims%i_end,      &amp;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                                          qdims%j_start:qdims%j_end,      &amp;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                                                      1:qdims%k_end) )</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;              i_start = 1</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;              i_end = row_length</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;              j_start = 1</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;              j_end = rows</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;              <span class="keywordflow">If</span> (model_domain  ==  mt_lam) <span class="keywordflow">Then</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                <span class="keywordflow">If</span>(at_extremity(psouth)) j_start = 2</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                <span class="keywordflow">If</span>(at_extremity(pnorth)) j_end = rows-1</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                <span class="keywordflow">If</span>(at_extremity(pwest)) i_start = 2</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                <span class="keywordflow">If</span>(at_extremity(peast)) i_end = row_length-1</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="keywordflow">              End If</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;              <span class="keywordflow">If</span> (model_domain  ==  mt_cyclic_lam) <span class="keywordflow">Then</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                <span class="keywordflow">If</span> (at_extremity(psouth)) j_start = 2</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                <span class="keywordflow">If</span> (at_extremity(pnorth)) j_end = rows-1</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="keywordflow">              End If</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;<span class="comment">! Place bulk, liquid and frozen cloud fractions in halo-free arrays</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;              <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, qdims%k_end</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                <span class="keywordflow">Do</span> j = j_start, j_end</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                  <span class="keywordflow">Do</span> i = i_start, i_end</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                    ji = i+halo_i + (j+halo_j-1) * (row_length+2*halo_i)</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                    cf_bulk_nohalo(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  = cf_bulk(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                    cf_liquid_nohalo(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)= cf_liquid(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                    cf_frozen_nohalo(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)= cf_frozen(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="keywordflow">                  End Do</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="keywordflow">                End Do</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="keywordflow">              End Do</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="comment">! DEPENDS ON: ls_acf_brooks</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;              <span class="keyword">Call </span><a class="code" href="ls__acf__brooks_8f90.xhtml#a63af0c69b0ce0df3b5570af35c2035df" title="Subroutine Interface: ">ls_acf_brooks</a> (                                      &amp;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;                   <a class="code" href="namespacecderived__mod.xhtml#a2e96e1b74dc2d27fb6baafa3c407c93d">delta_lambda</a>, <a class="code" href="namespacecderived__mod.xhtml#ad299e07a2af8bbfea02242c74bd9b870">delta_phi</a>                              &amp;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;                  ,fv_cos_theta_latitude                                &amp;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;                  ,cf_bulk_nohalo, cf_liquid_nohalo                     &amp;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;                  ,cf_frozen_nohalo, cumulus                            &amp;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;                  ,cf_area )</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;              <span class="keyword">Deallocate</span> ( cf_bulk_nohalo )</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;              <span class="keyword">Deallocate</span> ( cf_liquid_nohalo )</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;              <span class="keyword">Deallocate</span> ( cf_frozen_nohalo )</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="keywordflow">            End If</span> <span class="comment">! L_ACF_Brooks</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="keywordflow">          End If</span> <span class="comment">! L_cld_area</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        <span class="comment">! Now deallocate the arrays</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;        <span class="keyword">Deallocate</span>(q_work  )</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        <span class="keyword">Deallocate</span>(qcl_work)</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;        <span class="keyword">Deallocate</span>(qcf_work)</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;        <span class="keyword">Deallocate</span>(t_work  )</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;        <span class="keyword">Deallocate</span>(pc2_work)</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;        <span class="keyword">Deallocate</span>(delta_q  )</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        <span class="keyword">Deallocate</span>(delta_qcl)</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        <span class="keyword">Deallocate</span>(delta_qcf)</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;        <span class="keyword">Deallocate</span>(delta_t  )</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;        <span class="keyword">Deallocate</span>(bulk_cloud_fraction  )</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;        <span class="keyword">Deallocate</span>(cloud_fraction_liquid)</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;        <span class="keyword">Deallocate</span>(cloud_fraction_frozen)</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="keywordflow">        End If</span> <span class="comment">!  L_pc2_cond.or.L_pc2_cfl.or.L_pc2_cff</span></div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;      <span class="keywordflow">Else</span>  <span class="comment">! L_pc2</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="comment">!  2.1 call cloud scheme to &#39;rebalance&#39; thermodynamic fields</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;<span class="comment">!  calculate Tl and qt</span></div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;         <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=1,q_levels</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;           <span class="keywordflow">Do</span> j = tdims%j_start, tdims%j_end</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;             <span class="keywordflow">Do</span> i = tdims%i_start, tdims%i_end</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;               int_p = (j-1) * row_length + i</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;               theta_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = theta_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)*               &amp;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;     &amp;             exner_layer_centres(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - lcrcp*qcl_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;               q_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = q_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + qcl_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="keywordflow">             End Do</span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;<span class="keywordflow">           End Do</span></div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;<span class="keywordflow">         End Do</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="comment">! set up some arguments for ls_cld</span></div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;      rhc_row_length = 1</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;      rhc_rows       = 1</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, q_levelsda</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;          <span class="keywordflow">Do</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;            <span class="keywordflow">Do</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;              bulk_cloud_nohalo(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = cf_bulk(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)<span class="keywordflow">            End Do</span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="keywordflow">          End Do</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, q_levels</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        rhcpt(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = <a class="code" href="namespacecloud__inputs__mod.xhtml#aa78b4269f497a654e3b5b5c5ac866fcf">rhcrit</a>(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;<span class="comment">! Determine number of sublevels for vertical gradient area cloud</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;<span class="comment">! Want an odd number of sublevels per level: 3 is hardwired in do loops</span></div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        levels_per_level = 3</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        large_levels = ((q_levels - 2)*levels_per_level) + 2</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="comment">! DEPENDS ON: ls_arcld</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;        <span class="keyword">CALL </span><a class="code" href="ls__arcld_8f90.xhtml#a93d82ad6f454b35ff21cb20a6eff42d6" title="Large-scale Area (Vertical Gradient) Cloud Scheme. ">ls_arcld</a>( p_layer_centres,rhcpt(:,:,1:q_levels),           &amp;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;                       p_layer_boundaries,                              &amp;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;                       rhc_row_length, rhc_rows, bl_levels,             &amp;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;                       levels_per_level, large_levels,                  &amp;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                       <a class="code" href="namespacecloud__inputs__mod.xhtml#af2526dc522554e1852d2b801552264d8">l_cld_area</a>,<a class="code" href="namespacecloud__inputs__mod.xhtml#a0beb50d23fbd057bc3ebb23973490bbf">l_acf_cusack</a>,<a class="code" href="namespacecloud__inputs__mod.xhtml#a6c812fb3aac239f0dedbc794d787ae46">l_acf_brooks</a>,            &amp;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                       <a class="code" href="namespacecderived__mod.xhtml#a2e96e1b74dc2d27fb6baafa3c407c93d">delta_lambda</a>, <a class="code" href="namespacecderived__mod.xhtml#ad299e07a2af8bbfea02242c74bd9b870">delta_phi</a>,                         &amp;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;                       fv_cos_theta_latitude,                           &amp;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                       ntml, cumulus, l_mixing_ratio,                   &amp;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                       qcf_star(:,1:),theta_star(:,1:), q_star(:,1:),   &amp;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                       qcl_star(:,1:),                                  &amp;</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                       cf_area(:,:,1:), bulk_cloud_nohalo(:,:,1:),      &amp;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                       work2(:,1:), work(:,1:),                         &amp;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;                       error)</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;        <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> =             1, qdims%k_end</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;          <span class="keywordflow">Do</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;            <span class="keywordflow">Do</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;              cf_bulk(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = bulk_cloud_nohalo(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)<span class="keywordflow">            End Do</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;<span class="keywordflow">          End Do</span></div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;<span class="comment">! &quot;1.24.4&quot;  convert t back to theta</span></div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;         <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=1,q_levels</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;           <span class="keywordflow">Do</span> j = tdims%j_start, tdims%j_end</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;             <span class="keywordflow">Do</span> i = tdims%i_start, tdims%i_end</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;               int_p = (j-1) * row_length + i</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;               theta_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = theta_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)/               &amp;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;     &amp;                         exner_layer_centres(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;<span class="keywordflow">             End Do</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="keywordflow">           End Do</span></div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="keywordflow">         End Do</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;<span class="keywordflow">      End If</span>  <span class="comment">! L_pc2</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="comment">!  copy back theta_star into theta_star_inc_halo</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;      <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> =             1, tdims%k_end</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;        <span class="keywordflow">Do</span> j = tdims%j_start, tdims%j_end</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;          <span class="keywordflow">Do</span> i = tdims%i_start, tdims%i_end</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;            int_p = (j-1) * row_length + i</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;            theta_star_inc_halo(i,j,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = theta_star(int_p,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;<span class="keywordflow">          End Do</span></div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;<span class="keywordflow">      End Do</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacenlstcall__mod.xhtml#ab4f74e5820852a02850463f38b181c64">ltimer</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;<span class="comment">! DEPENDS ON: timer</span></div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;          <span class="keyword">CALL </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a>(<span class="stringliteral">&#39;AC      &#39;</span>, 4)</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160; 9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;AC_CTL&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="namespaceac__ctl__mod.xhtml#ad9b0579e33ec2ee1b36e3d11b5386b72">ac_ctl</a></div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceac__ctl__mod.xhtml" title="LL Subroutine AC_CTL -!&gt;LL. ">ac_ctl_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
