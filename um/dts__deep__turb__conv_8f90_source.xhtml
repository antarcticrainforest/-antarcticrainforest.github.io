<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/dts_deep_turb_conv.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">dts_deep_turb_conv.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="dts__deep__turb__conv_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="dts__deep__turb__conv_8f90.xhtml#a9563c03a0f1aff651a0a0e21deb27898" title="Deep turbulent convection scheme. ">deep_turb_conv</a>(                                                    &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;         ! Intent IN</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;           call_number, nbl, nlev, n_cca_lev, ntra, n_dp, trlev               &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;         , ntml, ntpar, freeze_lev                                            &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;         , l_calc_dxek,l_q_interact,l_tracer                                  &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;         , land_mask                                                          &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;         , timestep, pstar, p_layer_centres, p_layer_boundaries               &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;         , exner_layer_centres, exner_layer_boundaries, z_theta               &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;         , z_rho, dr_across_th, dr_across_rh, rho, rho_theta                  &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;         , r_rho, r_theta, r2rho, r2rho_th                                    &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;         , qse, theta, q, qcl, qcf, bulk_cf, cf_frozen, cf_liquid             &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;         , u, v, w                                                            &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;         , uw0, vw0, rhowqt, sensible_heat                                    &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;         , zlcl, zlcl_uv, wth0, wq0, wstar, wthvs, q1_sd, t1_sd               &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;         , w_max                                                              &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;         ! Intent INOUT</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;         , tracer                                                             &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;         ! Intent OUT</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;         , kterm, iccb, icct                                                  &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;         , dthbydt, dqbydt, dqclbydt, dqcfbydt, dbcfbydt                      &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;         , dcffbydt, dcflbydt, dubydt, dvbydt, dtrabydt                       &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;         , rain, snow, rain_3d, snow_3d, up_flux, cca_2d, cca                 &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;         , ccw, cclwp                                                         &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;         , uw_deep, vw_deep, mb_deep )</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="dts__deep__turb__conv_8f90.xhtml#a9563c03a0f1aff651a0a0e21deb27898">   32</a></span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: lc, lf, tm</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: cp, c_virtual, r</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__run__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_run_mod</a><span class="keywordtype">,  ONLY</span>:                                                        &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#a9fa9c42ad2da411d2451fd13fbf43514">l_mom</a>, <a class="code" href="namespacecv__run__mod.xhtml#abef8ec13b6027ae6bfa52c19a2415e4f">deep_cmt_opt</a>, <a class="code" href="namespacecv__run__mod.xhtml#a002d5db81c3dd179df9ea3583793ac5e">cca2d_dp_opt</a>, <a class="code" href="namespacecv__run__mod.xhtml#a30a740b68ae78a60151a732d22ad24ab">cca_dp_knob</a>, <a class="code" href="namespacecv__run__mod.xhtml#abbec708342cffae2fd3abdf28ef705b5">ccw_dp_knob</a>, <a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a>,     &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#af3aff8585bb16fdc7cddc62da16fd0d7">l_3d_cca</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">USE </span>dts_fitpars_mod<span class="keywordtype">, ONLY</span>:                                                    &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;   tcritplume</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__param__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_param_mod</a><span class="keywordtype">, ONLY</span>:                                                       &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;   <a class="code" href="namespacecv__param__mod.xhtml#a8a8a9a985cdf804a423ddeafae298314">a_land</a>, <a class="code" href="namespacecv__param__mod.xhtml#a1f614d73a959e9e1cbee1daa29b1a1eb">a_sea</a>, <a class="code" href="namespacecv__param__mod.xhtml#aa50b7855dc3ad1a2deb9ead97c863ae5">b_land</a>, <a class="code" href="namespacecv__param__mod.xhtml#a1fb7bc3614f110ce2c0a4faf1c2ff6cb">b_sea</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g, earth_radius</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacedts__tracerflux__mod.xhtml">dts_tracerflux_mod</a><span class="keywordtype">, ONLY</span>:                                                 &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;   <a class="code" href="namespacedts__tracerflux__mod.xhtml#a5a0a3fd540aef1a453a25e80f03dd521" title="calculate the tracer flux ">dts_tracerflux</a></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  call_number          &amp; <span class="comment">! Sweep number for convection</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; ,nbl                  &amp; <span class="comment">! No. of boundary layer levels</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; ,nlev                 &amp; <span class="comment">! No. of model layers</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; ,n_cca_lev            &amp; <span class="comment">! No. of convective cloud levels</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; ,ntra                 &amp; <span class="comment">! No. of tracer fields</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; ,n_dp                 &amp; <span class="comment">! No. of deep convection points</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; ,trlev                  <span class="comment">! No. of model levels on which tracers are included</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                         <span class="comment">! (may be able to assume this is nlev?)</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  ntml(n_dp)           &amp; <span class="comment">! Top level of surface mixed layer defined relative</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                         <span class="comment">! to theta,q grid (conv_diag)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; ,ntpar(n_dp)          &amp; <span class="comment">! Top level of initial parcel ascent calculated by</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                         <span class="comment">!  conv_diag</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; ,freeze_lev(n_dp)       <span class="comment">! Level index for freezing level</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;  l_calc_dxek          &amp; <span class="comment">!</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; ,l_q_interact         &amp; <span class="comment">!</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; ,l_tracer               <span class="comment">! .true. if tracers present</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;  land_mask(n_dp)        <span class="comment">! Land/sea mask .true. if land</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    ::  &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  timestep              &amp; <span class="comment">! Model timestep for convection (s)</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; ,pstar(n_dp)             <span class="comment">! Surface pressure (Pa)</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    ::                &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  exner_layer_centres(n_dp,0:nlev)    &amp; <span class="comment">! Exner at theta levels</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; ,exner_layer_boundaries(n_dp,0:nlev) &amp; <span class="comment">! Exner at u,v levels</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; ,p_layer_centres(n_dp,0:nlev)        &amp; <span class="comment">! Pressure(Pa) at theta levels</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; ,p_layer_boundaries(n_dp,0:nlev)     &amp; <span class="comment">! Pressure  at uv(Pa)</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; ,z_theta(n_dp,nlev)                  &amp; <span class="comment">! height of theta levels(m)</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; ,z_rho(n_dp,nlev)                    &amp; <span class="comment">! height of rho levels (m)</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; ,dr_across_th(n_dp,nlev)             &amp; <span class="comment">! thickness of theta levels (m)</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; ,dr_across_rh(n_dp,nlev)             &amp; <span class="comment">! thickness of rho levels (m)</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; ,rho(n_dp,nlev)                      &amp; <span class="comment">! density on rho levels (kg/m3)</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; ,rho_theta(n_dp,nlev)                &amp; <span class="comment">! density on theta levels (kg/m3)</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; ,r_rho(n_dp,nlev)                    &amp; <span class="comment">! Radius rho levels (m)</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; ,r_theta(n_dp,0:nlev)                &amp; <span class="comment">! Radius theta levels (m)</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; ,r2rho(n_dp,nlev)                    &amp; <span class="comment">! r**2*density rho levels  (kg/m)</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; ,r2rho_th(n_dp,nlev)                   <span class="comment">! r**2*density theta levels (kg/m)</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;     <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::     &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  qse(n_dp,nlev)          <span class="comment">! Saturation mixing ratio of environment (kg/kg)</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">! prognostics</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::  &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  theta(n_dp,nlev)   &amp;   <span class="comment">! Model potential temperature (K)</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; ,q(n_dp,nlev)       &amp;   <span class="comment">! Model mixing ratio  (kg/kg)</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; ,qcl(n_dp,nlev)     &amp;   <span class="comment">! Liq condensate mix ratio (kg/kg)</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; ,qcf(n_dp,nlev)         <span class="comment">! Ice condensate mix ratio (kg/kg)</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">! Other PC2 prognostics  (qcl and qcf need to be updated if PC2)</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::    &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  bulk_cf(n_dp,nlev)   &amp;  <span class="comment">! Bulk total cloud volume ( )</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; ,cf_frozen(n_dp,nlev) &amp;  <span class="comment">! Frozen water cloud volume</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; ,cf_liquid(n_dp,nlev)    <span class="comment">! Liq water cloud volume</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="comment">! windsREAL, INTENT(IN)    :: &amp;</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  u(n_dp,nlev)         &amp;  <span class="comment">!Model U field (m/s) on pgrid horizontally</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; ,v(n_dp,nlev)         &amp;  <span class="comment">!Model V field (m/s) on pgrid horizontally</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; ,w(n_dp,nlev)            <span class="comment">!Model W field (m/s)</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">! From BL scheme caled before convection</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: &amp;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  uw0(n_dp)            &amp;  <span class="comment">! U-comp of surface stress (N/m2)</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; ,vw0(n_dp)            &amp;  <span class="comment">! V-comp of surface stress (N/m2)</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; ,rhowqt(n_dp)         &amp;  <span class="comment">! surface moisture flux rho*wqt (kg/m2/s)</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; ,sensible_heat(n_dp)  &amp;  <span class="comment">! surface sensible heat flux cp*rho*w&#39;tl&#39;(W/m2)</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; ,zlcl(n_dp)           &amp;  <span class="comment">! Lifting condensation level from conv_diag (m)</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; ,zlcl_uv(n_dp)        &amp;  <span class="comment">! Lifting condensation level for uv grid (m)</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; ,wth0(n_dp)           &amp;  <span class="comment">! ftl(dpi(j))/rho(dpi(j),1)/cp</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; ,wq0(n_dp)            &amp;  <span class="comment">! fqt(dpi(j))/rho(dpi(j),1)</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; ,wstar(n_dp)          &amp;  <span class="comment">! Convective velocity scale</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                          <span class="comment">! (m/s) (sub cloud) COMES from BL</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; ,wthvs(n_dp)          &amp;  <span class="comment">! Surface flux of wthv (Km/s)</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; ,q1_sd(n_dp)          &amp;  <span class="comment">! Standard deviation of turbulent flucts.</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                          <span class="comment">! of layer 1 q (kg/kg)</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; ,t1_sd(n_dp)          &amp;  <span class="comment">! Standard deviation of turbulent flucts.</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                          <span class="comment">! of layer 1temp. (K)</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; ,w_max(n_dp)             <span class="comment">! maximun w in column (m/s)</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">! Tracers  - no information on type just number ntra!            all processed in the same way - i.e. transported</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::    &amp;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  tracer(n_dp,trlev,ntra)   <span class="comment">!Model tracer fields (kg/kg)</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: &amp;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  kterm(n_dp)           &amp; <span class="comment">! Actual termination level of deep convection  ,iccb(n_dp)            &amp; ! Convective cloud base level number ,icct(n_dp)              ! Convective cloud top level number</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::    &amp;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  dthbydt(n_dp,nlev)    &amp; <span class="comment">! Increments to potential temp. due to convection(K/s)</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; ,dqbydt(n_dp,nlev)     &amp; <span class="comment">! Increments to q due to convection (kg/kg/s)</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">! If PC2 then also increments to cloud prognostics</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; ,dqclbydt(n_dp,nlev)   &amp; <span class="comment">! Increments to liq condensate due to                          ! convection (kg/kg/s)</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; ,dqcfbydt(n_dp,nlev)   &amp; <span class="comment">! Increments to ice condensate due to</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                          <span class="comment">! convection (kg/kg/s)</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; ,dbcfbydt(n_dp,nlev)   &amp; <span class="comment">! Increments to total cld volume due to convection(/s)</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; ,dcffbydt(n_dp,nlev)   &amp; <span class="comment">! Increments to ice cloud volume due to convection(/s)</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; ,dcflbydt(n_dp,nlev)   &amp; <span class="comment">! Increments to liq cloud volume due to convection(/s)</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">! If CMT</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; ,dubydt(n_dp,nlev+1)   &amp; <span class="comment">! Increments to U due to CMT (m/s2)</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; ,dvbydt(n_dp,nlev+1)   &amp; <span class="comment">! Increments to V due to CMT (m/s2)</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">! If tracers ,dtrabydt(n_dp,nlev,ntra) !Increment to tracer due to convection (kg/kg/s)</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">! Diagnostics</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::    &amp;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  rain(n_dp)            &amp; <span class="comment">! Surface convective rainfall (kg/m2/s)</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; ,snow(n_dp)            &amp; <span class="comment">! Surface convective snowfall (kg/m2/s)</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; ,cca_2d(n_dp)            <span class="comment">! 2d convective cloud amount</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">! Desirable / essential for aviation - convection cloud information</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">! Currently being set if not PC2</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::    &amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  cca(n_dp,n_cca_lev)   &amp; <span class="comment">! Convective cloud amount on model levels ,ccw(n_dp,nlev)        &amp; ! Convective cloud condensate on model levels (g/kg)</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; ,cclwp(n_dp)             <span class="comment">! Condensed water path (kg/m2) Integrated ccw field.</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">! Desirable for UKCA - some form of rain /snow precipitation profile</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">!                      CURRENTLY set to zero</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::    &amp;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  rain_3d(n_dp,nlev)    &amp; <span class="comment">! Convective rainfall flux (kg/m2/s)</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160; ,snow_3d(n_dp,nlev)      <span class="comment">! Convective snowfall flux (kg/m2/s)</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">! What else does the scheme produce that we would like as diagnostics?</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::    &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  up_flux(n_dp,nlev)      <span class="comment">! Updraught mass flux (Pa/s for diag output)</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                          <span class="comment">! units here kg/m2/s (*g to get diag output).</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">! From CMT scheme</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::    &amp;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  uw_deep(n_dp,nlev)    &amp; <span class="comment">! X-comp. of stress from deep convection(kg/m/s2)</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; ,vw_deep(n_dp,nlev)      <span class="comment">! Y-comp. of stress from deep convection(kg/m/s2)</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;     <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::    &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  mb_deep(n_dp)           <span class="comment">! cloud base mass flux in Pa/s</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      </div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">! Variables defined locally</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keywordtype">INTEGER</span> ::         &amp;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  i,k,j,i_dp        <span class="comment">! loop counters</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keywordtype">INTEGER</span> ::         &amp;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  one              &amp; <span class="comment">! integer = 1</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; ,icallmicro       &amp; <span class="comment">! ==1 calls micro</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; ,iusegradq        &amp; <span class="comment">!   ,ntparmax         &amp; ! Max ntpar across all conv points</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; ,kdo              &amp; <span class="comment">! level below ,kup                ! level above</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keywordtype">INTEGER</span> ::           &amp;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  km40(n_dp)         &amp; <span class="comment">! level identifiers</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; ,km40m(n_dp)        &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; ,km40p(n_dp)        &amp;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; ,kfrm(n_dp)         &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; ,kfrp(n_dp)         &amp;   ,klcl(n_dp)         &amp; <span class="comment">! Theta Level corresponding to zlcl</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; ,klclm(n_dp)        &amp; <span class="comment">! Theta Level corresponding to zlcl -1</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160; ,klclp(n_dp)        &amp; <span class="comment">! Theta Level corresponding to zlcl +1</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; ,ktop(n_dp)         &amp; <span class="comment">! Theta Level corresponding to ztop</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160; ,ktopm(n_dp)        &amp; <span class="comment">! Theta Level corresponding to ztop -1</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; ,ktopp(n_dp)        &amp; <span class="comment">! Theta Level corresponding to ztop +1</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; ,k_ad(n_dp)         &amp;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; ,k_adm(n_dp)        &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; ,k_adp(n_dp)        &amp;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; ,iconvclass(n_dp)   &amp; <span class="comment">! what type of convection is it?</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; ,dts_ntpar(n_dp)    &amp; <span class="comment">! ntpar calc&#39;d from dts_cape program</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; ,dts_ntpardum(n_dp)   <span class="comment">!dummy variable</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keywordtype">REAL</span> ::                   &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  cape_below_fr(n_dp)     &amp; <span class="comment">! cape up to freezing level / J/kg</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160; ,cape_below_frdum(n_dp)  &amp; <span class="comment">! cape up to freezing level / J/kg</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; ,cape_whole_layer(n_dp)  &amp; <span class="comment">! cape for whole layer / J/kg</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; ,cape_above_fr(n_dp)     &amp; <span class="comment">! cape above freezing level / J/kg</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; ,cin(n_dp)               &amp; <span class="comment">! convective inhibition / J/kg</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160; ,cinabove(n_dp)          &amp; <span class="comment">! convective inhibition / J/kg</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; ,ql_ad(n_dp)             &amp; <span class="comment">! adiabatic liquid water content at</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                            <span class="comment">! height of max buoy excess / kg/kg</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; ,ql_addum(n_dp)          &amp; <span class="comment">! adiabatic liquid water content dummy</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; ,h_ad(n_dp)              &amp; <span class="comment">! height of max buoy excess / m ,h_addum(n_dp)           &amp; ! dummy height of max buoy excess / m ,diffmax(n_dp)           &amp;</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160; ,diffmaxdum(n_dp)        &amp;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; ,mb(n_dp)                &amp; <span class="comment">! mass flux at cloud base</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; ,mfr(n_dp)               &amp; <span class="comment">! mass flux at freezing level</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; ,w2lcl(n_dp)             &amp; <span class="comment">! velocity variance at the lcl</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; ,wcld(n_dp)              &amp; <span class="comment">! vel scale for conv layer</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; ,wfr(n_dp)               &amp; <span class="comment">! vel scale above freez level</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160; ,wall(n_dp)              &amp; <span class="comment">! vel scale for whole layer</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; ,cstar(n_dp)             &amp; <span class="comment">! scale for c-e = mb*ql_ad/(h_ad-zlcl)</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; ,sigma(n_dp)             &amp; <span class="comment">! cloud base fractional area</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; ,qrainmax(n_dp)          &amp; <span class="comment">! scaling param for max rain amount</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; ,qsatsurf(n_dp)          &amp; <span class="comment">! qsat at the surface</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; ,qvatfr(n_dp)            &amp; <span class="comment">! q at freezing level</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160; ,zfr(n_dp)               &amp; <span class="comment">! height of fr lev (intepolated)</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; ,zm40(n_dp)              &amp; <span class="comment">! height of -40degC (intepolated)</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160; ,ztop(n_dp)              &amp; <span class="comment">! z_theta(ntpar)</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; ,zlcl_cape(n_dp)         &amp; <span class="comment">! lcl from cape routine -- not as good</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160; ,zlcl_dum(n_dp)          &amp; <span class="comment">! dummy lcl variable</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; ,t40(1)                    <span class="comment">! value -40degC</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordtype">REAL</span> ::                   &amp;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  temperature(n_dp,nlev)  &amp; <span class="comment">! temperature in K</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160; ,qsat_moist_ad(n_dp,nlev)&amp; <span class="comment">! qsat along parcel ascent</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; ,qsat_moist_addum(n_dp,nlev)&amp; <span class="comment">! dummy qsat along parcel ascent</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; ,buoyfl(n_dp,nlev)       &amp; <span class="comment">! this is g/theta_v &lt;w&#39;theta_v&#39;&gt;</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160; ,wthv(n_dp,nlev)         &amp; <span class="comment">! theta_v flux</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160; ,wmse(n_dp,nlev)         &amp; <span class="comment">! mse flux ,wqv(n_dp,nlev)            ! qv flux</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keywordtype">REAL</span>  ::                        &amp;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  ww(n_dp,nlev)                 &amp; <span class="comment">! velocity variance</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160; ,wwrho(n_dp,nlev)              &amp; <span class="comment">! velocity variance on rho levs</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; ,massfl(n_dp,nlev)             &amp; <span class="comment">! mass flux from vel variance</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160; ,massfl_rho(n_dp,nlev)         &amp; <span class="comment">! mass flux from vel variance</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160; ,dthvdt_flux(n_dp,nlev)        &amp; <span class="comment">! theta_v increment due to flux</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160; ,dqhdt_flux(n_dp,nlev)         &amp; <span class="comment">! qh flux increment due to flux</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160; ,mse_withflux(n_dp,nlev)       &amp; <span class="comment">! new mse value once flux incs applied</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160; ,thetav_withflux(n_dp,nlev)    &amp; <span class="comment">!new theta_v once flux incs applied</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; ,thetav_fluxsmth(n_dp,nlev)    &amp; <span class="comment">!new theta_v once flux incs</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; ,dthvdt_smth(n_dp,nlev)        &amp; <span class="comment">!smoothing increment to theta_v                                  ! applied and smoothing applied</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160; ,wthv_smth(n_dp,nlev)          &amp; <span class="comment">!flux implied by smoothing</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; ,qhyd(n_dp,nlev)               &amp; <span class="comment">! hydrometeor content</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160; ,theta_withflux(n_dp,nlev)     &amp; <span class="comment">! new theta once flux incs applied ,q_withflux(n_dp,nlev)         &amp; ! new q once flux incs applied</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160; ,qsewat(n_dp,nlev)             &amp; <span class="comment">! qsat w r t water</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; ,condensation(n_dp,nlev)       &amp; <span class="comment">! condensation rate kg/kg/s</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160; ,deposition(n_dp,nlev)         &amp; <span class="comment">! deposition rate kg/kg/s</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160; ,sublimation(n_dp,nlev)        &amp; <span class="comment">! sublimation rate kg/kg/s</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160; ,evaporation(n_dp,nlev)          <span class="comment">! evaporation rate kg/kg/s</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keywordtype">REAL</span>   ::            &amp;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  depint(n_dp)       &amp; <span class="comment">! Integral of deposition</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; ,freezint(n_dp)     &amp; <span class="comment">! conversion terms</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160; ,condint(n_dp)      &amp; <span class="comment">! Integral of condensation</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160; ,qcfint(n_dp)       &amp; <span class="comment">! Integral of qcf</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160; ,qclint(n_dp)       &amp; <span class="comment">! Integral of qcl</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; ,subint(n_dp)       &amp; <span class="comment">! integral of sublimation</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160; ,meltint(n_dp)      &amp; <span class="comment">! integral of melting</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160; ,evapint(n_dp)      &amp;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160; ,revpint(n_dp)                <span class="keywordtype">REAL</span>   ::                     &amp;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  scalefac1(n_dp)             &amp;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; ,scalefac2(n_dp)             &amp;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160; ,scalefac3(n_dp)             &amp;               ,rainrate(n_dp)              &amp;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; ,snowrate(n_dp)              &amp;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160; ,starting_heights(n_dp)      &amp;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; ,pnbabove(n_dp)              &amp; <span class="comment">! level of neutral buoyancy from ascent</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                                <span class="comment">! starting at the freezing level</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160; ,pnb(n_dp)                     <span class="comment">! level of neutral buoyancy from ascent</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                                <span class="comment">! starting in the boundary layer</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="keywordtype">REAL</span>   ::                     &amp;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  melt(n_dp,nlev)             &amp;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; ,freeze(n_dp,nlev)           &amp;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160; ,rainprod(n_dp,nlev)         &amp;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160; ,snowprod(n_dp,nlev)         &amp;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160; ,revp(n_dp,nlev)             &amp;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160; ,storethvp(n_dp,nlev)        &amp; <span class="comment">! parcel virtual potential temperature</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160; ,storethvp_upper(n_dp,nlev)  &amp; <span class="comment">! parcel virtual pot temp</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; ,dthvdz_m(n_dp,nlev)         &amp;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160; ,dthvdz(n_dp,nlev)           &amp;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160; ,dqsedz(n_dp,nlev)           &amp;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; ,qcl_plume(n_dp,nlev)        &amp; <span class="comment">! plume qcl ,qcf_plume(n_dp,nlev)        &amp; ! plume qcf</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160; ,h1all(n_dp,nlev)</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keywordtype">REAL</span>   ::            &amp;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;  rtimestep          &amp;  <span class="comment">! 1/timestep         (/s)</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160; ,delp               &amp;  <span class="comment">! 1/layer depth in pressure (/Pa)</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160; ,th_excess          &amp;  <span class="comment">! theta excess for parcel</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160; ,frac               &amp;  <span class="comment">!</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160; ,qlcrit             &amp;  <span class="comment">! ql critical value for setting up plume water</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160; ,qlmin                 <span class="comment">! minimum water for plume</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keywordtype">REAL</span>   ::               &amp;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;  thetav(n_dp,nlev)     &amp; <span class="comment">! environment virtual pot temp</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160; ,mse(n_dp,nlev)          <span class="comment">! moist static energy</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="keywordtype">LOGICAL</span> ::      &amp;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;  l_increase      <span class="comment">!  </span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">! Local variables required for CMT</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160; <span class="keywordtype">INTEGER</span> ::        &amp;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;   cu_term(n_dp)      <span class="comment">! Index of columns actually DOing deep convection</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                      <span class="comment">! all true for this scheme.</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160; <span class="keywordtype">INTEGER</span> ::        &amp;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;   ncmt            &amp;  <span class="comment">! number of deep columns with non-zero wcld value</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;  ,icall              <span class="comment">! type of dts_capecall</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment">! required by water conservation check</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160; <span class="keywordtype">REAL</span> ::               &amp;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;   qMinInColumn(n_dp)  &amp;  <span class="comment">! Minimum value for q in column(kg/kg)</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;  ,temp1(n_dp)            <span class="comment">! work array</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160; <span class="keywordtype">REAL</span> ::               &amp;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;   r_a2                &amp;  <span class="comment">! radius of earth^2</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  ,dqt                 &amp;  <span class="comment">! change in total water</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;  ,dzdt                   <span class="comment">! dz/dt for checking CFL</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: qmin = 1.0e-8 <span class="comment">! Global minimum allowed Q</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160; <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160; <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160; <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">!  The model grid - as far as convection is concerned</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">!       _________________________</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="comment">!  !       - - - - - - - - - - - - -  &lt; Cloud top (ntpar+1)</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment">! ntpar _________________________</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">! /|\</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment">!  |    - - - - - - - - - - - - -!  |    _________________________</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">!  |</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment">!  |    - - - - - - - - - - - - -!  |    _________________________   theta(n), q(n),!  |</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">!  |    - - - - - - - - - - - - -   rho(n), u(n), v(n)!  |    _________________________</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">! \|/!       - - - - - - - - - - - - -  &lt; Cloud base (ntml+1) (LCL)</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment">! ntml  _________________________   ntml</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">!       - - - - - - - - - - - - -   ntml</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment">!       _________________________  theta(2), q(2), qcl(2),qcf(2), w(2) p_th(2)</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment">!       - - - - - - - - - - - - -  rho(2), u(2), v(2), p_rho(1)</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">!       _________________________  theta(1), q(1), qcl(1),qcf(1), w(1) p_th(1)</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">!       - - - - - - - - - - - - -  rho(1), u(1), v(1)</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="comment">!       _________________________</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="comment">!        / / / / / / / / / / / /       Surface    p_th(0), p_rho(0)      !</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment">! Note p_th  - short for p_layer_centres</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">!      p_rho - short for p layer boundaries</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">!     p_rho numbering is slightly odd but this is how it comes into!     convection. The original p field on rho levels has a value on rho!     level 1 but is not passed to convection.</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="comment">!  Cloud base defined as the lifting condensation level.</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment">!   ntml and ntpar are defined in conv_diag from a parcel ascent.</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">! parameters are a set of parameters for functions that define various things...</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">! include parameters.h</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">!=============================================================================</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment">!Switches</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160; <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;DEEP_TURB_CONV&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;iusegradq = 1  <span class="comment">! 1 for simple q flux, (0  for wthv and wmse method)</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;icallmicro = 1 <span class="comment">! this should be 1 for normal usage, 0 for debugging</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment">!Constants</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;one = 1</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">!================================================================</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment">! INITIALISING FIELDS SECTION</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="comment">! Ensure theta and q increments are zero at the beginning of this routine</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;dthbydt(:,:) = 0.0</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;dqbydt(:,:)  = 0.0</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment">! 1/timestep</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;rtimestep = 1.0/timestep</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">! Calculate the temperature from the potential temperature! nb isn&#39;t this done earlier?</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;  <span class="keywordflow">DO</span> i_dp=1,n_dp</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    temperature(i_dp,k) = theta(i_dp,k)*exner_layer_centres(i_dp,k)</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">! Interpolate to get height of freezing level</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">! nb may need to think about whether want the level height or the</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">! actual height -- and which to use in calc_buoy_flux, calc_w_variance</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="keywordflow">DO</span> i_dp=1,n_dp</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;  <span class="keywordflow">IF</span>(freeze_lev(i_dp) &lt; nlev) <span class="keywordflow">THEN</span>    <span class="keywordflow">IF</span>( (temperature(i_dp,freeze_lev(i_dp))  &gt;= tm .and.   &amp;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;         temperature(i_dp,freeze_lev(i_dp)+1) &lt; tm) .or.  &amp;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;      <span class="comment">! allowing for some inversion behaviour</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        (temperature(i_dp,freeze_lev(i_dp))  &lt;= tm .and.  &amp;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;         temperature(i_dp,freeze_lev(i_dp)+1) &gt; tm) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;      kdo = freeze_lev(i_dp)</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;      kup = freeze_lev(i_dp)+1</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;      kdo = freeze_lev(i_dp)-1</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;      kup = freeze_lev(i_dp)</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="keywordflow">IF</span>(kdo &lt;= 0) <span class="keywordflow">THEN</span>      kdo = 1</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;      kup = 2</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    zfr(i_dp) = z_theta(i_dp,kdo) +                       &amp;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                   (z_theta(i_dp,kup)-z_theta(i_dp,kdo))*           &amp;                   (temperature(i_dp,kdo)-tm)/                      &amp;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                   (temperature(i_dp,kdo)-temperature(i_dp,kup))</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    zfr(i_dp) = z_theta(i_dp,nlev) <span class="comment">! unlikely but protects code</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="keywordflow">  END IF</span>      <span class="comment">! test on freezing level</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="comment">! check to see whether the surface is a lower temperature than 0C</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="comment">! if so set zfr to zero</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;  <span class="keywordflow">IF</span>(temperature(i_dp,1) &lt; tm) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    zfr(i_dp) = 0.0</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;  kfrm(i_dp) = kdo</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;  kfrp(i_dp) = kup</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;       </div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="comment">! Now do the same for the -40degC level:! Temperature trying to locate height of:</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;t40(1) = tm-38. <span class="comment">!nb or should it actually be -38C?</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment">! Locate closest level</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;l_increase = .false. <span class="comment">! temperature decreases with height</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="comment">!DEPENDS ON: dts_locate_closest_levels</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="keyword">CALL </span><a class="code" href="dts__locate__closest__levels_8f90.xhtml#af6354b4248c84843ebe633cda7735c14" title="Locates the element of &#39;array&#39; that is closest to &#39;val&#39;. ">dts_locate_closest_levels</a>(n_dp,nlev,one,n_dp,l_increase,temperature,t40&amp;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                               ,km40,km40m,km40p)</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="keywordflow">DO</span> i_dp=1,n_dp</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;  <span class="keywordflow">IF</span>(temperature(i_dp,km40(i_dp)) &gt;= t40(one)) <span class="keywordflow">THEN</span>    kdo = km40(i_dp)</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    kup = km40(i_dp)+1</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    kdo = km40(i_dp)-1</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    kup = km40(i_dp)</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;  <span class="keywordflow">IF</span>(kdo &gt;= 1 .and. kup &lt;= nlev) <span class="keywordflow">THEN</span>    zm40(i_dp) = z_theta(i_dp,kdo) +                         &amp;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                (z_theta(i_dp,kup)-z_theta(i_dp,kdo))*              &amp;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                (temperature(i_dp,kdo)-t40(one))/                   &amp;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                (temperature(i_dp,kdo)-temperature(i_dp,kup))</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="comment">! Find level corresponding to zlcl</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;l_increase = .true. <span class="comment">! z_theta increases with height</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="comment">!DEPENDS ON: dts_locate_closest_levels</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="keyword">CALL </span><a class="code" href="dts__locate__closest__levels_8f90.xhtml#af6354b4248c84843ebe633cda7735c14" title="Locates the element of &#39;array&#39; that is closest to &#39;val&#39;. ">dts_locate_closest_levels</a>(n_dp,nlev,n_dp,n_dp,l_increase,z_theta,zlcl&amp;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                              ,klcl,klclm,klclp)</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="comment">! calculate qhyd -- take from large scale</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;qhyd(:,:) = qcf(:,:)+qcl(:,:)</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;-<span class="comment">! Calculate virtual theta profile -- this now doesn&#39;t include hydrometeor! loading</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;  <span class="keywordflow">DO</span> i_dp = 1,n_dp</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    thetav(i_dp,k) = theta(i_dp,k)*(1.0+c_virtual*q(i_dp,k)) <span class="comment">!nb-qhyd(i_dp,k))</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;   </div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="comment">! Calculate moist static energy here</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;  <span class="keywordflow">DO</span> i_dp=1,n_dp</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    mse(i_dp,k) = theta(i_dp,k)+q(i_dp,k)*lc/cp</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="comment">! Now set up a liquid water content for plumes</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="comment">!nb also calculated in dts_cape, could be made more efficient!</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;qcl_plume(:,:) = 0.0</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="comment">! variables for setting up the plume water content</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;qlcrit = 1.e-3 <span class="comment">! kg/kg</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;qlmin = 2.e-4  <span class="comment">! kg/kg</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;  <span class="keywordflow">DO</span> i_dp=1,n_dp</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="keywordflow">IF</span>(z_theta(i_dp,k) &gt; zlcl(i_dp)) <span class="keywordflow">THEN</span>       qcl_plume(i_dp,k) = 0.5*qse(i_dp,k)</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;      <span class="keywordflow">IF</span>(qcl_plume(i_dp,k) &gt; qlcrit) <span class="keywordflow">THEN</span>        qcl_plume(i_dp,k) = qlcrit</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;      <span class="keywordflow">IF</span>(qcl_plume(i_dp,k) &lt; qlmin) <span class="keywordflow">THEN</span>        qcl_plume(i_dp,k) = qlmin</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! z_theta(i_dp,k) &gt; zlcl(i_dp)</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="comment">! now determine in a crude way what fraction of the above is in fact ice and</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="comment">! what fraction liquid: if the environmental temperature is less</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="comment">! than -10C then turn it all into ice. Could improve on this!</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;  <span class="keywordflow">DO</span> i_dp=1,n_dp</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    <span class="keywordflow">IF</span>(temperature(i_dp,k) &lt; tm) <span class="keywordflow">THEN</span>      frac = (temperature(i_dp,k) - tm)/tcritplume</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;      <span class="keywordflow">IF</span>(frac &gt; 1.0) frac = 1.0</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                      qcf_plume(i_dp,k) = qcl_plume(i_dp,k)*(frac)      qcl_plume(i_dp,k) = qcl_plume(i_dp,k)*(1.0-frac)</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;      qcf_plume(i_dp,k) = 0.</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="comment">! find the saturation value of this initial parcel</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;qsewat(:,:) = qse(:,:)</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;      <span class="comment">!================================================================</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment">! SCALING PARAMETER SECTION</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="comment">! Calculation of scaling parameters</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="comment">! In this section we obtain the following parameters:</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="comment">! cape_lower = Undilute cape up to freezing level</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment">! qsat along a moist adiabat (a by-product of the cape calculation)</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment">! mb = Mass flux at cloud base</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="comment">! zm40 = height of -40deg</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment">! h_ad = height of maximum buoyancy excess for undilute parcel</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="comment">! cstar = mb*ql_ad/(h_ad-zlcl)</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;starting_heights(:) = zlcl(:)/2 <span class="comment">! was 200 m</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;th_excess = 0.0 <span class="comment">! K</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;icall=1</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="comment">! DEPENDS ON: dts_cape</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="keyword">CALL </span><a class="code" href="dts__cape_8f90.xhtml#aaccb53785717a4bb24853113699e46c8" title="Measure cape and related quantities for deep turbulence scheme. ">dts_cape</a>(n_dp,nlev,icall,                                             &amp;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;              q,theta,thetav,qcl,qcf,qse,                                  &amp;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;              p_layer_centres,                                             &amp;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;              p_layer_boundaries,exner_layer_centres,z_theta,              &amp;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;              rho_theta,zlcl_cape,zlcl,klcl,freeze_lev,starting_heights,   &amp;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;              th_excess,ntpar,dts_ntpar,                                   &amp;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;              cape_below_fr,cape_whole_layer,cin,                          &amp;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;              qsat_moist_ad,ql_ad,h_ad,diffmax,pnb,storethvp)</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;      <span class="comment">!   write(6,*) &#39; AFTER dts_cape or from conv_diag &#39;,n_dp</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;<span class="comment">!   write(6,*) &#39; ntml &#39;,(ntml(i),i=1,n_dp)</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="comment">!   write(6,*) &#39; ntpar &#39;,(ntpar(i),i=1,n_dp)</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="comment">!   write(6,*) &#39; dts_ntpar &#39;,(dts_ntpar(i),i=1,n_dp)</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment">!   write(6,*) &#39; cape_below_fr &#39;,(cape_below_fr(i),i=1,n_dp)</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="comment">!   write(6,*) &#39; cape_whole_layer &#39;,(cape_whole_layer(i),i=1,n_dp)</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment">!   write(6,*) &#39; cin &#39;,(cin(i),i=1,n_dp)</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="comment">!   write(6,*) &#39; ql_ad &#39;,(ql_ad(i),i=1,n_dp)</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="comment">!   write(6,*) &#39; h_ad &#39;,(h_ad(i),i=1,n_dp)</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="comment">!   write(6,*) &#39; diffmax &#39;,(diffmax(i),i=1,n_dp)</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="comment">!   write(6,*) &#39; pnb &#39;,(pnb(i),i=1,n_dp)</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="comment">!   DO k=1,20</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="comment">!     write(6,*) &#39; qsat_moist &#39;,k,(qsat_moist_ad(i,k),i=1,n_dp)</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="comment">!     write(6,*) &#39; storethvp &#39;,k,(storethvp(i,k),i=1,n_dp)    !   END DO</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="comment">! Work out heights of convection</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="comment">! Also find the maximum ntpar value so that loops over height can be shortened</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;ntparmax = 0</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="keywordflow">DO</span> i_dp = 1,n_dp</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;  ztop(i_dp) = z_theta(i_dp,dts_ntpar(i_dp))</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="comment">! Need cloud base and top level numbers output incase cca3d called in mid-level</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="comment">! scheme  icct(i_dp) = dts_ntpar(i_dp)</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;  iccb(i_dp) = ntml(i_dp)</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;  <span class="keywordflow">IF</span>(dts_ntpar(i_dp) &gt; ntparmax) ntparmax = dts_ntpar(i_dp)</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;       ktop(:)  = dts_ntpar(:) <span class="comment">! likely not to be necessary</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;ktopm(:) = dts_ntpar(:)</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;ktopp(:) = dts_ntpar(:)+1</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;l_increase = .true. <span class="comment">! z_theta increases with height</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        <span class="comment">!DEPENDS ON: dts_locate_closest_levels</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="keyword">CALL </span><a class="code" href="dts__locate__closest__levels_8f90.xhtml#af6354b4248c84843ebe633cda7735c14" title="Locates the element of &#39;array&#39; that is closest to &#39;val&#39;. ">dts_locate_closest_levels</a>(n_dp,nlev,n_dp,n_dp,l_increase, &amp;                               z_theta,h_ad,k_ad,k_adm,k_adp)</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="comment">! Now send up a parcel from the freezing level</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;starting_heights(:) = zfr(:) <span class="comment">! m</span></div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;th_excess = 0.5 <span class="comment">! K this is based on LES simulations theta</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;<span class="comment">! excess at freezing level (see frsx/Wave/thvpert.pro)</span></div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;icall=2</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="comment">! DEPENDS ON: dts_cape</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;<span class="keyword">CALL </span><a class="code" href="dts__cape_8f90.xhtml#aaccb53785717a4bb24853113699e46c8" title="Measure cape and related quantities for deep turbulence scheme. ">dts_cape</a>(n_dp,nlev, icall,                                            &amp;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                 q,theta,thetav,qcl,qcf,qse,p_layer_centres,               &amp;</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                p_layer_boundaries,exner_layer_centres,z_theta,            &amp;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                rho_theta,zlcl_dum,zlcl,klcl,freeze_lev,starting_heights,  &amp;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                th_excess,ntpar,dts_ntpardum,                              &amp;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                cape_below_frdum,cape_above_fr,cinabove,                   &amp;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                qsat_moist_addum,ql_addum,h_addum,diffmaxdum,              &amp;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                pnbabove,storethvp_upper)</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;<span class="comment">! final code</span></div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="comment">!Calculate a variety of scaling parameters:</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="comment">! mb, mfr, wcld, wfr, cstar, qrainmax,qsatsurf,qvatfr,sigma</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="comment">!DEPENDS ON: dts_flux_par</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="keyword">CALL </span><a class="code" href="dts__flux__par_8f90.xhtml#a73dcc5fcff3f2a7b66be8a71909bde5e" title="Calculate parameters used to scale the profiles. ">dts_flux_par</a>(n_dp,nlev,klcl,freeze_lev,km40,land_mask,                &amp;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                 q,qse,temperature,dr_across_th,                           &amp;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;                 zfr,w_max,zlcl,ztop,timestep,wstar,cape_below_fr,         &amp;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;                 cape_above_fr,cape_whole_layer,ql_ad,h_ad,                &amp;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;                 mb,mfr,w2lcl,wcld,wfr,wall,cstar,                         &amp;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;                 qrainmax,qsatsurf,qvatfr,sigma,scalefac1,scalefac2,scalefac3)</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;<span class="keywordflow">DO</span> i=1,n_dp</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;  mb_deep(i) = mb(i) *g *rho(i,ntml(i))</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;<span class="keywordflow">END DO</span> </div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="comment">!=============================================================</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="comment">! Work out what kind of convection it is -- ie where is the freezing</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="comment">! level relative to h_ad, zlcl</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;<span class="comment">! Not currently used, but may well need!DEPENDS ON: dts_conv_classify</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="keyword">CALL </span><a class="code" href="dts__conv__classify_8f90.xhtml#aaff25a9f950e606644a455a6a64ca083" title="Calculate the type of convection. ">dts_conv_classify</a>(n_dp,klclm,klclp,kfrm,kfrp,k_adm,k_adp              &amp;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                      ,ktopm,ktopp,zlcl,zfr,h_ad,ztop                      &amp;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                      ,iconvclass)</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;<span class="comment">!================================================================</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="comment">! FLUX CALCULATION SECTION</span></div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="comment">!================================================================</span></div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;       <span class="comment">! Calculation of the velocity variance and mass flux        ! There are two methods in this routine -- under a switch: iusetrans</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="comment">!DEPENDS ON: dts_w_variance</span></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="keyword">CALL </span><a class="code" href="dts__w__variance_8f90.xhtml#a9b0ee061b717a123668c4d397f629cb1" title="calculate the velocity variance from the transport term ">dts_w_variance</a>(iconvclass,n_dp,nlev,dts_ntpar,ntparmax,               &amp;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                    z_theta,z_rho,rho,rho_theta,zlcl,zfr,ztop,             &amp;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                    q,qse, diffmax,mb,mfr,w2lcl,wcld,wfr,wall,             &amp;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;                    scalefac1,scalefac2,scalefac3,thetav,storethvp,        &amp;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;                    ww,wwrho,massfl,massfl_rho)</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;up_flux(:,:) = rho_theta(:,:)*massfl(:,:)</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;<span class="comment">! First work out the moist adiabatic thetav gradient along with the</span></div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="comment">! actual thetav gradient</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;<span class="comment">!DEPENDS ON: dts_dthvdz</span></div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="keyword">CALL </span><a class="code" href="dts__dthvdz_8f90.xhtml#ae6f552ba4c9bea882bf8724f4e32a322" title="Calculates the gradient of thetav and the moist adiabatic thetav. ">dts_dthvdz</a>(n_dp,nlev,dts_ntpar,ntparmax                               &amp;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;                ,qse,exner_layer_centres,z_theta,dr_across_rh,thetav       &amp;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                ,storethvp,dthvdz,dthvdz_m,dqsedz)</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="comment">!DEPENDS ON: dts_wthv</span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;<span class="keyword">CALL </span><a class="code" href="dts__wthv_8f90.xhtml#a11e16e812506ed59d87b6654e6eb3079" title="applies a gradient term to the thetav profile at the freezing level ">dts_wthv</a>(n_dp,nlev,ntparmax,dts_ntpar,                                &amp;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;              z_theta,z_rho,dr_across_rh,dr_across_th,rho,rho_theta,       &amp;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;              ztop,zlcl,thetav,dthvdz,dthvdz_m,wwrho,timestep,             &amp;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;              wthv,dthvdt_flux)</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        <span class="comment">! Add the theta_v increment to theta_v</span></div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="comment">!DEPENDS ON: dts_update</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="keyword">CALL </span><a class="code" href="dts__update_8f90.xhtml#a690ca240a96e0b24e4304c2521c86672" title="applies increment dpdt to oldprof ">dts_update</a>(n_dp,nlev,dts_ntpar,ntparmax,                              &amp;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;                timestep,thetav,dthvdt_flux,thetav_withflux)</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;-<span class="comment">! Added 8/5/09</span></div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;<span class="comment">! This is a very simple approach in which the water vapour flux is</span></div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;<span class="comment">! calculated explicitly rather than derived from the wthv and</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;<span class="comment">! wmse fluxes. This is an attempt to get around small errors</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;<span class="comment">! in the wthv and wmse fluxes leading to large, unphysical</span></div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="comment">! increments in the water vapour field</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;<span class="comment">! iusegradq is recommended for the time being</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="keywordflow">IF</span>(iusegradq == 1) <span class="keywordflow">THEN</span>          <span class="comment">! Uses a very simple gradient formula for the water vapour flux, and</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;<span class="comment">! derive theta from difference between mse and q flux</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;  q_withflux(:,:) = q(:,:)</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;  <span class="comment">!DEPENDS ON: dts_qflux</span></div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;  <span class="keyword">CALL </span><a class="code" href="dts__qflux_8f90.xhtml#a1940450b07b67974397491373c330baf" title="Uses a very simple gradient formula for the water vapour flux, and. ">dts_qflux</a>(n_dp,nlev,dts_ntpar,ntparmax,z_theta,z_rho,rho            &amp;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;                  ,rho_theta,dr_across_rh,dr_across_th                     &amp;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                  ,wwrho,massfl,massfl_rho,wstar,theta                     &amp;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                  ,q,qsewat,zlcl,ztop,wq0,w2lcl,                           &amp;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                 timestep,wqv,q_withflux)</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;  theta_withflux(:,:) = thetav_withflux(:,:)/(1.0+c_virtual*q_withflux(:,:))</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;  <span class="comment">!DEPENDS ON: dts_mseflux</span></div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;  <span class="keyword">CALL </span><a class="code" href="dts__mseflux_8f90.xhtml#a24d06d0afaa6be9cbd7bd476691cb76e" title="calculate the mse flux ">dts_mseflux</a>(n_dp,nlev,dts_ntpar,ntparmax,                           &amp;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                 z_theta,z_rho,rho,rho_theta,dr_across_rh,dr_across_th,    &amp;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                 wwrho,                                                    &amp;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                 wstar,theta,q,mse,zlcl,klcl,ztop,wq0,wth0,timestep,       &amp;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;                 wmse,mse_withflux,h1all)</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;       </div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;  <span class="comment">!DEPENDS ON: dts_deduce_thetaandqv</span></div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;  <span class="keyword">CALL </span><a class="code" href="dts__deduce__thetaandqv_8f90.xhtml#abae97089df3288e15ac3e867caf90690" title="takes thv and mse as inputs and works out theta and qv ">dts_deduce_thetaandqv</a>(n_dp,nlev,k_ad,q,mse,thetav_withflux,         &amp;                 qhyd,mse_withflux,theta,                                  &amp;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;                 wmse,wthv,wthv_smth,                                      &amp;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;                 q_withflux,theta_withflux)</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;        </div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! iusegradq = 1 or not 1</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;<span class="comment">! Move tracers around in a similar way to mse</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="comment">! NB this is a guess about how they would behave, and could be improved</span></div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="comment">! on</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;<span class="keywordflow">IF</span>(l_tracer) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespacedts__tracerflux__mod.xhtml#a5a0a3fd540aef1a453a25e80f03dd521" title="calculate the tracer flux ">dts_tracerflux</a>(n_dp,nlev,trlev,ntra,dts_ntpar,ntparmax,                &amp;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;                      z_theta,z_rho,dr_across_rh,dr_across_th,rho,            &amp;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                      rho_theta,wwrho,wstar,tracer,zlcl,ztop,timestep,        &amp;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                      dtrabydt)</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;<span class="comment">! Now work backwards to deduce what the increment due to the fluxes</span></div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;<span class="comment">! should be (this will then have the microphysics terms added to them)</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;<span class="comment">! Includes boundary layer updates</span></div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;<span class="keywordflow">DO</span> k=1,ntparmax</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;  <span class="keywordflow">DO</span> i_dp=1,n_dp</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    <span class="keywordflow">IF</span>(k &lt;= dts_ntpar(i_dp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;      dthbydt(i_dp,k)=(theta_withflux(i_dp,k)-theta(i_dp,k))*rtimestep</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;      <span class="comment">! only apply subsidence term above the lcl</span></div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;      dqbydt(i_dp,k)=(q_withflux(i_dp,k)-q(i_dp,k))*rtimestep</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;      <span class="comment">!================================================================</span></div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;<span class="comment">! MICROPHYSICS SECTION</span></div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;<span class="comment">!================================================================</span></div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;<span class="comment">! Increments due to phase changes</span></div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;        <span class="keywordflow">IF</span>(icallmicro == 1) <span class="keywordflow">THEN</span>            <span class="comment">!DEPENDS ON: dts_cond_and_dep</span></div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;  <span class="keyword">CALL </span><a class="code" href="dts__cond__and__dep_8f90.xhtml#a3eeb53366a8aee067cd0ff2e0daaf3c0" title="calculates the condensation ">dts_cond_and_dep</a>(n_dp,nlev,ntparmax,dts_ntpar                         &amp;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;                        ,zlcl,zfr,rho,rho_theta,dr_across_rh,dr_across_th    &amp;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;                        ,qsat_moist_ad,qse,dqsedz,q                          &amp;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                        ,massfl_rho,temperature,z_theta,z_rho                &amp;</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;                        ,condensation,deposition,condint,depint)</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;        <span class="comment">! increment theta and q fields for condensation and deposition</span></div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;  <span class="keywordflow">DO</span> i_dp=1,n_dp</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <span class="keywordflow">DO</span> k=1,ntparmax</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;      <span class="keywordflow">IF</span>(z_theta(i_dp,k) &gt;= zlcl(i_dp) .and. k &lt;= dts_ntpar(i_dp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;        dthbydt(i_dp,k)= dthbydt(i_dp,k) +                                   &amp;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;               (condensation(i_dp,k)*lc/cp + deposition(i_dp,k)*(lc+lf)/cp)  &amp;</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;                                 / exner_layer_centres(i_dp,k)</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;        dqbydt(i_dp,k) = dqbydt(i_dp,k) -                                    &amp;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;                            (condensation(i_dp,k)+deposition(i_dp,k))</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;<span class="comment">! -!nb need to think carefully whether the freezing term is required</span></div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;<span class="comment">! given the deposition term above), currently switched off</span></div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;<span class="comment">! inside routine  i.e. freeze=0.0, freezint=0.0 in routine</span></div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;  freeze(:,:) = 0.0  freezint(:) = 0.0</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;<span class="comment">! Don&#39;t call routine as currently does nothing will save CPU</span></div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;<span class="comment">!  !DEPENDS ON: dts_freeze</span></div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;<span class="comment">!  CALL dts_freeze(nlev,n_dp,dts_ntpar,ntparmax,z_theta,zlcl,klcl,temperature &amp;</span></div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;<span class="comment">!                ,qrainmax,rho_theta,z_rho,freeze,freezint)</span></div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;<span class="comment">! update for freezing ! COMMENTED out as freeze is currently zero</span></div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;<span class="comment">!  DO k=1,ntparmax</span></div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;<span class="comment">!    DO i_dp=1,n_dp</span></div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;<span class="comment">!      IF(k &lt;= dts_ntpar(i_dp)) THEN</span></div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;<span class="comment">!        dthbydt(i_dp,k)=dthbydt(i_dp,k) +                                  &amp;</span></div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;<span class="comment">!                       (freeze(i_dp,k))*lf/cp/exner_layer_centres(i_dp,k)</span></div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;<span class="comment">!      END IF</span></div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;<span class="comment">!    END DO</span></div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;<span class="comment">!  END DO</span></div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;  <span class="comment">! Now call the routine that evaluates the PC2 terms</span></div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;  dbcfbydt(:,:) = 0.0</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;  ccw(:,:) = 0.0</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;  cclwp(:) = 0.0</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;                   <span class="comment">!DEPENDS ON: dts_pc2</span></div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;  <span class="keyword">CALL </span><a class="code" href="dts__pc2_8f90.xhtml#a7fbd25373b2e8dacaeb1c1cf2ff56c28" title="Calculates increments to qcl and qcf if PC2 on. ">dts_pc2</a>(n_dp,nlev,dts_ntpar,                                           &amp;</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;               l_calc_dxek,                                                   &amp;</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;               timestep,z_theta,zlcl,h_ad,ztop,rho,rho_theta,dr_across_rh,    &amp;</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;               dr_across_th,temperature,qse,up_flux,q,                        &amp;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;               qcl,qcf,cf_frozen,cf_liquid,qcl_plume,qcf_plume,               &amp;</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;               dcffbydt,dcflbydt,dqcfbydt,dqclbydt,                           &amp;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;               depint,freezint,condint,qclint,qcfint)</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;<span class="comment">!  IF (.NOT. l_calc_dxek) THEN   ! not PC2</span></div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;  <span class="comment">! set CCW to plume values ?</span></div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    <span class="keywordflow">DO</span> k=1,nlev</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;      <span class="keywordflow">DO</span> i_dp=1,n_dp</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;        <span class="keywordflow">IF</span> (k &lt;= dts_ntpar(i_dp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;          ccw(i_dp,k) = qcl_plume(i_dp,k)+qcf_plume(i_dp,k)</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;          delp = p_layer_boundaries(i_dp,k-1) - p_layer_boundaries(i_dp,k)</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;          cclwp(i_dp) = cclwp(i_dp) + ccw(i_dp,k)*delp/g</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;<span class="keywordflow">      END DO</span>    end do<span class="comment">!  END IF    !  !DEPENDS ON: dts_sublimation</span></div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;  <span class="keyword">CALL </span><a class="code" href="dts__sublimation_8f90.xhtml#af39806a79147ab640d41103d8ed14df3" title="calculates sublimation rate ">dts_sublimation</a>(n_dp,nlev,dts_ntpar,ntparmax,                        &amp;</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;                       dr_across_th,rho_theta,q,temperature,qse,            &amp;</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                       deposition,depint,freezint,qcfint,                   &amp;                       sublimation,subint)</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;  <span class="comment">! update for sublimation</span></div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;  <span class="keywordflow">DO</span> k=1,ntparmax</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    <span class="keywordflow">DO</span> i_dp=1,n_dp</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;      dthbydt(i_dp,k)=dthbydt(i_dp,k) -                                     &amp;</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;                          sublimation(i_dp,k)*(lc+lf)/cp/                   &amp;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;                                               exner_layer_centres(i_dp,k)</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;      dqbydt(i_dp,k) = dqbydt(i_dp,k) + sublimation(i_dp,k)</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;  <span class="comment">! Melt the falling component according to a prescribed profile as a fn</span></div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;  <span class="comment">! of temperature</span></div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;  <span class="comment">!DEPENDS ON: dts_melt</span></div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;  <span class="keyword">CALL </span><a class="code" href="dts__melt_8f90.xhtml#ae8f925f00f47912ccec60c8efdb6944d" title="calculates the melting rate ">dts_melt</a>(nlev,n_dp,dts_ntpar,ntparmax,                               &amp;</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                rho_theta,dr_across_th,temperature,                         &amp;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                depint,subint,freezint,qcfint,                              &amp;</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                melt,meltint)</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;  <span class="comment">! update for melting</span></div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;  <span class="keywordflow">DO</span> k=1,ntparmax</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;    <span class="keywordflow">DO</span> i_dp=1,n_dp</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;      <span class="keywordflow">IF</span>(k &lt;= dts_ntpar(i_dp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;        dthbydt(i_dp,k)=dthbydt(i_dp,k) +                                   &amp;</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;                       (-melt(i_dp,k))*lf/cp/exner_layer_centres(i_dp,k)</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;  <span class="comment">!DEPENDS ON: dts_evaporation</span></div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;  <span class="keyword">CALL </span><a class="code" href="dts__evaporation_8f90.xhtml#a3bfc16e03afe868aa85830d4074ccbbc" title="calculates the evaporation rate ">dts_evaporation</a>(nlev,n_dp,dts_ntpar,ntparmax                         &amp;</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;                       ,temperature,rho_theta,z_theta,dr_across_rh          &amp;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;                       ,dr_across_th,qsat_moist_ad,q,mb,wstar,wcld          &amp;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                       ,ztop,zfr,zlcl,melt,freeze,condensation              &amp;</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;                       ,qclint,condint,freezint,meltint                     &amp;</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;                       ,evaporation,evapint)</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;  <span class="comment">! update evaporation</span></div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;  <span class="keywordflow">DO</span> k=1,ntparmax</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;    <span class="keywordflow">DO</span> i_dp=1,n_dp</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;      <span class="keywordflow">IF</span>(z_theta(i_dp,k) &gt;= zlcl(i_dp) .and. k &lt;= dts_ntpar(i_dp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;        dthbydt(i_dp,k)=dthbydt(i_dp,k) -                                   &amp;</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;                       evaporation(i_dp,k)*(lc/cp)/exner_layer_centres(i_dp,k)</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;        dqbydt(i_dp,k) = dqbydt(i_dp,k) + evaporation(i_dp,k)</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;     <span class="comment">! 12. 2/10/07 calculate a rain production term</span></div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;  rain_3d(:,:) = 0.0</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;  snow_3d(:,:) = 0.0</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;  <span class="comment">!DEPENDS ON: dts_rainprod</span></div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;  <span class="keyword">CALL </span><a class="code" href="dts__rainprod_8f90.xhtml#a97a43e3408cc0c327c9cb99db28fa8a4">dts_rainprod</a>(n_dp,nlev,z_rho,z_theta,dr_across_rh,dr_across_th      &amp;</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;                   ,rho,rho_theta,temperature,q,qse,zlcl,zfr               &amp;</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;                   ,condensation,evaporation,melt                          &amp;</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;                   ,freeze,dqclbydt,dqcfbydt,deposition,sublimation        &amp;</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;                   ,rainprod,snowprod,revp,revpint,rainrate,snowrate)</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;        </div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;<span class="comment">! update for rain evaporation</span></div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;  dqbydt(:,:) = dqbydt(:,:) + revp(:,:)  dthbydt(:,:)= dthbydt(:,:)- revp(:,:)*(lc/cp)              rain(:) = rainrate(:)</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;  snow(:) = snowrate(:)</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! icallmicro==1</span></div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;<span class="comment">! CMT section</span></div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;<span class="comment">! Scale mass flux so units correct for output &amp; for CMT scheme i.e. Pa/s</span></div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;  up_flux(:,:) = up_flux(:,:)*g</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;  kterm(:) = dts_ntpar(:)    <span class="comment">! Top of deep convection</span></div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a9fa9c42ad2da411d2451fd13fbf43514">l_mom</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;<span class="comment">! As input need kterm - level deep convection terminates</span></div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;    ncmt = 0          <span class="comment">! number of deep columns to deep CMT on     DO i=1,n_dp</span></div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;<span class="comment">! check deep convection over at least 3 levels ?</span></div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;      <span class="keywordflow">If</span> (wall(i)  &gt; 0.0 .and. (kterm(i) - ntml(i)) &gt; 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;        ncmt = ncmt+1        cu_term(ncmt) = i         <span class="comment">! index in case some columns diagnosed</span></div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;                                 <span class="comment">! as deep convective DOn&#39;t convect.</span></div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;                                 <span class="comment">! Assuming all convect for this scheme       END IF</span></div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;<span class="keywordflow">    END DO</span> </div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;    <span class="keyword">CALL </span>deep_turb_cmt( n_dp, ncmt, nlev, <a class="code" href="namespacecv__run__mod.xhtml#abef8ec13b6027ae6bfa52c19a2415e4f">deep_cmt_opt</a>,                 &amp;</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;                        ntml, kterm, cu_term, freeze_lev,               &amp;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;                        timestep,                                       &amp;</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;                        uw0, vw0, mb, wall, wstar, zlcl_uv,             &amp;</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;                        up_flux,                                        &amp;</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;                        r_rho, r_theta, z_rho, z_theta, rho, rho_theta, &amp;</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;                        r2rho, r2rho_th, dr_across_th, dr_across_rh,    &amp;</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;                        u, v,                                           &amp;</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;                        dubydt, dvbydt, uw_deep, vw_deep)</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;<span class="keywordflow">  END IF</span>        <span class="comment">! test on l_mom</span></div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;<span class="comment">! Check for negative q after increments applied i.e. removing all moisture</span></div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;<span class="comment">! Same approach as deep mass flux scheme. Note without this q was going</span></div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;<span class="comment">! negative at higher model levels.</span></div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;<span class="comment">! check on shallow deep</span></div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;  <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;    <span class="keywordflow">IF</span> (dts_ntpar(i) &lt; 5) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; deep turb alison &#39;</span>,call_number,i,<span class="stringliteral">&#39; ntml ntpar &#39;</span>, &amp;</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;                     klcl(i),dts_ntpar(i),ntml(i),ntpar(i)</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dts_deep_turb_conv&#39;</span>)</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;  <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;    qminincolumn(i) = q(i,nlev)</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;  <span class="keywordflow">DO</span> k = 1,nlev-1</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;    <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;      <span class="keywordflow">IF</span> (q(i,k)  &lt;   qminincolumn(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;        qminincolumn(i) = q(i,k)</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;<span class="comment">! Ensure Q DOes not go below global allowed minimum (QMIN)</span></div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;  <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;    qminincolumn(i)=max(qmin,qminincolumn(i))</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;<span class="comment">! Apply an artificial upwards flux from k-1 level to ensure Q</span></div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;<span class="comment">! remains above minimum value in the column.</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;  <span class="keywordflow">DO</span> k = nlev,2,-1</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;    <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;      <span class="keywordflow">IF</span> (dqbydt(i,k) /= 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;        temp1(i)=q(i,k) + dqbydt(i,k) * timestep</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;        <span class="keywordflow">IF</span> (temp1(i)  &lt;   qminincolumn(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;          dqbydt(i,k-1) = dqbydt(i,k-1) -                              &amp;</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;                   ((qminincolumn(i) - q(i,k)) / timestep-dqbydt(i,k)) &amp;</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;                    * (r2rho_th(i,k)*dr_across_th(i,k))                &amp;</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;                    / (r2rho_th(i,k-1)*dr_across_th(i,k-1))</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;          dqbydt(i,k) = (qminincolumn(i) - q(i,k)) / timestep</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;<span class="comment">! Only warning print statement not DOing any thing</span></div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;<span class="comment">!          write(6,*) &#39; negative q deep&#39;,i,k,temp1(i),dqbydt(i,k)</span></div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! n_dp loop</span></div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;<span class="keywordflow">  END DO</span>  <span class="comment">! nlev</span></div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;<span class="comment">! Check negative q bottom level.</span></div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;  k=1</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;    <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;      temp1(i)=q(i,k) + dqbydt(i,k) * timestep</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;      <span class="keywordflow">IF</span> (temp1(i)  &lt;   qminincolumn(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;<span class="comment">! This is a warning message - no action possible as no layer below this</span></div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; negative q deep&#39;</span>,i,k,kterm(i),temp1(i),dqbydt(i,k),&amp;</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;                   w_max(i),mb(i),rain(i),snow(i)</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dts_deep_turb_conv&#39;</span>)</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; dq &#39;</span>,(dqbydt(i,j),j=1,nlev)</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dts_deep_turb_conv&#39;</span>)</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; dqcl &#39;</span>, (dqclbydt(i,j),j=1,nlev)</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dts_deep_turb_conv&#39;</span>)</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; dqcf &#39;</span>, (dqcfbydt(i,j),j=1,nlev)</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dts_deep_turb_conv&#39;</span>)</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! n_dp loop</span></div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;<span class="comment">! Check conservation of moisture by scheme</span></div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;  r_a2 = 1.0/(earth_radius*earth_radius)</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;  <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;      temp1(i)= 0.0</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;<span class="keyword">  END </span>do<span class="comment">!</span></div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;  <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1,nlev</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;    <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;      dqt = dqbydt(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)+dqclbydt(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)+dqcfbydt(1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;      temp1(i) = temp1(i) + dqt*r2rho_th(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)*dr_across_th(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;  <span class="keywordflow">DO</span> i = 1,n_dp</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;    temp1(i)= temp1(i)*r_a2</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;    <span class="keyword">WRITE</span>(ummessage,*) <span class="stringliteral">&#39;location int moist &#39;</span>,i,temp1(i),rain(i),snow(i)</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;    <span class="keyword">CALL </span>umprint(ummessage,src=<span class="stringliteral">&#39;dts_deep_turb_conv&#39;</span>)</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;<span class="comment">! Convective cloud amount section! At present the scheme does not return a convective cloud amount.</span></div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;<span class="comment">! The easiest approach to take is to estimate the convective cloud! in the same way as the old mass flux scheme.</span></div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="comment">! cca already initialised to zero</span></div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="comment">! Set cca_2d based on convective precipitation</span></div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;  cca_2d(:) = 0.0</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;  <span class="keywordflow">DO</span> i=1, n_dp</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;    <span class="keywordflow">IF</span> ((rain(i) + snow(i)) &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;      <span class="keywordflow">IF</span>(land_mask(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;        cca_2d(i)  = a_land + b_land * alog(86400.0 * (rain(i)+snow(i)))</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;        cca_2d(i)  = a_sea  + b_sea  * alog(86400.0 * (rain(i)+snow(i)))</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;<span class="keywordflow">      END IF</span><span class="keywordflow">    END IF</span></div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;    <span class="keywordflow">IF</span> (icct(i) &gt; iccb(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;      cca_2d(i) = max(2.0e-5,cca_2d(i))   <span class="comment">! sets a minimum cloud in case no                                          ! precip</span></div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;    <span class="keywordflow">ELSE</span>     <span class="comment">! case of failed deep convection</span></div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;      iccb(i) = 0</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;      icct(i) = 0</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;      cca_2d(i) = 0.0</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;<span class="keywordflow">    END IF</span> </div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;<span class="comment">!NB Probably should not allow a choice here i.e. only have l_ccrad</span></div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;  cca(:,:) = 0.0         <span class="comment">! initialise to zero</span></div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;  <span class="keywordflow">IF</span> (l_ccrad) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;        <span class="comment">! Apply CCA_2D to 3d cloud profile</span></div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;        <span class="comment">! Apply anvil scheme to deep cloud</span></div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;    <span class="comment">! DEPENDS ON: CALC_3D_CCA      CALL calc_3d_cca(n_dp, n_dp, nlev, n_cca_lev, nbl, iccb, icct     &amp;             , p_layer_boundaries, freeze_lev, cca_2d, cca              &amp;</span></div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;             , z_theta, z_rho)</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;      <span class="comment">! NOTE: iccb, icct are layer centres (theta levels) at this</span></div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;      <span class="comment">!        point.</span></div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;  <span class="keywordflow">ELSE</span>        <span class="comment">! Not CCRAD  and not PC2 require a cloud</span></div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;    <span class="keywordflow">IF</span> (.NOT.l_calc_dxek) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;      <span class="comment">! Assume 3D anvil cloud required.</span></div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;      <span class="comment">! DEPENDS ON: CALC_3D_CCA      CALL calc_3d_cca(n_dp,n_dp,nlev,n_cca_lev,nbl,iccb,icct,          &amp;</span></div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;                       p_layer_boundaries,freeze_lev,                   &amp;</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;                       cca_2d,cca,z_theta,z_rho)</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;<span class="keywordflow">    END IF</span>     </div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;<span class="keywordflow">  END IF</span>      <span class="comment">! l_ccrad</span></div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;DEEP_TURB_CONV&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="dts__deep__turb__conv_8f90.xhtml#a9563c03a0f1aff651a0a0e21deb27898" title="Deep turbulent convection scheme. ">deep_turb_conv</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
