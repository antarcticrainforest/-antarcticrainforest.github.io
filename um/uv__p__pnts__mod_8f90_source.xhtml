<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/grids/uv_p_pnts_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_d6312fd6e35a852a763000f2b8051718.xhtml">grids</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">uv_p_pnts_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="uv__p__pnts__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespaceuv__p__pnts__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceuv__p__pnts__mod.xhtml" title="This file belongs in section: Grids. ">uv_p_pnts_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespaceuv__p__pnts__mod.xhtml#a77af7b445716f46b5c0d91245f367c57">uv_p_pnts_halo</a>(u_single, v_single, cos_theta_longitude,             &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;              sin_theta_longitude, model_domain, global_row_length,            &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;              proc_row_group, u_p, v_p)</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="namespaceuv__p__pnts__mod.xhtml#a77af7b445716f46b5c0d91245f367c57">   14</a></span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacedynamics__grid__mod.xhtml" title="Input control for dynamics. Input control for dynamics. ">dynamics_grid_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">, ONLY</span>:   udims, vdims, udims_s, vdims_s,     &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                                   pdims, pdims_s, tdims</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceproc__info__mod.xhtml" title="Processor parallel properties and pointers. Processor parallel properties and pointers. ">proc_info_mod</a><span class="keywordtype">, ONLY</span>:           <a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceum__parparams.xhtml" title="This file belongs in section: MPP. ">um_parparams</a><span class="keywordtype">, ONLY</span>:            <a class="code" href="namespaceum__parparams.xhtml#a575a86c6ed199d617f169b0bbd20ec88">pnorth</a>, <a class="code" href="namespaceum__parparams.xhtml#a6419e182a3656885cf3147466ab705ea">peast</a>, <a class="code" href="namespaceum__parparams.xhtml#a055cccbf23dd97e54f86b7be2fbfccb3">psouth</a>, <a class="code" href="namespaceum__parparams.xhtml#adb75b95f9b9de945d4e1c15a922e9eab">pwest</a></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacedomain__params.xhtml" title="This file belongs in section: MPP. ">domain_params</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceu__to__p__mod.xhtml" title="subroutine U_TO_p for calculating variables held at u points subroutine U_TO_p for calculating variab...">u_to_p_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceu__to__p__mod.xhtml#abec25da0a0e72ae2bd1efd5a110125fb">u_to_p</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacev__to__p__mod.xhtml" title="subroutine V_TO_P for calculating variables held at v points subroutine V_TO_P for calculating variab...">v_to_p_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacev__to__p__mod.xhtml#a071d83a5fb4aa87adbf487a6218a3037">v_to_p</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span>    :: u_single                                         &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  (udims_s%i_start:udims_s%i_end,udims_s%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>:udims_s%j_end)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span>    :: v_single                                         &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  (vdims_s%i_start:vdims_s%i_end,vdims_s%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>:vdims_s%j_end)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span>    :: cos_theta_longitude                              &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  (tdims%i_start:tdims%i_end,tdims%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>:tdims%j_end)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span>    :: sin_theta_longitude                              &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  (tdims%i_start:tdims%i_end,tdims%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>:tdims%j_end)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: model_domain</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: global_row_length <span class="comment">! number of points on a global row</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: proc_row_group</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span>   :: u_p(pdims%i_start:pdims%i_end,pdims%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>:pdims%j_end)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span>   :: v_p(pdims%i_start:pdims%i_end,pdims%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>:pdims%j_end)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keywordtype">REAL</span> :: mag_vector_np(1)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">REAL</span> :: mag_vector_sp(1)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">REAL</span> :: dir_vector_np(1)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">REAL</span> :: dir_vector_sp(1)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">INTEGER</span> :: i,j,i_field,y,z     <span class="comment">! counters</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">INTEGER</span> :: offx,offy,row_length,n_rows</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keywordtype">INTEGER(kind=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">INTEGER(kind=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">REAL(kind=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UV_P_PNTS_HALO&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;offx=pdims_s%i_end-pdims%i_end</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;offy=pdims_s%j_end-pdims%j_end</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;row_length=pdims%i_end</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;n_rows=vdims%j_end-vdims%j_start+1</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;u_p(:,:)   =0.0</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;v_p(:,:)   =0.0</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceu__to__p__mod.xhtml#abec25da0a0e72ae2bd1efd5a110125fb">u_to_p</a>(u_single,                                                          &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  udims_s%i_start,udims_s%i_end,                                               &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  udims_s%j_start,udims_s%j_end,                                               &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  pdims%i_start,pdims%i_end,                                                   &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  pdims%j_start,pdims%j_end,                                                   &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  1,                                                                           &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  model_domain,<a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>,u_p)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespacev__to__p__mod.xhtml#a071d83a5fb4aa87adbf487a6218a3037">v_to_p</a>(v_single,                                                          &amp;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  vdims_s%i_start,vdims_s%i_end,                                               &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  vdims_s%j_start,vdims_s%j_end,                                               &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  pdims%i_start,pdims%i_end,                                                   &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  pdims%j_start,pdims%j_end,                                                   &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  1,                                                                           &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  model_domain,<a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>,v_p)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">! Global models on the New dynamics grid need to have special code</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">! to handle u and v at the poles</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordflow">IF</span> (model_domain  ==  <a class="code" href="namespacedomain__params.xhtml#aa4621b29b8014dcc312af1558bc008e3">mt_global</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="comment">! Overwrite values of U_P, V_P at the poles with the magnitude of</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="comment">! the vector wind.</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="comment">! DEPENDS ON: polar_vector_wind_n</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keyword">CALL </span><a class="code" href="polar__vector__wind__n_8f90.xhtml#ab3d6e08d4d489ae42dd07f5c50859b9f" title="Subroutine Polar_Vector_Wind. ">polar_vector_wind_n</a>(                                                    &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    v_single,                                                                  &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    sin_theta_longitude,                                                       &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    cos_theta_longitude,vdims%i_end,                                           &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    n_rows, 1 , mag_vector_np,                                                 &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    dir_vector_np, mag_vector_sp,                                              &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    dir_vector_sp,                                                             &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    offx, offy, global_row_length,                                             &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    proc_row_group, <a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>(<a class="code" href="namespaceum__parparams.xhtml#a055cccbf23dd97e54f86b7be2fbfccb3">psouth</a>) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">DO</span> i=pdims%i_start,pdims%i_end</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      v_p(i,1) = mag_vector_sp(1)</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      u_p(i,1) = 0.0</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>(<a class="code" href="namespaceum__parparams.xhtml#a575a86c6ed199d617f169b0bbd20ec88">pnorth</a>) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">DO</span> i=pdims%i_start,pdims%i_end</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      v_p(i,pdims%j_end) = mag_vector_np(1)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      u_p(i,pdims%j_end) = 0.0</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! vatpoles</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UV_P_PNTS_HALO&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespaceuv__p__pnts__mod.xhtml#a77af7b445716f46b5c0d91245f367c57">uv_p_pnts_halo</a></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespaceuv__p__pnts__mod.xhtml#a257717be0bd93bcfece445a2a29dede3">uv_p_pnts</a>(u_single,v_single,cos_theta_longitude,sin_theta_longitude,&amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  model_domain,global_row_length,proc_row_group,u_p,v_p)</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="namespaceuv__p__pnts__mod.xhtml#a257717be0bd93bcfece445a2a29dede3">  144</a></span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">! Purpose:</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">! Take a single level field of u and v and get u and v on the p grid.</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">! For use with diagnostic 3.230, set_seasalt and dms_flux</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">! and 3.436 Wind gust</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">!   Language:Fortran 90.</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">!   This code is written to UM programming standards version 8.3.</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">, ONLY</span>:   udims, vdims, udims_s, vdims_s,     &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                   pdims, pdims_s, tdims</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceswapable__field__mod.xhtml" title="This file belongs in section: MPP. ">swapable_field_mod</a><span class="keywordtype">, ONLY</span> :     <a class="code" href="structswapable__field__mod_1_1swapable__field__pointer__type.xhtml">swapable_field_pointer_type</a></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacefield__types.xhtml">field_types</a><span class="keywordtype">, ONLY</span>:             <a class="code" href="namespacefield__types.xhtml#a13e0d833cb4dd8abd04a2c5556387dd2">fld_type_u</a>, <a class="code" href="namespacefield__types.xhtml#a02025ece9ce67b25311f692d0c4540ac">fld_type_v</a></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacedomain__params.xhtml" title="This file belongs in section: MPP. ">domain_params</a></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">! Arguments with Intent IN. ie: Input variables.</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span>    :: u_single                                         &amp;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  (udims%i_start:udims%i_end,udims%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>:udims%j_end)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span>    :: v_single                                         &amp;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  (vdims%i_start:vdims%i_end,vdims%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>:vdims%j_end)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span>    :: cos_theta_longitude                              &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  (tdims%i_start:tdims%i_end,tdims%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>:tdims%j_end)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span>    :: sin_theta_longitude                              &amp;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  (tdims%i_start:tdims%i_end,tdims%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>:tdims%j_end)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: model_domain</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: global_row_length <span class="comment">! number of points on a global row</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: proc_row_group</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span>   :: u_p(pdims%i_start:pdims%i_end,pdims%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>:pdims%j_end)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span>   :: v_p(pdims%i_start:pdims%i_end,pdims%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>:pdims%j_end)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">! Local alloctable arrays</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">TARGET</span> :: u_halo(:,:)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">TARGET</span> :: v_halo(:,:)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">! The following are declared as arrays rather than scalars to maintain</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">! consistency of argument type, since they are passed to a general! purpose subroutine in which they are array arguments</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keywordtype">REAL</span> :: mag_vector_np(1)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordtype">REAL</span> :: mag_vector_sp(1)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordtype">REAL</span> :: dir_vector_np(1)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordtype">REAL</span> :: dir_vector_sp(1)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordtype">INTEGER</span> :: i,j,i_field,y,z     <span class="comment">! counters</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">! Temporarily create these as other subroutines use them</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">! can be removed when all vatpoles changes are made</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keywordtype">INTEGER</span> :: offx,offy,row_length,n_rows</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structswapable__field__mod_1_1swapable__field__pointer__type.xhtml">swapable_field_pointer_type</a>) :: fields_to_swap(2)   <span class="comment">! for multivar</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                                         <span class="comment">! swap_bounds</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordtype">INTEGER(kind=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keywordtype">INTEGER(kind=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keywordtype">REAL(kind=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UV_P_PNTS&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">! Temporarily create these as other subroutines use them</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">! can be removed when all vatpoles changes are made</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;offx=pdims_s%i_end-pdims%i_end</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;offy=pdims_s%j_end-pdims%j_end</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;row_length=pdims%i_end</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;n_rows=vdims%j_end-vdims%j_start+1</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">! Set allocated arrays to zero to make sure any data left in the memory</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">! allocated to them is purged</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;u_p(:,:)   =0.0</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;v_p(:,:)   =0.0</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">! Allocate arrays to hold u and v on u/v grid with halos</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keyword">ALLOCATE</span>(u_halo(udims_s%i_start:udims_s%i_end,                                 &amp;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  udims_s%j_start:udims_s%j_end))</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keyword">ALLOCATE</span>(v_halo(vdims_s%i_start:vdims_s%i_end,                                 &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  vdims_s%j_start:vdims_s%j_end))</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">! Set allocated arrays to zero to make sure any data left in the memory</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">! allocated to them is purged</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;u_halo(:,:)=0.0</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;v_halo(:,:)=0.0</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">! Set non halo points to input values of u and v</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keywordflow">DO</span> y=udims%j_start,udims%j_end</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  <span class="keywordflow">DO</span> z=udims%i_start,udims%i_end</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    u_halo(z,y)=u_single(z,y)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordflow">DO</span> y=vdims%j_start,vdims%j_end</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  <span class="keywordflow">DO</span> z=vdims%i_start,vdims%i_end</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    v_halo(z,y)=v_single(z,y)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">! Update halos for u_halo and v_halo</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;i_field = 0</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;i_field = i_field + 1</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;fields_to_swap(i_field) % field_2d    =&gt; u_halo(:,:)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;fields_to_swap(i_field) % field_type  =  <a class="code" href="namespacefield__types.xhtml#a13e0d833cb4dd8abd04a2c5556387dd2">fld_type_u</a></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;fields_to_swap(i_field) % levels      =  1</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;fields_to_swap(i_field) % rows        =  udims%j_end</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;fields_to_swap(i_field) % vector      =  .true.</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;i_field = i_field + 1</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;fields_to_swap(i_field) % field_2d    =&gt; v_halo(:,:)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;fields_to_swap(i_field) % field_type  =  <a class="code" href="namespacefield__types.xhtml#a02025ece9ce67b25311f692d0c4540ac">fld_type_v</a></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;fields_to_swap(i_field) % levels      =  1</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;fields_to_swap(i_field) % rows        =  n_rows</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;fields_to_swap(i_field) % vector      =  .true.</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">! DEPENDS ON: swap_bounds_2d_mv</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keyword">CALL </span><a class="code" href="swap__bounds__2d__mv-2c_8f90.xhtml#a1180e478d1c8e7141d38eaf14d2c021d" title="Direct MPI version of swap_bounds to deal with multiple variables. ">swap_bounds_2d_mv</a>( fields_to_swap, i_field,                               &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  pdims%i_end, offx, offy)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceuv__p__pnts__mod.xhtml#a77af7b445716f46b5c0d91245f367c57">uv_p_pnts_halo</a>(u_halo,v_halo,cos_theta_longitude,sin_theta_longitude,    &amp;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  model_domain,global_row_length,proc_row_group,u_p,v_p)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UV_P_PNTS&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespaceuv__p__pnts__mod.xhtml#a257717be0bd93bcfece445a2a29dede3">uv_p_pnts</a></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceuv__p__pnts__mod.xhtml" title="This file belongs in section: Grids. ">uv_p_pnts_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
