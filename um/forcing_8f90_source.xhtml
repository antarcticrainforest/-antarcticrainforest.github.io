<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/scm/obs_forcing/forcing.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b97be95e70c2cb49b099ac39ba4801c2.xhtml">scm</a></li><li class="navelem"><a class="el" href="dir_85aaaa226d768842959bc561b1d84fdd.xhtml">obs_forcing</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">forcing.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="forcing_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!     Code Description:</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="forcing_8f90.xhtml#a686cb010df42adf093fbebe646a89482" title="Subroutine forcing. ">forcing</a>                                                            &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="comment">! (In)</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  ( row_length, rows, nlevs, nwet, nfor, nbl_levs, nsoilt_levs, nsoilm_levs   &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  , ntrop, sec_day, stepcount, daycount, dayno_wint, daysteps, nscmdpkgs      &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  , ntab, ichgf, t, q, qcl, qcf, u, v, w, l_scmdiags, p, exner_theta_levels   &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  , rp, r_theta_levs, ch_tstar_forcing, ch_flux_h, ch_flux_e                  &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  , ch_tls,  ch_qls,  ch_uls,  ch_vls,  ch_wls                                &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  , ch_t_bg, ch_q_bg, ch_u_bg, ch_v_bg, ch_w_bg                               &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  , ad, at, avn, aw, cdbar, ctbar, cvnbar, cwbar, dbar, tbar, vnbar, wbar     &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  , vpbar, cdsd, ctsd, cvnsd, cwsd, <a class="code" href="dsd_8f90.xhtml#a103319d6beae6736203dcb68e2fc8d5d">dsd</a>, tsd, vnsd, wsd, tdash, ddash         &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  , deltan, px, py                                                            &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="comment">! (InOut)</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  , ilscnt, flux_h_scm, flux_e_scm, ti_scm, qi_scm, t_inc_scm, q_star_scm     &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  , qcl_inc, qcf_inc, u_inc_scm, v_inc_scm, w_inc_scm                         &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  , t_bg_scm, q_bg_scm, u_bg_scm, v_bg_scm, w_bg_scm                          &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  , tls, qls, uls, vls, wls, tr, qr, vnr, vpr, wr                             &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="comment">! (Out)</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  , iv, iy, idum, tstar, factor_rhokh, rhokh, dab1, dap1 )</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="forcing_8f90.xhtml#a686cb010df42adf093fbebe646a89482">   52</a></span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordtype">USE </span>scm_utils<span class="keywordtype">, ONLY</span>:                                                        &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    old_rlx, old_vertadv, old_nml, zhook_in, zhook_out, jprb, lhook, dr_hook  &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  , rlx_none, rlx_init, rlx_bgrd, rlx_inst_init, rlx_inst_bgrd</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaces__main__force.xhtml" title="Module to hold SCM input variables. ">s_main_force</a><span class="keywordtype">, ONLY</span>:                                                     &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>, <a class="code" href="namespaces__main__force.xhtml#a3c1aa9c8ffb5086713cc4c08301e64fe">ui</a>, <a class="code" href="namespaces__main__force.xhtml#a49d89274ec50067ec801d79984b95c8c">vi</a>, <a class="code" href="namespaces__main__force.xhtml#ae499a94d3c1ae674fa611c36e0fc0d16">wi</a>, <a class="code" href="namespaces__main__force.xhtml#a5a3c71a969d2f9417fd9c240b5fe095b">obs</a>, <a class="code" href="namespaces__main__force.xhtml#a2e31a374142e320149414004930c832d">obs_surf</a>, <a class="code" href="namespaces__main__force.xhtml#a7da05258ffdfa126cd8145b2dca568be">stats</a>, <a class="code" href="namespaces__main__force.xhtml#a6c27204d8918b6494dc81edbba92a6e8">prindump_obs</a>, <a class="code" href="namespaces__main__force.xhtml#a5b45d4cb0f02acafe3877207ba966e08">prinstat</a>        &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  , <a class="code" href="namespaces__main__force.xhtml#a211b337f86274e7397badf56f1ee6222">l_vertadv</a>, <a class="code" href="namespaces__main__force.xhtml#ab8636bb358eea8e7645d10b07f5eb084">rlx_t</a>, <a class="code" href="namespaces__main__force.xhtml#afc581c4d3fbffcabecf2725920aec046">rlx_q</a>, <a class="code" href="namespaces__main__force.xhtml#aea1291db0a6e915f97d8c295b46e30c2">rlx_u</a>, <a class="code" href="namespaces__main__force.xhtml#a51475f59cc5b63968bd31baaacbe8fff">rlx_v</a>, <a class="code" href="namespaces__main__force.xhtml#a692792fb3744de729f86e54f07757e36">rlx_w</a>                              &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  , <a class="code" href="namespaces__main__force.xhtml#ad2be8166cda8a1c7226fbc9bb8b16b1d">plev_t</a>, <a class="code" href="namespaces__main__force.xhtml#a79da55696c1b71f5cb2b0bea85a5c9b3">plev_q</a>, <a class="code" href="namespaces__main__force.xhtml#a5f8cef8256e232cfb8738b0430e8e63c">plev_u</a>, <a class="code" href="namespaces__main__force.xhtml#a96de5169b27e1c6f62e843bc09b11535">plev_v</a>, <a class="code" href="namespaces__main__force.xhtml#ac3ac5676452b2cbca0ec162f770accfb">plev_w</a>, <a class="code" href="namespaces__main__force.xhtml#ae60493c336ce28eabeb022963cdecb8b">tau_t</a>, <a class="code" href="namespaces__main__force.xhtml#acf6767893194887627f89cae89d4e017">tau_q</a>, <a class="code" href="namespaces__main__force.xhtml#a514460e96a269e7a3b145f4e2addc662">tau_u</a>, <a class="code" href="namespaces__main__force.xhtml#ac435bbea8c283f2d2d89418d1e19ef31">tau_v</a>, <a class="code" href="namespaces__main__force.xhtml#a01c378f73d5f0856b59a663833f6dcde">tau_w</a></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaces__scmop__mod.xhtml">s_scmop_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>                                      &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5a13db9f3d2b54dc7f02f3fa3fc19ece">t_max</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a45eef9702d217d7da71dcf394198f2d6">t_min</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5a6f815019b3004ecc7040ec4b4d1fd4">t_acc</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a597140e5cb551f5f4651c9b4cd534865">t_div</a>, <a class="code" href="namespaces__scmop__mod.xhtml#acfaa64e6b4c579d708188c5774d8ac7d">t_mult</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a58d068616503a332fdbc2e4c7bb9f23b">t_acc_div</a>            &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    , <a class="code" href="namespaces__scmop__mod.xhtml#acaad14680fec34a8c1c206ebeb34d239">t_acc_mult</a>, <a class="code" href="namespaces__scmop__mod.xhtml#ab61b1909fcdb9b3f9552d14f2f8839fe">t_const</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a25166a280622f5787108c0078a033004">only_radsteps</a>                                      &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    , <a class="code" href="namespaces__scmop__mod.xhtml#a9e42893fdbe56b604355689cd9248c63">d_sl</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5914c497075c8cbd0e5cd1d211e1a123">d_soilt</a>, <a class="code" href="namespaces__scmop__mod.xhtml#ad97dd1acaa61800db9233ae60f5b1e84">d_bl</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a1462f6faadb6334b311e602285d8a286">d_soilm</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a80fd65616a49171a9ac7ecac7338d70a">d_tile</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a92a2c3b6b4b2b0dd800234719ca7207b">d_vis</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>      &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    , <a class="code" href="namespaces__scmop__mod.xhtml#a11d031129d23dbffdab391dd303cdd08">d_allxtra</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5de685a17fc8f67d938e5982544ec05f">d_land</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a049e4924fd63af8676e1697fcde11654">d_cloud</a>                                              &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    , <a class="code" href="namespaces__scmop__mod.xhtml#a6ff96781019d621303b6d86d6d2486a5">scmdiag_gen</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5564776c9d09d933db80c6c1c3c47b3d">scmdiag_rad</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a6099058c886f9254fabef330fa2caedd">scmdiag_bl</a>, <a class="code" href="namespaces__scmop__mod.xhtml#aa95516bacfa8a4f2932fc3e17f5f6b65">scmdiag_surf</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a89d9b3531f7c5739e1d9b9edf0583d58">scmdiag_land</a>        &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    , <a class="code" href="namespaces__scmop__mod.xhtml#a762d12a388196f9c5a907e8090d18e3a">scmdiag_sea</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a40ccacb1e960d2ef3da728d637e5ebe2">scmdiag_lsp</a>, <a class="code" href="namespaces__scmop__mod.xhtml#abf142f0f2bdc021960cf0c6a5ecd065b">scmdiag_conv</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a73ce0babd803e10fbcb82921346b3ccc">scmdiag_lscld</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a2b946f89404f7668eb56ca960c3c3de6">scmdiag_pc2</a>      &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    , <a class="code" href="namespaces__scmop__mod.xhtml#a61abfb55fdd33cfc5d44f00076f252c8">scmdiag_forc</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a8a1879aca60631ef706c8ce42618ced6">scmdiag_incs</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a765b6df27a911737054c8df3c0746c15">scmdiag_gwd</a></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(In)</span> ::  &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    row_length            &amp;<span class="comment">! Leading dimension of SCM</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  , rows                  &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  , nlevs                 &amp;<span class="comment">! No of levels.</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  , nwet                  &amp;<span class="comment">! No of model levels in which Q is</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  , nfor                  &amp;<span class="comment">! Number terms for observational forcing</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  , nbl_levs              &amp;<span class="comment">! Number of Boundary layer levels</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  , nsoilt_levs           &amp;<span class="comment">! Number of soil temp levels</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  , nsoilm_levs           &amp;<span class="comment">! Number of soil moisture levels</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  , ntrop                  <span class="comment">! Max number of levels in the troposphere</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(In)</span> ::  &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    sec_day               &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  , stepcount             &amp;<span class="comment">! Timestep counter</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  , daycount              &amp;<span class="comment">! Daynumber (1 represents 1st january)</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  , dayno_wint            &amp;<span class="comment">! Daynumber relative to winter solstice</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  , daysteps              &amp;<span class="comment">! No. of timesteps in 1 day</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  , nSCMdpkgs             &amp;<span class="comment">! No of SCM diagnostics packages</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  , ntab                  &amp;<span class="comment">! Dimension of array used in random generator</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  , ichgf                  <span class="comment">! No. of timesteps between change</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                           <span class="comment">! in observational forcing</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(In)</span> ::               &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    t(row_length,rows,nlevs)        &amp;<span class="comment">! Temperature (K)</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  , q(row_length,rows,nwet)         &amp;<span class="comment">! Specific humidity (kg/kg)</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  , qcl(row_length,rows,nwet)       &amp;<span class="comment">! Cloud water content (kg/kg)</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  , qcf(row_length,rows,nwet)       &amp;<span class="comment">! Cloud ice content (kg/kg)</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  , u(row_length,rows,nlevs)        &amp;<span class="comment">! Zonal wind (m/s)</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  , v(row_length,rows,nlevs)        &amp;<span class="comment">! Meridional wind (m/s)</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  , w(row_length,rows,0:nlevs)       <span class="comment">! Vertical velocity (m/s)</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(In)</span> ::  &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    l_scmdiags(nscmdpkgs)  <span class="comment">! Logicals for SCM diagnostics packages</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(In)</span> ::                         &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    p(row_length,rows,nlevs)                  &amp;<span class="comment">! Pressure coordinates (Pa)</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  , exner_theta_levels(row_length,rows,nlevs) &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  , rp(row_length,rows,nlevs)                 &amp;<span class="comment">! 1/p for rho levels</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                               <span class="comment">! (1/HPa or 1/mb)</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  , r_theta_levs(row_length,rows,0:nlevs)      <span class="comment">! Distance of theta levels</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                               <span class="comment">! from centre of earth (m)</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="comment">! Rate of change of surface forcing for ...</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(In)</span> ::                         &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    ch_tstar_forcing(row_length,rows,nfor-1)  &amp;<span class="comment">! ... tstar,  K/s</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  , ch_flux_h(row_length,rows,nfor-1)         &amp;<span class="comment">! ... flux_h, W/(m^2*s)</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  , ch_flux_e(row_length,rows,nfor-1)          <span class="comment">! ... flux_e, W/(m^2*s)</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="comment">! Rate of change of atmospheric forcing tendencies for ...</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(In)</span> ::                       &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    ch_tls(row_length,rows,nfor-1,nlevs)    &amp;<span class="comment">! ... Temperature K/(day*s)</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  , ch_qls(row_length,rows,nfor-1,nwet)     &amp;<span class="comment">! ... Spec. humid (kg/kg)/(day*s)</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  , ch_uls(row_length,rows,nfor-1,nlevs)    &amp;<span class="comment">! ... Zonal  wind m/(day*s^2)</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  , ch_vls(row_length,rows,nfor-1,nlevs)    &amp;<span class="comment">! ... Merid. wind m/(day*s^2)</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  , ch_wls(row_length,rows,nfor-1,0:nlevs)   <span class="comment">! ... Vert.  wind m/(day*s^2)</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="comment">! Rate of change of background fields for ...</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(In)</span> ::                       &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    ch_t_bg(row_length,rows,nfor-1,nlevs)   &amp;<span class="comment">! ... Temperature  K/s</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  , ch_q_bg(row_length,rows,nfor-1,nwet)    &amp;<span class="comment">! ... Spec. humid  (kg/kg)/s</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  , ch_u_bg(row_length,rows,nfor-1,nlevs)   &amp;<span class="comment">! ... Zonal  wind  m/(s^2)</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  , ch_v_bg(row_length,rows,nfor-1,nlevs)   &amp;<span class="comment">! ... Merid. wind  m/(s^2)</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  , ch_w_bg(row_length,rows,nfor-1,0:nlevs)  <span class="comment">! ... Vert.  wind  m/(s^2)</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="comment">! Declarations for Statistical forcing</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;   <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(In)</span> ::               &amp;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    ad(row_length,rows,nwet-1)      &amp;<span class="comment">! Term a of eqn. 2.22 for</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  , at(row_length,rows,nlevs-1)     &amp;<span class="comment">!   dew pt depression and temperature</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  , avn(row_length,rows,nlevs-1)    &amp;<span class="comment">! Term a of equ. 2.22 for</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  , aw(row_length,rows,ntrop-1)      <span class="comment">!   horiz. and vertical velocities</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="comment">! Mean of random variable for ...</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(In)</span> ::               &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    cdbar(row_length,rows,nwet)     &amp;<span class="comment">!   ... Dew Point Depression (K)</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  , ctbar(row_length,rows,nlevs)    &amp;<span class="comment">!   ... Temperature (K)</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  , cvnbar(row_length,rows,nlevs)   &amp;<span class="comment">!   ... Velocity, VN (m/s)</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  , cwbar(row_length,rows,ntrop)     <span class="comment">!   ... Vertical Velocity (mb/s)</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="comment">! Mean at daycount days from winter solstice of ...</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(In)</span> ::               &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    dbar(row_length,rows,nwet)      &amp;<span class="comment">!   ... Dew Point Depression (K)</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  , tbar(row_length,rows,nlevs)     &amp;<span class="comment">!   ... Temperature (K)</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  , vnbar(row_length, rows,nlevs)   &amp;<span class="comment">!   ... Velocity, VN (m/s)</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  , wbar(row_length,rows,ntrop)     &amp;<span class="comment">!   ... Vertical velocity (mb/s)</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  , vpbar(row_length,rows,nlevs)     <span class="comment">!   ... Velocity, VP (m/s)</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="comment">! Standard Deviation of random variable for ...</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(In)</span> ::               &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    cdsd(row_length,rows,nwet)      &amp;<span class="comment">!   ... Dew Point Depression (K)</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  , ctsd(row_length,rows,nlevs)     &amp;<span class="comment">!   ... Temperature (K)</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  , cvnsd(row_length,rows,nlevs)    &amp;<span class="comment">!   ... Velocity, VN (m/s)</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  , cwsd(row_length,rows,ntrop)      <span class="comment">!   ... Vertical velocity (mb/s)</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="comment">! Standard Deviation at daycount days from winter solstice of ...</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(In)</span> ::               &amp;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    dsd(row_length,rows,nwet)       &amp;<span class="comment">!   ... Dew Point Depression (K)</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  , tsd(row_length,rows,nlevs)      &amp;<span class="comment">!   ... Temperature (K)</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  , vnsd(row_length,rows,nlevs)     &amp;<span class="comment">!   ... Velocity, VN (m/s)</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  , wsd(row_length,rows,ntrop)       <span class="comment">!   ... Vertical Velocity (mb/s)</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(In)</span> ::               &amp;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    tdash(row_length,rows,nlevs)    &amp;<span class="comment">! Temp. corrections (K)</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  , ddash(row_length,rows,nwet)     &amp;<span class="comment">! Dew pt. corrections</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  , deltan(row_length,rows)         &amp;<span class="comment">! Radius of area (m)</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  , px(row_length,rows,ntrop)       &amp;<span class="comment">! Reciprocal log functions for calc. of</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  , py(row_length,rows,ntrop-1)      <span class="comment">!   advection used in eqns 2.12 and 2.13</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">!==============================</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">! Arguments with intent (InOut)</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">!==============================</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(InOut)</span> ::             &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    ilscnt                               <span class="comment">! Count for observational forcing</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(InOut)</span> ::                &amp;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    flux_h_scm(row_length,rows)         &amp;<span class="comment">! Srf sensible heat flux (W/m2)</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  , flux_e_scm(row_length,rows)          <span class="comment">! Srf latent heat flux   (W/m2)</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(InOut)</span> ::                &amp;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    ti_scm(row_length,rows,nlevs)       &amp;<span class="comment">! Initial temperature  (K)</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  , qi_scm(row_length,rows,nwet)         <span class="comment">! Initial spec. humid. (kg/kg)</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="comment">! Forcing increments of ...</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(InOut)</span> ::                &amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    t_inc_scm(row_length,rows,nlevs)    &amp;<span class="comment">! ... Temperature  (K)</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  , q_star_scm(row_length,rows,nwet)    &amp;<span class="comment">! ... Spec. humid. (kg/kg)</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  , qcl_inc(row_length,rows,nwet)       &amp;<span class="comment">! ... Cloud liquid (kg/kg)</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  , qcf_inc(row_length,rows,nwet)       &amp;<span class="comment">! ... Cloud ice    (kg/kg)</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  , u_inc_scm(row_length,rows,nlevs)    &amp;<span class="comment">! ... Zonal  wind  (m/s)</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  , v_inc_scm(row_length,rows,nlevs)    &amp;<span class="comment">! ... Merid. wind  (m/s)</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  , w_inc_scm(row_length,rows,0:nlevs)   <span class="comment">! ... Vert.  wind  (m/s)</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <span class="comment">! Obs. background field of ...</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(InOut)</span> ::                &amp;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    t_bg_scm(row_length,rows,nlevs)     &amp;<span class="comment">! ... Temperature  (K)</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  , q_bg_scm(row_length,rows,nwet)      &amp;<span class="comment">! ... Spec. humid. (kg/kg)</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  , u_bg_scm(row_length,rows,nlevs)     &amp;<span class="comment">! ... Zonal  wind  (m/s)</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  , v_bg_scm(row_length,rows,nlevs)     &amp;<span class="comment">! ... Merid. wind  (m/s)</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  , w_bg_scm(row_length,rows,0:nlevs)    <span class="comment">! ... Vert.  wind  (m/s)</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  <span class="comment">! Forcing tendency due to large-scale horizontal/vertical advection of ...</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(InOut)</span> ::                &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    tls(row_length,rows,nlevs)          &amp;<span class="comment">! ... Temperature (K)/day</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  , qls(row_length,rows,nwet)           &amp;<span class="comment">! ... Spec. Humid (kg/kg)/day</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  , uls(row_length,rows,nlevs)          &amp;<span class="comment">! ... Zonal wind  (m/s)/day</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  , vls(row_length,rows,nlevs)          &amp;<span class="comment">! ... Merid wind  (m/s)/day</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  , wls(row_length,rows,0:nlevs)         <span class="comment">! ... Vert. wind  (m/s)/day</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  <span class="comment">! Statistical forcing</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(InOut)</span> ::                &amp;<span class="comment">! Randomly sampled ...</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    tr(row_length,rows,nlevs,2)         &amp;<span class="comment">!   ... Temperature (K)</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  , qr(row_length,rows,nwet ,2)         &amp;<span class="comment">!   ... Specific humidity (kg/kg)</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  , vnr(row_length,rows,nlevs,2)        &amp;<span class="comment">!   ... Horizontal velocity (m/s)</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  , vpr(row_length,rows,nlevs,2)        &amp;<span class="comment">!   ... Horizontal velocity (m/s)</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  , wr(row_length,rows,ntrop,2)          <span class="comment">!   ... Vertical velocity (mb/s)</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">!==============================</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">! Arguments with intent (Out)</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">!==============================</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(Out)</span> ::               &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    iv(ntab)                            &amp;<span class="comment">! State of number generator saved</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  , iy                                  &amp;<span class="comment">!    on tape for continuation run</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  , idum</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(Out)</span> ::                  &amp;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    tstar(row_length,rows)              &amp;<span class="comment">! Surface Temperature</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  , factor_rhokh(row_length,rows)       &amp;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  , rhokh(row_length,rows,nbl_levs)     &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  , dab1(row_length,rows,44)            &amp;<span class="comment">! Observational diagnostics</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  , dap1(row_length,rows,36,nlevs)       <span class="comment">! Observational diagnostics</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  <span class="keywordtype">CHARACTER(LEN=80)</span> ::                     &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    Cmessage                             <span class="comment">! Error message if ErrorStatus &gt; 0</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">PARAMETER</span> ::       &amp;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    RoutineName = <span class="stringliteral">&#39;forcing&#39;</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keywordtype">INTEGER</span> ::                            &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    i, j, k, l</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  <span class="keywordtype">INTEGER</span> ::                            &amp;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    ErrorStatus</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <span class="keywordtype">REAL</span> ::                               &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    tstpfd                              &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  , alpha                               &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  , a2out_all(nlevs)                    &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;  , a2out_wet(nwet)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <span class="keywordtype">REAL</span> ::                               &amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    qclls(row_length,rows,nwet)         &amp;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  , qcfls(row_length,rows,nwet)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">! The increments to t, u, v, q, qcl, qcf on input</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  <span class="keywordtype">REAL</span> ::                               &amp;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    t_inc_in(row_length,rows,nlevs)     &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;  , u_inc_in(row_length,rows,nlevs)     &amp;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  , v_inc_in(row_length,rows,nlevs)     &amp;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  , w_inc_in(row_length,rows,0:nlevs)   &amp;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  , q_inc_in(row_length,rows,nlevs)     &amp;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  , qcl_inc_in(row_length,rows,nlevs)   &amp;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  , qcf_inc_in(row_length,rows,nlevs)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">! The increments to T, u, v, q due to observational forcing</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  <span class="keywordtype">REAL</span> ::                               &amp;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    t_inc_obs(row_length,rows,nlevs)    &amp;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  , u_inc_obs(row_length,rows,nlevs)    &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  , v_inc_obs(row_length,rows,nlevs)    &amp;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  , w_inc_obs(row_length,rows,0:nlevs)  &amp;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  , q_inc_obs(row_length,rows,nlevs)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">! The increments to T, q, qcl, qcf due to interactive vertical</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">! advection</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  <span class="keywordtype">REAL</span> ::                               &amp;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    t_vertadv(row_length,rows,nlevs)    &amp;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  , q_vertadv(row_length,rows,nlevs)    &amp;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  , qcl_vertadv(row_length,rows,nlevs)  &amp;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  , qcf_vertadv(row_length,rows,nlevs)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  <span class="keywordtype">REAL</span> ::                               &amp;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    th_p                                &amp;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  , th_m</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;  <span class="keywordtype">REAL</span> ::                               &amp;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    w_vertadv(row_length,rows,0:nlevs)</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  <span class="keywordtype">REAL</span> ::  &amp;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    factor &amp;<span class="comment">! Holding variable for calculations</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  , dth    &amp;<span class="comment">! Change in potential temperature</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;  , dz      <span class="comment">! Layer thickness</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;  <span class="comment">! Dr Hook</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;  <span class="comment">!=============================================================</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span> :: zhook_handle</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;FORCING&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">! Control variable</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  tstpfd = <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a> / sec_day</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  alpha  = <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a> / 3600.0</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">! Make copies of the increments as they are on input</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;  t_inc_in(:,:,:) = t_inc_scm(:,:,:)</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  u_inc_in(:,:,:) = u_inc_scm(:,:,:)</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;  v_inc_in(:,:,:) = v_inc_scm(:,:,:)</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;  w_inc_in(:,:,:) = w_inc_scm(:,:,:)</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  q_inc_in(:,:,:) = q_star_scm(:,:,:)</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  qcl_inc_in(:,:,:) = qcl_inc(:,:,:)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  qcf_inc_in(:,:,:) = qcf_inc(:,:,:)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">! Set instantaneous profiles and budgets to zero for OBS forcing</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespaces__main__force.xhtml#a5a3c71a969d2f9417fd9c240b5fe095b">obs</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaces__main__force.xhtml#a6c27204d8918b6494dc81edbba92a6e8">prindump_obs</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;      dap1(:,:,:,:) = 0.0</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;      dab1(:,:,:)   = 0.0</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! prindump_obs</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keywordflow">  END IF</span>  <span class="comment">! obs</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">! If statistical forcing required:!   Set up 2 profiles. 1 for start of day plus 1 for start of</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">!   following day and linearly interpolate between 2 values for</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">!   all forcing variables.  Increments to T and Q added and U</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">!   and V calculated</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">! Initialise qcl and qcf keep</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;  qclls(:,:,:) = 0.0</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;  qcfls(:,:,:) = 0.0</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespaces__main__force.xhtml#a7da05258ffdfa126cd8145b2dca568be">stats</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">! _ls incs = Atmos_physics1 ; _inc = forced incs</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">!  We need to keep hold of the increments calculated from physics1 and</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">!  then add them on to the ones calculated from the stats forcing</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    tls(:,:,:) = t_inc_scm(:,:,:)</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    uls(:,:,:) = u_inc_scm(:,:,:)</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    vls(:,:,:) = v_inc_scm(:,:,:)</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    wls(:,:,:) = w_inc_scm(:,:,:)</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    qls(:,:,:) = q_star_scm(:,:,:)</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    qclls(:,:,:) = qcl_inc(:,:,:)</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    qcfls(:,:,:) = qcf_inc(:,:,:)</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment">! DEPENDS ON: statstep</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keyword">CALL </span><a class="code" href="statstep_8f90.xhtml#a66da6b47b1629ba1e2c316385a7b8a83" title="SUBROUTINE StatStep. ">statstep</a>                                                             &amp;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;      <span class="comment">! In</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;      ( row_length, rows, nlevs, nwet, ntrop, deltan, px, py, daysteps        &amp;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;      , stepcount, dayno_wint, tr, vnr, vpr, qr, wr, tbar, tsd, tdash, dbar   &amp;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;      , dsd, ddash, vnbar, vpbar, vnsd, wbar, wsd, ctbar, ctsd, at, cdbar     &amp;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;      , cdsd, ad, cvnbar, cvnsd, avn, cwbar, cwsd, aw, p, rp, u, v, w, t, q   &amp;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;      , <a class="code" href="namespaces__main__force.xhtml#a5b45d4cb0f02acafe3877207ba966e08">prinstat</a>, u_inc_scm, v_inc_scm, w_inc_scm, t_inc_scm, q_star_scm      &amp;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;      , daycount, <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>, iv, ntab, iy, idum )</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">! qcl and qcf temporarily forced using q/100.0</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    qcl_inc(:,:,:) = q_star_scm(:,:,:)/100.0</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    qcf_inc(:,:,:) = q_star_scm(:,:,:)/100.0</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">!  Need to add on increments calculated in physics1</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    t_inc_scm(:,:,:) = t_inc_scm(:,:,:) + tls(:,:,:)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    u_inc_scm(:,:,:) = u_inc_scm(:,:,:) + uls(:,:,:)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    v_inc_scm(:,:,:) = v_inc_scm(:,:,:) + vls(:,:,:)</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    q_star_scm(:,:,:) = q_star_scm(:,:,:) + qls(:,:,:)</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    qcl_inc(:,:,:) = qcl_inc(:,:,:) + qclls(:,:,:)</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    qcf_inc(:,:,:) = qcf_inc(:,:,:) + qcfls(:,:,:)</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment">! W not used in 4.5, added here, but will need someone to use</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">! stats forcing in anger to modify.</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="keywordflow">DO</span> k=1, ntrop</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;      <span class="keywordflow">DO</span> j=1, rows</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        <span class="keywordflow">DO</span> i=1, row_length</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;          w_inc_scm(i,j,k) = w_inc_scm(i,j,k) + wls(i,j,k)</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (<a class="code" href="namespaces__main__force.xhtml#a5a3c71a969d2f9417fd9c240b5fe095b">obs</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="comment">! _ls = forced increments ; _inc = Atmos_Physics1 incs</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="comment">!       Select forcing value for time of day</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">! NOTE: ilscnt is used to count the number of observational profiles</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">!       as the run proceeds. Among other things, it is used to select</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment">!       the appropriate change/gradient to the forcing tendencies when</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="comment">!       observational intervals greater than the model timestep.</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">!       THIS FUNCTIONALITY IS FLAWED! It is recommended that users</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment">!       have ilscnt set to 0 in their SCM namelists and have obs</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">!       forcings commence at the same time they wish to begin their</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">!       SCM run.                                    Wong/Kerr-Munslow</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    <span class="keywordflow">IF</span> (mod((daycount-1) * int(sec_day)                             &amp;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;      + (stepcount-1) * int(<a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>)                               &amp;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;      , ichgf * int(<a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>))  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;      ilscnt = ilscnt + 1</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <span class="keywordflow">IF</span> (ilscnt  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;      ilscnt = 1</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (ilscnt  &gt;=  nfor) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;      <span class="keyword">WRITE</span>(cmessage,*) <span class="stringliteral">&#39;time exceeds forcing period&#39;</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;      errorstatus = 1</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaces__main__force.xhtml#a2e31a374142e320149414004930c832d">obs_surf</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;      <span class="comment">! Update surface forcings</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;      <span class="comment">! -      flux_h_scm(:,:) = flux_h_scm(:,:) + timestep*ch_flux_h(:,:,ilscnt)</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;      flux_e_scm(:,:) = flux_e_scm(:,:) + <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>*ch_flux_e(:,:,ilscnt)</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;      tstar(:,:)      = tstar(:,:)      + <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>*ch_tstar_forcing(:,:,ilscnt)</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;      rhokh(:,:,1)      = flux_h_scm(:,:)</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;      factor_rhokh(:,:) = flux_e_scm(:,:)</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="comment">! Update current large-scale forcings</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <span class="comment">! -    tls(:,:,:) = tls(:,:,:) + timestep*ch_tls(:,:,ilscnt,:)</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    uls(:,:,:) = uls(:,:,:) + <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>*ch_uls(:,:,ilscnt,:)</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    vls(:,:,:) = vls(:,:,:) + <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>*ch_vls(:,:,ilscnt,:)</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    wls(:,:,:) = wls(:,:,:) + <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>*ch_wls(:,:,ilscnt,:)</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    qls(:,:,:) = qls(:,:,:) + <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>*ch_qls(:,:,ilscnt,:)</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="comment">! Update observed background state (T,q,u,v,w)</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        t_bg_scm(:,:,:)   = t_bg_scm(:,:,:) + <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>*ch_t_bg(:,:,ilscnt,:)</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    q_bg_scm(:,:,:)   = q_bg_scm(:,:,:) + <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>*ch_q_bg(:,:,ilscnt,:)</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    u_bg_scm(:,:,:)   = u_bg_scm(:,:,:) + <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>*ch_u_bg(:,:,ilscnt,:)</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    v_bg_scm(:,:,:)   = v_bg_scm(:,:,:) + <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>*ch_v_bg(:,:,ilscnt,:)</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    w_bg_scm(:,:,:)   = w_bg_scm(:,:,:) + <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>*ch_w_bg(:,:,ilscnt,:)</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <span class="comment">! Add increment due to large-scale forcings</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        t_inc_scm(:,:,:) = t_inc_scm(:,:,:)  + tstpfd*tls(:,:,:)</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    q_star_scm(:,:,:) = q_star_scm(:,:,:) + tstpfd*qls(:,:,:)</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keywordflow">IF</span> (.NOT. old_vertadv) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;      w_inc_scm(:,:,:) = w_inc_scm(:,:,:)  + tstpfd*wls(:,:,:)</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="comment">! DEPENDS ON: relax_forcing</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    <span class="keyword">CALL </span><a class="code" href="relax__forcing_8f90.xhtml#a826febad01e3d3a13b4e163380fe4d96" title="*********************************COPYRIGHT********************************* *************************...">relax_forcing</a>                                                        &amp;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;      <span class="comment">! In</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;      ( row_length, rows, nlevs, t, ti_scm, t_bg_scm                          &amp;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;      , p, <a class="code" href="namespaces__main__force.xhtml#ad2be8166cda8a1c7226fbc9bb8b16b1d">plev_t</a>, <a class="code" href="namespaces__main__force.xhtml#ae60493c336ce28eabeb022963cdecb8b">tau_t</a>, <a class="code" href="namespaces__main__force.xhtml#ab8636bb358eea8e7645d10b07f5eb084">rlx_t</a>                                               &amp;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;      <span class="comment">! InOut</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;      , t_inc_scm )</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="comment">! DEPENDS ON: relax_forcing</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="keyword">CALL </span><a class="code" href="relax__forcing_8f90.xhtml#a826febad01e3d3a13b4e163380fe4d96" title="*********************************COPYRIGHT********************************* *************************...">relax_forcing</a>                                                        &amp;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;      <span class="comment">! In</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;      ( row_length, rows, nwet, q, qi_scm, q_bg_scm                           &amp;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;      , p, <a class="code" href="namespaces__main__force.xhtml#a79da55696c1b71f5cb2b0bea85a5c9b3">plev_q</a>, <a class="code" href="namespaces__main__force.xhtml#acf6767893194887627f89cae89d4e017">tau_q</a>, <a class="code" href="namespaces__main__force.xhtml#afc581c4d3fbffcabecf2725920aec046">rlx_q</a>                                               &amp;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;      <span class="comment">! InOut</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;      , q_star_scm )</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <span class="keywordflow">IF</span> (old_rlx) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            <span class="comment">! OLD BEHAVIOUR, NOT RECOMMENDED</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;      <span class="comment">! (would like to get rid of this when possible)</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            <span class="keywordflow">SELECT CASE</span> (<a class="code" href="namespaces__main__force.xhtml#aea1291db0a6e915f97d8c295b46e30c2">rlx_u</a>)</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;      <span class="keywordflow">CASE</span> (rlx_none)</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        u_inc_scm(:,:,:) = u_inc_scm(:,:,:) + uls(:,:,:)*tstpfd</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;      <span class="keywordflow">CASE</span> (rlx_init, rlx_inst_init)</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="comment">! Old EUROCS code</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="comment">! This relaxs back to initial conditions.  This is a mess because the</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="comment">! original eurocs logical to relax uv forcings was not affected by the</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        <span class="comment">! old l_windrlx logical. The old eurocs relaxation was also done</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        <span class="comment">! BEFORE the winds were updated, while the original non-eurocs</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        <span class="comment">! wind relaxtion was done AFTER the winds were updated.</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        <span class="comment">! DEPENDS ON: relax_forcing</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        <span class="keyword">CALL </span><a class="code" href="relax__forcing_8f90.xhtml#a826febad01e3d3a13b4e163380fe4d96" title="*********************************COPYRIGHT********************************* *************************...">relax_forcing</a>                                                    &amp;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;          <span class="comment">! In</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;          ( row_length, rows, nlevs, u, <a class="code" href="namespaces__main__force.xhtml#a3c1aa9c8ffb5086713cc4c08301e64fe">ui</a>, u_bg_scm, p, <a class="code" href="namespaces__main__force.xhtml#a5f8cef8256e232cfb8738b0430e8e63c">plev_u</a>, <a class="code" href="namespaces__main__force.xhtml#a514460e96a269e7a3b145f4e2addc662">tau_u</a>, <a class="code" href="namespaces__main__force.xhtml#aea1291db0a6e915f97d8c295b46e30c2">rlx_u</a> &amp;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;          <span class="comment">! InOut</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;          , u_inc_scm )</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        u_inc_scm(:,:,:) = u_inc_scm(:,:,:) + uls(:,:,:)*tstpfd</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;      <span class="keywordflow">CASE</span> (rlx_bgrd, rlx_inst_bgrd)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="comment">! This relaxs back to obs increments.</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <span class="comment">! DEPENDS ON: relax_forcing</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        <span class="keyword">CALL </span><a class="code" href="relax__forcing_8f90.xhtml#a826febad01e3d3a13b4e163380fe4d96" title="*********************************COPYRIGHT********************************* *************************...">relax_forcing</a>                                                    &amp;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;          <span class="comment">! In</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;          ( row_length, rows, nlevs, u, <a class="code" href="namespaces__main__force.xhtml#a3c1aa9c8ffb5086713cc4c08301e64fe">ui</a>, u_bg_scm, p, <a class="code" href="namespaces__main__force.xhtml#a5f8cef8256e232cfb8738b0430e8e63c">plev_u</a>, <a class="code" href="namespaces__main__force.xhtml#a514460e96a269e7a3b145f4e2addc662">tau_u</a>, <a class="code" href="namespaces__main__force.xhtml#aea1291db0a6e915f97d8c295b46e30c2">rlx_u</a> &amp;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;          <span class="comment">! InOut</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;          , u_inc_scm )</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="keywordflow">      END SELECT</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;      <span class="keywordflow">SELECT CASE</span> (<a class="code" href="namespaces__main__force.xhtml#a51475f59cc5b63968bd31baaacbe8fff">rlx_v</a>)</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;      <span class="keywordflow">CASE</span> (rlx_none)</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        v_inc_scm(:,:,:) = v_inc_scm(:,:,:) + vls(:,:,:)*tstpfd</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;      <span class="keywordflow">CASE</span> (rlx_init, rlx_inst_init)</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        <span class="comment">! Old EUROCS code</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        <span class="comment">! This relaxs back to initial conditions.  This is a mess because the</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        <span class="comment">! original eurocs logical to relax uv forcings was not affected by the</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        <span class="comment">! old l_windrlx logical. The old eurocs relaxation was also done</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        <span class="comment">! BEFORE the winds were updated, while the original non-eurocs</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        <span class="comment">! wind relaxtion was done AFTER the winds were updated.</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        <span class="comment">! DEPENDS ON: relax_forcing</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;        <span class="keyword">CALL </span><a class="code" href="relax__forcing_8f90.xhtml#a826febad01e3d3a13b4e163380fe4d96" title="*********************************COPYRIGHT********************************* *************************...">relax_forcing</a>                                                    &amp;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;          <span class="comment">! In</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;          ( row_length, rows, nlevs, v, <a class="code" href="namespaces__main__force.xhtml#a49d89274ec50067ec801d79984b95c8c">vi</a>, v_bg_scm, p, <a class="code" href="namespaces__main__force.xhtml#a96de5169b27e1c6f62e843bc09b11535">plev_v</a>, <a class="code" href="namespaces__main__force.xhtml#ac435bbea8c283f2d2d89418d1e19ef31">tau_v</a>, <a class="code" href="namespaces__main__force.xhtml#a51475f59cc5b63968bd31baaacbe8fff">rlx_v</a> &amp;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;          <span class="comment">! InOut</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;          , v_inc_scm )</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        v_inc_scm(:,:,:) = v_inc_scm(:,:,:) + vls(:,:,:)*tstpfd</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;      <span class="keywordflow">CASE</span> (rlx_bgrd, rlx_inst_bgrd)</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        <span class="comment">! This relaxs back to obs increments</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        <span class="comment">! DEPENDS ON: relax_forcing</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        <span class="keyword">CALL </span><a class="code" href="relax__forcing_8f90.xhtml#a826febad01e3d3a13b4e163380fe4d96" title="*********************************COPYRIGHT********************************* *************************...">relax_forcing</a>                                                    &amp;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;          <span class="comment">! In</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;          ( row_length, rows, nlevs, v, <a class="code" href="namespaces__main__force.xhtml#a49d89274ec50067ec801d79984b95c8c">vi</a>, v_bg_scm, p, <a class="code" href="namespaces__main__force.xhtml#a96de5169b27e1c6f62e843bc09b11535">plev_v</a>, <a class="code" href="namespaces__main__force.xhtml#ac435bbea8c283f2d2d89418d1e19ef31">tau_v</a>, <a class="code" href="namespaces__main__force.xhtml#a51475f59cc5b63968bd31baaacbe8fff">rlx_v</a> &amp;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;          <span class="comment">! InOut</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;          , v_inc_scm )</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="keywordflow">      END SELECT</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    <span class="keywordflow">ELSE</span> <span class="comment">! Use new revised wind relaxation code</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;      <span class="comment">! Update</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;      u_inc_scm(:,:,:) = u_inc_scm(:,:,:) + uls(:,:,:)*tstpfd</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;      v_inc_scm(:,:,:) = v_inc_scm(:,:,:) + vls(:,:,:)*tstpfd</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;      <span class="comment">! DEPENDS ON: relax_forcing</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;      <span class="keyword">CALL </span><a class="code" href="relax__forcing_8f90.xhtml#a826febad01e3d3a13b4e163380fe4d96" title="*********************************COPYRIGHT********************************* *************************...">relax_forcing</a>                                                      &amp;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        <span class="comment">! In</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        ( row_length, rows, nlevs, u, <a class="code" href="namespaces__main__force.xhtml#a3c1aa9c8ffb5086713cc4c08301e64fe">ui</a>, u_bg_scm, p, <a class="code" href="namespaces__main__force.xhtml#a5f8cef8256e232cfb8738b0430e8e63c">plev_u</a>, <a class="code" href="namespaces__main__force.xhtml#a514460e96a269e7a3b145f4e2addc662">tau_u</a>, <a class="code" href="namespaces__main__force.xhtml#aea1291db0a6e915f97d8c295b46e30c2">rlx_u</a>   &amp;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        <span class="comment">! InOut</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        , u_inc_scm )</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;      <span class="comment">! DEPENDS ON: relax_forcing</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;      <span class="keyword">CALL </span><a class="code" href="relax__forcing_8f90.xhtml#a826febad01e3d3a13b4e163380fe4d96" title="*********************************COPYRIGHT********************************* *************************...">relax_forcing</a>                                                      &amp;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;        <span class="comment">! In</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        ( row_length, rows, nlevs, v, <a class="code" href="namespaces__main__force.xhtml#a49d89274ec50067ec801d79984b95c8c">vi</a>, v_bg_scm, p, <a class="code" href="namespaces__main__force.xhtml#a96de5169b27e1c6f62e843bc09b11535">plev_v</a>, <a class="code" href="namespaces__main__force.xhtml#ac435bbea8c283f2d2d89418d1e19ef31">tau_v</a>, <a class="code" href="namespaces__main__force.xhtml#a51475f59cc5b63968bd31baaacbe8fff">rlx_v</a>   &amp;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        <span class="comment">! InOut</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        , v_inc_scm )</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! (old_rlx)</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="comment">! DEPENDS ON: relax_forcing</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    <span class="keyword">CALL </span><a class="code" href="relax__forcing_8f90.xhtml#a826febad01e3d3a13b4e163380fe4d96" title="*********************************COPYRIGHT********************************* *************************...">relax_forcing</a>                                                        &amp;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;      <span class="comment">! In</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;      ( row_length, rows, nlevs, w(:,:,1:nlevs), <a class="code" href="namespaces__main__force.xhtml#ae499a94d3c1ae674fa611c36e0fc0d16">wi</a>(:,:,1:nlevs)              &amp;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;      , w_bg_scm(:,:,1:nlevs), p, <a class="code" href="namespaces__main__force.xhtml#ac3ac5676452b2cbca0ec162f770accfb">plev_w</a>, <a class="code" href="namespaces__main__force.xhtml#a01c378f73d5f0856b59a663833f6dcde">tau_w</a>, <a class="code" href="namespaces__main__force.xhtml#a692792fb3744de729f86e54f07757e36">rlx_w</a>                        &amp;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;      <span class="comment">! InOut</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;      , w_inc_scm(:,:,1:nlevs) )</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="comment">! SCM Forcing OR Increments Diagnostics Package</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <span class="keywordflow">IF</span> (l_scmdiags(<a class="code" href="namespaces__scmop__mod.xhtml#a61abfb55fdd33cfc5d44f00076f252c8">scmdiag_forc</a>)                                              &amp;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;         .OR. l_scmdiags(<a class="code" href="namespaces__scmop__mod.xhtml#a8a1879aca60631ef706c8ce42618ced6">scmdiag_incs</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;      <span class="comment">! These are large-scale forcings and INCLUDE any relaxation effects</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;      t_inc_obs(:,:,:) = t_inc_scm(:,:,:)  - t_inc_in(:,:,:)</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;      q_inc_obs(:,:,:) = q_star_scm(:,:,:) - q_inc_in(:,:,:)</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;      u_inc_obs(:,:,:) = u_inc_scm(:,:,:)  - u_inc_in(:,:,:)</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;      v_inc_obs(:,:,:) = v_inc_scm(:,:,:)  - v_inc_in(:,:,:)</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;      w_inc_obs(:,:,:) = w_inc_scm(:,:,:)  - w_inc_in(:,:,:)</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="comment">! Interactive vertical advection</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="comment">! NOTE: This assumes that the specified forcing does NOT contain</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="comment">!       increments resulting from LS vertical advection.</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="comment">!       If this is not the case, using this option will result in</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="comment">!       double counting.</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaces__main__force.xhtml#a211b337f86274e7397badf56f1ee6222">l_vertadv</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;      <span class="keywordflow">IF</span> (old_vertadv) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;        w_vertadv(:,:,:) = wls(:,:,:)</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        <span class="comment">! w_inc_scm at this point has allowed for increments due to</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        <span class="comment">! LS-tendency and relaxation. The original code calculates</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        <span class="comment">! w*d(x)/dz, though uses w = large scale w tendency. Shouldn&#39;t</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        <span class="comment">! it be using w + w increment from specified LS forcing routine.</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <span class="comment">! Interactive vertical advection should be using the</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        <span class="comment">! current wind profile not the specified LS tendency</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;        w_vertadv(:,:,:) = w(:,:,:) + w_inc_scm(:,:,:)</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;      t_vertadv(:,:,:)   = 0.0</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;      q_vertadv(:,:,:)   = 0.0</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;      qcl_vertadv(:,:,:) = 0.0</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;      qcf_vertadv(:,:,:) = 0.0</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;           <span class="comment">! Vertical temperature advection</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;           <span class="comment">! Specified large scale forcing does not include contribution</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;      <span class="comment">! from vertical advection.  Approximate contributions due to</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;      <span class="comment">! vertical advection using upstream approximation.</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;      <span class="comment">! NOTE: tls holds horizontal advection plus other fixed forcing.</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;      <span class="keywordflow">DO</span> k=1, nlevs</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        <span class="keywordflow">DO</span> j=1, rows</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;          <span class="keywordflow">DO</span> i=1, row_length</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;            factor = - <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>*w_vertadv(i,j,k)*exner_theta_levels(i,j,k)</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;            <span class="keywordflow">IF</span> (w_vertadv(i,j,k) &lt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;              <span class="comment">! Subsidence</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;              <span class="keywordflow">IF</span> (k &lt; nlevs) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                th_p = t(i,j,k+1) / exner_theta_levels(i,j,k+1)</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;                th_m = t(i,j,k)   / exner_theta_levels(i,j,k)</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;                dth  = th_p - th_m</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;                dz   = r_theta_levs(i,j,k+1) - r_theta_levs(i,j,k)</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                t_vertadv(i,j,k)  = factor*dth / dz</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;              <span class="comment">! Ascent</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;              <span class="keywordflow">IF</span> (k &gt; 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;                th_p = t(i,j,k)   / exner_theta_levels(i,j,k)</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;                th_m = t(i,j,k-1) / exner_theta_levels(i,j,k-1)</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                dth  = th_p - th_m</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                dz   = r_theta_levs(i,j,k) - r_theta_levs(i,j,k-1)</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                t_vertadv(i,j,k) = factor*dth / dz</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;<span class="keywordflow">            END IF</span> <span class="comment">! w_vertadv &lt; 0.0</span></div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;           <span class="comment">! Vertical moisture advection</span></div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;           <span class="comment">! Specified large scale forcing does not include contribution</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;      <span class="comment">! from vertical advection.  Approximate contributions due to</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;      <span class="comment">! vertical advection using upstream approximation.</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;      <span class="comment">! NOTE: qls holds horizontal advection plus other fixed forcing.</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;      <span class="keywordflow">DO</span> k=1, nwet</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        <span class="keywordflow">DO</span> j=1, rows</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;          <span class="keywordflow">DO</span> i=1, row_length</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;            factor = - <a class="code" href="namespaces__main__force.xhtml#aa7a84abafd946739c6635c1d231d7dbd">timestep</a>*w_vertadv(i,j,k)</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;            <span class="keywordflow">IF</span> (w_vertadv(i,j,k) &lt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;              <span class="comment">! Subsidence</span></div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;              <span class="keywordflow">IF</span> (k &lt; nlevs) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;                dz = r_theta_levs(i,j,k+1) - r_theta_levs(i,j,k)</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                q_vertadv(i,j,k)   = factor*(q(i,j,k+1)   - q(i,j,k))   / dz</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;                qcl_vertadv(i,j,k) = factor*(qcl(i,j,k+1) - qcl(i,j,k)) / dz</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;                qcf_vertadv(i,j,k) = factor*(qcf(i,j,k+1) - qcf(i,j,k)) / dz</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;              <span class="comment">! Ascent</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;              <span class="keywordflow">IF</span> (k &gt; 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;                dz = r_theta_levs(i,j,k) - r_theta_levs(i,j,k-1)</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                q_vertadv(i,j,k)   = factor*(q(i,j,k)   - q(i,j,k-1))   / dz</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;                qcl_vertadv(i,j,k) = factor*(qcl(i,j,k) - qcl(i,j,k-1)) / dz</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;                qcf_vertadv(i,j,k) = factor*(qcf(i,j,k) - qcf(i,j,k-1)) / dz</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;<span class="keywordflow">            END IF</span> <span class="comment">! w_vertadv &lt; 0.0</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;      t_inc_scm(:,:,:)  = t_inc_scm(:,:,:)  + t_vertadv(:,:,:)</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;      q_star_scm(:,:,:) = q_star_scm(:,:,:) + q_vertadv(:,:,:)</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;      qcl_inc(:,:,:)    = qcl_inc(:,:,:)    + qcl_vertadv(:,:,:)</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;      qcf_inc(:,:,:)    = qcf_inc(:,:,:)    + qcf_vertadv(:,:,:)</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! vert_adv</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaces__main__force.xhtml#a6c27204d8918b6494dc81edbba92a6e8">prindump_obs</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;      dap1(:,:,10,:) = t_inc_scm(:,:,:) / sec_day</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;      dap1(:,:,20,:) = q_star_scm(:,:,:) * 1000.0 / sec_day</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;<span class="keywordflow">  END IF</span>                     <span class="comment">! stats or obs</span></div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;<span class="comment">!     SCM Forcing OR Increments Diagnostics Packages</span></div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;  <span class="keywordflow">IF</span> (l_scmdiags(<a class="code" href="namespaces__scmop__mod.xhtml#a61abfb55fdd33cfc5d44f00076f252c8">scmdiag_forc</a>)                                                &amp;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;      .OR. l_scmdiags(<a class="code" href="namespaces__scmop__mod.xhtml#a8a1879aca60631ef706c8ce42618ced6">scmdiag_incs</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(uls, <span class="stringliteral">&#39;ls_u_inc&#39;</span>                                            &amp;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;      , <span class="stringliteral">&#39;Large-scale u-wind forcing tendency&#39;</span>, <span class="stringliteral">&#39;(m/s)/day&#39;</span>                    &amp;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(vls, <span class="stringliteral">&#39;ls_v_inc&#39;</span>                                            &amp;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;      , <span class="stringliteral">&#39;Large-scale v-wind forcing tendency&#39;</span>, <span class="stringliteral">&#39;(m/s)/day&#39;</span>                    &amp;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    <span class="keywordflow">DO</span> k=1, nlevs</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;      a2out_all(k) = wls(1,1,k)</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(a2out_all, <span class="stringliteral">&#39;ls_w_inc&#39;</span>                                      &amp;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;      , <span class="stringliteral">&#39;Large-scale w-wind forcing tendency&#39;</span>, <span class="stringliteral">&#39;(m/s)/day&#39;</span>                    &amp;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    <span class="keywordflow">If</span> (.NOT. old_nml) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(u_bg_scm, <span class="stringliteral">&#39;bg_u&#39;</span>                                         &amp;</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        , <span class="stringliteral">&#39;Background u-wind&#39;</span>, <span class="stringliteral">&#39;m/s&#39;</span>                                          &amp;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(v_bg_scm, <span class="stringliteral">&#39;bg_v&#39;</span>                                         &amp;</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;        , <span class="stringliteral">&#39;Background v-wind&#39;</span>, <span class="stringliteral">&#39;m/s&#39;</span>                                          &amp;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;      <span class="keywordflow">DO</span> k=1, nlevs</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        a2out_all(k) = w_bg_scm(1,1,k)</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(a2out_all, <span class="stringliteral">&#39;bg_w&#39;</span>                                        &amp;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;        , <span class="stringliteral">&#39;Background w-wind&#39;</span>, <span class="stringliteral">&#39;m/s&#39;</span>                                          &amp;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(q_bg_scm, <span class="stringliteral">&#39;bg_q&#39;</span>                                         &amp;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;        , <span class="stringliteral">&#39;Background specific humidity&#39;</span>, <span class="stringliteral">&#39;kg/kg&#39;</span>                             &amp;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(t_bg_scm, <span class="stringliteral">&#39;bg_t&#39;</span>                                         &amp;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;        , <span class="stringliteral">&#39;Background temperature&#39;</span>, <span class="stringliteral">&#39;K&#39;</span>                                       &amp;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! old_nml</span></div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <span class="keywordflow">DO</span> k=1, nlevs</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;      a2out_all(k) = t_inc_scm(1,1,k) - t_inc_in(1,1,k)</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(a2out_all, <span class="stringliteral">&#39;dt_totforc&#39;</span>                                    &amp;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;      , <span class="stringliteral">&#39;Total temperature increment from s_forcng&#39;</span>,<span class="stringliteral">&#39;K&#39;</span>                       &amp;</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    <span class="keywordflow">DO</span> k=1, nlevs</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;      a2out_all(k) = u_inc_scm(1,1,k) - u_inc_in(1,1,k)</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(a2out_all, <span class="stringliteral">&#39;du_totforc&#39;</span>                                    &amp;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;      , <span class="stringliteral">&#39;Total u increment from s_forcng&#39;</span>, <span class="stringliteral">&#39;m/s&#39;</span>                              &amp;</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    <span class="keywordflow">DO</span> k=1, nlevs</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;      a2out_all(k) = v_inc_scm(1,1,k) - v_inc_in(1,1,k)</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(a2out_all, <span class="stringliteral">&#39;dv_totforc&#39;</span>                                    &amp;</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;      , <span class="stringliteral">&#39;Total v increment from s_forcng&#39;</span>, <span class="stringliteral">&#39;m/s&#39;</span>                              &amp;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    <span class="keywordflow">DO</span> k=1, nwet</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;      a2out_wet(k) = q_star_scm(1,1,k) - q_inc_in(1,1,k)</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(a2out_wet, <span class="stringliteral">&#39;dq_totforc&#39;</span>                                    &amp;</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;      , <span class="stringliteral">&#39;Total humidity increment from s_forcng&#39;</span>, <span class="stringliteral">&#39;kg/kg&#39;</span>                     &amp;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    <span class="keywordflow">DO</span> k=1, nwet</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;      a2out_wet(k) = qcl_inc(1,1,k) - qcl_inc_in(1,1,k)</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(a2out_wet, <span class="stringliteral">&#39;dqcl_totforc&#39;</span>                                  &amp;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;      , <span class="stringliteral">&#39;Total QCL increment from s_forcng&#39;</span>, <span class="stringliteral">&#39;kg/kg&#39;</span>                          &amp;</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    <span class="keywordflow">DO</span> k=1, nwet</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;      a2out_wet(k) = qcf_inc(1,1,k) - qcf_inc_in(1,1,k)</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;    <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(a2out_wet, <span class="stringliteral">&#39;dqcf_totforc&#39;</span>                                  &amp;</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;      , <span class="stringliteral">&#39;Total QCF increment from s_forcng&#39;</span>, <span class="stringliteral">&#39;kg/kg&#39;</span>                          &amp;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;<span class="comment">!       SCM Forcing OR Increments Diagnostics Packages</span></div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;<span class="comment">!       when observational based forcing specified</span></div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaces__main__force.xhtml#a5a3c71a969d2f9417fd9c240b5fe095b">obs</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(t_inc_obs, <span class="stringliteral">&#39;dt_obsforc&#39;</span>                                  &amp;</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;        , <span class="stringliteral">&#39;Temperature increment from observational forcing&#39;</span>, <span class="stringliteral">&#39;K&#39;</span>             &amp;</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(u_inc_obs, <span class="stringliteral">&#39;du_obsforc&#39;</span>                                  &amp;</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;        , <span class="stringliteral">&#39;U increment from observational forcing&#39;</span>, <span class="stringliteral">&#39;m/s&#39;</span>                     &amp;</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(v_inc_obs, <span class="stringliteral">&#39;dv_obsforc&#39;</span>                                  &amp;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;        , <span class="stringliteral">&#39;V increment from observational forcing&#39;</span>, <span class="stringliteral">&#39;m/s&#39;</span>                     &amp;</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;      <span class="keywordflow">DO</span> k=1, nlevs</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;        a2out_all(k) = w_inc_obs(1,1,k)</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(a2out_all, <span class="stringliteral">&#39;dw_obsforc&#39;</span>                                  &amp;</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;        , <span class="stringliteral">&#39;W increment from observational forcing&#39;</span>, <span class="stringliteral">&#39;m/s&#39;</span>                     &amp;</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(q_inc_obs, <span class="stringliteral">&#39;dq_obsforc&#39;</span>                                  &amp;</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;        , <span class="stringliteral">&#39;Humidity increment from observational forcing&#39;</span>, <span class="stringliteral">&#39;kg/kg&#39;</span>            &amp;</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! obs</span></div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;<span class="comment">!       SCM Forcing OR Increments Diagnostics Packages</span></div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;<span class="comment">!       when vertical advection specified</span></div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaces__main__force.xhtml#a211b337f86274e7397badf56f1ee6222">l_vertadv</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(t_vertadv, <span class="stringliteral">&#39;dt_vertadv&#39;</span>                                  &amp;</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;        , <span class="stringliteral">&#39;Temperature increment from vertical advection&#39;</span>, <span class="stringliteral">&#39;K&#39;</span>                &amp;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(q_vertadv, <span class="stringliteral">&#39;dq_vertadv&#39;</span>                                  &amp;</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;        , <span class="stringliteral">&#39;Humidity increment from vertical advection&#39;</span>, <span class="stringliteral">&#39;kg/kg&#39;</span>               &amp;</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(qcl_vertadv, <span class="stringliteral">&#39;dqcl_vertadv&#39;</span>                              &amp;</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;        , <span class="stringliteral">&#39;QCL increment from vertical advection&#39;</span>, <span class="stringliteral">&#39;kg/kg&#39;</span>                    &amp;</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(qcf_vertadv, <span class="stringliteral">&#39;dqcf_vertadv&#39;</span>                              &amp;</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;        , <span class="stringliteral">&#39;QCF increment from vertical advection&#39;</span>, <span class="stringliteral">&#39;kg/kg&#39;</span>                    &amp;</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;        , <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>, <span class="stringliteral">&#39;&#39;</span>, routinename)</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! l_vertadv</span></div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! l_SCMdiags(SCMdiag_forc).OR l_SCMdiags(SCMdiag_incs)</span></div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;FORCING&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="forcing_8f90.xhtml#a686cb010df42adf093fbebe646a89482" title="Subroutine forcing. ">forcing</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
