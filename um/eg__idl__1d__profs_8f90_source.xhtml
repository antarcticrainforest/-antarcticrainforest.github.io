<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/dynamics_advection/eg_idl_1d_profs.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_cd31b8e5b091f70cb512ede7e9775b9c.xhtml">dynamics_advection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">eg_idl_1d_profs.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="eg__idl__1d__profs_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespaceeg__idl__1d__profs__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceeg__idl__1d__profs__mod.xhtml" title="Subroutine Interface: ">eg_idl_1d_profs_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespaceeg__idl__1d__profs__mod.xhtml#adf934cae819e30e56cc0be8194c12fca">eg_idl_1d_profs</a>(exner_ref_pro, rho_ref_pro, thetav_ref_pro,  &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                           Tprofile_number, T_surface, p_surface,       &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                           xi1_p, xi2_p, intw_rho2w, intw_w2rho,        &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                           coord_at_theta, coord_at_rho,                &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                           depth_factor, surface_offset,                &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;                           dtheta_dz1, height_dz1, L_constant_dz,       &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;                           g_theta_ref, model_levels)</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="namespaceeg__idl__1d__profs__mod.xhtml#adf934cae819e30e56cc0be8194c12fca">   15</a></span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">,            ONLY</span>: jpim, jprb       <span class="comment">!DrHook</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">,             ONLY</span>: lhook, dr_hook   <span class="comment">!DrHook</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: r, p_zero, kappa, recip_kappa</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml" title="Parameters for deep atmosphere baroclinic wave test. ">eg_idl_deep_baro_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a5e95c7eb3aa76247abd5450ab0c8201f">tau1</a>, <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a7cf540d579b161c9c0f4cc5fc72c80b3">tau2</a>, <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a77d43b94a7b69b7a29dc8d96212123fe">tau1_int</a>, <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#af5ae07e9bfa46e9cb86644fbb0e9a0f4">tau2_int</a>,         &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                                <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a474848ae3ee0797fb420b577961f513a">k_const_save</a>, <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#ad43545bf60656cd79aa22e46497d816b">l_shallow_save</a>, <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#ab5f03200feb6701846c8c7d9bbf50bb3">t0</a>, <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a1c34fa314b3eaae432ed8d7874ba6ed6">h</a>, <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a2ac450b6cdb6ecce2342d3e70fb72af9">b</a>, &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                                <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a0348736293ebe7a3fcc18f20ed55ae8b">c</a>, <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#af7cff1a5302b72468c77d290321e6bbf">b_const_save</a>, <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a5378b90a18da10d1c11712fe0575fc3c">eg_lapse</a></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: earth_radius, g, omega</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span>    :: model_levels</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span>    :: Tprofile_number</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(INOUT)</span> :: T_surface         <span class="comment">! Surface temperature (K)</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(INOUT)</span> :: p_surface         <span class="comment">! Surface pressure (Pa)</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(IN)</span>    :: depth_factor</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(IN)</span>    :: surface_offset</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(IN)</span>    :: xi1_p</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(IN)</span>    :: xi2_p</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(IN)</span>    :: intw_rho2w(model_levels,2)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(IN)</span>    :: intw_w2rho(model_levels,2)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(IN)</span>    :: coord_at_theta(0:model_levels)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(IN)</span>    :: coord_at_rho(model_levels)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(IN)</span>    :: g_theta_ref(0:model_levels)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(IN)</span>    :: dtheta_dz1(3)</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(IN)</span>    :: height_dz1(2)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span>   :: L_constant_dz</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(OUT)</span>   :: exner_ref_pro(0:model_levels+1)<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(OUT)</span>   :: thetav_ref_pro(0:model_levels)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordtype">REAL</span>,   <span class="keywordtype">INTENT(OUT)</span>   :: rho_ref_pro(model_levels)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">INTEGER</span>               :: k</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keywordtype">INTEGER</span>               :: prof_type</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keywordtype">REAL</span>                  :: eta(0:model_levels)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keywordtype">REAL</span>                  :: geopotential_factor(0:model_levels)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordtype">REAL</span>                  :: levs(0:model_levels)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keywordtype">REAL</span>                  :: T0_ref(0:model_levels)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keywordtype">REAL</span>                  :: u_term(1:model_levels)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keywordtype">REAL</span>                  :: u_temp</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keywordtype">REAL</span>                  :: grad</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordtype">REAL</span>                  :: theta_surface <span class="comment">! Potential temperature at lower</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                                       <span class="comment">! boundary</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordtype">REAL</span>                  :: theta_height1, theta_height2</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordtype">REAL</span>                  :: exner_surface <span class="comment">! Exner function at lower boundary</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordtype">REAL</span>                  :: z_rho(0:model_levels)   <span class="comment">! Height of rho levels</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                                 <span class="comment">! above surface</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keywordtype">REAL</span>                  :: z_theta(0:model_levels) <span class="comment">! Height of theta levels</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                                 <span class="comment">! above surface</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keywordtype">REAL</span>                  :: extrap1, extrap2 <span class="comment">! Weights for extrapolating</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                          <span class="comment">! exner to model_levels+1</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keywordtype">REAL</span>                  :: exner_top        <span class="comment">! exner at top boundary</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">! For Deep baroclinic wave</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordtype">REAL</span>                  :: r_height, tau2_term</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! External functions</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">EXTERNAL</span>        :: eg_baro_eta_conv</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">EXTERNAL</span>        :: eg_baro_T_p</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">! 1.0 Start of subroutine code: perform the calculation.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EG_IDL_1D_PROFS&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">! Set initial guess</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;exner_ref_pro(0)  = (p_surface / p_zero)**kappa</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;exner_ref_pro(:)  = exner_ref_pro(0)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;thetav_ref_pro(:) = t_surface / exner_ref_pro(0)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;rho_ref_pro(:)    = 1.0</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;t0_ref(:)         = t_surface</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">! When using eta-levels for generating reference profile, the! height_domain factor is carried with the gravitational acceleration.</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;geopotential_factor(:) = depth_factor*g_theta_ref(:)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">! Put level data into levs array</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">! For atmospheric state these are z levels in metres</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">! For reference state these are eta levels</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">! Make levels</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keywordflow">DO</span> k = 1, model_levels</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  levs(k) = coord_at_rho(k) - surface_offset</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;levs(0) = coord_at_theta(0) - surface_offset</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;z_rho(0)=0.0</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  z_rho(k)=(coord_at_rho(k) - surface_offset)*depth_factor</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keywordflow">DO</span> k=0,model_levels</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  z_theta(k)=(coord_at_theta(k) - surface_offset)*depth_factor</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;u_term = 0.0</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">! Check if Tprofile_number a valid option and set up T0_ref</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">! if required.</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordflow">SELECT CASE</span>(tprofile_number)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordflow">CASE</span>(1)             <span class="comment">! T0_ref is a theta point</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    prof_type = 1     <span class="comment">! theta specified</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    exner_surface= (p_surface/p_zero)**kappa</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    theta_surface = t_surface / exner_surface</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">IF</span> (l_constant_dz) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keywordflow">DO</span> k = 0, model_levels</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        t0_ref(k) = theta_surface + dtheta_dz1(1) * z_theta(k)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      theta_height1 = theta_surface + dtheta_dz1(1)*height_dz1(1)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      theta_height2 = theta_height1 + dtheta_dz1(2) *                   &amp;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                      (height_dz1(2)-height_dz1(1))</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      <span class="keywordflow">DO</span> k=0,model_levels</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">IF</span> (z_theta(k) &lt;= height_dz1(1)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;          t0_ref(k) = theta_surface + dtheta_dz1(1) * z_theta(k)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (z_theta(k) &lt;= height_dz1(2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;          t0_ref(k) = theta_height1 + dtheta_dz1(2) *                   &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                      (z_theta(k) - height_dz1(1))</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;          t0_ref(k) = theta_height2 + dtheta_dz1(3) *                   &amp;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                                      (z_theta(k) - height_dz1(2))</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordflow">      END DO</span><span class="keywordflow">             END IF</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="keywordflow">CASE</span>(2)             <span class="comment">! T0_ref is a rho point</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    prof_type = 2     <span class="comment">! T specified</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    t0_ref(0) = t_surface</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordflow">DO</span> k = 1, model_levels</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      t0_ref(k) = t0_ref(k-1) - dtheta_dz1(1) * depth_factor *          &amp;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                (levs(k)-levs(k-1))</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keywordflow">CASE</span>(3) <span class="comment">! Jablonowski &amp; Williamson 2006 baroclinic wave test</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    prof_type = 2   <span class="comment">! T specified</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordflow">DO</span> k = 0, model_levels</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">!DEPENDS ON: eg_baro_eta_conv</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      eta(k) = eg_baro_eta_conv(xi1_p, xi2_p, depth_factor*levs(k))</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">!DEPENDS ON: eg_baro_T_p</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;      t0_ref(k) = eg_baro_t_p(xi1_p, xi2_p, eta(k))</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">! A reasonable first guess:</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      exner_ref_pro(k) = (p_zero*eta(k))**kappa</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;      <span class="keywordflow">IF</span> (k &gt;= 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        rho_ref_pro(k) = p_zero*eta(k) / (r*t0_ref(k))</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      thetav_ref_pro(k) = t0_ref(k)/exner_ref_pro(k)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">! A reasonable first guess:</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    exner_ref_pro(model_levels+1)=sqrt(exner_ref_pro(model_levels)**2 / &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                                       exner_ref_pro(model_levels-1))</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">! Return actual surface temperature and pressure</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    p_surface=p_zero*eta(0)  <span class="comment">! Boundary condition for Newton solver</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    t_surface=t0_ref(0)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="keywordflow">CASE</span>(4) <span class="comment">! Staniforth Deep atmosphere baroclinic wave test</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    prof_type = 2   <span class="comment">! T specified</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordflow">DO</span> k = 0, model_levels</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;      <span class="keywordflow">IF</span> ( <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#ad43545bf60656cd79aa22e46497d816b">l_shallow_save</a> ) <span class="keywordflow">THEN</span>            r_height = earth_radius</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keywordflow">IF</span> ( k == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;          r_height = surface_offset</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;          r_height = coord_at_theta(k)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;          r_height = coord_at_rho(k)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      tau2_term = (r_height/earth_radius*cos(xi2_p)) ** <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a474848ae3ee0797fb420b577961f513a">k_const_save</a>       &amp;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                - (<a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a474848ae3ee0797fb420b577961f513a">k_const_save</a>/(<a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a474848ae3ee0797fb420b577961f513a">k_const_save</a> + 2.0))*                     &amp;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                  (r_height/earth_radius*cos(xi2_p)) **(<a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a474848ae3ee0797fb420b577961f513a">k_const_save</a> + 2.0)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      t0_ref(k) = (earth_radius/r_height)**2 / (<a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a5e95c7eb3aa76247abd5450ab0c8201f">tau1</a>(k) - <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a7cf540d579b161c9c0f4cc5fc72c80b3">tau2</a>(k)*tau2_term)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      exner_ref_pro(k) = (exp(-g/r*(<a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a77d43b94a7b69b7a29dc8d96212123fe">tau1_int</a>(k)-<a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#af5ae07e9bfa46e9cb86644fbb0e9a0f4">tau2_int</a>(k)*tau2_term)))**kappa</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      thetav_ref_pro(k) = t0_ref(k)/exner_ref_pro(k)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      <span class="keywordflow">IF</span> (k &gt;= 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        rho_ref_pro(k) = p_zero*exner_ref_pro(k)**(recip_kappa)/(r*t0_ref(k))</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      <span class="keywordflow">IF</span> ( .NOT. <a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#ad43545bf60656cd79aa22e46497d816b">l_shallow_save</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">! U coriolis term</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">! This is the wind proxy: U</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;          u_temp = (g/earth_radius)*<a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a474848ae3ee0797fb420b577961f513a">k_const_save</a>*<a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#af5ae07e9bfa46e9cb86644fbb0e9a0f4">tau2_int</a>(k)                 &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    *((r_height/earth_radius*cos(xi2_p))**(<a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a474848ae3ee0797fb420b577961f513a">k_const_save</a>-1)   &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                    - (r_height/earth_radius*cos(xi2_p))**(<a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#a474848ae3ee0797fb420b577961f513a">k_const_save</a>+1))  &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                     *t0_ref(k)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;          u_temp  = - omega*r_height*cos(xi2_p)                             &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                     + sqrt( (omega*r_height*cos(xi2_p))**2                 &amp;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                            + r_height*cos(xi2_p)*u_temp )</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;          u_term(k) = u_temp**2/r_height+2.0*omega*u_temp*cos(xi2_p)</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">! A better guess       k = model_levels</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    exner_ref_pro(k+1)=exner_ref_pro(k)                                      &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                           + 2.0*(coord_at_theta(k)-coord_at_rho(k))         &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                      /((r/kappa)*thetav_ref_pro(k))*(u_term(k)-g_theta_ref(k))</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">! Return actual surface temperature and pressure</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    p_surface=(p_zero*exner_ref_pro(0)**(recip_kappa))</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    t_surface=t0_ref(0)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;     <span class="keywordflow">CASE</span>(5)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;     prof_type = 2     <span class="comment">! T specified</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    t0_ref(0) = t_surface</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordflow">DO</span> k = 1, model_levels           grad = -6.0/1000.0</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;      <span class="keywordflow">IF</span>( coord_at_rho(k)-surface_offset &gt; 13000.0 ) grad = -2.0/1000.0</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;      <span class="keywordflow">IF</span>( coord_at_rho(k)-surface_offset &gt; 15000.0 ) grad = 0.0</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;      <span class="keywordflow">IF</span>( coord_at_rho(k)-surface_offset &gt; 16000.0 ) grad = 5.0/8000.0</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;      <span class="keywordflow">IF</span>( coord_at_rho(k)-surface_offset &gt; 25000.0 ) grad = 0.0</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;      t0_ref(k) = t0_ref(k-1) + grad * depth_factor *          &amp;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                (levs(k)-levs(k-1))</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keywordflow">  CASE DEFAULT</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&quot;eg_idl_1d_profs&quot;</span>, tprofile_number,                    &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                 <span class="stringliteral">&quot;Invalid profile type&quot;</span> )</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keywordflow">END SELECT</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">! DEPENDS ON: eg_Newton</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="keyword">CALL </span><a class="code" href="eg___newton_8f90.xhtml#a74fe15b66a309b23b7ad1f34b8b7ccf2" title="Subroutine Interface: ">eg_newton</a>(exner_ref_pro, thetav_ref_pro, rho_ref_pro, t0_ref,      &amp;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                 geopotential_factor, levs, intw_rho2w, intw_w2rho,       &amp;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                 p_surface, model_levels, prof_type, u_term)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">! The Newton solver doesn&#39;t calculate exner_ref_pro(model_levels+1).</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">! Use exponential extrapolation of exner to model top; then set</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">! exner_ref_pro(model_levels+1) such that this extrapolated value is</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">! returned when vertical averaging is done.</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">! Exponential extrapolation to model top</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;extrap1=(z_theta(model_levels)-z_rho(model_levels-2)) /                 &amp;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        (z_rho(model_levels-1)-z_rho(model_levels-2))</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;extrap2=(z_theta(model_levels)-z_rho(model_levels-1)) /                 &amp;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        (z_rho(model_levels-1)-z_rho(model_levels-2))</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;exner_top = exner_ref_pro(model_levels)**extrap1 *                      &amp;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            exner_ref_pro(model_levels-1)**(-extrap2)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">! Set exner_ref_pro(model_levels+1) so that extrapolated exner_top is</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">! obtained using 0.5*(exner_ref_pro(model_levels+1) +!                     exner_ref_pro(model_levels))</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;exner_ref_pro(model_levels+1)=2.0*exner_top-exner_ref_pro(model_levels)</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EG_IDL_1D_PROFS&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespaceeg__idl__1d__profs__mod.xhtml#adf934cae819e30e56cc0be8194c12fca">eg_idl_1d_profs</a></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceeg__idl__1d__profs__mod.xhtml" title="Subroutine Interface: ">eg_idl_1d_profs_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
