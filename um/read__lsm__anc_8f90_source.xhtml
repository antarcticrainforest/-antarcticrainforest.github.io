<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/fluxproc/read_lsm_anc.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_def911949590700bb7220b937e069fda.xhtml">fluxproc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">read_lsm_anc.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="read__lsm__anc_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;-<span class="comment">! contains routines: read_lsm_anc</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;-<span class="comment">!</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">      subroutine </span><a class="code" href="read__lsm__anc_8f90.xhtml#a0648e40353efa562dd323202cc34a5d4" title="Programming standard: Unified Model Documentation Paper No 3. ">read_lsm_anc</a>(InUnit, Len_FixHd_P, Len1_Lookup_P,       &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;     &amp;           FixHd, Lookup, ncols, nrows, lsm, lambda, phi,         &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;     &amp;           icode)</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="read__lsm__anc_8f90.xhtml#a0648e40353efa562dd323202cc34a5d4">   16</a></span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacedecomp__db.xhtml" title="This file belongs in section: MPP. ">decomp_db</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfacedecomp__db_1_1decompose.xhtml">decompose</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecmess__mod.xhtml" title="This file belongs in section: Small Execs This file belongs in section: Small Execs. ">cmess_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecmess__mod.xhtml#a0f5058f8826769d0ed08b5259f1adbce" title="Purpose: declares and stores values used for warning, error and standard log messages. ">outunitdbg</a>, <a class="code" href="namespacecmess__mod.xhtml#a0167fac1e752d47aff56c68d7e60bc91">unwarn</a>, <a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>, <a class="code" href="namespacecmess__mod.xhtml#aac6fe5554102835f716d1bec91316850">unstd</a>, <a class="code" href="namespacecmess__mod.xhtml#a59e4fa4ffb3e3016f9b5f98322872dce" title="parameters for start of message ">cwarn</a>,     &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                           <a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>, <a class="code" href="namespacecmess__mod.xhtml#a2414f6cb1356a3fa3821454aea8f35e4">cstd</a>, <a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;dump_len.h&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      <span class="keywordtype">integer</span> InUnit        <span class="comment">! IN unit number of file</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <span class="keywordtype">integer</span> Len_FixHd_P   <span class="comment">! IN length of fixed header</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">integer</span> Len1_Lookup_P <span class="comment">! IN length of first dimension of Lookup</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordtype">integer</span> FixHd(len_fixhd_p)    <span class="comment">! IN fixed header</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">integer</span> Lookup(len1_lookup_p) <span class="comment">! IN lookup table from file</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <span class="keywordtype">integer</span> ncols       <span class="comment">! IN   number of columns in grid</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <span class="keywordtype">integer</span> nrows       <span class="comment">! IN   number of rows in grid</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <span class="keywordtype">integer</span> lsm(ncols,nrows) <span class="comment">! OUT land / sea mask</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      <span class="keywordtype">real</span> lambda(ncols)  <span class="comment">! OUT coords of longitudes</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <span class="keywordtype">real</span> phi(nrows)     <span class="comment">! OUT coords of latitudes</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <span class="keywordtype">integer</span> icode  <span class="comment">! IN/OUT error code ; &gt; 0 =&gt; fatal error detected</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordtype">real</span> rowdepc(nrows)   <span class="comment">! row dependent constants</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      <span class="keywordtype">real</span> coldepc(ncols)   <span class="comment">! column dependent constants</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <span class="keywordtype">logical</span> ll_lsm(ncols,nrows) <span class="comment">! land / sea mask T = land points</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      <span class="keywordtype">real</span> flt_lsm(ncols,nrows)   <span class="comment">! land / sea mask 1.0 = land point</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <span class="keywordtype">real</span> DPhi    <span class="comment">! latitude interval</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <span class="keywordtype">real</span> Phi0    <span class="comment">! Zeroth latitude</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keywordtype">real</span> DLambda <span class="comment">! Zeroth longitude</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <span class="keywordtype">real</span> Lambda0 <span class="comment">! Longitude interval</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <span class="keywordtype">integer</span> jrow, icol  <span class="comment">! loop indices for rows and columns</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <span class="keywordtype">integer</span> fld_no   <span class="comment">! field number in file</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      <span class="keywordtype">integer</span> Len_data  <span class="comment">! length of data in file</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      <span class="keywordtype">integer</span> gl_row_len  <span class="comment">! # of columns in global grid</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      <span class="keywordtype">integer</span> gl_n_rows   <span class="comment">! # of rows in global grid</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <span class="keywordtype">CHARACTER(LEN=256)</span> CMessage <span class="comment">! error messages</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordtype">external</span> <a class="code" href="copy__to__real_8f90.xhtml#af72b814ac8f58588360653c571efd9c9" title="Programming standard: Unified Model Documentation Paper No 3. ">copy_to_real</a></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;-<span class="comment">! 0. Preliminaries</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      <a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a> = <span class="stringliteral">&#39;read_lsm_anc&#39;</span>  <span class="comment">! subroutine name for error messages</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      <span class="keyword">call </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a>(inunit, 0, icode)   <span class="comment">! reset to start of file</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordflow">if</span> ( icode  /=  0 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                        &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;     &amp;   <span class="stringliteral">&#39; Step 1. Unable to reset ancillary file&#39;</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        icode = 20</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">goto</span> 9999</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      len_fixhd = len_fixhd_p</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="keyword">CALL </span><a class="code" href="get__dim_8f90.xhtml#a8f90a58977c5830225564b6c907a8904" title="Subroutine GET_DIM. ">get_dim</a>(fixhd,                                               &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">#include &quot;dump_ar2.h&quot;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor"></span>     &amp; len_data)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="keywordflow">if</span> ( len1_coldepc  &gt;   1 .and. len1_rowdepc  &gt;   1) <span class="keywordflow">then</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">if</span> (      nrows  /=  len1_rowdepc                               &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;     &amp;       .or. ncols  /=  len1_coldepc) <span class="keywordflow">then</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;          <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                      &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;     &amp;       <span class="stringliteral">&#39; step 2.1. dimensions do not match  &#39;</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;          <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keyword">call </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a>(inunit, 0, icode)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">if</span> ( icode  /=  0 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;          <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                      &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;     &amp;     <span class="stringliteral">&#39; Step 2.2. Unable to reset ancillary file&#39;</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;          icode = 20</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;          <span class="keywordflow">goto</span> 9999</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordflow">        endif</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">! DEPENDS ON: get_rows_cols</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keyword">call </span><a class="code" href="get__rows__cols_8f90.xhtml#ad6f8b5be433a784bb83f312148adff3e" title="Programming standard: Unified Model Documentation Paper No 3. ">get_rows_cols</a>(inunit, icode,                               &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">#include &quot;dump_ar2.h&quot;</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor"></span>     &amp;  len_data, rowdepc, coldepc)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">if</span> ( icode  /=  0 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;          <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                      &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;     &amp;     <span class="stringliteral">&#39; Step 2.2. Failed to retreive grid spacings&#39;</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;          <span class="keywordflow">goto</span> 9999</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keywordflow">        endif</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">! 3. else take the row and column spacings from the lookup table</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="keywordflow">else</span>   <span class="comment">!  LEN1_COLDEPC etc.</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">! DEPENDS ON: copy_to_real</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keyword">call </span><a class="code" href="copy__to__real_8f90.xhtml#af72b814ac8f58588360653c571efd9c9" title="Programming standard: Unified Model Documentation Paper No 3. ">copy_to_real</a> ( lookup(<a class="code" href="namespacelookup__addresses.xhtml#a06c4d1dbbd4d26f9ef9ec903dad9491f">bdy</a>), dphi )</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">do</span> jrow = 1, nrows</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;          rowdepc(jrow) = dphi</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keywordflow">        end do</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">! DEPENDS ON: copy_to_real</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keyword">call </span><a class="code" href="copy__to__real_8f90.xhtml#af72b814ac8f58588360653c571efd9c9" title="Programming standard: Unified Model Documentation Paper No 3. ">copy_to_real</a> ( lookup(<a class="code" href="namespacelookup__addresses.xhtml#a38ce300aeb7fd37cf79bae07df7a8c9f">bdx</a>), dlambda )</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">do</span> icol = 1, ncols</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;          coldepc(icol) = dlambda</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordflow">        end do</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keywordflow">      end if</span> <span class="comment">! LEN1_COLDEPC etc.</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">! 4. copy to row and column coordinates</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">! DEPENDS ON: copy_to_real</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="keyword">call </span><a class="code" href="copy__to__real_8f90.xhtml#af72b814ac8f58588360653c571efd9c9" title="Programming standard: Unified Model Documentation Paper No 3. ">copy_to_real</a> ( lookup(<a class="code" href="namespacelookup__addresses.xhtml#a74be09c1c3b22f62cb03628ae5648381">bzy</a>), phi0 )</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      phi(1) = phi0 + rowdepc(1)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      <span class="keywordflow">do</span> jrow = 2, nrows</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        phi(jrow) = phi(jrow-1) + rowdepc(jrow)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordflow">      end do</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">! DEPENDS ON: copy_to_real</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      <span class="keyword">call </span><a class="code" href="copy__to__real_8f90.xhtml#af72b814ac8f58588360653c571efd9c9" title="Programming standard: Unified Model Documentation Paper No 3. ">copy_to_real</a> ( lookup(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>), lambda0 )</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      lambda(1) = lambda0 + coldepc(1)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      <span class="keywordflow">do</span> icol = 2, ncols</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        lambda(icol) = lambda(icol-1) + coldepc(icol)</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keywordflow">      end do</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">! 5. read in the land sea mask itself; assumed to be the first field</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">!    in the file</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      fld_no = 1</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">! Reset STASH code to avoid failure when reading field</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      lookup(<a class="code" href="namespacelookup__addresses.xhtml#a4f2a173b22a48250d86265493664e6ad">item_code</a>)=101</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">! 5.1 if land sea mask data is of type logical read it into a</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">!     temporary array and convert T = land =&gt; 1 and F = sea =&gt; 0</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      gl_row_len=lookup(19)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      gl_n_rows=lookup(18)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfacedecomp__db_1_1decompose.xhtml">decompose</a>(gl_row_len, gl_n_rows,0,0,1)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="keywordflow">if</span> ( lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>)  ==  3) <span class="keywordflow">then</span>  <span class="comment">!  logical</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">! DEPENDS ON: readflds</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keyword">call </span><a class="code" href="readflds_8f90.xhtml#a5bf07e72f8a7b10c3dc7a5c6ce2f2593" title="Reads in a number of fields from UM format file. ">readflds</a> (inunit , 1, fld_no, lookup,                      &amp;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;     &amp;  len1_lookup_p, ll_lsm, ncols*nrows, fixhd,                      &amp;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;     &amp;  icode, cmessage)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">if</span> ( icode  &gt;   0 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;          <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                      &amp;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;     &amp;    <span class="stringliteral">&#39; step 5.1 unable to read logicals land sea mask: &#39;</span>,          &amp;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;     &amp;    <span class="stringliteral">&#39; cmessage is &#39;</span>, cmessage</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;          icode = 23</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;          <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keywordflow">do</span> jrow = 1, nrows</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;          <span class="keywordflow">do</span> icol = 1, ncols</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">if</span> ( ll_lsm(icol, jrow) ) <span class="keywordflow">then</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;              lsm(icol, jrow) = 1</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;              lsm(icol, jrow) = 0</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordflow">            end if</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordflow">          end do</span>  <span class="comment">! icol</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordflow">        end do</span>  <span class="comment">! jrow</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">! 5.2 else if land sea mask data is of type integer read it</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      <span class="keywordflow">else</span> <span class="keywordflow">if</span>( lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>)  ==  2) <span class="keywordflow">then</span>  <span class="comment">!  integer</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">! DEPENDS ON: readflds</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keyword">call </span><a class="code" href="readflds_8f90.xhtml#a5bf07e72f8a7b10c3dc7a5c6ce2f2593" title="Reads in a number of fields from UM format file. ">readflds</a> (inunit , 1, fld_no, lookup,                      &amp;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;     &amp;  len1_lookup_p, lsm, ncols*nrows, fixhd,                         &amp;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;     &amp;  icode, cmessage)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">if</span> ( icode  &gt;   0 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;          <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                      &amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;     &amp;    <span class="stringliteral">&#39; step 5.2 unable to read integer land sea mask:&#39;</span>,            &amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;     &amp;    <span class="stringliteral">&#39; cmessage is &#39;</span>,   cmessage</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;          icode = 24</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;          <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">! 5.3 else if land sea mask data is of type real, read it and</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">!     convert: 1.0 = land =&gt; 1  0.0 = sea =&gt; 0</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      <span class="keywordflow">else</span> <span class="keywordflow">if</span>( lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>)  ==  1) <span class="keywordflow">then</span>  <span class="comment">!  real</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">! DEPENDS ON: readflds</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keyword">call </span><a class="code" href="readflds_8f90.xhtml#a5bf07e72f8a7b10c3dc7a5c6ce2f2593" title="Reads in a number of fields from UM format file. ">readflds</a> (inunit , 1, fld_no, lookup,                      &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;     &amp;  len1_lookup_p, flt_lsm, ncols*nrows, fixhd,                     &amp;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;     &amp;  icode, cmessage)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">if</span> ( icode  &gt;   0 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;          <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                      &amp;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;     &amp;    <span class="stringliteral">&#39; step 5.2 unable to read real land sea mask:&#39;</span>,               &amp;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;     &amp;    <span class="stringliteral">&#39; cmessage is &#39;</span>,   cmessage</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;          icode = 25</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;          <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">do</span> jrow = 1, nrows</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;          <span class="keywordflow">do</span> icol = 1, ncols</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordflow">if</span> ( flt_lsm(icol, jrow)  /=  0.0 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;              lsm(icol, jrow) = 1</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;              lsm(icol, jrow) = 0</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keywordflow">            end if</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordflow">          end do</span>  <span class="comment">! icol</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keywordflow">        end do</span>  <span class="comment">! jrow</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">! 5.4 else there is an error in data type of land sea mask</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        icode = 26</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                        &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;     &amp;  <span class="stringliteral">&#39; step 5.3 land sea mask is of data type:&#39;</span>, lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>)   &amp;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;     &amp;  , <span class="stringliteral">&#39;. Change this to indicator for integer or logical data&#39;</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keywordflow">      end if</span>   <span class="comment">! Lookup(data_type)</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;9999  <span class="keywordflow">continue</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      <span class="keywordflow">return</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="read__lsm__anc_8f90.xhtml#a0648e40353efa562dd323202cc34a5d4" title="Programming standard: Unified Model Documentation Paper No 3. ">read_lsm_anc</a></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;-</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
