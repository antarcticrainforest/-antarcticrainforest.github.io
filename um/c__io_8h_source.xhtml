<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/include/other/c_io.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b0856f6b0d80ccb263b2f415c91f9e17.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_4505daeba67b11d8c4f8b85497fb8236.xhtml">other</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">c_io.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="c__io_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef C_IO_H</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define C_IO_H</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;sys/time.h&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;stdarg.h&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;stdbool.h&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;string.h&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;strings.h&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;unistd.h&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;sys/stat.h&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="c__io__errcodes_8h.xhtml">c_io_errcodes.h</a>&quot;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="c__io__layers_8h.xhtml">c_io_layers.h</a>&quot;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *  Because C never came with them....</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#ad2f3678bf5eae3684fc497130b946eae">   19</a></span>&#160;<span class="preprocessor">#define MIN(X,Y) ((X) &lt; (Y) ? (X) : (Y))</span></div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#aff9931d7524c88e07743af6535b20761">   20</a></span>&#160;<span class="preprocessor">#define MAX(X,Y) ((X) &gt; (Y) ? (X) : (Y))</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> *  Casting macro for printing int64_t types via %lld</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"> */</span> </div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">   25</a></span>&#160;<span class="preprocessor">#define LLD(X) ((long long)(X))</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#ifndef CIO_NEXT_LAYER</span></div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a5140b8af92a952340818455d7ab84316">   28</a></span>&#160;<span class="preprocessor">#define CIO_NEXT_LAYER -1</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"> * Constants and types</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">extern</span> <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="c__io_8h.xhtml#a8444a95c4b21bb1662fbc6c8335a383c">c_io_success</a>;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">extern</span> <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="c__io_8h.xhtml#a1241786eca0d7b83753384a3fa40d75a">c_io_fail</a>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">extern</span> <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="c__io_8h.xhtml#ade809f825c114125a4d642407441dbc8">c_io_file_end</a>;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">extern</span> <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="c__io_8h.xhtml#ada62e1963d9fa6bf5292598605955018">c_io_file_nopos</a>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#abdce6469b62a8f04c8c9425dfa67b9d7ae049f97b44c8d37123eda78074549882">   40</a></span>&#160;<span class="keyword">enum</span> <a class="code" href="c__io_8h.xhtml#abdce6469b62a8f04c8c9425dfa67b9d7">fileopenstate</a> { <a class="code" href="c__io_8h.xhtml#abdce6469b62a8f04c8c9425dfa67b9d7ae049f97b44c8d37123eda78074549882">oldFile</a>, <a class="code" href="c__io_8h.xhtml#abdce6469b62a8f04c8c9425dfa67b9d7a8f95bf14e28791c114641befaf7da1e4">newFile</a>, <a class="code" href="c__io_8h.xhtml#abdce6469b62a8f04c8c9425dfa67b9d7a44482c107c56a277360e477f3bc2da81">numOpenStates</a> };</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a8ba83d09160bd55999b0630dccc467aeae821d08d99a31181398eca6948b7c74c">   41</a></span>&#160;<span class="keyword">enum</span> <a class="code" href="c__io_8h.xhtml#a8ba83d09160bd55999b0630dccc467ae">endianness</a>    { <a class="code" href="c__io_8h.xhtml#a8ba83d09160bd55999b0630dccc467aeafb28f96cadcbba103b51c2a667ad723b">bigEndian</a>, <a class="code" href="c__io_8h.xhtml#a8ba83d09160bd55999b0630dccc467aead13338b1c7186aed834aa25dbb65b321">littleEndian</a>, <a class="code" href="c__io_8h.xhtml#a8ba83d09160bd55999b0630dccc467aeae821d08d99a31181398eca6948b7c74c">numEndians</a> }; <span class="comment">/* numInjuns :-) */</span></div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#aa5c4d22a4bdc1b3b3b6b3b150f75d345adda0e8c2d9b3490dcbd48227254454c6">   42</a></span>&#160;<span class="keyword">enum</span> <a class="code" href="c__io_8h.xhtml#aa5c4d22a4bdc1b3b3b6b3b150f75d345">filemode</a>      { <a class="code" href="c__io_8h.xhtml#aa5c4d22a4bdc1b3b3b6b3b150f75d345a2699d203153059eabe7399fecff12930">readonly</a>, <a class="code" href="c__io_8h.xhtml#aa5c4d22a4bdc1b3b3b6b3b150f75d345ae33d4c8af430bebd96e3a5ff0b5dbe5d">readwrite</a>, <a class="code" href="c__io_8h.xhtml#aa5c4d22a4bdc1b3b3b6b3b150f75d345adda0e8c2d9b3490dcbd48227254454c6">writeonly</a>, <a class="code" href="c__io_8h.xhtml#aa5c4d22a4bdc1b3b3b6b3b150f75d345a80ba0e3827252754dadc8c051cd9cd24">numModes</a> };</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#af05b6eea205ddb71dcdab3fc4c5561eba23a392e30a43487b88fa5417fdd1d1b2">   43</a></span>&#160;<span class="keyword">enum</span> <a class="code" href="c__io_8h.xhtml#af05b6eea205ddb71dcdab3fc4c5561eb">filestate</a>     { <a class="code" href="c__io_8h.xhtml#af05b6eea205ddb71dcdab3fc4c5561eba0e9a37114c0e458d28d52f06ec0f2242">idle</a>, <a class="code" href="c__io_8h.xhtml#af05b6eea205ddb71dcdab3fc4c5561eba83b2c75d9f5bc57938f655d35b337b3c">reading</a>, <a class="code" href="c__io_8h.xhtml#af05b6eea205ddb71dcdab3fc4c5561eba23a392e30a43487b88fa5417fdd1d1b2">writing</a>, <a class="code" href="c__io_8h.xhtml#af05b6eea205ddb71dcdab3fc4c5561eba80468287fcfd430cce0f9872c8cf5537">numStates</a> };</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a86021a2976b84d49a16574cfc9023fa5">   44</a></span>&#160;<span class="keyword">enum</span> <a class="code" href="c__io_8h.xhtml#a86021a2976b84d49a16574cfc9023fa5">outPutLevel</a>   </div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a86021a2976b84d49a16574cfc9023fa5a4edd4761fffe6a6a9175115258002e75">   45</a></span>&#160;  { <a class="code" href="c__io_8h.xhtml#a86021a2976b84d49a16574cfc9023fa5ac4954dc0fdf054c431a504dc77fd1d9f">outLevNone</a>,<a class="code" href="c__io_8h.xhtml#a86021a2976b84d49a16574cfc9023fa5a90a0a8c2862f5ab047aeafc928cfd1fb">outLevMin</a>,<a class="code" href="c__io_8h.xhtml#a86021a2976b84d49a16574cfc9023fa5a07bdf5e8c31479f685220b579887ac85">outLevNormal</a>,<a class="code" href="c__io_8h.xhtml#a86021a2976b84d49a16574cfc9023fa5a4edd4761fffe6a6a9175115258002e75">outLevOper</a>,<a class="code" href="c__io_8h.xhtml#a86021a2976b84d49a16574cfc9023fa5a45d79a961643061bad394bfd60ed4d63">outLevDiag</a>, <a class="code" href="c__io_8h.xhtml#a86021a2976b84d49a16574cfc9023fa5a5f4099f4d2dee24bdbc937ee16bfa510">numOutLevels</a> }  ;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">char</span> <a class="code" href="c__io_8h.xhtml#ad188eed0539988fc3a7952638d5b4441">modeText</a>[<a class="code" href="c__io_8h.xhtml#abdce6469b62a8f04c8c9425dfa67b9d7a44482c107c56a277360e477f3bc2da81">numOpenStates</a>][<a class="code" href="c__io_8h.xhtml#aa5c4d22a4bdc1b3b3b6b3b150f75d345a80ba0e3827252754dadc8c051cd9cd24">numModes</a>][4];</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">/* is the library initialised? */</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">bool</span> <a class="code" href="c__io_8h.xhtml#a78eca6da0ebc239b3c7497939b066ed0">c_io_initialised</a>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">/* In order to avoid changing the interface, we will put all</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">   initialisation arguments in a struct.... */</span></div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="structc__io__init__t.xhtml">   53</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structc__io__init__t.xhtml">c_io_init_t</a> {</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="structc__io__init__t.xhtml#a8a1182f0b37ad3a36419c167bb253eab">   54</a></span>&#160;  int64_t <a class="code" href="structc__io__init__t.xhtml#a8a1182f0b37ad3a36419c167bb253eab">min_unit</a>;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="structc__io__init__t.xhtml#a0089446ddc73d4756e0b360d9860533b">   55</a></span>&#160;  int64_t <a class="code" href="structc__io__init__t.xhtml#a0089446ddc73d4756e0b360d9860533b">max_unit</a>;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="structc__io__init__t.xhtml#aca5e1dd28d413bb51891271a92b135ed">   56</a></span>&#160;  int64_t <a class="code" href="structc__io__init__t.xhtml#aca5e1dd28d413bb51891271a92b135ed">wbuffering_buffer_size</a>;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="structc__io__init__t.xhtml#a22882ca633c73398fcb2442ae3cb1e20">   57</a></span>&#160;  int64_t <a class="code" href="structc__io__init__t.xhtml#a22882ca633c73398fcb2442ae3cb1e20">rbuffering_buffer_size</a>;</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="structc__io__init__t.xhtml#a2343e17b1bc28124120f77ec6915c94a">   58</a></span>&#160;  int64_t <a class="code" href="structc__io__init__t.xhtml#a2343e17b1bc28124120f77ec6915c94a">rbuffering_buffer_count</a>;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="structc__io__init__t.xhtml#aae653aba05e876c5c325c6fb819be335">   59</a></span>&#160;  int64_t <a class="code" href="structc__io__init__t.xhtml#aae653aba05e876c5c325c6fb819be335">rbuffering_buffer_update</a>;</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="structc__io__init__t.xhtml#a25ee32798a3593b3145522446f9bf578">   60</a></span>&#160;  int64_t <a class="code" href="structc__io__init__t.xhtml#a25ee32798a3593b3145522446f9bf578">rbuffering_buffer_prefetch</a>;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="structc__io__init__t.xhtml#a1a399939cb13b83b825d8a30b90aaead">   61</a></span>&#160;  int64_t <a class="code" href="structc__io__init__t.xhtml#a1a399939cb13b83b825d8a30b90aaead">timing_switch</a>;</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="structc__io__init__t.xhtml#ae3816216c5925f2a4939611362346e03">   62</a></span>&#160;  <a class="code" href="structc__io__layer__t.xhtml">c_io_layer_t</a> * <a class="code" href="structc__io__init__t.xhtml#ae3816216c5925f2a4939611362346e03">layers</a>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;} <a class="code" href="c__io_8h.xhtml#a362bbc3f25453ec3083bf0af372e2ea1">c_io_init_t</a>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">/* main attribute table */</span></div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="structc__io__attributes__t.xhtml">   66</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structc__io__attributes__t.xhtml">c_io_attributes_t</a> {</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="structc__io__attributes__t.xhtml#a414ed824c4b865fce124fa72f100c3ce">   67</a></span>&#160;  <span class="keywordtype">char</span> *  <a class="code" href="structc__io__attributes__t.xhtml#a414ed824c4b865fce124fa72f100c3ce">filename</a>;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="structc__io__attributes__t.xhtml#ab020d6e6ba2c5e2ba06f7b521b73cdc9">   68</a></span>&#160;  <a class="code" href="def__spc__io_8icf_8h.xhtml#aa5ff88ced7de04b1b67ae65fbc54320e">FILE</a> *  <a class="code" href="structc__io__attributes__t.xhtml#ab020d6e6ba2c5e2ba06f7b521b73cdc9">filePointer</a>;     <span class="comment">/* The file pointer for the unit */</span>      </div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="structc__io__attributes__t.xhtml#a41281c64f08775fb27f49f40ba6949f1">   69</a></span>&#160;  <span class="keywordtype">int</span>     <a class="code" href="structc__io__attributes__t.xhtml#a41281c64f08775fb27f49f40ba6949f1">fileDescriptor</a>;  </div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="structc__io__attributes__t.xhtml#aaecd30254026aaf1f26a06f74b69957e">   70</a></span>&#160;  <span class="keywordtype">int</span>     <a class="code" href="structc__io__attributes__t.xhtml#aaecd30254026aaf1f26a06f74b69957e">mode</a>;            <span class="comment">/* either idle/reading/writing */</span></div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="structc__io__attributes__t.xhtml#a3d8e85c47cf70edf3bd5f1e5807e987a">   71</a></span>&#160;  int64_t <a class="code" href="structc__io__attributes__t.xhtml#a3d8e85c47cf70edf3bd5f1e5807e987a">next_position</a>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;} <a class="code" href="c__io_8h.xhtml#a9042461bbecb0c7b047a50a3f1f31edc">c_io_attributes_t</a>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"> * Global variables and parameters</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#acdbb2445860ec92ab11b0c3e39168cc0">   79</a></span>&#160;<a class="code" href="structc__io__attributes__t.xhtml">c_io_attributes_t</a> * <a class="code" href="c__io_8h.xhtml#acdbb2445860ec92ab11b0c3e39168cc0">c_io_attributes</a>;</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a7ed5ff2a03f7684212b28aa1968622f1">   80</a></span>&#160;<a class="code" href="structc__io__init__t.xhtml">c_io_init_t</a>       * <a class="code" href="c__io_8h.xhtml#a7ed5ff2a03f7684212b28aa1968622f1">params</a>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a2a2726119ce17a13582ea3d613c46399">   82</a></span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#a2a2726119ce17a13582ea3d613c46399">c_io_attributes_size</a>;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a94d8b906ba6bbe4e6d8c08cfe8163ee6">   83</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="c__io_8h.xhtml#a94d8b906ba6bbe4e6d8c08cfe8163ee6">fileEndian</a>;</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a32c4d3ceffa2ab65c1d300842cc3d407">   84</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="c__io_8h.xhtml#a32c4d3ceffa2ab65c1d300842cc3d407">machineEndian</a>;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a2dd5fa1de17b90ef8a1fc84c5deb43fc">   85</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="c__io_8h.xhtml#a2dd5fa1de17b90ef8a1fc84c5deb43fc">c_io_outLevel</a>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment"> *  Utility calls into fortran via F2003 interop method.</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">#if defined(F2K3)</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keywordtype">int</span>     <a class="code" href="c__io_8h.xhtml#a1c8907186b88e101e639a33a09437872">io_print</a>(<span class="keywordtype">char</span> *, <span class="keywordtype">int</span>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;int64_t threadFlush(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;int64_t threadID(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">/* make/destroy */</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;int64_t <a class="code" href="thread__utils_8h.xhtml#aa5d08bd6dd04fcaeaa861597b1e80e21">newLock</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;int64_t <a class="code" href="thread__utils_8h.xhtml#a46e0c9095f6a1f370172ab5102e6abe3">releaseLock</a>(int64_t);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">/* lock/unlock */</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;int64_t <a class="code" href="thread__utils_8h.xhtml#ab3ec146d013d3bf7a3d5e594a1e75da8">Lock</a>(int64_t);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;int64_t <a class="code" href="thread__utils_8h.xhtml#a360fa6f9f5e88dbe04863f1ad28c652c">unLock</a>(int64_t);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keywordtype">double</span> <a class="code" href="c__io_8h.xhtml#a3efa24e643c9045fd84b9584f64c1da7">c_io_getTime</a>();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment"> * Layer zero API </span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">/* File meta ops */</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#a8a8d53d35cb0a483e4028a17aebdf5c7">c_io_open</a>(int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#a7feb1d5091bc47febcb6cc4e14dce098">c_io_close</a>(int64_t);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#aec222adeecf97f2db876bc5b938e7110">c_io_delete</a>(<span class="keywordtype">char</span> *);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#afe7a8f31f48ab5b2b693661778eee293">c_io_sync</a>(int64_t);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#abe5c5379774f4c90bd7c26a8a0db377e">c_io_change_mode</a>(int64_t,int64_t);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#a9b3168b2b998041e87f9a3b366dcff24">c_io_getExtent</a>(int64_t);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">/* Actual IO */</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#aa6390ade9a6d27c63a7deb6ee0c13433">c_io_in</a>(int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t );</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#afb34db849406bc6cd72919a80611e09d">c_io_out</a>(int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t );</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#ae703d2eb2279b3f1b8ada9789214324f">c_io_setpos</a>(int64_t,int64_t,int64_t);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#a9332d2edb3fd897df61bb85ee183831a">c_io_getpos</a>(int64_t,int64_t);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">/* IO bit-lengthed inline functions */</span></div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#af46d494880d6899ab161d862e50659f5">  126</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> int64_t <a class="code" href="c__io_8h.xhtml#af46d494880d6899ab161d862e50659f5">c_io_in_8</a>     (int64_t unit, <span class="keywordtype">char</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>, int64_t len)     </div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#aa6390ade9a6d27c63a7deb6ee0c13433">c_io_in</a>      (                      unit,        array,         len, 1); }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a322c4d6599994273ba45b500b55a7ed8">  129</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> int64_t <a class="code" href="c__io_8h.xhtml#a322c4d6599994273ba45b500b55a7ed8">c_io_in_32</a>    (int64_t unit, <span class="keywordtype">char</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>, int64_t len)     </div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#aa6390ade9a6d27c63a7deb6ee0c13433">c_io_in</a>      (                      unit,        array,         len, 4); }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#ac9b313d61748d164475bf5c17ce9b511">  132</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> int64_t <a class="code" href="c__io_8h.xhtml#ac9b313d61748d164475bf5c17ce9b511">c_io_in_64</a>    (int64_t unit, <span class="keywordtype">char</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>, int64_t len)  </div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#aa6390ade9a6d27c63a7deb6ee0c13433">c_io_in</a>      (                      unit,        array,         len, 8); }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a871a63fc13da9f04719b13595315141c">  135</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> int64_t <a class="code" href="c__io_8h.xhtml#a871a63fc13da9f04719b13595315141c">c_io_out_8</a>    (int64_t unit, <span class="keywordtype">char</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>, int64_t len)     </div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#afb34db849406bc6cd72919a80611e09d">c_io_out</a>     (                      unit,        array,         len, 1); }</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#ab0d7eaf3976f4a34672af777d1b774b9">  138</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> int64_t <a class="code" href="c__io_8h.xhtml#ab0d7eaf3976f4a34672af777d1b774b9">c_io_out_32</a>   (int64_t unit, <span class="keywordtype">char</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>, int64_t len)     </div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#afb34db849406bc6cd72919a80611e09d">c_io_out</a>     (                      unit,        array,         len, 4); }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a7abf4e483610b23ad192f2ba2f7c1ad2">  141</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> int64_t <a class="code" href="c__io_8h.xhtml#a7abf4e483610b23ad192f2ba2f7c1ad2">c_io_out_64</a>   (int64_t unit, <span class="keywordtype">char</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>, int64_t len)     </div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#afb34db849406bc6cd72919a80611e09d">c_io_out</a>     (                      unit,        array,         len, 8); }</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#aef533d10ab0fe2dab2c337bf18a1192c">  144</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> int64_t <a class="code" href="c__io_8h.xhtml#aef533d10ab0fe2dab2c337bf18a1192c">c_io_setpos_8</a> (int64_t unit, int64_t pos)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#ae703d2eb2279b3f1b8ada9789214324f">c_io_setpos</a>  (                      unit,         pos,               1); }</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a592770f04725fb20e6a991856a858572">  147</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> int64_t <a class="code" href="c__io_8h.xhtml#a592770f04725fb20e6a991856a858572">c_io_setpos_32</a>(int64_t unit, int64_t pos)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#ae703d2eb2279b3f1b8ada9789214324f">c_io_setpos</a>  (                      unit,         pos,               4); }</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a9926ee6e78c91268f65ea065d00ecf3d">  150</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> int64_t <a class="code" href="c__io_8h.xhtml#a9926ee6e78c91268f65ea065d00ecf3d">c_io_setpos_64</a>(int64_t unit, int64_t pos)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#ae703d2eb2279b3f1b8ada9789214324f">c_io_setpos</a>  (                      unit,         pos,               8); }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">/* miscelany */</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io_8h.xhtml#abcc1167ba91f63427944af4d34e2ce9f">c_io_setOutPutLevel</a>(int64_t);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"> * Internal and utility functions</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordtype">int</span>     <a class="code" href="c__io_8h.xhtml#a1c8907186b88e101e639a33a09437872">io_print</a>(<span class="keywordtype">char</span> *, <span class="keywordtype">int</span>);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keywordtype">void</span>    <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(int64_t, <span class="keyword">const</span> <span class="keywordtype">char</span> *fmt, ... );</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#a3d83601943e5e5f712c58208035f23c1">c_io_init</a>(int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t, int64_t);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#ab283cd8d08eed83a82a3a96f317fe7b5">c_io_fini</a>();</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordtype">void</span>    <a class="code" href="c__io_8h.xhtml#ac7e95a5280e7612a3700cf584af948e9">c_io_resetAttributes</a>(int64_t);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordtype">void</span>    <a class="code" href="c__io_8h.xhtml#a5bee62756b9a63ee7e72538b2df574d1">c_io_flush</a>(int64_t);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keywordtype">void</span>    <a class="code" href="c__io_8h.xhtml#a4f71783d9e0af7aaef71c79a778da0b4">c_io_attachHelper</a>(int64_t role);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keywordtype">void</span>    <a class="code" href="c__io_8h.xhtml#a6535d5fe7c4c36ee982607a7daced29b">c_io_dettachAllHelpers</a>();</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordtype">void</span>    <a class="code" href="c__io_8h.xhtml#affab1d90e54eed38bde4282c650ef234">c_io_dettachHelper</a>(int64_t role);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordtype">void</span>    <a class="code" href="c__io_8h.xhtml#aa1d27611a70826d2806f0a66e29de1bd">c_io_print_stack</a>();</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;int64_t <a class="code" href="c__io_8h.xhtml#ad66f6fdc947e1d35ce0224f7aaabf589">c_io_effect_setpos</a>(int64_t);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#aae645ecd54e94ca604b9beaa0dd65b5b">  172</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> int64_t <a class="code" href="c__io_8h.xhtml#aae645ecd54e94ca604b9beaa0dd65b5b">c_io_isSuccessful</a>(<span class="keywordtype">void</span>) {<span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#a8444a95c4b21bb1662fbc6c8335a383c">c_io_success</a>;}</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#a84a72f5bc19d81d2736016dcc637624c">  173</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> int64_t <a class="code" href="c__io_8h.xhtml#a84a72f5bc19d81d2736016dcc637624c">c_io_isFailure</a>(<span class="keywordtype">void</span>)    {<span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#a1241786eca0d7b83753384a3fa40d75a">c_io_fail</a>;}</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="c__io_8h.xhtml#aea9079ded8a564cc1a268198f58424b0">  174</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> int64_t <a class="code" href="c__io_8h.xhtml#aea9079ded8a564cc1a268198f58424b0">c_io_dummyInit</a>(<span class="keywordtype">void</span> * <a class="code" href="namespacefastj__data.xhtml#a5b89a81e683f74c663a708af6b703a2e">p</a>){<span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#a8444a95c4b21bb1662fbc6c8335a383c">c_io_success</a>;}</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">/* </span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">   Next we have macros to allow plugin layers </span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">   You must define CIO_NEXT_LAYER to one of </span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">   the prescribed values (at the top of this file) </span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">   if you including this one. </span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">   The purpose here is to redirect the IO from the</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">   file including this header, into the next selected </span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">   layer. Polymorphism by force.</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">*/</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="preprocessor">#if (CIO_NEXT_LAYER == CIO_RBUFFERING)</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">/* layer protypes */</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;int64_t c_io_rbuffering_init   (<a class="code" href="structc__io__init__t.xhtml">c_io_init_t</a> *);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;int64_t c_io_rbuffering_fini   ();</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;int64_t c_io_rbuffering_in     (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;int64_t c_io_rbuffering_out    (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;int64_t c_io_rbuffering_setpos (int64_t, int64_t,int64_t);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;int64_t c_io_rbuffering_getpos (int64_t);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;int64_t c_io_rbuffering_open   (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;int64_t c_io_rbuffering_close  (int64_t);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;int64_t c_io_rbuffering_change_mode  (int64_t,int64_t);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">/* layer macros */</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor">#define C_IO_INIT(params) c_io_rbuffering_init(params)</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="preprocessor">#define C_IO_FINI         c_io_rbuffering_fini</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="preprocessor">#define C_IO_IN(unit,array,len,word_len) c_io_rbuffering_in((unit), (array) ,(len) ,(word_len))</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="preprocessor">#define C_IO_OUT(unit,array,len,word_len) c_io_rbuffering_out((unit), (array) ,(len) ,(word_len))</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="preprocessor">#define C_IO_OPEN(unit,filename,filestatus,filemode) c_io_rbuffering_open((unit), (filename) ,(filestatus) ,(filemode))</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="preprocessor">#define C_IO_CLOSE(unit) c_io_rbuffering_close(unit)</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="preprocessor">#define C_IO_SETPOS(unit,pos,word_len) c_io_rbuffering_setpos((unit),(pos),(word_len))</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="preprocessor">#define C_IO_GETPOS(unit) c_io_rbuffering_getpos((unit))</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="preprocessor">#define C_IO_CHANGE_MODE(unit,newMode) c_io_rbuffering_change_mode((unit),(newMode))</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="preprocessor">#if (CIO_NEXT_LAYER == CIO_WBUFFERING)</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">/* layer protypes */</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;int64_t c_io_wbuffering_init   (<a class="code" href="structc__io__init__t.xhtml">c_io_init_t</a> *);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;int64_t c_io_wbuffering_fini   ();</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;int64_t c_io_wbuffering_in     (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;int64_t c_io_wbuffering_out    (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;int64_t c_io_wbuffering_setpos (int64_t, int64_t,int64_t);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;int64_t c_io_wbuffering_getpos (int64_t);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;int64_t c_io_wbuffering_open   (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;int64_t c_io_wbuffering_close  (int64_t);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;int64_t c_io_wbuffering_change_mode  (int64_t,int64_t);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">/* layer macros */</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="preprocessor">#define C_IO_INIT(params) c_io_wbuffering_init(params)</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="preprocessor">#define C_IO_FINI         c_io_wbuffering_fini</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">#define C_IO_IN(unit,array,len,word_len) c_io_wbuffering_in((unit), (array) ,(len) ,(word_len))</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="preprocessor">#define C_IO_OUT(unit,array,len,word_len) c_io_wbuffering_out((unit), (array) ,(len) ,(word_len))</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="preprocessor">#define C_IO_OPEN(unit,filename,filestatus,filemode) c_io_wbuffering_open((unit), (filename) ,(filestatus) ,(filemode))</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="preprocessor">#define C_IO_CLOSE(unit) c_io_wbuffering_close(unit)</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="preprocessor">#define C_IO_SETPOS(unit,pos,word_len) c_io_wbuffering_setpos((unit),(pos),(word_len))</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="preprocessor">#define C_IO_GETPOS(unit) c_io_wbuffering_getpos((unit))</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="preprocessor">#define C_IO_CHANGE_MODE(unit,newMode) c_io_wbuffering_change_mode((unit),(newMode))</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="preprocessor">#if (CIO_NEXT_LAYER == CIO_TIMING)</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">/* layer protypes */</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;int64_t c_io_timing_init   (<a class="code" href="structc__io__init__t.xhtml">c_io_init_t</a> *);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;int64_t c_io_timing_fini   ();</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;int64_t c_io_timing_in     (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;int64_t c_io_timing_out    (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;int64_t c_io_timing_setpos (int64_t, int64_t,int64_t);</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;int64_t c_io_timing_getpos (int64_t);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;int64_t c_io_timing_open   (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;int64_t c_io_timing_close  (int64_t);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;int64_t c_io_timing_change_mode  (int64_t,int64_t);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">/* layer macros */</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="preprocessor">#define C_IO_INIT(params) c_io_timing_init(params)</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="preprocessor">#define C_IO_FINI         c_io_timing_fini</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="preprocessor">#define C_IO_IN(unit,array,len,word_len) c_io_timing_in((unit), (array) ,(len) ,(word_len))</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="preprocessor">#define C_IO_OUT(unit,array,len,word_len) c_io_timing_out((unit), (array) ,(len) ,(word_len))</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="preprocessor">#define C_IO_OPEN(unit,filename,filestatus,filemode) c_io_timing_open((unit), (filename) ,(filestatus) ,(filemode))</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="preprocessor">#define C_IO_CLOSE(unit) c_io_timing_close(unit)</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="preprocessor">#define C_IO_SETPOS(unit,pos,word_len) c_io_timing_setpos((unit),(pos),(word_len))</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="preprocessor">#define C_IO_GETPOS(unit) c_io_timing_getpos((unit))</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="preprocessor">#define C_IO_CHANGE_MODE(unit,newMode) c_io_timing_change_mode((unit),(newMode))</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="preprocessor">#if (CIO_NEXT_LAYER == CIO_TRACE)</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160; </div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">/* layer protypes */</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;int64_t c_io_trace_init   (<a class="code" href="structc__io__init__t.xhtml">c_io_init_t</a> *);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;int64_t c_io_trace_fini   ();</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;int64_t c_io_trace_in     (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;int64_t c_io_trace_out    (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;int64_t c_io_trace_setpos (int64_t, int64_t,int64_t);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;int64_t c_io_trace_getpos (int64_t);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;int64_t c_io_trace_open   (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;int64_t c_io_trace_close  (int64_t);</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;int64_t c_io_trace_change_mode  (int64_t,int64_t);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">/* layer macros */</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="preprocessor">#define C_IO_INIT(params) c_io_trace_init(params)</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="preprocessor">#define C_IO_FINI         c_io_trace_fini</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="preprocessor">#define C_IO_IN(unit,array,len,word_len) c_io_trace_in((unit), (array) ,(len) ,(word_len))</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="preprocessor">#define C_IO_OUT(unit,array,len,word_len) c_io_trace_out((unit), (array) ,(len) ,(word_len))</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="preprocessor">#define C_IO_OPEN(unit,filename,filestatus,filemode) c_io_trace_open((unit), (filename) ,(filestatus) ,(filemode))</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="preprocessor">#define C_IO_CLOSE(unit) c_io_trace_close(unit)</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="preprocessor">#define C_IO_SETPOS(unit,pos,word_len) c_io_trace_setpos((unit),(pos),(word_len))</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="preprocessor">#define C_IO_GETPOS(unit) c_io_trace_getpos((unit))</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="preprocessor">#define C_IO_CHANGE_MODE(unit,newMode) c_io_trace_change_mode((unit),(newMode))</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor">#if (CIO_NEXT_LAYER == CIO_BYTESWAP)</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">/* layer protypes */</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;int64_t c_io_byteswap_init   (<a class="code" href="structc__io__init__t.xhtml">c_io_init_t</a> *);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;int64_t c_io_byteswap_fini   ();</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;int64_t c_io_byteswap_in     (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;int64_t c_io_byteswap_out    (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;int64_t c_io_byteswap_setpos (int64_t, int64_t,int64_t);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;int64_t c_io_byteswap_getpos (int64_t);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;int64_t c_io_byteswap_open   (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;int64_t c_io_byteswap_close  (int64_t);</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;int64_t c_io_byteswap_change_mode  (int64_t,int64_t);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">/* layer macros */</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="preprocessor">#define C_IO_INIT(params) c_io_byteswap_init(params)</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="preprocessor">#define C_IO_FINI c_io_byteswap_fini</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="preprocessor">#define C_IO_IN(unit,array,len,word_len) c_io_byteswap_in((unit), (array) ,(len) ,(word_len))</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="preprocessor">#define C_IO_OUT(unit,array,len,word_len) c_io_byteswap_out((unit), (array) ,(len) ,(word_len))</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="preprocessor">#define C_IO_OPEN(unit,filename,filestatus,filemode) c_io_byteswap_open((unit), (filename) ,(filestatus) ,(filemode))</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="preprocessor">#define C_IO_CLOSE(unit) c_io_byteswap_close(unit)</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="preprocessor">#define C_IO_SETPOS(unit,pos,word_len) c_io_byteswap_setpos((unit),(pos),(word_len))</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="preprocessor">#define C_IO_GETPOS(unit) c_io_byteswap_getpos((unit))</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="preprocessor">#define C_IO_CHANGE_MODE(unit,newMode) c_io_byteswap_change_mode((unit),(newMode))</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="preprocessor">#if (CIO_NEXT_LAYER == CIO_LIBC)</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">/* layer protypes */</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;int64_t c_io_libc_open   (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;int64_t c_io_libc_setpos  (int64_t, int64_t, int64_t);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">/* layer macros */</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="preprocessor">#define C_IO_INIT(params) c_io_dummyInit(params);</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="preprocessor">#define C_IO_FINI()       c_io_isSuccessful();</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="preprocessor">#define C_IO_IN(unit,array,len,word_len)                     \</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="preprocessor">        fread((array),                                       \</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="preprocessor">              (size_t)(word_len),                            \</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="preprocessor">              (size_t)(len) ,                                \</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="preprocessor">              c_io_attributes[ (unit) ].filePointer)</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="preprocessor">#define C_IO_OUT(unit,array,len,word_len)                    \</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="preprocessor">               fwrite((array),                           \</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="preprocessor">               (size_t)(word_len),                           \</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="preprocessor">               (size_t)(len),                                \</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="preprocessor">               c_io_attributes[ (unit) ].filePointer)</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="preprocessor">#define C_IO_OPEN(unit,filename,filestatus,filemode)         \</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="preprocessor">               c_io_libc_open((unit), (filename) ,(filestatus) ,(filemode))</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="preprocessor">#define C_IO_CLOSE(unit)                                     \</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="preprocessor">        fclose(c_io_attributes[(unit)].filePointer)</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="preprocessor">#define C_IO_GETPOS(unit)                                    \</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="preprocessor">        ftello(c_io_attributes[ (unit) ].filePointer)</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="preprocessor">#define C_IO_SETPOS(unit,pos,wordlen)                        \</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="preprocessor">        c_io_libc_setpos((unit), (pos) ,(word_len))</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="preprocessor">#define C_IO_CHANGE_MODE(unit,newMode)                       \</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="preprocessor">        fflush(c_io_attributes[ (unit) ].filePointer)</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="preprocessor">#if ( CIO_NEXT_LAYER == CIO_UNIX ) </span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">/* layer protypes */</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;int64_t c_io_unix_open   (int64_t, <span class="keywordtype">char</span> *, int64_t, int64_t);</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;int64_t c_io_unix_close  (int64_t);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;int64_t c_io_unix_setpos  (int64_t, int64_t, int64_t);</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">/* layer macros */</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="preprocessor">#define C_IO_INIT(params) c_io_dummyInit((void *)(params))</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="preprocessor">#define C_IO_FINI()       c_io_isSuccessful()</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="preprocessor">#define C_IO_OPEN(unit,filename,filestatus,filemode)         \</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="preprocessor">        c_io_unix_open((unit), (filename) ,(filestatus) ,(filemode))</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="preprocessor">#define C_IO_CLOSE(unit) c_io_unix_close(unit)</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="preprocessor">#define C_IO_IN(unit,array,len,word_len)                     \</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="preprocessor">        (read(c_io_attributes[ (unit) ].fileDescriptor,      \</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="preprocessor">        (array),                                             \</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="preprocessor">    (size_t)(word_len)*(len))/(word_len))</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="preprocessor">#define C_IO_OUT(unit,array,len,word_len)                    \</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="preprocessor">        (write(c_io_attributes[ (unit) ].fileDescriptor,     \</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="preprocessor">        (array),                                             \</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="preprocessor">           (size_t)(word_len)*(len))/(word_len))</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="preprocessor">#define C_IO_SETPOS(unit,pos,word_len)                       \</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="preprocessor">        c_io_unix_setpos((unit), (pos) ,(word_len))</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="preprocessor">#define C_IO_GETPOS(unit)                                    \</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="preprocessor">        lseek(c_io_attributes[ (unit) ].fileDescriptor,      \</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="preprocessor">                        (off_t)(0),                          \</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="preprocessor">                        SEEK_CUR)</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="preprocessor">#define C_IO_CHANGE_MODE(unit,newMode)                       \</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="preprocessor">        lseek(c_io_attributes[ (unit) ].fileDescriptor,      \</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="preprocessor">                        (off_t)(0),                          \</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="preprocessor">                        SEEK_CUR)</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="preprocessor">#if ( CIO_NEXT_LAYER == CIO_IBM_MIO )</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="preprocessor">#error unimplemented layer: IBM_MIO</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
