<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/dynamics_advection/eg_idl_ni_init.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_cd31b8e5b091f70cb512ede7e9775b9c.xhtml">dynamics_advection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">eg_idl_ni_init.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="eg__idl__ni__init_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespaceeg__idl__ni__init__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceeg__idl__ni__init__mod.xhtml" title="Subroutine Interface: ">eg_idl_ni_init_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; <span class="keyword">CONTAINS</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespaceeg__idl__ni__init__mod.xhtml#a332d353c0a7aa840de40aee9c844eb67">eg_idl_ni_init</a>(  pi                                        &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;,model_domain, row_length, rows, n_rows, model_levels,wet_levels      &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;,tr_vars, tr_levels, bl_levels, first_constant_r_rho_level            &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;,cos_theta_latitude, sec_theta_latitude, f3_at_u, f3_at_v             &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;,timestep, first_atmstep_call, l_regular                              &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;,delta_x, delta_y, delta_lambda, delta_phi, base_phi, base_lambda     &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;,lat_rot_np_in, long_rot_np_in, phi_p, phi_v                          &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;,r_theta_levels, r_rho_levels, r_at_u, r_at_v, r_at_u_w, r_at_v_w     &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;,z_orog_print, eta_theta_levels, eta_rho_levels                       &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;!&gt; Multi-processor</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;,offx,offy,halo_i,halo_j, mype, nproc, at_extremity, datastart        &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;,gc_all_proc_group, global_row_length, global_rows                    &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;,g_rows, g_row_length, nproc_x                                        &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;!&gt; Primary fields</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;,theta, rho,   exner_rho_levels, q, qcl, qcf, qcf2, qrain, qgraup     &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;,cf, cfl, cff, u, v, w, u_adv, v_adv, w_adv                           &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;!&gt; LAM lateral boundary data</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;!&gt; Grid info for idealised</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;,height_domain_in, height_domain, big_layers                          &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;,transit_layers, surface_type, p_surface                              &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;!&gt; Profile settings</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;,tprofile_number, qprofile_number, uvprofile_number                   &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;,brunt_vaisala, theta_surface, dtheta_dz1, height_dz1                 &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;,u_in, v_in, height_u_in, ujet_lat, ujet_width, u_ramp_start          &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;,u_ramp_end, f_plane, r_plane, q1, num_profile_data                   &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;,zprofile_data, tprofile_data, qprofile_data, num_uvprofile_data      &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;,z_uvprofile_data, uprofile_data, vprofile_data                       &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;!&gt; Forcing settings</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;,max_model_levels, max_num_profile_data, max_num_force_times          &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;,tforce_option, qforce_option, uvforce_option, num_tforce_levels      &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;,num_tforce_times, num_qforce_levels, num_qforce_times                &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;,num_uvforce_levels, num_uvforce_times, z_tforce_data                 &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;,tforce_data, z_qforce_data, qforce_data, z_uvforce_data              &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;,uforce_data, vforce_data, tforce_data_modlev                         &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;,qforce_data_modlev, uforce_data_modlev, vforce_data_modlev           &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;!&gt; Dynamical core settings</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;,suhe_pole_equ_deltat, suhe_static_stab                               &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;,base_frictional_timescale, frictional_timescale                      &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;,suhe_sigma_cutoff, suhe_level_weight, l_sh_williamson                &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;!&gt;  Horizontal function parameters</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;,t_horizfn_number, uv_horizfn_number, t_horizfn_data                  &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;,l_perturb_t, perturb_magnitude_t,l_perturb_q                         &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;,perturb_magnitude_q, l_perturb_correlate_tq                          &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;,l_perturb_correlate_vert, l_perturb_correlate_time                   &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;,perturb_type, perturb_height                                         &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;!&gt;  Profiles for fixed lbcs and sponge zones</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;,u_ref, v_ref, theta_ref, exner_ref, rho_ref, zprofile_orog,          &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;idl_interp_option, hf                                                 &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;!&gt;  Options</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;,l_mcr_qcf2, l_mcr_qrain, l_mcr_qgraup                                &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;,l_constant_dz, l_rotating, l_fixed_lbcs, l_polar_wind_zero           &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;,l_wind_balance, l_rotate_winds, l_pressure_balance, l_physics        &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;,l_dry, l_sponge,l_cartesian,  l_code_test,l_cyclone, l_baroclinic    &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;,h_print, timestep_number, h_o_actual, grow_steps                     &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;,h_o_per_step, h_o, grid_number,  grid_flat                           &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;,first_theta_height, thin_theta_height, big_factor, vert_grid_ratio   &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;,lambda_fraction, phi_fraction, half_width_x, half_width_y            &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;,idl_max_num_bubbles, idl_bubble_option, idl_bubble_max               &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;,idl_bubble_height, idl_bubble_xoffset, idl_bubble_yoffset            &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;,idl_bubble_width, idl_bubble_depth, l_idl_bubble_saturate            &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;!&gt; Other fields</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;,a_ixsts,len_a_ixsts, a_spsts,len_a_spsts, nproc_y                    &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;,gc_proc_row_group,  idlsurffluxseaoption                             &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;,idlsurffluxseaparams, l_flux_bc, flux_h, flux_e                      &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;,L_spec_z0, z0m_scm, z0h_scm, roughlen_z0m, roughlen_z0h              &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;,i_hour, i_minute, i_second, problem_number,  orography )</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="namespaceeg__idl__ni__init__mod.xhtml#a332d353c0a7aa840de40aee9c844eb67">   77</a></span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jpim, jprb       <span class="comment">!DrHook</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">,  ONLY</span>: lhook, dr_hook   <span class="comment">!DrHook</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keywordtype">USE </span>water_constants_mod</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceeg__idl__generate__grid__mod.xhtml" title="Subroutine Interface: ">eg_idl_generate_grid_mod</a></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordtype">USE </span>atm_fields_bounds_mod</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceum__parparams.xhtml" title="This file belongs in section: MPP. ">um_parparams</a></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceproblem__mod.xhtml" title="This file belongs in section: Dynamics Advection This file belongs in section: Dynamics Advection...">problem_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceproblem__mod.xhtml#a73c1a7b18d9c36b1808211031dd6d0e3" title="for use in setting problem types ">standard</a>, <a class="code" href="namespaceproblem__mod.xhtml#a4b5b8120ebd74644d740c1913680aad7">monsoon</a>, <a class="code" href="namespaceproblem__mod.xhtml#ae472d80d1049f42c6c75bf5a917b685b">dynamical_core</a>,             &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                       <a class="code" href="namespaceproblem__mod.xhtml#ad3cc6c4e32845db7872b5201832cbb5d">idealised_problem</a>, <a class="code" href="namespaceproblem__mod.xhtml#ad4de39155a2f7fcdda7c6d3796262448">standard_namelist</a></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceeg__idl__calc__eta__levels__mod.xhtml" title="Subroutine Interface: ">eg_idl_calc_eta_levels_mod</a></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">! Subroutine arguments</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keywordtype">INTEGER</span>                                                               &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  model_domain                                                        &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                   <span class="comment">! holds integer code for model domain</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;, row_length                                                          &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                   <span class="comment">! number of points on a row</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;, rows                                                                &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                   <span class="comment">! number of rows in a theta field</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;, n_rows                                                              &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                   <span class="comment">! Local number of rows in a v field</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;, model_levels                                                        &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                   <span class="comment">! number of model levels</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;, wet_levels                                                          &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                   <span class="comment">! number of model levels where moisture</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                   <span class="comment">! variables are held</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;, bl_levels                                                           &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                   <span class="comment">! number of  boundary_layer_levels</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;, first_constant_r_rho_level                                          &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;, halo_i                                                              &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                   <span class="comment">! Size of halo in i direction.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;, halo_j                                                              &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                   <span class="comment">! Size of halo in j direction.</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;, offx                                                                &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                   <span class="comment">! Size of small halo in i</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;, offy                                                                &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                   <span class="comment">! Size of small halo in j.</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;, tr_vars                                                             &amp;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;, tr_levels</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: first_atmstep_call</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keywordtype">REAL</span>                                                                  &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  timestep                                                            &amp;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;, height_domain                                                       &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;, zprofile_orog, hf                                                   &amp;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;, dtheta_dz1(3)                                                       &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                  <span class="comment">!Allows different values of dtheta_dz to be set</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;, height_dz1(2)                                                       &amp;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                  <span class="comment">! at different heights specified by the</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                  <span class="comment">! height_dz variable.</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;, theta_ref(model_levels)                                             &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                           <span class="comment">!theta profile for use in sponge     &amp; lbcs</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;, exner_ref(model_levels + 1)                                         &amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                               <span class="comment">! Exner profile for use in lbcs</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;, rho_ref(model_levels)                                               &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                          <span class="comment">! rho profile for use in lbcs</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;, u_ref(model_levels)                                                 &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                        <span class="comment">! u profile for use in lbcs</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;, v_ref(model_levels)   <span class="comment">! u_adv profile for use in lbcs</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">! Idealised perturbation settings</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_perturb_t</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_perturb_q</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_perturb_correlate_tq</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_perturb_correlate_vert</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_perturb_correlate_time</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: perturb_magnitude_t</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: perturb_magnitude_q</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: perturb_height(2)</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: perturb_type</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">! Variables for idealised surface fluxes</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: idlsurffluxseaoption <span class="comment">! Surface flux option</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: idlsurffluxseaparams(10) <span class="comment">! Idl flux params</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: flux_h(row_length, rows) <span class="comment">! Idealised</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: flux_e(row_length, rows) <span class="comment">! surface fluxes</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: l_flux_bc <span class="comment">! Switch for specified fluxes</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">! Variables for specifying roughness length</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: L_spec_z0</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: z0m_scm(row_length, rows)<span class="comment">!                                          ! SCM specified z0m (m)</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: z0h_scm(row_length, rows)<span class="comment">!                                          ! SCM specified z0h (m)</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: roughlen_z0m</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: roughlen_z0h</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">! Time variables</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: i_hour    <span class="comment">! Model time (UTC, hour)</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: i_minute  <span class="comment">! Model time (UTC, minute)</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: i_second  <span class="comment">! Model time (UTC, second)</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordtype">INTEGER</span>                                                               &amp;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  mype                                                                &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;               <span class="comment">! My processor number</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;, nproc                                                               &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <span class="comment">! Total number of processors</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;, nproc_y                                                             &amp;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;              <span class="comment">! number of processors in N-S direction</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;, gc_all_proc_group                                                   &amp;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                    <span class="comment">! Group identifier for all processors.</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;, gc_proc_row_group                                                   &amp;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                    <span class="comment">! Group identifier for all processors.</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;, datastart(2)                                                        &amp;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                     <span class="comment">! First gridpoints held by this processor</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;, global_row_length                                                   &amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                       <span class="comment">! global number of points on a row</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;, global_rows          <span class="comment">! global number of rows</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keywordtype">INTEGER</span>                                                               &amp;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  g_rows(0:nproc-1)                                                   &amp;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;, g_row_length(0:nproc-1)                                             &amp;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;, nproc_x</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keywordtype">LOGICAL</span>                                                               &amp;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  at_extremity(4)  <span class="comment">! Indicates if this processor is at north,</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                   <span class="comment">! south, east or west of the processor grid</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">! Include physical constants</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordtype">REAL</span>                                                                  &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;     <span class="comment">! physical constants</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; pi   </div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keywordtype">REAL</span>                                                                  &amp;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;     <span class="comment">! horizontal co-ordinate information</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  delta_lambda                                                        &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;, delta_phi                                                           &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;, base_phi                                                            &amp;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;, base_lambda                                                         &amp;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;, lat_rot_np_in                                                       &amp;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;, long_rot_np_in                                                   </div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keywordtype">REAL</span>                                                                  &amp;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;     <span class="comment">! VarRes horizontal co-ordinate information</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  lambda_p(1-halo_i:row_length+halo_i)                                &amp;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;, phi_p(1-halo_j:rows+halo_j)                                         &amp;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;, <a class="code" href="acoords_8h.xhtml#a79b30275bcc7e8cca42cce5f2f76aea9">lambda_u</a>(1-halo_i:row_length+halo_i)                                &amp;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;, phi_v(1-halo_j:n_rows+halo_j)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_regular</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keywordtype">REAL</span>                                                                  &amp;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;     <span class="comment">! vertical co-ordinate information</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  r_theta_levels(1-halo_i:row_length+halo_i,                          &amp;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                 1-halo_j:rows+halo_j,0:model_levels)                 &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;, r_rho_levels(1-halo_i:row_length+halo_i,                            &amp;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;               1-halo_j:rows+halo_j, model_levels)                    &amp;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;, r_at_u(1-halo_i:row_length+halo_i,                                  &amp;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;               1-halo_j:rows+halo_j, model_levels)                    &amp;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;, r_at_v(1-halo_i:row_length+halo_i,                                  &amp;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;               1-halo_j:n_rows+halo_j, model_levels)                  &amp;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;, r_at_u_w(1-halo_i:row_length+halo_i,                                &amp;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;               1-halo_j:rows+halo_j, 0:model_levels)                  &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;, r_at_v_w(1-halo_i:row_length+halo_i,                                &amp;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;               1-halo_j:n_rows+halo_j, 0:model_levels)                &amp;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;, <a class="code" href="namespacelevel__heights__mod.xhtml#a47255d1b34083d1a399f41be0d9f703e" title="This module is used to hold levels values set in atmos_init. ">eta_theta_levels</a>(0:model_levels)                                    &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;, <a class="code" href="namespacelevel__heights__mod.xhtml#a70a55e4e7c1bab39c7c0f5c01579f6bb">eta_rho_levels</a>(model_levels)                                        &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;, cos_theta_latitude(1-offx:row_length+offx,                          &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                      1-offy:rows+offy)                               &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;, sec_theta_latitude(1-offx:row_length+offx,                          &amp;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                      1-offy:rows+offy)                               &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;, f3_at_u(1-offx:row_length+offx,                                    &amp;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                      1-offy:rows+offy)                               &amp;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;, f3_at_v(1-offx:row_length+offx,                                    &amp;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                      1-offy:n_rows+offy)                             &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;, z_orog_print(0:model_levels)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">! Suarez Held variables</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keywordtype">REAL</span>                                                                  &amp;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  suhe_pole_equ_deltat                                                &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;, suhe_static_stab                                                    &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;, suhe_sigma_cutoff                                                   &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;, base_frictional_timescale                                           &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;, frictional_timescale(model_levels)                                  &amp;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;, suhe_level_weight(model_levels)</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keywordtype">LOGICAL</span>                                                               &amp;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  l_sh_williamson</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keywordtype">REAL</span>                                                                  &amp;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  orography(row_length,rows)</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT (INOUT)</span> ::                                               &amp;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  rho(1-offx:row_length+offx, 1-offy:rows+offy,                       &amp;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        model_levels)                                                 &amp;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;, exner_rho_levels(1-offx:row_length+offx, 1-offy:rows+offy,          &amp;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        model_levels+1)                                               &amp;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;, theta(1-offx:row_length+offx, 1-offy:rows+offy,                     &amp;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;          model_levels)                                               &amp;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;, q(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,                 &amp;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;      0:model_levels)                                                 &amp;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;, qcl(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,               &amp;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        0:model_levels)                                               &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;, qcf(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,               &amp;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        0:model_levels)                                               &amp;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;, qcf2(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,              &amp;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;      0:model_levels)                                                 &amp;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;, qrain(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,             &amp;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      0:model_levels)                                                 &amp;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;, qgraup(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,            &amp;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;      0:model_levels)                                                 &amp;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;, cf(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,                &amp;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;      wet_levels)                                                     &amp;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;, cfl(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,               &amp;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        wet_levels)                                                   &amp;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;, cff(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,               &amp;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        wet_levels)                                                   &amp;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;, u(1-offx:row_length+offx, 1-offy:rows+offy, model_levels)           &amp;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;, v(1-offx:row_length+offx, 1-offy:n_rows+offy, model_levels)         &amp;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;, w(1-offx:row_length+offx, 1-offy:rows+offy, 0:model_levels)         &amp;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;, u_adv(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,             &amp;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        model_levels)                                                 &amp;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;, v_adv(1-halo_i:row_length+halo_i, 1-halo_j:n_rows+halo_j,           &amp;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        model_levels)                                                 &amp;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;, w_adv(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,             &amp;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        0:model_levels)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">! Diagnostic variables</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="preprocessor">#include &quot;surface.h&quot;</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;vgrid.h&quot;</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">! Stash indexing arrays</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="keywordtype">INTEGER</span> len_a_ixsts</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="keywordtype">INTEGER</span> len_a_spsts</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="keywordtype">INTEGER</span> a_ixsts(len_a_ixsts)     <span class="comment">! stash index array</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="keywordtype">REAL</span>    a_spsts(len_a_spsts)     <span class="comment">! atmos stash array</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">! Idealised  variables</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="keywordtype">INTEGER</span> :: max_model_levels     <span class="comment">! max no. of model levels</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="keywordtype">INTEGER</span> :: max_num_profile_data <span class="comment">! max no. levels in forcing data</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keywordtype">INTEGER</span> :: max_num_force_times  <span class="comment">! max no. times in forcing data</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="keywordtype">INTEGER</span> :: tforce_option        <span class="comment">! Theta forcing option</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="keywordtype">INTEGER</span> :: qforce_option        <span class="comment">! Moisture forcing option</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keywordtype">INTEGER</span> :: uvforce_option       <span class="comment">! Horizontal wind forcing option</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="keywordtype">INTEGER</span> :: num_tforce_levels    <span class="comment">! No. levels in T forcing data</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="keywordtype">INTEGER</span> :: num_tforce_times     <span class="comment">! No. times in T forcing data</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="keywordtype">INTEGER</span> :: num_qforce_levels    <span class="comment">! No. levels for Q forcing data</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="keywordtype">INTEGER</span> :: num_qforce_times     <span class="comment">! No. times in Q forcing data</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="keywordtype">INTEGER</span> :: num_uvforce_levels   <span class="comment">! No. levels for U,V forcing data</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keywordtype">INTEGER</span> :: num_uvforce_times    <span class="comment">! No. times in U,V forcing data</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keywordtype">REAL</span> :: h_o</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keywordtype">REAL</span> :: h_print</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keywordtype">REAL</span> :: h_o_actual   <span class="comment">! height of growing mountain</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="keywordtype">REAL</span> :: h_o_per_step <span class="comment">! height change per step of growing mountain</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="keywordtype">REAL</span> :: lambda_fraction</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="keywordtype">REAL</span> :: phi_fraction</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="keywordtype">REAL</span> :: half_width_x</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keywordtype">REAL</span> :: half_width_y</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordtype">REAL</span> :: height_domain_in</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keywordtype">REAL</span> :: delta_x           <span class="comment">! Resolution at equator</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keywordtype">REAL</span> :: delta_y           <span class="comment">! Resolution at equator</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keywordtype">REAL</span> :: big_factor</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="keywordtype">REAL</span> :: vert_grid_ratio</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="keywordtype">REAL</span> :: first_theta_height</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keywordtype">REAL</span> :: thin_theta_height</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="keywordtype">REAL</span> :: p_surface</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keywordtype">REAL</span> :: theta_surface</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="keywordtype">REAL</span> :: brunt_vaisala</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keywordtype">REAL</span> :: u_in(4)        <span class="comment">! Input values of zonal u</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keywordtype">REAL</span> :: v_in(4)        <span class="comment">! Input values of southerly wind v</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="keywordtype">REAL</span> :: height_u_in(3) <span class="comment">! heights specified by height_u_in variable</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="keywordtype">REAL</span> :: u_ramp_start   <span class="comment">! ramping starting latitude for u</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="keywordtype">REAL</span> :: u_ramp_end     <span class="comment">! ramping ending latitude for u</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="keywordtype">REAL</span> :: ujet_lat     <span class="comment">! To specify centre lat (degrees) of jet core</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="keywordtype">REAL</span> :: ujet_width     <span class="comment">! To specify width (degrees) of jet</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="keywordtype">REAL</span> :: t_horizfn_data(10) <span class="comment">! Data values describng horizontal t fn</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keywordtype">REAL</span> :: q1             <span class="comment">! Allows different values of moisture</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keywordtype">REAL</span> :: f_plane        <span class="comment">! fixed latitude Coriolis term</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="keywordtype">REAL</span> :: r_plane        <span class="comment">! reference latitude for row 1 (bottom row)</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">! Namelist profile data</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="keywordtype">REAL</span> :: zprofile_data(max_num_profile_data)    <span class="comment">! heights for t,q</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="keywordtype">REAL</span> :: tprofile_data(max_num_profile_data)    <span class="comment">! theta profile</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="keywordtype">REAL</span> :: qprofile_data(max_num_profile_data)    <span class="comment">! humidity profile</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="keywordtype">REAL</span> :: z_uvprofile_data(max_num_profile_data) <span class="comment">! heights for u,v</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="keywordtype">REAL</span> :: uprofile_data(max_num_profile_data)    <span class="comment">! u-wind profile</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keywordtype">REAL</span> :: vprofile_data(max_num_profile_data)    <span class="comment">! v-wind profile</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">! Heights of forcing data for T,Q,UV</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="keywordtype">REAL</span> :: z_tforce_data(max_num_profile_data)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="keywordtype">REAL</span> :: z_qforce_data(max_num_profile_data)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="keywordtype">REAL</span> :: z_uvforce_data(max_num_profile_data)</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">! Forcing data arrays for T,Q,U,V</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="keywordtype">REAL</span> :: tforce_data(max_num_profile_data, max_num_force_times)</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="keywordtype">REAL</span> :: qforce_data(max_num_profile_data, max_num_force_times)</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="keywordtype">REAL</span> :: uforce_data(max_num_profile_data, max_num_force_times)</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keywordtype">REAL</span> :: vforce_data(max_num_profile_data, max_num_force_times)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">! Forcing data interpolated onto model levels for T,Q,U,V</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="keywordtype">REAL</span> :: tforce_data_modlev(max_model_levels, max_num_force_times)</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="keywordtype">REAL</span> :: qforce_data_modlev(max_model_levels, max_num_force_times)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="keywordtype">REAL</span> :: uforce_data_modlev(max_model_levels, max_num_force_times)</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="keywordtype">REAL</span> :: vforce_data_modlev(max_model_levels, max_num_force_times)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="keywordtype">INTEGER</span> :: surface_type        <span class="comment">! idealised orography type</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="keywordtype">INTEGER</span> :: grow_steps</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keywordtype">INTEGER</span> :: grid_number</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="keywordtype">INTEGER</span> :: grid_flat</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="keywordtype">INTEGER</span> :: tprofile_number    <span class="comment">! temperature profile option</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="keywordtype">INTEGER</span> :: qprofile_number    <span class="comment">! moisture profile option</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="keywordtype">INTEGER</span> :: uvprofile_number   <span class="comment">! wind profile option</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="keywordtype">INTEGER</span> :: num_profile_data   <span class="comment">! no of values in z,q,tprofile_data</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="keywordtype">INTEGER</span> :: num_uvprofile_data   <span class="comment">! no of values in u,vprofile_data</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="keywordtype">INTEGER</span> :: t_horizfn_number   <span class="comment">! horiz function no. for temperature</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="keywordtype">INTEGER</span> :: uv_horizfn_number  <span class="comment">! horiz function no. for wind field</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="keywordtype">INTEGER</span> :: big_layers</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="keywordtype">INTEGER</span> :: transit_layers</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="keywordtype">INTEGER</span> :: timestep_number</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="keywordtype">INTEGER</span> :: problem_number</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="keywordtype">INTEGER</span> :: idl_interp_option  <span class="comment">! Profile interpolation option</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_constant_dz <span class="comment">! Sets const dtheta_dz from dtheta_dz1(1)</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_cartesian   <span class="comment">! new  cartesian flag (replaces l_trivial_trigs!)</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_fixed_lbcs    <span class="comment">! Set fixed lateral boundary conditions</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_pressure_balance  <span class="comment">! Geostrophically balance pressures</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_wind_balance  <span class="comment">! Geostrophically balance initial winds</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_rotate_winds  <span class="comment">! rotate input u,v (TRUE) to LAM u,v</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_polar_wind_zero   <span class="comment">! set u=0 on polar row</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_rotating      <span class="comment">! .TRUE. for Earth&#39;s rotation</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_code_test     <span class="comment">! User switch for testing code</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_cyclone       <span class="comment">! TRUE if cyclone simulation</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_baroclinic    <span class="comment">! TRUE if baroclinic wave simulation</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_physics       <span class="comment">! physics switch</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_dry           <span class="comment">! moisture switch</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_sponge        <span class="comment">! sponge switch</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment">! Bubble perturbation options</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="keywordtype">INTEGER</span> :: idl_max_num_bubbles</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="keywordtype">INTEGER</span> :: idl_bubble_option(idl_max_num_bubbles)</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="keywordtype">REAL</span> :: idl_bubble_max(idl_max_num_bubbles)</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="keywordtype">REAL</span> :: idl_bubble_height(idl_max_num_bubbles)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="keywordtype">REAL</span> :: idl_bubble_xoffset(idl_max_num_bubbles)</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keywordtype">REAL</span> :: idl_bubble_yoffset(idl_max_num_bubbles)</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="keywordtype">REAL</span> :: idl_bubble_width(idl_max_num_bubbles)</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="keywordtype">REAL</span> :: idl_bubble_depth(idl_max_num_bubbles)</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_idl_bubble_saturate(idl_max_num_bubbles)</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_mcr_qcf2    <span class="comment">! TRUE if using 2nd prognostic cloud ice</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_mcr_qrain   <span class="comment">! TRUE if using prognostic rain</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_mcr_qgraup  <span class="comment">! TRUE if using prognostic graupel</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="keywordtype">INTEGER</span>                                                               &amp;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160; errorstatus      <span class="comment">! Return code : 0 Normal Exit : &gt;0 Error</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="keywordtype">CHARACTER(LEN=256)</span>                                                         &amp;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160; cmessage         <span class="comment">! Error message if return code &gt;0</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">! Local variables:</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="keywordtype">CHARACTER(LEN=*)</span> routinename</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;parameter(   routinename=<span class="stringliteral">&#39;IDL_NI_INIT&#39;</span>)</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">! Work arrays with extended halos (_eh)</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">! Needed so that external halo values in LAMS can be set correctly</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">! for the lateral boundary arrays.</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="keywordtype">REAL</span>                                                                  &amp;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;  theta_eh(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,          &amp;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;           model_levels)                                              &amp;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;, rho_eh(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,            &amp;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;           model_levels)                                              &amp;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;, exner_rho_levels_eh(1-halo_i:row_length+halo_i,                     &amp;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;           1-halo_j:rows+halo_j, model_levels+1)</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="comment">! Loop counters</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="keywordtype">INTEGER</span> i,                                                            &amp;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        j ,                                                           &amp;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        ij,                                                           &amp;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        k,                                                            &amp;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        k2      <span class="comment">! Loop counters</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="keywordtype">REAL</span> z_at_theta   <span class="comment">! height of theta level in forcing data interp</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="keywordtype">REAL</span> z_at_rho     <span class="comment">! height of rho level in forcing data interp</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="keywordtype">REAL</span> weight       <span class="comment">! weight used in forcing data interpolation</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: orog_per_step(:,:)</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">! Variables for idealised surface fluxes</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="keywordtype">REAL</span> :: hrl,                                                          &amp;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        xfact</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="keywordtype">INTEGER</span> ierr</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment">! 1.0 Start of subroutine code: perform the calculation.</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EG_IDL_NI_INIT&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="keywordflow">IF</span> (first_atmstep_call) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;  <span class="keywordflow">IF</span> (mype == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39; =============================================&#39;</span>//    &amp;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        <span class="stringliteral">&#39;==========================&#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;                         UM IDEALISED SETTINGS&#39;</span>,     &amp;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39; =============================================&#39;</span>//    &amp;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        <span class="stringliteral">&#39;==========================&#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39; VERTICAL GRID AND OROGRAPHY &#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="comment">! h_o_actual needs to be set&gt;0 to ensure correct surface type generated</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="comment">!  when not setting h_o in namelist</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;  h_o_actual = 10.0     <span class="comment">! any value &gt; 0.0</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;  <span class="keywordflow">IF</span> ( grow_steps  &gt;   1)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    <span class="keywordflow">IF</span> (.not.<span class="keyword">ALLOCATED</span>(orog_per_step)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;      <span class="keyword">ALLOCATE</span> (orog_per_step(row_length, rows),stat=ierr)</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;      <span class="keywordflow">IF</span> (ierr /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;         <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( <span class="stringliteral">&#39;EG_IDL_NI_INIT&#39;</span>, ierr, <span class="stringliteral">&#39;Allocation failed&#39;</span> )</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keywordflow">IF</span> (mype == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;   Growing Orography &#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <span class="keywordflow">IF</span> ( surface_type   ==  surface_mask .OR.                         &amp;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;          surface_type   ==  surface_dump ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="comment">! store orography amount per timestep</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;      <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;          orog_per_step(i,j) = orography(i,j ) / grow_steps</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="comment">! reset orography for first timestep</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;          orography(i,j )  = orog_per_step(i,j)</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    <span class="keywordflow">ELSE</span>    <span class="comment">! growing idealised data</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;      h_o_per_step =  h_o / grow_steps</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;      h_o_actual =  h_o_per_step</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;      <span class="keywordflow">IF</span> (mype == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,fmt=<span class="stringliteral">&#39;(A,I5,A)&#39;</span>) <span class="stringliteral">&#39;   Hill/mountain grows over &#39;</span>,        &amp;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                    grow_steps,                                                &amp;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                    <span class="stringliteral">&#39; timesteps&#39;</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,fmt=<span class="stringliteral">&#39;(A,E16.8,A)&#39;</span>) <span class="stringliteral">&#39;   final hill/mountain height &#39;</span>,     &amp;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                                h_o,<span class="stringliteral">&#39; metres&#39;</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="keywordflow">      END IF</span>   <span class="comment">!(mype == 0)</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! surface_type   ==  surface_mask .or.</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment">!                   surface_type   ==  surface_dump</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;  <span class="keywordflow">ELSE</span>  <span class="comment">! grow_steps  &lt;=  1</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <span class="keywordflow">IF</span> ( surface_type   ==  surface_mask .OR.                         &amp;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;          surface_type   ==  surface_dump ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;     <span class="keywordflow">IF</span>(mype  ==  0)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;Orography fixed from start  &#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="keywordflow">      END IF</span>   <span class="comment">!(mype  ==  0)</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <span class="keywordflow">ELSE</span>  <span class="comment">! idealised orography</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;      h_o_per_step = 0.0</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;      h_o_actual = h_o</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;      <span class="keywordflow">IF</span>(mype  ==  0)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,fmt=<span class="stringliteral">&#39;(A,E16.8,A)&#39;</span>)<span class="stringliteral">&#39;hill/mountain fixed MAX height &#39;</span>       &amp;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;               ,h_o,<span class="stringliteral">&#39; metres&#39;</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="keywordflow">      END IF</span>   <span class="comment">!(mype  ==  0)</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="keywordflow">     END IF</span> <span class="comment">! surface_type   ==  surface_mask .or.</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="comment">!                    surface_type   ==  surface_dump</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="keywordflow"> END IF</span>  <span class="comment">! grow_steps  &gt;   1</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;  <span class="keywordflow">IF</span> ( grid_number  /=  vert_dump  .AND.       &amp;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;       grid_number  /=  vert_idl_um_grid ) <span class="keywordflow">THEN</span>  <span class="comment">! if change grid</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="comment">!   Calculate eta_levels (normalized vertical grid)</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="comment">!    Only needs to be done at start</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceeg__idl__calc__eta__levels__mod.xhtml#ab3b18d6fcfada3d29cd289ea72b2f761">eg_idl_calc_eta_levels</a>(                                      &amp;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                      model_levels,mype,first_constant_r_rho_level,   &amp;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                      <a class="code" href="namespacelevel__heights__mod.xhtml#a47255d1b34083d1a399f41be0d9f703e" title="This module is used to hold levels values set in atmos_init. ">eta_theta_levels</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#a70a55e4e7c1bab39c7c0f5c01579f6bb">eta_rho_levels</a>,               &amp;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment">!  Grid information</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                      grid_number, height_domain,                     &amp;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                      first_theta_height, thin_theta_height,          &amp;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                      big_layers, transit_layers, big_factor,         &amp;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                      vert_grid_ratio)</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="comment">!    height_domain set for idealised problem may have been changed</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment">!    in Calc_eta_levels. Anyway, dump value of model top needs changing</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    height_domain_in = height_domain</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="keywordflow">  END IF</span>        <span class="comment">! grid_number  /=  vert_dump</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="comment">!   Calculate required orography</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="comment">!  Use h_print to pass in h_o_actual since overwritten if real orography</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="comment">!                                        (surface_mask or surface_dump)</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;  h_print = h_o_actual</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="comment">! DEPENDS ON: eg_idl_surface_setup</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    <span class="keyword">CALL </span><a class="code" href="eg__idl__surface__setup_8f90.xhtml#a5c398cbf582cdd20a89fe7a942a17e03" title="Subroutine Interface: ">eg_idl_surface_setup</a>(                                        &amp;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                    row_length, rows, model_levels                    &amp;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;,                   halo_i, halo_j                                    &amp;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;,                   mype, nproc, at_extremity, model_domain           &amp;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;,                   n_rows                                            &amp;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;,                   orography, r_theta_levels                         &amp;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;,                   r_at_u_w(1-halo_i,1-halo_j,0)                     &amp;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;,                   r_at_v_w(1-halo_i,1-halo_j,0)                     &amp;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;,                   surface_type                                      &amp;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;,                   h_print, lambda_fraction, phi_fraction            &amp;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;,                   half_width_x, half_width_y)</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;  <span class="keywordflow">IF</span> ( grow_steps  &gt;   1)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment">! For growing real orography send final max value into Generate_grid</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="comment">!  so grid information over orography can be printed</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    <span class="keywordflow">IF</span> ( surface_type   ==  surface_mask .OR.                         &amp;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;         surface_type   ==  surface_dump ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;      h_print = h_print * grow_steps</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="keywordflow">    END IF</span>   <span class="comment">! surface_type   ==  surface_mask .or.</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="comment">!                   surface_type   ==  surface_dump</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="keywordflow">  END IF</span>    <span class="comment">!  grow_steps  &gt;   1</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="comment">!   Now generate r_theta_levels and r_rho_levels</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceeg__idl__generate__grid__mod.xhtml#a4d481938c66ddef97c55b80052301cbf">eg_idl_generate_grid</a>(                                        &amp;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                   first_constant_r_rho_level                         &amp;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;,                  a_ixsts,len_a_ixsts, a_spsts,len_a_spsts           &amp;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;,                  grid_number, grid_flat,height_domain_in            &amp;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;,                  h_print, z_orog_print)</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;  <span class="keywordflow">IF</span>(mype  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,fmt=<span class="stringliteral">&#39;(A,I5)&#39;</span>)<span class="stringliteral">&#39;Eta_grid generated problem_number &#39;</span>,         &amp;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                         problem_number</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;<span class="comment">! Copy single halo arrays into extended halo arrays</span></div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;  <span class="keywordflow">DO</span> k = 1, model_levels</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    <span class="keywordflow">DO</span> j = 1-offy, rows+offy</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;      <span class="keywordflow">DO</span> i = 1-offx, row_length+offx</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        theta_eh(i,j,k) = theta(i,j,k)</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        rho_eh(i,j,k)   = rho(i,j,k)</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        exner_rho_levels_eh(i,j,k)   = exner_rho_levels(i,j,k)</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;  k = model_levels + 1</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;  <span class="keywordflow">DO</span> j = 1-offy, rows+offy</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    <span class="keywordflow">DO</span> i = 1-offx, row_length+offx</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;      exner_rho_levels_eh(i,j,k)   = exner_rho_levels(i,j,k)</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;  <span class="keywordflow">IF</span> (timestep_number == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;<span class="comment">!   Generate intitial profiles for fields</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;<span class="comment">!   For grid_number = vert_dump only prints out grid information</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="comment">! DEPENDS ON: eg_idl_initial_data</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    <span class="keyword">CALL </span><a class="code" href="eg__idl__initial__data_8f90.xhtml#a66275425af8bdd5e672223bb381dfea1" title="Subroutine Interface: ">eg_idl_initial_data</a>(                                         &amp;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                   model_domain, row_length, rows, n_rows             &amp;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;,                  model_levels, wet_levels                           &amp;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;,                  tr_vars,tr_levels, bl_levels                       &amp;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;,                  first_constant_r_rho_level                         &amp;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;,                  cos_theta_latitude, sec_theta_latitude             &amp;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;,                  f3_at_u, f3_at_v, timestep                         &amp;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;,                  delta_x, delta_y                                   &amp;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;,                  offx, offy, halo_i, halo_j                         &amp;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;,                  mype, nproc, at_extremity                          &amp;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;,                  datastart, gc_all_proc_group                       &amp;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;,                  global_row_length, global_rows                     &amp;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;,                  delta_lambda, delta_phi                            &amp;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="comment">!  VarRes Grid Spacing</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;,                  lambda_p, phi_p, <a class="code" href="acoords_8h.xhtml#a79b30275bcc7e8cca42cce5f2f76aea9">lambda_u</a>, phi_v                   &amp;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;,                  l_regular                                          &amp;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;,                  base_phi, base_lambda                              &amp;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;,                  lat_rot_np_in, long_rot_np_in                      &amp;</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;,                  r_theta_levels, r_rho_levels                       &amp;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;,                  r_at_u, r_at_v, z_orog_print                       &amp;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;,                  <a class="code" href="namespacelevel__heights__mod.xhtml#a47255d1b34083d1a399f41be0d9f703e" title="This module is used to hold levels values set in atmos_init. ">eta_theta_levels</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#a70a55e4e7c1bab39c7c0f5c01579f6bb">eta_rho_levels</a>                   &amp;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;,                  theta_eh, rho_eh, exner_rho_levels_eh              &amp;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;,                  q, qcl, qcf, qcf2, qrain, qgraup                   &amp;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;,                  u_adv, v_adv, w_adv                                &amp;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;,                  g_rows, g_row_length                               &amp;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;,                  nproc_x, nproc_y                                   &amp;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="comment">!  Grid information</span></div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;,                  height_domain_in                                   &amp;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;,                  big_layers, transit_layers                         &amp;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;,                  surface_type, p_surface                            &amp;</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="comment">! Profile settings</span></div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;,                  tprofile_number, qprofile_number                   &amp;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;,                  uvprofile_number                                   &amp;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;,                  brunt_vaisala                                      &amp;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;,                  theta_surface, dtheta_dz1, height_dz1              &amp;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;,                  u_in, v_in, height_u_in, ujet_lat, ujet_width      &amp;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;,                  u_ramp_start, u_ramp_end, f_plane, r_plane         &amp;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;,                  q1, max_num_profile_data, num_profile_data         &amp;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;,                  zprofile_data, tprofile_data, qprofile_data        &amp;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;,                  num_uvprofile_data, z_uvprofile_data               &amp;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;,                  uprofile_data, vprofile_data                       &amp;</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;,                  zprofile_orog, idl_interp_option, hf               &amp;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="comment">! Dynamical core settings</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;,                  suhe_pole_equ_deltat, suhe_static_stab             &amp;</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;,                  base_frictional_timescale                          &amp;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;,                  frictional_timescale, suhe_sigma_cutoff            &amp;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;,                  suhe_level_weight, l_sh_williamson                 &amp;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="comment">!  Horizontal function parameters</span></div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;,                  t_horizfn_number, uv_horizfn_number                &amp;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;,                  t_horizfn_data                                     &amp;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;,                  l_perturb_t, perturb_magnitude_t                   &amp;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;,                  l_perturb_q, perturb_magnitude_q                   &amp;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;,                  l_perturb_correlate_tq                             &amp;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;,                  l_perturb_correlate_vert                           &amp;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;,                  l_perturb_correlate_time                           &amp;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;,                  perturb_type, perturb_height                       &amp;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="comment">!  Profiles for fixed lbcs and sponge zones</span></div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;,                  u_ref, v_ref, theta_ref, exner_ref, rho_ref        &amp;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="comment">!  Options</span></div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;,                  l_mcr_qcf2, l_mcr_qrain, l_mcr_qgraup              &amp;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;,                  l_constant_dz, l_rotating                          &amp;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;,                  l_fixed_lbcs, l_polar_wind_zero                    &amp;</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;,                  l_wind_balance, l_rotate_winds                     &amp;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;,                  l_pressure_balance, l_physics, l_dry, l_sponge     &amp;</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;,                  l_cyclone,  l_baroclinic                           &amp;</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;,                  idl_max_num_bubbles, idl_bubble_option             &amp;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;,                  idl_bubble_max, idl_bubble_height                  &amp;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;,                  idl_bubble_xoffset, idl_bubble_yoffset             &amp;</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;,                  idl_bubble_width, idl_bubble_depth                 &amp;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;,                  l_idl_bubble_saturate                              &amp;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;,                  l_cartesian, l_code_test)</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;  <span class="comment">! Copy idealised data from extended halo work arrays into</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;  <span class="comment">! model fields and set other fields.</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    u(1:row_length,1:rows,:)   = u_adv(1:row_length,1:rows,:)</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    v(1:row_length,1:n_rows,:) = v_adv(1:row_length,1:n_rows,:)</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    w(1:row_length,1:rows,:)   = w_adv(1:row_length,1:rows,:)</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    <span class="keywordflow">IF</span>(model_domain  ==  <a class="code" href="namespacedomain__params.xhtml#aa4621b29b8014dcc312af1558bc008e3">mt_global</a>)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;<span class="comment">! DEPENDS ON: polar_reset_mean</span></div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;      <span class="keyword">CALL </span><a class="code" href="polar__reset__mean_8f90.xhtml#a846500f9a896f9cad1804ad32a0a233a" title="Subroutine Polar_Reset_Mean. ">polar_reset_mean</a>(                                          &amp;</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                      exner_rho_levels,rho,theta,w,                   &amp;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                      q,qcl,qcf,                                      &amp;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;                      cf,cfl,cff,                                     &amp;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                      row_length, rows, model_levels,                 &amp;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;                      wet_levels, global_row_length,                  &amp;</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;                      offx, offy, halo_i, halo_j,                     &amp;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                      nproc, nproc_y, gc_proc_row_group,              &amp;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                      at_extremity)</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! timestep_number == 1</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! on first_atmstep_call</span></div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;-<span class="comment">!                End of section for Timestep = 1</span></div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;-</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;-</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="comment">!              Start of section for first call to ATMSTEP</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="comment">!         (i.e. first timestep of a new run OR continuation run)</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;-</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="keywordflow">IF</span> (first_atmstep_call) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;   <span class="comment">! Interpolate theta forcing data to model levels if required</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160; </div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;  <span class="keywordflow">IF</span> (tforce_option  &gt;   0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    <span class="comment">! Check to make sure the namelist profile data extends</span></div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    <span class="comment">! to the top of the model.</span></div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacelevel__heights__mod.xhtml#a47255d1b34083d1a399f41be0d9f703e" title="This module is used to hold levels values set in atmos_init. ">eta_theta_levels</a>(model_levels)*height_domain                  &amp;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;         &gt;   z_tforce_data(num_tforce_levels)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;      <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)                                           &amp;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        <span class="stringliteral">&#39;Idealised namelist forcing profile data (T)&#39;</span>                 &amp;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;        //<span class="stringliteral">&#39;does not extend to the top of the model.&#39;</span>                  &amp;</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        //<span class="stringliteral">&#39;Please modify the namelist data.&#39;</span></div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;      errorstatus = 1</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    <span class="comment">! Interpolate theta from namelist profile to model levels</span></div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    <span class="keywordflow">DO</span> k = 1, model_levels</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;      z_at_theta = <a class="code" href="namespacelevel__heights__mod.xhtml#a47255d1b34083d1a399f41be0d9f703e" title="This module is used to hold levels values set in atmos_init. ">eta_theta_levels</a>(k) * height_domain</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;      <span class="keywordflow">DO</span> k2 = 1, num_tforce_levels-1</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;        <span class="keywordflow">DO</span> j = 1, num_tforce_times</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;            <span class="keywordflow">IF</span> (z_at_theta  &gt;   z_tforce_data(k2) .AND.               &amp;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;                z_at_theta  &lt;=  z_tforce_data(k2+1)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;              weight = (z_at_theta - z_tforce_data(k2))               &amp;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;                     /(z_tforce_data(k2+1) - z_tforce_data(k2))</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;              tforce_data_modlev(k,j) = tforce_data(k2,j)             &amp;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;               + weight*(tforce_data(k2+1,j) - tforce_data(k2,j))</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;   <span class="comment">! Interpolate q forcing data to model levels if required</span></div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160; </div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;  <span class="keywordflow">IF</span> (qforce_option  &gt;   0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    <span class="comment">! Check to make sure the namelist profile data extends</span></div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    <span class="comment">! to the top of the model.</span></div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacelevel__heights__mod.xhtml#a47255d1b34083d1a399f41be0d9f703e" title="This module is used to hold levels values set in atmos_init. ">eta_theta_levels</a>(model_levels)*height_domain                  &amp;</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;         &gt;   z_qforce_data(num_qforce_levels)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;      <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)                                           &amp;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;        <span class="stringliteral">&#39;Idealised namelist forcing profile data (q)&#39;</span>                 &amp;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;        //<span class="stringliteral">&#39;does not extend to the top of the model.&#39;</span>                  &amp;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;        //<span class="stringliteral">&#39;Please modify the namelist data.&#39;</span></div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;      errorstatus = 1</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;    <span class="comment">! Interpolate humidity from namelist profile to model levels</span></div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;    <span class="keywordflow">DO</span> k = 1, model_levels</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;      z_at_theta = <a class="code" href="namespacelevel__heights__mod.xhtml#a47255d1b34083d1a399f41be0d9f703e" title="This module is used to hold levels values set in atmos_init. ">eta_theta_levels</a>(k) * height_domain</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;      <span class="keywordflow">DO</span> k2 = 1, num_qforce_levels-1</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;        <span class="keywordflow">DO</span> j = 1, num_qforce_times</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;            <span class="keywordflow">IF</span> (z_at_theta  &gt;   z_qforce_data(k2) .AND.               &amp;</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;                z_at_theta  &lt;=  z_qforce_data(k2+1)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;              weight = (z_at_theta - z_qforce_data(k2))               &amp;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;                       /(z_qforce_data(k2+1) - z_qforce_data(k2))</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;              qforce_data_modlev(k,j) = qforce_data(k2,j)             &amp;</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;               + weight*(qforce_data(k2+1,j) - qforce_data(k2,j))</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;   <span class="comment">! Interpolate u,v forcing data to model levels if required</span></div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160; </div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;  <span class="keywordflow">IF</span> (uvforce_option  &gt;   0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    <span class="comment">! Check to make sure the namelist profile data extends</span></div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    <span class="comment">! to the top of the model.</span></div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacelevel__heights__mod.xhtml#a47255d1b34083d1a399f41be0d9f703e" title="This module is used to hold levels values set in atmos_init. ">eta_theta_levels</a>(model_levels)*height_domain                  &amp;</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;         &gt;   z_uvforce_data(num_uvforce_levels)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;      <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)                                           &amp;</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;        <span class="stringliteral">&#39;Idealised namelist forcing profile data (uv) &#39;</span>               &amp;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;        //<span class="stringliteral">&#39;does not extend to the top of the model.&#39;</span>                  &amp;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;        //<span class="stringliteral">&#39;Please modify the namelist data.&#39;</span></div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;      errorstatus = 1</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    <span class="comment">! Interpolate wind from namelist profile to model levels</span></div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;    <span class="keywordflow">DO</span> k = 1, model_levels</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;      z_at_rho = <a class="code" href="namespacelevel__heights__mod.xhtml#a70a55e4e7c1bab39c7c0f5c01579f6bb">eta_rho_levels</a>(k) * height_domain</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;      <span class="keywordflow">DO</span> k2 = 1, num_uvforce_levels-1</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;        <span class="keywordflow">DO</span> j = 1, num_uvforce_times</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;            <span class="keywordflow">IF</span> (z_at_rho  &gt;   z_uvforce_data(k2) .AND.                &amp;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;                z_at_rho  &lt;=  z_uvforce_data(k2+1)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;              weight = (z_at_rho - z_uvforce_data(k2))                &amp;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;                     /(z_uvforce_data(k2+1) - z_uvforce_data(k2))</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;              uforce_data_modlev(k,j) = uforce_data(k2,j)             &amp;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;               + weight*(uforce_data(k2+1,j) - uforce_data(k2,j))</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;              vforce_data_modlev(k,j) = vforce_data(k2,j)             &amp;</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;               + weight*(vforce_data(k2+1,j) - vforce_data(k2,j))</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;-<span class="comment">! Section to cal idl_fix_lam_lbcs deleted</span></div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;-<span class="keywordflow">END IF</span> <span class="comment">! on first_atmstep_call = .TRUE.</span></div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;-<span class="comment">!              End of section for first call to ATMSTEP</span></div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;-</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;-</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;<span class="comment">!              Start of section for timestep &gt; 0</span></div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;-<span class="keywordflow">IF</span> ( timestep_number &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;   <span class="comment">!</span></div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;  <span class="comment">!                   Growing Orography</span></div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;   <span class="keywordflow">IF</span> ( timestep_number &lt;= grow_steps ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;<span class="comment">!  If growing orography then need to recalculate surface and</span></div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;<span class="comment">!   r vertical coordinate values (but eta values remain fixed)</span></div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;    <span class="keywordflow">IF</span> ( surface_type   ==  surface_mask .OR.                         &amp;</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;         surface_type   ==  surface_dump ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;      h_o_actual = h_print</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;<span class="comment">! grow orography by  orog_per_step</span></div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;      <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;        <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;          ij = i + (j-1)*row_length</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;          orography(i,j) = orography(i,j ) +                          &amp;</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;                                    orog_per_step(i,j)</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;      <span class="keywordflow">IF</span>(mype  ==  0)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;Growing real orography &#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;<span class="keywordflow">      END IF</span>   <span class="comment">!(mype  ==  0)</span></div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;    <span class="keywordflow">ELSE</span>  <span class="comment">!  growing idealised orography</span></div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;      h_o_actual = h_o_actual + h_o_per_step</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;      <span class="keywordflow">IF</span>(mype  ==  0)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;         <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,fmt=<span class="stringliteral">&#39;(A,E16.8,A)&#39;</span>)<span class="stringliteral">&#39;hill/mountain growing &#39;</span>,h_o_actual    &amp;</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;                               ,<span class="stringliteral">&#39; metres&#39;</span></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;<span class="keywordflow">      END IF</span>   <span class="comment">!(mype  ==  0)</span></div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">!  surface_type   ==  surface_mask .or.</span></div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;<span class="comment">!                    surface_type   ==  surface_dump</span></div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;<span class="comment">! DEPENDS ON: eg_idl_surface_setup</span></div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;      <span class="keyword">CALL </span><a class="code" href="eg__idl__surface__setup_8f90.xhtml#a5c398cbf582cdd20a89fe7a942a17e03" title="Subroutine Interface: ">eg_idl_surface_setup</a>(                                      &amp;</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;                    row_length, rows, model_levels                    &amp;</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;,                   halo_i, halo_j                                    &amp;</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;,                   mype, nproc, at_extremity, model_domain           &amp;</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;,                   n_rows                                            &amp;</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;,                   orography, r_theta_levels                         &amp;</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;,                   r_at_u_w(1-halo_i,1-halo_j,0)                     &amp;</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;,                   r_at_v_w(1-halo_i,1-halo_j,0)                     &amp;</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;,                   surface_type                                      &amp;</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;,                   h_o_actual, lambda_fraction, phi_fraction         &amp;</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;,                   half_width_x, half_width_y)</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;<span class="comment">!   Regenerate r_theta_levels and r_rho_levels</span></div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;       <span class="keyword">CALL </span><a class="code" href="namespaceeg__idl__generate__grid__mod.xhtml#a4d481938c66ddef97c55b80052301cbf">eg_idl_generate_grid</a>(                                     &amp;</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;                    first_constant_r_rho_level                        &amp;</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;,                   a_ixsts,len_a_ixsts, a_spsts,len_a_spsts          &amp;</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;,                   grid_number, grid_flat,height_domain_in           &amp;</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;,                   h_o_actual, z_orog_print)</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;    <span class="keywordflow">IF</span>(l_fixed_lbcs)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;      <span class="keywordflow">IF</span>(mype  ==  0)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( <span class="stringliteral">&#39;EG_IDL_NI_INIT&#39;</span>, 1,                            &amp;</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;                  <span class="stringliteral">&#39;Call routine to make fixed lbcs consistent&#39;</span> )</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;<span class="keywordflow">      END IF</span>   <span class="comment">!(mype  ==  0)</span></div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;<span class="keywordflow">    END IF</span>     <span class="comment">! L_fixed_lbcs</span></div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! on (timestep_number &lt;= grow_steps)</span></div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;   <span class="comment">!</span></div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;  <span class="comment">!                 Idealised Surface Fluxes</span></div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;   <span class="comment">! Overwrite sea surface fluxes with idealised fluxes</span></div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;  <span class="comment">! if idealised options turned on (IdlSurfFluxSeaOption  /=  0)</span></div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;    <span class="comment">! Option 1: Zero surface fluxes</span></div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;    <span class="keywordflow">IF</span> (idlsurffluxseaoption == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;    <span class="keywordflow">IF</span> (mype == 0 .AND. first_atmstep_call) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;  Specifing zero sea surface heat fluxes&#39;</span>, &amp;</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;          src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;    l_flux_bc = .true.</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;    <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;      <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;        flux_h(i,j) = 0.0</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;        flux_e(i,j) = 0.0</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! on (IdlSurfFluxSeaOption  ==  1)</span></div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;    <span class="comment">! Option 2: Diurnal cycle</span></div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;  <span class="comment">! (positive surface fluxes during the day, zero at night)</span></div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;    <span class="keywordflow">IF</span> (idlsurffluxseaoption == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;    <span class="keywordflow">IF</span> (mype == 0 .AND. first_atmstep_call) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39; SURFACE FLUXES&#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;  Specifing sea surface flux diurnal cycle&#39;</span>, &amp;</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;          src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A37,F7.2)&#39;</span>)                                  &amp;</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;        <span class="stringliteral">&#39;   Maximum sensible heat flux (W/m2):&#39;</span>,                      &amp;</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;        idlsurffluxseaparams(1)</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A37,F7.2)&#39;</span>)                                  &amp;</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;          <span class="stringliteral">&#39;   Maximum latent heat flux (W/m2):  &#39;</span>,                      &amp;</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;          idlsurffluxseaparams(2)</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A37,F7.2)&#39;</span>)                                  &amp;</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;        <span class="stringliteral">&#39;   Time (UTC) of max flux (hours):   &#39;</span>,                      &amp;</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;        idlsurffluxseaparams(3)</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A37,F7.2)&#39;</span>)                                  &amp;</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;          <span class="stringliteral">&#39;   Length of the day (hours):        &#39;</span>,                      &amp;</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;          idlsurffluxseaparams(4)</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;    l_flux_bc = .true.</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;    <span class="comment">! IdlSurfFluxSeaParams(1) = max sensible heat flux</span></div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;    <span class="comment">! IdlSurfFluxSeaParams(2) = max latent heat flux</span></div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;    <span class="comment">! IdlSurfFluxSeaParams(3) = Time (UTC) of max flux (hours)</span></div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;    <span class="comment">! IdlSurfFluxSeaParams(4) = Length of day (hours)</span></div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;    <span class="comment">! Calculate current time (UTC) in hours</span></div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;    hrl   = ((i_hour*60.0 + i_minute)*60.0 + i_second)/3600.0</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;    <span class="comment">! Set up diurnally varying function</span></div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;    xfact  = cos( pi/2.*(idlsurffluxseaparams(3)-hrl)/                &amp;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;                        (idlsurffluxseaparams(4)/2.)  )</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;    <span class="comment">! Limit fluxes to being positive (upward)</span></div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;    <span class="keywordflow">IF</span> (xfact &lt;= 0.) xfact=0.</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;    <span class="comment">! Set diurnally varying fluxes</span></div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;    <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;      <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;        flux_h(i,j) = idlsurffluxseaparams(1)*xfact**1.5</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;        flux_e(i,j) = idlsurffluxseaparams(2)*xfact**1.3</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! on (IdlSurfFluxSeaOption  ==  2)</span></div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;                <span class="comment">! Option 3: Fixed surface fluxes</span></div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;                <span class="keywordflow">IF</span> (idlsurffluxseaoption == 3) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;          <span class="keywordflow">IF</span> (mype == 0 .AND. first_atmstep_call) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;Specifying fixed sea surface heat fluxes&#39;</span>,    &amp;</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;                             src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span> )</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;          l_flux_bc = .true.</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;          <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;            <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;              flux_h(i,j) = idlsurffluxseaparams(1)</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;              flux_e(i,j) = idlsurffluxseaparams(2)</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;<span class="keywordflow">             END DO</span></div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;          <span class="keywordflow">IF</span> (mype == 0 .AND. first_atmstep_call) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,E14.6)&#39;</span>) <span class="stringliteral">&#39;Sensible heat flux (Wm-2) = &#39;</span>, &amp;</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;                           idlsurffluxseaparams(1)</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,E14.6)&#39;</span>) <span class="stringliteral">&#39;Latent heat flux (Wm-2)   = &#39;</span>, &amp;</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;                           idlsurffluxseaparams(2)</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;eg_idl_ni_init&#39;</span>)</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! on (IdlSurfFluxSeaOption == 3)</span></div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;               <span class="comment">!</span></div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;        <span class="comment">!                 Fixing roughness length</span></div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;        <span class="comment">!</span></div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;       </div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;        <span class="keywordflow">IF</span> (l_spec_z0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;          <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;            <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;              z0m_scm(i,j) = roughlen_z0m              z0h_scm(i,j) = roughlen_z0h<span class="keywordflow">            END DO</span></div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;<span class="keywordflow">        END IF</span>    <span class="comment">!L_spec_z0</span></div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;<span class="keywordflow"> END IF</span>      <span class="comment">! timestep_number &gt; 0</span></div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;-<span class="comment">!              End of section for timestep &gt; 0</span></div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;-</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EG_IDL_NI_INIT&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespaceeg__idl__ni__init__mod.xhtml#a332d353c0a7aa840de40aee9c844eb67">eg_idl_ni_init</a></div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceeg__idl__ni__init__mod.xhtml" title="Subroutine Interface: ">eg_idl_ni_init_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
