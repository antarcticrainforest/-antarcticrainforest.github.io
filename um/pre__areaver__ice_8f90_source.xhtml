<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/river_routing/pre_areaver_ice.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_bae1cb46695abd27a5646b02ea8f0e2c.xhtml">river_routing</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">pre_areaver_ice.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pre__areaver__ice_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespacepre__areaver__ice__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacepre__areaver__ice__mod.xhtml" title="Code Owner: See Unified Model Code Owners HTML page. ">pre_areaver_ice_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="namespacepre__areaver__ice__mod.xhtml#ad643a450dee62affd8ac9c8d7b8327a8">pre_areaver_ice</a>(GAPS_LAMBDA_SRCE,LAMBDA_SRCE           &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;     &amp;,GAPS_PHI_SRCE,PHI_SRCE,CYCLIC_SRCE,LROW_SRCE,WANT,MASK_SRCE      &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;     &amp;,GAPS_LAMBDA_TARG,LAMBDA_TARG,GAPS_PHI_TARG,PHI_TARG              &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;     &amp;,CYCLIC_TARG,SPHERICAL,FRAC_SRCE                                  &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;     &amp;,MAXL,COUNT_TARG,BASE_TARG,INDEX_SRCE,WEIGHT,ICODE,CMESSAGE)</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="namespacepre__areaver__ice__mod.xhtml#ad643a450dee62affd8ac9c8d7b8327a8">   17</a></span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <span class="keywordtype">USE </span>conversions_mod<span class="keywordtype">, ONLY</span>: pi_over_180</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;           <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;     &amp; GAPS_LAMBDA_SRCE                                                 &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                               <span class="comment">!IN number of lambda gaps in source grid</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;     &amp;,gaps_phi_srce                                                    &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                               <span class="comment">!IN number of phi gaps in source grid</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;     &amp;,gaps_lambda_targ                                                 &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                               <span class="comment">!IN number of lambda gaps in target grid</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;     &amp;,gaps_phi_targ                                                    &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                               <span class="comment">!IN number of phi gaps in target grid</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;     &amp;,lrow_srce                                                        &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                               <span class="comment">!IN first dimension of MASK_SRCE</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;     &amp;,maxl                                                             &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                               <span class="comment">!INOUT maximum entries in output lists</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;     &amp;,count_targ(gaps_lambda_targ,gaps_phi_targ)                       &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;     &amp;,base_targ(gaps_lambda_targ,gaps_phi_targ)                        &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;     &amp;,index_srce(maxl)                                                 &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                               <span class="comment">!OUT list of source box indices</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;     &amp;,icode                   <span class="comment">!OUT return code</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <span class="keywordtype">LOGICAL</span>                                                           &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;     &amp; CYCLIC_SRCE                                                      &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                               <span class="comment">!IN source grid is cyclic</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;     &amp;,cyclic_targ                                                      &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                               <span class="comment">!IN target grid is cyclic</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;     &amp;,want                                                             &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                               <span class="comment">!IN indicator of wanted points in mask</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;     &amp;,mask_srce(lrow_srce,*)                                           &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                               <span class="comment">!IN land/sea mask for source grid</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;     &amp;,spherical               <span class="comment">!IN calculate weights for a sphere</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;     &amp; LAMBDA_SRCE(*)                                                   &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                               <span class="comment">!IN source lambda line coordinates</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;     &amp;,phi_srce(*)                                                      &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                               <span class="comment">!IN source phi line coordinates</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;     &amp;,lambda_targ(*)                                                   &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                               <span class="comment">!IN target lambda line coordinates</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;     &amp;,phi_targ(*)                                                      &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                               <span class="comment">!IN target phi line coordinates</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;     &amp;,frac_srce(lrow_srce,*)                                           &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                               <span class="comment">!IN source ice or leads fraction</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;     &amp;,weight(maxl)            <span class="comment">!OUT list of weights for source boxes</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span> CMESSAGE  <span class="comment">!OUT error message</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;     &amp; LINES_LAMBDA_SRCE                                                &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                               <span class="comment">! number of source lambda lines</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;     &amp;,lines_phi_srce                                                   &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                               <span class="comment">! number of source phi lines</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;     &amp;,lines_lambda_targ                                                &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                               <span class="comment">! number of target lambda lines</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;     &amp;,lines_phi_targ                                                   &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                               <span class="comment">! number of target phi lines</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;     &amp;,count_lambda(gaps_lambda_targ)                                   &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;     &amp;,count_phi(gaps_phi_targ)                                         &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;     &amp;,index_lambda(gaps_lambda_srce+gaps_lambda_targ)                  &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;     &amp;,index_phi(gaps_phi_srce+gaps_phi_targ)                           &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;     &amp;,ix1,iy1,ix2,iy2                                                  &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                               <span class="comment">! working SRCE/TARG LAMBDA/PHI indices</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;     &amp;,ix1n,ix1w                                                        &amp;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                               <span class="comment">! working indices</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;     &amp;,ixl(gaps_lambda_targ+1)                                          &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                               <span class="comment">! source line on the left of target line</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;     &amp;,ix2n                                                             &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                               <span class="comment">! target gap to the right of IX2</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;     &amp;,iyt(gaps_phi_targ+1)                                             &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                               <span class="comment">! source line above target line</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;     &amp;,ixp,iyp,ip                                                       &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                               <span class="comment">! pointers into lists</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;     &amp;,ix,iy,i                 <span class="comment">! loop indices</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;     &amp; BASLAM                                                           &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                               <span class="comment">! minimum lambda for TEMP coordinates</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;     &amp;,btarg                                                            &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                               <span class="comment">! width of target gap</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;     &amp;,blo,bhi                                                          &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                               <span class="comment">! limits of gap</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;     &amp;,temp_srce(gaps_lambda_srce+1)                                    &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">!                              ! adjusted version of LAMBDA_SRCE</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;     &amp;,temp_targ(gaps_lambda_targ+1)                                    &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">!                              ! adjusted version of LAMBDA_TARG</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;     &amp;,frac_lambda(gaps_lambda_srce+gaps_lambda_targ)                   &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">!                              ! fractions of target lambda gaps</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;     &amp;,frac_phi(gaps_phi_srce+gaps_phi_targ)                            &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">!                              ! fractions of target phi gaps</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;     &amp;,<a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>                     <span class="comment">! sum of weights</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">!   1  Set up the lambda coordinates to make them easier to handle.</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">!   1.1  Produce in TEMP_SRCE a monotonically increasing set of angles</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">!   equivalent to LAMBDA_SRCE i.e. equal under modulo 360.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;PRE_AREAVER_ICE&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      <span class="keywordflow">IF</span> (cyclic_srce) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        lines_lambda_srce=gaps_lambda_srce</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        lines_lambda_srce=gaps_lambda_srce+1</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      baslam=lambda_srce(1)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      <span class="keywordflow">DO</span> ix1=1,lines_lambda_srce</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">IF</span> (lambda_srce(ix1) &lt;  baslam) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;          temp_srce(ix1)=lambda_srce(ix1)+360.</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;          temp_srce(ix1)=lambda_srce(ix1)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! Labelled DO for the sake of fpp</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">!   1.2  Produce in TEMP_TARG a set of angles equivalent to</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">!   LAMBDA_TARG i.e. equal under modulo 360, but all in the range</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">!   BASLAM to BASLAM+360, where BASLAM=min(TEMP_LAMBDA).</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keywordflow">IF</span> (cyclic_targ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        lines_lambda_targ=gaps_lambda_targ</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        lines_lambda_targ=gaps_lambda_targ+1</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <span class="keywordflow">DO</span> ix2=1,lines_lambda_targ</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        temp_targ(ix2)=mod(lambda_targ(ix2)-baslam,360.)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordflow">IF</span> (temp_targ(ix2) &lt;  0.) temp_targ(ix2)=temp_targ(ix2)+360.</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        temp_targ(ix2)=temp_targ(ix2)+baslam</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! Labelled DO for the sake of fpp</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">!   2  For each target lambda line, find the index of the next source</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">!   lambda line to the left.</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="keywordflow">DO</span> ix2=1,lines_lambda_targ</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">DO</span> ix1=1,lines_lambda_srce</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;          <span class="keywordflow">IF</span> (temp_targ(ix2) &gt;= temp_srce(ix1)) ixl(ix2)=ix1</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keywordflow">        ENDDO</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">!   3  Find which source lambda gaps cover each target gap and the</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">!   fractions they contribute.</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">!     At this point IXL(target_line) gives the index of the next source</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">!     lambda line to the left of the target lambda line, wrapping round</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">!     if the source grid is cyclic. This is also the index of the source</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">!     gap in which the target line falls. Similarly, the index of the</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">!     target line is also that of the target gap of which it is the</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">!     left-hand limit. Therefore also IXL(target_gap+1, wrapping round</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">!     if reqd.), is the index of the source gap which contains the</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">!     right-hand limit of the target gap. For each target gap, we loop</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">!     over all source gaps and find the fraction covered by each. Record</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">!     the fraction and the source index in cumulative lists. If the</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">!     source grid is not cyclic, parts of the target gap lying outside</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">!     the source grid are neglected.</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      ixp=0</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <span class="keywordflow">DO</span> ix2=1,gaps_lambda_targ</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        ix=0</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        ix2n=mod(ix2,lines_lambda_targ)+1</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        btarg=temp_targ(ix2n)-temp_targ(ix2)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">IF</span> (btarg &lt;  0.) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;          btarg=btarg+360.</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;          ix1n=ixl(ix2n)+lines_lambda_srce</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;          ix1n=ixl(ix2n)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">DO</span> ix1w=ixl(ix2),ix1n</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;          ix1=mod(ix1w-1,lines_lambda_srce)+1</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;          <span class="keywordflow">IF</span> (cyclic_srce.OR.ix1 /= lines_lambda_srce) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">IF</span> (ix1w == ixl(ix2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;              blo=temp_targ(ix2)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;              blo=temp_srce(ix1)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keywordflow">IF</span> (ix1w == ix1n) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;              bhi=temp_targ(ix2n)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;              bhi=temp_srce(mod(ix1,lines_lambda_srce)+1)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="keywordflow">IF</span> (bhi &lt;  blo) bhi=bhi+360.</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keywordflow">IF</span> (abs(bhi-blo) &gt;  1e-7*abs(btarg)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;              ix=ix+1</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;              index_lambda(ixp+ix)=ix1</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;              frac_lambda(ixp+ix)=(bhi-blo)/btarg</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordflow">        ENDDO</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        count_lambda(ix2)=ix</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        ixp=ixp+count_lambda(ix2)</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">!   4  For each target phi line, find the index of the next source phi</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">!   line above. Comments as for section 2, without wrap-round. Note</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">!   that this assumes that the atmosphere gridbox ordering is from</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">!   south to north; a north to south atmosphere would require LE</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">!   instead of GE in the following IF test.</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      lines_phi_srce=gaps_phi_srce+1</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;      lines_phi_targ=gaps_phi_targ+1</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordflow">DO</span> iy2=1,lines_phi_targ</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        iyt(iy2)=0</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">DO</span> iy1=1,lines_phi_srce</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;          <span class="keywordflow">IF</span> (phi_targ(iy2) &gt;= phi_srce(iy1)) iyt(iy2)=iy1</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordflow">        ENDDO</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">!   5  Find which source phi gaps cover each target gap and the</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">!   fractions they contribute. Comments as for section 3, without</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">!   wrap-round.</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;      iyp=0</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      <span class="keywordflow">DO</span> iy2=1,gaps_phi_targ</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        iy=0</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">IF</span> (spherical) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">!     Contain angle between +-90. There is no real area outside</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">!     these limits on a sphere.</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;          btarg=sin(max(min(phi_targ(iy2+1),90.),-90.)*pi_over_180)     &amp;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;     &amp;    -sin(max(min(phi_targ(iy2),90.),-90.)*pi_over_180)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;           btarg=phi_targ(iy2+1)-phi_targ(iy2)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">DO</span> iy1=iyt(iy2),iyt(iy2+1)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;          <span class="keywordflow">IF</span> (.NOT.(iy1 == 0.OR.iy1 == lines_phi_srce)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            <span class="keywordflow">IF</span> (iy1 == iyt(iy2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;              blo=phi_targ(iy2)</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;              blo=phi_srce(iy1)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            <span class="keywordflow">IF</span> (iy1 == iyt(iy2+1)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;              bhi=phi_targ(iy2+1)</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;              bhi=phi_srce(iy1+1)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordflow">IF</span> (spherical) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;              blo=max(min(blo,90.),-90.)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;              bhi=max(min(bhi,90.),-90.)</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            <span class="keywordflow">IF</span> (abs(bhi-blo) &gt;  1e-7*abs(btarg)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;              iy=iy+1</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;              index_phi(iyp+iy)=iy1</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">!             Both numerator and denominator in the following are -ve.</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;              <span class="keywordflow">IF</span> (spherical) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                frac_phi(iyp+iy)                                        &amp;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;     &amp;          =(sin(bhi*pi_over_180)-sin(blo*pi_over_180))/btarg</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                frac_phi(iyp+iy)=(bhi-blo)/btarg</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keywordflow">        ENDDO</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        count_phi(iy2)=iy</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        iyp=iyp+count_phi(iy2)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">!   6  For each target box, loop over contributing source boxes and</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">!   calculate the weights for each one, ignoring land boxes.</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">!     After the first pass for each target box, go back and normalise</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">!     the weights to compensate for land source boxes and any outside</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">!     the source grid. Record the source box index and the weight in</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">!     cumulative lists.</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;      ip=0</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;      iyp=0</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;      <span class="keywordflow">DO</span> iy2=1,gaps_phi_targ</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        ixp=0</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="keywordflow">DO</span> ix2=1,gaps_lambda_targ</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;          i=0</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;          <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>=0</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;          <span class="keywordflow">DO</span> iy=iyp+1,iyp+count_phi(iy2)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="keywordflow">DO</span> ix=ixp+1,ixp+count_lambda(ix2)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;              <span class="keywordflow">IF</span> (mask_srce(index_lambda(ix),index_phi(iy))             &amp;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;     &amp;        .EQV.want) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                i=i+1</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                index_srce(ip+i)=index_lambda(ix)                       &amp;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;     &amp;          +(index_phi(iy)-1)*gaps_lambda_srce</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                weight(ip+i)=frac_lambda(ix)*frac_phi(iy)*              &amp;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;     &amp;                    frac_srce(index_lambda(ix),index_phi(iy))</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>=<a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>+weight(ip+i)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="keywordflow">            ENDDO</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keywordflow">          ENDDO</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;          count_targ(ix2,iy2)=i</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;          base_targ(ix2,iy2)=ip</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;          <span class="keywordflow">DO</span> i=1,count_targ(ix2,iy2)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            <span class="keywordflow">IF</span>(<a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a> /=  0.) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;              weight(ip+i)=weight(ip+i)/<a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;              weight(ip+i)=0.</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keywordflow">          ENDDO</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;          ip=ip+count_targ(ix2,iy2)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;          ixp=ixp+count_lambda(ix2)</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="keywordflow">        ENDDO</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        iyp=iyp+count_phi(iy2)</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;      maxl=ip</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;      icode=0</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      cmessage=<span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;PRE_AREAVER_ICE&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="namespacepre__areaver__ice__mod.xhtml#ad643a450dee62affd8ac9c8d7b8327a8">pre_areaver_ice</a></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacepre__areaver__ice__mod.xhtml" title="Code Owner: See Unified Model Code Owners HTML page. ">pre_areaver_ice_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
