<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/makebc/loop_over_dumps.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_388401e7888a3285414e3f2ae76eb1e8.xhtml">makebc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">loop_over_dumps.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="loop__over__dumps_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">       SUBROUTINE </span><a class="code" href="loop__over__dumps_8f90.xhtml#a04747047182a251f1e683ce0828ecde3" title="Subroutine LOOP_OVER_DUMPS : Loop over dumps to get boundary data Subroutine LOOP_OVER_DUMPS : Loop o...">loop_over_dumps</a> (unit_no_bc,um_versn,                 &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;#include &quot;arginfa.h&quot;</div><div class="line"><a name="l00007"></a><span class="lineno"><a class="line" href="loop__over__dumps_8f90.xhtml#a04747047182a251f1e683ce0828ecde3">    7</a></span>&#160;                  tracers_active,                                       &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;                  no_tracers,tr_ukca_active,no_tr_ukca, ndustbin_in,    &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                  ndustbin_out )</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacemakebc__time__mod.xhtml" title=" ">makebc_time_mod</a><span class="keywordtype">, ONLY</span>: &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;        <a class="code" href="structmakebc__time__mod_1_1time.xhtml">time</a></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacemakebc__constants__mod.xhtml" title="A module containing MakeBC specific constants. ">makebc_constants_mod</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;      <span class="keywordtype">USE </span>atm_fields_bounds_mod</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a><span class="keywordtype">, ONLY</span> :  &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;          <a class="code" href="namespaceio.xhtml#ab946b14dae999144008cbe9c82d50a21">file_open</a>,  &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;          <a class="code" href="namespaceio.xhtml#ade07b9db8d4954fd605a7212d5f46e2a">file_close</a>, &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;          buffin,     &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;          <a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a>          use um_parvars</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecontrol__max__sizes.xhtml" title="This file belongs in section: Misc. ">control_max_sizes</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;          max_intf_lbcrow_length,   &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;          <a class="code" href="namespacecontrol__max__sizes.xhtml#ae97a91129945b678aadb05fb880c1ca1">max_intf_lbcrows</a>,         &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;          <a class="code" href="namespacecontrol__max__sizes.xhtml#a9079fbafe9f8e66a79e2f70833ea85d0">max_intf_levels</a></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacedecomp__db.xhtml" title="This file belongs in section: MPP. ">decomp_db</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacedomain__params.xhtml" title="This file belongs in section: MPP. ">domain_params</a></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceum__input__control__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">um_input_control_mod</a><span class="keywordtype">,  ONLY</span>: <a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacedynamics__input__mod.xhtml" title="Input control for dynamics. Input control for dynamics. ">dynamics_input_mod</a><span class="keywordtype">, ONLY</span>: l_endgame</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacenlstcall__mod.xhtml" title="Control variables Control variables. ">nlstcall_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceintfcnsta__mod.xhtml" title="A module containing variables used to generate LBCs. ">intfcnsta_mod</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacechsunits__mod.xhtml" title="copied from include file chsunits.h ">chsunits_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacechsunits__mod.xhtml#af6e26d3a6a1fedf0b44203712a772f8e">nunits</a></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacefilenamelength__mod.xhtml" title="Module for allocation of Filename length. Module for allocation of Filename length. ">filenamelength_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacefilenamelength__mod.xhtml#a1f0ba129cfb2cc488313a144ac04a0e8" title="The module sets the max length of a filename in the UM. ">filenamelength</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacemissing__data__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">missing_data_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">! Description : Loop over the dumps and get the boundary conditions</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">! Code Description :</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#include &quot;typsize.h&quot;</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;ctime.h&quot;</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#include &quot;typinfa.h&quot;</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;cintfa.h&quot;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      <span class="keywordtype">INTEGER</span> :: unit_no_bc  <span class="comment">! Unit No for Boundary dataset</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordtype">INTEGER</span> :: um_versn    <span class="comment">! UM Version Boundary dataset for</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ndustbin_in   <span class="comment">! Number of dust bins in input file</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ndustbin_out <span class="comment">! Number of dust bins in output LBCs</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keywordtype">INTEGER</span>           :: errorstatus    <span class="comment">! Error code</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span> :: cmessage       <span class="comment">! Error Message</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      <span class="keywordtype">INTEGER</span>                :: unit_no      <span class="comment">!  Unit no for input dump</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keywordtype">INTEGER</span>                :: read_only=0  <span class="comment">!  Input dumps - read only</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <span class="keywordtype">INTEGER</span>                :: read_write=1 <span class="comment">!  Output Boundary File - r/w</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">INTEGER</span>,<span class="keywordtype">PARAMETER</span>      :: len_env=7    <span class="comment">!  Length of env. variable</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <span class="keywordtype">INTEGER</span>                :: env_var=0    <span class="comment">!  Filename is in env var</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordtype">CHARACTER(LEN=len_env)</span> :: env          <span class="comment">!  Input filename env. var.</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordtype">INTEGER</span> :: j,jdump                   <span class="comment">!  Loop indices</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="keywordtype">INTEGER</span> :: inthd(46)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordtype">INTEGER</span> :: elapsed_days              <span class="comment">!  No of days elapsed</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <span class="keywordtype">INTEGER</span> :: elapsed_secs              <span class="comment">!  No of secs elapsed</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      <span class="keywordtype">INTEGER</span> :: len_actual                <span class="comment">!  Length of data read in BUFFIN</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <span class="keywordtype">INTEGER</span> :: p_rows</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keywordtype">INTEGER</span> ::  fixhd(len_fixhd)  <span class="comment">!  Fixed header from dump</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordtype">INTEGER</span> :: p_field</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="keywordtype">INTEGER</span> :: u_field</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="keywordtype">INTEGER</span>                     :: test(64)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="keywordtype">INTEGER</span>                     :: len_io</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordtype">INTEGER</span>                     :: open_loop</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keywordtype">REAL</span>                        :: a_io</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span>,<span class="keywordtype">PARAMETER</span> :: routinename=<span class="stringliteral">&#39;loop_over_dumps&#39;</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <span class="keywordtype">CHARACTER(LEN=len_env)</span>      :: bc_filename</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="comment">! Contents of environment variable.</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      <span class="keywordtype">CHARACTER(LEN=filenamelength)</span> :: env_contents</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! Max_progs gives the size required for indexing</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">! arrays in uniform manner</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      <span class="keywordtype">INTEGER</span> :: max_progs</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">! Basis_time is the starting time.</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      <span class="keywordtype">TYPE</span>(<a class="code" href="structmakebc__time__mod_1_1time.xhtml">time</a>) :: basis_time</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">! The current time being processed.</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <span class="keywordtype">TYPE</span>(<a class="code" href="structmakebc__time__mod_1_1time.xhtml">time</a>) :: current_time</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">! Flag to indicate all required data is present</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <span class="keywordtype">LOGICAL</span>              :: alldata</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! Free and UKCA tracer arguments</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keywordtype">INTEGER</span> :: no_tracers, no_tr_ukca</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <span class="keywordtype">INTEGER</span> :: tracers_active(<a class="code" href="namespacemakebc__constants__mod.xhtml#a578e815a050290b25e2ad80fc7f356b0">max_tracers</a>)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      <span class="keywordtype">INTEGER</span> :: tr_ukca_active(<a class="code" href="namespacemakebc__constants__mod.xhtml#ad902b5568baac79ec77cc261c5682bae">max_tr_ukca</a>)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">!-  End of Header</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">! Set max_progs! Now use parameters from makebc_constants_mod instead of a magic number</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      max_progs=<a class="code" href="namespacemakebc__constants__mod.xhtml#ac600c5722f6c31a672d2ac51bbc7cd36" title="Parameters for the number of LBC - required e.g. u,v and optional e.g. murk If the number of required...">num_req_lbcs</a>+<a class="code" href="namespacemakebc__constants__mod.xhtml#a455d42e8d4b0be9a7876e995b26551f4">num_optional_lbcs_max</a>+no_tracers+no_tr_ukca</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">! Initialise all items in basis_time to 0</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      basis_time%year   = 0</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      basis_time%month  = 0</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      basis_time%day    = 0</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      basis_time%hour   = 0</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      basis_time%min    = 0</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      basis_time%sec    = 0</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      basis_time%day_no = 0</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">! Initialise all items in current_time to imdi</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">! This will identify if current_time is never set.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      current_time%year   = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a>      current_time%month  = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a>      current_time%day    = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a>      current_time%hour   = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a>      current_time%min    = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a>      current_time%sec    = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a>      current_time%day_no = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">!     Open Boundary Dataset</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!     Loop over number of LAMs, opening boundary file for each</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      <span class="keywordflow">DO</span> open_loop=1,n_intf_a</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keyword">WRITE</span>(bc_filename,<span class="stringliteral">&#39;(A,I2.2)&#39;</span>)<span class="stringliteral">&#39;BCFIL&#39;</span>,open_loop</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">IF</span>(<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39; bc_filename= &#39;</span>//bc_filename,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#ab946b14dae999144008cbe9c82d50a21">file_open</a>                                                  &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;           (unit_no_bc+(open_loop-1),bc_filename,len_env,read_write,    &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            env_var,errorstatus)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">IF</span> (errorstatus /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;          <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A,I6)&#39;</span>)                                     &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="stringliteral">&#39;Error in opening Boundary Dataset on unit no &#39;</span>,            &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            unit_no_bc</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">!     Loop over model dumps</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      jdump = 0</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordflow">DO</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">!       Increment file number to attempt to open.</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        jdump=jdump + 1</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">!       Unit number for this dump</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        unit_no = 30</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">!       Open the dump</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keyword">WRITE</span> (env,<span class="stringliteral">&#39;(A,I3.3)&#39;</span>) <span class="stringliteral">&#39;FILE&#39;</span>, unit_no + jdump</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keyword">CALL </span>fort_get_env(env,len_env,env_contents,<a class="code" href="namespacefilenamelength__mod.xhtml#a1f0ba129cfb2cc488313a144ac04a0e8" title="The module sets the max length of a filename in the UM. ">filenamelength</a>, &amp;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                          errorstatus)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">IF</span> (errorstatus /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;          <span class="comment">! Reached end of files to input exit out and check we have all times</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;          <span class="comment">! outside of loop.</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;          <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I3)&#39;</span>) <span class="stringliteral">&#39;Processing dump no &#39;</span>,jdump</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#ab946b14dae999144008cbe9c82d50a21">file_open</a> (unit_no,env,len_env,read_only,env_var,errorstatus)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">IF</span> (errorstatus /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;          <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A,I6)&#39;</span>) <span class="stringliteral">&#39;Error in opening dump on unit no &#39;</span>,unit_no</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">!       Read in fixed header from this dump</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a> (unit_no,0,errorstatus)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">IF</span> (errorstatus &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;          cmessage = <span class="stringliteral">&#39;Error in SETPOS for Fixed Header.&#39;</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">! DEPENDS ON: read_flh</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keyword">CALL </span><a class="code" href="read__flh_8f90.xhtml#a8363a4617a406aafc132034f55a85183" title="SUBROUTINE READ_FLH -!&gt; ">read_flh</a> (unit_no,fixhd,len_fixhd,errorstatus,cmessage)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">IF</span> (errorstatus &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;          <span class="comment">! Cmessage should be set from read_flh.</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I6)&#39;</span>) <span class="stringliteral">&#39;Error in READ_FLH for dump &#39;</span>,jdump</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">IF</span> (fixhd(5) == 1)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;this is a Dump&#39;</span>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keywordflow">ELSEIF</span> (fixhd(5) == 3)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;this is a FieldsFile&#39;</span>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;          cmessage= <span class="stringliteral">&#39;Invalid input file type&#39;</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;          errorstatus=1</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">!       For first dump only</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">!       Set model basis time to be date/time in first dump and use</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">!       to initialise variables required for time processing</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordflow">IF</span> (jdump == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;          <span class="keywordflow">IF</span>(fixhd(150) &gt; 0)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a>(unit_no,fixhd(150)-1,errorstatus)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            <span class="keywordflow">IF</span> (errorstatus &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;              cmessage = <span class="stringliteral">&#39;Error in SETPOS for lookups.&#39;</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;              <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="keyword">CALL </span>buffin(unit_no, test, fixhd( 151 ),                      &amp;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                                len_io, a_io )</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="keywordflow">IF</span> (a_io /= -1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;              errorstatus=nint(a_io)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;              <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A,I9,A)&#39;</span>) <span class="stringliteral">&#39;Problem reading &#39;</span>,             &amp;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                len_actual, <span class="stringliteral">&#39; from first lookup.&#39;</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;              <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(1)=test(1)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(2)=test(2)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(3)=test(3)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(4)=test(4)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(5)=0</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(6)=0</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <span class="comment">! Now set the reference time variables which are used later to</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            <span class="comment">! calculate times for headers in in_intf</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            basis_time_days = 0</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            basis_time_secs = 0</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            <span class="keyword">CALL </span>time2sec(<a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(1), &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                          <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(2), &amp;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                          <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(3), &amp;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                          <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(4), &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                          <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(5), &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                          <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(6), &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                          basis_time_days, basis_time_secs, &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                          elapsed_days, elapsed_secs, <a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a>)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            basis_time_days = elapsed_days</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            basis_time_secs = elapsed_secs</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            <span class="comment">! Exit since we cannot go any further.             errorstatus=2</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A)&#39;</span>) <span class="stringliteral">&#39; No Lookups to get basis time from&#39;</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">! Set the basis_time from the model basis time</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;          basis_time%year = <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(1)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;          basis_time%month= <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(2)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;          basis_time%day  = <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(3)</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;          basis_time%hour = <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(4)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;          basis_time%min  = <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(5)</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;          basis_time%sec  = <a class="code" href="namespacenlstcall__mod.xhtml#a2e2605f95f351b2061d45612c4ddc2b3">model_basis_time</a>(6)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">!       Remove negative dimensions, if any.</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keywordflow">DO</span> j=100,256</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;          fixhd(j) = max(fixhd(j),0)</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">! Get header dimensions from Fixed Header (ensure sizes are &gt;= 0 for allocating)</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        a_len_inthd    = max(fixhd(101),0)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        a_len_realhd   = max(fixhd(106),0)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        a_len1_levdepc = max(fixhd(111),0)</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        a_len2_levdepc = max(fixhd(112),0)</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        a_len1_rowdepc = max(fixhd(116),0)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        a_len2_rowdepc = max(fixhd(117),0)</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        a_len1_coldepc = max(fixhd(121),0)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        a_len2_coldepc = max(fixhd(122),0)</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        a_len1_flddepc = max(fixhd(126),0)</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        a_len2_flddepc = max(fixhd(127),0)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        a_len_extcnst  = max(fixhd(131),0)</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        a_len_cfi1     = max(fixhd(141),0)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        a_len_cfi2     = max(fixhd(143),0)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        a_len_cfi3     = max(fixhd(145),0)</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        a_len2_lookup  = max(fixhd(152),0)</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        a_len_data     = max(fixhd(161),0)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">!       Get length of data in this dump</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        len_tot  = a_len_data</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">!       Read in Integer Constants for this dump</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a>(unit_no,fixhd(100)-1,errorstatus)</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keywordflow">IF</span> (errorstatus &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;          cmessage = <span class="stringliteral">&#39;Error in SETPOS for Integer Constants array.&#39;</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="keyword">CALL </span>buffin (unit_no,inthd(1:),a_len_inthd,len_actual,a_io)</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="keywordflow">IF</span> (a_io /= -1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;          errorstatus=nint(a_io)</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;          <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A,I9,A)&#39;</span>) <span class="stringliteral">&#39;Problem reading length &#39;</span>,          &amp;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            len_actual, <span class="stringliteral">&#39; from integer constants array.&#39;</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;          <span class="keyword">call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">!       Get model grid for this dump</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        row_length = test(19)   <span class="comment">! from lookup</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        rows       = test(18)   <span class="comment">! from lookup</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="keywordflow">IF</span> (fixhd(9) == 3) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;          <span class="comment">! Arakawa C</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;          n_rows = rows-1</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (fixhd(9) == 6) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;          <span class="comment">! Alternative Arakawa C (ENDGAME)</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;          n_rows = rows+1</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        p_field    = row_length * rows</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        u_field    = row_length * n_rows</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">!     Get model levels for this dump</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        model_levels = inthd(8)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        wet_levels   = max(inthd(9),1)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        tr_levels    = max(inthd(12),1)</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        bl_levels    = max(inthd(13),1)</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        ozone_levels = max(inthd(26),1)</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">!     Set whether this dump is a endgame dump or not.</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">!     This is really checking the staggering but will have to do for now.</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        l_endgame    = fixhd(9) == 6</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="preprocessor">#if defined (FRAMES)</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="preprocessor"></span><span class="comment">! If we are the first dump we need to make sure levels specified for FRAMES</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">! match the output LBC since we do no vertical interpolation in frames.</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <span class="keywordflow">IF</span> (jdump == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;          <span class="keywordflow">DO</span> j = 1, n_intf_a</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespaceintfcnsta__mod.xhtml#a5fe72d54239ae5b412de0e3b691b7fd6">intf_p_levels</a>(j) /= model_levels) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) &amp;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                  <span class="stringliteral">&quot;Setting model levels for LBC &quot;</span>, j, <span class="stringliteral">&quot; to &quot;</span>,model_levels</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;              <a class="code" href="namespaceintfcnsta__mod.xhtml#a5fe72d54239ae5b412de0e3b691b7fd6">intf_p_levels</a>(j) = model_levels</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespaceintfcnsta__mod.xhtml#ad2db5678ad32e405eba8078568152222">intf_q_levels</a>(j) /= wet_levels) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) &amp;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                  <span class="stringliteral">&quot;Setting wet levels for LBC &quot;</span>, j, <span class="stringliteral">&quot; to &quot;</span>,wet_levels</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;              <a class="code" href="namespaceintfcnsta__mod.xhtml#ad2db5678ad32e405eba8078568152222">intf_q_levels</a>(j) = wet_levels</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="keywordflow">IF</span>(<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39; &#39;</span>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39; Model Grid/Levels in this dump. &#39;</span>, &amp;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;              src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,I9)&#39;</span>) <span class="stringliteral">&#39; row_length   = &#39;</span>, row_length</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,I9)&#39;</span>) <span class="stringliteral">&#39; rows         = &#39;</span>, rows</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,I9)&#39;</span>) <span class="stringliteral">&#39; n_rows       = &#39;</span>, n_rows</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,I9)&#39;</span>) <span class="stringliteral">&#39; model_levels = &#39;</span>, model_levels</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,I9)&#39;</span>) <span class="stringliteral">&#39; wet_levels   = &#39;</span>, wet_levels</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,I9)&#39;</span>) <span class="stringliteral">&#39; tr_levels    = &#39;</span>, tr_levels</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,I9)&#39;</span>) <span class="stringliteral">&#39; bl_levels    = &#39;</span>, bl_levels</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,I9)&#39;</span>) <span class="stringliteral">&#39; ozone_levels = &#39;</span>, ozone_levels</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,I9)&#39;</span>) <span class="stringliteral">&#39; p_field      = &#39;</span>, p_field</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,I9)&#39;</span>) <span class="stringliteral">&#39; u_field      = &#39;</span>, u_field</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment">! Get decompostion information</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">! ! LEVELS not used in SX</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfacedecomp__db_1_1decompose.xhtml">decompose</a>( row_length, rows,                           &amp;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                           0, 0, model_levels)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment">! Formerly set as a side-effect of readflds, now specified here explicitly</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        <span class="keyword">CALL </span>change_decomposition(<a class="code" href="namespacedecomp__params.xhtml#a0fa4a06532a8b87628efa7b5727bd9da" title="decomps for small execs ">decomp_smexe</a>, errorstatus)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment">! Set dimensions for ENDGame and NewDynamics</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        <span class="keyword">CALL </span>atm_fields_bounds_init(offx,offy,halo_i,halo_j,              &amp;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                    row_length,rows,n_rows,model_levels,wet_levels,       &amp;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                    tr_levels,bl_levels,ozone_levels)</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">!     Proceed to read model data from dump and get boundary conditions</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment">! DEPENDS ON: get_bc</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;      <span class="keyword">call </span><a class="code" href="get__bc_8f90.xhtml#a61a0613c66bd05c80a01363dacfb2046" title=" ">get_bc</a> (jdump,unit_no,unit_no_bc,um_versn,                   &amp;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;     &amp;  a_len2_lookup,                                                  &amp;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;     &amp;  <a class="code" href="arginfa_8h.xhtml#a43e1f67e0cded165ece60f1597ed065d">fixhd_intfa</a>,<a class="code" href="arginfa_8h.xhtml#a15e978b4a55795b4d1c2391be21b896b">inthd_intfa</a>,<a class="code" href="arginfa_8h.xhtml#abff0e62f8e9af675cb52f92ad75f015d">lookup_intfa</a>,                           &amp;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;     &amp;  <a class="code" href="arginfa_8h.xhtml#a32a29235c3e49ccdfb5c6e2368639775">realhd_intfa</a>,<a class="code" href="arginfa_8h.xhtml#aecdada66fbc6fb97633b51acaa65f04b">levdepc_intfa</a>,                                     &amp;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;     &amp;  <a class="code" href="arginfa_8h.xhtml#ae6d0967ab544ab6db3643024ddffaedb">rowdepc_intfa</a>,<a class="code" href="arginfa_8h.xhtml#a9bda8e06d683a12885a2c3ea33c38564">coldepc_intfa</a>,                                    &amp;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment">! Pass basis_time</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;          basis_time,                                                   &amp;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;          current_time,                                                 &amp;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment">! Pass indicator alldata</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;          alldata,                                                        &amp;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;          <a class="code" href="arginfa_8h.xhtml#afba8567296a0d682667a605abb1e1591">lbc_eta_theta</a>,<a class="code" href="arginfa_8h.xhtml#a393076a934b5b5f52fe450a67feeeb20">lbc_eta_rho</a>,                                      &amp;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;          max_progs,                                                      &amp;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">! Pass details of tracers in</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;          tracers_active, no_tracers, tr_ukca_active, no_tr_ukca,         &amp;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;          ndustbin_in, ndustbin_out )</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment">!       Close the dump</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#ade07b9db8d4954fd605a7212d5f46e2a">file_close</a> (unit_no,env,len_env,env_var,0,errorstatus)</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <span class="keywordflow">IF</span> (errorstatus /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;          <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A,I6)&#39;</span>) &amp;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;              <span class="stringliteral">&#39;Error in closing dump on unit no &#39;</span>, unit_no</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="keywordflow">IF</span>(alldata) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">!         If we have all the data then we can quit.</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;          <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="keywordflow">      END DO</span>   <span class="comment">!    End of loop over dumps</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;      <span class="keywordflow">IF</span>(.NOT. alldata)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&quot;Missing time for:&quot;</span>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(7I10)&#39;</span>) current_time</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;loop_over_dumps&#39;</span>)</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;          cmessage=<span class="stringliteral">&#39;ERROR data missing for one or more LBC time&#39;</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;          errorstatus=1</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="loop__over__dumps_8f90.xhtml#a04747047182a251f1e683ce0828ecde3" title="Subroutine LOOP_OVER_DUMPS : Loop over dumps to get boundary data Subroutine LOOP_OVER_DUMPS : Loop o...">loop_over_dumps</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
