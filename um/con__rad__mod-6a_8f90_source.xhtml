<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/con_rad_mod-6a.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">con_rad_mod-6a.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="con__rad__mod-6a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespacecon__rad__6a__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacecon__rad__6a__mod.xhtml" title="Convective cloud microphysics routine. ">con_rad_6a_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="namespacecon__rad__6a__mod.xhtml#ae6461e6aebd8115c307fa577fdf28083" title="Calculates convective cloud top, base and amount. ">con_rad_6a</a> (k, npnts, start_lev,                        &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                             ccwk, ccwkp1, tmp_ccwkp1, flxkp1, delpkp1,  &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                             l_q_interact, bterm,                        &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                             tcw, cclwp, lcca, lcbase, lctop,            &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                             iccb, icct, cca)</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="namespacecon__rad__6a__mod.xhtml#ae6461e6aebd8115c307fa577fdf28083">   30</a></span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;           <span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span> : g           implicit none</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;-<span class="comment">! Arguments with INTENT(IN)</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;-<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: k               <span class="comment">! Present model layer number</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: npnts           <span class="comment">! Vector length</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: start_lev(npnts)<span class="comment">! Level at which convection initiated</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: ccwk(npnts)      <span class="comment">! Total condensate in level k (kg/kg)</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: ccwkp1(npnts)    <span class="comment">! Total condensate in level k+1 (kg/kg)</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: tmp_ccwkp1(npnts)<span class="comment">! Total condensate in level k+1 (kg/kg)</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                    <span class="comment">! before precipitation</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: flxkp1(npnts)    <span class="comment">! Parcel mass flux in layer k+1 (Pa/s)</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: delpkp1(npnts)   <span class="comment">! pressure difference across layer k+1 (Pa)</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: l_q_interact  <span class="comment">! True if PC2 is switched on</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: bterm(npnts)  <span class="comment">! Mask for parcels which terminate                                    ! in layer k+1</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                    <span class="comment">! IN summed to layer k</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                    <span class="comment">! OUT summed to layer k+1</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: cclwp(npnts)  <span class="comment">! Condensed water path (kg/m**2)</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                    <span class="comment">! IN summed to layer k</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                    <span class="comment">! OUT summed to layer k+1</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: lcca(npnts)   <span class="comment">! Lowest conv. cloud amount (%)</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(INOUT)</span> :: lcbase(npnts)<span class="comment">! Lowest conv. cloud base level</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(INOUT)</span> :: lctop(npnts) <span class="comment">! Lowest conv. cloud top level</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;-<span class="comment">! Arguments with INTENT(OUT)</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;-<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(OUT)</span> :: iccb(npnts)  <span class="comment">! convective cloud base_level</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(OUT)</span> :: icct(npnts)  <span class="comment">! convective cloud top level</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: cca(npnts)      <span class="comment">! convective cloud amount (%)</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;-<span class="comment">! Local variables</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;-<span class="keywordtype">INTEGER</span> :: i          <span class="comment">! Loop counter</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <span class="keywordflow">DO</span> i=1, npnts</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">IF</span> ( ccwk(i)  &lt;=  0.0 .AND. tmp_ccwkp1(i)  &gt;   0.0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;          iccb(i)   = k+1</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;          cclwp(i)  = 0.0</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;          <span class="keywordflow">IF</span> ( lcbase(i)  ==  0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            lcbase(i) = k+1</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keywordflow">          END IF</span>  <span class="comment">! If_lcbase_1</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( l_q_interact .AND. k  ==  start_lev(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;          <span class="comment">! Do not know why this is done,</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;          <span class="comment">! but it lowers the ccb so that it is no longer consistent</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;          <span class="comment">! with ccw. Needs looking into.</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;          <span class="comment">! Non-zero initial parcel condensate (initialized to environment)</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;          iccb(i)  = k</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;          cclwp(i) = 0.0</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;          tcw(i)   = 0.0</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;          <span class="keywordflow">IF</span> ( lcbase(i)  ==  0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            lcbase(i) = k</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keywordflow">          END IF</span>  <span class="comment">! If_lcbase_2</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">! !  calculate cloud top and lowest cloud top</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">!         IF (bterm(i)) THEN</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;          icct(i)  = k+1</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">IF</span> (bterm(i) .AND.  lctop(i) == 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;          lctop(i) = k+1</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">IF</span> ( flxkp1(i)  &gt;   0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">! Sum total condensed water per second - assumes that the initial</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">! convective layer is unsaturated.</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">! Uses the CCW before precipitation</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;          tcw(i)   = tcw(i)   + flxkp1(i) * tmp_ccwkp1(i) / g</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">! Sum conv condensed water path - assumes that the initial</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">! convective layer is unsaturated</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">! Uses the CCW after precipitation</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;          cclwp(i) = cclwp(i) + ccwkp1(i) * delpkp1(i) / g</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">! calculate convective cloud amount if convection terminates in</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">! layer k and total condensed water path over a time step</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">! UM documentation paper p27</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">! section (9), equation (37)</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">IF</span>( bterm(i) .AND. tcw(i) &gt;  0.0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;          <span class="keywordflow">IF</span> ( tcw(i)  &lt;   2.002e-6 ) tcw(i) = 2.002e-6</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;          cca(i) = 0.7873 + 0.06 * log(tcw(i))</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;          <span class="keywordflow">IF</span> (cca(i)  &gt;   1.0) cca(i) = 1.0</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;          <span class="keywordflow">IF</span> (lcca(i) &lt;= 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            lcca(i) = 0.7873 + 0.06 * log(tcw(i))</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            <span class="keywordflow">IF</span> (lcca(i)  &gt;   1.0) lcca(i) = 1.0</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;          tcw(i) = 0.0</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! I loop over NPNTS</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CON_RAD_6A&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="namespacecon__rad__6a__mod.xhtml#ae6461e6aebd8115c307fa577fdf28083" title="Calculates convective cloud top, base and amount. ">con_rad_6a</a></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacecon__rad__6a__mod.xhtml" title="Convective cloud microphysics routine. ">con_rad_6a_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
