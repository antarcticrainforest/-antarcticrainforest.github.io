<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/qxreconf/rcf_ancil_atmos_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_448e69cd1e368218ef2123538d498dc2.xhtml">qxreconf</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">rcf_ancil_atmos_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="rcf__ancil__atmos__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno"><a class="line" href="namespacercf__ancil__atmos__mod.xhtml">    4</a></span>&#160;<span class="keyword">Module</span> <a class="code" href="namespacercf__ancil__atmos__mod.xhtml" title="Ancillary processing for the Atmosphere model Ancillary processing for the Atmosphere model...">rcf_ancil_atmos_mod</a></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">Contains</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">Subroutine </span><a class="code" href="namespacercf__ancil__atmos__mod.xhtml#a4af82ab1081f4074c046dcc4cb69aa4c" title="Subroutine Rcf_Ancil_Atmos - Ancillary processing for Atmosphere. ">rcf_ancil_atmos</a> ( Hdr_In, Hdr_Out,                           &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                             Fields_In, Field_Count_In,                 &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                             Fields_Out, Field_Count_Out, data_source )</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="namespacercf__ancil__atmos__mod.xhtml#a4af82ab1081f4074c046dcc4cb69aa4c">   30</a></span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespaceancil__mod.xhtml">ancil_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>,          <a class="code" href="namespaceancil__mod.xhtml#ab61fdf25cfbb61997e80b3a3946a8f5c">anc_file</a>,            &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="namespaceancil__mod.xhtml#af56afcc3c3a5f26a9cee660b3691fde3">ancrecs</a>,             <a class="code" href="namespaceancil__mod.xhtml#a4d96758ba1c31ece66285a78bb5d068c">max_ancrecs</a>,         &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <a class="code" href="namespaceancil__mod.xhtml#ad1567945e6cf60c7a9403044cf65d626">ancfiles</a>,            <a class="code" href="namespaceancil__mod.xhtml#a9f89dc33f8b7ba36b3612f7cbf8673d6">max_ancfiles</a>,        &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="namespaceancil__mod.xhtml#afc464d9e2678b220744aa3a82e13cbf3" title="Namelist for user ANCILmaster file. ">n_uancil</a>,            <a class="code" href="namespaceancil__mod.xhtml#a055779766c1b3ea2b6e957f28d307fe5">uancfils</a>,            &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="namespaceancil__mod.xhtml#a36cc972ec0a1b209789db24b1d1f23ce" title="For ROSE - disabling this code as the name list isn&#39;t suitable for ROSE in its present form...">nlookup</a>,             <a class="code" href="namespaceancil__mod.xhtml#a14de040143a3014d7b720c5a0332b975">lookup_step</a>,         &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="namespaceancil__mod.xhtml#a5849dfeb51e3a29aec208244ec3e3424">stashancil</a>,          <a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>,              &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="namespaceancil__mod.xhtml#a6d00884a0f93fb1265800b3d95a69532">ancil_add</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__ppx__info__mod.xhtml" title="Defines the STASHmaster record Defines the STASHmaster record. ">rcf_ppx_info_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    ppxrecs</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacecalc__nlookups__mod.xhtml" title="Calculate number of lookup entries in ancillary files Calculate number of lookup entries in ancillary...">calc_nlookups_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="namespacecalc__nlookups__mod.xhtml#a53414a10be2b4f510f67f9aefb057d3c" title="Subroutine Calc_nlookups - Get no of lookups in ancillary files. ">calc_nlookups</a></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__calc__len__ancil__mod.xhtml" title="Calculate work space required for ancillary data. Calculate work space required for ancillary data...">rcf_calc_len_ancil_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="namespacercf__calc__len__ancil__mod.xhtml#aa0025851f8b662c751a03a8bec7075a0" title="Subroutine Rcf_Calc_len_ancil - Calculate work space for anc. data. ">rcf_calc_len_ancil</a></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacegetanc__fields__mod.xhtml" title="Get Ancillary Field records from ANCILfields Get Ancillary Field records from ANCILfields. ">getanc_fields_mod</a><span class="keywordtype">, Only</span> :  &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="namespacegetanc__fields__mod.xhtml#a698a8e0cb789e6924cebc8586c77194f" title="Subroutine GetAnc_Fields - Get Ancillary field records. ">getanc_fields</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacegetanc__files__mod.xhtml" title="Get Ancillary file records from ANCILfiles Get Ancillary file records from ANCILfiles. ">getanc_files_mod</a><span class="keywordtype">, Only</span> :  &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="namespacegetanc__files__mod.xhtml#af44125bfef3728f614f9a55dd81554e4" title="Subroutine GetAnc_Files - Get Ancillary file records. ">getanc_files</a></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacehdancilm__mod.xhtml" title="Read in and count number of ANCILmaster records. Read in and count number of ANCILmaster records...">hdancilm_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="namespacehdancilm__mod.xhtml#a3c1e844ee74b1cf99179ee746ca8cdd8" title="Subroutine HdAncilM - Count number of ANCILmaster reords. ">hdancilm</a></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__interpolate__mod.xhtml" title="top level wrapper for interpolation top level wrapper for interpolation ">rcf_interpolate_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="namespacercf__interpolate__mod.xhtml#a69c11fea979d74b2dc45c3929395fdb8" title="Subroutine Rcf_Interpolate - top level interpolation wrapper. ">rcf_interpolate</a></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__items__mod.xhtml" title="Arrays for the items namelists Arrays for the items namelists. ">rcf_items_mod</a><span class="keywordtype">, Only</span> :       &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="namespacercf__items__mod.xhtml#ae70349834bc756baf424ce68409dec30">num_items</a>,              &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="namespacercf__items__mod.xhtml#afb1063b906adb1835bbe2fe543911391">sctn_array</a>,             &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="namespacercf__items__mod.xhtml#aacb1bf68b51f2b0b4e6104e690cf680c">item_array</a>,             &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="namespacercf__items__mod.xhtml#a7a26aaecf49d0549abc0c9e03d962cd3" title="Arrays for the items namelists. ">source_array</a></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,              &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>,            &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>,        &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a><span class="keywordtype">, Only</span> :    &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="namespacesubmodel__mod.xhtml#a632aec067eb5d42141b256110bc535e6">n_internal_model</a>,       &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="namespacesubmodel__mod.xhtml#ac58c30a98e5710630a465e3c2c4e79a6">internal_model_list</a>,    &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__grid__type__mod.xhtml" title="Module to define a grid data type. Module to define a grid data type. ">rcf_grid_type_mod</a><span class="keywordtype">, Only</span> :   &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a>,             &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__headaddress__mod.xhtml" title="Magic numbers for header components Magic numbers for header components. ">rcf_headaddress_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="namespacercf__headaddress__mod.xhtml#abf7e73dc6846ebdec7e657c64f0dbb1a">fh_vtyear</a>,              &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="namespacercf__headaddress__mod.xhtml#a9376778fea50064bc044464cb3d34af4">fh_vtmonth</a>,             &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="namespacercf__headaddress__mod.xhtml#aaf40228e7bbdbd1d159e7374649ae23e">fh_vtday</a>,               &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="namespacercf__headaddress__mod.xhtml#a3620052a34ce34e43a6f35570bf464df">fh_vthour</a>,              &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="namespacercf__headaddress__mod.xhtml#ab50e9e06b71d907f796d7312dfae2cb0">fh_vtminute</a>,            &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="namespacercf__headaddress__mod.xhtml#a56ed9e141a0e017e0ffd8e7b6be68334">fh_vtsecond</a>,            &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="namespacercf__headaddress__mod.xhtml#a6f62b781782b7df5a99593da0de9a5ed">rc_latspacing</a>,          &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="namespacercf__headaddress__mod.xhtml#a01b0e58626227484674fb47f8348a373">rc_firstlat</a></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__umhead__mod.xhtml" title="Data module defining um_header_type Data module defining um_header_type. ">rcf_umhead_mod</a><span class="keywordtype">, Only</span> :  &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="structrcf__umhead__mod_1_1um__header__type.xhtml" title="Global Type Definitions: ">um_header_type</a>,         &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="namespacercf__umhead__mod.xhtml#a9db5738968facbc1f5a05e2e8ae63883" title="Contains parameters used in UM dumps, a structure to hold a UM header. ">lenfixhd</a></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__lsm__mod.xhtml" title="Land-Sea mask data Land-Sea mask data. ">rcf_lsm_mod</a><span class="keywordtype">, Only</span> :     &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="namespacercf__lsm__mod.xhtml#acc3273771adf31bb6284761c52ae98b5">glob_lsm_out</a>,           &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="namespacercf__lsm__mod.xhtml#ab522187082e89e62fee2ff81186100ab">local_lsm_out</a>,          &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="namespacercf__lsm__mod.xhtml#a07f474777ef9b10aaae6354f7a2c8da2">glob_land_out</a>,          &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="namespacercf__lsm__mod.xhtml#a6f9d7157f9b54ab3b35e442f3676d399">local_land_out</a></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacedecomp__params.xhtml" title="Magic numbers defining decompositions Magic numbers defining decompositions. ">decomp_params</a><span class="keywordtype">, ONLY</span> :    &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="namespacedecomp__params.xhtml#a3104711097ad4d38e5ccd648d10bcc6b" title="decomps for rcf ">decomp_rcf_input</a>,       &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__alloc__field__mod.xhtml" title="Module to allocate and deallocate space for field data Module to allocate and deallocate space for fi...">rcf_alloc_field_mod</a><span class="keywordtype">, Only</span> :  &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a>,             &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__read__field__mod.xhtml" title="Wrapper for the READFLDS routine. Wrapper for the READFLDS routine. ">rcf_read_field_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="namespacercf__read__field__mod.xhtml#a31084c176946b7db5991b2cb66973198" title="Subroutine Rcf_Read_Field - read in a field. ">rcf_read_field</a></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__write__field__mod.xhtml" title="Wrapper for WRITFLDS Wrapper for WRITFLDS. ">rcf_write_field_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="namespacercf__write__field__mod.xhtml#a45aefec8543b2ff3e794f75dcf866138" title="Subroutine Rcf_Write_Field. ">rcf_write_field</a></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__locate__mod.xhtml" title="Find a field in a field list by stash item number Find a field in a field list by stash item number...">rcf_locate_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacelocate__anc__mod.xhtml" title="Locate position of record for Ancillary field Locate position of record for Ancillary field...">locate_anc_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="namespacelocate__anc__mod.xhtml#a10bfc45e527642b7b85f8aa367941727" title="Subroutine Locate_Anc_Field - locates record for ancillary field Subroutine Locate_Anc_File - locates...">locate_anc_field</a></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__field__type__mod.xhtml" title="Defines the field_type data-type Defines the field_type data-type. ">rcf_field_type_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordtype">USE </span>um_parvars<span class="keywordtype">, Only</span> :      &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>,                   &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    current_decomp_type,    &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    g_datastart,            &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    change_decomposition</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__set__interp__flags__mod.xhtml" title="magic numbers and code for setting up field interpolation flags magic numbers and code for setting up...">rcf_set_interp_flags_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aa5ed5cb60468d360e1c017004d4361ab">interp_h_only</a>,                   &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#a786d446b7a29f5ff9ee529ee93c5a797">interp_copy</a></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__interp__weights__mod.xhtml" title="Defines interpolation weight variables Defines interpolation weight variables. ">rcf_interp_weights_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="namespacercf__interp__weights__mod.xhtml#acbe250e83e0b0c75c419a45d96b2318b">h_int_active</a></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__stashcodes__mod.xhtml" title="List of stashcode magic numbers List of stashcode magic numbers. ">rcf_stashcodes_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#a2768f011e48e40edc66ebe27c5605203">stashcode_tstar</a>,           &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#aa210370188bfac4366be607d4adc61ff">stashcode_land_frac</a>,       &amp;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#acd7878927ff724929261196cd3f4f6dd">stashcode_tstar_land</a>,      &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#a98f6d80ebb8365cc8957dc4e717d4772">stashcode_tstar_sea</a>,       &amp;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#aa97f03956abda517115d34b03ca4cc01">stashcode_tstar_sice</a>,      &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#ab0255e1f0a1e4e69dcc04b1a4b3c5faf">stashcode_icefrac</a>,         &amp;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#a2d6c2da9f8fb72cbb8babf3b3bb4fd60">stashcode_tstar_anom</a>,      &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__exppx__mod.xhtml" title="Extract a STASHmaster record Extract a STASHmaster record. ">rcf_exppx_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="namespacercf__exppx__mod.xhtml#a88789ab4ab32d603dfdd4b9b0c492604" title="Subroutine Rcf_Exppx - extract a STASHmaster record. ">rcf_exppx</a></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordtype">USE </span>switches<span class="keywordtype">, ONLY</span>: l_ctile</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacenlsizes__namelist__mod.xhtml" title="Sizes for many of the UM&#39;s main, dynamic data arrays. ">nlsizes_namelist_mod</a><span class="keywordtype">, ONLY</span>: &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="namespacenlsizes__namelist__mod.xhtml#a9a909ccea7fe7c7d19ccd48d55503e14">tpps_ozone_levels</a></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceancilcta__namelist__mod.xhtml" title="Ancil-related logicals read in by namelist. ">ancilcta_namelist_mod</a><span class="keywordtype">, ONLY</span>:&amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <a class="code" href="namespaceancilcta__namelist__mod.xhtml#ab6656d17be481dca3c50c2c846c5d358" title="Module containing the ANCILCTA namelist and associated declarations. ">l_sstanom</a></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacemask__compression.xhtml" title="This file belongs in section: Packing Tools. ">mask_compression</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemask__compression.xhtml#acb339fbf0c2985509169d255246c5fd2" title="Subroutine Compress_To_Mask -!&gt; Purpose: Selects land points values from input horizontal field!&gt; and...">compress_to_mask</a></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecppxref__mod.xhtml" title="Code Owner: See Unified Model Code Owners HTML page. ">cppxref_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecppxref__mod.xhtml#ac9d6e3c5870b390dc64ded5f768c3295">ppx_atm_compressed</a></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacercf__data__source__mod.xhtml" title="Definitions for data-type defining source of a field Definitions for data-type defining source of a f...">rcf_data_source_mod</a><span class="keywordtype">, ONLY</span>: &amp;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="namespacercf__data__source__mod.xhtml#ae232e0306e2491cd51a5132ed7f2a544" title="magic number for internal use only ">already_processed</a>,         &amp;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="namespacercf__data__source__mod.xhtml#aea2d2e152c06c6c89dff95655f8d6f05" title="magic numbers for a source of a field etc ">input_dump</a>,                &amp;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="namespacercf__data__source__mod.xhtml#aed20a99b437b95600fdeec4087c0ebe6">ancillary_file</a>,            &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="namespacercf__data__source__mod.xhtml#acfff0540399f888342ce0ebffade811c">set_to_mdi</a>,                &amp;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="structrcf__data__source__mod_1_1data__source__type.xhtml">data_source_type</a></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keywordtype">Implicit None</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">! Arguments</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;type(<a class="code" href="structrcf__umhead__mod_1_1um__header__type.xhtml" title="Global Type Definitions: ">um_header_type</a>),      <span class="keywordtype">Intent(In)</span> :: hdr_in</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;type(<a class="code" href="structrcf__umhead__mod_1_1um__header__type.xhtml" title="Global Type Definitions: ">um_header_type</a>),      <span class="keywordtype">Intent(In)</span> :: hdr_out</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>             :: fields_in(:)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>             :: fields_out(:)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordtype">Integer</span> ,                   <span class="keywordtype">Intent(In)</span> :: field_count_in</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keywordtype">Integer</span> ,                   <span class="keywordtype">Intent(In)</span> :: Field_count_out</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;type(<a class="code" href="structrcf__data__source__mod_1_1data__source__type.xhtml">data_source_type</a>), <span class="keywordtype">Pointer</span>       :: data_source(:)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">! ! Arrays to store headers from ancillary files</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">! (Could go into a module &amp; add USE to inancila_rcf_inancila &amp; replanca_rcf_replanca ?)</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">! Length of fixed header is defined in umhead</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Parameter</span> :: LenInthd_anc  = 15</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Parameter</span> :: LenRealhd_anc = 6</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">! The following arrays are 2-dimensional, the second dimension</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">! being the number of atmosphere ancillary files.</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">dimension(:,:)</span>, <span class="keywordtype">allocatable</span> :: fixhd_ancil</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">dimension(:,:)</span>, <span class="keywordtype">allocatable</span> :: inthd_ancil</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordtype">Real</span>   , <span class="keywordtype">dimension(:,:)</span>, <span class="keywordtype">allocatable</span> :: realhd_ancil</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">dimension(:,:)</span>, <span class="keywordtype">allocatable</span> :: lookup_ancil</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">! ! Variables &amp; Work arrays for ancillary processing</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keywordtype">Integer</span>                            :: nlookups</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keywordtype">Integer</span>                            :: len_ancil</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keywordtype">Integer</span>                            :: ipt</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keywordtype">Real</span>,    <span class="keywordtype">dimension(:)</span>, <span class="keywordtype">allocatable</span> :: ancil_data</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keywordtype">Real</span>,    <span class="keywordtype">dimension(:)</span>, <span class="keywordtype">allocatable</span> :: ancil_land_temp</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">dimension(:)</span>, <span class="keywordtype">allocatable</span> :: lookup_start</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">! ! Local Variables</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordtype">Integer</span> :: pos_IceFrac_In       <span class="comment">! Position of Ice Fraction in Input dump</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordtype">Integer</span> :: pos_IceFrac_Out      <span class="comment">! Position of Ice Fraction in Output dump</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keywordtype">Integer</span> :: pos_Tstar_In         <span class="comment">! Position of T Star in Input dump</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordtype">Integer</span> :: pos_Tstar_Out        <span class="comment">! Position of T Star in Output dump</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordtype">Integer</span> :: pos_Land_Frac_In     <span class="comment">! Position of land frac in Input dump</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordtype">Integer</span> :: pos_Land_Frac_Out    <span class="comment">! Position of land frac in Output dump</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordtype">Integer</span> :: pos_Tstar_Land_In    <span class="comment">! Position of T Star_Land in Input dump</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordtype">Integer</span> :: pos_Tstar_Land_Out   <span class="comment">! Position of T Star_Land in Output</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordtype">Integer</span> :: pos_Tstar_Sea_In     <span class="comment">! Position of T Star_Sea in Input</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordtype">Integer</span> :: pos_Tstar_Sea_Out    <span class="comment">! Position of T Star_Sea in Output</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="keywordtype">Integer</span> :: pos_Tstar_Sice_In    <span class="comment">! Position of T Star_Sice in Input</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keywordtype">Integer</span> :: pos_Tstar_Sice_Out   <span class="comment">! Position of T Star_Sice in Output</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordtype">Integer</span> :: ipos_111             <span class="comment">! Land fraction ancil position</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordtype">Integer</span> :: pos_Tstar_Anom       <span class="comment">! Position of T Star Anomaly in Input dump</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="keywordtype">Integer</span> :: pos</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>   :: icefrac_in</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>   :: tstar_in</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>   :: land_frac_in</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>   :: tstar_land_in</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>   :: tstar_sea_in</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>   :: tstar_sice_in</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>   :: icefrac_out</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>   :: tstar_out</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>   :: land_frac_out</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>   :: tstar_land_out</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>   :: tstar_sea_out</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>   :: tstar_sice_out</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>   :: tstar_anom</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>)            :: dummy</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>)            :: dummy_anc</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Target</span>    :: dummy_icefr</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Target</span>    :: dummy_tstar</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Target</span>    :: dummy_land_frac</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Target</span>    :: dummy_tstar_land</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Target</span>    :: dummy_tstar_sea</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Target</span>    :: dummy_tstar_sice</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Target</span>    :: dummy_tstar_anom</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keywordtype">Integer</span>      :: i,j,k          <span class="comment">!  Loop indices</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="keywordtype">Integer</span>      :: i_full</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keywordtype">Integer</span>      :: i_land</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordtype">Integer</span>      :: irec</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keywordtype">Integer</span>      :: n_anc_read</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keywordtype">Integer</span>      :: ianc_Mask</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keywordtype">Integer</span>      :: ianc_IceFrac</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keywordtype">Integer</span>      :: ianc_TStar</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordtype">Integer</span>      :: ianc_u_curr</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keywordtype">Integer</span>      :: ianc_v_curr</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keywordtype">Integer</span>      :: ErrorStatus</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keywordtype">Integer</span>      :: orig_decomp</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keywordtype">Logical</span>            :: Found      <span class="comment">! T : ANCILmaster record found</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keywordtype">Logical</span>, <span class="keywordtype">Parameter</span> :: UserAnc = .true.</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keywordtype">Character (Len=13)</span>           :: AM_filename <span class="comment">! ANCILmaster filename</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keywordtype">Character (Len=80)</span>           :: Cmessage</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keywordtype">Character (Len=*)</span>, <span class="keywordtype">Parameter</span> :: RoutineName=<span class="stringliteral">&#39;Rcf_Ancil_Atmos&#39;</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">!WRITE(umMessage,*)</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">! Read in ANCILmaster files and determine total number of records</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keywordflow">Do</span> i = 1, <a class="code" href="namespacesubmodel__mod.xhtml#a632aec067eb5d42141b256110bc535e6">n_internal_model</a></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  <span class="keywordflow">If</span> ( <a class="code" href="namespacesubmodel__mod.xhtml#ac58c30a98e5710630a465e3c2c4e79a6">internal_model_list</a>(i) == <a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="comment">!  Ancillary Fields</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    am_filename = <span class="stringliteral">&#39;ANCILfields_A&#39;</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacehdancilm__mod.xhtml#a3c1e844ee74b1cf99179ee746ca8cdd8" title="Subroutine HdAncilM - Count number of ANCILmaster reords. ">hdancilm</a> ( am_filename, <span class="stringliteral">&#39;ANCILMSTR&#39;</span> )</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="comment">!  Ancillary Files</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    am_filename = <span class="stringliteral">&#39;ANCILfiles_A&#39;</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacehdancilm__mod.xhtml#a3c1e844ee74b1cf99179ee746ca8cdd8" title="Subroutine HdAncilM - Count number of ANCILmaster reords. ">hdancilm</a> ( am_filename, <span class="stringliteral">&#39;ANCILMSTR&#39;</span> )</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keywordflow">End Do</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">! User ANCILmaster files</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keywordflow">DO</span> i = 1, <a class="code" href="namespaceancil__mod.xhtml#afc464d9e2678b220744aa3a82e13cbf3" title="Namelist for user ANCILmaster file. ">n_uancil</a></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  am_filename = <a class="code" href="namespaceancil__mod.xhtml#a055779766c1b3ea2b6e957f28d307fe5">uancfils</a>(i)</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespacehdancilm__mod.xhtml#a3c1e844ee74b1cf99179ee746ca8cdd8" title="Subroutine HdAncilM - Count number of ANCILmaster reords. ">hdancilm</a> ( am_filename, <span class="stringliteral">&#39;UANCLMSTR&#39;</span>, .true.)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordflow">If</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a> .AND. <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">Then</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Total No of ANCILmaster records (Fields) &#39;</span>,<a class="code" href="namespaceancil__mod.xhtml#a4d96758ba1c31ece66285a78bb5d068c">max_ancrecs</a></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Total No of ANCILmaster records (Files ) &#39;</span>,<a class="code" href="namespaceancil__mod.xhtml#a9f89dc33f8b7ba36b3612f7cbf8673d6">max_ancfiles</a></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keywordflow">End If</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keywordflow">Do</span> i = 1, <a class="code" href="namespacesubmodel__mod.xhtml#a632aec067eb5d42141b256110bc535e6">n_internal_model</a></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  <span class="keywordflow">If</span> ( <a class="code" href="namespacesubmodel__mod.xhtml#ac58c30a98e5710630a465e3c2c4e79a6">internal_model_list</a>(i) == <a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    am_filename = <span class="stringliteral">&#39;ANCILfields_A&#39;</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacegetanc__fields__mod.xhtml#a698a8e0cb789e6924cebc8586c77194f" title="Subroutine GetAnc_Fields - Get Ancillary field records. ">getanc_fields</a> ( am_filename, <span class="stringliteral">&#39;ANCILMSTR&#39;</span> )</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    am_filename = <span class="stringliteral">&#39;ANCILfiles_A&#39;</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacegetanc__files__mod.xhtml#af44125bfef3728f614f9a55dd81554e4" title="Subroutine GetAnc_Files - Get Ancillary file records. ">getanc_files</a>  ( am_filename, <span class="stringliteral">&#39;ANCILMSTR&#39;</span> )</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keywordflow">End Do</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">! User ANCILmaster files</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keywordflow">Do</span> i = 1, <a class="code" href="namespaceancil__mod.xhtml#afc464d9e2678b220744aa3a82e13cbf3" title="Namelist for user ANCILmaster file. ">n_uancil</a></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  am_filename = <a class="code" href="namespaceancil__mod.xhtml#a055779766c1b3ea2b6e957f28d307fe5">uancfils</a>(i)</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacegetanc__fields__mod.xhtml#a698a8e0cb789e6924cebc8586c77194f" title="Subroutine GetAnc_Fields - Get Ancillary field records. ">getanc_fields</a> ( am_filename, <span class="stringliteral">&#39;UANCLMSTR&#39;</span>, .true. )</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keywordflow">End Do</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">! Check that ANCILmaster &amp; STASHmaster record exists for</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">! ITEMS namelists with SOURCE=2</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="keywordflow">do</span> i=1,<a class="code" href="namespacercf__items__mod.xhtml#ae70349834bc756baf424ce68409dec30">num_items</a></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="keywordflow">if</span> (<a class="code" href="namespacercf__items__mod.xhtml#a7a26aaecf49d0549abc0c9e03d962cd3" title="Arrays for the items namelists. ">source_array</a>(i) == <a class="code" href="namespacercf__data__source__mod.xhtml#aed20a99b437b95600fdeec4087c0ebe6">ancillary_file</a>) <span class="keywordflow">then</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  found = .false.</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  <span class="keywordflow">do</span> irec=1,<a class="code" href="namespaceancil__mod.xhtml#af56afcc3c3a5f26a9cee660b3691fde3">ancrecs</a></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacercf__items__mod.xhtml#aacb1bf68b51f2b0b4e6104e690cf680c">item_array</a>(i)   == <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(irec) % item_number .and. &amp;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <a class="code" href="namespacercf__items__mod.xhtml#afb1063b906adb1835bbe2fe543911391">sctn_array</a>(i)   == <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(irec) % section_number) <span class="keywordflow">then</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;      found = .true.</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;      <span class="keywordflow">exit</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="keywordflow">    endif</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="keywordflow">  enddo</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;  <span class="keywordflow">if</span> (.not.found) <span class="keywordflow">Then</span>  <span class="comment">!  No ANCILmaster record for this ITEM namelist</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    errorstatus = 10</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keyword">write</span> (cmessage, <span class="stringliteral">&#39;(A, I3, I5, A)&#39;</span>) <span class="stringliteral">&#39;ITEMS namelist for Stash-Code&#39;</span>, &amp;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <a class="code" href="namespacercf__items__mod.xhtml#afb1063b906adb1835bbe2fe543911391">sctn_array</a>(i), <a class="code" href="namespacercf__items__mod.xhtml#aacb1bf68b51f2b0b4e6104e690cf680c">item_array</a>(i),<span class="stringliteral">&#39; : No ANCILmaster record ?&#39;</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keyword">call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> ( routinename, errorstatus, cmessage)</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keywordflow">  endif</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">! Now check that a STASHmaster record also exists</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  dummy_anc % stashmaster =&gt; <a class="code" href="namespacercf__exppx__mod.xhtml#a88789ab4ab32d603dfdd4b9b0c492604" title="Subroutine Rcf_Exppx - extract a STASHmaster record. ">rcf_exppx</a>(<a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a>, <a class="code" href="namespacercf__items__mod.xhtml#afb1063b906adb1835bbe2fe543911391">sctn_array</a>(i), &amp;                                                  <a class="code" href="namespacercf__items__mod.xhtml#aacb1bf68b51f2b0b4e6104e690cf680c">item_array</a>(i))</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keywordflow">endif</span>   <span class="comment">!  if source = ancillary_file</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordflow">enddo</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">! Set up list of ancillary fields to be read in</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(:) % anc_field_read = 0</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keywordflow">do</span> i=1,<a class="code" href="namespacercf__items__mod.xhtml#ae70349834bc756baf424ce68409dec30">num_items</a></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;  <span class="keywordflow">do</span> irec=1,<a class="code" href="namespaceancil__mod.xhtml#af56afcc3c3a5f26a9cee660b3691fde3">ancrecs</a></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacercf__items__mod.xhtml#aacb1bf68b51f2b0b4e6104e690cf680c">item_array</a>(i)   == <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(irec) % item_number    .and. &amp;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <a class="code" href="namespacercf__items__mod.xhtml#afb1063b906adb1835bbe2fe543911391">sctn_array</a>(i)   == <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(irec) % section_number .and. &amp;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <a class="code" href="namespacercf__items__mod.xhtml#a7a26aaecf49d0549abc0c9e03d962cd3" title="Arrays for the items namelists. ">source_array</a>(i) == <a class="code" href="namespacercf__data__source__mod.xhtml#aed20a99b437b95600fdeec4087c0ebe6">ancillary_file</a> ) <span class="keywordflow">then</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;      <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(irec) % anc_field_read = 1</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="keywordflow">    endif</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="keywordflow">  enddo</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="keywordflow">enddo</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment">! Check if both surface currents are selected</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keyword">call </span><a class="code" href="namespacelocate__anc__mod.xhtml#a10bfc45e527642b7b85f8aa367941727" title="Subroutine Locate_Anc_Field - locates record for ancillary field Subroutine Locate_Anc_File - locates...">locate_anc_field</a> (30, ianc_u_curr)</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keyword">call </span><a class="code" href="namespacelocate__anc__mod.xhtml#a10bfc45e527642b7b85f8aa367941727" title="Subroutine Locate_Anc_Field - locates record for ancillary field Subroutine Locate_Anc_File - locates...">locate_anc_field</a> (31, ianc_v_curr)</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="keywordflow">if</span> (<a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(ianc_u_curr) % anc_field_read == 1 .or.    &amp;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(ianc_v_curr) % anc_field_read == 1) <span class="keywordflow">then</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(ianc_u_curr) % anc_field_read = 1</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;  <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(ianc_v_curr) % anc_field_read = 1</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="keywordflow">endif</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">! Sea surface temperature must be updated when sea ice is updated</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="keyword">call </span><a class="code" href="namespacelocate__anc__mod.xhtml#a10bfc45e527642b7b85f8aa367941727" title="Subroutine Locate_Anc_Field - locates record for ancillary field Subroutine Locate_Anc_File - locates...">locate_anc_field</a> (27, ianc_icefrac)</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keyword">call </span><a class="code" href="namespacelocate__anc__mod.xhtml#a10bfc45e527642b7b85f8aa367941727" title="Subroutine Locate_Anc_Field - locates record for ancillary field Subroutine Locate_Anc_File - locates...">locate_anc_field</a> (28, ianc_tstar)</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="keywordflow">if</span> (<a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(ianc_icefrac) % anc_field_read == 1 .and.    &amp;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(ianc_tstar)   % anc_field_read &lt;= 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;  <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(ianc_tstar) % anc_field_read = 1</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="keywordflow">endif</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">! Sea surface temperature anomaly switches on climatological sst</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                                                              <span class="keywordflow">if</span> (<a class="code" href="namespaceancilcta__namelist__mod.xhtml#ab6656d17be481dca3c50c2c846c5d358" title="Module containing the ANCILCTA namelist and associated declarations. ">l_sstanom</a> .and.  &amp;                <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(ianc_tstar)   % anc_field_read &lt;= 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(ianc_tstar) % anc_field_read = 1</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="keywordflow">endif</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;n_anc_read = 0</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="keywordflow">do</span> irec=1,<a class="code" href="namespaceancil__mod.xhtml#af56afcc3c3a5f26a9cee660b3691fde3">ancrecs</a></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(irec) % anc_field_read == 1) <span class="keywordflow">then</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    n_anc_read = n_anc_read + 1</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="keywordflow">  endif</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="keywordflow">enddo</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="keywordflow">If</span> ( <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a> .and. <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  <span class="keywordflow">If</span> (n_anc_read &gt; 0 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) n_anc_read,<span class="stringliteral">&#39; Ancillary fields to be read in :&#39;</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="keywordflow">Do</span> i=1,<a class="code" href="namespaceancil__mod.xhtml#af56afcc3c3a5f26a9cee660b3691fde3">ancrecs</a></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;      <span class="keywordflow">If</span> (<a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(i) % anc_field_read == 1) <span class="keywordflow">then</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(i) % ancil_ref_number,<span class="stringliteral">&#39; &#39;</span>, &amp;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                    <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(i) % anc_name</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="keywordflow">    End Do</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">! Determine the no of lookup entries to be read in from ancillary files</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="keyword">Call </span><a class="code" href="namespacecalc__nlookups__mod.xhtml#a53414a10be2b4f510f67f9aefb057d3c" title="Subroutine Calc_nlookups - Get no of lookups in ancillary files. ">calc_nlookups</a> (nlookups)</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="keywordflow">If</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a> .and. <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">Then</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; rcf_ancil_atmos : nlookups &#39;</span>,nlookups</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment">! Determine the workspace (len_ancil) required for the ancillaries.</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="keyword">Call </span><a class="code" href="namespacercf__calc__len__ancil__mod.xhtml#aa0025851f8b662c751a03a8bec7075a0" title="Subroutine Rcf_Calc_len_ancil - Calculate work space for anc. data. ">rcf_calc_len_ancil</a> (<a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_field,           &amp;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                         <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_r_field,           &amp;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                         <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_rows,  len_ancil )</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="keywordflow">If</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a> .AND. <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; rcf_ancil_atmos : len_ancil &#39;</span>,len_ancil</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="keyword">allocate</span> ( fixhd_ancil(<a class="code" href="namespacercf__umhead__mod.xhtml#a9db5738968facbc1f5a05e2e8ae63883" title="Contains parameters used in UM dumps, a structure to hold a UM header. ">lenfixhd</a>,<a class="code" href="namespaceancil__mod.xhtml#ad1567945e6cf60c7a9403044cf65d626">ancfiles</a>) )</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="keyword">allocate</span> ( inthd_ancil(leninthd_anc,<a class="code" href="namespaceancil__mod.xhtml#ad1567945e6cf60c7a9403044cf65d626">ancfiles</a>) )</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="keyword">allocate</span> ( realhd_ancil(lenrealhd_anc,<a class="code" href="namespaceancil__mod.xhtml#ad1567945e6cf60c7a9403044cf65d626">ancfiles</a>) )</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;fixhd_ancil(:,:) = 0</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;inthd_ancil(:,:) = 0</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;realhd_ancil(:,:) = 0.0</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="keyword">allocate</span> ( lookup_ancil(hdr_out % Len1LookUp, nlookups) )</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="keyword">allocate</span> ( <a class="code" href="namespaceancil__mod.xhtml#a36cc972ec0a1b209789db24b1d1f23ce" title="For ROSE - disabling this code as the name list isn&#39;t suitable for ROSE in its present form...">nlookup</a>(<a class="code" href="namespaceancil__mod.xhtml#af56afcc3c3a5f26a9cee660b3691fde3">ancrecs</a>) )</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="keyword">allocate</span> ( <a class="code" href="namespaceancil__mod.xhtml#a14de040143a3014d7b720c5a0332b975">lookup_step</a>(<a class="code" href="namespaceancil__mod.xhtml#af56afcc3c3a5f26a9cee660b3691fde3">ancrecs</a>) )</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="keyword">allocate</span> ( <a class="code" href="namespaceancil__mod.xhtml#a5849dfeb51e3a29aec208244ec3e3424">stashancil</a>(<a class="code" href="namespaceancil__mod.xhtml#af56afcc3c3a5f26a9cee660b3691fde3">ancrecs</a>) )</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="keyword">allocate</span> ( <a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>(<a class="code" href="namespaceancil__mod.xhtml#af56afcc3c3a5f26a9cee660b3691fde3">ancrecs</a>) )</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="keyword">allocate</span> ( <a class="code" href="namespaceancil__mod.xhtml#a6d00884a0f93fb1265800b3d95a69532">ancil_add</a>(<a class="code" href="namespaceancil__mod.xhtml#af56afcc3c3a5f26a9cee660b3691fde3">ancrecs</a>) )</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="keyword">allocate</span> ( lookup_start(<a class="code" href="namespaceancil__mod.xhtml#ad1567945e6cf60c7a9403044cf65d626">ancfiles</a>) )</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<a class="code" href="namespaceancil__mod.xhtml#a6d00884a0f93fb1265800b3d95a69532">ancil_add</a>(:) = 0</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">! DEPENDS ON: inancila_rcf_inancila</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="keyword">CALL </span><a class="code" href="inancila-rcf__inancila_8f90.xhtml#afe8717503a416403b565dd13b4a8e6e0" title="Read in Headers from Ancillary Files Read in Headers from Ancillary Files. ">inancila_rcf_inancila</a>(<a class="code" href="namespacercf__umhead__mod.xhtml#a9db5738968facbc1f5a05e2e8ae63883" title="Contains parameters used in UM dumps, a structure to hold a UM header. ">lenfixhd</a>,                                    &amp;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;     leninthd_anc,                                         &amp;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;     lenrealhd_anc,                                        &amp;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;     hdr_out % Len1LevDepC,                                &amp;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;     hdr_out % Len2LevDepC,                                &amp;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;     fixhd_ancil,inthd_ancil,realhd_ancil,lookup_ancil,    &amp;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;     hdr_out % RealC,                                      &amp;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;     hdr_out % LevDepC,                                    &amp;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;     nlookups,                                             &amp;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;     lookup_start,                                         &amp;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;     hdr_out % Len1LookUp,                                 &amp;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % glob_p_row_length,                      &amp;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_row_length,                       &amp;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % glob_p_rows,                            &amp;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_rows,                             &amp;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % glob_u_rows,                            &amp;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % glob_r_row_length,                      &amp;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % glob_r_rows,                            &amp;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_r_row_length,                       &amp;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_r_rows,                             &amp;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % model_levels,                           &amp;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % tr_levels,                              &amp;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % st_levels,                              &amp;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % sm_levels,                              &amp;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % ozone_levels,                           &amp;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;     <a class="code" href="namespacenlsizes__namelist__mod.xhtml#a9a909ccea7fe7c7d19ccd48d55503e14">tpps_ozone_levels</a>,                                    &amp;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;     <a class="code" href="namespaceancil__mod.xhtml#a6d00884a0f93fb1265800b3d95a69532">ancil_add</a>,                                            &amp;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;     errorstatus,cmessage)</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="keywordflow">if</span> (errorstatus /= 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; Error in inancila_rcf_inancila&#39;</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; CMESSAGE &#39;</span>,cmessage</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; ErrorStatus &#39;</span>,errorstatus</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;  <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> ( routinename, errorstatus, cmessage)</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="keywordflow">endif</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="comment">! Locate Ice fraction in Output dump</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="keyword">call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, <a class="code" href="namespacercf__stashcodes__mod.xhtml#ab0255e1f0a1e4e69dcc04b1a4b3c5faf">stashcode_icefrac</a>,             &amp;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                  fields_out, field_count_out, pos_icefrac_out, .true. )</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="keywordflow">If</span> ( pos_icefrac_out /= 0 ) <span class="keywordflow">Then</span>  <span class="comment">! Ice Fraction in output dump</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;  icefrac_out =&gt; fields_out(pos_icefrac_out)</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> ( icefrac_out )</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;  <span class="comment">! Locate Ice fraction in input dump</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, <a class="code" href="namespacercf__stashcodes__mod.xhtml#ab0255e1f0a1e4e69dcc04b1a4b3c5faf">stashcode_icefrac</a>,           &amp;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                    fields_in, field_count_in, pos_icefrac_in, .true. )</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;  <span class="keywordflow">If</span> ( pos_icefrac_in /= 0) <span class="keywordflow">Then</span>  <span class="comment">! Ice Fraction in input dump</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    icefrac_in =&gt; fields_in(pos_icefrac_in)</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> ( icefrac_in )</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment">! Read in Ice Fraction</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacercf__read__field__mod.xhtml#a31084c176946b7db5991b2cb66973198" title="Subroutine Rcf_Read_Field - read in a field. ">rcf_read_field</a> ( icefrac_in, hdr_in, <a class="code" href="namespacedecomp__params.xhtml#a3104711097ad4d38e5ccd648d10bcc6b" title="decomps for rcf ">decomp_rcf_input</a> )</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <span class="comment">! Set interpolation</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <span class="keywordflow">If</span> (<a class="code" href="namespacercf__interp__weights__mod.xhtml#acbe250e83e0b0c75c419a45d96b2318b">h_int_active</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;      icefrac_in % interp = <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aa5ed5cb60468d360e1c017004d4361ab">interp_h_only</a></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <span class="keywordflow">Else</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;      icefrac_in % interp = <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#a786d446b7a29f5ff9ee529ee93c5a797">interp_copy</a></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="keywordflow">    End If</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacercf__interpolate__mod.xhtml#a69c11fea979d74b2dc45c3929395fdb8" title="Subroutine Rcf_Interpolate - top level interpolation wrapper. ">rcf_interpolate</a>( icefrac_in, icefrac_out, <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a>,   &amp;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                          <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a>, dummy, dummy )</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a> ( icefrac_in )</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;  <span class="keywordflow">Else</span> <span class="comment">! Ice Fraction not in input dump</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="comment">!  Ice_Fraction is not in the input dump. It is assumed here</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="comment">!  that an ITEMS namelist with SOURCE=2 or similar exists for</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="comment">!  the Ice Fraction Stash Code. The rcf will abort in Create_Dump</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="comment">!  if the Output Ice Fraction field cannot be initialised.</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="keywordflow">  Endif</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="keywordflow">Else</span> <span class="comment">! Ice Fraction not in output dump</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="comment">! replanca_rcf_replanca expects an Ice Fraction field of length p_field</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment">! even if not required - set up and allocate.</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;  dummy_icefr % level_size = <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_field</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;  dummy_icefr % levels     = 1</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;  dummy_icefr % stashmaster =&gt; <a class="code" href="namespacercf__exppx__mod.xhtml#a88789ab4ab32d603dfdd4b9b0c492604" title="Subroutine Rcf_Exppx - extract a STASHmaster record. ">rcf_exppx</a>( 1, 0, <a class="code" href="namespacercf__stashcodes__mod.xhtml#ab0255e1f0a1e4e69dcc04b1a4b3c5faf">stashcode_icefrac</a> )</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;  icefrac_out =&gt; dummy_icefr</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> (icefrac_out)</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="comment">! Locate TStar in output dump.</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="keyword">call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, <a class="code" href="namespacercf__stashcodes__mod.xhtml#a2768f011e48e40edc66ebe27c5605203">stashcode_tstar</a>,               &amp;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                  fields_out, field_count_out, pos_tstar_out, .true. )</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="keywordflow">If</span> ( pos_tstar_out /= 0 ) <span class="keywordflow">Then</span>  <span class="comment">! TStar in output dump</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;  tstar_out =&gt; fields_out(pos_tstar_out)</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> ( tstar_out )</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;  <span class="keyword">call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, <a class="code" href="namespacercf__stashcodes__mod.xhtml#a2768f011e48e40edc66ebe27c5605203">stashcode_tstar</a>,             &amp;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                    fields_in, field_count_in, pos_tstar_in, .true. )</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;  <span class="keywordflow">If</span> ( pos_tstar_in /= 0) <span class="keywordflow">Then</span>  <span class="comment">! TStar in input dump</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    tstar_in =&gt; fields_in(pos_tstar_in)</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="keyword">call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> ( tstar_in )</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="keyword">call </span><a class="code" href="namespacercf__read__field__mod.xhtml#a31084c176946b7db5991b2cb66973198" title="Subroutine Rcf_Read_Field - read in a field. ">rcf_read_field</a> ( tstar_in, hdr_in, <a class="code" href="namespacedecomp__params.xhtml#a3104711097ad4d38e5ccd648d10bcc6b" title="decomps for rcf ">decomp_rcf_input</a> )</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;   <span class="comment">! Set interpolation</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="keywordflow">If</span> (<a class="code" href="namespacercf__interp__weights__mod.xhtml#acbe250e83e0b0c75c419a45d96b2318b">h_int_active</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;      tstar_in % interp = <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aa5ed5cb60468d360e1c017004d4361ab">interp_h_only</a></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="keywordflow">Else</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;      tstar_in % interp = <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#a786d446b7a29f5ff9ee529ee93c5a797">interp_copy</a></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="keywordflow">    End If</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacercf__interpolate__mod.xhtml#a69c11fea979d74b2dc45c3929395fdb8" title="Subroutine Rcf_Interpolate - top level interpolation wrapper. ">rcf_interpolate</a>( tstar_in, tstar_out, <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a>,     &amp;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                          <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a>, dummy, dummy )</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    <span class="keyword">call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a> ( tstar_in )</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;  <span class="keywordflow">Else</span> <span class="comment">! TStar not in input dump</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="comment">!  TStar is not in the input dump. It is assumed here</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="comment">!  that an ITEMS namelist with SOURCE=2 or similar exists for</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="comment">!  the TStar Stash Code. The rcf will abort in Create_Dump</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;<span class="comment">!  if the Output TStar field cannot be initialised.</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="keywordflow">  Endif</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="keywordflow">Else</span> <span class="comment">! TStar not in output dump</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment">! replanca_rcf_replanca expects a TStar field of length p_field</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="comment">! even if not required - set up and allocate.</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;  dummy_tstar % level_size = <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_field</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;  dummy_tstar % levels     = 1</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;  dummy_tstar % stashmaster =&gt; <a class="code" href="namespacercf__exppx__mod.xhtml#a88789ab4ab32d603dfdd4b9b0c492604" title="Subroutine Rcf_Exppx - extract a STASHmaster record. ">rcf_exppx</a>( 1, 0, <a class="code" href="namespacercf__stashcodes__mod.xhtml#a2768f011e48e40edc66ebe27c5605203">stashcode_tstar</a> )</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;  tstar_out =&gt; dummy_tstar</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> (tstar_out)</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="comment">! Locate Land_Frac in output dump.</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="keyword">call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, <a class="code" href="namespacercf__stashcodes__mod.xhtml#aa210370188bfac4366be607d4adc61ff">stashcode_land_frac</a>,           &amp;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;                  fields_out, field_count_out, pos_land_frac_out, .true. )</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="keywordflow">If</span> ( pos_land_frac_out /= 0 ) <span class="keywordflow">Then</span>  <span class="comment">! Land_Frac in output dump</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;  land_frac_out =&gt; fields_out(pos_land_frac_out)</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> ( land_frac_out )</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacelocate__anc__mod.xhtml#a10bfc45e527642b7b85f8aa367941727" title="Subroutine Locate_Anc_Field - locates record for ancillary field Subroutine Locate_Anc_File - locates...">locate_anc_field</a> (111, ipos_111)</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;<span class="comment">! Check not reading land fraction from ancillary file:</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;  <span class="keywordflow">If</span>(<a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(ipos_111) % anc_field_read /= 1 )<span class="keywordflow">Then</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    <span class="keyword">call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, <a class="code" href="namespacercf__stashcodes__mod.xhtml#aa210370188bfac4366be607d4adc61ff">stashcode_land_frac</a>,       &amp;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;                      fields_in, field_count_in, pos_land_frac_in, .true. )</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    <span class="keywordflow">If</span> ( pos_land_frac_in /= 0) <span class="keywordflow">Then</span>  <span class="comment">! Land_Frac in input dump</span></div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;      land_frac_in =&gt; fields_in(pos_land_frac_in)</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;      <span class="keyword">call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> ( land_frac_in )</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;      <span class="keyword">call </span><a class="code" href="namespacercf__read__field__mod.xhtml#a31084c176946b7db5991b2cb66973198" title="Subroutine Rcf_Read_Field - read in a field. ">rcf_read_field</a> ( land_frac_in, hdr_in, <a class="code" href="namespacedecomp__params.xhtml#a3104711097ad4d38e5ccd648d10bcc6b" title="decomps for rcf ">decomp_rcf_input</a> )</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="comment">! Dont allow horizonal interpolation for Land_Frac:</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;      <span class="keywordflow">If</span> (<a class="code" href="namespacercf__interp__weights__mod.xhtml#acbe250e83e0b0c75c419a45d96b2318b">h_int_active</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;        errorstatus = 20</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        <span class="keyword">write</span> (cmessage, <span class="stringliteral">&#39;(2A)&#39;</span>) <span class="stringliteral">&#39;Horizontal interpolation of &#39;</span> &amp;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        ,<span class="stringliteral">&#39;land fraction not allowed: Need ancillary&#39;</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        <span class="keyword">call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> ( routinename, errorstatus, cmessage)</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;      <span class="keywordflow">Else</span></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        land_frac_in % interp = <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#a786d446b7a29f5ff9ee529ee93c5a797">interp_copy</a></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__interpolate__mod.xhtml#a69c11fea979d74b2dc45c3929395fdb8" title="Subroutine Rcf_Interpolate - top level interpolation wrapper. ">rcf_interpolate</a>( land_frac_in, land_frac_out, <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a>, &amp;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                          <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a>, dummy, dummy )</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;      <span class="keyword">call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a> ( land_frac_in )</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    <span class="keywordflow">Else</span> <span class="comment">! Land frac not in input dump</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        errorstatus = 22</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        <span class="keyword">write</span> (cmessage, <span class="stringliteral">&#39;(2A)&#39;</span>) <span class="stringliteral">&#39;Land fraction is not in the input dump &#39;</span> &amp;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        ,<span class="stringliteral">&#39;=&gt; an ancillary must be provided.&#39;</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;        <span class="keyword">call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> ( routinename, errorstatus, cmessage)</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;<span class="keywordflow">    Endif</span></div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="keywordflow">  End If</span> <span class="comment">! Land_Frac read from ancillary</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="keywordflow">Else</span> <span class="comment">! Land_Frac not in output dump</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Land Frac is not in output dump =&gt; setting to dummy&#39;</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="comment">! replanca_rcf_replanca expects a Land_Frac field of length p_field</span></div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="comment">! even if not required - set up and allocate.</span></div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;  dummy_land_frac % level_size = <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_field</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;  dummy_land_frac % levels     = 1</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;  dummy_land_frac % stashmaster =&gt; <a class="code" href="namespacercf__exppx__mod.xhtml#a88789ab4ab32d603dfdd4b9b0c492604" title="Subroutine Rcf_Exppx - extract a STASHmaster record. ">rcf_exppx</a>(1,0,<a class="code" href="namespacercf__stashcodes__mod.xhtml#aa210370188bfac4366be607d4adc61ff">stashcode_land_frac</a>)</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;  land_frac_out =&gt; dummy_land_frac</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> (land_frac_out)</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="comment">! Locate Tstar_Land in output dump.</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="keyword">call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, <a class="code" href="namespacercf__stashcodes__mod.xhtml#acd7878927ff724929261196cd3f4f6dd">stashcode_tstar_land</a>,          &amp;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                  fields_out, field_count_out, pos_tstar_land_out, .true. )</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="keywordflow">If</span> ( pos_tstar_land_out /= 0 ) <span class="keywordflow">Then</span>  <span class="comment">! Tstar_Land in output dump</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;  tstar_land_out =&gt; fields_out(pos_tstar_land_out)</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> ( tstar_land_out )</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;  <span class="keyword">call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, <a class="code" href="namespacercf__stashcodes__mod.xhtml#acd7878927ff724929261196cd3f4f6dd">stashcode_tstar_land</a>,        &amp;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;                    fields_in, field_count_in, pos_tstar_land_in, .true. )</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;  <span class="keywordflow">If</span> ( pos_tstar_land_in /= 0) <span class="keywordflow">Then</span>  <span class="comment">! Tstar_Land in input dump</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    tstar_land_in =&gt; fields_in(pos_tstar_land_in)</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    <span class="keyword">call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> ( tstar_land_in )</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    <span class="keyword">call </span><a class="code" href="namespacercf__read__field__mod.xhtml#a31084c176946b7db5991b2cb66973198" title="Subroutine Rcf_Read_Field - read in a field. ">rcf_read_field</a> ( tstar_land_in, hdr_in, <a class="code" href="namespacedecomp__params.xhtml#a3104711097ad4d38e5ccd648d10bcc6b" title="decomps for rcf ">decomp_rcf_input</a> )</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;   <span class="comment">! Set interpolation</span></div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    <span class="keywordflow">If</span> (<a class="code" href="namespacercf__interp__weights__mod.xhtml#acbe250e83e0b0c75c419a45d96b2318b">h_int_active</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;      tstar_land_in % interp = <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aa5ed5cb60468d360e1c017004d4361ab">interp_h_only</a></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    <span class="keywordflow">Else</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;      tstar_land_in % interp = <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#a786d446b7a29f5ff9ee529ee93c5a797">interp_copy</a></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;<span class="keywordflow">    End If</span></div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacercf__interpolate__mod.xhtml#a69c11fea979d74b2dc45c3929395fdb8" title="Subroutine Rcf_Interpolate - top level interpolation wrapper. ">rcf_interpolate</a>( tstar_land_in, tstar_land_out, <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a>, &amp;</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;                          <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a>, dummy, dummy )</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    <span class="keyword">call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a> ( tstar_land_in )</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;  <span class="keywordflow">Else</span> <span class="comment">! Tstar_Land not in input dump</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;<span class="comment">!  Tstar_Land is not in the input dump. It is assumed here</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;<span class="comment">!  that an ITEMS namelist with SOURCE=2 or similar exists for</span></div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="comment">!  the Tstar_Land Stash Code. The rcf will abort in Create_Dump</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;<span class="comment">!  if the Output Tstar_Land field cannot be initialised.</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Land T* is not in input dump =&gt; setting to gbm T*&#39;</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    tstar_land_out % Data (:,:) = tstar_out % Data(:,:)</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;<span class="keywordflow">  Endif</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;<span class="keywordflow">Else</span> <span class="comment">! Tstar_Land not in output dump</span></div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Land T* is not in output dump =&gt; setting to dummy&#39;</span></div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;<span class="comment">! replanca_rcf_replanca expects a Tstar_Land field of length p_field</span></div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;<span class="comment">! even if not required - set up and allocate.</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;  dummy_tstar_land % level_size = <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_field</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;  dummy_tstar_land % levels     = 1</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;  dummy_tstar_land % stashmaster =&gt; <a class="code" href="namespacercf__exppx__mod.xhtml#a88789ab4ab32d603dfdd4b9b0c492604" title="Subroutine Rcf_Exppx - extract a STASHmaster record. ">rcf_exppx</a>(1,0,<a class="code" href="namespacercf__stashcodes__mod.xhtml#acd7878927ff724929261196cd3f4f6dd">stashcode_tstar_land</a>)</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;  tstar_land_out =&gt; dummy_tstar_land</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> (tstar_land_out)</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="comment">! Locate Tstar_Sea in output dump.</span></div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;<span class="keyword">call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, <a class="code" href="namespacercf__stashcodes__mod.xhtml#a98f6d80ebb8365cc8957dc4e717d4772">stashcode_tstar_sea</a>,           &amp;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                  fields_out, field_count_out, pos_tstar_sea_out, .true. )</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="keywordflow">If</span> ( pos_tstar_sea_out /= 0 ) <span class="keywordflow">Then</span>  <span class="comment">! Tstar_Sea in output dump</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;  tstar_sea_out =&gt; fields_out(pos_tstar_sea_out)</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> ( tstar_sea_out )</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;  <span class="keyword">call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, <a class="code" href="namespacercf__stashcodes__mod.xhtml#a98f6d80ebb8365cc8957dc4e717d4772">stashcode_tstar_sea</a>,         &amp;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                    fields_in, field_count_in, pos_tstar_sea_in, .true. )</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;  <span class="keywordflow">If</span> ( pos_tstar_sea_in /= 0) <span class="keywordflow">Then</span>  <span class="comment">! Tstar_Sea in input dump</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    tstar_sea_in =&gt; fields_in(pos_tstar_sea_in)</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    <span class="keyword">call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> ( tstar_sea_in )</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    <span class="keyword">call </span><a class="code" href="namespacercf__read__field__mod.xhtml#a31084c176946b7db5991b2cb66973198" title="Subroutine Rcf_Read_Field - read in a field. ">rcf_read_field</a> ( tstar_sea_in, hdr_in, <a class="code" href="namespacedecomp__params.xhtml#a3104711097ad4d38e5ccd648d10bcc6b" title="decomps for rcf ">decomp_rcf_input</a> )</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;   <span class="comment">! Set interpolation</span></div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    <span class="keywordflow">If</span> (<a class="code" href="namespacercf__interp__weights__mod.xhtml#acbe250e83e0b0c75c419a45d96b2318b">h_int_active</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;      tstar_sea_in % interp = <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aa5ed5cb60468d360e1c017004d4361ab">interp_h_only</a></div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    <span class="keywordflow">Else</span></div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;      tstar_sea_in % interp = <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#a786d446b7a29f5ff9ee529ee93c5a797">interp_copy</a></div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;<span class="keywordflow">    End If</span></div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacercf__interpolate__mod.xhtml#a69c11fea979d74b2dc45c3929395fdb8" title="Subroutine Rcf_Interpolate - top level interpolation wrapper. ">rcf_interpolate</a>( tstar_sea_in, tstar_sea_out, <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a>, &amp;</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;                          <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a>, dummy, dummy )</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    <span class="keyword">call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a> ( tstar_sea_in )</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;  <span class="keywordflow">Else</span> <span class="comment">! Tstar_Sea not in input dump</span></div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;<span class="comment">!  Tstar_Sea is not in the input dump. It is assumed here</span></div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="comment">!  that an ITEMS namelist with SOURCE=2 or similar exists for</span></div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;<span class="comment">!  the Tstar_Sea Stash Code. The rcf will abort in Create_Dump</span></div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;<span class="comment">!  if the Output Tstar_Sea field cannot be initialised.</span></div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Open sea T* is not in input dump =&gt; setting to gbm T*&#39;</span></div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    tstar_sea_out % Data (:,:) = tstar_out % Data(:,:)</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;<span class="keywordflow">  Endif</span></div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;<span class="keywordflow">Else</span> <span class="comment">! Tstar_Sea not in output dump</span></div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;<span class="comment">! replanca_rcf_replanca expects a Tstar_Sea field of length p_field</span></div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;<span class="comment">! even if not required - set up and allocate.</span></div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;  dummy_tstar_sea % level_size = <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_field</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;  dummy_tstar_sea % levels     = 1</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;  dummy_tstar_sea % stashmaster =&gt; <a class="code" href="namespacercf__exppx__mod.xhtml#a88789ab4ab32d603dfdd4b9b0c492604" title="Subroutine Rcf_Exppx - extract a STASHmaster record. ">rcf_exppx</a>(1,0,<a class="code" href="namespacercf__stashcodes__mod.xhtml#a98f6d80ebb8365cc8957dc4e717d4772">stashcode_tstar_sea</a>)</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;  tstar_sea_out =&gt; dummy_tstar_sea</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> (tstar_sea_out)</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;<span class="comment">! Locate Tstar_Sice in output dump.</span></div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;<span class="keyword">call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, <a class="code" href="namespacercf__stashcodes__mod.xhtml#aa97f03956abda517115d34b03ca4cc01">stashcode_tstar_sice</a>,          &amp;</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;                  fields_out, field_count_out, pos_tstar_sice_out, .true. )</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;<span class="keywordflow">If</span> ( pos_tstar_sice_out /= 0 ) <span class="keywordflow">Then</span>  <span class="comment">! Tstar_Sice in output dump</span></div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;  tstar_sice_out =&gt; fields_out(pos_tstar_sice_out)</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> ( tstar_sice_out )</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;  <span class="keyword">call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, <a class="code" href="namespacercf__stashcodes__mod.xhtml#aa97f03956abda517115d34b03ca4cc01">stashcode_tstar_sice</a>,        &amp;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;                    fields_in, field_count_in, pos_tstar_sice_in, .true. )</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;  <span class="keywordflow">If</span> ( pos_tstar_sice_in /= 0) <span class="keywordflow">Then</span>  <span class="comment">! Tstar_Sice in input dump</span></div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    tstar_sice_in =&gt; fields_in(pos_tstar_sice_in)</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;    <span class="keyword">call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> ( tstar_sice_in )</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <span class="keyword">call </span><a class="code" href="namespacercf__read__field__mod.xhtml#a31084c176946b7db5991b2cb66973198" title="Subroutine Rcf_Read_Field - read in a field. ">rcf_read_field</a> ( tstar_sice_in, hdr_in, <a class="code" href="namespacedecomp__params.xhtml#a3104711097ad4d38e5ccd648d10bcc6b" title="decomps for rcf ">decomp_rcf_input</a> )</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;   <span class="comment">! Set interpolation</span></div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    <span class="keywordflow">If</span> (<a class="code" href="namespacercf__interp__weights__mod.xhtml#acbe250e83e0b0c75c419a45d96b2318b">h_int_active</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;      tstar_sice_in % interp = <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aa5ed5cb60468d360e1c017004d4361ab">interp_h_only</a></div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    <span class="keywordflow">Else</span></div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;      tstar_sice_in % interp = <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#a786d446b7a29f5ff9ee529ee93c5a797">interp_copy</a></div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;<span class="keywordflow">    End If</span></div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacercf__interpolate__mod.xhtml#a69c11fea979d74b2dc45c3929395fdb8" title="Subroutine Rcf_Interpolate - top level interpolation wrapper. ">rcf_interpolate</a>( tstar_sice_in, tstar_sice_out, <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a>, &amp;</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;                          <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a>, dummy, dummy )</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;    <span class="keyword">call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a> ( tstar_sice_in )</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;  <span class="keywordflow">Else</span> <span class="comment">! Tstar_Sice not in input dump</span></div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;<span class="comment">!  Tstar_Sice is not in the input dump. It is assumed here</span></div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;<span class="comment">!  that an ITEMS namelist with SOURCE=2 or similar exists for</span></div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;<span class="comment">!  the Tstar_Sice Stash Code. The rcf will abort in Create_Dump</span></div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;<span class="comment">!  if the Output Tstar_Sice field cannot be initialised.</span></div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Sea-ice T* is not in input dump =&gt; setting to gbm T*&#39;</span></div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    tstar_sice_out % Data (:,:) = tstar_out % Data(:,:)</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;<span class="keywordflow">  Endif</span></div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;<span class="keywordflow">Else</span> <span class="comment">! Tstar_Sice not in output dump</span></div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;<span class="comment">! replanca_rcf_replanca expects a Tstar_Sice field of length p_field</span></div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;<span class="comment">! even if not required - set up and allocate.</span></div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;  dummy_tstar_sice % level_size = <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_field</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;  dummy_tstar_sice % levels     = 1</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;  dummy_tstar_sice % stashmaster =&gt; <a class="code" href="namespacercf__exppx__mod.xhtml#a88789ab4ab32d603dfdd4b9b0c492604" title="Subroutine Rcf_Exppx - extract a STASHmaster record. ">rcf_exppx</a>(1,0,<a class="code" href="namespacercf__stashcodes__mod.xhtml#aa97f03956abda517115d34b03ca4cc01">stashcode_tstar_sice</a>)</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;  tstar_sice_out =&gt; dummy_tstar_sice</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> (tstar_sice_out)</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;<span class="comment">! Locate TStar in output dump.</span></div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, <a class="code" href="namespacercf__stashcodes__mod.xhtml#a2d6c2da9f8fb72cbb8babf3b3bb4fd60">stashcode_tstar_anom</a>,             &amp;</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;                  fields_out, field_count_out, pos_tstar_anom, .true. )</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;<span class="keywordflow">If</span> ( pos_tstar_anom /= 0 ) <span class="keywordflow">Then</span>  <span class="comment">! TStar Anomaly in output dump</span></div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;  <span class="keywordflow">If</span> ( <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a> .and. <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Doing SST anomaly.&#39;</span></div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Pos_Tstar_Anom=&#39;</span>,pos_tstar_anom</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;<span class="keywordflow">  Endif</span></div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;  tstar_anom =&gt; fields_out(pos_tstar_anom)</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> ( tstar_anom )</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;<span class="keywordflow">Else</span> <span class="comment">! TStar Anomaly not in output dump</span></div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;<span class="comment">! replanca_rcf_replanca expects a TStar Anomaly field of length p_field</span></div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;<span class="comment">! even if not required - set up and allocate.</span></div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;  <span class="keywordflow">If</span> ( <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a> .and. <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;TStar Anomaly is not in output dump =&gt; setting to dummy&#39;</span></div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="keywordflow">  Endif</span></div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;  dummy_tstar_anom % level_size = <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_field</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;  dummy_tstar_anom % levels     = 1</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;  dummy_tstar_anom % stashmaster =&gt;                                     &amp;</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;                             <a class="code" href="namespacercf__exppx__mod.xhtml#a88789ab4ab32d603dfdd4b9b0c492604" title="Subroutine Rcf_Exppx - extract a STASHmaster record. ">rcf_exppx</a>( 1, 0, <a class="code" href="namespacercf__stashcodes__mod.xhtml#a2d6c2da9f8fb72cbb8babf3b3bb4fd60">stashcode_tstar_anom</a> )</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;  tstar_anom =&gt; dummy_tstar_anom</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a> (tstar_anom)</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;<span class="keyword">allocate</span> ( ancil_data(len_ancil) )</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;ancil_data(:) = 0.0</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;<span class="comment">! DEPENDS ON: replanca_rcf_replanca</span></div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;<span class="keyword">CALL </span><a class="code" href="replanca-rcf__replanca_8f90.xhtml#a451b68b6d4adaf430d09f65c299d8ec1" title="Read in Ancillary Fields Read in Ancillary Fields. ">replanca_rcf_replanca</a> (                              &amp;</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;     hdr_out % FixHd (<a class="code" href="namespacercf__headaddress__mod.xhtml#abf7e73dc6846ebdec7e657c64f0dbb1a">fh_vtyear</a>),                         &amp;</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;     hdr_out % FixHd (<a class="code" href="namespacercf__headaddress__mod.xhtml#a9376778fea50064bc044464cb3d34af4">fh_vtmonth</a>),                        &amp;</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;     hdr_out % FixHd (<a class="code" href="namespacercf__headaddress__mod.xhtml#aaf40228e7bbdbd1d159e7374649ae23e">fh_vtday</a>),                          &amp;</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;     hdr_out % FixHd (<a class="code" href="namespacercf__headaddress__mod.xhtml#a3620052a34ce34e43a6f35570bf464df">fh_vthour</a>),                         &amp;</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;     hdr_out % FixHd (<a class="code" href="namespacercf__headaddress__mod.xhtml#ab50e9e06b71d907f796d7312dfae2cb0">fh_vtminute</a>),                       &amp;</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;     hdr_out % FixHd (<a class="code" href="namespacercf__headaddress__mod.xhtml#a56ed9e141a0e017e0ffd8e7b6be68334">fh_vtsecond</a>),                       &amp;</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_field,                           &amp;</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_rows,                            &amp;</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_u_field,                           &amp;</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_v_field,                           &amp;</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_r_field,                           &amp;</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_land_field,                        &amp;</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;     ancil_data,                                          &amp;</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;     <a class="code" href="namespacercf__lsm__mod.xhtml#ab522187082e89e62fee2ff81186100ab">local_lsm_out</a>,                                       &amp;</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;     icefrac_out % Data,                                  &amp;</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;     tstar_out % Data,                                    &amp;</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;     land_frac_out % Data,                                &amp;</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;     tstar_land_out % Data,                               &amp;</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;     tstar_sea_out % Data,                                &amp;</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;     tstar_sice_out % Data,                               &amp;</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;     tstar_anom % Data,                                   &amp;</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;     hdr_out % RealC (<a class="code" href="namespacercf__headaddress__mod.xhtml#a6f62b781782b7df5a99593da0de9a5ed">rc_latspacing</a>),                     &amp;</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;     hdr_out % RealC (<a class="code" href="namespacercf__headaddress__mod.xhtml#a01b0e58626227484674fb47f8348a373">rc_firstlat</a>),                       &amp;</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;     hdr_out % Len1LookUp, <a class="code" href="namespacercf__umhead__mod.xhtml#a9db5738968facbc1f5a05e2e8ae63883" title="Contains parameters used in UM dumps, a structure to hold a UM header. ">lenfixhd</a>,                      &amp;</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;     leninthd_anc,                                        &amp;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;     len_ancil,fixhd_ancil,                               &amp;</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;     inthd_ancil,lookup_ancil,lookup_ancil,               &amp;</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;     lookup_start,nlookups,                               &amp;</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;     errorstatus,cmessage)</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;<span class="keywordflow">if</span> (errorstatus /= 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; Error in replanca_rcf_replanca&#39;</span></div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; CMESSAGE &#39;</span>,cmessage</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; ErrorStatus &#39;</span>,errorstatus</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;  <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> ( routinename, errorstatus, cmessage)</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;<span class="keywordflow">endif</span></div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;<span class="comment">! Write ancillary fields into output dump</span></div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;<span class="keyword">call </span><a class="code" href="namespacelocate__anc__mod.xhtml#a10bfc45e527642b7b85f8aa367941727" title="Subroutine Locate_Anc_Field - locates record for ancillary field Subroutine Locate_Anc_File - locates...">locate_anc_field</a> (1, ianc_mask)</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;<span class="keyword">call </span><a class="code" href="namespacelocate__anc__mod.xhtml#a10bfc45e527642b7b85f8aa367941727" title="Subroutine Locate_Anc_Field - locates record for ancillary field Subroutine Locate_Anc_File - locates...">locate_anc_field</a> (27,ianc_icefrac)</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;<span class="keyword">call </span><a class="code" href="namespacelocate__anc__mod.xhtml#a10bfc45e527642b7b85f8aa367941727" title="Subroutine Locate_Anc_Field - locates record for ancillary field Subroutine Locate_Anc_File - locates...">locate_anc_field</a> (28,ianc_tstar)</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;<span class="comment">! Setup output decomposition for writing.</span></div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;orig_decomp = current_decomp_type</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;<span class="keywordflow">If</span> (orig_decomp /= <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;  <span class="keyword">Call </span>change_decomposition( <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a> )</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;<span class="keywordflow">End If</span></div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;<span class="keywordflow">do</span> k=1,<a class="code" href="namespaceancil__mod.xhtml#af56afcc3c3a5f26a9cee660b3691fde3">ancrecs</a></div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(k) % anc_field_read == 1) <span class="keywordflow">then</span></div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;    <span class="keywordflow">if</span> (k == ianc_mask .or. k == ianc_icefrac .or. k == ianc_tstar) <span class="keywordflow">then</span></div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;<span class="comment">!     The ancillary fields : Land-Sea mask, Ice Fraction and TStar</span></div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;<span class="comment">!     are not written to the output dump in this loop.</span></div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;      cycle</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;    <span class="keywordflow">else</span> <span class="comment">! write this ancillary to the output dump</span></div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;<span class="comment">! Locate position of ancillary field in output dump</span></div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="namespaceancil__mod.xhtml#a6d00884a0f93fb1265800b3d95a69532">ancil_add</a>(k).ne.0) <span class="keywordflow">then</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;        <span class="keyword">call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a> ( <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(k) % section_number,             &amp;</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;                          <a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>(k) % item_number,                &amp;</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;                          fields_out, field_count_out, pos)</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;<span class="comment">! For Land fields, compress field to land points first</span></div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;      <span class="keywordflow">if</span> (fields_out(pos) % stashmaster % grid_type ==                &amp;</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;                                          <a class="code" href="namespacecppxref__mod.xhtml#ac9d6e3c5870b390dc64ded5f768c3295">ppx_atm_compressed</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;        <span class="comment">! Allocate array used in compress to mask.</span></div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;        <span class="keyword">ALLOCATE</span>(ancil_land_temp(fields_out(pos) % level_size))</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;        <span class="keywordflow">do</span> j=1, fields_out(pos) % levels</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;          i_full = <a class="code" href="namespaceancil__mod.xhtml#a6d00884a0f93fb1265800b3d95a69532">ancil_add</a>(k)+(j-1) * <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_field</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;          i_land = <a class="code" href="namespaceancil__mod.xhtml#a6d00884a0f93fb1265800b3d95a69532">ancil_add</a>(k)+(j-1) * fields_out(pos) % level_size</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;                   <span class="comment">! Use temporary array since this sets INTENT(OUT)</span></div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;          <span class="keyword">call </span><a class="code" href="namespacemask__compression.xhtml#acb339fbf0c2985509169d255246c5fd2" title="Subroutine Compress_To_Mask -!&gt; Purpose: Selects land points values from input horizontal field!&gt; and...">compress_to_mask</a> (                &amp;</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;               ancil_data( i_full ),             &amp;</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;               ancil_land_temp,                  &amp;</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;               <a class="code" href="namespacercf__lsm__mod.xhtml#ab522187082e89e62fee2ff81186100ab">local_lsm_out</a>,                    &amp;</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;               <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % loc_p_field,        &amp;</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;               <a class="code" href="namespacercf__lsm__mod.xhtml#a6f9d7157f9b54ab3b35e442f3676d399">local_land_out</a> )</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;          <span class="keywordflow">DO</span> i = 1, fields_out(pos) % level_size</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;            ancil_data(i_land + i - 1) = ancil_land_temp(i)</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;<span class="keywordflow">       enddo</span>  <span class="comment">!  Loop over j</span></div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;       <span class="keyword">DEALLOCATE</span>(ancil_land_temp)</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;<span class="keywordflow">      endif</span>  <span class="comment">!  If land-only field</span></div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;<span class="comment">! Write the ancillary fields out to the dump</span></div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;<span class="comment">! DEPENDS ON: rcf_writflds</span></div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;      <span class="keyword">call </span><a class="code" href="rcf__writflds_8f90.xhtml#aca37f5ff3f724e282bff43427fc870a4" title="This file belongs in section: Reconfiguration. ">rcf_writflds</a> (hdr_out % UnitNum,                        &amp;</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;                         fields_out(pos) % levels,                 &amp;</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;                         fields_out(pos) % dump_pos,               &amp;</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;                         hdr_out % Lookup,                         &amp;</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;                         hdr_out % Len1LookUp,                     &amp;</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;                         ancil_data(<a class="code" href="namespaceancil__mod.xhtml#a6d00884a0f93fb1265800b3d95a69532">ancil_add</a>(k)),                 &amp;</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;                         fields_out(pos) % level_size,             &amp;</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;                         hdr_out % FixHd,                          &amp;</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;                         errorstatus,cmessage,.true.,.false.)</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;      <span class="keywordflow">if</span> (errorstatus /= 0) <span class="keywordflow">then</span></div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; Error in WRITFLDS for Ancillary Field &#39;</span>,k</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; CMESSAGE &#39;</span>,cmessage</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; ErrorStatus &#39;</span>,errorstatus</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;        <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> ( routinename, errorstatus, cmessage)</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;<span class="keywordflow">    endif</span>  <span class="comment">! if K etc</span></div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;<span class="keywordflow">  endif</span>  <span class="comment">!  if ancillary field read in</span></div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;<span class="keywordflow">enddo</span></div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="comment">! Change back to original if different.</span></div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;<span class="keywordflow">If</span> (current_decomp_type /= orig_decomp) <span class="keywordflow">Then</span></div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;  <span class="keyword">Call </span>change_decomposition( orig_decomp )</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;<span class="keywordflow">End If</span></div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;<span class="keyword">deallocate</span> ( lookup_ancil )</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;<span class="keyword">deallocate</span> ( <a class="code" href="namespaceancil__mod.xhtml#a36cc972ec0a1b209789db24b1d1f23ce" title="For ROSE - disabling this code as the name list isn&#39;t suitable for ROSE in its present form...">nlookup</a> )</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="keyword">deallocate</span> ( <a class="code" href="namespaceancil__mod.xhtml#a14de040143a3014d7b720c5a0332b975">lookup_step</a> )</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;<span class="keyword">deallocate</span> ( <a class="code" href="namespaceancil__mod.xhtml#a5849dfeb51e3a29aec208244ec3e3424">stashancil</a> )</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="keyword">deallocate</span> ( <a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a> )</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;<span class="keyword">deallocate</span> ( <a class="code" href="namespaceancil__mod.xhtml#a6d00884a0f93fb1265800b3d95a69532">ancil_add</a> )</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;<span class="keyword">deallocate</span> ( fixhd_ancil )</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;<span class="keyword">deallocate</span> ( inthd_ancil )</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;<span class="keyword">deallocate</span> ( realhd_ancil )</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;<span class="keyword">deallocate</span> ( ancil_data )</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;<span class="keyword">deallocate</span> ( lookup_start )</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;<span class="comment">! We want to mark fields which have been processed here if its</span></div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;<span class="comment">! possible they will be processed again later - the check used to be performed</span></div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;<span class="comment">! in rcf_create_dump.  For some reason tstar and icefrac are being</span></div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;<span class="comment">! treated as already processed when labelled as set_to_mdi even though we want</span></div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;<span class="comment">! to set them to the values calculated here. Lets just keep the same logic here</span></div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;<span class="comment">! as was found in rcf_create_dump.</span></div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;<span class="comment">!Write TStar to the output dump</span></div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;<span class="keywordflow">If</span> ( pos_tstar_out /= 0 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">then</span></div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Writing TStar to output dump.&#39;</span></div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;<span class="keywordflow">    endif</span></div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;<span class="keywordflow">  endif</span></div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__write__field__mod.xhtml#a45aefec8543b2ff3e794f75dcf866138" title="Subroutine Rcf_Write_Field. ">rcf_write_field</a> ( tstar_out, hdr_out, <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a> )</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;  <span class="keywordflow">IF</span> (data_source(pos_tstar_out) % source == <a class="code" href="namespacercf__data__source__mod.xhtml#aea2d2e152c06c6c89dff95655f8d6f05" title="magic numbers for a source of a field etc ">input_dump</a> .OR. &amp;</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;      data_source(pos_tstar_out) % source == <a class="code" href="namespacercf__data__source__mod.xhtml#acfff0540399f888342ce0ebffade811c">set_to_mdi</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;    data_source(pos_tstar_out) % source = <a class="code" href="namespacercf__data__source__mod.xhtml#ae232e0306e2491cd51a5132ed7f2a544" title="magic number for internal use only ">already_processed</a></div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;<span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a> ( tstar_out )</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;<span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a> ( land_frac_out )</div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;<span class="comment">! Write TStar_land to the output dump</span></div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;<span class="keywordflow">If</span> ( pos_tstar_land_out /= 0 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">then</span></div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Writing TStar_Land to output dump.&#39;</span></div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;<span class="keywordflow">    endif</span></div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;<span class="keywordflow">  endif</span></div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__write__field__mod.xhtml#a45aefec8543b2ff3e794f75dcf866138" title="Subroutine Rcf_Write_Field. ">rcf_write_field</a> ( tstar_land_out, hdr_out, <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a> )</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;  <span class="keywordflow">IF</span> (data_source(pos_tstar_land_out) % source == <a class="code" href="namespacercf__data__source__mod.xhtml#aea2d2e152c06c6c89dff95655f8d6f05" title="magic numbers for a source of a field etc ">input_dump</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;    data_source(pos_tstar_land_out) % source = <a class="code" href="namespacercf__data__source__mod.xhtml#ae232e0306e2491cd51a5132ed7f2a544" title="magic number for internal use only ">already_processed</a></div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;<span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a> ( tstar_land_out )</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;<span class="comment">! Write TStar_sea to the output dump</span></div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;</div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;<span class="keywordflow">If</span> ( pos_tstar_sea_out /= 0 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">then</span></div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Writing TStar_Sea to output dump.&#39;</span></div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;<span class="keywordflow">    endif</span></div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;<span class="keywordflow">  endif</span></div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__write__field__mod.xhtml#a45aefec8543b2ff3e794f75dcf866138" title="Subroutine Rcf_Write_Field. ">rcf_write_field</a> ( tstar_sea_out, hdr_out, <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a> )</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;  <span class="keywordflow">IF</span> (data_source(pos_tstar_sea_out) % source == <a class="code" href="namespacercf__data__source__mod.xhtml#aea2d2e152c06c6c89dff95655f8d6f05" title="magic numbers for a source of a field etc ">input_dump</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;    data_source(pos_tstar_sea_out) % source = <a class="code" href="namespacercf__data__source__mod.xhtml#ae232e0306e2491cd51a5132ed7f2a544" title="magic number for internal use only ">already_processed</a></div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;<span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a> ( tstar_sea_out )</div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;<span class="comment">! Write TStar_sice to the output dump</span></div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;<span class="keywordflow">If</span> ( pos_tstar_sice_out /= 0 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">then</span></div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Writing TStar_Sice to output dump.&#39;</span></div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;<span class="keywordflow">    endif</span></div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;<span class="keywordflow">  endif</span></div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__write__field__mod.xhtml#a45aefec8543b2ff3e794f75dcf866138" title="Subroutine Rcf_Write_Field. ">rcf_write_field</a> ( tstar_sice_out, hdr_out, <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a> )</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;  <span class="keywordflow">IF</span> (data_source(pos_tstar_sice_out) % source == <a class="code" href="namespacercf__data__source__mod.xhtml#aea2d2e152c06c6c89dff95655f8d6f05" title="magic numbers for a source of a field etc ">input_dump</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;    data_source(pos_tstar_sice_out) % source = <a class="code" href="namespacercf__data__source__mod.xhtml#ae232e0306e2491cd51a5132ed7f2a544" title="magic number for internal use only ">already_processed</a></div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;<span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a> ( tstar_sice_out )</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;<span class="comment">! Write Ice Fraction to the dump</span></div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;<span class="keywordflow">If</span> ( pos_icefrac_out /= 0 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">then</span></div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Writing Ice Fraction to output dump.&#39;</span></div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;<span class="keywordflow">    endif</span></div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;<span class="keywordflow">  endif</span></div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__write__field__mod.xhtml#a45aefec8543b2ff3e794f75dcf866138" title="Subroutine Rcf_Write_Field. ">rcf_write_field</a> ( icefrac_out, hdr_out, <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a> )</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;  <span class="keywordflow">IF</span> (data_source(pos_icefrac_out) % source == <a class="code" href="namespacercf__data__source__mod.xhtml#aea2d2e152c06c6c89dff95655f8d6f05" title="magic numbers for a source of a field etc ">input_dump</a> .OR. &amp;</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;      data_source(pos_icefrac_out) % source == <a class="code" href="namespacercf__data__source__mod.xhtml#acfff0540399f888342ce0ebffade811c">set_to_mdi</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;    data_source(pos_icefrac_out) % source = <a class="code" href="namespacercf__data__source__mod.xhtml#ae232e0306e2491cd51a5132ed7f2a544" title="magic number for internal use only ">already_processed</a></div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;<span class="keyword">call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a> ( icefrac_out )</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;<span class="comment">! Write T* Anomaly to the dump</span></div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;<span class="keywordflow">If</span> ( pos_tstar_anom /= 0 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">then</span></div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Writing TStar Anomaly to output dump.&#39;</span></div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_ancil_atmos_mod&#39;</span>)</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;<span class="keywordflow">    endif</span></div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;<span class="keywordflow">  endif</span></div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__write__field__mod.xhtml#a45aefec8543b2ff3e794f75dcf866138" title="Subroutine Rcf_Write_Field. ">rcf_write_field</a> ( tstar_anom, hdr_out, <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a> )</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;  <span class="keywordflow">IF</span> (data_source(pos_tstar_anom) % source == <a class="code" href="namespacercf__data__source__mod.xhtml#aea2d2e152c06c6c89dff95655f8d6f05" title="magic numbers for a source of a field etc ">input_dump</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;    data_source(pos_tstar_anom) % source = <a class="code" href="namespacercf__data__source__mod.xhtml#ae232e0306e2491cd51a5132ed7f2a544" title="magic number for internal use only ">already_processed</a></div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;<span class="keywordflow">Endif</span></div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;<span class="keyword">call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a> ( tstar_anom )</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;<span class="comment">! ===============================================</span></div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;<span class="comment">! Deallocate workspace for ancilmaster records</span></div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;<span class="keyword">Deallocate</span> (<a class="code" href="namespaceancil__mod.xhtml#a770a2c8569cb739d2138352c6483bdd0">anc_record</a>)</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;<span class="keyword">Deallocate</span> (<a class="code" href="namespaceancil__mod.xhtml#ab61fdf25cfbb61997e80b3a3946a8f5c">anc_file</a>)</div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;<span class="keywordflow">Return</span></div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;<span class="keyword">End Subroutine </span><a class="code" href="namespacercf__ancil__atmos__mod.xhtml#a4af82ab1081f4074c046dcc4cb69aa4c" title="Subroutine Rcf_Ancil_Atmos - Ancillary processing for Atmosphere. ">rcf_ancil_atmos</a></div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;<span class="keyword">End Module </span><a class="code" href="namespacercf__ancil__atmos__mod.xhtml" title="Ancillary processing for the Atmosphere model Ancillary processing for the Atmosphere model...">rcf_ancil_atmos_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
