<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/qxreconf/rcf_readflds.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_448e69cd1e368218ef2123538d498dc2.xhtml">qxreconf</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">rcf_readflds.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="rcf__readflds_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">Subroutine </span><a class="code" href="rcf__readflds_8f90.xhtml#abaec6e8d923b30c1b853e40e2617acb0" title="This routine reads in a number of fields from the dump. This routine reads in a number of fields from...">rcf_readflds</a>(NFTIN, NUMBER_OF_FIELDS,        &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                        POSITION, LOOKUP, LEN1_LOOKUP,  &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                        D1, LEN_BUF, FIXHD,             &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                        ICODE, CMESSAGE)</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="rcf__readflds_8f90.xhtml#abaec6e8d923b30c1b853e40e2617acb0">   24</a></span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keywordtype">USE </span>um_parvars<span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    fld_type_p,             &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    fld_type_u,             &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    fld_type_v,             &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,              &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>,                &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__exppx__mod.xhtml" title="Extract a STASHmaster record Extract a STASHmaster record. ">rcf_exppx_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="namespacercf__exppx__mod.xhtml#a88789ab4ab32d603dfdd4b9b0c492604" title="Subroutine Rcf_Exppx - extract a STASHmaster record. ">rcf_exppx</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__ppx__info__mod.xhtml" title="Defines the STASHmaster record Defines the STASHmaster record. ">rcf_ppx_info_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="structrcf__ppx__info__mod_1_1stm__record__type.xhtml" title="Define STMrecord type - to hold STASHmaster records Note that as these are in a sequence and are inte...">stm_record_type</a></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__read__multi__mod.xhtml" title="This file belongs in section: Reconfiguration. ">rcf_read_multi_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="namespacercf__read__multi__mod.xhtml#a19d2812796d231425ed6cd8e96e19ede" title="Subroutine Rcf_Read_Multi - parallel interface to buffin. ">rcf_read_multi</a></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__level__code__mod.xhtml" title="Decode the STASH level code Decode the STASH level code. ">rcf_level_code_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="namespacercf__level__code__mod.xhtml#ab662837c0414874b83675887f890c6ab" title="Sets ILOUT to an appropriate level size according to the value of ILIN. ">rcf_level_code</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__grid__type__mod.xhtml" title="Module to define a grid data type. Module to define a grid data type. ">rcf_grid_type_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__global__to__local__mod.xhtml" title="Parallel RCF: Transform from global to local co-ordinates: Parallel RCF: Transform from global to loc...">rcf_global_to_local_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="namespacercf__global__to__local__mod.xhtml#a77b8a85bffb7822e380fae0f558091d1">rcf_get_fld_type</a></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacercf__headaddress__mod.xhtml" title="Magic numbers for header components Magic numbers for header components. ">rcf_headaddress_mod</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="namespacercf__headaddress__mod.xhtml#aa53dcabed88c2b4debc83388304318c7">fh_lookupsize2</a></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecppxref__mod.xhtml" title="Code Owner: See Unified Model Code Owners HTML page. ">cppxref_mod</a><span class="keywordtype">, ONLY</span>:  &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#ac9d6e3c5870b390dc64ded5f768c3295">ppx_atm_compressed</a>, &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#af57185f8bd6471c59e021839b65568ee">ppx_atm_tall</a>,       &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#ac431b87d080e44fd0bffdd4a9119d921">ppx_atm_cuall</a>,      &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#a6fc3b22758e9414eceae30e1acc84e3d">ppx_atm_cvall</a>,      &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#a6099b9bccdb65a03d528d15d8f377ab1">ppx_atm_ozone</a>,      &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#ac755995feaadbb456e2ed909dfe0ff9e">ppx_atm_tzonal</a></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>  :: nftin                 <span class="comment">! Unit no. for I/O</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>  :: number_of_fields      <span class="comment">! No of fields to read</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>  :: len_buf               <span class="comment">! Length of I/O buffer</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>  :: position              <span class="comment">! Field number from which</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                              <span class="comment">! to begin I/O</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>  :: fixhd(*)              <span class="comment">! Fixed lenght header</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>  :: len1_lookup           <span class="comment">! 1st dimension of lookup</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>  :: lookup(len1_lookup,*) <span class="comment">! PP Lookup table</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordtype">Real</span>,    <span class="keywordtype">Intent(Out)</span> :: D1(*)                 <span class="comment">! data space to be filled</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(Out)</span>            :: icode      <span class="comment">! error code</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">Character (Len=80)</span>, <span class="keywordtype">Intent(Out)</span> :: Cmessage   <span class="comment">! Error Message</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Parameter</span>    :: unset = -1     <span class="comment">! flag</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordtype">Integer</span>   :: D1_Off         <span class="comment">! Offset in D1 array</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keywordtype">Integer</span>   :: k              <span class="comment">! index</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordtype">Integer</span>   :: len_io         <span class="comment">! Length of I/O returned by LENGTH</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordtype">Integer</span>   :: Data_Size      <span class="comment">! No of words of data on disk (inc WFIO pad)</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keywordtype">Integer</span>   :: Field_Start    <span class="comment">! word address to begin I/O</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">Integer</span>   :: local_len      <span class="comment">! length of local part of field read in</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keywordtype">Integer</span>   :: Data_Read_Size <span class="comment">! No of words to read from disk</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keywordtype">Integer</span>   :: start_level    <span class="comment">!  Level delimiter for  LBC size</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keywordtype">Integer</span>   :: end_level      <span class="comment">!   &quot;        &quot;      &quot;    &quot;   &quot;</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordtype">Integer</span>   :: lbc_levels     <span class="comment">! number of levels for LBC code.</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keywordtype">Integer</span>   :: field_model    <span class="comment">!  Model code for field</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keywordtype">Integer</span>   :: field_sect     <span class="comment">!  Section code for field</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keywordtype">Integer</span>   :: field_item     <span class="comment">!  Item code for field</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keywordtype">Integer</span>   :: grid_type      <span class="comment">!  Grid code from stash</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordtype">Integer</span>   :: ErrorStatus</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordtype">Integer</span>   :: Fld_Type</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordtype">Integer</span>   :: expand_size    <span class="comment">! expanded data size</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordtype">Real</span>      :: A_IO</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordtype">Character (Len=*)</span>, <span class="keywordtype">Parameter</span>  :: RoutineName = <span class="stringliteral">&#39;ReadFlds&#39;</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;type(<a class="code" href="structrcf__ppx__info__mod_1_1stm__record__type.xhtml" title="Define STMrecord type - to hold STASHmaster records Note that as these are in a sequence and are inte...">stm_record_type</a>)        :: stash_record</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">!icode = 0</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;cmessage = <span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">!  Buffer in NUMBER_OF_FIELDS fields of real data:</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;d1_off = 0</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordflow">DO</span>  k=position,position+number_of_fields-1</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! Location on disk from which to begin I/O</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  field_start=lookup(<a class="code" href="namespacelookup__addresses.xhtml#afbf7195b85d47a8f92d0769c84f846a4">lbegin</a>,k)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">! data_size contains the number of words of data used to store the</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">! field on disk</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordflow">If</span> (mod(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>,k),10) == 2) <span class="keywordflow">Then</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    data_size = (lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,k)+1)/2    <span class="comment">! 32 bit packed field</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordflow">Else</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    data_size = lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,k)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">! data_read_size contains the number of words to data that need to</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">! be read in for a field. Each field has extra words of dummy data</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">! added at the end to ensure each field starts on a disk sector</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">! boundary.    data_read_size = lookup(lbnrec,K)</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">! The last field on a dump does not have these extra words</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">! added.  So check against number of lookups and if next lookup is -99 assume</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">! we are at the end.  Otherwise assume we are the last field.</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordflow">IF</span> (k &lt; fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#aa53dcabed88c2b4debc83388304318c7">fh_lookupsize2</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">IF</span> (lookup(<a class="code" href="namespacelookup__addresses.xhtml#aabd1e58da18c133f0ceeba0db78c9ecf">lbyr</a>,k+1) == -99) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      data_read_size = data_size</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    data_read_size = data_size</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">! We will only deal with well-formed files. Thus an error is required</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">! if an old dump is encountered</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordflow">If</span> ( lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,k) /= 0 .AND.                             &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a7fbd5df41f854a6fd5c4d35c0942742e">lbnrec</a>,k) == 0 .OR. lookup(<a class="code" href="namespacelookup__addresses.xhtml#a7fbd5df41f854a6fd5c4d35c0942742e">lbnrec</a>,k) == imdi) ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    errorstatus = 10</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    cmessage = <span class="stringliteral">&#39;Invalid dump addressing: Possibly data file is &#39;</span>//&amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="stringliteral">&#39;ill-formed&#39;</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="comment">! Position file pointer</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a>(nftin, field_start, icode)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="comment">! Get some information about this field</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  field_item  = mod(lookup(42,k),1000)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  field_sect  = (lookup(42,k)-field_item)/1000</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  field_model = lookup(45,k)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  stash_record = <a class="code" href="namespacercf__exppx__mod.xhtml#a88789ab4ab32d603dfdd4b9b0c492604" title="Subroutine Rcf_Exppx - extract a STASHmaster record. ">rcf_exppx</a>( field_model, field_sect, field_item )</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <a class="code" href="structrcf__grid__type__mod_1_1grid__type.xhtml" title="Defines the grid_type data type. ">grid_type</a> = stash_record % grid_type</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  fld_type = <a class="code" href="namespacercf__global__to__local__mod.xhtml#a77b8a85bffb7822e380fae0f558091d1">rcf_get_fld_type</a>( stash_record % grid_type)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="comment">! Special case for d1_grid_type for ancillary fields</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keywordflow">If</span> ( fixhd(5) == 4) <span class="keywordflow">Then</span>     <span class="comment">! Ancil data</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">If</span> ( (mod( lookup(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>,k)/10, 10 ) == 0 )  .AND. &amp;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;          <a class="code" href="structrcf__grid__type__mod_1_1grid__type.xhtml" title="Defines the grid_type data type. ">grid_type</a> == <a class="code" href="namespacecppxref__mod.xhtml#ac9d6e3c5870b390dc64ded5f768c3295">ppx_atm_compressed</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="comment">! Compressed in stashmaster but uncompressed in header</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      <span class="keywordflow">Select Case</span>( fld_type )</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordflow">Case</span> ( fld_type_p )</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;          stash_record % grid_type = <a class="code" href="namespacecppxref__mod.xhtml#af57185f8bd6471c59e021839b65568ee">ppx_atm_tall</a></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keywordflow">Case</span>( fld_type_u )</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;          stash_record % grid_type = <a class="code" href="namespacecppxref__mod.xhtml#ac431b87d080e44fd0bffdd4a9119d921">ppx_atm_cuall</a></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">Case</span>( fld_type_v )</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;          stash_record % grid_type = <a class="code" href="namespacecppxref__mod.xhtml#a6fc3b22758e9414eceae30e1acc84e3d">ppx_atm_cvall</a></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordflow">        Case Default</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;          errorstatus = 20</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;          cmessage = <span class="stringliteral">&#39;Unknown grid type for Ancil data field.&#39;</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;          <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keywordflow">      End Select</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordflow">    End If</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="comment">! For atmosphere zonal ozone fields - set to zonal grid type</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="structrcf__grid__type__mod_1_1grid__type.xhtml" title="Defines the grid_type data type. ">grid_type</a> .EQ. <a class="code" href="namespacecppxref__mod.xhtml#a6099b9bccdb65a03d528d15d8f377ab1">ppx_atm_ozone</a> .AND.  lookup(<a class="code" href="namespacelookup__addresses.xhtml#a9ae4b281a4481f6737cda3288e5d7971">lbnpt</a>,k).EQ.1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    stash_record % grid_type = <a class="code" href="namespacecppxref__mod.xhtml#ac755995feaadbb456e2ed909dfe0ff9e">ppx_atm_tzonal</a></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordflow">  ENDIF</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">! Set the size of the expanded data buffer</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">! Note that for compressed FieldsFiles the exact unpacked size isn&#39;t</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">! known and we need to guess a maximum for the memory needed.</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <span class="keywordflow">If</span> ( mod(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>, k), 10) == 1) <span class="keywordflow">Then</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    expand_size = max( 2 * data_read_size,                      &amp;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                     2 * lookup(<a class="code" href="namespacelookup__addresses.xhtml#a54e6ad5def513311547cbefc60aee032">lbrow</a>, k) * lookup(<a class="code" href="namespacelookup__addresses.xhtml#a9ae4b281a4481f6737cda3288e5d7971">lbnpt</a>, k) )</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  <span class="keywordflow">Else</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    expand_size = 2 * data_read_size</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__read__multi__mod.xhtml#a19d2812796d231425ed6cd8e96e19ede" title="Subroutine Rcf_Read_Multi - parallel interface to buffin. ">rcf_read_multi</a>(nftin, d1(d1_off+1), data_read_size,    &amp;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                      expand_size, len_io, local_len, a_io,   &amp;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                      lookup(1,k), fixhd(12), stash_record )</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">! Change the grid-type in the STASHmaster back to what it should</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">! be...</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  stash_record % grid_type = <a class="code" href="structrcf__grid__type__mod_1_1grid__type.xhtml" title="Defines the grid_type data type. ">grid_type</a></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">! Check for I/O errors</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  <span class="keywordflow">If</span> (a_io .ne. -1.0 .or. len_io .ne. data_read_size) <span class="keywordflow">then</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(&#39;</span><span class="stringliteral">&#39; *ERROR* Reading field no&#39;</span><span class="stringliteral">&#39;,I5)&#39;</span>)k</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_readflds&#39;</span>)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordflow">If</span> (fixhd(5).LT.6 .OR. fixhd(5).GT.10) <span class="keywordflow">THEN</span> <span class="comment">! Not AC/Cx/Cov/ObSt</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">! DEPENDS ON: pr_look</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      <span class="keyword">Call </span><a class="code" href="pr__look_8f90.xhtml#a2fb0fb7746c91f2a3c62b5034f7d7fec" title="SUBROUTINE PR_LOOK!&gt; ">pr_look</a>( lookup,lookup,len1_lookup,k)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keywordflow">    End If</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">! DEPENDS ON: ioerror</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keyword">Call </span><a class="code" href="ioerror_8f90.xhtml#aa3812224bd42148a2e00c44c715f82de" title="SUBROUTINE IOERROR!&gt; ">ioerror</a>(<span class="stringliteral">&#39;buffer in of real data&#39;</span>,a_io,len_io, data_read_size)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    icode=nint(a_io)+1</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    cmessage = <span class="stringliteral">&#39;Rcf_READFLDS:I/O error&#39;</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, icode, cmessage )</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  <span class="comment">! Data summary used to be here - removed for the time being</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <span class="comment">! increment size of level read in</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  d1_off = d1_off + local_len</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keywordflow">End Do</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keyword">End Subroutine </span><a class="code" href="rcf__readflds_8f90.xhtml#abaec6e8d923b30c1b853e40e2617acb0" title="This routine reads in a number of fields from the dump. This routine reads in a number of fields from...">rcf_readflds</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
