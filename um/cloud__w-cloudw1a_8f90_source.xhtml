<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/cloud_w-cloudw1a.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">cloud_w-cloudw1a.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="cloud__w-cloudw1a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="cloud__w-cloudw1a_8f90.xhtml#aac2250c07f887fcc603f0ba9b8f67e85" title="Convection cloud Microphysics Scheme. ">cloud_w_4a5a</a> (k, npnts, xpkp1, qclpkp1, qcfpkp1, prekp1, xsqkp1    &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;               , blowst, flxkp1, xpk, qclpk, qcfpk, thekp1,qekp1, bwkp1       &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;               , bland, qsekp1, bgmkp1, bterm, cca, iccb, icct, tcw, depth    &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;               , ekp14, ekp34, delexkp1, cclwp, delpkp1, ccw, lcca, lcbase    &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;               , lctop, l_shallow, l_q_interact, start_lev)</div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="cloud__w-cloudw1a_8f90.xhtml#aac2250c07f887fcc603f0ba9b8f67e85">   10</a></span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: cp, c_virtual</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacecv__run__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_run_mod</a><span class="keywordtype">, Only</span>:                                                   &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#ad52f2cebcedba10f000abfec80acec16">l_fix_udfactor</a>, <a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a>,                                            &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#a6cd0b105b6401293c7fe3bf077940b40">ud_factor</a>, <a class="code" href="namespacecv__run__mod.xhtml#af96d1981356dbc9cd0de5cca3fa86135">mparwtr</a>, <a class="code" href="namespacecv__run__mod.xhtml#a899ca5a3ec267ac2bc8c5c3c7f02c1da">qlmin</a>, <a class="code" href="namespacecv__run__mod.xhtml#afeb3a49abf5d3a14ee5fd741b58c123d">fac_qsat</a>, <a class="code" href="namespacecv__run__mod.xhtml#a876c614e80c6bfb4bcd7a5f6074dfab2">ccw_for_precip_opt</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__param__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_param_mod</a><span class="keywordtype">, ONLY</span>:                                                 &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <a class="code" href="namespacecv__param__mod.xhtml#a13cec4bd54ecbee646791c77292a013f">critdsea</a>, <a class="code" href="namespacecv__param__mod.xhtml#adb22a7afe8cf96c5b49206851e341df8">critdlnd</a>, <a class="code" href="namespacecv__param__mod.xhtml#a4cc2260d53e163223bc5152277873077">critdice</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;-<span class="comment">! Description : cloud microphysics routine</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  k                    &amp; <span class="comment">! Present model layer number</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; ,npnts                  <span class="comment">! Vector length</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;  start_lev(npnts)       <span class="comment">! Level at which convection initiated</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  blowst(npnts)        &amp; <span class="comment">! Mask for those points at which stability is low                         ! enough for convection to occur</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; ,bwkp1(npnts)         &amp; <span class="comment">! Mask for whether condensate is liquid in layer k+1</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; ,bland(npnts)         &amp; <span class="comment">! Land/sea mask</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; ,bgmkp1(npnts)        &amp; <span class="comment">! Mask for parcels which are saturated in layer k+1</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; ,bterm(npnts)         &amp; <span class="comment">! Mask for parcels which terminate in layer k+1</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; ,l_shallow(npnts)     &amp; <span class="comment">! Mask for points where shallow convection is likely</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; ,l_q_interact           <span class="comment">! Switch allows overwriting of parcel variables                         ! (will alter results).</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::     &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  xsqkp1(npnts)         &amp; <span class="comment">! Excess parcel mixing ratio in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; ,flxkp1(npnts)         &amp; <span class="comment">! Parcel mass flux in layer k+1 (Pa/s)</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; ,qclpk(npnts)          &amp; <span class="comment">! Parcel liquid condensate mixing ratio in layer k</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                          <span class="comment">! (kg/kg)</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; ,qcfpk(npnts)          &amp; <span class="comment">! Parcel frozen condensate mixing ratio in layer k</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                          <span class="comment">! (kg/kg)</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; ,thekp1(npnts)         &amp; <span class="comment">! Potential temperature of cloud environment                          !    in layer k+1 (K)</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; ,qekp1(npnts)          &amp; <span class="comment">! mixing ratio of cloud environment in layer k+1</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                          <span class="comment">! (kg/kg)</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; ,qsekp1(npnts)         &amp; <span class="comment">! Saturation mixing ratio of cloud environment</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                          <span class="comment">!    in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; ,ekp14(npnts)          &amp; <span class="comment">! entrainment rate at level k+1/4</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                          <span class="comment">! multiplied by appropriate layer thickness</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; ,ekp34(npnts)          &amp; <span class="comment">! entrainment rate at level k+3/4</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                          <span class="comment">! multiplied by appropriate layer thickness</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; ,delexkp1(npnts)       &amp; <span class="comment">! difference in exner ratio across layer k+1 (Pa)</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; ,delpkp1(npnts)          <span class="comment">! Pressure difference across layer k+1</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::  &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  qclpkp1(npnts)        &amp; <span class="comment">! IN Parcel liquid condensate mixing ratio</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                          <span class="comment">!    in layer k+1 before excess mixing</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                          <span class="comment">!    ratio water is added(kg/kg)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                          <span class="comment">! OUT Parcel liquid condensate mixing ratio</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                          <span class="comment">!     in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; ,qcfpkp1(npnts)        &amp; <span class="comment">! IN Parcel frozen condensate mixing ratio</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                          <span class="comment">!    in layer k+1 before excess mixing</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                          <span class="comment">!     ratio water is added(kg/kg)</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                          <span class="comment">! OUT Parcel frozen condensate mixing ratio</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                          <span class="comment">!      in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; ,xpk(npnts)            &amp; <span class="comment">! IN Parcel cloud water in layer k (kg/kg)</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                          <span class="comment">! OUT overwritten with qcl+qcf for layer k</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                          <span class="comment">! if l_q_interact set to .true.</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; ,tcw(npnts)            &amp; <span class="comment">! IN  Total condensed water summed up to layer k</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                          <span class="comment">!     (kg/m**2/s)</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                          <span class="comment">! OUT Total condensed water summed up to layer k</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                          <span class="comment">!     (kg/m**2/s)</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; ,depth(npnts)          &amp; <span class="comment">! IN  Depth of convective cloud to layer k (m)</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                          <span class="comment">! OUT Depth of convective cloud to layer k+1 (m)</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; ,cclwp(npnts)            <span class="comment">! IN  Condensed water path summed up to layer k</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                          <span class="comment">!     (kg/m**2)</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                          <span class="comment">! OUT Condensed water path summed up to layer k+1</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                          <span class="comment">!     (kg/m**2)</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  iccb(npnts)           &amp; <span class="comment">! Convective cloud base level</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; ,icct(npnts)           &amp; <span class="comment">! Convective cloud top level</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; ,lcbase(npnts)         &amp; <span class="comment">! Lowest convective cloud base level</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; ,lctop(npnts)            <span class="comment">! Lowest convective cloud top level</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::    &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  xpkp1(npnts)          &amp; <span class="comment">! Parcel cloud water in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; ,prekp1(npnts)         &amp; <span class="comment">! Precipitation from parcel as it rises from layer</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                          <span class="comment">!  k to k+1 (kg/m**2/s)</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; ,cca(npnts)            &amp; <span class="comment">! Convective cloud amount (%)</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; ,ccw(npnts)            &amp; <span class="comment">! Convective cloud liquid water (g/kg) on model levels</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; ,lcca(npnts)             <span class="comment">! Lowest convective cloud amount (%)</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;-<span class="comment">! Local variables</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;-</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordtype">INTEGER</span> :: I              <span class="comment">! Loop counter</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">PARAMETER</span> :: l_fallout =.true.</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">!                              .true. is default. User DO NOT TOUCH!</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">!                              .false. kills precipitation</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">!                                      DIAGNOSTIC TEST CASE ONLY:</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">!                                     (prevent convection updating qT).</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keywordtype">REAL</span> ::          &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  dcrit          &amp;  <span class="comment">! Critical depth at which Precipitation may form (m)</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; ,mparmult       &amp;  <span class="comment">! Factor used to multiply mparwtr, value between</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                    <span class="comment">! 1. and ~3. being 1.0 for deeper clouds.  </span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; ,xmin           &amp;  <span class="comment">! amount of cloud water retained by the parcel on                    ! Precipitation (kg/kg)</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; ,epss           &amp;  <span class="comment">! (1.0+ekp14)*(1.0+ekp34)</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; ,ccw_ud(npnts)     <span class="comment">! cloud water for radiation</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CLOUD_W_4A5A&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;-<span class="comment">! Calculate parcel cloud condensate before Precipitation</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">! UM Documentation Paper 27</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">! Section (2B), Equation (13A or 13C)</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;-</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordflow">DO</span> i=1, npnts</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  epss = (1.0+ekp14(i)) * (1.0+ekp34(i))</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  xpkp1(i) = ( xpk(i)/epss ) + xsqkp1(i)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">!  xpk(p1) are used for inputs only: need to work out how to use</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">!  qclpk and qcfpk instead. Meanwhile, overwrite xpk(p1).</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; <span class="keywordflow">DO</span> i=1, npnts</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">IF</span> (bwkp1(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      qclpkp1(i) = qclpkp1(i) + xsqkp1(i)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      qcfpkp1(i) = qcfpkp1(i) + xsqkp1(i)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    xpk(i) = qclpk(i) + qcfpk(i)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    xpkp1(i) = qclpkp1(i) + qcfpkp1(i)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;-<span class="comment">! Store convective cloud liquid water before Precipitation</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;-<span class="comment">!</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  ccw(i)     = xpkp1(i)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  prekp1(i)  = 0.0       <span class="comment">! initialise precipitation to zero</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;-<span class="comment">! Calculate cloud depth and assign crtical cloud depths</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">! UM Documentation Paper 27</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">! Section (8), Equation (34), (35)</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;-</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="keywordflow">IF</span> ( blowst(i) ) depth(i) = 0.0</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">! This could be improved and simplified by using actual model heights</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  <span class="keywordflow">IF</span> ( bgmkp1(i) )                                                         &amp;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    depth(i) = depth(i) + ( cp * thekp1(i) * (1.0+c_virtual*qekp1(i)) *    &amp;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                                        delexkp1(i)/g )</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keywordflow">END DO</span> </div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;-<span class="comment">! Calculate Precipitation from layer k+1 and adjust cloud water</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">! UM Documentation Paper 27</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">! Section (8), Equation (36)  (ccw_for_precip_opt=0)</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;-</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keywordflow">SELECT CASE</span> (<a class="code" href="namespacecv__run__mod.xhtml#a876c614e80c6bfb4bcd7a5f6074dfab2">ccw_for_precip_opt</a>)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  <span class="keywordflow">CASE</span> (4)            <span class="comment">! xmin profile based on qsat with user defined                      ! minimum, maximum and qsat scaling.</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;           xmin = max(min(<a class="code" href="namespacecv__run__mod.xhtml#af96d1981356dbc9cd0de5cca3fa86135">mparwtr</a>, <a class="code" href="namespacecv__run__mod.xhtml#afeb3a49abf5d3a14ee5fd741b58c123d">fac_qsat</a>*qsekp1(i)), <a class="code" href="namespacecv__run__mod.xhtml#a899ca5a3ec267ac2bc8c5c3c7f02c1da">qlmin</a>)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      <span class="comment">! Precipitate if cloud water in the layer &gt; xmin</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordflow">IF</span> ( xpkp1(i) &gt; xmin ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        prekp1(i) = (xpkp1(i) -xmin) * flxkp1(i) /g</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span>        <span class="comment">! PC2</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="comment">! Update the parcel&#39;s liquid and frozen cloud condensate</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;          qclpkp1(i) = qclpkp1(i) * xmin / xpkp1(i)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;          qcfpkp1(i) = qcfpkp1(i) * xmin / xpkp1(i)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        xpkp1(i) = xmin      <span class="comment">! cloud water in layer after precip</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordflow">      END IF</span>     <span class="comment">! test on whether to precipitate</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;      <span class="comment">! Note no application of ud_factor</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      ccw_ud(i) = xpkp1(i) </div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  <span class="keywordflow">CASE</span> (3)            <span class="comment">! Manoj&#39;s function for congestus</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                                             <span class="keywordflow">Do</span> i=1,npnts</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      mparmult = 1.5 + 0.5*tanh((3000.0 -depth(i))/800.0)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      xmin = min(<a class="code" href="namespacecv__run__mod.xhtml#af96d1981356dbc9cd0de5cca3fa86135">mparwtr</a>*mparmult, <a class="code" href="namespacecv__run__mod.xhtml#afeb3a49abf5d3a14ee5fd741b58c123d">fac_qsat</a>*qsekp1(i))</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      <span class="comment">! If a land point and liquid water in the layer      ! increase the minimum cloud water for Precipitation</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;      <span class="comment">! The reasons for this are an attempt to take some account of      ! more aerosols over land leading to more small cloud drops and</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;      <span class="comment">! therefore more cloud water before Precipitation. </span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      <span class="keywordflow">IF</span> (bwkp1(i) .and. bland(i)) xmin =xmin*2.0</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      <span class="comment">! limit max value to 0.003 kg/kg</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      xmin = min(xmin,0.003)         </div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span>   <span class="comment">! PC2</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;      <span class="comment">! Limit xmin</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        xmin = max(xmin, <a class="code" href="namespacecv__run__mod.xhtml#a899ca5a3ec267ac2bc8c5c3c7f02c1da">qlmin</a>)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      <span class="comment">! Precipitate if cloud water in the layer &gt; xmin</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="keywordflow">IF</span> ( xpkp1(i) &gt; xmin ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        prekp1(i) = (xpkp1(i) -xmin) * flxkp1(i) /g</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span>        <span class="comment">! PC2</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="comment">! Update the parcel&#39;s liquid and frozen cloud condensate</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;          qclpkp1(i) = qclpkp1(i) * xmin / xpkp1(i)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;          qcfpkp1(i) = qcfpkp1(i) * xmin / xpkp1(i)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        xpkp1(i) = xmin      <span class="comment">! cloud water in layer after precip</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keywordflow">      END IF</span>     <span class="comment">! test on whether to precipitate</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      <span class="comment">! Note no application of ud_factor</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      ccw_ud(i) = xpkp1(i) </div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <span class="keywordflow">CASE</span> (2)            <span class="comment">! Manoj&#39;s function dependent on depth of cloud</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                      <span class="comment">! Also removed extra test on l_fallout</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      mparmult = 2.0 + 1.0*tanh((1500.0 -depth(i))/1000.0)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;      xmin = min(<a class="code" href="namespacecv__run__mod.xhtml#af96d1981356dbc9cd0de5cca3fa86135">mparwtr</a>*mparmult, <a class="code" href="namespacecv__run__mod.xhtml#afeb3a49abf5d3a14ee5fd741b58c123d">fac_qsat</a>*qsekp1(i))</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;      <span class="comment">! If a land point and liquid water in the layer      ! increase the minimum cloud water for Precipitation</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      <span class="comment">! The reasons for this are an attempt to take some account of      ! more aerosols over land leading to more small cloud drops and</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;      <span class="comment">! therefore more cloud water before Precipitation. </span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;      <span class="keywordflow">IF</span> (bwkp1(i) .and. bland(i)) xmin =xmin*2.0</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;      <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span>   <span class="comment">! PC2</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;      <span class="comment">! Limit xmin</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        xmin = max(xmin, <a class="code" href="namespacecv__run__mod.xhtml#a899ca5a3ec267ac2bc8c5c3c7f02c1da">qlmin</a>)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;      <span class="comment">! Precipitate if cloud water in the layer &gt; xmin</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;      <span class="keywordflow">IF</span> ( xpkp1(i) &gt; xmin ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        prekp1(i) = (xpkp1(i) -xmin) * flxkp1(i) /g</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span>        <span class="comment">! PC2</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="comment">! Update the parcel&#39;s liquid and frozen cloud condensate</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;          qclpkp1(i) = qclpkp1(i) * xmin / xpkp1(i)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;          qcfpkp1(i) = qcfpkp1(i) * xmin / xpkp1(i)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        xpkp1(i) = xmin      <span class="comment">! cloud water in layer after precip</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keywordflow">      END IF</span>     <span class="comment">! test on whether to precipitate</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;      <span class="comment">! Note no application of ud_factor</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;      ccw_ud(i) = xpkp1(i) </div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  <span class="keywordflow">CASE</span> (1)            <span class="comment">! As old L_no_dcrit = .true. option</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                      <span class="comment">! No test on a critical depth for Precipitation</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                      <span class="comment">! Option in use for HadGEM2</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordflow">Do</span> i=1,npnts</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;      xmin = min(<a class="code" href="namespacecv__run__mod.xhtml#af96d1981356dbc9cd0de5cca3fa86135">mparwtr</a>, <a class="code" href="namespacecv__run__mod.xhtml#afeb3a49abf5d3a14ee5fd741b58c123d">fac_qsat</a>*qsekp1(i))</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;      <span class="comment">! If a land point and liquid water in the layer      IF (bwkp1(i) .and. bland(i)) xmin =xmin*2.0</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;      <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;      <span class="comment">! Limit xmin</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        xmin = max(xmin, <a class="code" href="namespacecv__run__mod.xhtml#a899ca5a3ec267ac2bc8c5c3c7f02c1da">qlmin</a>)</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;      <span class="comment">! Precipitate if cloud water in the layer &gt; xmin</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">! Original test with l_fallout left in but commented out so that could be</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">! reused for investigation</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">!      IF ( (xpkp1(i) &gt; xmin) .and. l_fallout) THEN      IF ( (xpkp1(i) &gt; xmin)) THEN</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        prekp1(i) = (xpkp1(i) -xmin) * flxkp1(i) /g</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span>        <span class="comment">! PC2</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="comment">! Update the parcel&#39;s liquid and frozen cloud condensate</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;          qclpkp1(i) = qclpkp1(i) * xmin / xpkp1(i)</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;          qcfpkp1(i) = qcfpkp1(i) * xmin / xpkp1(i)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        xpkp1(i) = xmin</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a> .OR. <a class="code" href="namespacecv__run__mod.xhtml#ad52f2cebcedba10f000abfec80acec16">l_fix_udfactor</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;          ccw_ud(i)= xpkp1(i)</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;          ccw_ud(i)= xpkp1(i)*<a class="code" href="namespacecv__run__mod.xhtml#a6cd0b105b6401293c7fe3bf077940b40">ud_factor</a><span class="keywordflow">        END IF</span>      <span class="keywordflow">ELSE</span>     <span class="comment">! no Precipitation</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <span class="comment">! UD_FACTOR ought to be applied here too but, in order to        ! simplify the code, this is corrected by moving the point</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="comment">! at which UD_FACTOR is applied to after convection        ! in CONV_CTL and passing UD_FACTOR of 1 to here</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        ccw_ud(i) = xpkp1(i) </div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="keywordflow">      END IF</span>     <span class="comment">! test on whether to precipitate</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keywordflow">  CASE DEFAULT</span>       <span class="comment">! 0 - original convection code using a critical depth</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      <span class="comment">! Assign critical cloud depths</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;       <span class="keywordflow">IF</span> (.not.bwkp1(i)) <span class="keywordflow">THEN</span>    <span class="comment">! Ice water cloud in this layer        dcrit = critdice</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (bland(i)) <span class="keywordflow">THEN</span>    <span class="comment">! liquid water over land</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        dcrit = <a class="code" href="namespacecv__param__mod.xhtml#adb22a7afe8cf96c5b49206851e341df8">critdlnd</a></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;      <span class="keywordflow">ELSE</span>                       <span class="comment">! liquid water over sea        dcrit = critdsea</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;               xmin = min(<a class="code" href="namespacecv__run__mod.xhtml#af96d1981356dbc9cd0de5cca3fa86135">mparwtr</a>, <a class="code" href="namespacecv__run__mod.xhtml#afeb3a49abf5d3a14ee5fd741b58c123d">fac_qsat</a>*qsekp1(i))</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;      <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;      <span class="comment">! Limit xmin</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        xmin = max(xmin, <a class="code" href="namespacecv__run__mod.xhtml#a899ca5a3ec267ac2bc8c5c3c7f02c1da">qlmin</a>)</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;      <span class="comment">! precipitate if      ! Either  depth of cloud &gt; dcrit OR convection is not shallow</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;      <span class="comment">! and    cloud water in the layer &gt; xmin! orignal code with l_fallout left commented out so can be reused for tests</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">!      IF ( ( (depth(i) &gt; dcrit).or.(.not.l_shallow(i)) )  &amp;</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">!               .and. (xpkp1(i) &gt; xmin) .and. l_fallout) THEN</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;      <span class="keywordflow">IF</span> ( ( (depth(i) &gt; dcrit).OR.(.NOT.l_shallow(i)) )  &amp;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;           .AND. (xpkp1(i) &gt; xmin) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        prekp1(i) = (xpkp1(i) -xmin) * flxkp1(i) /g</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span>        <span class="comment">! PC2</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="comment">! Update the parcel&#39;s liquid and frozen cloud condensate</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;          qclpkp1(i) = qclpkp1(i) * xmin / xpkp1(i)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;          qcfpkp1(i) = qcfpkp1(i) * xmin / xpkp1(i)</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keywordflow">        END IF</span>        xpkp1(i) = xmin</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a> .OR. <a class="code" href="namespacecv__run__mod.xhtml#ad52f2cebcedba10f000abfec80acec16">l_fix_udfactor</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;          ccw_ud(i)= xpkp1(i)</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;          ccw_ud(i)= xpkp1(i)*<a class="code" href="namespacecv__run__mod.xhtml#a6cd0b105b6401293c7fe3bf077940b40">ud_factor</a><span class="keywordflow">        END IF</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;      <span class="keywordflow">ELSE</span>     <span class="comment">! no Precipitation</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="comment">! UD_FACTOR ought to be applied here too but, in order to        ! simplify the code, this is corrected by moving the point</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        <span class="comment">! at which UD_FACTOR is applied to after convection        ! in CONV_CTL and passing UD_FACTOR of 1 to here</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        ccw_ud(i) = xpkp1(i) </div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keywordflow">      END IF</span>     <span class="comment">! test on whether to precipitate</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="keywordflow">END SELECT</span>      <span class="comment">! test on value of ccw_for_precip_opt</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;-<span class="comment">! Calculate convective cloud base, convective cloud top, total condensed</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">! water/ice and convective cloud amount</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment">! SUBROUTINE CON_RAD - now called after rainout has occurred</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">! UM Documentation paper 27</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment">! Section (9)</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;-</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment">! DEPENDS ON: con_rad_4a5a</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="keyword">CALL </span><a class="code" href="con__rad-conrad1a_8f90.xhtml#a1fd7f825b57652de08abc77c0da1aecf" title="SUBROUTINE con_rad_4a5a. ">con_rad_4a5a</a>(k,xpk,ccw_ud,flxkp1,bterm,cca,iccb,icct,start_lev,         &amp;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                  tcw,ccw,cclwp,delpkp1,lcca,lcbase,lctop,npnts,l_q_interact)</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;-<span class="comment">! Store convective cloud liquid water after Precipitation</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;-</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="keywordflow">Do</span> i=1,npnts</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  ccw(i) = ccw_ud(i)</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;-</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CLOUD_W_4A5A&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="cloud__w-cloudw1a_8f90.xhtml#aac2250c07f887fcc603f0ba9b8f67e85" title="Convection cloud Microphysics Scheme. ">cloud_w_4a5a</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
