<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/qxreconf/rcf_gather_zonal_field_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_448e69cd1e368218ef2123538d498dc2.xhtml">qxreconf</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">rcf_gather_zonal_field_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="rcf__gather__zonal__field__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno"><a class="line" href="namespacercf__gather__zonal__field__mod.xhtml">    4</a></span>&#160;<span class="keyword">Module</span> <a class="code" href="namespacercf__gather__zonal__field__mod.xhtml">rcf_gather_zonal_field_mod</a></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">Contains</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">Subroutine </span><a class="code" href="namespacercf__gather__zonal__field__mod.xhtml#afaf94837c9c73bbf14c892eee2296c86" title="Subroutine Rcf_GAther_Zonal_Field - Gathers a field onto 1 pe. ">rcf_gather_zonal_field</a> ( LOCAL_FIELD, GLOBAL_FIELD,  &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                                    LOCAL_SIZE,  GLOBAL_SIZE,   &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                                    LEVELS,      GRID_TYPE,     &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                                    GATHER_PE)</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="namespacercf__gather__zonal__field__mod.xhtml#afaf94837c9c73bbf14c892eee2296c86">   26</a></span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keywordtype">USE </span>um_parvars    <span class="comment">! Most of this used</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keywordtype">USE </span>gcom_mod</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecppxref__mod.xhtml" title="Code Owner: See Unified Model Code Owners HTML page. ">cppxref_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacecppxref__mod.xhtml#ac755995feaadbb456e2ed909dfe0ff9e">ppx_atm_tzonal</a>, <a class="code" href="namespacecppxref__mod.xhtml#a6099b9bccdb65a03d528d15d8f377ab1">ppx_atm_ozone</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>   :: Local_Size</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>   :: Global_Size</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>   :: Levels</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>   :: Grid_Type</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>   :: Gather_PE</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">Real</span>, <span class="keywordtype">Intent(In)</span>      :: Local_Field ( local_size, levels )</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keywordtype">Real</span>, <span class="keywordtype">Intent(Out)</span>     :: Global_Field( global_size, levels )</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">Integer</span>               :: k                 <span class="comment">! looper</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">Integer</span>               :: flag              <span class="comment">! Gcom argument</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">Integer</span>               :: fld_type          <span class="comment">! P or U field</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">Integer</span>               :: info              <span class="comment">! Gcom return code</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keywordtype">Integer</span>               :: iproc             <span class="comment">! loop counter</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">Integer</span>               :: send_map(7,1)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">ALLOCATABLE</span>,<span class="keywordtype">SAVE</span>  :: receive_map(:,:)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">Integer</span>               :: n_mess_to_send</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">Integer</span>               :: n_mess_to_receive</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordflow">IF</span> (.NOT.<span class="keyword">ALLOCATED</span>(receive_map)) &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">ALLOCATE</span>(receive_map(7,<a class="code" href="namespaceum__parcore.xhtml#ad078cc7202ef25b751b3e270bd3c4287">nproc_max</a>))</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;send_map(:,:)    = 0</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;receive_map(:,:) = 0</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordflow">IF</span> ((grid_type .EQ. <a class="code" href="namespacecppxref__mod.xhtml#ac755995feaadbb456e2ed909dfe0ff9e">ppx_atm_tzonal</a>) .OR. &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    (grid_type .EQ. <a class="code" href="namespacecppxref__mod.xhtml#a6099b9bccdb65a03d528d15d8f377ab1">ppx_atm_ozone</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  fld_type=fld_type_p</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  fld_type=fld_type_u</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordflow">ENDIF</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;n_mess_to_receive=0</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> .EQ. gather_pe) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keywordflow">DO</span> iproc=0,nproc-1</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">IF</span> (g_gridpos(1,iproc) .EQ. 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      receive_map(r_source_pe,n_mess_to_receive+1) = iproc</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      receive_map(r_base_address_in_recv_array, n_mess_to_receive+1) = &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                  g_datastart(2,iproc)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      receive_map(r_number_of_elements_in_item, n_mess_to_receive+1) = 1</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      receive_map(r_stride_in_recv_array, n_mess_to_receive+1) = 0</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordflow">IF</span> (fld_type .EQ. fld_type_p) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        receive_map(r_element_length,n_mess_to_receive+1) = &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                    g_blsizep(2,iproc)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        receive_map(r_element_length,n_mess_to_receive+1) = &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    g_blsizeu(2,iproc)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      receive_map(r_base_address_in_send_array, &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                  n_mess_to_receive+1) = offy+1</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      receive_map(r_stride_in_send_array, n_mess_to_receive+1) = 0</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      n_mess_to_receive=n_mess_to_receive+1</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordflow">    ENDIF</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keywordflow">  ENDDO</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordflow">ENDIF</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;n_mess_to_send=0</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordflow">IF</span> (atwest) <span class="keywordflow">THEN</span> <span class="comment">! only processors at the left of the LPG will</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                   <span class="comment">! send anything</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    send_map(s_destination_pe,1) = gather_pe</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    send_map(s_base_address_in_send_array,1) = offy+1</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    send_map(s_number_of_elements_in_item,1) = 1</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    send_map(s_stride_in_send_array,1) = 0</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">IF</span> (fld_type .EQ. fld_type_p) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      send_map(s_element_length,1) = blsizep(2)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;     send_map(s_element_length,1) = blsizeu(2)</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordflow">    ENDIF</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    send_map(s_base_address_in_recv_array,1) = datastart(2)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    send_map(s_stride_in_recv_array,1) = 0</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    n_mess_to_send=1</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordflow">  ENDIF</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordflow">DO</span> k=1,levels</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  info=gc_none</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  flag=gc_none</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keywordflow">IF</span> (fld_type .EQ. fld_type_p) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">CALL </span>gcg_ralltoalle(                                 &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        local_field(1,k),send_map,n_mess_to_send,        &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        lasize(2,fld_type_p,<a class="code" href="namespaceum__parparams.xhtml#adb948f5f906ecfd44cbbd3d86b6925f1">halo_type_single</a>),          &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        global_field(1,k),receive_map,n_mess_to_receive, &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        glsizep(2),gc_all_proc_group,flag,info)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keyword">CALL </span>gcg_ralltoalle(                                 &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        local_field(1,k),send_map,n_mess_to_send,        &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        lasize(2,fld_type_p,<a class="code" href="namespaceum__parparams.xhtml#adb948f5f906ecfd44cbbd3d86b6925f1">halo_type_single</a>),          &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        global_field(1,k),receive_map,n_mess_to_receive, &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        glsizep(2)-1,gc_all_proc_group,flag,info)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordflow">  ENDIF</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keywordflow">ENDDO</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordflow">Return</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword">END Subroutine </span><a class="code" href="namespacercf__gather__zonal__field__mod.xhtml#afaf94837c9c73bbf14c892eee2296c86" title="Subroutine Rcf_GAther_Zonal_Field - Gathers a field onto 1 pe. ">rcf_gather_zonal_field</a></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">End Module </span><a class="code" href="namespacercf__gather__zonal__field__mod.xhtml">rcf_gather_zonal_field_mod</a></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
