<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/radiation_control/r2_set_surface_field_lw.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_f3ced4ca4d97f20ad26ce2534c2046c2.xhtml">radiation_control</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">r2_set_surface_field_lw.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="r2__set__surface__field__lw_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;        , n_points, list, n_band, ls_brdf_trunc                         &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;        , flandg, emis_land                                             &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;        , n_brdf_basis_fnc, f_brdf, rho_alb                             &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;        , land, ice_fraction, t_rad_land, t_rad_sice, t_rad_sea         &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        , l_rad_tile, n_point_tile, n_tile, list_tile, rho_alb_tile     &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        , frac_tile, t_tile                                             &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        , list_tile_outer, index_tile                                   &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        , nd_field, nd_profile, nd_band, nd_brdf_basis_fnc              &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        , nd_brdf_trunc, nd_point_tile, nd_tile                         &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        )</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacerad__pcf.xhtml" title="Radiation Program Configuration File. ">rad_pcf</a></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacetileid3z.xhtml" title="Module to define identifiers for surface tiles. ">tileid3z</a></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <span class="keywordtype">USE </span>surf_param<span class="keywordtype">, ONLY</span>: emis_sea, emis_sice</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <span class="keywordtype">USE </span>switches<span class="keywordtype">, ONLY</span>: l_ctile</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;          nd_field                                                      &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        , nd_profile                                                    &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        , nd_band                                                       &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        , nd_brdf_basis_fnc                                             &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        , nd_brdf_trunc                                                 &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        , nd_point_tile                                                 &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        , nd_tile</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                         &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;          ierr</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;          n_points                                                      &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        , n_band</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;          list(nd_field)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;          land(nd_field)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                               &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;          flandg(nd_field)                                              &amp;   <span class="comment">!           land fraction in grid box           , emis_land(nd_field)   !           Mean land emissivity in a gridbox</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                               &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;          ice_fraction(nd_field)                                        &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        , t_rad_land(nd_field)                                          &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        , t_rad_sice(nd_field)                                          &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        , t_rad_sea(nd_field)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;          ls_brdf_trunc</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                           &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;          n_brdf_basis_fnc</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                              &amp;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;          f_brdf(nd_brdf_basis_fnc, 0: nd_brdf_trunc/2                  &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            , 0: nd_brdf_trunc/2, 0: nd_brdf_trunc)                     &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        , rho_alb(nd_profile, nd_brdf_basis_fnc, nd_band)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;          l_rad_tile</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">!           Local to allow tiling options</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                           &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;          n_point_tile                                                  &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">!           Number of points to tile</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        , n_tile                                                        &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">!           Number of tiles used</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        , list_tile(nd_point_tile)                                      &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">!           List of points with surface tiling</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        , list_tile_outer(nd_point_tile)                                &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">!           List of points with surface tiling in the full list</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        , index_tile(<a class="code" href="namespacetileid3z.xhtml#afd268efcf4db3c07652927e080a1e78b" title="This module defines identifiers for different surface types as used in the radiation scheme...">npd_tile_type</a>)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">!           The indexing number of tiles of the given type</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                              &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;          rho_alb_tile(nd_point_tile, nd_brdf_basis_fnc                 &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            , nd_tile, nd_band)                                         &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">!           Weights for the basis functions of the BRDFs</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">!           at the tiled points</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        , t_tile(nd_point_tile, nd_tile)                                &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">!           Local surface temperatures on individual tiles</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        , frac_tile(nd_point_tile, nd_tile)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">!           Fractions of each tiled grid-point occupied by tiles</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">!           of the appropriate type</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">!     Local variables.</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keywordtype">INTEGER</span> ::                                                        &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;          i                                                             &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">!           Loop variable</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        , ib                                                            &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">!           Loop variable</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        , l                                                             &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">!           Loop variable</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        , ll</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">!           Loop variable</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">PARAMETER</span> :: routinename = <span class="stringliteral">&#39;r2_set_surface_field_lw&#39;</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      <span class="keywordtype">CHARACTER (LEN=240)</span> :: cmessage</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;R2_SET_SURFACE_FIELD_LW&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">!     Set the radiative characteristics of the surface.</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;   <span class="comment">!     Zero the irrelevant direct albedo.       rho_alb(1:n_points, ip_surf_alb_dir, 1:n_band) = 0.0          DO ib=1,n_band           DO i=1,n_points             rho_alb(i, ip_surf_alb_diff, ib)                            &amp;               = flandg(list(i)) * (1.0 - emis_land(list(i))) +          &amp;               (1.0 - flandg(list(i))) * (                             &amp;               (1.0 - ice_fraction(list(i))) * (1.0 - emis_sea) +      &amp;               ice_fraction(list(i)) * (1.0 - emis_sice)               &amp;               )         END DO         END DO   </span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">!     Set the surface basis functions for a Lambertian surface.</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      n_brdf_basis_fnc=1</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">!     By defining F_{1,0,0,0} to be 4, RHO_ALB beomes equal to the</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">!     diffuse albedo.</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      f_brdf(1, 0, 0, 0)=4.0</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="keywordflow">IF</span> (ls_brdf_trunc /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        cmessage = <span class="stringliteral">&#39;error: the order of surface truncation is too high.&#39;</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        ierr=<a class="code" href="namespacerad__pcf.xhtml#af61486f32e707900f50e9a1f8c3b736c">i_err_fatal</a></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="keywordflow">IF</span> (l_rad_tile) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">!       Set up the surface tiling variables. There are multiple levels</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">!       of indexing. Over all points in the domain only those in the</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">!       array list require radiative calculations and of these points</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">!       only those in the array list_file require tiling, this array</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">!       being indexed over points where radiative calculations are to</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">!       be done. list_tile_outer is indexed over the tiled points and</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">!       gives the index in the whole domain.</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">IF</span> (l_ctile) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">!         With coastal tiling we can have land, open sea or sea ice</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">!         in the grid-box.</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;          n_tile=3</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;          index_tile(<a class="code" href="namespacetileid3z.xhtml#afd7bb2deb92e9620d530de2dbb1ec586" title="Number of types of tile for which space is allocated. ">ip_ocean_tile</a>)=1</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;          index_tile(<a class="code" href="namespacetileid3z.xhtml#a7c315c4e04deec1b0253a84addc56fd4" title="Identifier for open sea. ">ip_seaice_tile</a>)=2</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;          index_tile(<a class="code" href="namespacetileid3z.xhtml#a68c9efb0282d53b1f7cd2c2c0196e020" title="Idenitifer for ice. ">ip_land_tile</a>)=3</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;          n_point_tile=0</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;          <span class="keywordflow">DO</span> ll=1, n_points</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            l=list(ll)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">IF</span> ( (flandg(l) &lt; 1.0) .AND.                                &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                 ( (flandg(l) &gt; 0.0) .OR.                               &amp;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                   ( (ice_fraction(l) &gt; 0.0) .AND.                      &amp;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                     (ice_fraction(l) &lt; 1.0) ) ) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;              n_point_tile=n_point_tile+1</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;              list_tile(n_point_tile)=ll</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;              list_tile_outer(n_point_tile)=l</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">!             Assign tiled fractions consistent with the indices above.</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;              frac_tile(n_point_tile, 1)                                &amp;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                =(1.0-flandg(l))*(1.0-ice_fraction(l))</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;              frac_tile(n_point_tile, 2)                                &amp;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                =(1.0-flandg(l))*ice_fraction(l)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;              frac_tile(n_point_tile, 3)                                &amp;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                =flandg(l)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">!         Without coastal tiling we have only open sea or sea ice</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">!         forming the coastal tiling.</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;          n_tile=2</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;          index_tile(<a class="code" href="namespacetileid3z.xhtml#afd7bb2deb92e9620d530de2dbb1ec586" title="Number of types of tile for which space is allocated. ">ip_ocean_tile</a>)=1</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;          index_tile(<a class="code" href="namespacetileid3z.xhtml#a7c315c4e04deec1b0253a84addc56fd4" title="Identifier for open sea. ">ip_seaice_tile</a>)=2</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;          n_point_tile=0</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;          <span class="keywordflow">DO</span> ll=1, n_points</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            l=list(ll)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordflow">IF</span> ( (.NOT.land(l)).AND.                                    &amp;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                 (ice_fraction(l) &gt;  0.0).AND.                          &amp;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                 (ice_fraction(l) &lt;  1.0) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;              n_point_tile=n_point_tile+1</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;              list_tile(n_point_tile)=ll</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;              list_tile_outer(n_point_tile)=l</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;              frac_tile(n_point_tile, 1)                                &amp;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                =(1.0-ice_fraction(l))</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;              frac_tile(n_point_tile, 2)                                &amp;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                =ice_fraction(l)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">! !       Now assign the tiled surface properties at points where tiling !       is active. Open sea and sea ice always need to be set with !       radiative tiling, but specific land fields are required only !       if coastal tiling is on.  !       Zero the irrelevant direct albedos</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        rho_alb_tile(1:n_point_tile, <a class="code" href="namespacerad__pcf.xhtml#a90c3dec460a1e41d008a59a60aa6176a">ip_surf_alb_dir</a>                    &amp;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;          , 1:n_tile, 1:n_band) = 0.0</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">!       The oceanic surface.</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        rho_alb_tile(1:n_point_tile, <a class="code" href="namespacerad__pcf.xhtml#a256daa047314758fead0ce5c1c5f9618">ip_surf_alb_diff</a>                   &amp;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;          , <a class="code" href="namespacetileid3z.xhtml#afd7bb2deb92e9620d530de2dbb1ec586" title="Number of types of tile for which space is allocated. ">ip_ocean_tile</a>, 1:n_band) = (1.0 - emis_sea)  <span class="comment">!       Sea-ice.         rho_alb_tile(1:n_point_tile, ip_surf_alb_diff                   &amp;           , ip_seaice_tile, 1:n_band) = (1.0 - emis_sice)  !       Land points. The test on l_ctile is required only</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">!       because without coastal tiling land points will be wholly land</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">!       and do not require radiative tiling.</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keywordflow">IF</span> ( l_ctile ) <span class="keywordflow">THEN</span>             <span class="keywordflow">DO</span> i = 1, n_point_tile               rho_alb_tile(i, <a class="code" href="namespacerad__pcf.xhtml#a256daa047314758fead0ce5c1c5f9618">ip_surf_alb_diff</a>, <a class="code" href="namespacetileid3z.xhtml#a68c9efb0282d53b1f7cd2c2c0196e020" title="Idenitifer for ice. ">ip_land_tile</a>,             &amp;                 1:n_band) = 1.0 - emis_land(list_tile_outer(i))<span class="keywordflow">             END DO</span><span class="keywordflow">           END IF</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">!       Tiled temperatures are required to handle emission from the</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">!       surface. Ensure that the indexing of the second subscript is</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">!       consistent with the assignment of index_tile above.</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        t_tile(1:n_point_tile, 1)                                       &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;          = t_rad_sea(list_tile_outer(1:n_point_tile))</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordflow">IF</span> (l_ctile) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;          t_tile(1:n_point_tile, 2)                                     &amp;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            = t_rad_sice(list_tile_outer(1:n_point_tile))</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;          t_tile(1:n_point_tile, 3)                                     &amp;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            = t_rad_land(list_tile_outer(1:n_point_tile))</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">!         Without coastal tiling, the solid part of the grid-box!         can only be sea ice.</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;          t_tile(1:n_point_tile, 2)                                     &amp;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            = t_rad_sice(list_tile_outer(1:n_point_tile))</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160; 9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">! Check error condition</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      <span class="keywordflow">IF</span> (ierr /= <a class="code" href="namespacerad__pcf.xhtml#a9e1359613149370c83ea2db18d159352">i_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename, ierr, cmessage)</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;R2_SET_SURFACE_FIELD_LW&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keyword">      END SUBROUTINE </span>r2_set_surface_field_lw</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
