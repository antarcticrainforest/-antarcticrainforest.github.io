<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/UKCA/ukca_scenario_rcp_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_3b087d695daa154bfcb7242bcfd0fbd3.xhtml">UKCA</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ukca_scenario_rcp_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ukca__scenario__rcp__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="namespaceukca__scenario__rcp__mod.xhtml">   48</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceukca__scenario__rcp__mod.xhtml" title="(c) [University of Cambridge] [2008]. All rights reserved.!&gt; This routine has been licensed to the Me...">ukca_scenario_rcp_mod</a></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>, <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>, <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>, &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                       <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>, <a class="code" href="namespaceumprintmgr.xhtml#a561deb02a924c55956927c57a4c52691">prstatus_oper</a></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">PRIVATE</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keywordtype">PUBLIC</span> :: <a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#a8d876f3ff1897568d2d7927c495a965a">ukca_scenario_rcp</a></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">PUBLIC</span> :: <a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#a744dd28c8f063a86ca89faa9d97b575d">test_scenario_rcp_ctl</a></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="namespaceukca__scenario__rcp__mod.xhtml#abffeaf78459003653bc0a813056727cc">   61</a></span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">PUBLIC</span>, <span class="keywordtype">PARAMETER</span> :: <a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#abffeaf78459003653bc0a813056727cc" title="logical to turn on testing of RCP code (default F) ">l_ukca_test_scenario_rcp</a>=.false.</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span>           :: thisfile_datacolumns  = -1</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span>           :: thisfile_firstyear    = -1</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span>           :: thisfile_lastyear     = -1</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordtype">REAL</span>   , <span class="keywordtype">SAVE</span>           :: thisfile_annualsteps  = -1.0</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span>           :: thisfile_firstdatarow = -1</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span>           :: thisfile_units        = -1</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">CHARACTER(len=12)</span>, <span class="keywordtype">SAVE</span> :: thisfile_dattype      = <span class="stringliteral">&#39;unset&#39;</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#a8d876f3ff1897568d2d7927c495a965a">ukca_scenario_rcp</a>(n_lbc_specs, lbc_specs,              &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                            i_year, i_day_number,                       &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                            lbc_mmr, perform_lumping)</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="namespaceukca__scenario__rcp__mod.xhtml#a8d876f3ff1897568d2d7927c495a965a">   78</a></span>&#160;                                                                             <span class="keywordtype">USE </span>ukca_constants<span class="keywordtype">,    ONLY</span>: c_cf2cl2,c_cf2clcfcl2, c_cf2clcf2cl, &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;          c_cf2clcf3, c_cfcl3, c_ccl4, c_meccl3, c_chf2cl, c_mecfcl2,   &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;          c_mecf2cl, c_cf2clbr, c_mecl, c_mebr, c_cf2br2, c_cf3br,      &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;          c_cf2brcf2br, c_n2o, c_ch4, c_co2, c_cf3chf2, c_ch2fcf3</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacefile__unit__handling__mod.xhtml" title="(c) [University of Cambridge] [2008]. All rights reserved.!&gt; This routine has been licensed to the Me...">file_unit_handling_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacefile__unit__handling__mod.xhtml#a095045afae447b3f3cf25edad3697ef6">get_unit</a></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <span class="keywordtype">USE </span>ukca_option_mod<span class="keywordtype">,   ONLY</span>: ukca_rcpdir, ukca_rcpfile</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">,       ONLY</span>: <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,           ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,          ONLY</span>: jprb, jpim</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span>                                                                                                                                 <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>      :: n_lbc_specs           <span class="comment">! Number of LBC species</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span>      :: lbc_mmr(n_lbc_specs)  <span class="comment">! Lower BC MMRs</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="keywordtype">CHARACTER(LEN=10)</span>, <span class="keywordtype">INTENT(IN)</span> :: lbc_specs(n_lbc_specs)<span class="comment">! LBC species       LOGICAL, INTENT(IN)      :: perform_lumping       ! T for lumping of LBCs</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>      :: i_year                <span class="comment">! year</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>      :: i_day_number          <span class="comment">! day</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">SAVE</span> :: first = .true.                                                                                                         <span class="comment">! cater for species below</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                                                       <span class="comment">! integers holding location of possible species that could be passed-in into! the lbc_spec array</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span> :: icfcl3=0, icf2cl2=0, icf2clcfcl2=0, icf2clcf2cl=0</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span> :: icf2clcf3=0, iccl4=0, imeccl3=0, ichf2cl=0           <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span> :: imecfcl2=0, imecf2cl=0, icf2clbr=0, icf2br2=0         <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span> :: icf3br=0, icf2brcf2br=0, imecl=0, imebr=0          <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span> :: in2o=0, ich4=0, ih2=0, ico2=0, ich2br2=0, in2=0      <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span> :: icf3chf2=0, ich2fcf3=0                  <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span> :: ichbr3=0                    <a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a>,<span class="keywordtype">SAVE</span> :: icos=0</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span> :: jcfcl3=0, jcf2cl2=0, jcf2clcfcl2=0, jcf2clcf2cl=0</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span> :: jcf2clcf3=0, jccl4=0, jmeccl3=0, jchf2cl=0           <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span> :: jmecfcl2=0, jmecf2cl=0, jcf2clbr=0, jcf2br2=0        <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span> :: jcf3br=0, jcf2brcf2br=0, jmecl=0, jmebr=0          <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span> :: jn2o=0, jch4=0, jco2=0</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span> :: jcf3chf2=0, jch2fcf3=0            </div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">! number of species considered for lumping purposes</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">! if more species that need to be lumped are added, then</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">! this value will need to increase, and the replace_Cl/Br and! convfac_Cl/Br arrays will need to be extended and values given</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: n_full_spec=20                                                                                                        <a class="code" href="c__fort2c__2a_8h.xhtml#a031f8951175b43076c2084a6c2173410">real</a> :: full_lbc(n_full_spec)                                                                                                                 <span class="keywordtype">INTEGER</span> :: file_unit</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">! List which species replaces which in case of lumping. 1 = F11, 2 = F12</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">! 16 = CH3Br                                                                 INTEGER, SAVE :: replace_Cl(n_full_spec) =                        &amp;</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                        (/0,0,2,2,                      &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                          2,1,1,2,                      &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                          1,1,1,0,                      &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                          0,0,1,0,                      &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                          0,0,0,0/)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span> :: replace_Br(n_full_spec) =                        &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                        (/0,0,0,0,                      &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                          0,0,0,0,                      &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                          0,0,16,16,                    &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                          16,16,0,0,                    &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                                          0,0,0,0/)                                                                                         <span class="comment">! conversions factors to use when lumping:</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">! Cl</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span> :: convfac_Cl(n_full_spec)                            <span class="comment">! Br                                                                             REAL, SAVE :: convfac_Br(n_full_spec)      ! these are filled in the IF (first) ... block</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">! local variables      ! for time interpolation</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      <span class="keywordtype">REAL</span> :: ftime                                                          <span class="keywordtype">REAL</span> :: frac      <span class="keywordtype">INTEGER</span> :: yindex <span class="comment">! year index            ! loop variables</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="keywordtype">INTEGER</span> :: i</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <span class="keywordtype">INTEGER</span> :: j</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">! error handling</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keywordtype">INTEGER</span> :: ierr</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span> :: cmessage</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">! allocated on first TS, read-in from file, and then interpolated in time</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      <span class="keywordtype">CHARACTER(len=255)</span> :: temp_string</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      <span class="keywordtype">CHARACTER(len=3)</span>,  <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: units_array(:)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <span class="keywordtype">CHARACTER(len=16)</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: species_array(:)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">! the year value that is read-in, before being converted to REAL (and increased</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">! by 0.5 as the file defines the mid-year values</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="keywordtype">INTEGER</span> :: int_year</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">! number of years</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span> :: nyear</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">! year array, needed for interpolation</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: year(:)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">! these define the order of the species in the file, and what units they are! (i.e. ppm, ppb, ppt - all in volume mixing ratio)</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: unit_conversion(:)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: rcp_specs(:)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">! species considered - these are saved and not deallocated</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: cfc11(:)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: cfc12(:)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: cfc113(:)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: cfc114(:)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: cfc115(:)</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: ccl4(:)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: meccl3(:)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: hcfc22(:)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: hcfc141b(:)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: hcfc142b(:)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: h1211(:)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: h1202(:)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: h1301(:)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: h2402(:)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: mecl(:)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: mebr(:)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: n2o(:)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: ch4(:)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: co2(:)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: cf3chf2(:)</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">SAVE</span> :: ch2fcf3(:)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">! time interpolated values</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="keywordtype">REAL</span> :: n2o_interp</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keywordtype">REAL</span> :: ch4_interp</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      <span class="keywordtype">REAL</span> :: co2_interp</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span> :: CH2Br2=0.0  <span class="comment">! invariant contribution      REAL, SAVE :: COS_mmr=0.0 ! invariant contribution                REAL, SAVE :: H2=0.0      ! invariant contribution</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span> :: N2=0.0      <span class="comment">! invariant contribution</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span> :: CHBr3=0.0   <span class="comment">! invariant contribution</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">! Body of subroutine</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_SCENARIO_RCP&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;           <span class="comment">! set-up conversion factor arrays and read-in file to get mid-year data</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      <span class="keywordflow">IF</span> (first) <span class="keywordflow">THEN</span>              <span class="comment">! SETUP REQUIRED ON FIRST TIMESTEP ONLY</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;         first = .false.                                                         convfac_cl = (/                                                &amp;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;              0.0, 0.0, 1.5*(c_cf2cl2/c_cf2clcfcl2),                    &amp;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;              (c_cf2cl2/c_cf2clcf2cl),                                  &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;              0.5*(c_cf2cl2/c_cf2clcf3),                                &amp;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;              1.3333*(c_cfcl3/c_ccl4), c_cfcl3/c_meccl3,                &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;              0.5*(c_cf2cl2/c_chf2cl),                                  &amp;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;              0.6667*(c_cfcl3/c_mecfcl2), 0.3333*(c_cfcl3/c_mecf2cl),   &amp;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;              0.3333*(c_cfcl3/c_cf2clbr), 0.0,                          &amp;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;              0.0,0.0,0.3333*(c_cfcl3/c_mecl),0.0,0.0,0.0,0.0,0.0/)    </div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;         convfac_br = (/                                                &amp;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;              0.0, 0.0, 0.0, 0.0,                                       &amp;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;              0.0, 0.0, 0.0, 0.0,                                       &amp;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;              0.0, 0.0, c_mebr/c_cf2clbr, 2.0*(c_mebr/c_cf2br2),        &amp;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;              c_mebr/c_cf3br,2.0*(c_mebr/c_cf2brcf2br), &amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;              0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;         <span class="comment">! create file</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;         rcpfile = trim(adjustl(ukca_rcpdir))//<span class="stringliteral">&#39;/&#39;</span>                      &amp;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;              //trim(adjustl(ukca_rcpfile))</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;         <span class="comment">! diagnostic output if requested</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;         <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a561deb02a924c55956927c57a4c52691">prstatus_oper</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A)&#39;</span>)                                    &amp;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                       <span class="stringliteral">&#39;Taking UKCA Lower BC values from RCP file &#39;</span>,    &amp;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                       trim(adjustl(rcpfile))</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_scenario_rcp&#39;</span>)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;         <span class="comment">! file will contain a &#39;fortran&#39; namelist which gives values</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;         <span class="comment">! needed to correctly allocate arrays etc. Read this in here</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#a2dd9d4cfdee7d381ad24d9641a54eb8e">get_rcp_nml</a>(rcpfile)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;         <span class="comment">! set up array containing years for RCP data - value is for the         ! middle of the year</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;         nyear = int(<span class="keywordtype">REAL(thisfile_lastyear - thisfile_firstyear)</span>       &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;              *thisfile_annualsteps) + 1</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;         <span class="comment">! allocate the year array - is not deallocated</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;         <span class="keyword">ALLOCATE</span>(year(1:nyear))</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;         <span class="keyword">ALLOCATE</span>(units_array(1:thisfile_datacolumns))</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;         <span class="keyword">ALLOCATE</span>(species_array(1:thisfile_datacolumns))</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;         <span class="comment">! get file unit to open file on</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespacefile__unit__handling__mod.xhtml#a095045afae447b3f3cf25edad3697ef6">get_unit</a>(file_unit)</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;         <span class="comment">! check that file exists as well when opening</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;         <span class="comment">! reset ierr to 0</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;         ierr = 0</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;         <span class="keyword">OPEN</span>(unit=file_unit,<a class="code" href="parlbcs_8h.xhtml#a9bdcf7736b544227cbd66a99e5332d4d">file</a>=trim(adjustl(rcpfile)),&amp;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;              position=<span class="stringliteral">&#39;rewind&#39;</span>,status=<span class="stringliteral">&#39;old&#39;</span>,iostat=ierr)</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;         <span class="keywordflow">IF</span> (ierr /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            cmessage=<span class="stringliteral">&#39;Error opening file &#39;</span>//trim(adjustl(rcpfile))</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_SCENARIO_RCP&#39;</span>,ierr,cmessage)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;         <span class="comment">! read header and throw this away</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;         <span class="keywordflow">DO</span> i=1,thisfile_firstdatarow-3</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <span class="keyword">READ</span>(file_unit,fmt=<span class="stringliteral">&#39;(A)&#39;</span>) temp_string</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;         <span class="comment">! read in units and species</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;         <span class="keyword">READ</span>(file_unit,*) temp_string,units_array(:)</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;         <span class="keyword">READ</span>(file_unit,*) temp_string,species_array(:)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;         <span class="keyword">ALLOCATE</span>(unit_conversion(1:thisfile_datacolumns))</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;         unit_conversion(:) = 0.0</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;         <span class="comment">! work out where species are in array, and what the unit         ! conversion is</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;         <span class="comment">! rhs column is name in file, if different from actual species         ! formula</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;         <span class="keywordflow">DO</span> i=1,thisfile_datacolumns</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keywordflow">SELECT CASE</span> (species_array(i))                           <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CFCl3           &#39;</span>,<span class="stringliteral">&#39;CFC_11          &#39;</span>)                 jcfcl3=i                                            <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2Cl2          &#39;</span>,<span class="stringliteral">&#39;CFC_12          &#39;</span>)                 jcf2cl2=i                                           <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2ClCFCl2      &#39;</span>,<span class="stringliteral">&#39;CFC_113         &#39;</span>)                 jcf2clcfcl2=i                                       <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2ClCF2Cl      &#39;</span>,<span class="stringliteral">&#39;CFC_114         &#39;</span>)                 jcf2clcf2cl=i                                       <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2ClCF3        &#39;</span>,<span class="stringliteral">&#39;CFC_115         &#39;</span>)                 jcf2clcf3=i                                         <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CCl4            &#39;</span>,<span class="stringliteral">&#39;CARB_TET        &#39;</span>)                 jccl4=i                                             <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;MeCCl3          &#39;</span>,<span class="stringliteral">&#39;MCF             &#39;</span>)                 jmeccl3=i                                           <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CHF2Cl          &#39;</span>,<span class="stringliteral">&#39;HCFC_22         &#39;</span>)                 jchf2cl=i                                           <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;MeCF2Cl         &#39;</span>,<span class="stringliteral">&#39;HCFC_142B       &#39;</span>)                 jmecf2cl=i                                          <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;MeCFCl2         &#39;</span>,<span class="stringliteral">&#39;HCFC_141B       &#39;</span>)                 jmecfcl2=i                                          <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2ClBr         &#39;</span>,<span class="stringliteral">&#39;HALON1211       &#39;</span>)                 jcf2clbr=i                                          <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2Br2          &#39;</span>,<span class="stringliteral">&#39;HALON1202       &#39;</span>)                 jcf2br2=i                                           <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF3Br           &#39;</span>,<span class="stringliteral">&#39;HALON1301       &#39;</span>)                 jcf3br=i                                            <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2BrCF2Br      &#39;</span>,<span class="stringliteral">&#39;HALON2402       &#39;</span>)                 jcf2brcf2br=i                                       <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;MeBr            &#39;</span>,<span class="stringliteral">&#39;CH3BR           &#39;</span>)                 jmebr=i                                             <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;MeCl            &#39;</span>,<span class="stringliteral">&#39;CH3CL           &#39;</span>)                 jmecl=i                                             <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF3CHF2         &#39;</span>,<span class="stringliteral">&#39;HFC125          &#39;</span>)                jcf3chf2=i</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CH2FCF3         &#39;</span>,<span class="stringliteral">&#39;HFC134a         &#39;</span>)                jch2fcf3=i                                                      <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;N2O             &#39;</span>)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;               jn2o=i                                              <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CH4             &#39;</span>)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;               jch4=i                                              <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CO2             &#39;</span>)</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;               jco2=i<span class="keywordflow">                                              END SELECT</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <span class="comment">! units</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordflow">SELECT CASE</span> (units_array(i))               <span class="keywordflow">CASE</span> (<span class="stringliteral">&#39;ppm&#39;</span>)</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;               unit_conversion(i) = <span class="keywordtype">REAL</span>(1.0e-6)</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            <span class="keywordflow">CASE</span> (<span class="stringliteral">&#39;ppb&#39;</span>)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;               unit_conversion(i) = <span class="keywordtype">REAL</span>(1.0e-9)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <span class="keywordflow">CASE</span> (<span class="stringliteral">&#39;ppt&#39;</span>)</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;               unit_conversion(i) = <span class="keywordtype">REAL</span>(1.0e-12)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keywordflow">            CASE default</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;               <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(a,a,a,a)&#39;</span>) <span class="stringliteral">&#39; INCORRECT UNITS: &#39;</span>,       &amp;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                                        units_array(i), <span class="stringliteral">&#39; FOR &#39;</span>,        &amp;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                                        species_array(i)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;               <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_scenario_rcp&#39;</span>)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;               cmessage = <span class="stringliteral">&#39;Incorrect Units in RCP scenario&#39;</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;               ierr     = i</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;               <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_SCENARIO_RCP&#39;</span>,ierr,cmessage)<span class="keywordflow">                       END SELECT</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;         <span class="comment">! species_array and units_array no longer needed</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;         <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(species_array)) <span class="keyword">DEALLOCATE</span>(species_array)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;         <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(units_array)) <span class="keyword">DEALLOCATE</span>(units_array)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;         <span class="comment">! now get data from file</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;         <span class="comment">! allocate arrays</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;         <span class="keyword">ALLOCATE</span>(rcp_specs(1:thisfile_datacolumns))</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;         <span class="keyword">ALLOCATE</span>(cfc11(1:nyear))</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;         <span class="keyword">ALLOCATE</span>(cfc12(1:nyear))</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;         <span class="keyword">ALLOCATE</span>(cfc113(1:nyear))</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;         <span class="keyword">ALLOCATE</span>(cfc114(1:nyear))</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;         <span class="keyword">ALLOCATE</span>(cfc115(1:nyear))</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;         <span class="keyword">ALLOCATE</span>(ccl4(1:nyear))</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;         <span class="keyword">ALLOCATE</span>(meccl3(1:nyear))</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;         <span class="keyword">ALLOCATE</span>(hcfc22(1:nyear))</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;         <span class="keyword">ALLOCATE</span>(hcfc141b(1:nyear))</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;         <span class="keyword">ALLOCATE</span>(hcfc142b(1:nyear))</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;         <span class="keyword">ALLOCATE</span>(h1211(1:nyear))</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;         <span class="keyword">ALLOCATE</span>(h1202(1:nyear))</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;         <span class="keyword">ALLOCATE</span>(h1301(1:nyear))</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;         <span class="keyword">ALLOCATE</span>(h2402(1:nyear))</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;         <span class="keyword">ALLOCATE</span>(mecl(1:nyear))</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;         <span class="keyword">ALLOCATE</span>(mebr(1:nyear))</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;         <span class="keyword">ALLOCATE</span>(n2o(1:nyear))</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;         <span class="keyword">ALLOCATE</span>(ch4(1:nyear))</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;         <span class="keyword">ALLOCATE</span>(co2(1:nyear))</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;         <span class="keyword">ALLOCATE</span>(cf3chf2(1:nyear))</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;         <span class="keyword">ALLOCATE</span>(ch2fcf3(1:nyear))</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;         <span class="comment">! initialise to zero</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;         cfc11 = 0.0</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;         cfc12 = 0.0</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;         cfc113 = 0.0</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;         cfc114 = 0.0</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;         cfc115 = 0.0</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;         ccl4 = 0.0</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;         meccl3 = 0.0</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;         hcfc22 = 0.0</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;         hcfc141b = 0.0</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;         hcfc142b = 0.0</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;         h1211 = 0.0</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;         h1202 = 0.0</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;         h1301 = 0.0</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;         h2402 = 0.0</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;         mecl = 0.0</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;         mebr = 0.0</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;         n2o = 0.0</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;         ch4 = 0.0</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;         co2 = 0.0</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;         cf3chf2 = 0.0</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;         ch2fcf3 = 0.0</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;         <span class="comment">! read in RCP specifications of trace gas concentrations</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;         <span class="keywordflow">DO</span> i=1,nyear</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            rcp_specs(:) = 0.0</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            <span class="keyword">READ</span>(file_unit,*) int_year,rcp_specs(:)</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            <span class="comment">! Year - VALUES ARE DEFINED FOR THE *MIDDLE* OF THE YEAR</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            year(i)  = <span class="keywordtype">REAL(int_year)</span> + 0.5</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <span class="comment">! F11</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            cfc11(i) = rcp_specs(jcfcl3)*unit_conversion(jcfcl3)*c_cfcl3</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            <span class="comment">! F12</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            cfc12(i) = rcp_specs(jcf2cl2)*unit_conversion(jcf2cl2)      &amp;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                       *c_cf2cl2</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <span class="comment">! F113</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            cfc113(i) = rcp_specs(jcf2clcfcl2)                          &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                        *unit_conversion(jcf2clcfcl2)*c_cf2clcfcl2</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            <span class="comment">! F114</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            cfc114(i) = rcp_specs(jcf2clcf2cl)                          &amp;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                        *unit_conversion(jcf2clcf2cl)*c_cf2clcf2cl</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            <span class="comment">! F115</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            cfc115(i) = rcp_specs(jcf2clcf3)*unit_conversion(jcf2clcf3) &amp;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                        *c_cf2clcf3</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            <span class="comment">! CCl4</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            ccl4(i) = rcp_specs(jccl4)*unit_conversion(jccl4)*c_ccl4</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            <span class="comment">! MeCCl3</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            meccl3(i) = rcp_specs(jmeccl3)*unit_conversion(jmeccl3)     &amp;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                        *c_meccl3</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            <span class="comment">! HCFC-22</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            hcfc22(i) = rcp_specs(jchf2cl)*unit_conversion(jchf2cl)     &amp;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                        *c_chf2cl</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <span class="comment">! HCFC-141b</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            hcfc141b(i) = rcp_specs(jmecfcl2)*unit_conversion(jmecfcl2) &amp;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                          *c_mecfcl2</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="comment">! HCFC-142b</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            hcfc142b(i) = rcp_specs(jmecf2cl)*unit_conversion(jmecf2cl) &amp;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                          *c_mecf2cl</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            <span class="comment">! H-1211</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            h1211(i) = rcp_specs(jcf2clbr)*unit_conversion(jcf2clbr)    &amp;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                       *c_cf2clbr</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            <span class="comment">! H-1202</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            h1202(i) = rcp_specs(jcf2br2)*unit_conversion(jcf2br2)      &amp;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                       *c_cf2br2</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            <span class="comment">! H-1301</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            h1301(i) = rcp_specs(jcf3br)*unit_conversion(jcf3br)*c_cf3br</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            <span class="comment">! H-2402</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            h2402(i) = rcp_specs(jcf2brcf2br)                           &amp;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                       *unit_conversion(jcf2brcf2br)*c_cf2brcf2br</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            <span class="comment">! MeCl</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            mecl(i) = rcp_specs(jmecl)*unit_conversion(jmecl)*c_mecl</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <span class="comment">! MeBr</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            mebr(i) = rcp_specs(jmebr)*unit_conversion(jmebr)*c_mebr</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            <span class="comment">! N2O</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            n2o(i) = rcp_specs(jn2o)*unit_conversion(jn2o)*c_n2o</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="comment">! CH4</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            ch4(i) = rcp_specs(jch4)*unit_conversion(jch4)*c_ch4</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <span class="comment">! CO2</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            co2(i) = rcp_specs(jco2)*unit_conversion(jco2)*c_co2</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="comment">! HFC125</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            cf3chf2(i) = rcp_specs(jcf3chf2)*unit_conversion(jcf3chf2)  &amp;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                         *c_cf3chf2</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            <span class="comment">! HFC134a</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            ch2fcf3(i) = rcp_specs(jch2fcf3)*unit_conversion(jch2fcf3)  &amp;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                         *c_ch2fcf3</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;         <span class="comment">! close file</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;         <span class="keyword">CLOSE</span>(file_unit)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;         <span class="comment">! these arrays are no longer needed, so can be deallocated</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;         <span class="keyword">DEALLOCATE</span>(rcp_specs)</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;         <span class="keyword">DEALLOCATE</span>(unit_conversion)</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;         <span class="comment">! Bromoform - constant</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;         chbr3  = 6.97904e-12     </div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;         <span class="comment">! CH2Br2 (constant)</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;         <span class="comment">!      CH2Br2 = real(3.0e-12)*C_CH2Br2    ! 3 pptv of CH2Br2         ! as SCENARIO_WMOA1:</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;         ch2br2 = 18.0186e-12    <span class="comment">! 3 pptv of CH2Br2                     </span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;         <span class="comment">! COS (constant)                                                    COS_mmr = 520.0e-12 ! lbc for COS set to 520 pptm</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;         <span class="comment">! H2 (constant)         H2 = 3.4528e-8          ! N2 (constant)         N2 = 0.754682</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! first</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;           <span class="comment">! work out values to interpolate to in time</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;      <span class="comment">! currently the routine will give values according to the model</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;      <span class="comment">! year and day - however, if the model year is outside the range</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;      <span class="comment">! in the file then the output from the routine will be as the      ! first/last point would be, i.e.</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;      <span class="comment">! if the file goes from 1750-2500 then years &lt;1750 would have the</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;      <span class="comment">! 1750 value, and years &gt;2500 would have the 2500 value</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;      ierr = 0</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;      <span class="keywordflow">IF</span> (nyear .GT. 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;         ftime = <span class="keywordtype">REAL(i_year)</span> + <span class="keywordtype">REAL</span>(i_day_number - 1)/360.         IF (ftime &lt; year(1)) THEN                                               yindex = 1                                                          frac = 0.               <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;               <span class="comment">! print warning message to this effect</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;               ierr = -1*int(year(1))</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;               <span class="keyword">WRITE</span>(cmessage,fmt=<span class="stringliteral">&#39;(A,F12.6)&#39;</span>)                          &amp;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                    <span class="stringliteral">&#39;Warning, model year is less than &#39;</span>, year(1)</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;               <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_SCENARIO_RCP&#39;</span>,ierr,cmessage)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;         <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (ftime &gt;= year(nyear)) <span class="keywordflow">THEN</span>                     yindex = nyear - 1                                    frac = 1.0</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;               <span class="comment">! print warning message to this effect</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;               ierr = -1*int(year(nyear))</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;               <span class="keyword">WRITE</span>(cmessage,fmt=<span class="stringliteral">&#39;(A,F12.6)&#39;</span>)                          &amp;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                    <span class="stringliteral">&#39;Warning, model year is greater than &#39;</span>, year(nyear)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;               <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_SCENARIO_RCP&#39;</span>,ierr,cmessage)</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keywordflow">            END IF</span>                                        <span class="keywordflow">ELSE</span>                                                    yindex = 1                                            <span class="keywordflow">DO</span> <span class="keywordflow">WHILE</span> (ftime &gt; year(yindex + 1))                      yindex = yindex + 1<span class="keywordflow">                                 END DO</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            frac = (ftime-year(yindex))/(year(yindex+1)-year(yindex))<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">! INTERPOLATE IN TIME                                                   ! F11                                                                           full_lbc(1) = (1.0 - frac)* cfc11(yindex)+frac* cfc11(yindex+1)  ! F12                                                                           full_lbc(2) = (1.0 - frac)* cfc12(yindex)+frac* cfc12(yindex+1)  ! F113                                                                          full_lbc(3) = (1.0 - frac)*cfc113(yindex)+frac*cfc113(yindex+1)  ! F114                                                                          full_lbc(4) = (1.0 - frac)*cfc114(yindex)+frac*cfc114(yindex+1)  ! F115                                                                          full_lbc(5) = (1.0 - frac)*cfc115(yindex)+frac*cfc115(yindex+1)  ! CCl4                                                                          full_lbc(6) = (1.0 - frac)*  ccl4(yindex)+frac*  ccl4(yindex+1)  ! MeCCl3                                                                        full_lbc(7) = (1.0 - frac)*meccl3(yindex)+frac*meccl3(yindex+1)  ! HCFC-22                                                                       full_lbc(8) = (1.0 - frac)*hcfc22(yindex)+frac*hcfc22(yindex+1)  ! HCFC-141b                                                                     full_lbc(9) = (1.0 - frac)*hcfc141b(yindex)+frac               &amp;</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                       *hcfc141b(yindex+1) <span class="comment">! HCFC-142b                                                                     full_lbc(10)= (1.0 - frac)*hcfc142b(yindex)+frac               &amp;</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                       *hcfc142b(yindex+1) <span class="comment">! H-1211                                                                        full_lbc(11)= (1.0 - frac)* h1211(yindex)+frac* h1211(yindex+1)  ! H-1202                                                                        full_lbc(12)= (1.0 - frac)* h1202(yindex)+frac* h1202(yindex+1)  ! H-1301                                                                        full_lbc(13)= (1.0 - frac)* h1301(yindex)+frac* h1301(yindex+1)  ! H-2402                                                                        full_lbc(14)= (1.0 - frac)* h2402(yindex)+frac* h2402(yindex+1)  ! MeCl                                                                          full_lbc(15)= (1.0 - frac)*  mecl(yindex)+frac*  mecl(yindex+1)  ! MeBr                                                                          full_lbc(16)= (1.0 - frac)*  mebr(yindex)+frac*  mebr(yindex+1)  </span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="comment">! Add 5 pptv of bromine to MeBr to account for the effect of very      ! short-lived bromine gases         IF (ich2br2 == 0) THEN                                                     full_lbc(16) = full_lbc(16) + 5.0e-12*c_mebr                         END IF</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">! CH2Br2                                                                        full_lbc(17)= ch2br2                                           ! CHBr3</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;         full_lbc(18)= chbr3</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment">! HFC125                                                                        full_lbc(19)= (1.0 - frac)*cf3chf2(yindex)+frac*cf3chf2(yindex+1)! HFC134a                                                                        full_lbc(20)= (1.0 - frac)*ch2fcf3(yindex)+frac*ch2fcf3(yindex+1)! N2O</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;         n2o_interp = (1.0 - frac)* n2o(yindex) +frac* n2o(yindex+1)    <span class="comment">! CH4</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;         ch4_interp = (1.0 - frac)* ch4(yindex) +frac* ch4(yindex+1)    <span class="comment">! CO2</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;         co2_interp = (1.0 - frac)* co2(yindex) +frac* co2(yindex+1)    </div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;      <span class="keywordflow">ELSE</span> <span class="comment">! only one year supplied</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">! F11                                                                           full_lbc(1) = cfc11(1)     ! F12                                                                           full_lbc(2) = cfc12(1)     ! F113                                          full_lbc(3) = cfc113(1)     ! F114                                          full_lbc(4) = cfc114(1)     ! F115                                          full_lbc(5) = cfc115(1)     ! CCl4                                          full_lbc(6) = ccl4(1)     ! MeCCl3                                        full_lbc(7) = meccl3(1)     ! HCFC-22                                       full_lbc(8) = hcfc22(1)     ! HCFC-141b                                     full_lbc(9) = hcfc141b(1) ! HCFC-142b                                     full_lbc(10)= hcfc142b(1) ! H-1211                                        full_lbc(11)= h1211(1)     ! H-1202                                        full_lbc(12)= h1202(1)     ! H-1301                                        full_lbc(13)= h1301(1)     ! H-2402                                        full_lbc(14)= h2402(1)     ! MeCl                                          full_lbc(15)= mecl(1)     ! MeBr                                          full_lbc(16)= mebr(1)                                          </span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">! Add 5 pptv of bromine to MeBr to account for the effect of very      ! short-lived bromine gases         IF (ich2br2 == 0) THEN                                                     full_lbc(16) = full_lbc(16) + 5.0e-12*c_mebr                         END IF</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">! CH2Br2                                                                        full_lbc(17)= ch2br2                                           ! CHBr3</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;         full_lbc(18)= chbr3</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">! HFC125                                                                        full_lbc(19)= cf3chf2(1)     ! HFC134a                                        full_lbc(20)= ch2fcf3(1)     ! N2O</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;         n2o_interp = n2o(1)    <span class="comment">! CH4</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;         ch4_interp = ch4(1)    <span class="comment">! CO2</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;         co2_interp = co2(1)<span class="keywordflow">          END IF</span> <span class="comment">! nyear&gt;1</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">! Perform lumping                                                            IF (perform_lumping) THEN                                                DO i=1,n_full_spec                                                       IF (replace_Cl(i) &gt; 0) THEN                                              full_lbc(replace_cl(i)) = full_lbc(replace_cl(i)) +         &amp;</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                                      convfac_cl(i) * full_lbc(i)<span class="keywordflow">                END IF</span>                                                                 <span class="keywordflow">IF</span> (replace_br(i) &gt; 0) <span class="keywordflow">THEN</span>                                              full_lbc(replace_br(i)) = full_lbc(replace_br(i)) +         &amp;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                                      convfac_br(i) * full_lbc(i)<span class="keywordflow">                END IF</span><span class="keywordflow">                                                               END DO</span><span class="keywordflow">                                                               END IF</span>                                                                                icfcl3 = 0                                                             icf2cl2 = 0                                                            icf2clcfcl2 = 0                                                        icf2clcf2cl = 0                                                        icf2clcf3 = 0                                                          iccl4 = 0                                                              imeccl3 = 0                                                            ichf2cl = 0                                                            imecf2cl = 0                                                           imecfcl2 = 0                                                           icf2clbr = 0                                                           icf2br2 = 0                                                            icf3br = 0                                                             icf2brcf2br = 0                                                        imebr = 0                                                              imecl = 0                                                              in2o = 0                                                               ico2 = 0                                                               ich4 = 0                                                               ih2 = 0                                                                ich2br2 = 0                                                            ichbr3 = 0</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;      <span class="keywordflow">DO</span> i=1,n_lbc_specs                                                        <span class="keywordflow">SELECT CASE</span> (lbc_specs(i))                                              <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CFCl3     &#39;</span>)                                                       icfcl3=i                                                            <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2Cl2    &#39;</span>)                                                       icf2cl2=i                                                           <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2ClCFCl2&#39;</span>)                                                       icf2clcfcl2=i                                                       <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2ClCF2Cl&#39;</span>)                                                       icf2clcf2cl=i                                                       <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2ClCF3  &#39;</span>)                                                       icf2clcf3=i                                                         <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CCl4      &#39;</span>)                                                       iccl4=i                                                             <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;MeCCl3    &#39;</span>)                                                       imeccl3=i                                                           <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CHF2Cl    &#39;</span>)                                                       ichf2cl=i                                                           <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;MeCF2Cl   &#39;</span>)                                                       imecf2cl=i                                                          <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;MeCFCl2   &#39;</span>)                                                       imecfcl2=i                                                          <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2ClBr   &#39;</span>)                                                       icf2clbr=i                                                          <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2Br2    &#39;</span>)                                                       icf2br2=i                                                           <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF3Br     &#39;</span>)                                                       icf3br=i                                                            <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF2BrCF2Br&#39;</span>)                                                       icf2brcf2br=i                                                       <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;MeBr      &#39;</span>)                                                       imebr=i                                                             <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;MeCl      &#39;</span>)                                                       imecl=i                                                             <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;N2O       &#39;</span>)                                                       in2o=i                                                              <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CH4       &#39;</span>)                                                       ich4=i                                                              <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;H2        &#39;</span>)                                                       ih2=i                                                               <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;N2        &#39;</span>)                                                       in2=i                                                               <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CO2       &#39;</span>)                                                       ico2=i                                                              <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CH2Br2    &#39;</span>)                                                       ich2br2=i                                                           <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CHBr3     &#39;</span>)</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;            ichbr3=i</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;         <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CF3CHF2   &#39;</span>)                                                      icf3chf2=i</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;         <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;CH2FCF3   &#39;</span>)                                                      ich2fcf3=i                                                       <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;COS       &#39;</span>)                                                       icos=i<span class="keywordflow">                                                           END SELECT</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                                                       <span class="comment">! Assign values to LBC array                                           ! Default values to 0                                                        lbc_mmr = 0.                                                           IF (icfcl3      &gt; 0) lbc_mmr( icfcl3    ) = full_lbc( 1) ! F11          IF (icf2cl2     &gt; 0) lbc_mmr(icf2cl2    ) = full_lbc( 2) ! F12          IF (icf2clcfcl2 &gt; 0) lbc_mmr(icf2clcfcl2) = full_lbc( 3) ! F113         IF (icf2clcf2cl &gt; 0) lbc_mmr(icf2clcf2cl) = full_lbc( 4) ! F114         IF (icf2clcf3   &gt; 0) lbc_mmr(icf2clcf3  ) = full_lbc( 5) ! F115</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;      <span class="keywordflow">IF</span> (iccl4       &gt; 0) lbc_mmr(iccl4      ) = full_lbc( 6) <span class="comment">! CCl4         IF (imeccl3     &gt; 0) lbc_mmr(imeccl3    ) = full_lbc( 7) ! MeCCl3       IF (ichf2cl     &gt; 0) lbc_mmr(ichf2cl    ) = full_lbc( 8) ! HFCF-22      IF (imecfcl2    &gt; 0) lbc_mmr(imecfcl2   ) = full_lbc( 9) ! HCFC-141b</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;      <span class="keywordflow">IF</span> (imecf2cl    &gt; 0) lbc_mmr(imecf2cl   ) = full_lbc(10) <span class="comment">! HCFC-142b</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;      <span class="keywordflow">IF</span> (icf2clbr    &gt; 0) lbc_mmr(icf2clbr   ) = full_lbc(11) <span class="comment">! H-1211       IF (icf2br2     &gt; 0) lbc_mmr(icf2br2    ) = full_lbc(12) ! H-1202       IF (icf3br      &gt; 0) lbc_mmr(icf3br     ) = full_lbc(13) ! H-1301       IF (icf2brcf2br &gt; 0) lbc_mmr(icf2brcf2br) = full_lbc(14) ! H-2402       IF (imecl       &gt; 0) lbc_mmr(imecl      ) = full_lbc(15) ! MeCl         IF (imebr       &gt; 0) lbc_mmr(imebr      ) = full_lbc(16) ! MeBr         IF (ich2br2     &gt; 0) lbc_mmr(ich2br2    ) = full_lbc(17) ! CH2Br2       IF (ichbr3      &gt; 0) lbc_mmr(ichbr3     ) = full_lbc(18) ! CHBr3</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;      <span class="keywordflow">IF</span> (icf3chf2    &gt; 0) lbc_mmr(icf3chf2   ) = full_lbc(19) <span class="comment">! HFC125       IF (ich2fcf3    &gt; 0) lbc_mmr(ich2fcf3   ) = full_lbc(20) ! HFC134a</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;      <span class="keywordflow">IF</span> (in2o        &gt; 0) lbc_mmr(in2o       ) = n2o_interp   <span class="comment">! N2O</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;      <span class="keywordflow">IF</span> (ich4        &gt; 0) lbc_mmr(ich4       ) = ch4_interp   <span class="comment">! CH4</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;      <span class="keywordflow">IF</span> (ico2        &gt; 0) lbc_mmr(ico2       ) = co2_interp   <span class="comment">! CO2</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;      <span class="comment">! COS, H2 and N2 not time varying</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;      <span class="keywordflow">IF</span> (icos        &gt; 0) lbc_mmr(icos       ) = cos_mmr      <span class="comment">! COS</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;      <span class="keywordflow">IF</span> (ih2         &gt; 0) lbc_mmr(ih2        ) = h2           <span class="comment">! H2</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;      <span class="keywordflow">IF</span> (in2         &gt; 0) lbc_mmr(in2        ) = n2           <span class="comment">! N2</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                                                                             <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_SCENARIO_RCP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="keyword">    END SUBROUTINE </span><a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#a8d876f3ff1897568d2d7927c495a965a">ukca_scenario_rcp</a></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="keyword">    SUBROUTINE </span><a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#a2dd9d4cfdee7d381ad24d9641a54eb8e">get_rcp_nml</a>(rcpfile)</div><div class="line"><a name="l00492"></a><span class="lineno"><a class="line" href="namespaceukca__scenario__rcp__mod.xhtml#a2dd9d4cfdee7d381ad24d9641a54eb8e">  492</a></span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">,      ONLY</span>: <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacefile__unit__handling__mod.xhtml" title="(c) [University of Cambridge] [2008]. All rights reserved.!&gt; This routine has been licensed to the Me...">file_unit_handling_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacefile__unit__handling__mod.xhtml#a095045afae447b3f3cf25edad3697ef6">get_unit</a></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,         ONLY</span>: jprb, jpim</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,          ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;      <span class="keywordtype">CHARACTER(LEN=256)</span>, <span class="keywordtype">INTENT(IN)</span> :: rcpfile</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;      <span class="comment">! length of rcpfile</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;      <span class="keywordtype">INTEGER</span> :: rcplen</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;      <span class="comment">! temporary strings required when reading in the file and namelist block</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;      <span class="keywordtype">CHARACTER(len=255)</span> :: c_line</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;      <span class="keywordtype">CHARACTER(len=255)</span> :: c_tmp01</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;      <span class="keywordtype">CHARACTER(len=255)</span> :: c_tmp02</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;      <span class="keywordtype">CHARACTER(len=255)</span> :: c_tmp03</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;      <span class="keywordtype">CHARACTER(len=255)</span> :: temp_string</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;      <span class="comment">! is the annualstep amount defined as a fraction?</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;      <span class="keywordtype">LOGICAL</span> :: L_annualstep_fraction</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;      <span class="keywordtype">INTEGER</span> :: frac01</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;      <span class="keywordtype">INTEGER</span> :: frac02</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;      <span class="keywordtype">INTEGER</span> :: asteps</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;      <span class="comment">! unit used to read-in file</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;      <span class="keywordtype">INTEGER</span> :: file_unit</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;      <span class="keywordtype">INTEGER</span> :: i</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;      <span class="keywordtype">INTEGER</span> :: j</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="comment">! error handling</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;      <span class="keywordtype">INTEGER</span> :: ierr</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span> :: cmessage</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;GET_RCP_NML&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;      <span class="comment">! open the file to read the namelist</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacefile__unit__handling__mod.xhtml#a095045afae447b3f3cf25edad3697ef6">get_unit</a>(file_unit)</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;      <span class="comment">! check that file exists as well when opening</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;      <span class="comment">! reset ierr to 0</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;      ierr = 0</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;      <span class="keyword">OPEN</span>(unit=file_unit,<a class="code" href="parlbcs_8h.xhtml#a9bdcf7736b544227cbd66a99e5332d4d">file</a>=trim(adjustl(rcpfile)),&amp;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;           position=<span class="stringliteral">&#39;rewind&#39;</span>,status=<span class="stringliteral">&#39;old&#39;</span>,iostat=ierr)</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;      <span class="keywordflow">IF</span> (ierr /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;         cmessage=<span class="stringliteral">&#39;Error opening file &#39;</span>//trim(adjustl(rcpfile))</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;         <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;GET_RCP_NML&#39;</span>,ierr,cmessage)</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;      <span class="comment">! work out how long the file is</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;      rcplen=0</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;      ierr=0</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;      len_loop: <span class="keywordflow">DO</span>         rcplen=rcplen+1</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;         <span class="keyword">READ</span>(file_unit,fmt=<span class="stringliteral">&#39;(A)&#39;</span>,iostat=ierr) temp_string</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;         <span class="keywordflow">IF</span> (ierr /= 0) <span class="keywordflow">EXIT</span> len_loop</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="keywordflow">      END DO</span> len_loop</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;      <span class="comment">! have got length of file, so now rewind</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;      rewind file_unit</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;      <span class="comment">! now go through and read-in the values from the &#39;namelist&#39;      ! (but not using a namelist read)</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;      i=0</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;      read_loop: <span class="keywordflow">DO</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;         i=i+1</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;         <span class="keywordflow">IF</span> (i &gt; rcplen) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;            cmessage=<span class="stringliteral">&#39;End of &#39;</span>//trim(adjustl(rcpfile))</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;            ierr    = i</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;GET_RCP_NML&#39;</span>,ierr,cmessage)</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;         <span class="keyword">READ</span>(file_unit,<span class="stringliteral">&#39;(A)&#39;</span>) c_line</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;         <span class="keywordflow">IF</span> (trim(adjustl(c_line)) == &amp;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;              <span class="stringliteral">&#39;&amp;THISFILE_SPECIFICATIONS&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;            <span class="keywordflow">DO</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;               temp_string = <span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;               <span class="keyword">READ</span>(file_unit,<span class="stringliteral">&#39;(A)&#39;</span>) c_line</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;               <span class="keywordflow">IF</span> (len(trim(adjustl(c_line))) &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                  <span class="keyword">READ</span>(c_line,*) temp_string</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;               <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                  <span class="keyword">READ</span>(c_line,*)</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="keywordflow">               END IF</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;               <span class="keywordflow">SELECT CASE</span> (trim(adjustl(temp_string)))</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;               <span class="keywordflow">CASE</span> (<span class="stringliteral">&#39;THISFILE_DATACOLUMNS&#39;</span>)</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                  <span class="keyword">READ</span>(c_line,fmt=<span class="stringliteral">&#39;(A27,I11,A1)&#39;</span>)                       &amp;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                              c_tmp01,thisfile_datacolumns,c_tmp02</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;               <span class="keywordflow">CASE</span> (<span class="stringliteral">&#39;THISFILE_FIRSTYEAR&#39;</span>)</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                  <span class="keyword">READ</span>(c_line,fmt=<span class="stringliteral">&#39;(A27,I11,A1)&#39;</span>)                       &amp;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                              c_tmp01,thisfile_firstyear,c_tmp02</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;               <span class="keywordflow">CASE</span> (<span class="stringliteral">&#39;THISFILE_LASTYEAR&#39;</span>)</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                  <span class="keyword">READ</span>(c_line,fmt=<span class="stringliteral">&#39;(A27,I11,A1)&#39;</span>)                       &amp;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                              c_tmp01,thisfile_lastyear,c_tmp02</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;               <span class="keywordflow">CASE</span> (<span class="stringliteral">&#39;THISFILE_ANNUALSTEPS&#39;</span>)</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                  <span class="comment">! more complicated here, since namelist isn&#39;t actually                  ! properly formatted if the number of annual steps is                  ! &lt;1 (i.e. gap between lines is &gt;1 year</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                  <span class="comment">! check is &#39;/&#39; character is present, and if it is, calculate</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                  <span class="comment">! the value of the fraction</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                  l_annualstep_fraction = .false.</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                  <span class="keyword">READ</span>(c_line,fmt=<span class="stringliteral">&#39;(A35,A11,A1)&#39;</span>) c_tmp01,c_tmp02,c_tmp03</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                  frac_loop: <span class="keywordflow">DO</span> j=1,len(c_tmp02)</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                     <span class="keywordflow">IF</span> (c_tmp02(j:j) == <span class="stringliteral">&#39;/&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                        l_annualstep_fraction = .true.</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                        <span class="keywordflow">EXIT</span> frac_loop</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="keywordflow">                     END IF</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="keywordflow">                  END DO</span> frac_loop</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                  <span class="keywordflow">IF</span> (l_annualstep_fraction) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                     <span class="keyword">READ</span>(c_line,fmt=<span class="stringliteral">&#39;(A27,I8,A1,I2,A1)&#39;</span>)               &amp;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                                 c_tmp01,frac01,c_tmp02,frac02,c_tmp03</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                     thisfile_annualsteps = <span class="keywordtype">REAL</span>(frac01)/<span class="keywordtype">REAL</span>(frac02)</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                     <span class="comment">! &#39;/&#39; character not present, so can read normally</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                     <span class="keyword">READ</span>(c_line,fmt=<span class="stringliteral">&#39;(A27,I11,A1)&#39;</span>) c_tmp01,asteps,c_tmp02                     thisfile_annualsteps = <span class="keywordtype">REAL</span>(asteps)</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="keywordflow">                  END IF</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;               <span class="keywordflow">CASE</span> (<span class="stringliteral">&#39;THISFILE_FIRSTDATAROW&#39;</span>)</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                  <span class="keyword">READ</span>(c_line,fmt=<span class="stringliteral">&#39;(A27,I11,A1)&#39;</span>)                       &amp;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                              c_tmp01,thisfile_firstdatarow,c_tmp02</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;               <span class="keywordflow">CASE</span> (<span class="stringliteral">&#39;THISFILE_UNITS&#39;</span>)</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                  <span class="keyword">READ</span>(c_line,fmt=<span class="stringliteral">&#39;(A35,I3,A1)&#39;</span>)                        &amp;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                              c_tmp01,thisfile_units,c_tmp02</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;               <span class="keywordflow">CASE</span> (<span class="stringliteral">&#39;THISFILE_DATTYPE&#39;</span>)</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                  <span class="keyword">READ</span>(c_line,fmt=<span class="stringliteral">&#39;(A27,A)&#39;</span>)                            &amp;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                              c_tmp01,thisfile_dattype</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;                  thisfile_dattype = trim(adjustl(thisfile_dattype))</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="keywordflow">               CASE default</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;                  <span class="keywordflow">EXIT</span> read_loop<span class="keywordflow">                 END SELECT</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="keywordflow">      END DO</span> read_loop</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;         <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I4)&#39;</span>) <span class="stringliteral">&#39;UKCA_RCP:  THISFILE_DATACOLUMNS  = &#39;</span>,&amp;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;                    thisfile_datacolumns</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;get_rcp_nml&#39;</span>)</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;         <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I4)&#39;</span>) <span class="stringliteral">&#39;UKCA_RCP:  THISFILE_FIRSTYEAR    = &#39;</span>,&amp;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                    thisfile_firstyear</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;get_rcp_nml&#39;</span>)</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;         <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I4)&#39;</span>) <span class="stringliteral">&#39;UKCA_RCP:  THISFILE_LASTYEAR     = &#39;</span>,&amp;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                    thisfile_lastyear</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;get_rcp_nml&#39;</span>)</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;         <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,F12.6)&#39;</span>) <span class="stringliteral">&#39;UKCA_RCP:  THISFILE_ANNUALSTEPS  = &#39;</span>,&amp;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                    thisfile_annualsteps</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;get_rcp_nml&#39;</span>)</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;         <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I4)&#39;</span>) <span class="stringliteral">&#39;UKCA_RCP:  THISFILE_FIRSTDATAROW = &#39;</span>,&amp;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;                    thisfile_firstdatarow</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;get_rcp_nml&#39;</span>)</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;         <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I4)&#39;</span>) <span class="stringliteral">&#39;UKCA_RCP:  THISFILE_UNITS        = &#39;</span>,&amp;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;                    thisfile_units</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;get_rcp_nml&#39;</span>)</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;         <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A)&#39;</span>) <span class="stringliteral">&#39;UKCA_RCP:  THISFILE_DATTYPE      = &#39;</span>, &amp;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                    thisfile_dattype</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;get_rcp_nml&#39;</span>)</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;      <span class="comment">! we have all the information we need from the namelist now, so close</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;      <span class="comment">! the file. It will be opened later to read-in the species concetrations</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;      <span class="keyword">CLOSE</span>(file_unit)</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;      <span class="comment">! check for errors</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;      ierr = 0</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;      temp_string = <span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;      <span class="keywordflow">IF</span> (thisfile_datacolumns &lt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;         ierr = ierr + 1</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;         temp_string = trim(adjustl(temp_string))//<span class="stringliteral">&#39; DATACOLUMNS&#39;</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;      <span class="keywordflow">IF</span> (thisfile_firstyear &lt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;         ierr = ierr + 10</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;         temp_string = trim(adjustl(temp_string))//<span class="stringliteral">&#39; FIRSTYEAR&#39;</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;      <span class="keywordflow">IF</span> (thisfile_lastyear &lt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;         ierr = ierr + 100</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;         temp_string = trim(adjustl(temp_string))//<span class="stringliteral">&#39; LASTYEAR&#39;</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;      <span class="keywordflow">IF</span> (thisfile_annualsteps &lt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;         ierr = ierr + 1000</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;         temp_string = trim(adjustl(temp_string))//<span class="stringliteral">&#39; ANNUALSTEPS&#39;</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;      <span class="keywordflow">IF</span> (thisfile_firstdatarow &lt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;         ierr = ierr + 10000</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;         temp_string = trim(adjustl(temp_string))//<span class="stringliteral">&#39; FIRSTDATAROW&#39;</span></div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;      <span class="keywordflow">IF</span> (thisfile_units &lt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;         ierr = ierr + 100000</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;         temp_string = trim(adjustl(temp_string))//<span class="stringliteral">&#39; UNITS&#39;</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;      <span class="keywordflow">IF</span> (trim(adjustl(thisfile_dattype)) == <span class="stringliteral">&#39;unset&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;         ierr = ierr + 1000000</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;         temp_string = trim(adjustl(temp_string))//<span class="stringliteral">&#39; DATTYPE&#39;</span></div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;      <span class="keywordflow">IF</span> (ierr &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;         cmessage= <span class="stringliteral">&#39;THISFILE &#39;</span>//trim(adjustl(temp_string))//<span class="stringliteral">&#39; not filled&#39;</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;         <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;GET_RCP_NML&#39;</span>,ierr,cmessage)</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;GET_RCP_NML&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="keyword">    END SUBROUTINE </span><a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#a2dd9d4cfdee7d381ad24d9641a54eb8e">get_rcp_nml</a></div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="keyword">    SUBROUTINE </span><a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#a744dd28c8f063a86ca89faa9d97b575d">test_scenario_rcp_ctl</a>(n_lbc_specs, lbc_specs,            &amp;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;                                     perform_lumping)</div><div class="line"><a name="l00690"></a><span class="lineno"><a class="line" href="namespaceukca__scenario__rcp__mod.xhtml#a744dd28c8f063a86ca89faa9d97b575d">  690</a></span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">,      ONLY</span>: <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,          ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,         ONLY</span>: jprb, jpim</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>      :: n_lbc_specs           <span class="comment">! Number of LBC species</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;      <span class="keywordtype">CHARACTER(LEN=10)</span>, <span class="keywordtype">INTENT(IN)</span> :: lbc_specs(n_lbc_specs)<span class="comment">! LBC species       LOGICAL, INTENT(IN)      :: perform_lumping       ! T for lumping of LBCs</span></div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;      <span class="keywordtype">INTEGER</span> :: file_unit</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;      <span class="comment">! loop counters</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;      <span class="keywordtype">INTEGER</span> :: i</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;      <span class="comment">! to simulate many years to calculate the lbc values</span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;      <span class="keywordtype">INTEGER</span> :: jday</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;      <span class="keywordtype">INTEGER</span> :: jyear</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;      <span class="keywordtype">REAL</span> :: lbc_c_species(n_lbc_specs)</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;      <span class="keywordtype">CHARACTER(LEN=256)</span>, <span class="keywordtype">PARAMETER</span> :: ukca_test_file=                  &amp;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;                                       <span class="stringliteral">&#39;Test_RCP_UKCA.dat&#39;</span></div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;      <span class="keywordtype">CHARACTER(LEN=256)</span>, <span class="keywordtype">PARAMETER</span> :: full_test_file=                  &amp;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;                                       <span class="stringliteral">&#39;Test_RCP_Full.dat&#39;</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;      <span class="keywordtype">CHARACTER(LEN=256)</span> :: file_header</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: n_full_specs=26</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;      <span class="keywordtype">CHARACTER(LEN=10)</span>, <span class="keywordtype">ALLOCATABLE</span> :: full_specs(:)</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="comment">! Body of subroutine                                                        IF (lhook) CALL dr_hook(&#39;TEST_SCENARIO_RCP_CTL&#39;,                  &amp;</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;                              zhook_in,zhook_handle)</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;      <span class="comment">! this routine calls the routine which tests the      ! the scenario_rcp routine by</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;      <span class="comment">! cycling through all 1700-2550 and writing the      ! lbc_mmr values out to a file so that they can be      ! plotted and compared to the ones in the original</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;      <span class="comment">! RCP specification file(s)</span></div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;      <span class="comment">! this has been separated off, as we want to call      ! twice - once for the UKCA lbc_specs and once</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;      <span class="comment">! for the full listing of lbc_specs</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;      <span class="comment">! check UKCA values, do lumping as UKCA does lumping</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;      file_header = <span class="stringliteral">&#39;LBC_MMR VALUES REQUESTED FOR USE IN UKCA&#39;</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#abe9c89ee076be33034c10c4ab759b0fd">test_scenario_rcp</a>(n_lbc_specs, lbc_specs,                    &amp;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                             perform_lumping, ukca_test_file,           &amp;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                             file_header)</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;      <span class="comment">! only write out full values if on diag print status, as well as      ! having the logical trap on the call of this routine</span></div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;         <span class="keyword">ALLOCATE</span>(full_specs(1:n_full_specs))</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;         full_specs(:) =   <span class="stringliteral">&#39;          &#39;</span></div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;         full_specs    = (/<span class="stringliteral">&#39;CFCl3     &#39;</span>,                                &amp;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                           <span class="stringliteral">&#39;CF2Cl2    &#39;</span>,                                &amp;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                           <span class="stringliteral">&#39;CF2ClCFCl2&#39;</span>,                                &amp;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;                           <span class="stringliteral">&#39;CF2ClCF2Cl&#39;</span>,                                &amp;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;                           <span class="stringliteral">&#39;CF2ClCF3  &#39;</span>,                                &amp;</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                           <span class="stringliteral">&#39;CCl4      &#39;</span>,                                &amp;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                           <span class="stringliteral">&#39;MeCCl3    &#39;</span>,                                &amp;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;                           <span class="stringliteral">&#39;CHF2Cl    &#39;</span>,                                &amp;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;                           <span class="stringliteral">&#39;MeCF2Cl   &#39;</span>,                                &amp;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;                           <span class="stringliteral">&#39;MeCFCl2   &#39;</span>,                                &amp;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;                           <span class="stringliteral">&#39;CF2ClBr   &#39;</span>,                                &amp;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;                           <span class="stringliteral">&#39;CF2Br2    &#39;</span>,                                &amp;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;                           <span class="stringliteral">&#39;CF3Br     &#39;</span>,                                &amp;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;                           <span class="stringliteral">&#39;CF2BrCF2Br&#39;</span>,                                &amp;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;                           <span class="stringliteral">&#39;MeBr      &#39;</span>,                                &amp;</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;                           <span class="stringliteral">&#39;MeCl      &#39;</span>,                                &amp;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                           <span class="stringliteral">&#39;N2O       &#39;</span>,                                &amp;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                           <span class="stringliteral">&#39;CH4       &#39;</span>,                                &amp;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                           <span class="stringliteral">&#39;H2        &#39;</span>,                                &amp;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;                           <span class="stringliteral">&#39;N2        &#39;</span>,                                &amp;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                           <span class="stringliteral">&#39;CO2       &#39;</span>,                                &amp;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                           <span class="stringliteral">&#39;CH2Br2    &#39;</span>,                                &amp;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;                           <span class="stringliteral">&#39;CHBr3     &#39;</span>,                                &amp;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                           <span class="stringliteral">&#39;CF3CHF2   &#39;</span>,                                &amp;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                           <span class="stringliteral">&#39;CH2FCF3   &#39;</span>,                                &amp;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                           <span class="stringliteral">&#39;COS       &#39;</span>/)        </div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;         <span class="comment">! check all values - DO NOT LUMP</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;         file_header = <span class="stringliteral">&#39;LBC_MMR VALUES FOR ALL CONSIDERED SPECIES&#39;</span></div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#abe9c89ee076be33034c10c4ab759b0fd">test_scenario_rcp</a>(n_full_specs, full_specs,               &amp;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;                                .false., full_test_file,                &amp;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;                                file_header)</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;         <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(full_specs)) <span class="keyword">DEALLOCATE</span>(full_specs)</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! Prstatus_Diag</span></div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;TEST_SCENARIO_RCP_CTL&#39;</span>,                  &amp;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;                              zhook_out,zhook_handle)</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;<span class="keyword">    END SUBROUTINE </span><a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#a744dd28c8f063a86ca89faa9d97b575d">test_scenario_rcp_ctl</a></div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;<span class="keyword">    SUBROUTINE </span><a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#abe9c89ee076be33034c10c4ab759b0fd">test_scenario_rcp</a>(n_lbc_specs, lbc_specs,                &amp;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;                                 perform_lumping, test_file,            &amp;</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;                                 file_header)</div><div class="line"><a name="l00786"></a><span class="lineno"><a class="line" href="namespaceukca__scenario__rcp__mod.xhtml#abe9c89ee076be33034c10c4ab759b0fd">  786</a></span>&#160;      <span class="keywordtype">USE </span>ukca_constants<span class="keywordtype">,   ONLY</span>: c_cf2cl2,c_cf2clcfcl2, c_cf2clcf2cl,  &amp;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;          c_cf2clcf3, c_cfcl3, c_ccl4, c_meccl3, c_chf2cl, c_mecfcl2,   &amp;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;          c_mecf2cl, c_cf2clbr, c_mecl, c_mebr, c_cf2br2, c_cf3br,      &amp;</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;          c_cf2brcf2br, c_n2o, c_ch4, c_co2, c_cf3chf2, c_ch2fcf3,      &amp;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;          c_cos, c_ch2br2, c_chbr3, c_h2, c_n2</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacefile__unit__handling__mod.xhtml" title="(c) [University of Cambridge] [2008]. All rights reserved.!&gt; This routine has been licensed to the Me...">file_unit_handling_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacefile__unit__handling__mod.xhtml#a095045afae447b3f3cf25edad3697ef6">get_unit</a></div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">,      ONLY</span>: <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,          ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,         ONLY</span>: jprb, jpim</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>      :: n_lbc_specs           <span class="comment">! Number of LBC species</span></div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;      <span class="keywordtype">CHARACTER(LEN=10)</span>, <span class="keywordtype">INTENT(IN)</span> :: lbc_specs(n_lbc_specs)<span class="comment">! LBC species       LOGICAL, INTENT(IN)      :: perform_lumping       ! T for lumping of lbc&#39;s</span></div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;      <span class="keywordtype">CHARACTER(LEN=256)</span>, <span class="keywordtype">INTENT(IN)</span> :: test_file       <span class="comment">! file to write to</span></div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;      <span class="keywordtype">CHARACTER(LEN=256)</span>, <span class="keywordtype">INTENT(IN)</span> :: file_header     <span class="comment">! header info for file</span></div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: lbc_mmr(:)  <span class="comment">! Lower BC mass mixing ratios</span></div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;      <span class="keywordtype">INTEGER</span> :: file_unit</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;      <span class="comment">! loop counters</span></div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;      <span class="keywordtype">INTEGER</span> :: i</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;      <span class="keywordtype">INTEGER</span> :: j</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;      <span class="comment">! to simulate many years to calculate the lbc values</span></div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;      <span class="keywordtype">INTEGER</span> :: jday</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;      <span class="keywordtype">INTEGER</span> :: jyear</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: lbc_c_species(:)</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;      <span class="comment">! FORMAT STRINGS FOR OUTPUT STATEMENTS - NEED TO BE VARIABLE LENGTH</span></div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;      <span class="comment">! format of the name of the strings</span></div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span>  :: tr_name_fmt_str</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;      <span class="comment">! format of the conversion factors      CHARACTER(LEN=80)  :: tr_conv_fmt_str</span></div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;      <span class="comment">! format of the mmr values</span></div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span>  :: tr_float_fmt_str</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;      <span class="comment">! format to number the lines for ease of reading</span></div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span>  :: tr_num_fmt_str</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;     </div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;<span class="comment">! error handling</span></div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;      <span class="keywordtype">INTEGER</span> :: ierr</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span> :: cmessage</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="comment">! Body of subroutine                                                        IF (lhook) CALL dr_hook(&#39;TEST_SCENARIO_RCP&#39;,zhook_in,zhook_handle)</span></div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;      <span class="comment">! this routine test the scenario_rcp routine by</span></div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;      <span class="comment">! cycling through all 1700-2550 and writing the      ! lbc_mmr values out to a file so that they can be      ! plotted and compared to the ones in the original</span></div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;      <span class="comment">! RCP specification file(s)</span></div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;      <span class="comment">! allocate arrays</span></div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;      <span class="keyword">ALLOCATE</span>(lbc_mmr(1:n_lbc_specs))</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;      <span class="keyword">ALLOCATE</span>(lbc_c_species(1:n_lbc_specs))</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;      <span class="comment">! populate lbc_c_species for printing purposes</span></div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;      lbc_c_species(:) = 0.0</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CFCl3     &#39;</span>) lbc_c_species = c_cfcl3</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CF2Cl2    &#39;</span>) lbc_c_species = c_cf2cl2</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CF2ClCFCl2&#39;</span>) lbc_c_species = c_cf2clcfcl2</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CF2ClCF2Cl&#39;</span>) lbc_c_species = c_cf2clcf2cl</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CF2ClCF3  &#39;</span>) lbc_c_species = c_cf2clcf3</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CCl4      &#39;</span>) lbc_c_species = c_ccl4</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;MeCCl3    &#39;</span>) lbc_c_species = c_meccl3</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CHF2Cl    &#39;</span>) lbc_c_species = c_chf2cl</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;MeCF2Cl   &#39;</span>) lbc_c_species = c_mecf2cl</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;MeCFCl2   &#39;</span>) lbc_c_species = c_mecfcl2</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CF2ClBr   &#39;</span>) lbc_c_species = c_cf2clbr</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CF2Br2    &#39;</span>) lbc_c_species = c_cf2br2</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CF3Br     &#39;</span>) lbc_c_species = c_cf3br</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CF2BrCF2Br&#39;</span>) lbc_c_species = c_cf2brcf2br</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;MeBr      &#39;</span>) lbc_c_species = c_mebr</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;MeCl      &#39;</span>) lbc_c_species = c_mecl</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;N2O       &#39;</span>) lbc_c_species = c_n2o</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CH4       &#39;</span>) lbc_c_species = c_ch4</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;H2        &#39;</span>) lbc_c_species = c_h2</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;N2        &#39;</span>) lbc_c_species = c_n2</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CO2       &#39;</span>) lbc_c_species = c_co2</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CH2Br2    &#39;</span>) lbc_c_species = c_ch2br2</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CHBr3     &#39;</span>) lbc_c_species = c_chbr3</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CF3CHF2   &#39;</span>) lbc_c_species = c_cf3chf2</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;CH2FCF3   &#39;</span>) lbc_c_species = c_ch2fcf3</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;      <span class="keywordflow">WHERE</span>(lbc_specs == <span class="stringliteral">&#39;COS       &#39;</span>) lbc_c_species = c_cos</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;      <span class="comment">! find a file unit to write to</span></div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacefile__unit__handling__mod.xhtml#a095045afae447b3f3cf25edad3697ef6">get_unit</a>(file_unit)</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;      <span class="comment">! open file to write test output to</span></div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;      ierr = 0</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;      <span class="keyword">OPEN</span>(unit=file_unit,<a class="code" href="parlbcs_8h.xhtml#a9bdcf7736b544227cbd66a99e5332d4d">file</a>=trim(adjustl(test_file)),                &amp;</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;           position=<span class="stringliteral">&#39;rewind&#39;</span>,status=<span class="stringliteral">&#39;unknown&#39;</span>,iostat=ierr)</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;      <span class="keywordflow">IF</span> (ierr /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;         cmessage=<span class="stringliteral">&#39;Error opening file &#39;</span>//trim(adjustl(test_file))</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;         <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;TEST_SCENARIO_RCP&#39;</span>,ierr,cmessage)</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;          <span class="comment">! write some header to the file</span></div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;      <span class="comment">! start header lines with #</span></div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;      <span class="comment">! generate what the format of the header lines should be first</span></div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;      <span class="comment">! e.g. &quot;#&quot;,X,A10,X,7(A20,X) etc.</span></div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;      <span class="comment">! it is necessary to generate these &#39;on the fly&#39; as there will be a      ! variable number of columns dependent on scheme used, or if the output</span></div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;      <span class="comment">! is &#39;full&#39; or just the values UKCA will see (i.e. with lumping).</span></div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;      <span class="keyword">WRITE</span>(tr_name_fmt_str,fmt=<span class="stringliteral">&#39;(A,I2,A)&#39;</span>)                             &amp;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;                           <span class="stringliteral">&#39;(A1,X,A12,X,&#39;</span>,n_lbc_specs,<span class="stringliteral">&#39;(A20,X))&#39;</span></div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;      <span class="comment">! e.g. &quot;#&quot;,X,A10,X,7(E20.10,X) etc.</span></div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;      <span class="keyword">WRITE</span>(tr_conv_fmt_str,fmt=<span class="stringliteral">&#39;(A,I2,A)&#39;</span>)                             &amp;</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;                           <span class="stringliteral">&#39;(A1,X,A12,X,&#39;</span>,n_lbc_specs,<span class="stringliteral">&#39;(E20.10,X))&#39;</span>      <span class="comment">! e.g. 2X,F12.6,7(E20.10,X) etc.</span></div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;      <span class="keyword">WRITE</span>(tr_float_fmt_str,fmt=<span class="stringliteral">&#39;(A,I2,A)&#39;</span>)                            &amp;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;                           <span class="stringliteral">&#39;(2X,F12.6,X,&#39;</span>,n_lbc_specs,<span class="stringliteral">&#39;(E20.10,X))&#39;</span>      <span class="comment">! e.g. &quot;#&quot;,X,A10,X,7(E20.10,X) etc.</span></div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;      <span class="keyword">WRITE</span>(tr_num_fmt_str,fmt=<span class="stringliteral">&#39;(A,I2,A)&#39;</span>)                              &amp;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;                           <span class="stringliteral">&#39;(A1,X,A12,X,&#39;</span>,n_lbc_specs,<span class="stringliteral">&#39;(I20,X))&#39;</span></div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;      <span class="comment">! now write header information to the file</span></div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;      <span class="keyword">WRITE</span>(file_unit,fmt=<span class="stringliteral">&#39;(A1,X,A)&#39;</span>) <span class="stringliteral">&#39;#&#39;</span>,trim(adjustl(test_file))</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;      <span class="keyword">WRITE</span>(file_unit,fmt=<span class="stringliteral">&#39;(A1,X,A)&#39;</span>) <span class="stringliteral">&#39;#&#39;</span>,trim(adjustl(file_header))</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;      <span class="keyword">WRITE</span>(file_unit,fmt=tr_name_fmt_str) <span class="stringliteral">&#39;#&#39;</span>,<span class="stringliteral">&#39;SPECIES&#39;</span>,               &amp;</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;                          (trim(adjustl(lbc_specs(i))),i=1,n_lbc_specs)</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;      <span class="keyword">WRITE</span>(file_unit,fmt=tr_conv_fmt_str) <span class="stringliteral">&#39;#&#39;</span>,<span class="stringliteral">&#39;CONV FAC&#39;</span>,              &amp;</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;                          (lbc_c_species(i),i=1,n_lbc_specs)</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;      <span class="keyword">WRITE</span>(file_unit,fmt=tr_num_fmt_str) <span class="stringliteral">&#39;#&#39;</span>,<span class="stringliteral">&#39;YEAR&#39;</span>,(i,i=1,n_lbc_specs)</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a561deb02a924c55956927c57a4c52691">prstatus_oper</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;         <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A)&#39;</span>) <span class="stringliteral">&#39;Outputting RCP lower BC data to &#39;</span>,   &amp;</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;              trim(adjustl(test_file))</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;test_scenario_rcp&#39;</span>)</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;      <span class="comment">! call the scenario_rcp routine, as if cycling through many centuries</span></div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;      <span class="comment">! do up to 2550 (i.e. 2549+360 days)</span></div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;      <span class="keywordflow">DO</span> jyear=1700,2549</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;         <span class="keywordflow">DO</span> jday=1,360</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;            <span class="keyword">CALL  </span><a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#a8d876f3ff1897568d2d7927c495a965a">ukca_scenario_rcp</a>(n_lbc_specs, lbc_specs,             &amp;</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;                            jyear, jday,                                &amp;</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;                            lbc_mmr, perform_lumping)</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;            <span class="comment">! output mmr values to our output file</span></div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;            <span class="keyword">WRITE</span>(file_unit,fmt=tr_float_fmt_str)                       &amp;</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;                                (<span class="keywordtype">REAL</span>(jyear)+<span class="keywordtype">REAL</span>(jday)/360.0),         &amp;</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;                                (lbc_mmr(i),i=1,n_lbc_specs)</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;           <span class="comment">! all finished now - close the file</span></div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;      <span class="keyword">CLOSE</span>(file_unit)</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;      <span class="comment">! deallocate arrays</span></div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;      <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(lbc_c_species)) <span class="keyword">DEALLOCATE</span>(lbc_c_species)</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;      <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(lbc_mmr)) <span class="keyword">DEALLOCATE</span>(lbc_mmr)</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;TEST_SCENARIO_RCP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;<span class="keyword">    END SUBROUTINE </span><a class="code" href="namespaceukca__scenario__rcp__mod.xhtml#abe9c89ee076be33034c10c4ab759b0fd">test_scenario_rcp</a></div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceukca__scenario__rcp__mod.xhtml" title="(c) [University of Cambridge] [2008]. All rights reserved.!&gt; This routine has been licensed to the Me...">ukca_scenario_rcp_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
