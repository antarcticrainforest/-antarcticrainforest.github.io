<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/deep_ngrad_stress-dpngstrs4a.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">deep_ngrad_stress-dpngstrs4a.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="deep__ngrad__stress-dpngstrs4a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="deep__ngrad__stress-dpngstrs4a_8f90.xhtml#ae87ad4603deed17efab99bad5bcfabf2" title="*****************************COPYRIGHT****************************** *****************************COP...">deep_ngrad_stress</a>(np_field,npnts,nconv,nterm,nlevs,         &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;                             nlcl,ntop,cu_term,cu_comp,cu_tend,        &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                             pstar,uw0,vw0,zlcl,ue,ve,visc,            &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                             mass,p,phalf,rho,timestep,                &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                             ! Input/output</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                             uw,vw,                                    &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;                             ! Output</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;                             uw_base,vw_base,uw_dp,vw_dp)</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="deep__ngrad__stress-dpngstrs4a_8f90.xhtml#ae87ad4603deed17efab99bad5bcfabf2">   15</a></span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__stash__flg__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_stash_flg_mod</a><span class="keywordtype">, ONLY</span>:                                            &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <a class="code" href="namespacecv__stash__flg__mod.xhtml#a8ad7f9b76c238f1296578bc734c44ca3" title="CMT diagnostics. ">flg_uw_dp</a>, <a class="code" href="namespacecv__stash__flg__mod.xhtml#aa98da005ff21a3429a63c19b3402d51c">flg_vw_dp</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">! Description :!   To calculate the cloud base stress for deep convection and complete</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  np_field             &amp; <span class="comment">! Full field length</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; ,npnts                &amp; <span class="comment">! Total number of points in segment</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; ,nconv                &amp; <span class="comment">! Number of convecting points</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; ,nterm                &amp; <span class="comment">! Number of points terminating</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; ,nlevs                &amp; <span class="comment">! Number of model levels</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; ,nlcl(nconv)          &amp; <span class="comment">! Lifting condensation level</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; ,ntop(nconv)          &amp; <span class="comment">! Top level of convection</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; ,cu_comp(npnts)       &amp; <span class="comment">! Index array for convecting points</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; ,cu_term(nterm)       &amp; <span class="comment">! Indices for terminating points</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; ,cu_tend(nterm)         <span class="comment">! Index of points in output array</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: &amp;  pstar(npnts)         &amp; <span class="comment">! surface pressure</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; ,uw0(npnts)           &amp; <span class="comment">! Surface shear stress x-component (m2/s2)</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; ,vw0(npnts)           &amp; <span class="comment">! Surface shear stress x-component (m2/s2)</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; ,zlcl(npnts)          &amp; <span class="comment">! Height of LCL (m)</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; ,ue(nlevs,nconv)      &amp; <span class="comment">! Environment U-wind component (m/s)</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; ,ve(nlevs,nconv)      &amp; <span class="comment">! Environment V-wind component (m/s)</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; ,visc(nlevs,nconv)    &amp; <span class="comment">! Viscosity  ,mass(nlevs,nconv)    &amp; ! Updraught mass flux (Pa/s)</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; ,p(nlevs,nconv)       &amp; <span class="comment">! Pressure on model levels (hPa)</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; ,phalf(nlevs,nconv)   &amp; <span class="comment">! Pressure on model half levels (hPa)</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; ,rho(nlevs,nconv)     &amp; <span class="comment">! Density, model uv levels (kg/m3/s)</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; ,timestep               <span class="comment">! Model timestep (s)</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::    &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  uw(nlevs,nconv)         &amp; <span class="comment">! U-component of stress</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; ,vw(nlevs,nconv)           <span class="comment">! V-component of stress</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::      &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  uw_base(nconv)          &amp; <span class="comment">! cloud base U-component of stress</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; ,vw_base(nconv)          &amp; <span class="comment">! cloud base V-component of stress</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; ,uw_dp(np_field,nlevs)   &amp; <span class="comment">! U-component of stress for stash</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; ,vw_dp(np_field,nlevs)     <span class="comment">! V-component of stress for stash</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordtype">INTEGER</span> ::       &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  i              &amp; <span class="comment">! local array index</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; ,k              &amp; <span class="comment">! Level index</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; ,j              &amp; <span class="comment">! Indexes points in compressed input arrays</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; ,m              &amp; <span class="comment">! ,n                ! Indexes points in uncompressed input arrays</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordtype">REAL</span> ::            &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  a_0(nterm)       &amp; <span class="comment">!</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; ,a_u(nterm)       &amp; <span class="comment">! Coefficients neeed for evaluating in cloud wind at cloud</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; ,a_v(nterm)       &amp; <span class="comment">! base</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; ,omg2_jump(nterm) &amp; <span class="comment">! Cloud base jump in Y component of vorticity</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; ,omg1_jump(nterm) &amp; <span class="comment">! Cloud base jump in X component of vorticity</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; ,mb(nterm)        &amp; <span class="comment">! Cloud base mass flux (m/s)</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; ,dz               &amp; <span class="comment">!</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; ,dzp1             &amp; <span class="comment">!</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; ,beta             &amp; <span class="comment">!</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; ,du               &amp; <span class="comment">!</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; ,dv               &amp; <span class="comment">!</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; ,dz1              &amp; <span class="comment">!</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; ,zeta             &amp; <span class="comment">!</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; ,a                &amp; <span class="comment">!</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; ,b                &amp; <span class="comment">!</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; ,c                &amp; <span class="comment">!</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; ,t                  <span class="comment">!</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> ::   &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  gamma=1.63         &amp; <span class="comment">!</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; ,delta=2.0          &amp; <span class="comment">!</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; ,top_press=15000.0    <span class="comment">!</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;DEEP_NGRAD_STRESS&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! Convert cloud-base mass flux from Pa/s to m/s</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordflow">DO</span> i=1,nterm</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  j=cu_term(i)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  n=cu_comp(i)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  k=nlcl(j)</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  mb(i)=<a class="code" href="typptra_8h.xhtml#a4ac6ab524823770b751a91f9f3cd54c4">mass</a>(k,j)/g</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">! Calculate jumps in vorticity components across cloud-base.</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">! &#39;Implicit technique&#39; assumes du, dv vary as exp(-t/tau) through timestep</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! needed because explicit calculation can lead to instability in du, dv! under some circumstances.</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordflow">DO</span> i=1,nterm</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  j=cu_term(i)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  n=cu_comp(i)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  dz=-(p(nlcl(j),j)-phalf(nlcl(j),j))/(g*rho(nlcl(j),j))</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  du=(ue(nlcl(j),j)-ue(nlcl(j)-1,j))</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  dv=(ve(nlcl(j),j)-ve(nlcl(j)-1,j))</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  dz1=-(phalf(nlcl(j)+1,j)-phalf(nlcl(j),j))/(g*rho(nlcl(j)+1,j))</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  zeta=-(phalf(nlcl(j)+1,j)-phalf(nlcl(j),j))/25000.0</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  b=(1.0/zlcl(n)-(exp(-zeta)-1.0)/dz1)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  a=zlcl(n)*mb(i)*b/(delta*dz)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  c=(b*(1.0-gamma/delta)-1.0/zlcl(n))*uw0(n)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor"></span>  <span class="keywordflow">IF</span> (c == 0.0.AND.(dv == 0.0.OR.du == 0.0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    omg2_jump=0.0</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    t=-log((c*(1.0-exp(-a*timestep))/a+                            &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;          du*(exp(-a*timestep)-1.0))/                              &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;         ((c-a*du)*timestep))/a</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    omg2_jump(i)=(c*(1.0-exp(-a*t))/a+du*exp(-a*t))/dz</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  c=(b*(1.0-gamma/delta)-1/zlcl(n))*vw0(n)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keywordflow">IF</span> (c == 0.0.AND.(dv == 0.0.OR.du == 0.0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    t=-log((c*(1.0-exp(-a*timestep))/a+                            &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;          dv*(exp(-a*timestep)-1.0))/                              &amp;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;          ((c-a*dv)*timestep))/a</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    omg1_jump=0.0</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    omg1_jump(i)=-(c*(1.0-exp(-a*t))/a+dv*exp(-a*t))/dz</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="preprocessor"></span>  t=-log((c*(1.0-exp(-a*timestep))/a+                              &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;          du*(exp(-a*timestep)-1.0))/                              &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;          ((c-a*du)*timestep))/a</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  omg2_jump(i)=(c*(1.0-exp(-a*t))/a+du*exp(-a*t))/dz</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  c=(b*(1.0-gamma/delta)-1/zlcl(n))*vw0(n)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  t=-log((c*(1.0-exp(-a*timestep))/a+                              &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;          dv*(exp(-a*timestep)-1.0))/                              &amp;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;          ((c-a*dv)*timestep))/a</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  omg1_jump(i)=-(c*(1.0-exp(-a*t))/a+dv*exp(-a*t))/dz</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="preprocessor"></span><span class="keywordflow">END DO</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">! Calculate cloud base stress components. Note factor of g to convect</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">! back to Pa/s.</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordflow">DO</span> i=1,nterm</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  j=cu_term(i)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  n=cu_comp(i)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  uw_base(j)=g*(zlcl(n)*(-mb(i)*omg2_jump(i)-                      &amp;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                 gamma*uw0(n)/zlcl(n))/delta+uw0(n))</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  vw_base(j)=g*(zlcl(n)*(mb(i)*omg1_jump(i)-                       &amp;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                 gamma*vw0(n)/zlcl(n))/delta+vw0(n))</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">! Calculate total stress</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">! Calculate stress profiles the function beta was again tuned to TOGA-COARE</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">! CRM simulation</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordflow">DO</span> i=1,nterm</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  m=cu_term(i)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  n=cu_tend(i)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  j=nlcl(m)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  uw(j,m)=uw_base(m)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  vw(j,m)=vw_base(m)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">! below cloud base</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keywordflow">DO</span> k=1,nlcl(m)-1</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    beta=(phalf(k,m)-pstar(m))/(phalf(j,m)-pstar(m))</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    uw(k,m)=uw(k,m)+beta*uw_base(m)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    vw(k,m)=vw(k,m)+beta*vw_base(m)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <span class="keywordflow">DO</span> k=j+1,ntop(m)+1</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    beta=exp(((phalf(k,m)-phalf(j,m))/25000.0))</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    uw(k,m)=uw(k,m)+beta*uw_base(m)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    vw(k,m)=vw(k,m)+beta*vw_base(m)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  uw(ntop(m)+2,m)=0.0</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  vw(ntop(m)+2,m)=0.0</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">! Stash diagnostics (NOTE diagnostics are in m/s for direct comparison</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">! with shallow convection stresses)</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  <span class="keywordflow">IF</span>(<a class="code" href="namespacecv__stash__flg__mod.xhtml#a8ad7f9b76c238f1296578bc734c44ca3" title="CMT diagnostics. ">flg_uw_dp</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordflow">DO</span> k=j,ntop(m)+2</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      uw_dp(n,k)=uw(k,m)/g</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <span class="keywordflow">IF</span>(<a class="code" href="namespacecv__stash__flg__mod.xhtml#aa98da005ff21a3429a63c19b3402d51c">flg_vw_dp</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordflow">DO</span> k=j,ntop(m)+2</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      vw_dp(n,k)=vw(k,m)/g</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordflow">END DO</span> <span class="comment">! nterm</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;DEEP_NGRAD_STRESS&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="deep__ngrad__stress-dpngstrs4a_8f90.xhtml#ae87ad4603deed17efab99bad5bcfabf2" title="*****************************COPYRIGHT****************************** *****************************COP...">deep_ngrad_stress</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
