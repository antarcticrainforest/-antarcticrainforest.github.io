<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/boundary_layer/bdy_layr.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_632ae183c4312d9574c0a0e7d49b8023.xhtml">boundary_layer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">bdy_layr.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="bdy__layr_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="bdy__layr_8f90.xhtml#af7679ff7941f4d90c6fcfd7f286c0a43" title="SUBROUTINE BDY_LAYR- SUBROUTINE BDY_LAYR- Purpose: Calculate turbulent fluxes of heat, moisture and momentum between (a) surface and atmosphere, (b) atmospheric levels within the boundary layer, and/or the effects of these fluxes on the primary model variables. The flux of heat into and through the soil is also modelled. Numerous related diagnostics are also calculated. ">bdy_layr</a> (                                                   &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;!&gt; IN  parameters for iterative SISL scheme</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; numcycles, cycleno,                                                    &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;!&gt; IN values defining field dimensions and subset to be processed :</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; ntiles,land_pts,nice_use,bl_levels,                                    &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;!&gt; IN values defining vertical grid of model atmosphere :</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; p,p_theta_levels, rho_rsq, rho_wet, rho_dry, rho_tq, z_uv, z_tq,       &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;!&gt; IN U, V and W momentum fields.</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; u_p, v_p, u_1_px, v_1_px, u_0_px, v_0_px,                              &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;!&gt; IN soil/vegetation/land surface data :</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; land_index,st_levels,sm_levels,canopy,catch,catch_snow,hcon,smvccl,    &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; smvcst,smvcwt,sthf,sthu,sil_orog_land,ho2r2_orog,sd_orog,              &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;!&gt; IN for dust scheme</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; soil_layer_moisture,                                                   &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;!&gt; IN sea/sea-ice data :</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; ice_fract_cat, k_sice,                                                 &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;!&gt; IN cloud data :</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; cf,q,qcf,qcl,t,                                                        &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;!&gt; IN everything not covered so far :</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; co2_mmr,photosynth_act_rad,pstar,rad_sice,                             &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; rad_hr,micro_tends,lq_mix_bl,zh_prev,ddmfx,nlcl,zhpar,z_lcl,           &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;!&gt; IN SCM variables</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; flux_e, flux_h, l_flux_bc, l_spec_z0, z0m_scm, z0h_scm,                &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;!&gt; IN variables required for CLASSIC aerosol/mineral dust schemes</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; l_aero_classic,l_dust,l_dust_diag,soil_clay,soil_sand,                 &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; dust_mrel1,dust_mrel2,dust_mrel3,dust_mrel4,dust_mrel5,dust_mrel6,     &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;!&gt; IN additional variables for JULES</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; snow_tile,z0_tile,z0h_tile_bare,lw_down,                               &amp; sw_tile,t_soil,ti,tstar,tstar_tile,                                    &amp; co2_3d,l_co2_interactive,l_phenol,l_triffid,asteps_since_triffid,      &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; cs,frac,canht_ft,lai_ft,fland,flandg,z_land,albsoil,cos_zenith_angle,  &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;!&gt; IN STASH flags</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; sfme,sq1p5,st1p5,su10,sv10,sz0heff,                                    &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;!&gt; SCM Diagnostics (dummy values in full UM) and <a class="code" href="stash_8f90.xhtml#aeb6381a2ce8a30249b8dbaff0df2ebb5" title="Subroutine STASH -!&gt; ">stash</a> diags</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; nscmdpkgs,l_scmdiags, bl_diag,                                         &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; gs,z0msea,w, <a class="code" href="typ__atm__fields_8h.xhtml#a1d13dba4219cf2e3ed6ab69d2d9ce035">etadot</a>,tstar_sea,tstar_sice_cat,                          &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; zh, ntpar,l_shallow,cumulus,error,                                     &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; g_leaf_acc,npp_ft_acc,resp_w_ft_acc,resp_s_acc,l_q10,                  &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; e_trb, tsq_trb, qsq_trb, cov_trb, zhpar_shcu,                          &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; flandfac, fseafac, rhokm_land, rhokm_ssi, cdr10m, tau_fd_x, tau_fd_y,  &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; rhogamu, rhogamv, f_ngstress,                                          &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; fqw,fqw_tile,epot_tile, ftl,ftl_tile,rhokh,rhokm,                      &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; rib_gb,vshr,zht, shallowc,cu_over_orog,                                &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; bl_type_1,bl_type_2,bl_type_3,bl_type_4,bl_type_5,bl_type_6,           &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; bl_type_7, z0m_eff_gb,z0h_eff_gb,                                      &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; fme,                                                                   &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; wt_ext,ra,                                                             &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; rho_aresist,aresist,resist_b, ntml, kent, we_lim, t_frac, zrzi,        &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; kent_dsc, we_lim_dsc, t_frac_dsc, zrzi_dsc, zhsc,                      &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; r_b_dust,dust_flux,dust_emiss_frac,                                    &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; u_s_t_tile,u_s_t_dry_tile,u_s_std_tile,                                &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; alpha1,ashtf,bq_gb,bt_gb, dtrdz_charney_grid,rdz_charney_grid,         &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; dtrdz_u,dtrdz_v,rdz_u,rdz_v,                                           &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; fraca,rhokh_tile,smc,chr1p5m,resfs,z0hssi,z0mssi, z1_tq,ustargbm,      &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; radnet_sice,rib_tile,rho_aresist_tile,aresist_tile,                    &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; resist_b_tile,alpha1_sice,ashtf_tile,fqw_ice,                          &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; ftl_ice,resft,rhokh_sice,z0h_tile,z0m_gb,z0m_tile,chr1p5m_sice,        &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; g_leaf,gpp_ft,npp_ft, resp_p_ft,resp_s,resp_s_tot,resp_w_ft,           &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; gc,canhc_tile,wt_ext_tile,flake, tile_index,tile_pts,tile_frac,fsmc,   &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; rib_ssi,vshr_land,vshr_ssi,tstar_land,tstar_ssi,                       &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; dtstar_tile,dtstar,hcons,emis_tile,emis_soil,                          &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; gpp,npp,resp_p,t1_sd,q1_sd,ntdsc,nbdsc,wstar,wthvs,uw0,vw0             &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; )</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="bdy__layr_8f90.xhtml#af7679ff7941f4d90c6fcfd7f286c0a43">   89</a></span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">, ONLY</span>:                                      &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;   udims, vdims, tdims, qdims, pdims, pdims_s, pdims_l, wdims</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span> : cp</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: lc</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceatm__step__local.xhtml" title="Declares variables and allocatable arrays which are local to atm_step!&gt; (and below) ...">atm_step_local</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceatm__step__local.xhtml#acc69694f1f2bbeecdbf17757ca10e303">dim_cs1</a>, <a class="code" href="namespaceatm__step__local.xhtml#afb2f57aeece69e9a6be83f45ab953a3d">dim_cs2</a>, <a class="code" href="namespaceatm__step__local.xhtml#a7978690bf923d7b85ff11a74494656f6">land_pts_trif</a>, <a class="code" href="namespaceatm__step__local.xhtml#a254d7b89e5ca568b9aded8940d561479">npft_trif</a>, &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;       <a class="code" href="namespaceatm__step__local.xhtml#aa59d7912d847ed3441df5598d5f4dbb5">co2_dim_len</a>,<a class="code" href="namespaceatm__step__local.xhtml#a7e7d818fbd1228458af54bdbdedb32b9">co2_dim_row</a></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keywordtype">USE </span>bl_diags_mod<span class="keywordtype">, ONLY</span> : strnewbldiag</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacebl__option__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">bl_option_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacebl__option__mod.xhtml#a19e484e62400520cdd949936b797caad">i_bl_vn</a>,                                     &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                           <a class="code" href="namespacebl__option__mod.xhtml#abe3f45dd255b7a05347c20b20f97cf9a">i_bl_vn_1a</a>,                                  &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                           <a class="code" href="namespacebl__option__mod.xhtml#a61e571780cf9b0a4b1a336a6bd480580">i_bl_vn_9b</a>,                                  &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                           <a class="code" href="namespacebl__option__mod.xhtml#a317de8e0233203144f76cb5ebdc5a446">i_bl_vn_9c</a>,                                  &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                           <a class="code" href="namespacebl__option__mod.xhtml#ac0a3cc253b58569885342a82d27e98e9">on</a></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordtype">USE </span>nstypes<span class="keywordtype">, ONLY</span>: ntype, npft</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordtype">USE </span>switches<span class="keywordtype">, ONLY</span>: iscrntdiag, i_modiscopt</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacedust__parameters__mod.xhtml" title="A module containing constants/parameters used in the dust scheme. ">dust_parameters_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacedust__parameters__mod.xhtml#acd60b6ea942dd71f3d3f244e09990bf7" title="Number of discrete particle size divisions (bins) ">ndiv</a>, <a class="code" href="namespacedust__parameters__mod.xhtml#a240a7a2c93599e6a4403dc9f84e01947">ndivh</a>, <a class="code" href="namespacedust__parameters__mod.xhtml#a06e6f42f88fa6898f73704c9b4022d6e">ndivl</a></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#include &quot;screendiag.h&quot;</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor"></span><span class="comment">!  Inputs :! (a) Defining horizontal grid and subset thereof to be processed.</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;   numcycles,                                                           &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                  <span class="comment">! Number of cycles (iterations) for iterative SISL.</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;   cycleno</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                  <span class="comment">! Iteration no</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">! Switch for calculating exchange coeffs from latest values.</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;   lq_mix_bl</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;   ntiles,                                                              &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                   <span class="comment">! IN No. of land-surface tiles</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;   land_pts,                                                            &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                   <span class="comment">! IN No.of land points in whole grid.</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;   nice_use,                                                            &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                                   <span class="comment">! IN No. of sea ice categories used fully</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                                   <span class="comment">!    in surface calculations</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;   bl_levels,                                                           &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                   <span class="comment">! IN Max. no. of &quot;boundary&quot; levels</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;   nlcl(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                 <span class="comment">! IN No of levels to LCL</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">! (b) Defining vertical grid of model atmosphere.</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    p(pdims_s%i_start:pdims_s%i_end,pdims_s%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>:pdims_s%j_end,      &amp;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      pdims_s%k_start:bl_levels+1),                                     &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    p_theta_levels(tdims%i_start:tdims%i_end,                           &amp;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                   tdims%j_start:tdims%j_end, bl_levels+1),             &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    rho_rsq(pdims_s%i_start:pdims_s%i_end,                              &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            pdims_s%j_start:pdims_s%j_end,pdims_s%k_start:bl_levels+1), &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                         <span class="comment">! IN Density * R**2</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    rho_wet(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end,        &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            bl_levels+1),                                               &amp;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                        <span class="comment">! wet density on rho levels (kg/m3)</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    rho_dry(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,        &amp;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                pdims%k_start:bl_levels+1),                             &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                        <span class="comment">! dry density on rho levels (kg/m3)</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  rho_tq(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),&amp;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                <span class="comment">! density on TQ (ie. theta) levels;</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                                <span class="comment">!    used in RHOKM so wet density</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  z_uv(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),  &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                                    <span class="comment">! Z_uv(*,K) is height of half</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                    <span class="comment">! level k-1/2.</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  z_tq(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),  &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                <span class="comment">! Z_tq(*,K) is height of full level k.</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    u_p(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,            &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        bl_levels),                                                     &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    v_p(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,            &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        bl_levels),                                                     &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  u_1_px(pdims_s%i_start:pdims_s%i_end,pdims_s%j_start:pdims_s%j_end),  &amp;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  v_1_px(pdims_s%i_start:pdims_s%i_end,pdims_s%j_start:pdims_s%j_end),  &amp;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  u_0_px(pdims_s%i_start:pdims_s%i_end,pdims_s%j_start:pdims_s%j_end),  &amp;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  v_0_px(pdims_s%i_start:pdims_s%i_end,pdims_s%j_start:pdims_s%j_end)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">! (c) Soil/vegetation/land surface parameters (mostly constant).</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;   land_index(land_pts)      <span class="comment">! IN LAND_INDEX(I)=J =&gt; the Jth</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">!                                     point in P_FIELD is the Ith</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">!                                     land point.</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;   st_levels,                                                           &amp;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                                   <span class="comment">! IN No. of deep soil temp. levels</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;   sm_levels                   <span class="comment">! IN No. of soil moisture levels</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;   canopy(land_pts,ntiles),                                             &amp;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                                   <span class="comment">! IN Surface/canopy water for</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                                   <span class="comment">!    snow-free land tiles (kg/m2)</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;   catch(land_pts,ntiles),                                              &amp;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                   <span class="comment">! IN Surface/canopy water capacity</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                                   <span class="comment">!    of snow-free land tiles (kg/m2).</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;   catch_snow(land_pts,ntiles),                                         &amp;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                                   <span class="comment">! IN Snow interception capacity of</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                                   <span class="comment">!    NLT tile (kg/m2).</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;   hcon(land_pts),                                                      &amp;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                                 <span class="comment">! IN Soil thermal conductivity</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">!                                     (W/m/K).</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;   smvccl(land_pts,sm_levels),                                          &amp;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                                 <span class="comment">! IN Critical volumetric SMC (m3/m3</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">!                                     of soil).</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;   smvcst(land_pts,sm_levels),                                          &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                 <span class="comment">! IN Volumetric saturation point</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">!                                     (m3/m3 of soil).</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;   smvcwt(land_pts,sm_levels),                                          &amp;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                 <span class="comment">! IN Volumetric wilting point (m3/m3</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">!                                     of soil).</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;   sthf(land_pts,sm_levels),                                            &amp;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                 <span class="comment">! IN Frozen soil moisture content of</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">!                                     each layer as a fraction of</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">!                                     saturation.</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;   sthu(land_pts,sm_levels),                                            &amp;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                 <span class="comment">! IN Unfrozen soil moisture content</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">!                                     of each layer as a fraction of</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">!                                     saturation.</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;   sil_orog_land(land_pts),                                             &amp;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                                 <span class="comment">! IN Silhouette area of unresolved</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">!                                     orography per unit horizontal area</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">!                                     on land points only.</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;   ho2r2_orog(land_pts),                                                &amp;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                 <span class="comment">! IN Standard Deviation of orography.</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">!                                     equivilent to peak to trough</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">!                                     height of unresolved orography</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">!                                     devided by 2SQRT(2) on land</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">!                                     points only (m)</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;   sd_orog(land_pts),                                                   &amp;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                                 <span class="comment">! IN Standard Deviation of unresolved</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">!                                     orography on land points only (m)</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;   soil_layer_moisture(land_pts,sm_levels),                             &amp;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                                 <span class="comment">!IN soil moisture per layer (kg m-2)</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;   zh_prev(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),        &amp;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                  <span class="comment">! IN boundary layer height from previous timestep</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;   <a class="code" href="arg__atm__fields_8h.xhtml#aa9f235bd264a2caee1c2c6f9023752e2">ddmfx</a>(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                  <span class="comment">! IN Convective downdraught mass-flux at cloud base</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    zhpar(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                 <span class="comment">! IN Height of top of initial</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                                 <span class="comment">!     parcel ascent</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    z_lcl(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                                 <span class="comment">! IN Height of LCL</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">! (d) Sea/sea-ice data.</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;   ice_fract_cat(pdims%i_start:pdims%i_end,                             &amp;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                 pdims%j_start:pdims%j_end,nice_use),                   &amp;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                                  <span class="comment">! IN Fraction of gridbox covered by</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">!                                      category sea-ice (decimal fraction).</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                       <span class="comment">! If nice_use=1, this is the sum of the categories</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;   k_sice(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,nice_use)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                   <span class="comment">! IN sea ice surface layer effective</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">!                                  !    conductivity (W/m2/K)</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">! (e) Cloud data.</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;   cf(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,bl_levels),   &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                                          <span class="comment">! IN Cloud fraction (decimal).</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;   qcf(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,bl_levels),  &amp;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                                          <span class="comment">! IN Cloud ice (kg per kg air)</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;   qcl(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,bl_levels),  &amp;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                                          <span class="comment">! IN Cloud liquid water</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;   q(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,bl_levels),    &amp;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                                          <span class="comment">! IN specific humidity</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;   t(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end,bl_levels)</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                                          <span class="comment">! IN temperature</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">! (f) Atmospheric + any other data not covered so far, incl control.</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;   co2_mmr,                                                             &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                   <span class="comment">! IN CO2 Mass Mixing Ratio</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;   photosynth_act_rad(pdims%i_start:pdims%i_end,                        &amp;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                      pdims%j_start:pdims%j_end),                       &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                                   <span class="comment">! IN Net downward shortwave radiation</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                                   <span class="comment">!    in band 1 (w/m2).</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;   pstar(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                                    <span class="comment">! IN Surface pressure (Pascals).</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;   rad_sice(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,        &amp;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            nice_use),                                                  &amp;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                                   <span class="comment">! IN Surface net shortwave and</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                                   <span class="comment">!    downward LWradiation for</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                                   <span class="comment">!    sea-ice (W/sq m).</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;   rad_hr(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end,          &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;          2,bl_levels),                                                 &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                                    <span class="comment">! IN (LW,SW) rad heating rate (K/s)</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    micro_tends(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,    &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                2, bl_levels),                                          &amp;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                           <span class="comment">! Tendencies from microphys within BL levels</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                           <span class="comment">! (TL, K/s; QW, kg/kg/s)</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    soil_clay(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),    &amp;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    soil_sand(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),    &amp;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    dust_mrel1(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    dust_mrel2(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    dust_mrel3(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    dust_mrel4(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    dust_mrel5(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    dust_mrel6(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;   flux_e(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                                   <span class="comment">! IN Surf. lat. heat flux   (W/m^2)</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;   flux_h(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                   <span class="comment">! IN Surf. sens. heat flux  (W/m^2)</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;   tstar(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end),          &amp;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                                   <span class="comment">! IN Surface temperature (K).</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;   tstar_tile(land_pts,ntiles),                                         &amp;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                                   <span class="comment">! IN Surface tile temperatures</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;   z_land(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                                   <span class="comment">! IN    Land height (m).</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;   z0m_scm(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),        &amp;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;   z0h_scm(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),        &amp;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                                   <span class="comment">! IN   Fixed sea-surface roughness</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                                   <span class="comment">!      lengths for momentum and</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                                   <span class="comment">!      scalars (m, from SCM namelist)</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;   t_soil(land_pts,sm_levels),                                          &amp;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                                   <span class="comment">! IN Soil temperatures (K).</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;   ti(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                                   <span class="comment">! IN Sea-ice surface layer</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;   l_flux_bc,                                                           &amp;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                                   <span class="comment">! IN Switches for prescribed surface</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;   l_spec_z0,                                                           &amp;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                                 <span class="comment">!    fluxes and roughness lengths</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;   l_aero_classic,                                                      &amp;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                                 <span class="comment">! IN Switch for CLASSIC aerosol scheme</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;   l_dust,                                                              &amp;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                                 <span class="comment">! IN Switch for prognostic mineral dust</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;   l_dust_diag</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                                 <span class="comment">! IN Switch for diagnostic mineral dust</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                                 <span class="comment">!    lifting</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">! Additional JULES variables</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;   asteps_since_triffid</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                                   <span class="comment">! IN Number of atmospheric</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                                   <span class="comment">!    timesteps since last call</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                                   <span class="comment">!    to TRIFFID.</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;   snow_tile(land_pts,ntiles),                                          &amp;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                                   <span class="comment">! IN Lying snow on tiles (kg/m2)</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;   z0_tile(land_pts,ntiles),                                            &amp;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                                   <span class="comment">! IN Tile roughness lengths (m).</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;   z0h_tile_bare(land_pts,ntiles),                                      &amp;                                   <span class="comment">! IN Tile thermal roughness                                    ! lengths (m) without snow.   lw_down(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),        &amp;</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                                   <span class="comment">! IN Surface downward LW radiation</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                                   <span class="comment">!    (W/m2).</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;   sw_tile(land_pts,ntiles),                                            &amp;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                                   <span class="comment">! IN Surface net SW radiation on</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                                   <span class="comment">!    land tiles (W/m2).</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;   co2_3d(<a class="code" href="namespaceatm__step__local.xhtml#aa59d7912d847ed3441df5598d5f4dbb5">co2_dim_len</a>,<a class="code" href="namespaceatm__step__local.xhtml#a7e7d818fbd1228458af54bdbdedb32b9">co2_dim_row</a>),                                     &amp;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                                   <span class="comment">! IN 3D CO2 field if required.</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;   cs(land_pts,<a class="code" href="namespaceatm__step__local.xhtml#acc69694f1f2bbeecdbf17757ca10e303">dim_cs1</a>),                                                &amp;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                              <span class="comment">! IN Soil carbon (kg C/m2).</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;   frac(land_pts,ntype),                                                &amp;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                                   <span class="comment">! IN Fractions of surface types.</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;   fland(land_pts),                                                     &amp;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                                   <span class="comment">! IN Land fraction on land tiles.</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;   flandg(pdims_s%i_start:pdims_s%i_end,pdims_s%j_start:pdims_s%j_end), &amp;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                                   <span class="comment">! IN Land fraction on all tiles.</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;   canht_ft(land_pts,npft),                                             &amp;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                                   <span class="comment">! IN Canopy height (m)</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;   lai_ft(land_pts,npft),                                               &amp;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                                   <span class="comment">! IN Leaf area index</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;   albsoil(land_pts),                                                   &amp;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                                   <span class="comment">! Soil albedo.</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;   cos_zenith_angle(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                                   <span class="comment">! Cosine of the zenith angle</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;   l_co2_interactive,                                                   &amp;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                                   <span class="comment">! IN Switch for 3D CO2 field</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;   l_phenol,                                                            &amp;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                                   <span class="comment">! IN Indicates whether phenology</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                                   <span class="comment">!    in use</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;   l_triffid,                                                           &amp;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                                   <span class="comment">! IN Indicates whether TRIFFID</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                                   <span class="comment">!    in use.</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;   sfme,                                                                &amp;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;               <span class="comment">! IN Flag for FME (q.v.).</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;   sz0heff,                                                             &amp;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;               <span class="comment">! IN Flag for Z0H_EFF</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;   sq1p5,                                                               &amp;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;               <span class="comment">! IN Flag for Q1P5M (q.v.)</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;   st1p5,                                                               &amp;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;               <span class="comment">! IN Flag for T1P5M (q.v.)</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;   su10,                                                                &amp;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;               <span class="comment">! IN Flag for U10M (q.v.)</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;   sv10    <span class="comment">! IN Flag for V10M (q.v.)</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment">! Additional variables for SCM diagnostics which are dummy in full UM</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;   nSCMDpkgs             <span class="comment">! No of SCM diagnostics packages</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;   L_SCMDiags(nscmdpkgs) <span class="comment">! Logicals for SCM diagnostics packages</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">!     Declaration of new BL diagnostics.</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;  type(strnewbldiag), <span class="keywordtype">INTENT(INOUT)</span> :: bl_diag</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment">!  In/outs :  REAL, INTENT(INOUT) ::                                                &amp;</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;   gs(land_pts),                                                        &amp;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                                   <span class="comment">! INOUT &quot;Stomatal&quot; conductance to</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                                   <span class="comment">!        evaporation (m/s).</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;   tstar_sea(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end),      &amp;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                                   <span class="comment">! INOUT  Open sea sfc temperature (K).</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;   tstar_sice_cat(tdims%i_start:tdims%i_end,                            &amp;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                  tdims%j_start:tdims%j_end,nice_use),                  &amp;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                                   <span class="comment">! INOUT Sea-ice sfc temperature (K).</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    z0msea(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),        &amp;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                                   <span class="comment">! INOUT Sea-surface roughness</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                                   <span class="comment">!       length for momentum (m).</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                                   <span class="comment">!       NB: same storage is used</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                                   <span class="comment">!       for Z0V, so the intent is</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                                   <span class="comment">!       IN for land points.</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    w(wdims%i_start:wdims%i_end,wdims%j_start:wdims%j_end,0:bl_levels), &amp;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <a class="code" href="typ__atm__fields_8h.xhtml#a1d13dba4219cf2e3ed6ab69d2d9ce035">etadot</a>(wdims%i_start:wdims%i_end,wdims%j_start:wdims%j_end,         &amp;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;           0:bl_levels),                                                &amp;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    zh(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                                 <span class="comment">! INOUT Height above surface of top of</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment">!                                   boundary layer (metres).</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                             &amp;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;   error                    <span class="comment">! OUT 0 - AOK;</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                                <span class="comment">!     1 to 7  - bad grid definition</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                                <span class="comment">!     detected;</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="comment">! INOUT variables on TKE based turbulence schemes</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;   e_trb(pdims_l%i_start:pdims_l%i_end,pdims_l%j_start:pdims_l%j_end,   &amp;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;           bl_levels),                                                  &amp;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                    <span class="comment">! TKE defined on theta levels K-1</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;   tsq_trb(pdims_l%i_start:pdims_l%i_end,pdims_l%j_start:pdims_l%j_end, &amp;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;           bl_levels),                                                  &amp;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                    <span class="comment">! Self covariance of liquid potential temperature</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                    <span class="comment">! (thetal&#39;**2) defined on theta levels K-1</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;   qsq_trb(pdims_l%i_start:pdims_l%i_end,pdims_l%j_start:pdims_l%j_end, &amp;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;           bl_levels),                                                  &amp;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                    <span class="comment">! Self covariance of total water</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                    <span class="comment">! (qw&#39;**2) defined on theta levels K-1</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;   cov_trb(pdims_l%i_start:pdims_l%i_end,pdims_l%j_start:pdims_l%j_end, &amp;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;           bl_levels),                                                  &amp;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                    <span class="comment">! Correlation between thetal and qw</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                    <span class="comment">! (thetal&#39;qw&#39;) defined on theta levels K-1</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;   zhpar_shcu(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                    <span class="comment">! Height of mixed layer used to evaluate</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                    <span class="comment">! the non-gradient buoyancy flux</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                             &amp;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    cumulus(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),       &amp;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                                   <span class="comment">! INOUT Logical switch for trade Cu</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    l_shallow(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),     &amp;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                           <span class="comment">! INOUT Flag to indicate shallow convection</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;   l_q10                       <span class="comment">! INOUT Indicates Q10 for soil resp&#39;n</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                             &amp;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;   ntpar(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                                 <span class="comment">! INOUT Top level of initial parcel</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                                 <span class="comment">!  ascent. Used in convection scheme.</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment">! Additional JULES variables</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;   g_leaf_acc(land_pts,npft),                                           &amp;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                                   <span class="comment">! INOUT Accumulated G_LEAF</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;   npp_ft_acc(<a class="code" href="namespaceatm__step__local.xhtml#a7978690bf923d7b85ff11a74494656f6">land_pts_trif</a>,<a class="code" href="namespaceatm__step__local.xhtml#a254d7b89e5ca568b9aded8940d561479">npft_trif</a>),                                 &amp;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                                   <span class="comment">! INOUT Accumulated NPP_FT</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;   resp_w_ft_acc(<a class="code" href="namespaceatm__step__local.xhtml#a7978690bf923d7b85ff11a74494656f6">land_pts_trif</a>,<a class="code" href="namespaceatm__step__local.xhtml#a254d7b89e5ca568b9aded8940d561479">npft_trif</a>),                              &amp;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                                   <span class="comment">! INOUT Accum RESP_W_FT</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;   resp_s_acc(<a class="code" href="namespaceatm__step__local.xhtml#a7978690bf923d7b85ff11a74494656f6">land_pts_trif</a>,<a class="code" href="namespaceatm__step__local.xhtml#acc69694f1f2bbeecdbf17757ca10e303">dim_cs1</a>) <span class="comment">! INOUT Accumulated RESP_S</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">!  Outputs :!  (a) Calculated anyway (use STASH space from higher level) :  REAL, INTENT(OUT) ::                                                  &amp;</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;   fqw(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),  &amp;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                                   <span class="comment">! OUT Moisture flux between layers</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">!                                     (kg per square metre per sec).</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">!                                     FQW(,1) is total water flux</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">!                                     from surface, &#39;E&#39;.</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;   fqw_tile(land_pts,ntiles),                                           &amp;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                                   <span class="comment">! OUT Surface FQW for land tiles</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;   epot_tile(land_pts,ntiles),                                          &amp;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                                   <span class="comment">! OUT Local EPOT for land tiles.</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;   ftl(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),  &amp;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                                   <span class="comment">! OUT FTL(,K) contains net turbulent</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">!                                     sensible heat flux into layer K</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment">!                                     from below; so FTL(,1) is the</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">!                                     surface sensible heat, H. (W/m2)</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;   ftl_tile(land_pts,ntiles),                                           &amp;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                                   <span class="comment">! OUT Surface FTL for land tiles</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;   rhokh(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),&amp;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                                   <span class="comment">! OUT Exchange coeffs for moisture.</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;   rhokm(pdims_s%i_start:pdims_s%i_end,pdims_s%j_start:pdims_s%j_end,   &amp;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;         bl_levels),                                                    &amp;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                                   <span class="comment">! OUT Exchange coefficients for</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                                   <span class="comment">!     momentum on P-grid</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;   rib_gb(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                                   <span class="comment">! OUT Mean bulk Richardson number for</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment">!                                     lowest layer.</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;   rib_ssi(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),        &amp;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                                   <span class="comment">! OUT Sea mean bulk Richardson no.</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="comment">!                                        for lowest layer.</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;   vshr(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),           &amp;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                                   <span class="comment">! OUT Magnitude of surface-to-lowest</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="comment">!                                     atm level wind shear (m per s).</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;   vshr_land(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                                   <span class="comment">! OUT Magnitude of land sfc-to-lowest</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment">!                                     atm level wind shear (m per s).</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;   vshr_ssi(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),       &amp;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                                   <span class="comment">! OUT Mag. of mean sea sfc-to-lowest</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="comment">!                                     atm level wind shear (m per s).</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;   zht(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),            &amp;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                                   <span class="comment">! OUT Max height of turb mixing</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;   bl_type_1(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                                 <span class="comment">! OUT Indicator set to 1.0 if stable</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                                   <span class="comment">!     b.l. diagnosed, 0.0 otherwise.</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;   bl_type_2(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                                 <span class="comment">! OUT Indicator set to 1.0 if Sc over</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                                   <span class="comment">!     stable surface layer diagnosed,</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                                   <span class="comment">!     0.0 otherwise.</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;   bl_type_3(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                                 <span class="comment">! OUT Indicator set to 1.0 if well</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                                   <span class="comment">!     mixed b.l. diagnosed,</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                                   <span class="comment">!     0.0 otherwise.</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;   bl_type_4(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                                 <span class="comment">! OUT Indicator set to 1.0 if</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                                   <span class="comment">!     decoupled Sc layer (not over</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                                   <span class="comment">!     cumulus) diagnosed,</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                                   <span class="comment">!     0.0 otherwise.</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;   bl_type_5(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                                 <span class="comment">! OUT Indicator set to 1.0 if</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                                   <span class="comment">!     decoupled Sc layer over cumulus</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                                   <span class="comment">!     diagnosed, 0.0 otherwise.</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;   bl_type_6(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                                 <span class="comment">! OUT Indicator set to 1.0 if a</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                                   <span class="comment">!     cumulus capped b.l. diagnosed,</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                                   <span class="comment">!     0.0 otherwise.</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;   bl_type_7(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                                 <span class="comment">! OUT Indicator set to 1.0 if a</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                                   <span class="comment">!     Shear-dominated unstable b.l.</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                                   <span class="comment">!     diagnosed, 0.0 otherwise.</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;   rho_aresist(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),    &amp;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                                   <span class="comment">! OUT RHOSTAR*CD_STD*VSHR</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment">!                                        for CLASSIC aerosol scheme</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;   aresist(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),        &amp;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                                   <span class="comment">! OUT 1/(CD_STD*VSHR)</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="comment">!                                        for CLASSIC aerosol scheme</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;   resist_b(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),       &amp;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                                   <span class="comment">! OUT (1/CH-1/(CD_STD)/VSHR</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="comment">!                                         for CLASSIC aerosol scheme</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    we_lim(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,3),      &amp;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                                    <span class="comment">! OUT rho*entrainment rate implied b</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                                    <span class="comment">!     placing of subsidence</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    zrzi(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,3),        &amp;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                                    <span class="comment">! OUT (z-z_base)/(z_i-z_base)</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    t_frac(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,3),      &amp;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                                    <span class="comment">! OUT a fraction of the timestep</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    we_lim_dsc(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,3),  &amp;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                                    <span class="comment">! OUT rho*entrainment rate implied b</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                                    <span class="comment">!     placing of subsidence</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    zrzi_dsc(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,3),    &amp;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                                    <span class="comment">! OUT (z-z_base)/(z_i-z_base)</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    t_frac_dsc(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,3),  &amp;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                                    <span class="comment">! OUT a fraction of the timestep</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    zhsc(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                                    <span class="comment">! OUT Top of decoupled layer</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    r_b_dust(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,<a class="code" href="namespacedust__parameters__mod.xhtml#acd60b6ea942dd71f3d3f244e09990bf7" title="Number of discrete particle size divisions (bins) ">ndiv</a>), &amp;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                                    <span class="comment">! OUT surface layer resist for dust</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    dust_flux(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,<a class="code" href="namespacedust__parameters__mod.xhtml#acd60b6ea942dd71f3d3f244e09990bf7" title="Number of discrete particle size divisions (bins) ">ndiv</a>),&amp;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                                    <span class="comment">! OUT dust production flux(kg m-2 s-1)</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    dust_emiss_frac(land_pts,ntiles),                                   &amp;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                                    <span class="comment">! OUT dust emiss frac on each tile</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    u_s_t_tile(land_pts,ntiles,<a class="code" href="namespacedust__parameters__mod.xhtml#a240a7a2c93599e6a4403dc9f84e01947">ndivh</a>),                                  &amp;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                          <span class="comment">! OUT threshold friction vel on tiles for dust</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    u_s_t_dry_tile(land_pts,ntiles,<a class="code" href="namespacedust__parameters__mod.xhtml#a240a7a2c93599e6a4403dc9f84e01947">ndivh</a>),                              &amp;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                          <span class="comment">! OUT dry threshold friction velocity on tiles</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    u_s_std_tile(land_pts,ntiles),                                      &amp;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                          <span class="comment">! OUT Surface friction velocity</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    wstar(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                                   <span class="comment">! OUT Convective velocity scale (m/s)</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    wthvs(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                                   <span class="comment">! OUT surface flux of thv (Km/s)</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    shallowc(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                                   <span class="comment">! OUT Shallow Cu diagnostic</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                                   <span class="comment">!   Indicator set to 1.0 if shallow,</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                                   <span class="comment">!   0.0 if not shallow or not cumulus</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    cu_over_orog(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),  &amp;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                                   <span class="comment">! OUT Indicator for cumulus</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                                   <span class="comment">!     over steep orography</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                                   <span class="comment">!   Indicator set to 1.0 if true,</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                                   <span class="comment">!   0.0 if false. Exclusive.</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    wt_ext(land_pts,sm_levels),                                         &amp;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                                  <span class="comment">!OUT cumulative fraction of transp&#39;n</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    ra(land_pts),                                                       &amp;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                                  <span class="comment">!OUT Aerodynamic resistance (s/m)</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    tstar_land(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),    &amp;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                                   <span class="comment">! OUT   Land mean sfc temperature (K)</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    tstar_ssi(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end)</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                                   <span class="comment">! OUT Sea mean sfc temperature (K).</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="comment">!                                      temperature (K).</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                                  &amp;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    flandfac(pdims_s%i_start:pdims_s%i_end,                             &amp;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;             pdims_s%j_start:pdims_s%j_end),                            &amp;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    fseafac(pdims_s%i_start:pdims_s%i_end,                              &amp;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;            pdims_s%j_start:pdims_s%j_end),                             &amp;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    rhokm_land(pdims_s%i_start:pdims_s%i_end,                           &amp;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;               pdims_s%j_start:pdims_s%j_end),                          &amp;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    rhokm_ssi(pdims_s%i_start:pdims_s%i_end,                            &amp;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;              pdims_s%j_start:pdims_s%j_end),                           &amp;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    cdr10m(pdims_s%i_start:pdims_s%i_end,pdims_s%j_start:pdims_s%j_end),&amp;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    tau_fd_x(pdims_s%i_start:pdims_s%i_end,                             &amp;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;             pdims_s%j_start:pdims_s%j_end,bl_levels),                  &amp;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    tau_fd_y(pdims_s%i_start:pdims_s%i_end,                             &amp;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;             pdims_s%j_start:pdims_s%j_end,bl_levels),                  &amp;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    rhogamu(pdims_s%i_start:pdims_s%i_end,                              &amp;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;            pdims_s%j_start:pdims_s%j_end ,bl_levels),                  &amp;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    rhogamv(pdims_s%i_start:pdims_s%i_end,                              &amp;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            pdims_s%j_start:pdims_s%j_end ,bl_levels),                  &amp;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    f_ngstress(pdims_s%i_start:pdims_s%i_end,                           &amp;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;               pdims_s%j_start:pdims_s%j_end,2:bl_levels)</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                               &amp;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;   ntdsc(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                                   <span class="comment">! OUT Top level for turb mixing in</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment">!                                           any decoupled Sc layer</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;   nbdsc(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                                   <span class="comment">! OUT Bottom level of any decoupled</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                                   <span class="comment">!     turbulently-mixed Sc layer.</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    kent(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                                   <span class="comment">! OUT grid-level of SML inversion</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    kent_dsc(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                                   <span class="comment">! OUT grid-level of DSC inversion</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;   ntml(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                                 <span class="comment">! OUT Number of model levels in the</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;                                 <span class="comment">! surface-based turbulently mixed layer.</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="comment">!  (b) Not passed between lower-level routines (not in workspace at this</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="comment">!      level) :  REAL, INTENT(OUT) ::                                                  &amp;</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;   fme(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                     <span class="comment">! OUT Wind mixing &quot;power&quot; (W per sq m).</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="comment">!-2 Genuinely output, needed by other atmospheric routines :  REAL, INTENT(OUT) ::                                                  &amp;</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;   gpp(land_pts),                                                       &amp;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                                 <span class="comment">! OUT Gross primary productivity</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                                 <span class="comment">!     (kg C/m2/s).</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;   npp(land_pts),                                                       &amp;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                                 <span class="comment">! OUT Net primary productivity</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                                 <span class="comment">!     (kg C/m2/s).</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;   resp_p(land_pts),                                                    &amp;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                                 <span class="comment">! OUT Plant respiration (kg C/m2/s).</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;   t1_sd(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                                 <span class="comment">! OUT Standard deviation of turbulent</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="comment">!                                   fluctuations of layer 1 temperature;</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="comment">!                                   for use in initiating convection.</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;   q1_sd(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;                                 <span class="comment">! OUT Standard deviation of turbulent</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="comment">!                                   fluctuations of layer 1 humidity;</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="comment">!                                   for use in initiating convection.</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;   z0m_eff_gb(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),     &amp;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;   z0h_eff_gb(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                                 <span class="comment">! OUT Effective grid-box roughness</span></div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="comment">!                                   lengths for momentum and for</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="comment">!                                   heat, moisture</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                                  &amp;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    uw0(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),           &amp;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                        <span class="comment">!OUT U-component of surface wind stress (P-grid)</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    vw0(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                        <span class="comment">! V-component of surface wind stress (P-grid)</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="comment">! OUT variables for IMP_SOLVER (that used to be local arrays)</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                                  &amp;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;   alpha1(land_pts,ntiles),                                             &amp;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                                  <span class="comment">! OUT Mean gradient of saturated</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                                  <span class="comment">!     specific humidity with respect</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                                  <span class="comment">!     to temperature between the</span></div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                                  <span class="comment">!     bottom model layer and tile</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                                  <span class="comment">!     surfaces</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;   ashtf(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,nice_use), &amp;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                                  <span class="comment">! OUT Coefficient to calculate surface</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="comment">!                                 heat flux into sea-ice.</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;   dtrdz_charney_grid(pdims%i_start:pdims%i_end,                        &amp;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;                      pdims%j_start:pdims%j_end,bl_levels),             &amp;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;                                  <span class="comment">! OUT dt/(rho*r*r*dz) for scalar</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;                                  <span class="comment">!     flux divergence</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;   rdz_charney_grid(pdims%i_start:pdims%i_end,                          &amp;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;                    pdims%j_start:pdims%j_end,bl_levels),               &amp;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                                <span class="comment">! OUT RDZ(,1) is the reciprocal of the</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="comment">!                                 height of level 1, i.e. of the</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;<span class="comment">!                                 middle of layer 1.  For K &gt; 1,</span></div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="comment">!                                 RDZ(,K) is the reciprocal</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="comment">!                                 of the vertical distance</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="comment">!                                 from level K-1 to level K.</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;   dtrdz_u(udims%i_start:udims%i_end,udims%j_start:udims%j_end,         &amp;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;             bl_levels),                                                &amp;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;                                           <span class="comment">! OUT dt/(rho*r*r*dz) for</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;   dtrdz_v(vdims%i_start:vdims%i_end,vdims%j_start:vdims%j_end,         &amp;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;             bl_levels),                                                &amp;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                                           <span class="comment">! OUT U,V flux divergence</span></div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;   bq_gb(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),&amp;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                                <span class="comment">! OUT grid-box mean buoyancy parameter</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;                                <span class="comment">!     on p,T,q-levels (full levels).</span></div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;   bt_gb(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),&amp;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                                <span class="comment">! OUT grid-box mean buoyancy parameter</span></div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                                <span class="comment">!     on p,T,q-levels (full levels).</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;   rdz_u(udims%i_start:udims%i_end,udims%j_start:udims%j_end,           &amp;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;          2:bl_levels),                                                 &amp;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                                <span class="comment">! OUT RDZ (K &gt; 1) on UV-grid.</span></div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;   rdz_v(vdims%i_start:vdims%i_end,vdims%j_start:vdims%j_end,           &amp;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;          2:bl_levels),                                                 &amp;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;                                <span class="comment">! OUT RDZ (K &gt; 1) on UV-grid.</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;   fraca(land_pts,ntiles),                                              &amp;</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;                                <span class="comment">! OUT Fraction of surface moisture</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;                                <span class="comment">!     flux with only aerodynamic</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                                <span class="comment">!     resistance for snow-free land</span></div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;                                <span class="comment">!     tiles.</span></div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;   rhokh_tile(land_pts,ntiles),                                         &amp;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                                <span class="comment">! OUT Surface exchange coefficients</span></div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;                                <span class="comment">!     for land tiles</span></div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;   smc(land_pts),                                                       &amp;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                                <span class="comment">! OUT Available moisture in the</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;                                <span class="comment">!     soil profile (mm).</span></div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;   chr1p5m(land_pts,ntiles),                                            &amp;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;                                <span class="comment">! OUT Ratio of coefffs for</span></div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;                                <span class="comment">!     calculation of 1.5m temp for</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;                                <span class="comment">!     land tiles.</span></div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;   resfs(land_pts,ntiles),                                              &amp;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                                <span class="comment">! OUT Combined soil, stomatal</span></div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;                                <span class="comment">!     and aerodynamic resistance</span></div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;                                <span class="comment">!     factor for fraction (1-FRACA)</span></div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;                                <span class="comment">!     of snow-free land tiles.</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;   z0hssi(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;   z0mssi(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;                                <span class="comment">! OUT Roughness lengths over sea (m).</span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;   z1_tq(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;                         <span class="comment">! OUT Height of lowest theta level.</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: uStarGBM(pdims%i_start:pdims%i_end,              &amp;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                                pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;        <span class="comment">! GBM surface friction velocity for diagnosis of decoupling</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="comment">! Additional JULES variables</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                               &amp;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;   tile_index(land_pts,ntype),                                          &amp;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;                                   <span class="comment">! OUT Index of tile points</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;   tile_pts(ntype)             <span class="comment">! OUT Number of tile points</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                                  &amp;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;   radnet_sice(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,     &amp;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;               nice_use),                                               &amp;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                                   <span class="comment">! OUT Surface net radiation on</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;                                   <span class="comment">!     sea-ice (W/m2)</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;   rib_tile(land_pts,ntiles),                                           &amp;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                                   <span class="comment">! OUT RIB for land tiles.</span></div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;   rho_aresist_tile(land_pts,ntiles),                                   &amp;</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                                   <span class="comment">! OUT RHOSTAR*CD_STD*VSHR on land</span></div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                                   <span class="comment">!     tiles for CLASSIC aerosol scheme</span></div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;   aresist_tile(land_pts,ntiles),                                       &amp;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                                   <span class="comment">! OUT 1/(CD_STD*VSHR) on land tiles</span></div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;                                   <span class="comment">!     for CLASSIC aerosol scheme</span></div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;   resist_b_tile(land_pts,ntiles),                                      &amp;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                                   <span class="comment">! OUT (1/CH-1/CD_STD)/VSHR on land</span></div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                                   <span class="comment">!     tiles for CLASSIC aerosol scheme</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;   alpha1_sice(pdims%i_start:pdims%i_end,                               &amp;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;               pdims%j_start:pdims%j_end,nice_use),                     &amp;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;                                   <span class="comment">! OUT ALPHA1 for sea-ice.</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;   ashtf_tile(land_pts,ntiles),                                         &amp;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                                   <span class="comment">!OUT Coefficient to calculate</span></div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;                                   <span class="comment">!     surface heat flux into land</span></div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;                                   <span class="comment">!     tiles.</span></div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;   fqw_ice(pdims%i_start:pdims%i_end,                                   &amp;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;           pdims%j_start:pdims%j_end,nice_use)                 ,        &amp;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;                                   <span class="comment">! OUT Surface FQW for sea-ice</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;   ftl_ice(pdims%i_start:pdims%i_end,                                   &amp;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;           pdims%j_start:pdims%j_end,nice_use),                         &amp;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;                                   <span class="comment">! OUT Surface FTL for sea-ice</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;   resft(land_pts,ntiles),                                              &amp;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                                   <span class="comment">! OUT Total resistance factor.</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                                   <span class="comment">!     FRACA+(1-FRACA)*RESFS for</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                                   <span class="comment">!     snow-free land, 1 for snow.</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;   rhokh_sice(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),     &amp;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                                   <span class="comment">! OUT Surface exchange coefficients</span></div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                                   <span class="comment">!     for sea and sea-ice</span></div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;   z0h_tile(land_pts,ntiles),                                           &amp;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                                   <span class="comment">! OUT Tile roughness lengths for heat</span></div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                                   <span class="comment">!     and moisture (m).</span></div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;   z0m_gb(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                                   <span class="comment">! OUT Gridbox mean Roughness length</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;                                   <span class="comment">!      for momentum (m).</span></div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;   z0m_tile(land_pts,ntiles),                                           &amp;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;                                   <span class="comment">! OUT Tile roughness lengths for</span></div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;                                   <span class="comment">!     momentum.</span></div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;   chr1p5m_sice(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;                                   <span class="comment">! OUT CHR1P5M for sea and sea-ice</span></div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;                                   <span class="comment">!     (leads ignored).</span></div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;   g_leaf(land_pts,npft),                                               &amp;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;                                   <span class="comment">! OUT Leaf turnover rate (/360days).</span></div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;   gpp_ft(land_pts,npft),                                               &amp;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;                                   <span class="comment">! OUT Gross primary productivity</span></div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;                                   <span class="comment">!     on PFTs (kg C/m2/s).</span></div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;   npp_ft(land_pts,npft),                                               &amp;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;                                   <span class="comment">! OUT Net primary productivity</span></div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;                                   <span class="comment">!     (kg C/m2/s).</span></div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;   resp_p_ft(land_pts,npft),                                            &amp;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;                                   <span class="comment">! OUT Plant respiration on PFTs</span></div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;                                   <span class="comment">!     (kg C/m2/s).</span></div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;   resp_s(land_pts,<a class="code" href="namespaceatm__step__local.xhtml#acc69694f1f2bbeecdbf17757ca10e303">dim_cs1</a>),                                            &amp;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;                               <span class="comment">! OUT Soil respiration (kg C/m2/s).</span></div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;   resp_s_tot(<a class="code" href="namespaceatm__step__local.xhtml#afb2f57aeece69e9a6be83f45ab953a3d">dim_cs2</a>),                                                 &amp;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                              <span class="comment">! OUT Total soil respiration</span></div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;                              <span class="comment">! (kg C/m2/s).</span></div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;   resp_w_ft(land_pts,npft),                                            &amp;</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;                                   <span class="comment">! OUT Wood maintenance respiration</span></div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;                                   <span class="comment">!     (kg C/m2/s).</span></div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;   gc(land_pts,ntiles),                                                 &amp;</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;                                   <span class="comment">! OUT &quot;Stomatal&quot; conductance to</span></div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;                                   <span class="comment">!      evaporation for land tiles</span></div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;                                   <span class="comment">!      (m/s).</span></div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;   canhc_tile(land_pts,ntiles),                                         &amp;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;                                   <span class="comment">! OUT Areal heat capacity of canopy</span></div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;                                   <span class="comment">!    for land tiles (J/K/m2).</span></div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;   wt_ext_tile(land_pts,sm_levels,ntiles),                              &amp;</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;                                   <span class="comment">! OUT Fraction of evapotranspiration</span></div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;                                   <span class="comment">!    which is extracted from each</span></div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;                                   <span class="comment">!    soil layer by each tile.</span></div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;   flake(land_pts,ntiles),                                              &amp;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;                                   <span class="comment">! OUT Lake fraction.</span></div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;   tile_frac(land_pts,ntiles),                                          &amp;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;                                   <span class="comment">! OUT Tile fractions including</span></div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;                                   <span class="comment">!     snow cover in the ice tile.</span></div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;   fsmc(land_pts,npft)</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;                                   <span class="comment">! OUT Moisture availability factor.</span></div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;<span class="comment">! Additional variables for JULES</span></div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                                  &amp;</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;   dtstar_tile(land_pts,ntiles),                                        &amp;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;                                   <span class="comment">! Change in TSTAR over timestep</span></div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;                                   <span class="comment">! for land tiles</span></div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;   dtstar(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,nice_use),&amp;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;                                   <span class="comment">! Change is TSTAR over timestep</span></div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;                                   <span class="comment">! for sea-ice</span></div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;   hcons(land_pts),                                                     &amp;</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;                                   <span class="comment">! Soil thermal conductivity</span></div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;                                   <span class="comment">! including water and ice</span></div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;   emis_tile(land_pts,ntiles),                                          &amp;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;                                   <span class="comment">! Emissivity for land tiles</span></div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;   emis_soil(land_pts)</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;                                   <span class="comment">! Emissivity of underlying soil</span></div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;<span class="comment">!  Workspace :  INTEGER ::                                                            &amp;</span></div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;  idiv,                                                                 &amp;</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;            <span class="comment">! loop counter, mineral dust divisions</span></div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;  m <span class="comment">!loop counter</span></div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;   qw(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),   &amp;</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;   tl(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),   &amp;</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;   a_dqsdt(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,         &amp;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;           bl_levels),                                                  &amp;</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;                                <span class="comment">! Saturated lapse rate factor</span></div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;                                <span class="comment">! on p,T,q-levels (full levels).</span></div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;   a_qs(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels), &amp;</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;                                <span class="comment">! Saturated lapse rate factor</span></div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;                                <span class="comment">! on p,T,q-levels (full levels).</span></div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;   bq(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),   &amp;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;                                <span class="comment">! A buoyancy parameter for clear air</span></div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;                                <span class="comment">! on p,T,q-levels (full levels).</span></div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;  bq_cld(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),&amp;</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;                                <span class="comment">! A buoyancy parameter for cloudy air</span></div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;                                <span class="comment">! on p,T,q-levels (full levels).</span></div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;   bt(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),   &amp;</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                                <span class="comment">! A buoyancy parameter for clear air</span></div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;                                <span class="comment">! on p,T,q-levels (full levels).</span></div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;  bt_cld(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),&amp;</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;                                <span class="comment">! A buoyancy parameter for cloudy air</span></div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;                                <span class="comment">! on p,T,q-levels (full levels).</span></div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;  deltap(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),&amp;</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;                                <span class="comment">! Difference in pressure between levels</span></div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;   dqsdt(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),&amp;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;                                <span class="comment">! Derivative of q_SAT w.r.t. T</span></div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;   dzl_charney(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,     &amp;</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;               bl_levels),                                              &amp;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;                                <span class="comment">! DZL(,K) is depth in m of theta level</span></div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;<span class="comment">!                                 K, i.e. distance from boundary</span></div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;<span class="comment">!                                 K-1/2 to boundary K+1/2.</span></div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;   fb_surf(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),        &amp;</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;                                <span class="comment">! Surface flux buoyancy over density</span></div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                                <span class="comment">! (m^2/s^3)</span></div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;  p_half(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),&amp;</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                                <span class="comment">! P_HALF(*,K) is pressure at half</span></div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                                <span class="comment">! level k-1/2.</span></div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;   rdz(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,bl_levels),  &amp;</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                                <span class="comment">! RDZ(,1) is the reciprocal of the</span></div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;<span class="comment">!                                 height of level 1, i.e. of the</span></div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;<span class="comment">!                                 middle of layer 1.  For K &gt; 1,</span></div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;<span class="comment">!                                 RDZ(,K) is the reciprocal</span></div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;<span class="comment">!                                 of the vertical distance</span></div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;<span class="comment">!                                 from level K-1 to level K.</span></div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;   rho_uv(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,          &amp;</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;          bl_levels+1),                                                 &amp;</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;                                <span class="comment">! density on UV (ie. rho) levels;</span></div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;                                <span class="comment">!    used in RHOKH so dry density if</span></div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;                                <span class="comment">!    Lq_mix_bl is true</span></div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;   rho_dry_tq(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,      &amp;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;              bl_levels),                                               &amp;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                                <span class="comment">! density on TQ (ie. theta) levels;</span></div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;                                <span class="comment">!    used in non-turb flux integration</span></div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;                                <span class="comment">!    so dry density if Lq_mix_bl is true</span></div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;   u_s(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),            &amp;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;                                <span class="comment">! Surface friction velocity (m/s)</span></div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;   recip_l_mo_sea(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end), &amp;</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;                                 <span class="comment">! Reciprocal of the surface</span></div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;                                 <span class="comment">! Obukhov length over the sea</span></div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;                                 <span class="comment">! (m-1).</span></div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;   z1_uv(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;                                <span class="comment">! Height of lowest u,v level.</span></div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;   h_blend_orog(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;                                <span class="comment">! Blending height used as part of</span></div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="comment">!                                 effective roughness scheme</span></div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;   rhostar(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),        &amp;</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;                                <span class="comment">! Surface air density</span></div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;   dust_flux_tile(land_pts,ntiles,<a class="code" href="namespacedust__parameters__mod.xhtml#acd60b6ea942dd71f3d3f244e09990bf7" title="Number of discrete particle size divisions (bins) ">ndiv</a>),                                &amp;</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;                                            <span class="comment">!production flux from tiles</span></div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;   cd_std_dust(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),    &amp;</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;                                   <span class="comment">!  Bulk transfer coef. for</span></div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;                              <span class="comment">! momentum, excluding orographic effects</span></div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;   clay_land(land_pts),                                                 &amp;</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;                           <span class="comment">! soil clay fraction on land pts</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;   sand_land(land_pts),                                                 &amp;</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;                           <span class="comment">! soil sand fraction on land pts</span></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;   pstar_land(land_pts),                                                &amp;</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;                            <span class="comment">! surface pressure on land pts</span></div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;   rhostar_land(land_pts),                                              &amp;</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;                              <span class="comment">! surface air density on land pts</span></div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;   mrel_land(land_pts,<a class="code" href="namespacedust__parameters__mod.xhtml#a06e6f42f88fa6898f73704c9b4022d6e">ndivl</a>),                                           &amp;</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;                                <span class="comment">! soil size fraction on land pts</span></div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;   rib_land(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;                                   <span class="comment">!     Land mean bulk Richardson no.</span></div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;<span class="comment">!                                        for lowest layer.</span></div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;<span class="comment">! Dummy field for ozone concentration into JULES</span></div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;<span class="comment">! until real field can be passed down</span></div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;  <span class="keywordtype">REAL</span> :: o3_dummy(land_pts)</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;  rholem,                                                               &amp;</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;               <span class="comment">! surface density in LEM</span></div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;  tv1_sd,                                                               &amp;</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;               <span class="comment">! virt T standard deviation (approx)</span></div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;  w_m     <span class="comment">! velocity scale</span></div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: z1_uv_top(:,:)</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;               <span class="comment">! Height of top of lowest uv layer above the surface</span></div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: z1_tq_top(:,:)</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;               <span class="comment">! Height of top of lowest Tq layer above the surface</span></div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> ::                                                  &amp;</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;   rad_sice_unwgt(:,:,:)</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;                                   <span class="comment">! rad_sice divided by ice fraction</span></div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;                                   <span class="comment">! and so a true flux</span></div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;   i,j,k,l,n</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;BDY_LAYR&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;<span class="comment">! 0. Verify grid/subset definitions.  Arakawa &#39;B&#39; grid with P-rows at</span></div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;<span class="comment">!    extremes is assumed.  Extreme-most P-rows are ignored; extreme!    most UV-rows are used only for interpolation and are not updated.</span></div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;  <span class="keywordflow">IF</span> ( bl_levels &lt;  1 .OR. st_levels &lt;  1 .OR. sm_levels &lt;  1           &amp;</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;   .OR. pdims%j_end &lt;  1 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;    error = 1</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;    <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;  <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( land_pts &gt;  pdims%j_end*pdims%i_end ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;    error = 7</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;    <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;  <span class="keywordflow">IF</span> (l_flux_bc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;        <span class="comment">! For specified surface fluxes impose uniform TSTAR,</span></div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;        <span class="comment">! calculated in CONV_DIAG to be consistent with fluxes</span></div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;    <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;      <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;        tstar_land(i,j) = tstar(i,j)</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;        tstar_sea(i,j)  = tstar(i,j)</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;        tstar_sice_cat(i,j,:) = tstar(i,j)</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;        tstar_ssi(i,j)  = tstar(i,j)</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;<span class="comment">!     Allocate arrays for conservative discretization of the</span></div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;<span class="comment">!     surface layer.</span></div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;  <span class="keywordflow">IF</span> (i_modiscopt == <a class="code" href="namespacebl__option__mod.xhtml#ac0a3cc253b58569885342a82d27e98e9">on</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;    <span class="keyword">ALLOCATE</span>(z1_uv_top(pdims%i_start:pdims%i_end,                       &amp;</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;                       pdims%j_start:pdims%j_end))</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;    <span class="keyword">ALLOCATE</span>(z1_tq_top(pdims%i_start:pdims%i_end,                       &amp;</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;                       pdims%j_start:pdims%j_end))</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;    <span class="keyword">ALLOCATE</span>(z1_uv_top(1,1))</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;    <span class="keyword">ALLOCATE</span>(z1_tq_top(1,1))</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;<span class="comment">! DEPENDS ON: bdy_expl1</span></div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;  <span class="keyword">CALL </span><a class="code" href="bdy__expl1_8f90.xhtml#a8245c7fbf5c1c09a047b2793471faad4" title="SUBROUTINE BDY_EXPL1 SUBROUTINE BDY_EXPL1 Purpose: Calculate explicit scalling parameters and additio...">bdy_expl1</a> (                                                      &amp;</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;<span class="comment">! IN values defining vertical grid of model atmosphere :</span></div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;   bl_levels,                                                           &amp;</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;   p,p_theta_levels, rho_rsq, rho_wet, rho_dry,                         &amp;</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;<span class="comment">! IN cloud data :</span></div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;   cf,q,qcf,qcl,t,                                                      &amp;</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;<span class="comment">! IN everything not covered so far :</span></div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;   pstar,lq_mix_bl,                                                     &amp;</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;<span class="comment">! OUT</span></div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;   dtrdz_charney_grid,rdz_charney_grid,dtrdz_u,dtrdz_v,                 &amp;</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;   rdz_u,rdz_v,rho_uv,rho_dry_tq,dzl_charney,rdz,                       &amp;</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;   z1_tq,z1_tq_top,z1_uv,z1_uv_top,                                     &amp;</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;   p_half,deltap,qw,tl,                                                 &amp;</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;   bt,bq,bt_cld,bq_cld,bt_gb,bq_gb,a_qs,a_dqsdt,dqsdt                   &amp;</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;    )</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;<span class="comment">! Initialise JULES dummy variable for o3 concentration</span></div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;  o3_dummy(:) = 0.</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;<span class="comment">!   Remove weighting by ice fraction from the flux over sea-ice.</span></div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;  <span class="keyword">ALLOCATE</span>(rad_sice_unwgt(pdims%i_start:pdims%i_end,                    &amp;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;                          pdims%j_start:pdims%j_end,nice_use))</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;<span class="comment">! Note if nice_use =1 , then ice_fract_cat = sum of categories.</span></div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;  <span class="keywordflow">DO</span> n = 1, nice_use</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;    <span class="keywordflow">WHERE</span> ( (flandg(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)&amp;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;                &lt; 1.0) .AND. (ice_fract_cat(:,:,n) &gt; 0.0) )</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;      rad_sice_unwgt(:,:,n) = rad_sice(:,:,n) / ice_fract_cat(:,:,n)</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;<span class="keywordflow">    END WHERE</span></div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;<span class="comment">! DEPENDS ON: sf_expl_l</span></div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;  <span class="keyword">CALL </span>sf_expl_l (                                                      &amp;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;<span class="comment">! IN values defining field dimensions and subset to be processed :</span></div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;   land_pts, nice_use,                                                  &amp;</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;<span class="comment">! IN  parameters for iterative SISL scheme</span></div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;   numcycles, cycleno,                                                  &amp;</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;<span class="comment">! IN parameters required from boundary-layer scheme :</span></div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;   bq_gb,bt_gb,z1_uv,z1_uv_top,z1_tq,z1_tq_top,qw,tl,                   &amp;</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;<span class="comment">! IN soil/vegetation/land surface data :</span></div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;   land_index,ntiles,sm_levels,canopy,catch,catch_snow,hcon,            &amp;</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;   ho2r2_orog,fland,flandg,                                             &amp;</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;   snow_tile,sil_orog_land,smvccl,smvcst,smvcwt,sthf,sthu,z0_tile,      &amp;</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;   z0h_tile_bare,                                                     &amp;</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;<span class="comment">! IN sea/sea-ice data :</span></div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;   ice_fract_cat, k_sice,                                               &amp;</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;<span class="comment">! IN everything not covered so far :</span></div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;   pstar,lw_down,rad_sice_unwgt,sw_tile,zh,<a class="code" href="arg__atm__fields_8h.xhtml#aa9f235bd264a2caee1c2c6f9023752e2">ddmfx</a>,                       &amp;</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;   co2_mmr,co2_3d,l_co2_interactive,l_phenol,l_triffid,                 &amp;</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;   asteps_since_triffid,cs,frac,canht_ft,photosynth_act_rad,lai_ft,     &amp;</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;   lq_mix_bl,t_soil,ti,tstar,tstar_sea,tstar_sice_cat,                  &amp;</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;   tstar_tile,z_land,albsoil,cos_zenith_angle,                          &amp;</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;   l_aero_classic,l_dust,l_dust_diag,soil_clay,o3_dummy,                &amp;</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;<span class="comment">! IN idealised and SCM things</span></div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;   l_spec_z0, z0m_scm, z0h_scm,                                         &amp;</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;<span class="comment">! IN variables for message passing</span></div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;   u_1_px, v_1_px, u_0_px, v_0_px,                                      &amp;</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;<span class="comment">! IN STASH flags :   sfme,sq1p5,st1p5,su10,sv10,sz0heff,                                  &amp;</span></div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;<span class="comment">! INOUT data :</span></div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;   l_q10,z0msea,gs,g_leaf_acc,npp_ft_acc,resp_w_ft_acc,resp_s_acc,      &amp;</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;<span class="comment">! OUT Diagnostic not requiring STASH flags :</span></div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;   recip_l_mo_sea,fqw,ftl,ftl_tile,                                     &amp;</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;   radnet_sice,rhokm,rib_gb,rib_tile,                                   &amp;</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;<span class="comment">! OUT variables for message passing</span></div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;   flandfac, fseafac,rhokm_land, rhokm_ssi, cdr10m,                     &amp;</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;<span class="comment">! OUT diagnostic requiring STASH flags :</span></div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;   fme,                                                                 &amp;</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;<span class="comment">! OUT diagnostics required for soil moisture nudging scheme :</span></div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;   wt_ext,ra,                                                           &amp;</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;<span class="comment">! OUT data required for tracer mixing :</span></div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;   rho_aresist,aresist,resist_b,                                        &amp;</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;   rho_aresist_tile,aresist_tile,resist_b_tile,                         &amp;</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;   r_b_dust,cd_std_dust,u_s_std_tile,                                   &amp;</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;<span class="comment">! OUT data required elsewhere in UM system :</span></div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;   fb_surf,u_s,t1_sd,q1_sd,                                             &amp;</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;<span class="comment">! OUT data required elsewhere in boundary layer or surface code</span></div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;   alpha1,alpha1_sice,ashtf,ashtf_tile,fqw_tile,epot_tile,              &amp;</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;   fqw_ice,ftl_ice,fraca,rhostar,resfs,resft,                           &amp;</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;   rhokh,rhokh_tile,rhokh_sice,dtstar_tile,dtstar,                      &amp;</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;   h_blend_orog,z0hssi,z0h_tile,z0h_eff_gb,z0m_gb,z0mssi,z0m_tile,      &amp;</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;   z0m_eff_gb,chr1p5m,chr1p5m_sice,smc,hcons,vshr,vshr_land,vshr_ssi,   &amp;</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;   gpp,npp,resp_p,g_leaf,gpp_ft,npp_ft,                                 &amp;</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;   resp_p_ft,resp_s,resp_s_tot,resp_w_ft,                               &amp;</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;   gc,canhc_tile,wt_ext_tile,flake,                                     &amp;</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;   tile_index,tile_pts,tile_frac,fsmc,emis_tile,emis_soil               &amp;</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;   )</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;  <span class="keyword">DEALLOCATE</span>(rad_sice_unwgt)</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;<span class="comment">!     Store the surface friction velocity if required for the diagnosis</span></div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;<span class="comment">!     of decoupling.</span></div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;  <span class="keywordflow">IF</span> (iscrntdiag == ip_scrndecpl2) ustargbm = u_s</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;  <span class="keywordflow">IF</span> (l_flux_bc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;        <span class="comment">! Surface fluxes calculated in SFEXPL are substituted with</span></div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;        <span class="comment">! forcing values.  NOTE: Surface calculation also made</span></div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;        <span class="comment">! explicit (time weight set to zero).</span></div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;    <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;      <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;         <span class="comment">!..Converts Fluxes from W/m^2 to rho*K/s</span></div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;        rholem = rhostar(i,j)</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;         <span class="comment">!..If comparing against LES with rho ne rhostar then match</span></div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;         <span class="comment">! w&#39;theta&#39; rather than rho*wtheta</span></div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;         <span class="comment">! RHOLEM = 1.0</span></div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;        fqw(i,j,1)   = (rhostar(i,j)*flux_e(i,j))/(lc*rholem)</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;        ftl(i,j,1)   = (rhostar(i,j)*flux_h(i,j))/(cp*rholem)</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;        fb_surf(i,j) = g * ( bt_gb(i,j,1)*ftl(i,j,1) +                  &amp;</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;                             bq_gb(i,j,1)*fqw(i,j,1) ) /rhostar(i,j)</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;        <span class="keywordflow">IF</span> ( fb_surf(i,j)  &gt;   0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;          w_m        = ( 0.25*zh(i,j)*fb_surf(i,j) +                    &amp;</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;                         u_s(i,j)*u_s(i,j)*u_s(i,j) ) ** (1.0/3.0)</div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;          t1_sd(i,j) = 1.93 * ftl(i,j,1) / (rhostar(i,j) * w_m)</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;          q1_sd(i,j) = 1.93 * fqw(i,j,1) / (rhostar(i,j) * w_m)</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;          tv1_sd     = t(i,j,1) * ( bt_gb(i,j,1)*t1_sd(i,j) +           &amp;</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;                                    bq_gb(i,j,1)*q1_sd(i,j) )</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;          t1_sd(i,j) = max( 0.0 , t1_sd(i,j) )</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;          q1_sd(i,j) = max( 0.0 , q1_sd(i,j) )</div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;          <span class="keywordflow">IF</span> (tv1_sd  &lt;=  0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;            t1_sd(i,j) = 0.0</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;            q1_sd(i,j) = 0.0</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;          t1_sd(i,j) = 0.0</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;          q1_sd(i,j) = 0.0</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;<span class="keywordflow">      END DO</span>    <span class="comment">! J</span></div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;<span class="keywordflow">    END DO</span>    <span class="comment">! I</span></div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;    <span class="keywordflow">DO</span> i = 1, land_pts</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;      <span class="keywordflow">DO</span> l = 1, ntiles</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;        fqw_tile(i,l) = fqw(1,1,1)</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;        ftl_tile(i,l) = ftl(1,1,1)</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! L</span></div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! I</span></div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;<span class="comment">! NOTE: If the arguments in the subroutine &quot;bdy_expl2&quot; are going to</span></div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;<span class="comment">!       be changed, the same changes must be made both in</span></div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;<span class="comment">!       bdy_expl2.F90 and bdy_expl2_1a.F90.</span></div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;  <span class="keywordflow">IF</span> ( <a class="code" href="namespacebl__option__mod.xhtml#a19e484e62400520cdd949936b797caad">i_bl_vn</a> == <a class="code" href="namespacebl__option__mod.xhtml#a61e571780cf9b0a4b1a336a6bd480580">i_bl_vn_9b</a> .OR. <a class="code" href="namespacebl__option__mod.xhtml#a19e484e62400520cdd949936b797caad">i_bl_vn</a> == <a class="code" href="namespacebl__option__mod.xhtml#a317de8e0233203144f76cb5ebdc5a446">i_bl_vn_9c</a>  ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;<span class="comment">!    DEPENDS ON: bdy_expl2</span></div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;    <span class="keyword">CALL </span><a class="code" href="bdy__expl2_8f90.xhtml#a3b36092e65671091c26873a17a6cda01" title="SUBROUTINE BDY_EXPL2 SUBROUTINE BDY_EXPL2 Purpose: Calculate the explicit turbulent fluxes of heat...">bdy_expl2</a> (                                                    &amp;</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;<span class="comment">!    IN values defining vertical grid of model atmosphere :</span></div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;     bl_levels,p_theta_levels,land_pts,land_index,                      &amp;</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;<span class="comment">!    IN U, V and W momentum fields.</span></div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;     u_p,v_p,                                                           &amp;</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;     u_0_px(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),       &amp;</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;     v_0_px(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),       &amp;</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;<span class="comment">!    IN from other part of explicit boundary layer code</span></div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;     rho_uv,rho_tq,rho_dry_tq,dzl_charney,rdz,rdz_charney_grid,         &amp;</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;     z_tq,z_uv,rhostar,bt,bq,bt_cld,bq_cld,bt_gb,bq_gb,a_qs,a_dqsdt,    &amp;</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;     dqsdt,recip_l_mo_sea,                                              &amp;</div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;     flandg(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),       &amp;</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;     rib_gb, sil_orog_land,z0m_eff_gb,                                  &amp;</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;<span class="comment">!    IN cloud/moisture data :</span></div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;     cf,q,qcf,qcl,t,qw,tl,                                              &amp;</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;<span class="comment">!    IN everything not covered so far :</span></div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;     rad_hr,micro_tends,fb_surf,u_s,h_blend_orog,                       &amp;</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;     lq_mix_bl, zh_prev, nlcl,zhpar,z_lcl,ho2r2_orog,sd_orog,           &amp;</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;<span class="comment">!    SCM Diagnostics (dummy values in full UM) &amp; stash diag</span></div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;     nscmdpkgs,l_scmdiags,bl_diag,                                      &amp;</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;<span class="comment">!    INOUT variables</span></div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;    zh,ntpar,l_shallow,cumulus,fqw,ftl,rhokh,rhokm,w,<a class="code" href="typ__atm__fields_8h.xhtml#a1d13dba4219cf2e3ed6ab69d2d9ce035">etadot</a>,t1_sd,q1_sd,&amp;</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;<span class="comment">!    OUT New variables for message passing</span></div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;     tau_fd_x, tau_fd_y, f_ngstress,                                    &amp;</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;<span class="comment">!    OUT Diagnostic not requiring STASH flags :</span></div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;     zht,shallowc,cu_over_orog,                                         &amp;</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;     bl_type_1,bl_type_2,bl_type_3,bl_type_4,bl_type_5,bl_type_6,       &amp;</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;     bl_type_7,                                                         &amp;</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;<span class="comment">!    OUT data required for tracer mixing :</span></div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;     ntml, kent, we_lim, t_frac, zrzi,                                  &amp;</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;     kent_dsc, we_lim_dsc, t_frac_dsc, zrzi_dsc,                        &amp;</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;<span class="comment">!    OUT data required elsewhere in UM system :</span></div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;     zhsc,ntdsc,nbdsc,wstar,wthvs,uw0,vw0                               &amp;</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;      )</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;  <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( <a class="code" href="namespacebl__option__mod.xhtml#a19e484e62400520cdd949936b797caad">i_bl_vn</a> == <a class="code" href="namespacebl__option__mod.xhtml#abe3f45dd255b7a05347c20b20f97cf9a">i_bl_vn_1a</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;<span class="comment">!    DEPENDS ON: bdy_expl2_1a</span></div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;    <span class="keyword">CALL </span><a class="code" href="bdy__expl2__1a_8f90.xhtml#ade33a48b2fdb32d569d9ce52ee13659e" title="SUBROUTINE BDY_EXPL2 SUBROUTINE BDY_EXPL2 Purpose: Calculate the explicit turbulent fluxes of heat...">bdy_expl2_1a</a> (                                                 &amp;</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;<span class="comment">!    IN values defining vertical grid of model atmosphere :</span></div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;     bl_levels,p_theta_levels,land_pts,land_index,                      &amp;</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;<span class="comment">!    IN U, V and W momentum fields.</span></div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;     u_p,v_p,                                                           &amp;</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;     u_0_px(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),       &amp;</div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;     v_0_px(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),       &amp;</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;<span class="comment">!    IN variables for TKE scheme</span></div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;     pstar,p_half,                                                      &amp;</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;<span class="comment">!    IN from other part of explicit boundary layer code</span></div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;     rho_uv,rho_tq,rdz,rdz_charney_grid,                                &amp;</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;     z_tq,z_uv,bt,bq,bt_gb,bq_gb,                                       &amp;</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;     flandg(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),       &amp;</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;     rib_gb, sil_orog_land,z0m_eff_gb,                                  &amp;</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;<span class="comment">!    IN cloud/moisture data :</span></div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;     q,qcf,qcl,t,qw,tl,                                                 &amp;</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;<span class="comment">!    IN everything not covered so far :</span></div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;     fb_surf,u_s,h_blend_orog,                                          &amp;</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;     lq_mix_bl, zh_prev, ho2r2_orog,sd_orog,                            &amp;</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;<span class="comment">!    SCM Diagnostics (dummy values in full UM) &amp; stash diag</span></div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;     nscmdpkgs,l_scmdiags,bl_diag,                                      &amp;</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;<span class="comment">!    INOUT variables</span></div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;    zh,ntpar,l_shallow,cumulus,fqw,ftl,rhokh,rhokm,w,t1_sd,q1_sd,       &amp;</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;<span class="comment">!    INOUT variables on TKE based turbulence schemes</span></div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;     e_trb, tsq_trb, qsq_trb, cov_trb, zhpar_shcu,                      &amp;</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;<span class="comment">!    OUT New variables for message passing</span></div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;     tau_fd_x, tau_fd_y, rhogamu, rhogamv,                              &amp;</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;<span class="comment">!    OUT Diagnostic not requiring STASH flags :</span></div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;     zht,shallowc,cu_over_orog,                                         &amp;</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;     bl_type_1,bl_type_2,bl_type_3,bl_type_4,bl_type_5,bl_type_6,       &amp;</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;     bl_type_7,                                                         &amp;</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;<span class="comment">!    OUT data required for tracer mixing :</span></div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;     ntml, kent, we_lim, t_frac, zrzi,                                  &amp;</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;     kent_dsc, we_lim_dsc, t_frac_dsc, zrzi_dsc,                        &amp;</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;<span class="comment">!    OUT data required elsewhere in UM system :</span></div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;     zhsc,ntdsc,nbdsc,wstar,wthvs,uw0,vw0                               &amp;</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;      )</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;  <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;    <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;      rib_land(i,j)=0.0</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;      rib_ssi(i,j)=0.0</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;  <span class="keywordflow">DO</span> n = 1, ntiles</div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;    <span class="keywordflow">DO</span> k = 1, tile_pts(n)</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;      l = tile_index(k,n)</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;      j=(land_index(l)-1)/pdims%i_end + 1</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;      i = land_index(l) - (j-1)*pdims%i_end</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;      rib_land(i,j)=rib_land(i,j) +                                     &amp;</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;        rib_tile(l,n)*tile_frac(l,n)</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;</div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;  <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;    <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;      <span class="keywordflow">IF</span>(flandg(i,j) &lt;  1.0)                                            &amp;</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;        rib_ssi(i,j)=(rib_gb(i,j)-rib_land(i,j)*flandg(i,j))            &amp;</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;          /(1.0-flandg(i,j))</div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;<span class="comment">! Mineral dust production</span></div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;</div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;  <span class="keywordflow">IF</span> (l_dust .OR. l_dust_diag) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;<span class="comment">!initialisation</span></div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;    dust_flux(:,:,:)=0.0</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;    dust_flux_tile(:,:,:) = 0.</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;    u_s_t_tile(:,:,:) = 0.</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;    u_s_t_dry_tile(:,:,:) = 0.</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;<span class="comment">!put fields into land arrays</span></div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;    <span class="keywordflow">DO</span> l = 1, land_pts</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;      j = (land_index(l)-1)/pdims%i_end + 1</div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;      i = land_index(l) - (j-1)*pdims%i_end</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;      pstar_land(l) = pstar(i,j)</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;      rhostar_land(l) = rhostar(i,j)</div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;      sand_land(l) = soil_sand(i,j)</div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;      clay_land(l) = soil_clay(i,j)</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">!LAND_PTS</span></div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;</div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;    <span class="keywordflow">DO</span> l = 1, land_pts</div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;      j = (land_index(l)-1)/pdims%i_end + 1</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;      i = land_index(l) - (j-1)*pdims%i_end</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;      mrel_land(l,1) = dust_mrel1(i,j)</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;      mrel_land(l,2) = dust_mrel2(i,j)</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;      mrel_land(l,3) = dust_mrel3(i,j)</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;      mrel_land(l,4) = dust_mrel4(i,j)</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;      mrel_land(l,5) = dust_mrel5(i,j)</div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;      mrel_land(l,6) = dust_mrel6(i,j)</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">!LAND_PTS</span></div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;<span class="comment">! DEPENDS ON: dust_srce</span></div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;    <span class="keyword">CALL </span><a class="code" href="dust__srce_8f90.xhtml#a5704a5f612f8cb12306f2bdd74278a5e" title="Calculates flux of mineral dust entrained into atmosphere Calculates flux of mineral dust entrained i...">dust_srce</a>(                                                     &amp;</div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;<span class="comment">! IN arguments</span></div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;         land_pts,ntiles,sm_levels,tile_pts,tile_index,fland,           &amp;</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;         tstar_tile,rhostar_land,soil_layer_moisture,snow_tile,         &amp;</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;         u_s_std_tile,mrel_land,clay_land,sand_land,ho2r2_orog,         &amp;</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;<span class="comment">! OUT arguments</span></div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;         dust_flux_tile,u_s_t_tile,u_s_t_dry_tile                       &amp;</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;         )</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;<span class="comment">! Get the fraction within each tile which is bare soil, for the purpose</span></div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;<span class="comment">! of dust emission:</span></div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;<span class="comment">! DEPENDS ON: dust_calc_emiss_frac</span></div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;    <span class="keyword">CALL </span><a class="code" href="dust__calc__emiss__frac_8f90.xhtml#a3a11ae03397e8834b172f6a6d6bbd824" title="Calculates the dust emission fraction for all land surface tiles, or. ">dust_calc_emiss_frac</a>(                                          &amp;</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;  land_pts,ntiles,tile_pts,tile_index,frac,lai_ft,dust_emiss_frac       &amp;</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;    )</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;<span class="comment">! Produce a total dust flux over all tiles, by looping through tiles and</span></div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;<span class="comment">! multiplying the flux on that tile by the dust_emiss_frac, and summing.</span></div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;    <span class="keywordflow">DO</span> idiv = 1, <a class="code" href="namespacedust__parameters__mod.xhtml#acd60b6ea942dd71f3d3f244e09990bf7" title="Number of discrete particle size divisions (bins) ">ndiv</a></div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;      <span class="keywordflow">DO</span> m = 1, ntiles</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;        <span class="keywordflow">DO</span> n = 1, tile_pts(m)</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;          l = tile_index(n,m)</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;          j = (land_index(l)-1)/pdims%i_end + 1</div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;          i = land_index(l) - (j-1)*pdims%i_end</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;          dust_flux(i,j,idiv) = dust_flux(i,j,idiv) +                   &amp;</div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;           dust_flux_tile(l,m,idiv)*dust_emiss_frac(l,m)</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">!TILE_PTS</span></div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">!NTILES</span></div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">!NDIV</span></div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;</div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">!L_DUST .OR. L_DUST_DIAG</span></div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;  <span class="keyword">DEALLOCATE</span>(z1_uv_top)</div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;  <span class="keyword">DEALLOCATE</span>(z1_tq_top)</div><div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;</div><div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;9999 <span class="keywordflow">CONTINUE</span>  <span class="comment">! Branch for error exit.</span></div><div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;</div><div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;BDY_LAYR&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="bdy__layr_8f90.xhtml#af7679ff7941f4d90c6fcfd7f286c0a43" title="SUBROUTINE BDY_LAYR- SUBROUTINE BDY_LAYR- Purpose: Calculate turbulent fluxes of heat, moisture and momentum between (a) surface and atmosphere, (b) atmospheric levels within the boundary layer, and/or the effects of these fluxes on the primary model variables. The flux of heat into and through the soil is also modelled. Numerous related diagnostics are also calculated. ">bdy_layr</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
