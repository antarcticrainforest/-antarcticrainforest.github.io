<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/gravity_wave_drag/gw_wave.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_bd6e9da100754755f60bb7a1c27ae704.xhtml">gravity_wave_drag</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">gw_wave.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="gw__wave_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="gw__wave_8f90.xhtml#a709574e0dd57a3d84047ca56a3f21b5d" title="subroutine gw_wave to calculate the vertical profile of gravity wave ">gw_wave</a>(levels,points,u,v,rho,nsq,ulow,vlow,rholow,psi1,&amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;                   psilow,nlow,modu,ktop,rho_levels,theta_levels,  &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;                   delta_lambda,delta_phi,latitude,mt_high,sd_orog,&amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                   slope,zb,banis,canis,dudt,dvdt,dtdt,dt,         &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                   l_dynbeta,l_nonhydro,l_smooth,fsat,Gsharp,      &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                   l_drag,l_gw_heating,                            &amp;!diagnostics</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                   du_dt_satn,points_du_dt_satn,du_dt_satn_on,     &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;                   du_dt_satn_p_on,                                &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;                   dv_dt_satn,points_dv_dt_satn,dv_dt_satn_on,     &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;                   stress_ud,points_stress_ud ,stress_ud_on,       &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                   stress_ud_p_on,                                 &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                   stress_vd,points_stress_vd ,stress_vd_on,       &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                   stress_ud_satn,points_stress_ud_satn,           &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                   stress_ud_satn_on,                              &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                   stress_vd_satn,points_stress_vd_satn,           &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                   stress_vd_satn_on,                              &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                   tausx_d, tausx_d_on   , points_tausx_d  ,       &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                   tausy_d, tausy_d_on   , points_tausy_d)</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="gw__wave_8f90.xhtml#a709574e0dd57a3d84047ca56a3f21b5d">   24</a></span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: earth_radius</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordtype">USE </span>conversions_mod<span class="keywordtype">, ONLY</span>: pi</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacec__gwave__mod.xhtml" title="This file belongs in section: Gravity Wave Drag This file belongs in section: Gravity Wave Drag...">c_gwave_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacec__gwave__mod.xhtml#a4cfbc458c56292cadb48e61cc3a827bb" title="versions of the orographic gravity wave drag scheme. These are tuneable parameters but are unlikely t...">nsigma</a>, <a class="code" href="namespacec__gwave__mod.xhtml#ad30ad32eea70ba4a860b471c32fb6128" title="4A scheme only ">amplitude_saturation</a>, <a class="code" href="namespacec__gwave__mod.xhtml#ad1df043a2e214bcbf1604b392eb1c217">stress_saturation</a>,  &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                         <a class="code" href="namespacec__gwave__mod.xhtml#ada9cf3399e73ecd963abf51cb4387e27" title="5A scheme only ">beta_fix</a>, frac_wl, lambdaz_min, lambdaz_max,      &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                         <a class="code" href="namespacec__gwave__mod.xhtml#a77973449c01c4117d79cc5d8a8b0bcac">nsq_neutral</a>, <a class="code" href="namespacec__gwave__mod.xhtml#abea9ed94eb2cac855129f225b0074f91">zav_converge</a>, <a class="code" href="namespacec__gwave__mod.xhtml#af789db5bedb316015c4578585da21b90">zav_iterate</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: cp</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span>   </div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;-<span class="comment">! Intent(in) variables</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;--       <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::        &amp;<span class="comment">!block for intent(in)</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    levels,                     &amp;<span class="comment">!num of vertical levels    points                       !num of land points</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::        &amp;<span class="comment">!block for intent(in)</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    ktop(points)                 <span class="comment">!first model level above mountain top</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::        &amp;<span class="comment">! intent(in) for diags</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    points_stress_ud,           &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    points_stress_vd,           &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    points_stress_ud_satn,      &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    points_stress_vd_satn,      &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    points_du_dt_satn,          &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    points_dv_dt_satn,          &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    points_tausx_d,             &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    points_tausy_d</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    ::        &amp;<span class="comment">!block for intent(in)</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    u(points,levels),           &amp;<span class="comment">!zonal wind</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    v(points,levels),           &amp;<span class="comment">!meridional wind</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    rho(points,levels),         &amp;<span class="comment">!density</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    nsq(points,levels),         &amp;<span class="comment">!brunt-vaisala freq squared</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    rho_levels(points,levels),  &amp;<span class="comment">!height(theta_levels)</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    theta_levels(points,levels),&amp;<span class="comment">!height (rho_levels)</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    slope(points),              &amp;<span class="comment">!sso params - slope</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    mt_high(points),            &amp;<span class="comment">!sso params - height</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    sd_orog(points),            &amp;<span class="comment">!standard deviation of orography (m)</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    banis(points),              &amp;<span class="comment">!const (function of anisotropy)</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    canis(points),              &amp;<span class="comment">!const (function of anisotropy)</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    ulow(points),               &amp;<span class="comment">!u averaged from z=0.5mt_high to z=mt_high     vlow(points),               &amp;!v averaged from z=0.5mt_high to z=mt_high</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    modu(points),               &amp;<span class="comment">!modulus of horizontal wind ( sqrt(u^2+v^2))</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    nlow(points),               &amp;<span class="comment">!N bulk averaged from 0.5mt_high to mt_high</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    psilow(points),             &amp;<span class="comment">!psi averaged from z=0.5mt_high to z=mt_high</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    rholow(points),             &amp;<span class="comment">!rho averaged from z=0.5mt_high to z=mt_high</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    psi1(points),               &amp;<span class="comment">!atan(vlow/ulow)</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    zb(points),                 &amp;<span class="comment">!depth of flow blocking layer</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    latitude(points),           &amp;<span class="comment">!latitude</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    delta_lambda,               &amp;<span class="comment">!spacing between points in the i direction.</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    delta_phi,                  &amp;<span class="comment">!spacing between points in the j direction.</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    fsat,                       &amp;<span class="comment">!saturation Froude number    Gsharp,                     &amp;!function of mtn sharpness</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    dt                           <span class="comment">!time-step</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;   <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::      &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;     l_drag(points),           &amp;<span class="comment">!whether point has a non-zero stress or not</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;     l_dynbeta,                &amp;<span class="comment">!dynamically adjusting beta(angle of group vel)</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;     l_nonhydro,               &amp;<span class="comment">!nonhydro scheme</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;     l_smooth,                 &amp;<span class="comment">!lambda_z smoothing of acc</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;     l_gw_heating               <span class="comment">!calculate heating tendency if true</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span>  ::      &amp;<span class="comment">!intent(in) for diags     stress_ud_on,              &amp;!u stress</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    stress_ud_p_on,            &amp;<span class="comment">!u stress on pressure points</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    stress_vd_on,              &amp;<span class="comment">!v stress</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    stress_ud_satn_on,         &amp;<span class="comment">!u satn stress</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    stress_vd_satn_on,         &amp;<span class="comment">!v satn stress</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    du_dt_satn_on,             &amp;<span class="comment">!u accel (saturation)</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    du_dt_satn_p_on,           &amp;<span class="comment">!u accel (saturation) on pressure points</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    dv_dt_satn_on,             &amp;<span class="comment">!v accel (saturation)</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    tausx_d_on,                &amp;<span class="comment">!tausx_d switch</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    tausy_d_on                  <span class="comment">!tausy_d switch</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;-<span class="comment">! Intent(inout) variables</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;--       <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::       &amp;<span class="comment">!block for intent(inout)</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    dudt(points,levels),       &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    dvdt(points,levels),       &amp;<span class="comment">!profiles of acceleration</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    dtdt(points,levels)         <span class="comment">!profiles of heating</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span>  ::                             &amp;<span class="comment">!intent(inout) diags     stress_ud (points_stress_ud,0:levels),           &amp;</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    stress_vd (points_stress_vd,0:levels)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;-<span class="comment">! Intent(out) variables</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;--       <span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span>    ::                             &amp;<span class="comment">!intent(out) diags     stress_ud_satn (points_stress_ud_satn, 0:levels),&amp;</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    stress_vd_satn (points_stress_vd_satn, 0:levels),&amp;                         du_dt_satn (points_du_dt_satn,levels),           &amp;                  dv_dt_satn (points_dv_dt_satn,levels),           &amp;                         tausx_d(points_tausx_d),                         &amp;                  tausy_d(points_tausy_d)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;-<span class="comment">! Local variables</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;--        <span class="keywordtype">REAL</span> ::                  &amp;<span class="comment">!block for local variables</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    wave_amp(points,levels),&amp;<span class="comment">!Profile of wave amplitude</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    lambdaz(points,levels), &amp;<span class="comment">!Vertical wavelength</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    tau(points,levels),     &amp;<span class="comment">!stress profile    beta(points,levels),    &amp;!ratio of vert group vel to hrz group vel</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    nonhyd(points,levels),  &amp;<span class="comment">!used to calc frac of stress leaving grid-column</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    k_wave(points),         &amp;<span class="comment">!horizontal wavenumber</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    heff(points),           &amp;<span class="comment">!cut-off mtn height (h-zb)</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    pd1(points),            &amp;<span class="comment">!Directional term    pd2(points),            &amp;!Directional term    pdmod(points),          &amp;!Directional term    tau_sfc(points),        &amp;!used in calc of sfc stress     spd(points,levels),     &amp;!wind resolved in direction of low-level stress</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    n(points,levels),       &amp;<span class="comment">!buoyancy freq sqrt(nsq)</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    deltaz(points,levels),  &amp;<span class="comment">!z vertical grid-length    u_n(points,levels),     &amp;!wind speed div by n</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    maxgwdlev,              &amp;<span class="comment">!max height for gwd</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    deltax(points,levels),  &amp;<span class="comment">!x horizontal grid-length    deltay(points,levels),  &amp;!y horizontal grid-length       uacc,                   &amp;!dudt at level k (prior to spreading over lambdaz)</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    vacc,                   &amp;<span class="comment">!dvdt at level k (prior to spreading over lambdaz)</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    rhoav,                  &amp;<span class="comment">!Average density over lambdaz</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    rhob,                   &amp;<span class="comment">!rho on theta grid at level k    rhob_l,                 &amp;!rho on theta grid at level k-1    ub,                     &amp;!u on theta grid at level k    vb,                     &amp;!v on theta grid at level k    spsi,                   &amp;!(sin(psi))**2     scpsi,                  &amp;!(sin(psi))*(cos(psi))     cpsi1_dzdy,             &amp;!cos(psi1)*deltaz(k)*deltay</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    spsi1_dzdx,             &amp;<span class="comment">!sin(psi1)*deltaz(k)*deltax</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    ztau,                   &amp;<span class="comment">!sfc stress(before directional terms)     zvt1,zvt2,              &amp;</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    ztemp,                  &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    amplow,                 &amp;<span class="comment">!Wave amplitude at level k-1</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    acrit,                  &amp;<span class="comment">!Critical wave amplitude</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    dzb,dzu,dzl,            &amp;<span class="comment">!layer thickness used to calc average u etc.</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    uhat,                   &amp;<span class="comment">!u after gravity wave drag increment</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    vhat,                   &amp;<span class="comment">!v after gravity wave drag increment</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    ududt,                  &amp;<span class="comment">!Rate of change of kinetic energy after wind incs</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    vdvdt                    <span class="comment">!Rate of change of kinetic energy after wind incs</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;   <span class="keywordtype">REAL</span> ::                  &amp;<span class="comment">!block for local variables used to calc diags</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    dudt_gw(points,levels),      &amp;<span class="comment">!u acc due to gravity waves</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    dvdt_gw(points,levels),      &amp;<span class="comment">!v acc due to gravity waves    local_xstress(points,0:levels),&amp;!for calculation of stress diagnostics</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    local_ystress(points,0:levels),&amp;<span class="comment">!for calculation of stress diagnostics</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    dz                            <span class="comment">!delta z on theta grid for stress diags</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keywordtype">INTEGER</span> :: i, k, t, kl, kk,kmtn</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keywordtype">INTEGER</span> :: kbot,khigh(points,levels),klow(points,levels)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordtype">LOGICAL</span> :: l_cont(points), l_cont2(points)    <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">! 1.0 initialisation</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;GW_WAVE&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">IF</span> (stress_ud_satn_on) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="keywordflow">DO</span> k=0,levels        <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;          stress_ud_satn(i,k) = 0.0</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordflow">IF</span> (stress_vd_satn_on) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordflow">DO</span> k=0,levels        <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;          stress_vd_satn(i,k) = 0.0<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">IF</span> (du_dt_satn_on .OR. du_dt_satn_p_on) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <span class="keywordflow">DO</span> k=1,levels        <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;          du_dt_satn(i,k) = 0.0</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">IF</span> (dv_dt_satn_on) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      <span class="keywordflow">DO</span> k=1,levels        <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;          dv_dt_satn(i,k) = 0.0</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordflow">       END DO</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">IF</span>( stress_ud_on .OR. stress_ud_p_on .OR. stress_ud_satn_on      &amp;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                     .OR. tausx_d_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      <span class="keywordflow">DO</span> k=0,levels        <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;          local_xstress(i,k) =0.0</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">IF</span>( stress_vd_on .OR. stress_vd_satn_on .OR. tausy_d_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      <span class="keywordflow">DO</span> k=0,levels        <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;          local_ystress(i,k) =0.0</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordflow">DO</span> k=1,levels</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        tau(i,k)     = 0.0</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        nonhyd(i,k)  = 0.0</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        dudt_gw(i,k) = 0.0</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        dvdt_gw(i,k) = 0.0</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordflow">      END DO</span><span class="keywordflow">    END DO</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      tau_sfc(i) = 0.0</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">! Set maxgwdlev</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    maxgwdlev = 1.e10</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordflow">IF</span> ( l_nonhydro ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      <span class="keywordflow">DO</span> k = 1, levels</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;          deltay(i,k) = (earth_radius+theta_levels(i,k))</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;          deltax(i,k) = cos(latitude(i))*delta_lambda*deltay(i,k)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;          deltay(i,k) = deltay(i,k)*delta_phi</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordflow">    END IF</span>  </div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordflow">DO</span> i = 1, points      <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span>        heff(i)   = mt_high(i)-zb(i)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        scpsi     = sin(psilow(i))*cos(psilow(i))</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        spsi      = (sin(psilow(i)))**2         pd1(i)    = banis(i)-(banis(i)-canis(i))*spsi</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        pd2(i)    = (banis(i)-canis(i))*scpsi</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        pdmod(i)  = sqrt(pd1(i)**2+pd2(i)**2)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordflow">DO</span> k=1, levels-1      <span class="keywordflow">DO</span> i = 1, points        <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">!Resolve wind into direction of sfc stress</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">!on theta (theta_levels) grid</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;          dzl          = theta_levels(i,k)    -  rho_levels(i,k)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;          dzu          = rho_levels(i,k+1)   -  theta_levels(i,k)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;          dzb          = rho_levels(i,k+1)   -   rho_levels(i,k)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;          ub           = (dzu*u(i,k)       + dzl*u(i,k+1))/dzb</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;          vb           = (dzu*v(i,k)       + dzl*v(i,k+1))/dzb</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;          zvt1         =  ulow(i)*ub + vlow(i)*vb</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;          zvt2         = -vlow(i)*ub + ulow(i)*vb</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;          spd(i,k)     = (zvt1*pd1(i) + zvt2*pd2(i))/(modu(i)*pdmod(i))</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;          <span class="keywordflow">IF</span> (nsq(i,k) &gt; <a class="code" href="namespacec__gwave__mod.xhtml#a77973449c01c4117d79cc5d8a8b0bcac">nsq_neutral</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">! first consider stable cases            n(i,k)   = SQRT(nsq(i,k))            u_n(i,k) = spd(i,k)/n(i,k)</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">! now consider neutral (and near neutral) cases            u_n(i,k) = spd(i,k)/SQRT(nsq_neutral)</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">! limit u_n to sensible values</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;          u_n(i,k)     = max(lambdaz_min,u_n(i,k))</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;          u_n(i,k)     = min(lambdaz_max,u_n(i,k))</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;          lambdaz(i,k) = frac_wl*(2.0*pi*u_n(i,k))</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;          deltaz(i,k)  = rho_levels(i,k+1)-rho_levels(i,k)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">! set beta as beta_fix</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;          beta(i,k)    = <a class="code" href="namespacec__gwave__mod.xhtml#ada9cf3399e73ecd963abf51cb4387e27" title="5A scheme only ">beta_fix</a><span class="keywordflow">        END IF</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordflow">IF</span> (l_dynbeta) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="keywordflow">DO</span> i = 1, points        <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span>           k_wave(i)  = slope(i)/mt_high(i) <span class="comment">!1/L, could do 2pi/L here</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      <span class="keywordflow">DO</span> k=1, levels-1        <span class="keywordflow">DO</span> i = 1, points          <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">!Calculate dynamically adjusting group velocity angle at each height</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            <span class="keywordflow">IF</span> (spd(i,k) /= 0.) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;              <span class="keywordflow">IF</span> ((k_wave(i)**2*u_n(i,k)**2) &lt; 1.) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                beta(i,k) = sqrt(1.-k_wave(i)**2*u_n(i,k)**2)&amp;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                                 /(k_wave(i)*u_n(i,k))</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                beta(i,k) = 1.</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <span class="keywordflow">ELSE</span>              beta(i,k) = 1.e16</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keywordflow">            END IF</span><span class="keywordflow">           END IF</span><span class="keywordflow">          END DO</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordflow">DO</span> i = 1, points      <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">! Calculate surface gravity wave stress! following LM97 (but with cut-off mtn)</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">! here assume that maximum depth of zb is mt_high</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        ztau        = rholow(i)*modu(i)*nlow(i)*(0.25*heff(i)**2)&amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                    *(slope(i)/sd_orog(i))*gsharp</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        tau_sfc(i)  = ztau*pdmod(i)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">! set wave_amp equal to cut-off mtn height</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordflow">DO</span> k = 1, levels-1      <span class="keywordflow">DO</span> i = 1, points        <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;          <span class="keywordflow">IF</span> (k &lt; ktop(i)) then<span class="comment">!set stress and wave amp to zero if encounter a neutral layer!or a critical layer below the mountain top so that wave!propagation loop doesn&#39;t do calc for cases where!there is a neutral layer or critical layer at k=ktop-1</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            <span class="keywordflow">IF</span> ((nsq(i,k) &lt;= <a class="code" href="namespacec__gwave__mod.xhtml#a77973449c01c4117d79cc5d8a8b0bcac">nsq_neutral</a>) .OR.     &amp;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;               (spd(i,k+1)*spd(i,k) &lt;= 0.0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;               tau(i,k)      = 0.0</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;               wave_amp(i,k) = 0.0            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">!otherwise set wave amp and stress as follows</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            wave_amp(i,k) = max(0.,heff(i))</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            tau(i,k) = tau_sfc(i)</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;          <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (k == ktop(i)) <span class="keywordflow">THEN</span>            wave_amp(i,k) = max(0.,heff(i))</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;          <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (k &gt; ktop(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            wave_amp(i,k) = 0.0</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">! Calculate stress lost out of grid-box due to non-hydrostatic prop.</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">! and deposit over height that it is lost</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;   <span class="keywordflow">IF</span> (l_nonhydro) <span class="keywordflow">THEN</span>     <span class="keywordflow">DO</span> k = 1, levels-1       <span class="keywordflow">DO</span> i = 1, points         <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;           cpsi1_dzdy  = abs(cos(psi1(i)))*deltaz(i,k)*deltay(i,k)</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;           spsi1_dzdx  = abs(sin(psi1(i)))*deltaz(i,k)*deltax(i,k)</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;           nonhyd(i,k) = (cpsi1_dzdy + spsi1_dzdx)         &amp;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                         /(beta(i,k)*deltax(i,k)*deltay(i,k) &amp;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                          + cpsi1_dzdy + spsi1_dzdx)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="keywordflow">       END DO</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keywordflow">     END DO</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keywordflow">   END IF</span> <span class="comment">!l_nonhydro</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">! Wave propagation following McFarlane</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">! Start loop at mountain top! Just use sfc stress as launch stress from mtn top</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">DO</span> k=2, levels-1</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;      <span class="keywordflow">DO</span> i = 1, points        <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;          <span class="keywordflow">IF</span> (k &gt;= ktop(i) .AND. theta_levels(i,k) &lt;=maxgwdlev) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            acrit       = 0.0                 kl          = k-1</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            <span class="keywordflow">IF</span> ((wave_amp(i,kl)  /=  0.0) .AND. (tau(i,kl) /= 0.0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">!   All wave stress deposited if dth/dz &lt; 0 or wind more than</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">!   pi/2 to direction of surface stress</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;              <span class="keywordflow">IF</span> ((nsq(i,k) &lt;= <a class="code" href="namespacec__gwave__mod.xhtml#a77973449c01c4117d79cc5d8a8b0bcac">nsq_neutral</a>) .OR.                &amp;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                  (spd(i,k) &lt;= 0.0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                tau(i,k) = 0.0</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">! Test whether wave amplitude exceeds critical amplitude,! acrit, for wave breaking                dzl           = theta_levels(i,k)   -  rho_levels(i,k)</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                dzu           = rho_levels(i,k+1)   -  theta_levels(i,k)</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                dzb           = rho_levels(i,k+1)   -   rho_levels(i,k)                rhob          = (dzu*rho(i,k)       + dzl*rho(i,k+1))/dzb</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                dzl           = theta_levels(i,k-1) -  rho_levels(i,k-1)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                dzu           = rho_levels(i,k)     -  theta_levels(i,k-1)</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                dzb           = rho_levels(i,k)     -   rho_levels(i,k-1)                rhob_l        = (dzu*rho(i,k-1)     + dzl*rho(i,k))  /dzb</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                amplow        = rhob_l*n(i,kl)*spd(i,kl)</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                wave_amp(i,k) = wave_amp(i,kl)*        &amp;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                                sqrt(amplow/(rhob*spd(i,k)*n(i,k)))</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                acrit         = fsat*(spd(i,k)/n(i,k))</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                <span class="keywordflow">IF</span> (wave_amp(i,k) &gt; acrit) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                  wave_amp(i,k) = acrit</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keywordflow">                END IF</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                tau(i,k) = tau(i,kl)*                                   &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                  (wave_amp(i,k) / wave_amp(i,kl))**2*                  &amp;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                  (rhob*n(i,k)*spd(i,k)) / (rhob_l*n(i,kl)*spd(i,kl)) * &amp;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                  (1.-nonhyd(i,k))</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="keywordflow">              END IF</span>  <span class="comment">!  n(i,k)&lt;= 0 and spd(i,k)&lt;= 0</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="keywordflow">            END IF</span> <span class="comment">!((wave_amp(i,kl)  /=  0.0) .AND. (tau(i,kl) /= 0.0))</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">!  (k &gt;= ktop(i) .AND. theta_levels(i,k) &lt;=maxgwdlev)</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">!(l_drag(i))</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">!  i = 1, points    END DO !k=1, levels-1</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">! For this if test should i have some epsilon so we only do stress! calcs where neccessary and never diagnose accs due to rounding error?</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keywordflow">IF</span> (l_smooth) <span class="keywordflow">THEN</span>      <span class="keywordflow">DO</span> k=1, levels-1</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <span class="keywordflow">DO</span> i = 1, points          <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            <span class="keywordflow">IF</span> (k &gt;= ktop(i) .AND. theta_levels(i,k) &lt;=maxgwdlev) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;              kl = k-1</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;              <span class="keywordflow">IF</span> ((wave_amp(i,kl)  /=  0.0) .AND. (tau(i,kl) /= 0.0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                <span class="keywordflow">IF</span> (tau(i,k) /= tau(i,kl)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">! Find region to apply stress over (vertical wavelength)</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                  l_cont(i)  = .true.</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                  l_cont2(i) = .true.</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                  khigh(i,k) = levels-1</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                  klow(i,k)  = 2</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                  <span class="keywordflow">DO</span> kk = k, 1, -1</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                    <span class="keywordflow">IF</span> ((theta_levels(i,kk) &lt;= &amp;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                        (theta_levels(i,k)-0.5*lambdaz(i,k))) .AND. &amp;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                        (l_cont(i))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                      klow(i,k) =  kk</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                      l_cont(i) = .false.</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="keywordflow">                    END IF</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="keywordflow">                  END DO</span> <span class="comment">!kk, level k down to surface                  DO kk = k, levels</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                    <span class="keywordflow">IF</span> ((theta_levels(i,kk) &gt;= &amp;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                        (theta_levels(i,k)+0.5*lambdaz(i,k))) .AND. &amp;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                        (l_cont2(i))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                      khigh(i,k) =  kk</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                      l_cont2(i) = .false.</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="keywordflow">                    END IF</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keywordflow">                  END DO</span> <span class="comment">!kk, level k up to model top                  IF(klow(i,k)  &lt;=  ktop(i)) THEN</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                    klow(i,k)    = 1</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">! lambdaz is hydrostatic vertical wavelength on theta levels                     lambdaz(i,k) = theta_levels(i,khigh(i,k))                  ELSE</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                    lambdaz(i,k) = theta_levels(i,khigh(i,k)) - &amp;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                                   theta_levels(i,klow(i,k))</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="keywordflow">                  END IF</span> <span class="comment">!(klow(i,k) &lt;=ktop(i))</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="keywordflow">                END IF</span> <span class="comment">! (tau(i,k) /= tau(i,kl))</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="keywordflow">              END IF</span> <span class="comment">!((wave_amp(i,kl)  /=  0.0) .AND. (tau(i,kl) /= 0.0))</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="keywordflow">            END IF</span> <span class="comment">!  (k &gt;= ktop(i) .AND. theta_levels(i,k) &lt;=maxgwdlev)</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">!(l_drag(i))</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">!  i = 1, points      END DO !k=1, levels-1</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="keywordflow">ELSE</span> <span class="comment">!if l_smooth is false</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;      <span class="keywordflow">DO</span> k=1, levels-1</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        <span class="keywordflow">DO</span> i = 1, points          <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            <span class="keywordflow">IF</span> (k &gt;= ktop(i) .AND. theta_levels(i,k) &lt;=maxgwdlev) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;              kl          = k-1</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;              <span class="keywordflow">IF</span> ((wave_amp(i,kl)  /=  0.0) .AND. (tau(i,kl) /= 0.0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                <span class="keywordflow">IF</span> (tau(i,k) /= tau(i,kl)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                  khigh(i,k)  = k</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                  klow(i,k)   = k</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                  lambdaz(i,k)= deltaz(i,k)</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                  <span class="keywordflow">IF</span>(k  ==  ktop(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                    klow(i,k)    = 1</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                    lambdaz(i,k) = theta_levels(i,k)<span class="keywordflow">                   END IF</span> <span class="comment">!(k  ==  ktop(i))</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="keywordflow">                END IF</span> <span class="comment">!(tau(i,k) /= tau(i,kl))</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="keywordflow">              END IF</span> <span class="comment">!((wave_amp(i,kl)  /=  0.0) .AND. (tau(i,kl) /= 0.0))</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="keywordflow">            END IF</span> <span class="comment">!  (k &gt;= ktop(i) .AND. theta_levels(i,k) &lt;=maxgwdlev)</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">!(l_drag(i))</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">!  i = 1, points      END DO !k=1, levels-1</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">!(l_smooth)</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">! Calculate drag from vertical stress divergence</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment">! Stress in theta (theta_levels) levels so stress divergence! and hence acceleration are on rho (z) levels</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">! need to resolve tau into x and y direction</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="keywordflow">DO</span> k=1, levels-1</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;      <span class="keywordflow">DO</span> i = 1, points        <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;          <span class="keywordflow">IF</span> (k &gt;= ktop(i) .AND. theta_levels(i,k) &lt;=maxgwdlev) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            kl          = k-1</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            <span class="keywordflow">IF</span> ((wave_amp(i,kl)  /=  0.0) .AND. (tau(i,kl) /= 0.0)) <span class="keywordflow">THEN</span>              <span class="keywordflow">IF</span> (tau(i,k) /= tau(i,kl)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                ztemp=(tau(i,k) - tau(i,kl))  /  lambdaz(i,k)</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                uacc =((ulow(i)*pd1(i)-vlow(i)*pd2(i))* ztemp/pdmod(i))/modu(i)</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                vacc =((vlow(i)*pd1(i)+ulow(i)*pd2(i))* ztemp/pdmod(i))/modu(i)</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                rhoav = 0.0</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                <span class="keywordflow">IF</span> (klow(i,k) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                  rhoav = rho(i,1) * theta_levels(i,1)</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                  <span class="keywordflow">DO</span> kk = 2, khigh(i,k)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                    rhoav = rhoav + rho(i,kk)*               &amp;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                           (theta_levels(i,kk)-theta_levels(i,kk-1))</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="keywordflow">                  END DO</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                  <span class="keywordflow">DO</span> kk = klow(i,k), khigh(i,k)</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                    rhoav = rhoav + rho(i,kk)*               &amp;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                           (theta_levels(i,kk)-theta_levels(i,kk-1))</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="keywordflow">                  END DO</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keywordflow">                END IF</span> <span class="comment">!klow(i,k) == 1</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                rhoav = rhoav / lambdaz(i,k)</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                <span class="keywordflow">DO</span> kk = klow(i,k), khigh(i,k)</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                  dudt_gw(i,kk) = uacc/rhoav  + dudt_gw(i,kk)</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                  dvdt_gw(i,kk) = vacc/rhoav  + dvdt_gw(i,kk)</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="keywordflow">                END DO</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="keywordflow">              END IF</span> <span class="comment">!tau(i,k) /= tau(i,kl)</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="keywordflow">            END IF</span>    <span class="comment">! wave_amp(kl)  /=  0.0</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">!k &gt;= ktop(i) and (theta_levels(i,k) &lt;=maxgwdlev)</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">!(l_drag(i)</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! Loop over points</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! Loop over levels</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">!update arrays with total acceleration (gravity wave + flow blocking)</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keywordflow">DO</span> k=1, levels-1</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;      <span class="keywordflow">DO</span> i = 1, points        dudt(i,k) = dudt(i,k)  + dudt_gw(i,k)</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        dvdt(i,k) = dvdt(i,k)  + dvdt_gw(i,k)</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! Loop over points</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! Loop over levels</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">! Calculate heating due to gravity wave dissipation</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <span class="keywordflow">IF</span> ( l_gw_heating ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;     <span class="keywordflow">DO</span> k = 1, levels-1</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;       <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;           dzb    = theta_levels(i,k)   -  rho_levels(i,k)</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;           dzu    = rho_levels(i,k+1)   -  theta_levels(i,k)</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;           dzl    = rho_levels(i,k+1)   -   rho_levels(i,k)</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment">!          u and v on theta_level(k)</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;           uhat   =  dzu * u(i,k) + dzb * u(i,k+1)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;           vhat   =  dzu * v(i,k) + dzb * v(i,k+1)</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="comment">!          u*du/dt abd v*dv/dt on theta_level(k)</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;           ududt  = uhat *( dzu * dudt_gw(i,k) + dzb * dudt_gw(i,k+1) )</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;           vdvdt  = vhat *( dzu * dvdt_gw(i,k) + dzb * dvdt_gw(i,k+1) )</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="comment">!          dT/dt on theta_level(k)</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;           dtdt(i,k)  = dtdt(i,k) - (ududt + vdvdt) / ( cp * dzl * dzl )</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="keywordflow">       END DO</span> <span class="comment">!Loop over points</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="keywordflow">     END DO</span> <span class="comment">!Loop over levels</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">!l_gw_heating</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment">! diagnostics</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keywordflow">IF</span>( du_dt_satn_on .OR. du_dt_satn_p_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;      <span class="keywordflow">DO</span> k=1, levels-1</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="keywordflow">DO</span> i = 1, points          <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            du_dt_satn(i,k) = dudt_gw(i,k)</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">!(l_drag(i)</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! Loop over points</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! Loop over levels</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <span class="keywordflow">IF</span>( dv_dt_satn_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;      <span class="keywordflow">DO</span> k=1, levels-1</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        <span class="keywordflow">DO</span> i = 1, points          <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            dv_dt_satn(i,k) = dvdt_gw(i,k)</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">!(l_drag(i)</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! Loop over points</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! Loop over levels</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <span class="keywordflow">IF</span>( stress_ud_on .OR. stress_ud_p_on .OR. stress_ud_satn_on      &amp;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                     .OR. tausx_d_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;      <span class="keywordflow">DO</span> k =levels-1,0,-1         <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;         <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;           <span class="keywordflow">IF</span> ( k  ==  0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;             dz = theta_levels(i,k+1)</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;           <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;             dz = theta_levels(i,k+1) - theta_levels(i,k)</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;           local_xstress(i,k) = local_xstress(i,k+1) -               &amp;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                               (dudt_gw(i,k+1)*rho(i,k+1)*dz)</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;      <span class="keywordflow">IF</span>( stress_ud_on .OR. stress_ud_p_on) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        <span class="keywordflow">DO</span> k =0, levels-1           <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;              stress_ud(i,k) = stress_ud(i,k) + local_xstress(i,k)<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="keywordflow">          END DO</span><span class="keywordflow">        END DO</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;          stress_ud(i,levels) = stress_ud(i,levels-1)</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;      <span class="keywordflow">IF</span>( stress_ud_satn_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        <span class="keywordflow">DO</span> k =0, levels-1           <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;              stress_ud_satn(i,k) = local_xstress(i,k)<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="keywordflow">          END DO</span><span class="keywordflow">        END DO</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;          stress_ud_satn(i,levels) = stress_ud_satn(i,levels-1)</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;      <span class="keywordflow">IF</span> ( tausx_d_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;          <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;            tausx_d(i) = tausx_d(i) + local_xstress(i,0)<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <span class="keywordflow">IF</span>( stress_vd_on .OR. stress_vd_satn_on .OR. tausy_d_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;      <span class="keywordflow">DO</span> k =levels-1,0,-1         <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;         <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;           <span class="keywordflow">IF</span> ( k  ==  0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;             dz = theta_levels(i,k+1)</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;           <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;             dz = theta_levels(i,k+1) - theta_levels(i,k)</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;           local_ystress(i,k) = local_ystress(i,k+1) -                &amp;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                                (dvdt_gw(i,k+1)*rho(i,k+1)*dz)</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;      <span class="keywordflow">IF</span>( stress_vd_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <span class="keywordflow">DO</span> k =0, levels-1           <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;            <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;              stress_vd(i,k) =  stress_vd(i,k) + local_ystress(i,k)</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;        <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;          stress_vd(i,levels) = stress_vd(i,levels-1)</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;      <span class="keywordflow">IF</span>( stress_vd_satn_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        <span class="keywordflow">DO</span> k =0, levels-1           <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;            <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;              stress_vd_satn(i,k) = local_ystress(i,k)</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="keywordflow">          END DO</span><span class="keywordflow">        END DO</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;          stress_vd_satn(i,levels) = stress_vd_satn(i,levels-1)</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="keywordflow">      END IF</span>      <span class="keywordflow">IF</span> ( tausy_d_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;          <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            tausy_d(i) = tausy_d(i) + local_ystress(i,0)<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;GW_WAVE&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="gw__wave_8f90.xhtml#a709574e0dd57a3d84047ca56a3f21b5d" title="subroutine gw_wave to calculate the vertical profile of gravity wave ">gw_wave</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
