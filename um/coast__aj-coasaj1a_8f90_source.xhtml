<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/grids/coast_aj-coasaj1a.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_d6312fd6e35a852a763000f2b8051718.xhtml">grids</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">coast_aj-coasaj1a.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="coast__aj-coasaj1a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="namespacecoast__aj__mod.xhtml">   34</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacecoast__aj__mod.xhtml" title="SUBROUTINE COAST_AJ-!&gt; SUBROUTINE COAST_AJ-!&gt; ">coast_aj_mod</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacecoast__aj__mod.xhtml#aa34f6fb0c6d8a2986b54a823ca20f58c">coast_aj</a>                                               &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;(index_b_l,index_b_r,weight_t_r,weight_b_r,weight_t_l,weight_b_l  &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;,points_lambda_srce,points_phi_srce,points,land_sea_srce          &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;,land_sea_targ,index_targ,index_srce,coastal_points,<a class="code" href="atm__lsm_8h.xhtml#a553a9f22845d6a8028979bc57d16c4ed">mask</a>          &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;,index_targ_sea_unres,sea_points_unres                            &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;,index_targ_land_unres,land_points_unres)</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="namespacecoast__aj__mod.xhtml#aa34f6fb0c6d8a2986b54a823ca20f58c">   46</a></span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: points_lambda_srce                                <span class="comment">!IN Number of lambda points on source grid</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: points_phi_srce                             <span class="comment">!IN Number of phi points on source grid</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: points                             <span class="comment">!IN Total number of points on target grid</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: index_b_l(points)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                             <span class="comment">!IN  Index of bottom lefthand corner of source gridbox        INTEGER, INTENT(IN) :: index_b_r(points)                             !IN  Index of bottom righthand corner of source gridbox      INTEGER, INTENT(IN) :: land_sea_srce(points_lambda_srce*points_phi_srce)</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                             <span class="comment">!IN Land/sea mask on source grid                             INTEGER, INTENT(INOUT) :: land_sea_targ(points)                              !INOUT Land/sea mask on target grid. If MASK</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                             <span class="comment">!then precalculated land/sea mask on input.                          </span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: coastal_points</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                             <span class="comment">!OUT Number of coastal points on target grid</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: land_points_unres</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                             <span class="comment">!OUT No of unresolved land pts when MASK=T</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: sea_points_unres                             <span class="comment">!OUT No of unresolved sea pts when MASK=T</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: index_targ(points)                              <span class="comment">!OUT Index of target coastal points</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: index_srce(points)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                             <span class="comment">!OUT Index of source points mapped onto</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                             <span class="comment">!target coastal points</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: index_targ_sea_unres(points)</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                             <span class="comment">!OUT Index of sea pts on target grid which a</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                             <span class="comment">!unresolved when MASK=T</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: index_targ_land_unres(points)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                             <span class="comment">!OUT Index of land pts on target grid which</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                             <span class="comment">!unresolved when MASK=T</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::  weight_t_r(points)                             <span class="comment">!IN  Weight applied to value at top right</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                             <span class="comment">!    hand corner of source gridbox</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::  weight_b_l(points)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                             <span class="comment">!IN  Weight applied to value at bottom left</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                             <span class="comment">!    hand corner of source gridbox</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::  weight_b_r(points)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                             <span class="comment">!IN  Weight applied to value at bottom right</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                             <span class="comment">!    hand corner of source gridbox</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::  weight_t_l(points)                             <span class="comment">!IN  Weight applied to value at top left</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                             <span class="comment">!    hand corner of source gridbox</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: mask</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                             <span class="comment">!IN =F, then land/sea mask estimated</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                             <span class="comment">!   =T, then land/sea mask input as LAND_SEA_TARG</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordtype">INTEGER</span>   ::   land_sea_temp(points)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                        <span class="comment">! Array used to accumulate output land/sea</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keywordtype">INTEGER</span>   ::   index_temp(points,4)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                        <span class="comment">! Index of 4 sourrounding source points</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                        <span class="comment">! order by distance</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keywordtype">INTEGER</span>   ::   land_sea_coast(points)                        <span class="comment">! Mask of coastal points on target grid</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordtype">REAL</span>      ::   max_weight(points,4)                          <span class="comment">! Linear interpolation weights ordered by</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keywordtype">LOGICAL</span>   ::   logic_test(points)   <span class="comment">! Logical string used to accumulate tests</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordtype">REAL</span>      ::   temp</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordtype">INTEGER</span>   ::   i,j,k,start,itemp</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">!  1. Sum of land/sea mask values on source grid surrounding each point</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">!    on target grid. This assumes that the mask is integer 1&#39;s and 0&#39;s.</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;COAST_AJ&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  land_sea_temp(i)=land_sea_srce(index_b_l(i))                    &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;           +land_sea_srce(index_b_r(i))                           &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;           +land_sea_srce(index_b_l(i)+points_lambda_srce)        &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;           +land_sea_srce(index_b_r(i)+points_lambda_srce)</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">!  2. Generate coastal gather indices and new land/sea mask</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">! 2.1 Gather index for coastal points on target grid</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  logic_test(i)=land_sea_temp(i) &gt;  0.AND.land_sea_temp(i) &lt;  4</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;coastal_points = 0</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordflow">IF</span>(logic_test(i))<span class="keywordflow">THEN</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    coastal_points=coastal_points + 1</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    index_targ(coastal_points) = i</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">! Set target land-sea mask to land if all 4 surrounding</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">! source points are also land.</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keywordflow">IF</span>(land_sea_temp(i) == 4)land_sea_temp(i)=1</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">! 2.2 Gather index for points which differ between input</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">! land/sea mask and first estimate and are not first</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">! estimate coastal points.</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordflow">IF</span>(mask)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  j=coastal_points</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    land_sea_coast(i)=0</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;   <span class="keywordflow">DO</span> i=1,coastal_points</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    land_sea_coast(index_targ(i))=1</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    logic_test(i)=land_sea_temp(i) /= land_sea_targ(i)            &amp;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                  .AND.land_sea_coast(i) == 0</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  start=coastal_points</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  coastal_points = 0</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">IF</span>(logic_test(i))<span class="keywordflow">THEN</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      coastal_points=coastal_points + 1</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      index_targ(start+coastal_points) = i</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  coastal_points=coastal_points+j</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">! 2.3 Accumulate source weights and indices associated with</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">!     each coastal point on target grid.</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordflow">DO</span> i=1,coastal_points</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  max_weight(i,1)=weight_b_l(index_targ(i))</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  max_weight(i,2)=weight_b_r(index_targ(i))</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  max_weight(i,3)=weight_t_l(index_targ(i))</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  max_weight(i,4)=weight_t_r(index_targ(i))</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  index_temp(i,1)=index_b_l(index_targ(i))</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  index_temp(i,2)=index_b_r(index_targ(i))</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  index_temp(i,3)=index_b_l(index_targ(i))                        &amp;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                  +points_lambda_srce</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  index_temp(i,4)=index_b_r(index_targ(i))                        &amp;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                  +points_lambda_srce</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">! 2.4 Sort gather indices of the 4 surrounding source</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">!     gridpoints according to distance from target gridpoint;</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">!     arranged so that nearest point comes first in list (ie K=1).</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordflow">DO</span> k=1,3</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keywordflow">DO</span> j=k+1,4</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordflow">DO</span> i=1,coastal_points</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      <span class="keywordflow">IF</span>(max_weight(i,k) &lt;  max_weight(i,j))<span class="keywordflow">THEN</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        temp=max_weight(i,k)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        max_weight(i,k)=max_weight(i,j)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        max_weight(i,j)=temp</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        itemp=index_temp(i,k)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        index_temp(i,k)=index_temp(i,j)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        index_temp(i,j)=itemp</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">! 2.5 Initialise source gather index as nearest point on source grid</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">!     to target coastal point.</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordflow">DO</span> i=1,coastal_points</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  index_srce(i)=index_temp(i,1)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">! 2.6 Select source gather index as nearest point of same land/sea type</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">!     when a land/sea mask has been input on target grid</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="keywordflow">IF</span>(mask) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  <span class="keywordflow">DO</span> k=4,1,-1</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordflow">DO</span> i=1,coastal_points</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keywordflow">IF</span>(land_sea_targ(index_targ(i)) == land_sea_srce(index_temp(i,k)))&amp;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                  index_srce(i)=index_temp(i,k)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">! 2.7 Update coastal values of land-sea mask</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keywordflow">DO</span> i=1,coastal_points</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  land_sea_temp(index_targ(i))=land_sea_srce(index_srce(i))</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">! 2.8 Overwrite target land/sea mask with estimate or output</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">! indices of target land/sea points for which none of 4 surrounding</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">! source points are of same type.</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keywordflow">IF</span>(.NOT.mask)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    land_sea_targ(i)=land_sea_temp(i)</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  land_points_unres=0</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  sea_points_unres=0</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    logic_test(i)=land_sea_targ(i) == 0.AND.                      &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                 (land_sea_temp(i) /= land_sea_targ(i))</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  sea_points_unres = 0</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordflow">IF</span>(logic_test(i))<span class="keywordflow">THEN</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      sea_points_unres=sea_points_unres + 1</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;      index_targ_sea_unres(sea_points_unres) = i</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    logic_test(i)=land_sea_targ(i) == 1.AND.                      &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                 (land_sea_temp(i) /= land_sea_targ(i))</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  land_points_unres = 0</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;   <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keywordflow">IF</span>(logic_test(i))<span class="keywordflow">THEN</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      land_points_unres=land_points_unres + 1</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;      index_targ_land_unres(land_points_unres) = i</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;COAST_AJ&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespacecoast__aj__mod.xhtml#aa34f6fb0c6d8a2986b54a823ca20f58c">coast_aj</a></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacecoast__aj__mod.xhtml" title="SUBROUTINE COAST_AJ-!&gt; SUBROUTINE COAST_AJ-!&gt; ">coast_aj_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
