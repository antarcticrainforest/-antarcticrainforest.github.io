<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/river_routing/routedbl.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_bae1cb46695abd27a5646b02ea8f0e2c.xhtml">river_routing</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">routedbl.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="routedbl_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno"><a class="line" href="namespaceroutedbl__mod.xhtml">    4</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceroutedbl__mod.xhtml" title="This file belongs in section: River Routing. ">routedbl_mod</a></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacesetcoef__mod.xhtml" title="This file belongs in section: River Routing. ">setcoef_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacesetcoef__mod.xhtml#aa5cd56c835852787a77836733d805883">setcoef</a></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacesetrval__mod.xhtml" title="This file belongs in section: River Routing. ">setrval_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacesetrval__mod.xhtml#aafba337ed65649fe809e5a486623f849">setrval</a></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacewrtwblog__mod.xhtml" title="This file belongs in section: River Routing. ">wrtwblog_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacewrtwblog__mod.xhtml#a73fa8924e6606558ce10bd2c0c24342a">wrtwblog</a></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespaceroutedbl__mod.xhtml#a4efd64d491ef73ceb97a7cf42e600ef4">routedbl</a>(runoff, ru, ratmed, ndev, dt, nx, ny               &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;     , igrcn, iseq, sto, jmax, rmiss, dout, drunin, area, offset_nx    &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;     , offset_ny)</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="namespaceroutedbl__mod.xhtml#a4efd64d491ef73ceb97a7cf42e600ef4">   17</a></span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordtype">USE </span>mpl<span class="keywordtype">, ONLY</span> : mpl_integer, mpl_max, mpl_real, mpl_sum</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceglobal__2d__sums__mod.xhtml" title="Module GLOBAL_2D_SUMS_MOD. ">global_2d_sums_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceglobal__2d__sums__mod.xhtml#ac3fe3c2679168085c4635a17e5f82215">global_2d_sums</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;   <span class="keywordtype">USE </span><a class="code" href="namespacecp2__mod.xhtml" title="This file belongs in section: River Routing. ">cp2_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecp2__mod.xhtml#a3792c6374412dc1119460d4f455f141d">cp2</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceinitial0__mod.xhtml">initial0_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceinitial0__mod.xhtml#aab9dbd507792aae329f9b4054cdc2f14" title="This file belongs in section: River Routing. ">initial0</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemmd2kgs__mod.xhtml" title="This file belongs in section: River Routing This file belongs in section: River Routing. ">mmd2kgs_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemmd2kgs__mod.xhtml#ad19a5e5c9854c461c42eefd4ad9ed165">mmd2kgs</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceoutflow1__mod.xhtml" title="!&gt; Code Owner: See Unified Model Code Owners HTML page !&gt; Code Owner: See Unified Model Code Owners H...">outflow1_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceoutflow1__mod.xhtml#a518b2b4e71923447d7537373e3c4c101">outflow1</a></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        ndev                                                            &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;       <span class="comment">! number of river routing timesteps/day</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;       ,jmax                                                            &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;       <span class="comment">! number of rows       ,nx                                                              &amp;</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;       <span class="comment">! number of points in a row</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;       ,ny                                                              &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;       <span class="comment">! number of rows</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;       ,igrcn(nx,ny)                                                    &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;       <span class="comment">! gridbox outflow direction</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;       ,iseq(nx,ny)                                                     &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;       <span class="comment">! river flow sequence</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;       ,offset_nx                                                       &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;       <span class="comment">! offset from global lat 0                            ,offset_ny                                                            ! offset from global long 0</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        runoff(nx,ny)                                                   &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;       <span class="comment">! total runoff (Kg/m2/day)</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;       ,dt                                                              &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;       <span class="comment">! river routing timestep (s)</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;       ,ru                                                              &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;       <span class="comment">! effective river flow velocity (m/s)</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;       ,ratmed                                                          &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;       <span class="comment">! River meander ratio</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;       ,rmiss                <span class="comment">! missing data indicator</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;   <span class="comment">! IN/OUT Arguments</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        sto(nx,ny)                                                      &amp;        <span class="comment">! River water storage (Kg)                                          ,DOUT(nx,ny)                                                           ! gridbox outflow (Kg/s)</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="comment">! OUT arguments</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                                  &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        DRUNIN(nx,ny)    <span class="comment">! gridbox inflow (Kg/s)</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;   <span class="comment">! local variablea</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="comment">! halo size of 2, first halo layer for points which advected into</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="comment">! subdomain, 2nd layer received data from points that advect out</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="comment">! from subdomain (2nd layer not used, just to prevent segfaults)  INTEGER, PARAMETER :: halo_x=2, halo_y=2</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="comment">! extended arrays for passed in values </span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordtype">REAL</span>                                                                  &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;          sto_ext(1-halo_x:nx+halo_x,1-halo_y:ny+halo_y)                &amp;          <span class="comment">! River water storage (Kg)</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;       , drunin_ext(1-halo_x:nx+halo_x,1-halo_y:ny+halo_y)              &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;       <span class="comment">! gridbox inflow (Kg/s)</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;       , dout_ext(1-halo_x:nx+halo_x,1-halo_y:ny+halo_y)                &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;       <span class="comment">! gridbox outflow (Kg/s)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;       , rc_ext(1-halo_x:nx+halo_x,1-halo_y:ny+halo_y)                  &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;       <span class="comment">! transfer coefficient   [1/s]</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;       , din_ext(1-halo_x:nx+halo_x, 1-halo_y:ny+halo_y)                &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;       <span class="comment">! total input to river storage [kg/s]</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;       , sto2_ext(1-halo_x:nx+halo_x, 1-halo_y:ny+halo_y)  <span class="comment">! river channel storage [kg] at end of step</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;   <span class="keywordtype">INTEGER</span>                                                               &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;       &amp;  igrcn_ext(1-halo_x:nx+halo_x,1-halo_y:ny+halo_y)              &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;       <span class="comment">! river direction</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;       , iseq_ext(1-halo_x:nx+halo_x,1-halo_y:ny+halo_y)                &amp;        <span class="comment">! river sequence</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;       , inextx_ext(1-halo_x:nx+halo_x, 1-halo_y:ny+halo_y)             &amp;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;       <span class="comment">! next point downstream (x direction)</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;       , inexty_ext(1-halo_x:nx+halo_x, 1-halo_y:ny+halo_y)               <span class="comment">! next point downstream (y direction)</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;   <span class="keywordtype">REAL</span>                                                                  &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;         rlen(nx,ny)                                                    &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;       <span class="comment">! distance between grids [m]</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;       , rvel(nx, ny)                                                   &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;       <span class="comment">! flow velocity          [m/s]</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;       , rc(nx, ny)                                                     &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;       <span class="comment">! transfer coefficient   [1/s]</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;       , area(nx, ny)                                                   &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;       <span class="comment">! grid area              [m^2]</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;       , din(nx, ny)                                                    &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;       <span class="comment">! total input to river storage [kg/s]</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;       , sto2(nx, ny)                                                   &amp;                       <span class="comment">! river channel storage [kg] at end of step</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;       , dtotal(nx,ny)                                                  &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;             , dinput(nx, ny)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;   <span class="keywordtype">REAL</span> stoall, dinall, sto2all, doutall                                 &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;       , drunall, drivall, tot_sto2all, tot_drivall                     &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;       , tot_doutall, tot_drunall <span class="comment">! totals</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;   <span class="keywordtype">INTEGER</span>                                                               &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;       &amp; inextx(nx, ny)                                                 &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;       <span class="comment">! next point downstream (x direction)</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;       , inexty(nx, ny)  <span class="comment">! next point downstream (x direction)</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;   <span class="keywordtype">INTEGER</span> iy, im, idec, ih <span class="comment">! year,month,day,hour</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordtype">INTEGER</span> nseqmax        <span class="comment">! maximum points in any river sequence</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordtype">INTEGER</span> i, j           <span class="comment">! loop counters</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordtype">INTEGER</span> info, my_comm, ierror</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="comment">!** required for inland basin correction</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;   <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;       &amp; tot_flux2ocean                                                 &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;       <span class="comment">! total global flux to ocean       , tot_basin_flux                                                   ! total basin flux before advection</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: N_LOG_VALS = 6</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;           &amp;  sum_r(nx, ny, 2)                                          &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;           <span class="comment">! temp var for calculating reproducible basin flux global sums</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;           , sum_all(2)                                                 &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;           <span class="comment">! temp var for basin_flux sum (1) and flux2ocean (2)           , log_val(N_LOG_VALS), log_val_sum(N_LOG_VALS)</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;           <span class="comment">! used to calculate sums across decomposition of log variables</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="comment">!**</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;   <span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span> :: nseqmax_global = 0  <span class="comment">! maximum river sequence  LOGICAL, SAVE :: first = .TRUE.  ! first time entered routine</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ROUTEDBL&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;   info = 1</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keyword">CALL </span>gc_get_communicator(my_comm,info)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;   iy = 0</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  im = 0</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  idec = 0</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;   <span class="comment">! initialise halo extended variables to zero, halo initialised to zero also   inextx_ext = 0</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  inexty_ext = 0</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  igrcn_ext = 0</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  iseq_ext = 0</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;   din_ext = 0.</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  sto_ext = 0.</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  drunin_ext = 0.</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  dout_ext = 0.</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  sto2_ext = 0.</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  din = 0.</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  sum_r = 0.</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  sum_all = 0.</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  drunin = 0.</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  rc_ext = 0.</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;   <span class="keyword">CALL </span><a class="code" href="namespaceinitial0__mod.xhtml#aab9dbd507792aae329f9b4054cdc2f14" title="This file belongs in section: River Routing. ">initial0</a>(nx, ny, jmax, rmiss, igrcn, iseq, nseqmax,          &amp;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;       &amp;   inextx, inexty, rlen, area, offset_nx, offset_ny)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;   <span class="comment">! fix. the velocity here</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;   <span class="keyword">CALL </span><a class="code" href="namespacesetrval__mod.xhtml#aafba337ed65649fe809e5a486623f849">setrval</a>(nx, ny, rvel, ru, jmax)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; <span class="comment">! set meander coefficient</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespacesetcoef__mod.xhtml#aa5cd56c835852787a77836733d805883">setcoef</a>(nx, ny, rlen, rvel, ratmed, rc, jmax)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">! convert runoff from mm/day to kg/s</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespacemmd2kgs__mod.xhtml#ad19a5e5c9854c461c42eefd4ad9ed165">mmd2kgs</a>(runoff, igrcn, drunin, area, nx, ny, rmiss, jmax)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;   <span class="keyword">CALL </span><a class="code" href="namespacesetrval__mod.xhtml#aafba337ed65649fe809e5a486623f849">setrval</a>(nx, ny, dtotal, 0.0, ny)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;   <span class="keyword">CALL </span><a class="code" href="namespacesetrval__mod.xhtml#aafba337ed65649fe809e5a486623f849">setrval</a>(nx, ny, dinput, 0.0, ny)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="comment">!**********************************************************</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="comment">! Inland basin fix</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <span class="comment">! drunin is in kg/s</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;   sum_r = 0.</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keywordflow">DO</span> j=1, ny</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">DO</span> i=1, nx</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      <span class="keywordflow">IF</span>(igrcn(i,j)==10) <span class="keywordflow">THEN</span>        sum_r(i,j,1) = drunin(i,j)      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        sum_r(i,j,1) = 0.</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;   <span class="keywordflow">where</span>(igrcn .eq. 10) drunin=0.</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;   <span class="comment">!**********************************************************</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="comment">! initialise subdomain of extended fields with original fields</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;   <span class="keywordflow">DO</span> j=1, ny</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">DO</span> i=1, nx</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      sto_ext(i,j) = sto(i,j)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      drunin_ext(i,j) = drunin(i,j)      dout_ext(i,j) = dout(i,j)      igrcn_ext(i,j) = igrcn(i,j)      iseq_ext(i,j) = iseq(i,j)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;           rc_ext(i,j) =  rc(i,j)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      inextx_ext(i,j) = inextx(i,j)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      inexty_ext(i,j) = inexty(i,j)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      din_ext(i,j) = din(i,j)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;   <span class="comment">! transform inext halo to account for grid points oriented to advect out</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="comment">! orginal subdomain so they advect inwards  ! (i.e. halo&#39;s to advect out should reverse direction so they advect</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="comment">! into subdomain)</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;   <span class="comment">! need to retrieve adjacent subdomains row and row_length</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  <span class="comment">! for neighbour processes, since river domain may not be  ! partitioned equally EW or NS.</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="comment">! correcting for halo orientation</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keywordflow">DO</span> j = 1, ny</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordflow">DO</span> i = 1, nx</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;           <span class="keywordflow">IF</span> ((igrcn(i,j) &gt;= 1) .AND. (igrcn(i,j) &lt;= 8)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;             <span class="comment">! a zero boundary means prepare bottom halo, of adjacent        ! subdomain south, to advect upwards</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">IF</span> (inexty(i,j)  ==  0) <span class="keywordflow">THEN</span>          inexty_ext(i,j) =  g_blsize(2, fld_type_r, neighbour(<a class="code" href="namespaceum__parparams.xhtml#a055cccbf23dd97e54f86b7be2fbfccb3">psouth</a>))</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;          <span class="comment">! see **</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;          <span class="keywordflow">IF</span> ((inextx(i,j)  /=  0) .AND. (inextx(i,j) /= (nx+1) ))      &amp;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;               inextx_ext(i,j) =  inextx(i,j)<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="comment">! a ny+1 boundary means prepare top halo, of adjacent        ! subdomain below, to advect downwards</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keywordflow">IF</span> (inexty(i,j)  ==  ny+1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;          inexty_ext(i,j) = 1</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;          <span class="comment">! see **</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;          <span class="keywordflow">IF</span> ((inextx(i,j)  /=  0) .AND. (inextx(i,j) /= (nx+1) ))      &amp;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;               inextx_ext(i,j) =  inextx(i,j)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;               <span class="comment">! a 0 boundary means prepare right halo, of adjacent        ! subdomain ea, to advect leftwards</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keywordflow">IF</span> (inextx(i,j)  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          inextx_ext(i,j) = g_blsize(1, fld_type_r, neighbour(<a class="code" href="namespaceum__parparams.xhtml#adb75b95f9b9de945d4e1c15a922e9eab">pwest</a>))</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;          <span class="comment">! see **</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;          <span class="keywordflow">IF</span> ((inexty(i,j)  /=  0) .AND. (inexty(i,j) /= (ny+1) ))      &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;               inexty_ext(i,j) =  inexty(i,j)<span class="keywordflow">                 END IF</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="comment">! a nx+1 boundary means prepare left halo, of adjacent        ! subdomain right, to advect rightwards</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">IF</span> (inextx(i,j)  ==  nx+1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;          inextx_ext(i,j) = 1</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;          <span class="comment">! see **</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;          <span class="keywordflow">IF</span> ((inexty(i,j)  /=  0) .AND. (inexty(i,j) /= (ny+1) ))      &amp;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;               inexty_ext(i,j) =  inexty(i,j)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keywordflow">             ENDIF</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <span class="comment">! ** don&#39;t forget to initialise partner inext if it&#39;s not  ! advecting across a boundary</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; <span class="comment">! DEPEND ON: swap_bounds  CALL SWAP_BOUNDS(sto_ext, nx, ny, 1, halo_x, halo_y, fld_type_r,      &amp;</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;       .false.)<span class="comment">! DEPEND ON: swap_bounds  CALL SWAP_BOUNDS(drunin_ext, nx, ny, 1, halo_x, halo_y,               &amp;</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;       &amp; fld_type_r, .false.)<span class="comment">! DEPEND ON: swap_bounds  CALL SWAP_BOUNDS(igrcn_ext, nx, ny, 1, halo_x, halo_y,                &amp;</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;       &amp; fld_type_r, .false.)<span class="comment">! DEPEND ON: swap_bounds  CALL SWAP_BOUNDS(iseq_ext, nx, ny, 1, halo_x, halo_y,                 &amp;</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;       &amp; fld_type_r, .false.)<span class="comment">! DEPEND ON: swap_bounds  CALL SWAP_BOUNDS(rc_ext, nx, ny, 1, halo_x, halo_y,                   &amp;</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;       &amp; fld_type_r, .false.)<span class="comment">! DEPEND ON: swap_bounds  CALL SWAP_BOUNDS(inextx_ext, nx, ny, 1, halo_x, halo_y,               &amp;</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;       &amp; fld_type_r, .false.)<span class="comment">! DEPEND ON: swap_bounds  CALL SWAP_BOUNDS(inexty_ext, nx, ny, 1, halo_x, halo_y,               &amp;</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;       &amp; fld_type_r, .false.)<span class="comment">! DEPEND ON: swap_bounds  CALL SWAP_BOUNDS(din_ext, nx, ny, 1, halo_x, halo_y,                  &amp;</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;       &amp; fld_type_r, .false.)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">! reinitialise inext to values prior to halo orientation changes so</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">! as those changes we&#39;re a correction adjacent subdomain</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  <span class="keywordflow">DO</span> j = 1, ny</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordflow">DO</span> i = 1, nx</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      inextx_ext(i,j) = inextx(i,j)</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;      inexty_ext(i,j) = inexty(i,j)<span class="keywordflow">    ENDDO</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keywordflow">  ENDDO</span> </div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">! find global max river sequence (river sequence field does not change)</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  <span class="keywordflow">IF</span> (first) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">CALL </span>mpl_allreduce(nseqmax, nseqmax_global, 1, mpl_integer,         &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;         &amp; mpl_max, my_comm, ierror)</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    first = .false.</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160; <span class="comment">! advect river grid points</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceoutflow1__mod.xhtml#a518b2b4e71923447d7537373e3c4c101">outflow1</a>(sto_ext, drunin_ext, rc_ext, dt, igrcn_ext              &amp;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;       , iseq_ext, inextx_ext, inexty_ext, nseqmax_global, nx, ny, jmax &amp;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;       , sto2_ext, din_ext, dout_ext, drunall, drivall, stoall, sto2all &amp;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;       , doutall, dinall, halo_x, halo_y, nseqmax)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">! copy back from halo variables</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  <span class="keywordflow">DO</span> j=1, ny</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">DO</span> i=1, nx</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;           dout(i,j) = dout_ext(i,j)</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      sto2(i,j) = sto2_ext(i,j)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;      din(i,j) = din_ext(i,j)<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;   <span class="comment">!***********************************************************</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  <span class="comment">!Inland basin fix</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  <span class="comment">!Add flux from inland basin to river outflow points</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;   <span class="keywordflow">DO</span> j=1, ny</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordflow">DO</span> i=1, nx</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;      <span class="keywordflow">IF</span>(igrcn(i,j) == 9) <span class="keywordflow">THEN</span>        sum_r(i,j,2) = dout(i,j)      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        sum_r(i,j,2) = 0.</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160; <span class="comment">! calculate global sums</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceglobal__2d__sums__mod.xhtml#ac3fe3c2679168085c4635a17e5f82215">global_2d_sums</a>(sum_r, nx, ny, 0, 0, 2, sum_all)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  tot_basin_flux = sum_all(1)</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  tot_flux2ocean = sum_all(2)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  <span class="keywordflow">where</span> (igrcn .eq. 9) dout=dout+(tot_basin_flux/tot_flux2ocean)*dout</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;   <span class="comment">!***********************************************************</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="comment">! Add in the runoff at TRIP seapoints produced by interpolation from</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  <span class="comment">! ATMOS runoff to conserve due to mismatch between grids</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="comment">! Note that this will not appear in RINP, ROUT written by</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;   <span class="keywordflow">DO</span> i = 1, nx</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordflow">DO</span> j = 1, jmax</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;      <span class="keywordflow">IF</span>(iseq(i,j) == rmiss)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keywordflow">IF</span>(drunin(i,j) /= 0.0)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;          dout(i,j) = drunin(i,j)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;          din(i,j) = drunin(i,j)</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;          <span class="comment">! Add in to the totals for water balance check</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;          drunall = drunall + drunin(i,j)</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;          dinall = dinall + din(i,j)*dt</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;          doutall = doutall + dout(i,j)*dt</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;          dout(i,j) = rmiss</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;          din(i,j) = rmiss</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="keywordflow">    ENDDO</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keywordflow">  ENDDO</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;  log_val(1) = stoall  log_val(2) = sto2all</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;  log_val(3) = dinall  log_val(4) = doutall</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;  log_val(5) = drunall  log_val(6) = drivall  <span class="comment">! warning: does not bit reproduce on different proc decompositions</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;  <span class="keyword">CALL </span>mpl_allreduce(log_val, log_val_sum, n_log_vals, mpl_real,        &amp;       &amp; mpl_sum, my_comm, ierror)</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  stoall = log_val_sum(1)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  sto2all = log_val_sum(2)</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  dinall = log_val_sum(3)  doutall = log_val_sum(4)</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  drunall = log_val_sum(5)  drivall = log_val_sum(6)</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  <span class="keyword">call </span><a class="code" href="namespacewrtwblog__mod.xhtml#a73fa8924e6606558ce10bd2c0c24342a">wrtwblog</a>(6, iy, im, idec, 0, ndev, stoall, sto2all, dinall,      &amp;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;       doutall, drunall, drivall, dt)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespacecp2__mod.xhtml#a3792c6374412dc1119460d4f455f141d">cp2</a>(sto2, sto, nx, ny, jmax)</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;   <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ROUTEDBL&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespaceroutedbl__mod.xhtml#a4efd64d491ef73ceb97a7cf42e600ef4">routedbl</a></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceroutedbl__mod.xhtml" title="This file belongs in section: River Routing. ">routedbl_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
