<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/COSP/quickbeam/radar_simulator.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_ed81249674aa85f63c400e857765c346.xhtml">COSP</a></li><li class="navelem"><a class="el" href="dir_447bb538040597e7934e69c748403153.xhtml">quickbeam</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">radar_simulator.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="radar__simulator_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="keyword">  subroutine </span><a class="code" href="radar__simulator_8f90.xhtml#a86dfcea0ee771e7e868dcf4571284783">radar_simulator</a>( &amp;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;    hp, &amp;                       ! hydrometeor and radar simulator properties </div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    nprof,ngate, &amp;              ! size of input matricies</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    undef, &amp;                    ! value for missing data</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;    hgt_matrix,hm_matrix,re_matrix,Np_matrix, &amp;        ! inputs</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;    p_matrix,t_matrix,rh_matrix, &amp;          </div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;    Ze_non,Ze_ray,a_to_vol,g_to_vol,dBZe, &amp;            ! outputs</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;    g_to_vol_in,g_to_vol_out)   <span class="comment">! optional in/out</span></div><div class="line"><a name="l00009"></a><span class="lineno"><a class="line" href="radar__simulator_8f90.xhtml#a86dfcea0ee771e7e868dcf4571284783">    9</a></span>&#160; </div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <span class="keywordtype">use </span><a class="code" href="namespacem__mrgrnk.xhtml">m_mrgrnk</a> </div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="keywordtype">use </span><a class="code" href="namespacearray__lib.xhtml">array_lib</a></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keywordtype">use </span><a class="code" href="namespacemath__lib.xhtml">math_lib</a></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="keywordtype">use </span><a class="code" href="namespaceoptics__lib.xhtml">optics_lib</a></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keywordtype">use </span><a class="code" href="namespaceradar__simulator__types.xhtml">radar_simulator_types</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemod__cosp__utils.xhtml" title="(c) British Crown Copyright 2008-2013, the Met Office. (c) British Crown Copyright 2008-2013...">mod_cosp_utils</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemod__cosp__utils.xhtml#a73e9ff71214152fd204ef6eb6087efcf">cosp_ereport</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="comment">!use scale_LUTs_io</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <span class="keywordtype">implicit none</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  </div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">! Purpose:</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">!   Simulates a vertical profile of radar reflectivity</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">!   Originally Part of QuickBeam v1.04 by John Haynes &amp; Roger Marchand.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">!   but has been substantially modified since that time by</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">!   Laura Fowler and Roger Marchand (see modifications below).</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">! Inputs:</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">!   [hp]              structure that defines hydrometeor types and other radar properties</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">!   [nprof]           number of hydrometeor profiles</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">!   [ngate]           number of vertical layers</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">!   [undef]           missing data value</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">!   (The following 5 arrays must be in order from closest to the radar</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">!    to farthest...)</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">!   [hgt_matrix]      height of hydrometeors (km)</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">!   [p_matrix]        pressure profile (hPa)</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">!   [t_matrix]        temperature profile (K)</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">!   [rh_matrix]       relative humidity profile (%) -- only needed if gaseous aborption calculated.</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">!   [hm_matrix]       table of hydrometeor mixing rations (g/kg)</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">!   [re_matrix]       table of hydrometeor effective radii.  0 ==&gt; use defaults. (units=microns)    </span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">!   [Np_matrix]       table of hydrometeor number concentration.  0 ==&gt; use defaults. (units = 1/kg)</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">! Outputs:</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">!   [Ze_non]          radar reflectivity without attenuation (dBZ)</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">!   [Ze_ray]          Rayleigh reflectivity (dBZ)</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">!   [h_atten_to_vol]  attenuation by hydromets, radar to vol (dB)</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">!   [g_atten_to_vol]  gaseous atteunation, radar to vol (dB)</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">!   [dBZe]            effective radar reflectivity factor (dBZ)</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">! Optional:</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">!   [g_to_vol_in]     integrated atten due to gases, r&gt;v (dB).</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">!                     If present then is used as gaseous absorption, independently of the</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">!                     value in use_gas_abs</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">!   [g_to_vol_out]    integrated atten due to gases, r&gt;v (dB).</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">!                     If present then gaseous absorption for each profile is returned here.</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">! Created:</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">!   11/28/2005  John Haynes (haynes@atmos.colostate.edu)</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">! Modified:  </span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">!   09/2006  placed into subroutine form (Roger Marchand,JMH)</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">!   08/2007  added equivalent volume spheres, Z and N scalling most distrubtion types (Roger Marchand)</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">!   01/2008  &#39;Do while&#39; to determine if hydrometeor(s) present in volume</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">!             changed for vectorization purposes (A. Bodas-Salcedo)</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">!   07/2010  V3.0 ... Modified to load or save scale factors to disk as a Look-Up Table (LUT)</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">!      ... All hydrometeor and radar simulator properties now included in hp structure</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">!      ... hp structure should be initialized by call to radar_simulator_init prior </span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">!      ... to calling this subroutine.  </span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">!      Also ... Support of Morrison 2-moment style microphyscis (Np_matrix) added </span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">!      ... Changes implement by Roj Marchand following work by Laura Fowler</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">!   10/2011  Modified ngate loop to go in either direction depending on flag </span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">!       hp%radar_at_layer_one.  This affects the direction in which attenuation is summed.</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">!       Also removed called to AVINT for gas and hydrometeor attenuation and replaced with simple</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">!       summation. (Roger Marchand)</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">!    </span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">! ----- INPUTS -----  </span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keywordtype">logical</span>, <span class="keywordtype">parameter</span>  ::  DO_LUT_TEST = .false. </div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordtype">logical</span>, <span class="keywordtype">parameter</span>  ::  DO_NP_TEST = .false. </div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordtype">type</span>(<a class="code" href="structradar__simulator__types_1_1class__param.xhtml">class_param</a>), <span class="keywordtype">intent(inout)</span> :: hp</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  </div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">integer</span>, <span class="keywordtype">intent(in)</span> ::  nprof,ngate</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    </div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">real</span> undef</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordtype">real*8</span>, <span class="keywordtype">dimension(nprof,ngate)</span>, <span class="keywordtype">intent(in)</span> :: &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    hgt_matrix, p_matrix,t_matrix,rh_matrix</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    </div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordtype">real*8</span>, <span class="keywordtype">dimension(hp%nhclass,nprof,ngate)</span>, <span class="keywordtype">intent(in)</span> :: hm_matrix</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordtype">real*8</span>, <span class="keywordtype">dimension(hp%nhclass,nprof,ngate)</span>, <span class="keywordtype">intent(inout)</span> :: re_matrix</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keywordtype">real*8</span>, <span class="keywordtype">dimension(hp%nhclass,nprof,ngate)</span>, <span class="keywordtype">intent(in)</span>    :: Np_matrix</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    </div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">! ----- OUTPUTS -----</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordtype">real*8</span>, <span class="keywordtype">dimension(nprof,ngate)</span>, <span class="keywordtype">intent(out)</span> :: Ze_non,Ze_ray, &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;   g_to_vol,dBZe,a_to_vol</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">! ----- OPTIONAL -----</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordtype">real*8</span>, <span class="keywordtype">optional</span>, <span class="keywordtype">dimension(nprof,ngate)</span> :: &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  g_to_vol_in,g_to_vol_out <span class="comment">! integrated atten due to gases, r&gt;v (dB). This allows to output and then input</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                           <span class="comment">! the same gaseous absorption in different calls. Optional to allow compatibility</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                           <span class="comment">! with original version. A. Bodas April 2008.</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        </div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">!  real*8, dimension(nprof,ngate) :: kr_matrix </span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! ----- INTERNAL -----</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: one_third = 1.0/3.0</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordtype">real*8</span> :: t_kelvin</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordtype">integer</span> :: &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  phase, &amp;      <span class="comment">! 0=liquid, 1=ice</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  ns            <span class="comment">! number of discrete drop sizes</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordtype">logical</span> :: hydro  <span class="comment">! true=hydrometeor in vol, false=none</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordtype">real*8</span> :: &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  rho_a, &amp;      <span class="comment">! air density (kg m^-3)</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  gases         <span class="comment">! function: 2-way gas atten (dB/km)</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordtype">real*8</span>, <span class="keywordtype">dimension(:)</span>, <span class="keywordtype">allocatable</span> :: &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  Di, Deq, &amp;          <span class="comment">! discrete drop sizes (um)</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  Ni, &amp;          <span class="comment">! discrete concentrations (cm^-3 um^-1)</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  rhoi           <span class="comment">! discrete densities (kg m^-3)</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordtype">real*8</span>, <span class="keywordtype">dimension(nprof, ngate)</span> :: &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  z_vol, &amp;      <span class="comment">! effective reflectivity factor (mm^6/m^3)</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  z_ray, &amp;      <span class="comment">! reflectivity factor, Rayleigh only (mm^6/m^3)</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  kr_vol, &amp;     <span class="comment">! attenuation coefficient hydro (dB/km)</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  g_vol         <span class="comment">! attenuation coefficient gases (dB/km)</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keywordtype">integer</span>,<span class="keywordtype">parameter</span> :: KR8 = selected_real_kind(15,300)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordtype">real*8</span>, <span class="keywordtype">parameter</span> :: xx = -1.0_kr8</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordtype">real*8</span>,  <span class="keywordtype">dimension(:)</span>, <span class="keywordtype">allocatable</span> :: xxa</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordtype">real*8</span> :: kr, ze, zr, pi, scale_factor, tc, Re, ld, tmp1, ze2, kr2, apm, bpm</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordtype">real*8</span> :: half_a_atten_current,half_a_atten_above</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordtype">real*8</span> :: half_g_atten_current,half_g_atten_above</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keywordtype">integer*4</span> :: tp, i, j, k, pr, itt, iff</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordtype">real*8</span>    step,base, Np</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordtype">integer*4</span> iRe_type,n,max_bin</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordtype">integer</span>   start_gate,end_gate,d_gate</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  </div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keywordtype">logical</span> :: g_to_vol_in_present, g_to_vol_out_present</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="comment">! Error handling</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keywordtype">INTEGER</span> :: icode</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordtype">CHARACTER(LEN=200)</span> :: cmessage</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordtype">CHARACTER(LEN=*)</span>,<span class="keywordtype">PARAMETER</span> :: routine_name=<span class="stringliteral">&#39;radar_simulator&#39;</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="comment">! Logicals to avoid calling present within the loops</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  g_to_vol_in_present  = <span class="keyword">present</span>(g_to_vol_in)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  g_to_vol_out_present = <span class="keyword">present</span>(g_to_vol_out)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  </div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="comment">! load scaling matricies from disk -- but only the first time this subroutine is called</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keywordflow">if</span>(hp%load_scale_LUTs) <span class="keywordflow">then</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;       </div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="comment">!call load_scale_LUTs(hp)</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    hp%load_scale_LUTs=.false.    </div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    hp%Z_scale_added_flag = .false.    <span class="comment">! will be set true if scaling Look Up Tables are modified during run  </span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  </div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keywordflow">  endif</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  </div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  pi = acos(-1.0)</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  </div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">!   ----- Initialisation -----</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  g_to_vol = 0.0</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  a_to_vol = 0.0</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  z_vol    = 0.0</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  z_ray    = 0.0</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  kr_vol   = 0.0</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">!   // loop over each range gate (ngate) ... starting with layer closest to the radar !</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <span class="keywordflow">if</span>(hp%radar_at_layer_one) <span class="keywordflow">then</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    start_gate=1</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword">    end</span>_gate=ngate</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    d_gate=1</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keywordflow">else</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    start_gate=ngate</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keyword">    end</span>_gate=1</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    d_gate=-1</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordflow">  endif</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keywordflow">do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=start_gate,end_gate,d_gate</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="comment">! // loop over each profile (nprof)</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">do</span> pr=1,nprof</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      t_kelvin = t_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">!     :: determine if hydrometeor(s) present in volume</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      hydro = .false.</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      <span class="keywordflow">do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>=1,hp%nhclass</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordflow">if</span> ((hm_matrix(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &gt; 1e-12) .and. (hp%dtype(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) &gt; 0)) <span class="keywordflow">then</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;          hydro = .true.</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;          <span class="keywordflow">exit</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keywordflow">        endif</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordflow">      enddo</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">!     :: if there is hydrometeor in the volume</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;      <span class="keywordflow">if</span> (hydro) <span class="keywordflow">then</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        rho_a = (p_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)*100.)/(287.0*(t_kelvin))</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">!       :: loop over hydrometeor type</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">do</span> tp=1,hp%nhclass</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;          <span class="keywordflow">if</span> (hm_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &lt;= 1e-12) cycle</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;          phase = hp%phase(tp)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;          <span class="keywordflow">if</span> (phase==0) <span class="keywordflow">then</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            itt = infind(hp%mt_ttl,t_kelvin)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;          <span class="keywordflow">else</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            itt = infind(hp%mt_tti,t_kelvin)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordflow">          endif</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;          <span class="keywordflow">if</span> (re_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>).eq.0) <span class="keywordflow">then</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">!DEPENDS ON: calc_Re</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keyword">call </span><a class="code" href="calc___re_8f90.xhtml#aaab7f3b5a2da7f7d644551dd8f88baa2">calc_re</a>(hm_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),np_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),rho_a,       &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                hp%dtype(tp),hp%dmin(tp),hp%dmax(tp),hp%apm(tp),hp%bpm(tp), &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;              hp%rho(tp),hp%p1(tp),hp%p2(tp),hp%p3(tp),re)</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            re_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=re</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          <span class="keywordflow">else</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            <span class="keywordflow">if</span> (np_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)&gt;0) <span class="keywordflow">then</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                icode = -9</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                cmessage = <span class="stringliteral">&#39;Re and Np set for the same volume&amp;hydrometeor &#39;</span>//  &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                           <span class="stringliteral">&#39;type. Np is being ignored.&#39;</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                <span class="keyword">CALL </span><a class="code" href="namespacemod__cosp__utils.xhtml#a73e9ff71214152fd204ef6eb6087efcf">cosp_ereport</a>(routine_name,cmessage,icode)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordflow">            endif</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            re = re_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keywordflow">          endif</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;          ire_type=1</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;          <span class="keywordflow">if</span>(re.gt.0) <span class="keywordflow">then</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="comment">! determine index in to scale LUT</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <span class="comment">!</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <span class="comment">! distance between Re points (defined by &quot;base&quot; and &quot;step&quot;) for</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            <span class="comment">! each interval of size Re_BIN_LENGTH</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            <span class="comment">! Integer asignment, avoids calling floor intrinsic</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            n=re/re_bin_length</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            <span class="keywordflow">if</span> (n&gt;=re_max_bin) n=re_max_bin-1</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            step=hp%step_list(n+1)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            base=hp%base_list(n+1)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            ire_type=re/step</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <span class="keywordflow">if</span> (ire_type.lt.1) ire_type=1</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            re=step*(ire_type+0.5)  <span class="comment">! set value of Re to closest value allowed in LUT.</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            ire_type=ire_type+base-int(n*re_bin_length/step)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            <span class="comment">! make sure iRe_type is within bounds</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="keywordflow">if</span> (ire_type.ge.nre_types) <span class="keywordflow">then</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">!               write(*,*) &#39;Warning: size of Re exceed value permitted &#39;, &amp;</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">!                    &#39;in Look-Up Table (LUT).  Will calculate. &#39;</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;               <span class="comment">! no scaling allowed</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;               ire_type=nre_types</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;               hp%Z_scale_flag(tp,itt,ire_type)=.false.</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;               <span class="comment">! set value in re_matrix to closest values in LUT</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;              <span class="keywordflow">if</span> (.not. do_lut_test) re_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=re</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keywordflow">            endif</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordflow">          endif</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;          <span class="comment">! use Ze_scaled, Zr_scaled, and kr_scaled ... if know them</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;          <span class="comment">! if not we will calculate Ze, Zr, and Kr from the distribution parameters</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;          <span class="keywordflow">if</span>( (.not. hp%Z_scale_flag(tp,itt,ire_type)) .or. do_lut_test)  <span class="keywordflow">then</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            <span class="comment">! :: create a distribution of hydrometeors within volume</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordflow">select case</span>(hp%dtype(tp))</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;              <span class="keywordflow">case</span>(4)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                ns = 1</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <span class="keyword">allocate</span>(di(ns),ni(ns),rhoi(ns),xxa(ns),deq(ns))</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                di = hp%p1(tp)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                ni = 0.</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keywordflow">              case default</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                ns = <a class="code" href="namespaceradar__simulator__types.xhtml#af96e689b5e8c0361ca00ecf5ef107ab6">nd</a>   <span class="comment">! constant defined in radar_simulator_types.f90</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                <span class="keyword">allocate</span>(di(ns),ni(ns),rhoi(ns),xxa(ns),deq(ns))</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                di = hp%D</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                ni = 0.</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keywordflow">            end select</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">! DEPENDS ON: dsd</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                <span class="keyword">call </span><a class="code" href="dsd_8f90.xhtml#a103319d6beae6736203dcb68e2fc8d5d">dsd</a>(hm_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),re_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),np_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>), &amp;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                     di,ni,ns,hp%dtype(tp),rho_a,t_kelvin, &amp;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                     hp%dmin(tp),hp%dmax(tp),hp%apm(tp),hp%bpm(tp), &amp;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                     hp%rho(tp),hp%p1(tp),hp%p2(tp),hp%p3(tp))</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="comment">! calculate particle density</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <span class="keywordflow">if</span> (phase == 1) <span class="keywordflow">then</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;              <span class="keywordflow">if</span> (hp%rho(tp) &lt; 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="comment">! Use equivalent volume spheres.</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                hp%rho_eff(tp,1:ns,ire_type) = 917          <span class="comment">! solid ice == equivalent volume approach</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                deq = ( ( 6/pi*hp%apm(tp)/917 ) ** (1.0/3.0) ) * ( (di*1e-6) ** (hp%bpm(tp)/3.0) )  * 1e6</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;              <span class="keywordflow">else</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;               <span class="comment">! Equivalent volume sphere (solid ice rho_ice=917 kg/m^3).</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                hp%rho_eff(tp,1:ns,ire_type) = 917</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                deq=di * ((hp%rho(tp)/917)**(1.0/3.0))</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keywordflow">              endif</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;              <span class="comment">! I assume here that water phase droplets are spheres.</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;              <span class="comment">! hp%rho should be ~ 1000  or hp%apm=524 .and. hp%bpm=3</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;              deq = di</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordflow">            endif</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="comment">! calculate effective reflectivity factor of volume</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            xxa = -9.9</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            rhoi = hp%rho_eff(tp,1:ns,ire_type)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">! DEPENDS ON: zeff</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <span class="keyword">call </span><a class="code" href="zeff_8f90.xhtml#a2c095e661b084626c2fff552914c906a">zeff</a>(hp%freq,deq,ni,ns,hp%k2,t_kelvin,phase,hp%do_ray, &amp;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                      ze,zr,kr,xxa,xxa,rhoi)</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            <span class="comment">! test code ... compare Np value input to routine with sum of DSD</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            <span class="comment">! NOTE: if .not. DO_LUT_TEST, then you are checking the LUT approximation </span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            <span class="comment">! not just the DSD representation given by Ni</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <span class="keywordflow">if</span>(np_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)&gt;0 .and. do_np_test ) <span class="keywordflow">then</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;              np = path_integral(ni,di,1,ns-1)/rho_a*1e6</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;              <span class="comment">! Note: Representation is not great or small Re &lt; 2 </span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;              <span class="keywordflow">if</span>( (np_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)-np)/np_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)&gt;0.1 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                icode = 9</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                cmessage = <span class="stringliteral">&#39;Np input does not match sum(N).&#39;</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                <span class="keyword">CALL </span><a class="code" href="namespacemod__cosp__utils.xhtml#a73e9ff71214152fd204ef6eb6087efcf">cosp_ereport</a>(routine_name,cmessage,icode)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keywordflow">              endif</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keywordflow">            endif</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <span class="keyword">deallocate</span>(di,ni,rhoi,xxa,deq)</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            <span class="comment">! LUT test code</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            <span class="comment">! This segment of code compares full calculation to scaling result</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <span class="keywordflow">if</span> ( hp%Z_scale_flag(tp,itt,ire_type) .and. do_lut_test )  <span class="keywordflow">then</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;              scale_factor=rho_a*hm_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;              <span class="comment">! if more than 2 dBZe difference print error message/parameters.</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;              <span class="keywordflow">if</span> ( abs(10*log10(ze) - 10*log10(hp%Ze_scaled(tp,itt,ire_type) * &amp;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                   scale_factor)) &gt; 2 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                icode = 9</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                cmessage = <span class="stringliteral">&#39;More than 2 dBZe difference.&#39;</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                <span class="keyword">CALL </span><a class="code" href="namespacemod__cosp__utils.xhtml#a73e9ff71214152fd204ef6eb6087efcf">cosp_ereport</a>(routine_name,cmessage,icode)</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="keywordflow">              endif</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="keywordflow">            endif</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;          <span class="keywordflow">else</span> <span class="comment">! can use z scaling</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            scale_factor=rho_a*hm_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            zr = hp%Zr_scaled(tp,itt,ire_type) * scale_factor</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            ze = hp%Ze_scaled(tp,itt,ire_type) * scale_factor</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            kr = hp%kr_scaled(tp,itt,ire_type) * scale_factor</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="keywordflow">          endif</span>  <span class="comment">! end z_scaling</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;          kr_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = kr_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + kr</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;          z_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  = z_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  + ze</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;          z_ray(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  = z_ray(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  + zr</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;          <span class="comment">! construct Ze_scaled, Zr_scaled, and kr_scaled ... if we can</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;          <span class="keywordflow">if</span> ( .not. hp%Z_scale_flag(tp,itt,ire_type) ) <span class="keywordflow">then</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            <span class="keywordflow">if</span> (ire_type&gt;1) <span class="keywordflow">then</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;              scale_factor=rho_a*hm_matrix(tp,pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;              hp%Ze_scaled(tp,itt,ire_type) = ze/ scale_factor</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;              hp%Zr_scaled(tp,itt,ire_type) = zr/ scale_factor</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;              hp%kr_scaled(tp,itt,ire_type) = kr/ scale_factor</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;              hp%Z_scale_flag(tp,itt,ire_type) = .true.</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;              hp%Z_scale_added_flag(tp,itt,ire_type)=.true.</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keywordflow">            endif</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keywordflow">          endif</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="keywordflow">        enddo</span>  <span class="comment">! end loop of tp (hydrometeor type)</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">!     :: volume is hydrometeor-free  </span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        kr_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 0</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        z_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  = undef</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        z_ray(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  = undef</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;      <span class="comment">!     :: attenuation due to hydrometeors between radar and volume</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;      <span class="comment">!</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;      <span class="comment">! NOTE old scheme integrates attenuation only for the layers ABOVE</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;      <span class="comment">! the current layer ... i.e. 1 to k-1 rather than 1 to k ...</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;      <span class="comment">! which may be a problem.   ROJ</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;      <span class="comment">! in the new scheme I assign have the attenuation to the current layer</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;      <span class="keywordflow">if</span>(d_gate==1) <span class="keywordflow">then</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <span class="comment">! dheight calcuations assumes hgt_matrix points are the cell mid-points.</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>&gt;2) <span class="keywordflow">then</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;          <span class="comment">! add to previous value to half of above layer + half of current layer</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;          a_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=  a_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1) + &amp;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;               (kr_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1)+kr_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))*(hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1)-hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;          a_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=  kr_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)*(hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)-hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1))</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="keywordflow">        endif</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;      <span class="keywordflow">else</span>   <span class="comment">! d_gate==-1</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>&lt;ngate) <span class="keywordflow">then</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;          <span class="comment">! add to previous value half of above layer + half of current layer</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;          a_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = a_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1) + &amp;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;              (kr_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1)+kr_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))*(hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1)-hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;          a_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)= kr_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)*(hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)-hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1))</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="keywordflow">         endif</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;      <span class="comment">!     :: attenuation due to gaseous absorption between radar and volume</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;      <span class="keywordflow">if</span> (g_to_vol_in_present) <span class="keywordflow">then</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        g_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = g_to_vol_in(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        <span class="keywordflow">if</span> ( (hp%use_gas_abs == 1) .or. ((hp%use_gas_abs == 2) .and. (pr == 1)) ) <span class="keywordflow">then</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">!DEPENDS ON: gases</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;          g_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = <a class="code" href="gases_8f90.xhtml#abc586aec605485a0e4d7cc42a3fb597a">gases</a>(p_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),t_kelvin,rh_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),hp%freq)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;          <span class="keywordflow">if</span> (d_gate==1) <span class="keywordflow">then</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>&gt;1) <span class="keywordflow">then</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;              <span class="comment">! add to previous value to half of above layer + half of current layer</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;              g_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =  g_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1) + &amp;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                  0.5*(g_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1)+g_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))*(hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1)-hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;              g_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=  0.5*g_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)*(hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)-hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1))</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="keywordflow">            endif</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;           <span class="keywordflow">else</span>   <span class="comment">! d_gate==-1</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>&lt;ngate) <span class="keywordflow">then</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;              <span class="comment">! add to previous value to half of above layer + half of current layer</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;              g_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = g_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1) + &amp;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                   0.5*(g_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1)+g_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))*(hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1)-hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;              g_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)= 0.5*g_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)*(hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)-hgt_matrix(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1))</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="keywordflow">            endif</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="keywordflow">          endif</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (hp%use_gas_abs == 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;          g_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 0</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="keywordflow">        endif</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;      <span class="comment">! Compute Rayleigh reflectivity, and full, attenuated reflectivity</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;      <span class="keywordflow">if</span> ((hp%do_ray == 1) .and. (z_ray(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &gt; 0)) <span class="keywordflow">then</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        ze_ray(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 10*log10(z_ray(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        ze_ray(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = undef</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;      <span class="keywordflow">if</span> (z_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &gt; 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        ze_non(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 10*log10(z_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        dbze(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = ze_non(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)-a_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)-g_to_vol(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        dbze(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = undef</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        ze_non(pr,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = undef</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="keywordflow">    enddo</span>   <span class="comment">! end loop over pr (profile)</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keywordflow">  enddo</span> <span class="comment">! end loop of k (range gate)</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;  <span class="comment">! Output array with gaseous absorption</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;  <span class="keywordflow">if</span> (g_to_vol_out_present) g_to_vol_out = g_to_vol</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;  <span class="comment">! save any updates made </span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;  <span class="comment">!if (hp%update_scale_LUTs) call save_scale_LUTs(hp)</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="keyword">  end subroutine </span><a class="code" href="radar__simulator_8f90.xhtml#a86dfcea0ee771e7e868dcf4571284783">radar_simulator</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
