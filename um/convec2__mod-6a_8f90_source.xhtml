<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/convec2_mod-6a.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">convec2_mod-6a.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="convec2__mod-6a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespaceconvec2__6a__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceconvec2__6a__mod.xhtml" title="Completes lifting of the parcel from layer k to k+1. ">convec2_6a_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespaceconvec2__6a__mod.xhtml#abc6e042d8c327cb1ce6223f285643776" title="Completes lifting of the parcel from layer k to k+1. ">convec2_6a</a>(k, npnts, np_full, nlev, ntra, ad_on, new_termc,       &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                      start_lev,                                             &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                      pstar, pk, pkp1, delpk,                                &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                      delpkp1, delpkp12, delp_uv_k, delp_uv_kp1,             &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                      exk, exkp1,                                            &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                      thek, thekp1, qek, qekp1,                              &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                      qclek, qclekp1, qcfek, qcfekp1,                        &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                      qsek, qsekp1,                                          &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                      cflek, cflekp1,  cffek,  cffekp1,                      &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                      bcfek,  bcfekp1,                                       &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                      thpk, qpk, qclpk, qcfpk,                               &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                      thpi, qpi, expi,                                       &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                      rbuoyk, rbuoykp1, xsbmin,                              &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                      watldek, watldekp1, watldpk, watldpkp1,                &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                      Qlkp1, Qfkp1, Frezkp1,                                 &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                      ekp14, ekp34, amdetk, flxk, flx_init,                  &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                      uek, uekp1, vek, vekp1,                                &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                      upk, vpk,                                              &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                      traek, traekp1, trapk,                                 &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                      zkm1, zk, zkp12, zkp1, w2p_km1,                        &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                      l_q_interact, l_mom_gk, l_tracer,                      &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                      bgmk, bgmkp1, bwk,                                     &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                      bwkp1, blowst, bland,                                  &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                      ! In/out</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                      lcbase, lctop,                                         &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                      thpkp1, qpkp1, qclpkp1, qcfpkp1,                       &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                      dthek, dqek, dqclek, dqcfek,                           &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                      tcw, depth, cclwp, lcca,                               &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                      cape, dcpbydt, relh, dptot, max_cfl,                   &amp;                      eflux_u_ud, eflux_v_ud,                                &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                      duek, dvek,                                            &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                      dtraek, w2p_k,                                         &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                      bterm, blatent,                                        &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                      ! Out</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                      iccb, icct,                                            &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                      dcflek, dcffek, dbcfek,                                &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                      dthekp1, dqekp1, dqclekp1, dqcfekp1,                   &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                      dcflekp1, dcffekp1, dbcfekp1,                          &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                      prekp1, deltak, flxkp12, flxkp1,                       &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                      cca, ccwkp1,                                           &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                      upkp1, vpkp1,                                          &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                      duekp1, dvekp1,                                        &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                      trapkp1,                                               &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                      dtraekp1, w2p_kp1 )</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="namespaceconvec2__6a__mod.xhtml#abc6e042d8c327cb1ce6223f285643776">   76</a></span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__run__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_run_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecv__run__mod.xhtml#a2e8228ff28676ed7085262e53bab7cee">cape_opt</a>, <a class="code" href="namespacecv__run__mod.xhtml#adb523e824ee63bf708b36e5ef08eb898">cnv_wat_load_opt</a></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__stash__flg__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_stash_flg_mod</a><span class="keywordtype">,    ONLY</span>: <a class="code" href="namespacecv__stash__flg__mod.xhtml#a50f06f66e4ccdedcd3c49d357976dbf7">flg_w_eqn</a></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: cp, c_virtual, r</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: lc, lf</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__derived__constants__mod.xhtml" title="!&gt; Module holding commonly derived constants used in convection !&gt; Module holding commonly derived co...">cv_derived_constants_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecv__derived__constants__mod.xhtml#a18bc83d7c223f455921c3af9b8ed67b0" title="This module calculate commonly used constants derived from!&gt; UM constants. ">ls</a></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceparcel__6a__mod.xhtml" title="Completes lifting of the parcel from layer k to k+1. ">parcel_6a_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceparcel__6a__mod.xhtml#a8bc2fc4101d0d0d7086b5028e4afe9a6" title="Completes lifting of the parcel from layer k to k+1 Calls detrain, term_con and cloud_w Detrain - car...">parcel_6a</a></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecalc__w__eqn__mod.xhtml" title="Calculates parcel vertical velocity diagnostic (w) ">calc_w_eqn_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecalc__w__eqn__mod.xhtml#a1fb8243a802798cb75d3c8fbc4f9b7bd">calc_w_eqn</a></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceenviron__6a__mod.xhtml" title="Calculate the effect of convection upon the large-scale atmosphere. ">environ_6a_mod</a></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacepc2__environ__mod.xhtml" title="Calculate the effect of convection upon the large-scale cloud fractions. ">pc2_environ_mod</a></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: k             <span class="comment">! present model layer</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: npnts         <span class="comment">! Number of points</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: np_full       <span class="comment">! Full vector length</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: nlev          <span class="comment">! Number of model levels for calculations</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: ntra          <span class="comment">! Number of tracer variables</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: ad_on         <span class="comment">! Flag for adaptive detrainmentINTEGER,INTENT(IN) :: new_termc     ! Flag for simplified termination of                                    ! convection</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: start_lev(npnts) <span class="comment">! Level at which convection is initiated</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: pstar(npnts)     <span class="comment">! Surface pressure (Pa)</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: pk(npnts)        <span class="comment">! pressure at mid-point of layer k (Pa)</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: pkp1(npnts)      <span class="comment">! pressure at mid-point of layer k+1 (Pa)</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: delpk(npnts)     <span class="comment">! pressure difference across layer k (Pa)</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: delpkp1(npnts)   <span class="comment">! pressure difference across layer k+1 (Pa)</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: delpkp12(npnts)  <span class="comment">! pressure diff. across layer k+1/2 (Pa)</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: delp_uv_k(npnts) <span class="comment">! pressure difference across UV                                    ! layer k (Pa)</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: delp_uv_kp1(npnts) <span class="comment">! pressure difference across UV</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                    <span class="comment">! layer k+1 (Pa)</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: exk(npnts)       <span class="comment">! Exner ratio at mid-point of layer k</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: exkp1(npnts)     <span class="comment">! Exner ratio at mid-point of layer k+1</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: thek(npnts)      <span class="comment">! Env. pot. temperature in layer k (K)</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: thekp1(npnts)    <span class="comment">! Env. pot. temperature in layer k+1 (K)</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qek(npnts)       <span class="comment">! Env. specific humidity in layer k (kg/kg)</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qekp1(npnts)     <span class="comment">! Env. spec. humidity in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qclek(npnts)     <span class="comment">! Env. qcl in layer k (kg/kg)</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qclekp1(npnts)   <span class="comment">! Env. qcl in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qcfek(npnts)     <span class="comment">! Env. qcf in layer k (kg/kg)</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qcfekp1(npnts)   <span class="comment">! Env. qcf in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qsek(npnts)      <span class="comment">! Env. saturated specific humidity in                                    ! in layer k (kg/kg)</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qsekp1(npnts)    <span class="comment">! Env. saturated specific humidity in                                    ! in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: cflek(npnts)     <span class="comment">! Env. liquid cloud volume fraction                                    ! in layer k</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: cflekp1(npnts)   <span class="comment">! Env. liquid cloud volume fraction                                    ! in layer k+1</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: cffek(npnts)     <span class="comment">! Env. frozen cloud volume fraction                                    ! in layer k</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: cffekp1(npnts)   <span class="comment">! Env. frozen cloud volume fraction                                    ! in layer k+1</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: bcfek(npnts)     <span class="comment">! Env. total cloud volume fraction</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                    <span class="comment">! in layer k</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: bcfekp1(npnts)   <span class="comment">! Env. total cloud volume fraction</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                    <span class="comment">! in layer k+1</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: thpk(npnts)      <span class="comment">! Par. pot. temperature in layer k (K)</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qpk(npnts)       <span class="comment">! Par. specific humidity in layer k (kg/kg)</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qclpk(npnts)     <span class="comment">! Par. qcl in layer k (kg/kg)</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qcfpk(npnts)     <span class="comment">! Par. qcf in layer k (kg/kg)</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: thpi(npnts)      <span class="comment">! Initial parcel potential temperature (K)</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qpi(npnts)       <span class="comment">! Initial parcel specific humidity (kg/kg)</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: expi(npnts)      <span class="comment">! Initial parcel Exner pressure</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: rbuoyk(npnts)    <span class="comment">! Par. buoyancy in layer k (K)</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: rbuoykp1(npnts)  <span class="comment">! Par. buoyancy in layer k+1 (K)</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: xsbmin(npnts)    <span class="comment">! Threshold buoyancy for forced                                    ! detrainment (K)</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: watldek(npnts)   <span class="comment">! Env. water loading in layer k (kg/kg)</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: watldpk(npnts)   <span class="comment">! Par. water loading in layer k (kg/kg)</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: watldekp1(npnts) <span class="comment">! Env. water loading in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: watldpkp1(npnts) <span class="comment">! Par. water loading in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: Qlkp1(npnts)     <span class="comment">! Amount of condensation to liquid water                                    ! in the parcel (kg/kg)</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: Qfkp1(npnts)     <span class="comment">! Amount of deposition to ice water</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                                    <span class="comment">! in the parcel (kg/kg)</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: Frezkp1(npnts)   <span class="comment">! Amount of freezing from liquid                                    ! to ice water in the parcel (kg/kg)</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: ekp14(npnts)     <span class="comment">! Entrainment coefficient at level k+1/4</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                    <span class="comment">! multiplied by appropriate layer thickness</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: ekp34(npnts)     <span class="comment">! Entrainment coefficient at level k+3/4                                    ! multiplied by appropriate layer thickness</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: amdetk(npnts)    <span class="comment">! Mixing detrainment coefficient at level k                                    ! multiplied by appropriate layer thickness</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: flxk(npnts)      <span class="comment">! Parcel massflux in layer k (Pa/s)REAL,INTENT(IN) :: flx_init(npnts)  ! Initial par. massflux at cloud base (Pa/s)</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: uek(npnts)       <span class="comment">! Env. U in layer k (m/s)</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: uekp1(npnts)     <span class="comment">! Env. U in layer k+1 (m/s)</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: vek(npnts)       <span class="comment">! Env. V in layer k (m/s)</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: vekp1(npnts)     <span class="comment">! Env. V in layer k+1 (m/s)</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: upk(npnts)       <span class="comment">! Par. U in layer k (m/s)</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: vpk(npnts)       <span class="comment">! Par. V in layer k (m/s)</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: traek(np_full,ntra)    <span class="comment">! Env. tracer content                                          ! in layer k (kg/kg)</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: traekp1(np_full,ntra)  <span class="comment">! Env. tracer content                                          ! in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: trapk(np_full,ntra)    <span class="comment">! Par. tracer content                                          ! in layer k (kg/kg)</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">! Height above surface of model level ...</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: zkm1(npnts)  <span class="comment">! ...k-1   [m]</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: zk(npnts)    <span class="comment">! ...k     [m]</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: zkp12(npnts) <span class="comment">! ...k+1/2 [m]</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: zkp1(npnts)  <span class="comment">! ...k+1   [m]</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: w2p_km1(npnts)   <span class="comment">! (Parcel vertical velocity)^2</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                                    <span class="comment">! on level k-1, [(m/s)^2]</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: l_q_interact  <span class="comment">! True if PC2 is switched on</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: l_mom_gk      <span class="comment">! Switch for inclusion of Gregory-Kershaw</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                    <span class="comment">! CMT</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: l_tracer      <span class="comment">! Switch for tracers</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: bgmk(npnts)   <span class="comment">! mask for parcels which are saturated                                    ! in layer k</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: bgmkp1(npnts) <span class="comment">! Mask for parcels which are saturated                                    ! in layer k+1</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: bwk(npnts)    <span class="comment">! mask for parcels which have liquid                                    ! condensate in layer k</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: bwkp1(npnts)  <span class="comment">! mask for parcels which have liquid                                    ! condensate in layer k+1</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: blowst(npnts) <span class="comment">! mask for those points at which stability</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                                    <span class="comment">! is low enough for convection to occur</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: bland(npnts)  <span class="comment">! Land/sea mask</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;-<span class="comment">! Variables which are input and output</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;-<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(INOUT)</span> :: lcbase(npnts)<span class="comment">! Lowest conv. cloud base level</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(INOUT)</span> :: lctop(npnts) <span class="comment">! Lowest conv. cloud top level</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: thpkp1(npnts) <span class="comment">! Par. pot. temperature in layer k+1 (K)</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                    <span class="comment">! IN after entrainment and latent heating</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                    <span class="comment">! OUT after forced detrainment</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: qpkp1(npnts)  <span class="comment">! Par. spec. humidity in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                    <span class="comment">! IN after entrainment and latent heating</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                    <span class="comment">! OUT after forced detrainment</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: qclpkp1(npnts)<span class="comment">! Par. qcl in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                                    <span class="comment">! IN after entrainment and latent heating</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                    <span class="comment">! OUT after forced detrainment</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: qcfpkp1(npnts)<span class="comment">! Par. qcf in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                    <span class="comment">! IN after entrainment and latent heating</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                    <span class="comment">! OUT after forced detrainment</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">! Convection increments to model fields at level k</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">! IN before processes at level k. This may be non-zero because of smoothed</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">! forced detrainment and the initial perturbation</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">! OUT after processes at level k</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: dthek(npnts)  <span class="comment">! Increment to p. temperature</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                    <span class="comment">! in layer k (K/s)</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: dqek(npnts)   <span class="comment">! Increment to spec. humidity                                    ! in layer k (kg/kg/s)</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: dqclek(npnts) <span class="comment">! Increment to qcl in layer k (kg/kg/s)</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: dqcfek(npnts) <span class="comment">! Increment to qcf in layer k (kg/kg/s)</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: dcflek(npnts) <span class="comment">! Increment to liquid cloud volume fraction</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                    <span class="comment">! in layer k</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: dcffek(npnts) <span class="comment">! Increment to frozen cloud volume fraction</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                                    <span class="comment">! in layer k</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: dbcfek(npnts) <span class="comment">! Increment to total cloud volume fraction</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                                    <span class="comment">! in layer k</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: tcw(npnts)    <span class="comment">! Total condensed water (kg/m**2/s)</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                                    <span class="comment">! IN summed to layer k</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                    <span class="comment">! OUT summed to layer k+1</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: depth(npnts)  <span class="comment">! Depth of convective cloud (m)</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                    <span class="comment">! IN summed to layer k                                    ! OUT summed to layer k+1</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: cclwp(npnts)  <span class="comment">! Condensed water path (kg/m**2)</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                    <span class="comment">! IN summed to layer k</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                    <span class="comment">! OUT summed to layer k+1</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: lcca(npnts)   <span class="comment">! Lowest conv. cloud amount (%)</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: cape(npnts)   <span class="comment">! Convective available potential energy</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                                    <span class="comment">! IN up to layer k-1</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                    <span class="comment">! OUT up to layer k</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: dcpbydt(npnts)<span class="comment">! Rate of change of CAPE</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                                    <span class="comment">! IN up to layer k-1</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                                    <span class="comment">! OUT up to layer k</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: relh(npnts)   <span class="comment">! Relative humidity integral (averaged</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                                    <span class="comment">! when convection terminates)</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: dptot(npnts)  <span class="comment">! Delta P integral</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: max_cfl(npnts)<span class="comment">! CFL ratio</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: eflux_u_ud(npnts) <span class="comment">! Eddy flux of momentum to UD</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                    <span class="comment">! IN at bottom of layer</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                                    <span class="comment">! OUT at top of layer</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: eflux_v_ud(npnts) <span class="comment">! Eddy flux of momentum to UD</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                                    <span class="comment">! IN at bottom of layer</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                                    <span class="comment">! OUT at top of layer</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">! Convection increments to winds and tracers at level k</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">! IN before processes at level k. This may be non-zero because of smoothed</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">! forced detrainment and the initial perturbation</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">! OUT after processes at level k</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: duek(npnts)   <span class="comment">! Increment to U in layer k (m/s**2)</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: dvek(npnts)   <span class="comment">! Increment to V in layer k (m/s**2)</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: dtraek(np_full,ntra)  <span class="comment">! Increment to tracer in layer k</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                                            <span class="comment">! (kg/kg/s)</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: w2p_k(npnts)     <span class="comment">! (Parcel vertical velocity)^2</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                                        <span class="comment">! on level k, [(m/s)^2]</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: bterm(npnts)   <span class="comment">! Mask for parcels which terminate                                        ! in layer k+1</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(INOUT)</span> :: blatent(npnts) <span class="comment">! Mask for points where latent heat has</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                        <span class="comment">! been released</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;-<span class="comment">! Variables which are output</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;-<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(OUT)</span> :: iccb(npnts)  <span class="comment">! convective cloud base_level</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(OUT)</span> :: icct(npnts)  <span class="comment">! convective cloud top level</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">! Convection increments to model fields at level k+1</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: dthekp1(npnts)  <span class="comment">! Increment to p. temperature</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                                      <span class="comment">! in layer k+1 (K/s)</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: dqekp1(npnts)   <span class="comment">! Increment to spec. humidity                                      ! in layer k+1 (kg/kg/s)</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: dqclekp1(npnts) <span class="comment">! Increment to qcl in layer k+1 (kg/kg/s)</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: dqcfekp1(npnts) <span class="comment">! Increment to qcf in layer k+1 (kg/kg/s)</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: dcflekp1(npnts) <span class="comment">! Increment to liquid cloud volume fraction</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                                      <span class="comment">! in layer k+1</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: dcffekp1(npnts) <span class="comment">! Increment to frozen cloud volume fraction</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                                      <span class="comment">! in layer k+1</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: dbcfekp1(npnts) <span class="comment">! Increment to total cloud volume fraction</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                                      <span class="comment">! in layer k+1</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: prekp1(npnts)   <span class="comment">! precipitation from parcel as it rises                                    ! from layer k to k+1 (kg/m**2/s)</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: deltak(npnts)   <span class="comment">! Parcel forced detrainment rate in                                    ! layer k multiplied by layer thickness</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: flxkp12(npnts)  <span class="comment">! parcel massflux in layer k+1/2 (Pa/s)</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: flxkp1(npnts)   <span class="comment">! parcel massflux in layer k+1 (Pa/s)</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: cca(npnts)      <span class="comment">! convective cloud amount (%)</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: ccwkp1(npnts)   <span class="comment">! Total condensate in level k+1 (kg/kg)</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: upkp1(npnts)    <span class="comment">! Par. U in layer k+1 (m/s)</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: vpkp1(npnts)    <span class="comment">! Par. V in layer k+1 (m/s)</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: duekp1(npnts)   <span class="comment">! Increment to U in layer k+1 (m/s**2)</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: dvekp1(npnts)   <span class="comment">! Increment to V in layer k+1 (m/s**2)</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: trapkp1(np_full,ntra)  <span class="comment">! Par. tracer content                                           ! in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: dtraekp1(np_full,ntra) <span class="comment">! Increment to tracer in layer k+1</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                           <span class="comment">! (kg/kg/s)</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: w2p_kp1(npnts)  <span class="comment">! (Parcel vertical velocity)^2</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                                    <span class="comment">! on level k+1, [(m/s)^2]</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;-<span class="comment">! Local variables</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keywordtype">INTEGER</span> :: i              <span class="comment">! loop counterINTEGER :: ktra           ! Loop counter for tracers</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keywordtype">REAL</span> :: thvp              <span class="comment">! Virtual tempature of parcel</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keywordtype">REAL</span> :: thve              <span class="comment">! Virtual tempature of environmentREAL :: rho               ! Density required in CAPE calculations</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordtype">REAL</span> :: tmp_dcpbydt       <span class="comment">! Temporary dcpbydt</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keywordtype">REAL</span> :: thrk(npnts)       <span class="comment">! pot. temperature of forced detrained</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                          <span class="comment">! parcel in layer k (K)</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="keywordtype">REAL</span> :: qrk(npnts)        <span class="comment">! Specific humidity of forced detrained</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                          <span class="comment">! parcel in layer k (kg/kg)</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CONVEC2_6A&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">! !  Complete lifting parcel to layer k+1.</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">!  SUBROUTINE parcel</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">!  UM Documentation paper 27</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">!  Sections (5),(6),(7),(8),(9)</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">! !</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceparcel__6a__mod.xhtml#a8bc2fc4101d0d0d7086b5028e4afe9a6" title="Completes lifting of the parcel from layer k to k+1 Calls detrain, term_con and cloud_w Detrain - car...">parcel_6a</a> (k, npnts, np_full, nlev, ntra, ad_on, new_termc,       &amp;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                start_lev,                                             &amp;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                pstar, pk, pkp1, delpkp1, exk, exkp1,                  &amp;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                thek, thekp1, qek, qekp1,                              &amp;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                qclek, qclekp1, qcfek, qcfekp1,                        &amp;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                qsek, qsekp1,                                          &amp;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                thpk, qpk, qclpk, qcfpk,                               &amp;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                thpi, qpi, expi,                                       &amp;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                rbuoyk, rbuoykp1, xsbmin,                              &amp;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                watldek, watldekp1, watldpk, watldpkp1,                &amp;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                qlkp1, qfkp1, frezkp1,                                 &amp;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                ekp14, ekp34, amdetk, flxk, flx_init,                  &amp;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                uek, uekp1, vek, vekp1,                                &amp;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                upk, vpk,                                              &amp;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                traek, traekp1, trapk,                                 &amp;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                l_q_interact, l_mom_gk, l_tracer,                      &amp;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                bgmk, bgmkp1, bwk, bwkp1, blowst, bland,               &amp;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                <span class="comment">! In/out                    lcbase, lctop,                                         &amp;                   thpkp1, qpkp1, qclpkp1, qcfpkp1,                       &amp;</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                tcw, depth, cclwp, lcca,                               &amp;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                bterm, blatent,                                        &amp;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                <span class="comment">! Out                           iccb, icct,                                            &amp;</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                prekp1, thrk, qrk, deltak, flxkp1, flxkp12,            &amp;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                cca, ccwkp1,                                           &amp;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                upkp1, vpkp1,                                          &amp;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                trapkp1)</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">! !  Calculate the increments to environmental theta, q, qcl, qcf,!  winds and tracers.</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">!CALL environ_6a (k, npnts, np_full, ntra,                              &amp;</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;              delpk, delpkp1, delpkp12, delp_uv_k, delp_uv_kp1,     &amp;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;              exk, exkp1,                                           &amp;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;              thek, thekp1, qek, qekp1,                             &amp;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;              qclek, qclekp1, qcfek, qcfekp1,                       &amp;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;              thpk, thpkp1, qpk, qpkp1,                             &amp;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;              qclpk, qclpkp1, qcfpk, qcfpkp1,                       &amp;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;              thrk, qrk,                                            &amp;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;              ekp14, amdetk, deltak, flxk,                          &amp;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;              uek, uekp1, vek, vekp1,                               &amp;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;              upk, upkp1, vpk, vpkp1,                               &amp;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;              traek, traekp1, trapk, trapkp1,                       &amp;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;              l_q_interact, l_mom_gk, l_tracer,                     &amp;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;              blowst, bterm,                                        &amp;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;              <span class="comment">! In/out</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;              dthek, dqek, dqclek, dqcfek,                          &amp;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;              eflux_u_ud, eflux_v_ud,                               &amp;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;              duek, dvek,                                           &amp;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;              dtraek,                                               &amp;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;              <span class="comment">! Out</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;              dthekp1, dqekp1, dqclekp1, dqcfekp1,                  &amp;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;              duekp1, dvekp1,                                       &amp;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;              dtraekp1)</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment">! !  Calculate the increments to environmental cloud fractions</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment">! CALL pc2_environ (k, npnts,                                         &amp;</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;              qclek, qclekp1, qcfek, qcfekp1,                       &amp;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;              cflek, cflekp1,  cffek,  cffekp1,                     &amp;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;              bcfek,  bcfekp1,                                      &amp;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;              qclpk, qclpkp1, qcfpk, qcfpkp1,                       &amp;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;              dqclek, dqcfek,                                       &amp;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;              dqclekp1, dqcfekp1,                                   &amp;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;              l_q_interact,                                         &amp;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;              bterm,                                                &amp;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;              <span class="comment">! Out</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;              dcflek, dcffek, dbcfek,                               &amp;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;              dcflekp1, dcffekp1, dbcfekp1)</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;          <span class="comment">!  Calculate contribution to CAPE, the rate of change of CAPE  due to</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">!  the updraught and Courant number</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;  thvp    = thpk(i)*(1.0+c_virtual*qpk(i)-watldpk(i))</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;  thve    = thek(i)*(1.0+c_virtual*qek(i)-watldek(i))</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  rho     = pk(i)/(r*thve*exk(i))</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;  cape(i) = cape(i)+(thvp-thve)*delpk(i)/(rho*thve)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  relh(i) = relh(i)+(qek(i)/qsek(i))*delpk(i)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;  dptot(i)= dptot(i)+delpk(i)</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#adb523e824ee63bf708b36e5ef08eb898">cnv_wat_load_opt</a> == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment">!   Water loading is not included and therefore do not include</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment">!   the contribution from the condensate increments</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    tmp_dcpbydt = ( dthek(i)*(1.0+c_virtual*qek(i))             &amp;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                  + thek(i)*c_virtual*dqek(i) )                 &amp;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                  * (delpk(i)/(rho*thve))</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">!   Water loading is on and therefore include the contribution</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment">!   from the condensate increments. If PC2 is off the condensate</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">!   increments will be zero.</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    tmp_dcpbydt = ( dthek(i)*(1.0+c_virtual*qek(i)-watldek(i))  &amp;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                  + thek(i)*(c_virtual*dqek(i)                  &amp;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                  - dqclek(i) - dqcfek(i)) )                    &amp;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                  * (delpk(i)/(rho*thve))</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;  <span class="keywordflow">IF</span> (tmp_dcpbydt  &gt;   0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    dcpbydt(i) = dcpbydt(i) + tmp_dcpbydt</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment">! Calculate courant number using mass flux at half level</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;  max_cfl(i)=max(max_cfl(i),                                    &amp;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;             flxk(i)/delpk(i)*(1+ekp14(i))*(1.0-deltak(i))*(1.0-amdetk(i)))</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__stash__flg__mod.xhtml#a50f06f66e4ccdedcd3c49d357976dbf7">flg_w_eqn</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespacecalc__w__eqn__mod.xhtml#a1fb8243a802798cb75d3c8fbc4f9b7bd">calc_w_eqn</a> ( k, npnts, np_full, nlev, bterm, blowst      &amp;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                  , ekp14, ekp34, zkm1, zk, zkp12, zkp1         &amp;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                  , thek,  thekp1,  thpk,  thpkp1               &amp;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                  , qek,   qekp1,   qpk,   qpkp1                &amp;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                  , qclek, qclekp1, qclpk, qclpkp1              &amp;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                  , qcfek, qcfekp1, qcfpk, qcfpkp1              &amp;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                  , w2p_km1, w2p_k, w2p_kp1 )</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CONVEC2_6A&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespaceconvec2__6a__mod.xhtml#abc6e042d8c327cb1ce6223f285643776" title="Completes lifting of the parcel from layer k to k+1. ">convec2_6a</a></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceconvec2__6a__mod.xhtml" title="Completes lifting of the parcel from layer k to k+1. ">convec2_6a_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
