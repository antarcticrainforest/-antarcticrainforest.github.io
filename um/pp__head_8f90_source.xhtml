<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/stash/pp_head.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_807f876cb6d36c1a4c0b1b86608d148a.xhtml">stash</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">pp_head.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pp__head_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="pp__head_8f90.xhtml#af375be95fa8e37afc539c88bfc02a057" title="LL SUBROUTINE PPHEAD. ">pp_head</a>(                                               &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;          im_ident,fixhd,inthd,realhd,                                  &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;          len_inthd,len_realhd,ie,is,gr,                                &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;          lfullfield,real_level,pseudo_level,                           &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;          samples,start,start_or_verif_time,end_or_data_time,pp_len,    &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;          extraw,pp_int_head,pp_real_head,n_cols_out,num_words,         &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;          len_buf_words,n_rows_out,nrow_in,srow_in,wcol_in,ecol_in,     &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;          lbproc_comp,                                                  &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;          sample_prd,fcst_prd,comp_accrcy,packing_type,                 &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;          st_grid,iwa,zseak_rho,ck_rho,zseak_theta,ck_theta,            &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;          model_levels,levindex,rotate,elf,                             &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;          icode,cmessage)</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="pp__head_8f90.xhtml#af375be95fa8e37afc539c88bfc02a057">   31</a></span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacedynamics__grid__mod.xhtml" title="Input control for dynamics. Input control for dynamics. ">dynamics_grid_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacemodel__file.xhtml" title="A simple data module containing variables related to STASH buffering. ">model_file</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;          <a class="code" href="namespacemodel__file.xhtml#a1be124d410691b7f407165dd575888e3" title="This value is part of the file format, and other utilities expect it. ">mf_data_missing</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>:  &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;          lhook,          &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;          dr_hook</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;          jprb,           &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;          jpim</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceiau__mod.xhtml" title="Parameters and variables for Incremental Analysis Update (IAU) scheme. ">iau_mod</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;          <a class="code" href="namespaceiau__mod.xhtml#a9217785542f77daf4b9fabafc7382ee7">l_iau</a>,          &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;          <a class="code" href="namespaceiau__mod.xhtml#a12756339e125d4a8b7b7d85afb07ae63">iau_startmin</a>,   &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;          <a class="code" href="namespaceiau__mod.xhtml#a428709b91e8187e739a6cf7f11b2e91f">iau_endmin</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecontrol__max__sizes.xhtml" title="This file belongs in section: Misc. ">control_max_sizes</a></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacec__model__id__mod.xhtml" title="This file belongs in section: Top Level This file belongs in section: Top Level. ">c_model_id_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacec__model__id__mod.xhtml#a24b16ed4fc126bf5f419f37c22c87fba" title="Contains model id used in LBSRCE in UM lookup tables 1111 is used to define unified model...">model_id</a></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacemodel__id__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">model_id_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemodel__id__mod.xhtml#af17299ff3e60f525cd328c2181cf9abb">itab</a></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacemissing__data__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">missing_data_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a>, <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecppxref__mod.xhtml" title="Code Owner: See Unified Model Code Owners HTML page. ">cppxref_mod</a><span class="keywordtype">, ONLY</span>:                                            &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;          <a class="code" href="namespacecppxref__mod.xhtml#a76605bcc1fdc8e7987533e013a8db581">ppx_field_code</a>,<a class="code" href="namespacecppxref__mod.xhtml#ab11aab20628b2944d07229f5023bc0bf">ppx_lbvc_code</a>,<a class="code" href="namespacecppxref__mod.xhtml#a8f63763b7b4e35c5123912c8593305c1">ppx_lv_code</a>,                     &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;          <a class="code" href="namespacecppxref__mod.xhtml#a9db8c715fe16e59d7405dd39b6ea0b44">ppx_meto8_fieldcode</a>,<a class="code" href="namespacecppxref__mod.xhtml#a23e034c6fcd003279c5d2aaabd3ff790">ppx_meto8_levelcode</a>,ppx_meto8_surf,       &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;          <a class="code" href="namespacecppxref__mod.xhtml#a9da073735e019b687e4281b14e171199">ppx_data_type</a>,ppx_full_level,<a class="code" href="namespacecppxref__mod.xhtml#abe6e0b83cd1e63d0b3930fc6ef9234b3">ppx_half_level</a></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;         </div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacenlstcall__mod.xhtml" title="Control variables Control variables. ">nlstcall_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacenlstcall__mod.xhtml#a528dd6af82d1afa18e91f45831cadeff">model_analysis_mins</a>, &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                               <a class="code" href="namespacenlstcall__mod.xhtml#a093d8fba92fe24edca614a560bf99982">expt_id</a>, &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                               <a class="code" href="namespacenlstcall__mod.xhtml#a30ba95a899a5e6d20426b260ac710463" title="!&gt; associated with model !&gt; (Non-Operational expts) !&gt; !&gt; Operational run name !&gt; (Operational expts)...">job_id</a>, &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                               <a class="code" href="namespacenlstcall__mod.xhtml#ac8bee74e99550307aa6d2a184b0860ad" title="!&gt; used for networking ">model_status</a></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacechsunits__mod.xhtml" title="copied from include file chsunits.h ">chsunits_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacechsunits__mod.xhtml#af6e26d3a6a1fedf0b44203712a772f8e">nunits</a></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;          <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;          <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: LEN_FIXHD = 256</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span> CMESSAGE <span class="comment">!OUT OUT MESSAGE FROM ROUTINE</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keywordtype">CHARACTER(LEN=5)</span>   :: run_id <span class="comment">! To calculate LBEXP in header</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::      &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;          start_or_verif_time(7), &amp;<span class="comment">! verif time/start time for means etc</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;          end_or_data_time(7),    &amp;<span class="comment">! data time/end time for means etc</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;          samples,                &amp;<span class="comment">! no of samples in period (timeseries)</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;          im_ident,               &amp;<span class="comment">! internal model identifier</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;          pp_len,                 &amp;<span class="comment">! length of the lookup table</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;          len_inthd,              &amp;<span class="comment">! length of the integer constants</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;          len_realhd,             &amp;<span class="comment">! length of the real constants</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;          fixhd(len_fixhd),       &amp;<span class="comment">! array of fixed constants</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;          inthd(len_inthd),       &amp;<span class="comment">! array of integer constants</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;          st_grid,                &amp;<span class="comment">! stash horizontal grid type</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;          model_levels,           &amp;<span class="comment">! no of model levels</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;          levindex,               &amp;<span class="comment">! level index</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;          n_rows_out,             &amp;<span class="comment">! pphoriz_out=n_rows_out*n_cols_out+extra</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;          n_cols_out,             &amp;<span class="comment">! pphoriz_out=n_cols_out*n_rows_out+extra</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;          nrow_in,srow_in,        &amp;<span class="comment">! the most nrthrly/southerly row.</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;          wcol_in,ecol_in,        &amp;<span class="comment">! the most westerly/easterly column</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;          pseudo_level,           &amp;<span class="comment">! output pp pseudo-level</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;          comp_accrcy,            &amp;<span class="comment">! packing accuracy in power of 2</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;          packing_type,           &amp;<span class="comment">! 0 = no packing, 1 = wgdos, 3 = grib</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;          num_words,              &amp;<span class="comment">! number of 64 bit words to hold data</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;          extraw,                 &amp;<span class="comment">! number of extra-data words</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;          len_buf_words,          &amp;<span class="comment">! number of 64 bit words (rounded to 512)</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;          iwa,                    &amp;<span class="comment">! start word address.</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;          ie,                     &amp;<span class="comment">! item number</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;          is,                     &amp;<span class="comment">! section number</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;          gr,                     &amp;<span class="comment">! grid point code</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;          lbproc_comp(14)          <span class="comment">! subcomponents(0/1) to make up lbproc</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::      &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;          start,                  &amp;<span class="comment">! flag to control update for verif/start time</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;          lfullfield               <span class="comment">! TRUE if output field on full horiz domain</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::              &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;          fcst_prd,                    &amp;<span class="comment">! forecast period</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;          realhd(len_realhd),          &amp;<span class="comment">! real header</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;          real_level,                  &amp;<span class="comment">! output pp level(real)</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;          sample_prd,                  &amp;<span class="comment">! sampling period in hours for time mean</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;          zseak_rho    (model_levels), &amp;<span class="comment">! vert coeff zsea on rho levels</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;          ck_rho       (model_levels), &amp;<span class="comment">! vert coeff ck   on rho levels</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;          zseak_theta(0:model_levels), &amp;<span class="comment">! vert coeff zsea on theta levels</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;          ck_theta   (0:model_levels)   <span class="comment">! vert coeff ck   on theta levels</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;               <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> ::          &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;          icode,                       &amp;<span class="comment">! return code from the routine</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;          pp_int_head(pp_len)           <span class="comment">! integer lookup table</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::             &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;          PP_REAL_HEAD(pp_len)          <span class="comment">! Real Lookup table</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#include &quot;stparam.h&quot;</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor"></span><span class="comment">! Contains *CALL VERSION</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">#include &quot;chistory.h&quot;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;comvgrid.h&quot;</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;ctime.h&quot;</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="keywordtype">EXTERNAL</span> <a class="code" href="exppxi_8f90.xhtml#aea84e8b413583d158ed785dc4996ef1f" title="Integer Function to extract data from lookup array PPXI Integer Function to extract data from lookup ...">exppxi</a></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">!    DEFINE LOCAL VARIABLES</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      <span class="keywordtype">CHARACTER(LEN=*)</span> RoutineName</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <a class="code" href="namespaceukca__radaer__struct__mod.xhtml#a7b11899c3ce190bb3d00d3a633af780e">parameter</a>(   routinename=<span class="stringliteral">&#39;PP_head&#39;</span>)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="keywordtype">INTEGER</span>                         &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;          pp_lbfc,                    &amp;<span class="comment">!  m08 level code</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;          pp_lbtyp,                   &amp;<span class="comment">!  m08 field type code</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;          pp_lblev,                   &amp;<span class="comment">!  m08 field level code</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;          pp_iproj,                   &amp;<span class="comment">!  m08 projection number</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;          pp_lbvc,                    &amp;<span class="comment">!  vertical coord type</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;          ii,                         &amp;<span class="comment">!  local counter</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;          int_level,                  &amp;<span class="comment">!  integer value of level</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;          k,                          &amp;<span class="comment">!  local counter</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;          ia,ib,ic,                   &amp;<span class="comment">!  component codes to make up lbtim</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;          mean_code,                  &amp;<span class="comment">!  spatial averaging code derived from gr</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;          lvcode,                     &amp;<span class="comment">!  lv code</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;          exppxi,                     &amp;<span class="comment">!  function to extract ppxref info</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;          exptcode                     <span class="comment">!  integer coded experiment name</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;           <span class="keywordtype">INTEGER</span> :: get_um_version_id</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;           <span class="comment">! Local Parameters</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: unset_exptenc = -5555</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;           <span class="comment">! Local scalars:</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="keywordtype">INTEGER</span>,<span class="keywordtype">SAVE</span>  ::  expt_enc_answer=unset_exptenc</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="keywordtype">LOGICAL</span>                          &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;          elf,                         &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;          rotate</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">!LL   Construct PP header</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">!  Timestamps !</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">!L Set up time info dependent on start flag.</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">!L For all but time series start will be TRUE so all time information</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">!L will be set up from FIXHD in effect, but for time series start</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">!L will be set up by TEMPORAL and passed in, so that dump headers are</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">!L set correctly for such fields.</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">!L Note: end_or_data_time will be updated from current model time in</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">!L       FIXHD(28-34) for time means/accumulations etc.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;PP_HEAD&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="keywordflow">IF</span> (start) <span class="keywordflow">THEN</span>    <span class="comment">! start timestep so update start time</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#aabd1e58da18c133f0ceeba0db78c9ecf">lbyr</a>)=start_or_verif_time(1)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#aeaaef1dcf94dbe6d39b5783438cdda5b">lbmon</a>)=start_or_verif_time(2)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#ad8b62de4259cf3a7c56f0ae188e526f8">lbdat</a>)=start_or_verif_time(3)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#ab2bce3bc87d25358476475aed562f068">lbhr</a>)=start_or_verif_time(4)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a284423d27573ccb30828cde5ff510b52">lbmin</a>)=start_or_verif_time(5)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#ac40a8889f8d7a68dd880a2ccc1769338">lbsec</a>)=start_or_verif_time(6)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">!        PP_INT_HEAD(LBDAY)=start_or_verif_time(7)</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">! If the IAU scheme was used on the previous timestep to add a complete</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">! increment at the nominal analysis time, reset verification minute to</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">! zero for fields not in sections 0, 15 or 16. Required so we can obtain</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">! &quot;analysis&quot; fields from the physics modules.</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">! UM6.5 - model_analysis_hrs replaced by model_analysis_mins</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespaceiau__mod.xhtml#a9217785542f77daf4b9fabafc7382ee7">l_iau</a> .AND. im_ident == <a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;          <span class="keywordflow">IF</span> ( <a class="code" href="namespaceiau__mod.xhtml#a12756339e125d4a8b7b7d85afb07ae63">iau_startmin</a> == <a class="code" href="namespaceiau__mod.xhtml#a428709b91e8187e739a6cf7f11b2e91f">iau_endmin</a>              .AND.            &amp;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;               <a class="code" href="namespaceiau__mod.xhtml#a12756339e125d4a8b7b7d85afb07ae63">iau_startmin</a> == <a class="code" href="namespacenlstcall__mod.xhtml#a528dd6af82d1afa18e91f45831cadeff">model_analysis_mins</a>     .AND.            &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;               stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) == iau_dtresetstep + 1     .AND.            &amp;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;               is /= 0                                 .AND.            &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;               is /= 15                                .AND.            &amp;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;               is /= 16 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a284423d27573ccb30828cde5ff510b52">lbmin</a>) = 0</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a1e2e3863b21846750a0050a2c31c3b5c">lbyrd</a>)=end_or_data_time(1)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a8f7f5cb431a34329a65af835c2ff9038">lbmond</a>)=end_or_data_time(2)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a5ac67ad7ba51ace85cd20c4f10b2c8f7">lbdatd</a>)=end_or_data_time(3)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a2fb28367de3bc21b1a4702460b6c2a0b">lbhrd</a>)=end_or_data_time(4)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#af089abfa7a156eaf12983559df8acc76">lbmind</a>)=end_or_data_time(5)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#aefb0ae53542fec05683950c6badb04f1">lbsecd</a>)=end_or_data_time(6)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">!      PP_INT_HEAD(LBDAYD)=end_or_data_time(7)</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">!  Secondary time information!</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">! LBTIM is 100*IA+10*IB+IC - this encodes the time processing type</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;      ia=int(sample_prd)           <span class="comment">! Sampling period in whole hours</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      <span class="keywordflow">IF</span>(sample_prd == 0.0) <span class="keywordflow">THEN</span>   <span class="comment">! NB: may be a fraction of an hour</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        ib=1                       <span class="comment">! Forecast field</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keywordflow">IF</span> (ia == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;          ia=1                     <span class="comment">! 0 &lt; sample_prd &lt; 1 counts as 1 hour</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        ib=2                       <span class="comment">! Time mean or accumulation</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      ic=fixhd(8)                  <span class="comment">! Calendar (1: Gregorian, 2: 360 day)</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a27c45d3289bc2f747dd0912b6909cae1">lbtim</a>)=100*ia+10*ib+ic</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a828c4447a68437df852bfb58d8fbc25b">lbft</a>)=fcst_prd</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">!  Data length!</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>)=num_words</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">!  Grid code (determined from dump fixed-length header) !</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordflow">IF</span> (samples == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">!       Field is not a timeseries</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">IF</span>(fixhd(4) &lt;  100) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;          <span class="keywordflow">IF</span> (var_grid_type == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;             pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a9ceed0d519c54f7fa8446efa09279428">lbcode</a>)=1   <span class="comment">! Regular lat/long grid</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;             <span class="comment">! Set variable  grid code to the same as regular</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;             <span class="comment">! grid which effectively renders this peice of</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;             <span class="comment">! information meaningless</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;             pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a9ceed0d519c54f7fa8446efa09279428">lbcode</a>) = 1   <span class="comment">! Variable grid</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;          <span class="keywordflow">IF</span> (var_grid_type == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;             pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a9ceed0d519c54f7fa8446efa09279428">lbcode</a>)=101   <span class="comment">! Regular lat/long grid</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;             <span class="comment">! Set variable  grid code to the same as regular</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;             <span class="comment">! grid which effectively renders this peice of</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;             <span class="comment">! information meaningless</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;             pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a9ceed0d519c54f7fa8446efa09279428">lbcode</a>) = 101 <span class="comment">! Variable grid</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">!       Field is a timeseries</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a9ceed0d519c54f7fa8446efa09279428">lbcode</a>)=31300</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <span class="keywordflow">IF</span> (fixhd(8) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">!         Calendar --  1: Gregorian</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;          pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a9ceed0d519c54f7fa8446efa09279428">lbcode</a>)=pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a9ceed0d519c54f7fa8446efa09279428">lbcode</a>)+20</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">ELSEIF</span> (fixhd(8) == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">!         Calendar -- 360 day (Model Calendar)</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;          pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a9ceed0d519c54f7fa8446efa09279428">lbcode</a>)=pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a9ceed0d519c54f7fa8446efa09279428">lbcode</a>)+23</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">!         Unknown calendar. Fail.</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;          icode=2</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      cmessage=<span class="stringliteral">&#39;PPHEAD: unknown calender type in fixhd(8)&#39;</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">!  Hemispheric subregion indicator !</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;      <span class="keywordflow">IF</span> (samples &gt;  0 .OR. .NOT.lfullfield) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">!  Field is a timeseries/trajectory or subdomain of the full model area</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a1a73e7452b09315ded35e3b6ef082e6b">lbhem</a>)=3</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      <span class="keywordflow">ELSEIF</span> (fixhd(4) &lt;  100) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">!  Otherwise, use the value for the full model area encoded in the dump</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a1a73e7452b09315ded35e3b6ef082e6b">lbhem</a>)=fixhd(4)</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a1a73e7452b09315ded35e3b6ef082e6b">lbhem</a>)=fixhd(4)-100</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">!  Field dimensions (rows x cols) -!</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a54e6ad5def513311547cbefc60aee032">lbrow</a>)=n_rows_out</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a9ae4b281a4481f6737cda3288e5d7971">lbnpt</a>)=n_cols_out</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">!  &#39;Extra data&#39; length (now accomodates timeseries sampling data)!</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a36fe53c5769dee10ac1c6609f9fa6c2d">lbext</a>)=extraw</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">!  Packing method indicator (new definition introduced at vn2.8)-       IF(PACKING_TYPE == 1)THEN    ! WGDOS packing</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;         pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>)=00001</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;       <span class="keywordflow">ELSEIF</span>(packing_type == 4)<span class="keywordflow">THEN</span> <span class="comment">! Run length encoding</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;         pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>)=00004</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;       <span class="keywordflow">ELSEIF</span>(packing_type == 3)<span class="keywordflow">THEN</span> <span class="comment">! GRIB packing</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;         pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>)=00003</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;       <span class="keywordflow">ELSEIF</span>(packing_type == 0)<span class="keywordflow">THEN</span> <span class="comment">! No packing</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;         pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>)=00000</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;       <span class="keywordflow">ELSEIF</span>(packing_type == <a class="code" href="namespacemodel__file.xhtml#a1be124d410691b7f407165dd575888e3" title="This value is part of the file format, and other utilities expect it. ">mf_data_missing</a>)<span class="keywordflow">THEN</span> <span class="comment">! No idea</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;         pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>)=<a class="code" href="namespacemodel__file.xhtml#a1be124d410691b7f407165dd575888e3" title="This value is part of the file format, and other utilities expect it. ">mf_data_missing</a> <span class="comment">! Not set code</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;       <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;         icode=1</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;         cmessage=<span class="stringliteral">&#39;PPHEAD  Packing type undefined&#39;</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;         pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>)=00000</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">!  PP header release no!</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#aca3499f4f66ac530900eed38efcd282d">lbrel</a>)=3   <span class="comment">! for seconds in LBSEC(D), not day_number</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">!      PP_INT_HEAD(LBREL)=2</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">!  Primary fieldcode (some hardwiring for ELF winds) !  Secondary fieldcode not used currently</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">! DEPENDS ON: exppxi</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;      pp_lbfc=exppxi(im_ident, is, ie, <a class="code" href="namespacecppxref__mod.xhtml#a76605bcc1fdc8e7987533e013a8db581">ppx_field_code</a>,                  &amp;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                     icode, cmessage)</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;      <span class="keywordflow">IF</span>(elf.AND..NOT.rotate) <span class="keywordflow">THEN</span>  <span class="comment">! ELF winds are in x,y direction</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="keywordflow">IF</span>(pp_lbfc == 56) pp_lbfc=48</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordflow">IF</span>(pp_lbfc == 57) pp_lbfc=49</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#ae43b921b515f72c8fe075755dee9368a">lbfc</a>)=pp_lbfc</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a2966aa1e49d6db3ab951f80a5b207ca2">lbcfc</a>)=0</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">!  Processing code (encodes several things in one field)!</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a6d3e005221e5b6baf748473338310a4d">lbproc</a>)=0</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;      <span class="keywordflow">DO</span> ii=14,1,-1</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a6d3e005221e5b6baf748473338310a4d">lbproc</a>)=pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a6d3e005221e5b6baf748473338310a4d">lbproc</a>)*2+lbproc_comp(ii)</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">!  Vertical coordinate type -!  Vertical coordinate type for reference level not coded</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">! DEPENDS ON: exppxi</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;      pp_lbvc=exppxi(im_ident, is, ie, <a class="code" href="namespacecppxref__mod.xhtml#ab11aab20628b2944d07229f5023bc0bf">ppx_lbvc_code</a>,                   &amp;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                     icode, cmessage)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#ac5368d5328a741c1544bc7034ae08ca9">lbvc</a>)=pp_lbvc</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#add55cfea58254f3473f97e61f8805f5f">lbrvc</a>)=0</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment">! [Note that, although most diagnostics are defined over int_level=</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">! (1:model_levels), and hence int_level=LevIndex, some variables are</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">! defined over int_level=(0:model_levels). For this special case,</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">! LevIndex is (1:model_levels+1), since LevIndex is defined starting at</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">! 1, and int_level != LevIndex.]</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;      int_level = real_level+0.00001  <span class="comment">! ensure no rounding problems</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">!  Experiment number coded from expt_id and job_id for non</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">!  operational set to RUN_INDIC_OP for operational use.</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespacenlstcall__mod.xhtml#ac8bee74e99550307aa6d2a184b0860ad" title="!&gt; used for networking ">model_status</a> /= <span class="stringliteral">&#39;Operational&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        run_id(1:4)=<a class="code" href="namespacenlstcall__mod.xhtml#a093d8fba92fe24edca614a560bf99982">expt_id</a></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        run_id(5:5)=<a class="code" href="namespacenlstcall__mod.xhtml#a30ba95a899a5e6d20426b260ac710463" title="!&gt; associated with model !&gt; (Non-Operational expts) !&gt; !&gt; Operational run name !&gt; (Operational expts)...">job_id</a></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="keywordflow">IF</span> (expt_enc_answer == unset_exptenc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">!  Function EXPT_ENC will encode the run_id into a unique integer</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">! DEPENDS ON: expt_enc</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;           <span class="keyword">CALL </span><a class="code" href="expt__enc_8f90.xhtml#a58300bf594762e691bd3bc4bcd40e925" title="SUBROUTINE EXPT_ENC-!&gt; ">expt_enc</a>(run_id,exptcode,icode,cmessage)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;           expt_enc_answer=exptcode</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;          exptcode=expt_enc_answer</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a86abca3a266da7a50eaa22a400b5c981">lbexp</a>)=exptcode          <span class="comment">! LBEXP</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a86abca3a266da7a50eaa22a400b5c981">lbexp</a>)=<a class="code" href="ihisto_8h.xhtml#a283171f41f1f1b48f91cc343bfbbec72">run_indic_op</a>      <span class="comment">! LBEXP (ITAB)</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;     <span class="comment">!  new code specifically for Rose. Once migrated to Rose this</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">!  becomes the default for all model runs and above exptid runid is retired.</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;           <span class="keywordflow">IF</span> (<a class="code" href="namespacemodel__id__mod.xhtml#af17299ff3e60f525cd328c2181cf9abb">itab</a> /= <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a>) pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a86abca3a266da7a50eaa22a400b5c981">lbexp</a>)= <a class="code" href="namespacemodel__id__mod.xhtml#af17299ff3e60f525cd328c2181cf9abb">itab</a><span class="comment">!</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">!  Direct access dataset start address and no of records!</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#afbf7195b85d47a8f92d0769c84f846a4">lbegin</a>)=iwa</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a7fbd5df41f854a6fd5c4d35c0942742e">lbnrec</a>)=len_buf_words</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">!  Operational fieldsfile projection no, fieldtype + level codes !  These are hardwired according to model resolution</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;      <span class="keywordflow">IF</span>(inthd(6) == 192) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        pp_iproj=802</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>(inthd(6) == 288) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        pp_iproj=800</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>(inthd(6) == 96) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        pp_iproj=870</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;       <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>(inthd(6) == 432) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;         pp_iproj=800</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        pp_iproj=900</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">! DEPENDS ON: exppxi</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;      pp_lbtyp=exppxi(im_ident, is, ie, <a class="code" href="namespacecppxref__mod.xhtml#a9db8c715fe16e59d7405dd39b6ea0b44">ppx_meto8_fieldcode</a>,            &amp;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                     icode, cmessage)</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment">! DEPENDS ON: exppxi</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;      lvcode=exppxi(im_ident, is, ie, <a class="code" href="namespacecppxref__mod.xhtml#a8f63763b7b4e35c5123912c8593305c1">ppx_lv_code</a>,                      &amp;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                   icode, cmessage)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;      <span class="keywordflow">IF</span>(real_level == -1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">! DEPENDS ON: exppxi</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        pp_lblev=exppxi(im_ident, is, ie, <a class="code" href="namespacecppxref__mod.xhtml#a23e034c6fcd003279c5d2aaabd3ff790">ppx_meto8_levelcode</a>,          &amp;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                     icode, cmessage)   <span class="comment">! levelcode 9999 or 8888</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="keywordflow">IF</span> (im_ident  ==  <a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;          <span class="keywordflow">IF</span> (lvcode == <a class="code" href="namespacecppxref__mod.xhtml#abe6e0b83cd1e63d0b3930fc6ef9234b3">ppx_half_level</a> .AND. int_level == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">!             This is a surface level: reset lblev</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            pp_lblev=ppx_meto8_surf</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            pp_lblev=int_level</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;          pp_lblev=int_level</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a19b8d4e83dd71b98eacfe09ffcefb6cd">lbproj</a>)=pp_iproj</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a0c928f71123f4e37955740ce35094f3c">lbtyp</a>)=pp_lbtyp</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#aa9f10ed545dc6efe4af4e2075aa9b8f4">lblev</a>)=pp_lblev</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="comment">!  Reserved slots for future expansion!</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a09b74f4a757fe6cd66b390f3ad498b11">lbrsvd1</a>)=0</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#abeee9a661723102f50247f43e21d83af">lbrsvd2</a>)=0</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a68fc666fa37e8501cf16b7380947f7ef">lbrsvd3</a>)=0</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a59c7c7cc3a3e1da7b87356fafffc47e8">lbrsvd4</a>)=0 <span class="comment">! Used externally for Ensemble member number</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">! Generate model version_id</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment">! DEPENDS ON: get_um_version_id</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#ac178e82d12ff823280549231208bfd06">lbsrce</a>)=get_um_version_id(<a class="code" href="namespacec__model__id__mod.xhtml#a24b16ed4fc126bf5f419f37c22c87fba" title="Contains model id used in LBSRCE in UM lookup tables 1111 is used to define unified model...">model_id</a>)</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment">! Data type - extract from PPXREF</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">! DEPENDS ON: exppxi</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>)=exppxi(im_ident, is, ie, <a class="code" href="namespacecppxref__mod.xhtml#a9da073735e019b687e4281b14e171199">ppx_data_type</a>,    &amp;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                                    icode, cmessage)</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment">!  Address within dump or PP file -!</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;      <span class="keywordflow">IF</span> (iwa==<a class="code" href="namespacemodel__file.xhtml#a1be124d410691b7f407165dd575888e3" title="This value is part of the file format, and other utilities expect it. ">mf_data_missing</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <span class="comment">! If we don&#39;t know the file location</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="comment">! we also cannot know the data offset</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a16f485ed422b2c5c4014cfb66960f51a">naddr</a>)=<a class="code" href="namespacemodel__file.xhtml#a1be124d410691b7f407165dd575888e3" title="This value is part of the file format, and other utilities expect it. ">mf_data_missing</a></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        <span class="comment">! The data addr is the addr in the file        ! from the data start location, except for fieldsfiles</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        <span class="comment">! where is is stated to be the same as LBEGIN.</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a16f485ed422b2c5c4014cfb66960f51a">naddr</a>)=iwa</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment">!  LBUSER3 is not currently used (ie set to 0).</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a84e97776b87c2cbd9045f416117be038">lbuser3</a>)=0</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">!  STASH section/item code!</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a4f2a173b22a48250d86265493664e6ad">item_code</a>)=is*1000+ie</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">!  STASH pseudo-level (for fields which have pseudo-levels defined) !</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#aee7df10b715ce20dd32548d4080bfae6">lbplev</a>)=pseudo_level</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="comment">!  Spare for user&#39;s use!</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a4a19df2a3e312b29a477f86438c119f7">lbuser6</a>)=0</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;      pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#af9bb54d27410c9c30cf5933f421a0c8b">model_code</a>) = im_ident</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">!  Reserved for future PP package use !</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#aca85d5eac48829fd9da888cf1fcb9b88">brsvd3</a>)=0.0</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a8991778a5270c0b8984a307fafb0ded4">brsvd4</a>)=0.0</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;      pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a34b7cbb87375ff891391c99701e2123b">bdatum</a>)=0.0</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;      pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a82f90fd378e614ed7aabca4f5aaeae8d">bacc</a>)=comp_accrcy <span class="comment">! packing accuracy stored as real</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">!  Vertical grid description !  Level and reference level</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      <span class="keywordflow">IF</span>(pp_lbvc &gt;= 126.AND.pp_lbvc &lt;= 139) <span class="keywordflow">THEN</span> <span class="comment">! Special codes</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment">!                                                  (surf botttom,</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment">!                                                   top all zero)</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a3477f537101ca4d86526604f9465f725">blev</a>)=0.0</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a4b23775daa91e9b4713768ad387e843e">bhlev</a>)=0.0</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ac6b62dec76776d76cb274df4bbc0b06c">brlev</a>)=0.0</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a42310048e52394f48d32c5e0610e902f">bhrlev</a>)=0.0</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ab6de8d16584bb54653563c6a291060ec">bulev</a>)=0.0</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a4cc6195029c0a3039a8f62cc875613ed">bhulev</a>)=0.0</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;      <span class="keywordflow">ELSEIF</span>(pp_lbvc == 9.OR.pp_lbvc == 65) <span class="keywordflow">THEN</span> <span class="comment">! Hybrid/ETA levels</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment">! DEPENDS ON: exppxi</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        lvcode=exppxi(im_ident, is, ie, <a class="code" href="namespacecppxref__mod.xhtml#a8f63763b7b4e35c5123912c8593305c1">ppx_lv_code</a>,                    &amp;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;          icode, cmessage)</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment">! From vn5.2:</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment">! height of model level k above mean sea level is</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="comment">!       z(i,j,k) = zsea(k) + C(k)*zorog(i,j)</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment">! bulev,bhulev      zsea,C of upper layer boundary</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="comment">! blev ,bhlev       zsea,C of level</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="comment">! brlev,bhrlev      zsea,C of lower level boundary</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment">! The level here can refer to either a theta or rho level, with</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment">! layer boundaries defined by surrounding rho or theta levels.</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="comment">! [Note assumption that the top of the atmosphere model,</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="comment">!  ie eta_theta_levels(model_levels) = 1.0, is equidistant from a</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="comment">!  bounding p level above (not represented explicitly) and the p</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="comment">!  level below (at eta_rho_levels(model_levels) ).]</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        <span class="keywordflow">IF</span> (lvcode == <a class="code" href="namespacecppxref__mod.xhtml#abe6e0b83cd1e63d0b3930fc6ef9234b3">ppx_half_level</a>) <span class="keywordflow">THEN</span> <span class="comment">! theta level (&amp; w)</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;          <span class="keywordflow">IF</span>(int_level &gt;= model_levels) <span class="keywordflow">THEN</span> <span class="comment">! top level</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ab6de8d16584bb54653563c6a291060ec">bulev</a>) =  zseak_theta(model_levels) * 2.0      &amp;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                                         - zseak_rho(model_levels)</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a4cc6195029c0a3039a8f62cc875613ed">bhulev</a>)=     ck_theta(model_levels) * 2.0      &amp;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                                         -    ck_rho(model_levels)</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ab6de8d16584bb54653563c6a291060ec">bulev</a>) = zseak_rho(int_level+1)</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a4cc6195029c0a3039a8f62cc875613ed">bhulev</a>)=    ck_rho(int_level+1)</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="keywordflow">          ENDIF</span>                             <span class="comment">! top level</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;          pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a3477f537101ca4d86526604f9465f725">blev</a>) = zseak_theta(int_level)</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;          pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a4b23775daa91e9b4713768ad387e843e">bhlev</a>)=    ck_theta(int_level)</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="comment">! Note that the lowest theta level (=1) has a lower layer boundary at</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment">! the surface, as set explicitly in the model interface to physics.</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;          <span class="keywordflow">IF</span>(int_level &lt;= 1) <span class="keywordflow">THEN</span>            <span class="comment">! bottom level</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;             pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ac6b62dec76776d76cb274df4bbc0b06c">brlev</a>) = 0.     <span class="comment">! zsea at/below surface</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;             pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a42310048e52394f48d32c5e0610e902f">bhrlev</a>)= 1.     <span class="comment">! C    at/below surface</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ac6b62dec76776d76cb274df4bbc0b06c">brlev</a>) = zseak_rho(int_level)</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a42310048e52394f48d32c5e0610e902f">bhrlev</a>)=    ck_rho(int_level)</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="keywordflow">          ENDIF</span>                              <span class="comment">! bottom level</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        <span class="keywordflow">ELSEIF</span>(lvcode == ppx_full_level) <span class="keywordflow">THEN</span> <span class="comment">! rho level (&amp; u,v,p)</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;          <span class="keywordflow">IF</span>(int_level &gt;  model_levels) <span class="keywordflow">THEN</span> <span class="comment">! p above top level</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ab6de8d16584bb54653563c6a291060ec">bulev</a>) = zseak_theta(model_levels) * 2.0       &amp;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                                        - zseak_rho(model_levels)</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a4cc6195029c0a3039a8f62cc875613ed">bhulev</a>)=    ck_theta(model_levels) * 2.0       &amp;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                                         -   ck_rho(model_levels)</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a3477f537101ca4d86526604f9465f725">blev</a>) = pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ab6de8d16584bb54653563c6a291060ec">bulev</a>)</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;           pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a4b23775daa91e9b4713768ad387e843e">bhlev</a>)= pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a4cc6195029c0a3039a8f62cc875613ed">bhulev</a>)</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ab6de8d16584bb54653563c6a291060ec">bulev</a>) = zseak_theta(int_level)</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a4cc6195029c0a3039a8f62cc875613ed">bhulev</a>)=    ck_theta(int_level)</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a3477f537101ca4d86526604f9465f725">blev</a>)  = zseak_rho(int_level)</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a4b23775daa91e9b4713768ad387e843e">bhlev</a>) =    ck_rho(int_level)</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="keywordflow">          ENDIF</span>                              <span class="comment">! p above top level</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;          <span class="keywordflow">IF</span>(int_level &lt;= 0) <span class="keywordflow">THEN</span>            <span class="comment">! bottom level</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ac6b62dec76776d76cb274df4bbc0b06c">brlev</a>) = 0.    <span class="comment">! zsea at/below surface</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a42310048e52394f48d32c5e0610e902f">bhrlev</a>)= 1.    <span class="comment">! C    at/below surface</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ac6b62dec76776d76cb274df4bbc0b06c">brlev</a>) = zseak_theta(int_level-1)</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a42310048e52394f48d32c5e0610e902f">bhrlev</a>)=    ck_theta(int_level-1)</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="keywordflow">          ENDIF</span>                              <span class="comment">! bottom level</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        <span class="keywordflow">ELSE</span>                <span class="comment">! Illegal lvcode</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;          icode=1</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;          cmessage=<span class="stringliteral">&#39; Inconsistent vertical coordinate codes in &#39;</span>//&amp;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;              <span class="stringliteral">&#39;STASHmaster for this output field: LevelT indicates &#39;</span>//&amp;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;              <span class="stringliteral">&#39;that this variable is on model levels, but LBVC used &#39;</span>//&amp;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;              <span class="stringliteral">&#39;for pp header label does not.&#39;</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) routinename,cmessage                               &amp;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                  ,<span class="stringliteral">&#39; section,item,LevelT,pp_lbvc=&#39;</span>,is,ie,lvcode,pp_lbvc</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;pp_head&#39;</span>)</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="keywordflow">        ENDIF</span>               <span class="comment">! Test on lvcode</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a3477f537101ca4d86526604f9465f725">blev</a>)=real_level</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a4b23775daa91e9b4713768ad387e843e">bhlev</a>)=0.0</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ac6b62dec76776d76cb274df4bbc0b06c">brlev</a>)=0.0  <span class="comment">! The boundary levels</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a42310048e52394f48d32c5e0610e902f">bhrlev</a>)=0.0 <span class="comment">! are not known</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ab6de8d16584bb54653563c6a291060ec">bulev</a>)=0.0  <span class="comment">! for pressure</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a4cc6195029c0a3039a8f62cc875613ed">bhulev</a>)=0.0 <span class="comment">! levels.</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="comment">!  Horizontal grid description -!  Position of pole (from dump fixed-length header)</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="comment">!  Grid orientation (hardwired 0.0)</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="comment">!  Origin and spacing of grid (depends on output grid type)</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;      pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a37b86bf363f51de106121c055f5d0da8">bplat</a>)=realhd(5)</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;      pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a7c6007db4af6802ac568477e9a110ab6">bplon</a>)=realhd(6)</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;      pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a89887ae484e3d32ef5a3d888e631f926">bgor</a>)=0.0</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;      <span class="keywordflow">IF</span> (samples &gt;  0) <span class="keywordflow">THEN</span>   <span class="comment">! Indicates a timeseries/trajectory</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>)=0.0</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a38ce300aeb7fd37cf79bae07df7a8c9f">bdx</a>)=0.0</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a74be09c1c3b22f62cb03628ae5648381">bzy</a>)=0.0</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a06c4d1dbbd4d26f9ef9ec903dad9491f">bdy</a>)=0.0</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        <span class="keywordflow">IF</span>(st_grid == st_riv_grid)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;          pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a06c4d1dbbd4d26f9ef9ec903dad9491f">bdy</a>) = 180.0/pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a54e6ad5def513311547cbefc60aee032">lbrow</a>)</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;          pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a74be09c1c3b22f62cb03628ae5648381">bzy</a>) = realhd(3) - pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a06c4d1dbbd4d26f9ef9ec903dad9491f">bdy</a>)*0.5</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;          pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a38ce300aeb7fd37cf79bae07df7a8c9f">bdx</a>) = 360.0/pp_int_head(<a class="code" href="namespacelookup__addresses.xhtml#a9ae4b281a4481f6737cda3288e5d7971">lbnpt</a>)</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;          pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>) = realhd(4) - pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a38ce300aeb7fd37cf79bae07df7a8c9f">bdx</a>)*0.5</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;          <span class="keywordflow">IF</span>(st_grid == st_uv_grid.OR.st_grid == st_cv_grid .OR.        &amp;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;              st_grid == st_zu_grid.OR.st_grid == st_mu_grid) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a74be09c1c3b22f62cb03628ae5648381">bzy</a>)=realhd(3)-realhd(2)    <span class="comment">! V pts</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a74be09c1c3b22f62cb03628ae5648381">bzy</a>)=realhd(3)-realhd(2)/2.0   <span class="comment">! Zeroth Lat BZY</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                   <span class="keywordflow">IF</span>(st_grid == st_uv_grid.OR.st_grid == st_cu_grid .OR.        &amp;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;              st_grid == st_zu_grid.OR.st_grid == st_mu_grid) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>)=realhd(4)-realhd(1)   <span class="comment">! U points</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>)=realhd(4)-realhd(1)/2.0   <span class="comment">! Zeroth Long BZX</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;          <span class="keywordflow">IF</span>(st_grid == st_uv_grid.OR.st_grid == st_cv_grid .OR.        &amp;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;              st_grid == st_zu_grid.OR.st_grid == st_mu_grid) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a74be09c1c3b22f62cb03628ae5648381">bzy</a>)=realhd(3)-realhd(2)/2.0 <span class="comment">! UV pts</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a74be09c1c3b22f62cb03628ae5648381">bzy</a>)=realhd(3)-realhd(2) <span class="comment">! Zeroth Lat BZY</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                   <span class="keywordflow">IF</span>(st_grid == st_uv_grid.OR.st_grid == st_cu_grid .OR.        &amp;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;              st_grid == st_zu_grid.OR.st_grid == st_mu_grid) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>)=realhd(4)-realhd(1)/2.0 <span class="comment">!UV points</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>)=realhd(4)-realhd(1) <span class="comment">! Zeroth Long BZX</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a38ce300aeb7fd37cf79bae07df7a8c9f">bdx</a>)=realhd(1) <span class="comment">! Long intvl BDX</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a06c4d1dbbd4d26f9ef9ec903dad9491f">bdy</a>)=realhd(2) <span class="comment">! Lat intvl BDY</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment">! Add on offset for fields not starting from the origin (sub-areas)</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;      <span class="comment">! If this is variable horizontal grid information</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;      <span class="comment">! then the horizontal start points are NOT equally spaced.</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;      <span class="comment">! The existing code is meaningless in this case so</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;      <span class="comment">! we must get our actual start point some other way!</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        <span class="keywordflow">IF</span> (var_grid_type &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;          <span class="keywordflow">IF</span> (x_var_grid) pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>) =                           &amp;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;              x_boundary(wcol_in,var_grid_type)</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;          <span class="keywordflow">IF</span> (y_var_grid) pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a74be09c1c3b22f62cb03628ae5648381">bzy</a>) =                           &amp;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;              y_boundary(srow_in,var_grid_type)</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;          <span class="keywordflow">IF</span>(st_grid == st_uv_grid.OR.st_grid == st_cv_grid .OR.        &amp;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;              st_grid == st_zu_grid.OR.st_grid == st_mu_grid) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;            <span class="keywordflow">IF</span>(srow_in /= 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="comment">! v area shifted up a row so diagnostic same as pre new dynamics</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="comment">! when the rows were reversed. ie. N-S</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;              pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a74be09c1c3b22f62cb03628ae5648381">bzy</a>)=pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a74be09c1c3b22f62cb03628ae5648381">bzy</a>)                       &amp;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;                  +(srow_in-2)*pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a06c4d1dbbd4d26f9ef9ec903dad9491f">bdy</a>)</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;            pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a74be09c1c3b22f62cb03628ae5648381">bzy</a>)=pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a74be09c1c3b22f62cb03628ae5648381">bzy</a>)                         &amp;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                +(srow_in-1)*pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a06c4d1dbbd4d26f9ef9ec903dad9491f">bdy</a>)</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;          pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>)=pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>)                           &amp;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;              +(wcol_in-1)*pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a38ce300aeb7fd37cf79bae07df7a8c9f">bdx</a>)</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="keywordflow">                 ENDIF</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        <span class="keywordflow">IF</span>(pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>) &gt;= 360.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;          pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>)=pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>)-360.0</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;       <span class="comment">!</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;<span class="comment">! If horizontal averaging has been applied to the output field,</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="comment">! set BDX and/or BDY to the full (sub)domain extent which was processed.</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="comment">! If the input field was intrinsically non-2D (eg. zonal), assume that</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<span class="comment">! the collapsed dimension(s) covered the full model domain.</span></div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        mean_code=(gr/block_size)*block_size</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;        <span class="keywordflow">IF</span> (st_grid == st_zt_grid .OR. st_grid == st_zu_grid            &amp;</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;            .OR. st_grid == st_scalar) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;          pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a38ce300aeb7fd37cf79bae07df7a8c9f">bdx</a>)=<span class="keywordtype">REAL</span>(inthd(6))*PP_REAL_HEAD(<a class="code" href="namespacelookup__addresses.xhtml#a38ce300aeb7fd37cf79bae07df7a8c9f">bdx</a>)</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        <span class="keywordflow">ELSEIF</span> (mean_code == zonal_mean_base .OR.                       &amp;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;            mean_code == field_mean_base .OR.                           &amp;</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;            mean_code == global_mean_base) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;          pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a38ce300aeb7fd37cf79bae07df7a8c9f">bdx</a>)=abs(<span class="keywordtype">REAL</span>(ecol_in-wcol_in))*pp_real_head(BDX)</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        <span class="keywordflow">IF</span> (st_grid == st_mt_grid .OR. st_grid == st_mu_grid            &amp;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            .OR. st_grid == st_scalar) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;          pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a06c4d1dbbd4d26f9ef9ec903dad9491f">bdy</a>)=<span class="keywordtype">REAL</span>(inthd(7))*PP_REAL_HEAD(<a class="code" href="namespacelookup__addresses.xhtml#a06c4d1dbbd4d26f9ef9ec903dad9491f">bdy</a>)</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;        <span class="keywordflow">ELSEIF</span> (mean_code == merid_mean_base .OR.                       &amp;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;            mean_code == field_mean_base .OR.                           &amp;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;            mean_code == global_mean_base) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;          pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a06c4d1dbbd4d26f9ef9ec903dad9491f">bdy</a>)=abs(<span class="keywordtype">REAL</span>(nrow_in-srow_in))*pp_real_head(BDY)</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;      <span class="keywordflow">IF</span>( (fixhd(117) &gt; 1 .AND. fixhd(122) &gt; 1)) <span class="keywordflow">THEN</span>        pp_real_head(bdx) = <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        pp_real_head(bdy) = <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a789c65717076c9bd177fdcec822953c7">bzx</a>) = <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#a74be09c1c3b22f62cb03628ae5648381">bzy</a>) = <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;<span class="comment">! Missing data indicator (from PARAMETER)! MKS scaling factor (unity as model uses SI units throughout)</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;      pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#aab140d56b5d424c50e71824cdee926c5">bmdi</a>)=<a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;      pp_real_head(<a class="code" href="namespacelookup__addresses.xhtml#ae1943e1fea075c215b137cecfb4ca168">bmks</a>)=1.0</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;PP_HEAD&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="pp__head_8f90.xhtml#af375be95fa8e37afc539c88bfc02a057" title="LL SUBROUTINE PPHEAD. ">pp_head</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
