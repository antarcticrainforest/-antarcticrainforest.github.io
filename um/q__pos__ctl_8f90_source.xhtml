<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/diffusion_and_filtering/q_pos_ctl.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_80ff6dc52dd66491dc39915a42170b84.xhtml">diffusion_and_filtering</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">q_pos_ctl.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="q__pos__ctl_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="q__pos__ctl_8f90.xhtml#a9f63edb7ff67a260c3a388b95888fc5d" title="Subroutine Q_Pos_Ctl. ">q_pos_ctl</a>                                              &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;          (q, row_length, rows, wet_model_levels, variables,      &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;           bl_levels, global_row_length, global_rows,             &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;           me, n_proc, off_x, off_y,                              &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;           model_domain,                                          &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;           halo_type, q_pos_method, qlimit,                       &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;           l_qpos_diag_pr, qpos_diag_limit, ident)</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="q__pos__ctl_8f90.xhtml#a9f63edb7ff67a260c3a388b95888fc5d">   12</a></span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceq__pos__method__mod.xhtml">q_pos_method_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespaceq__pos__method__mod.xhtml#a797f6ae10e9a6c3ddfc2ff5ad65bc55a" title="This file belongs in section: Diffusion and Filtering. ">q_pos_original</a>, <a class="code" href="namespaceq__pos__method__mod.xhtml#a6888e2cccd1760feb6e8c748b382099e">q_pos_local</a>, <a class="code" href="namespaceq__pos__method__mod.xhtml#a28dbacfd2d2cb1152730d5533878757d">q_pos_reset</a>,  &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                             <a class="code" href="namespaceq__pos__method__mod.xhtml#ac4ae9764ce140a2d8fb899578c995a18">q_pos_column</a>,   <a class="code" href="namespaceq__pos__method__mod.xhtml#ac518f7bac59ad424155a0da1c7aacfa5">q_pos_level</a>, <a class="code" href="namespaceq__pos__method__mod.xhtml#ad169bf8ca454b19b286dcb3dda9ae006">q_pos_hybrid</a></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceglobal__2d__sums__mod.xhtml" title="Module GLOBAL_2D_SUMS_MOD. ">global_2d_sums_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespaceglobal__2d__sums__mod.xhtml#ac3fe3c2679168085c4635a17e5f82215">global_2d_sums</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacedynamics__input__mod.xhtml" title="Input control for dynamics. Input control for dynamics. ">dynamics_input_mod</a><span class="keywordtype">, ONLY</span>: l_endgame</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  row_length          <span class="comment">! number of points on a row</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  rows                <span class="comment">! number of rows of data</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  wet_model_levels    <span class="comment">! number of levels used</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  variables           <span class="comment">! number of variables</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  bl_levels           <span class="comment">! number of boundary layer levels</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  global_row_length   <span class="comment">! num of points in row in full field</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  global_rows         <span class="comment">! number of rows in full field</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  me                  <span class="comment">! processor number</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  n_proc              <span class="comment">! number of processors</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  off_x               <span class="comment">! Size of halo in i direction.</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  off_y               <span class="comment">! Size of halo in j direction.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  halo_type           <span class="comment">! halo type</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  model_domain        <span class="comment">! model domain type</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  q_pos_method        <span class="comment">! Method used</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_qpos_diag_pr    <span class="comment">! Are diagnostic prints enabled?</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: qlimit            <span class="comment">! Limit for Q</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: qpos_diag_limit   <span class="comment">! Limit for diagnostic prints</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">INTENT(IN)</span> :: ident   <span class="comment">! Identify which q_pos call this is</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::  q(1-off_x:row_length+off_x, 1-off_y:rows+off_y, &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                          wet_model_levels)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keywordtype">INTEGER</span> :: i, j, k                     <span class="comment">! Loopers</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordtype">INTEGER</span> :: max_levs_per_cpu            <span class="comment">! max number of levs per cpu</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">INTEGER</span> :: icode                       <span class="comment">! return code from comms.</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keywordtype">INTEGER</span> :: proc                        <span class="comment">! processor being sent to</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">INTEGER</span> :: actual_levels</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_q_pos_local               <span class="comment">! for method 1/2</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordtype">REAL</span> :: recip_g_row_len                <span class="comment">! 1/global_row_length</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">REAL</span> :: polar_value                    <span class="comment">! new constant value at pole</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">INTEGER</span> :: map(wet_model_levels)       <span class="comment">! processor number for level</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keywordtype">INTEGER</span> :: n_levs_on_proc(0:n_proc-1)  <span class="comment">! number of levels on each processor</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keywordtype">INTEGER</span> :: levels_to_fix(wet_model_levels) <span class="comment">! Which levels need fixing?</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keywordtype">REAL</span> :: local_polar(row_length, wet_model_levels) <span class="comment">! local copy of pole</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">REAL</span> :: polar_sum(wet_model_levels)    <span class="comment">! Summation of polar values</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">REAL</span> ::  q_global (global_row_length, global_rows,                      &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                   (wet_model_levels/n_proc)+1) <span class="comment">! Gathered Q</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordtype">CHARACTER (LEN=80)</span>           :: cmessage         <span class="comment">! error message</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">PARAMETER</span> :: routinename = <span class="stringliteral">&#39;Q_POS_CTL&#39;</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;Q_POS_CTL&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;-<span class="comment">! Section 0. Initialise options</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;-<span class="keywordflow">IF</span> (q_pos_method == <a class="code" href="namespaceq__pos__method__mod.xhtml#a797f6ae10e9a6c3ddfc2ff5ad65bc55a" title="This file belongs in section: Diffusion and Filtering. ">q_pos_original</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  l_q_pos_local = .false.</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (q_pos_method == <a class="code" href="namespaceq__pos__method__mod.xhtml#a6888e2cccd1760feb6e8c748b382099e">q_pos_local</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  l_q_pos_local = .true.</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;-<span class="comment">! Section 0.1. Perform diagnostics if required</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;-<span class="keywordflow">IF</span> (l_qpos_diag_pr) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">! DEPENDS ON: q_pos_diag_pr</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keyword">CALL </span>q_pos_diag_pr(q, row_length, rows, wet_model_levels,             &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                     off_x, off_y, qpos_diag_limit, ident)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;-<span class="comment">! Section 1. Reset Polar rows to constant for global model if using</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">!            local q_pos method or reset/column/level</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;-<span class="keywordflow">IF</span> ( model_domain == <a class="code" href="namespacedomain__params.xhtml#aa4621b29b8014dcc312af1558bc008e3">mt_global</a>    .AND.                                 &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;     .NOT. l_endgame              .AND.                                 &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    (q_pos_method == <a class="code" href="namespaceq__pos__method__mod.xhtml#a6888e2cccd1760feb6e8c748b382099e">q_pos_local</a>  .OR.                                  &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;     q_pos_method == <a class="code" href="namespaceq__pos__method__mod.xhtml#a28dbacfd2d2cb1152730d5533878757d">q_pos_reset</a>  .OR.                                  &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;     q_pos_method == <a class="code" href="namespaceq__pos__method__mod.xhtml#ac4ae9764ce140a2d8fb899578c995a18">q_pos_column</a> .OR.                                  &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;     q_pos_method == <a class="code" href="namespaceq__pos__method__mod.xhtml#ac518f7bac59ad424155a0da1c7aacfa5">q_pos_level</a>  .OR.                                  &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;     q_pos_method == <a class="code" href="namespaceq__pos__method__mod.xhtml#ad169bf8ca454b19b286dcb3dda9ae006">q_pos_hybrid</a>)       ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordflow">IF</span> (at_extremity(pnorth)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">DO</span> k = 1, wet_model_levels</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        local_polar(i, k) = q(i, rows, k)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceglobal__2d__sums__mod.xhtml#ac3fe3c2679168085c4635a17e5f82215">global_2d_sums</a>(local_polar, row_length, 1, 0, 0,               &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                        wet_model_levels, polar_sum,                    &amp;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                        gc_proc_row_group)</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    recip_g_row_len = 1./global_row_length</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordflow">DO</span> k = 1, wet_model_levels</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      polar_value   = polar_sum(k) * recip_g_row_len</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      q(:, rows, k) = polar_value</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keywordflow">  END IF</span>  <span class="comment">! PNORTH</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordflow">IF</span> (at_extremity(psouth)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">DO</span> k = 1, wet_model_levels</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        local_polar(i, k) = q(i, 1, k)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceglobal__2d__sums__mod.xhtml#ac3fe3c2679168085c4635a17e5f82215">global_2d_sums</a>(local_polar, row_length, 1, 0, 0,               &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                        wet_model_levels, polar_sum,                    &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                        gc_proc_row_group)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    recip_g_row_len = 1./global_row_length</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">DO</span> k = 1, wet_model_levels</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      polar_value   = polar_sum(k) * recip_g_row_len</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      q(:, 1, k) = polar_value</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keywordflow">  END IF</span>  <span class="comment">! PSOUTH</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! GLOBAL and not endgame</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keywordflow">IF</span> (q_pos_method == <a class="code" href="namespaceq__pos__method__mod.xhtml#a28dbacfd2d2cb1152730d5533878757d">q_pos_reset</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">! DEPENDS ON : q_pos_reset_sub</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keyword">CALL </span>q_pos_reset_sub(q, row_length, rows, off_x, off_y,               &amp;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                       wet_model_levels, qlimit )</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (q_pos_method == <a class="code" href="namespaceq__pos__method__mod.xhtml#ac4ae9764ce140a2d8fb899578c995a18">q_pos_column</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  actual_levels = wet_model_levels/variables</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">! DEPENDS ON : q_pos_column_sub</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <span class="keywordflow">DO</span> i = 1, variables</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keyword">CALL </span>q_pos_column_sub(q(:,:,(i-1)*actual_levels+1:i*actual_levels), &amp;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                          row_length, rows, off_x, off_y,               &amp;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                          actual_levels, qlimit )</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (q_pos_method == <a class="code" href="namespaceq__pos__method__mod.xhtml#ac518f7bac59ad424155a0da1c7aacfa5">q_pos_level</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">! DEPENDS ON : q_pos_level_sub</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="keyword">CALL </span>q_pos_level_sub(q, row_length, rows, off_x, off_y,               &amp;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                       wet_model_levels, qlimit )</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (q_pos_method == <a class="code" href="namespaceq__pos__method__mod.xhtml#ad169bf8ca454b19b286dcb3dda9ae006">q_pos_hybrid</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">! DEPENDS ON : q_pos_hybrid_sub</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keyword">CALL </span>q_pos_hybrid_sub(q, row_length, rows, off_x, off_y,              &amp;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                       wet_model_levels, variables, bl_levels, qlimit )</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (q_pos_method == <a class="code" href="namespaceq__pos__method__mod.xhtml#a797f6ae10e9a6c3ddfc2ff5ad65bc55a" title="This file belongs in section: Diffusion and Filtering. ">q_pos_original</a> .OR.                            &amp;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;         q_pos_method == <a class="code" href="namespaceq__pos__method__mod.xhtml#a6888e2cccd1760feb6e8c748b382099e">q_pos_local</a>)  <span class="keywordflow">THEN</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;-<span class="comment">! Section 2.  Check all levels to see which ones have values locally</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">!             that need correcting and setup maps</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;-  levels_to_fix(:) = 0</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <span class="keywordflow">DO</span> k=1, wet_model_levels</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    outer: <span class="keywordflow">DO</span> j=1, rows</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;             <span class="keywordflow">DO</span> i=1, row_length</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;               <span class="keywordflow">IF</span> ( q(i,j,k) &lt; qlimit ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                 levels_to_fix(k) = 1</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="preprocessor">#if !defined(VECTOR)</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="preprocessor"></span>                 <span class="comment">! We have found a point that needs fixing, so can jump</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                 <span class="comment">! out of the loop.  This would inhibit vectorisation</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                 <span class="comment">! so only do it for non-vector platforms</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                 <span class="keywordflow">EXIT</span> outer</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor"></span><span class="keywordflow">               END IF</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keywordflow">             END DO</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keywordflow">    END DO</span> outer</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <span class="comment">! We need to get the maximum of this across all processors to find</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="comment">! those levels that need fixing</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="keyword">CALL </span>gc_imax(wet_model_levels, n_proc, icode, levels_to_fix)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  <span class="comment">! Calculate the mapping of which processor each level will go to</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  n_levs_on_proc(:) = 0</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  map(:)            = -99</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  proc              = 0</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  <span class="keywordflow">DO</span> k=1, wet_model_levels</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">IF</span> (levels_to_fix(k) &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      map(k)               = proc</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      proc                 = proc + 1</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      <span class="keywordflow">IF</span> (proc == n_proc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;       proc                = 0</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;-<span class="comment">! Section 3.  Distribute Q over the processors</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;-</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  <span class="keywordflow">DO</span> k=1, wet_model_levels</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordflow">IF</span> (levels_to_fix(k) &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      n_levs_on_proc(map(k)) = n_levs_on_proc(map(k)) + 1</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">! DEPENDS ON: gather_field</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;      <span class="keyword">CALL </span><a class="code" href="gather__field_8f90.xhtml#a411d8497576055c9806030d5e1f6bfa4" title="Gathers a field from many processors to one processor Gathers a field from many processors to one pro...">gather_field</a>( q(1-off_x,1-off_y,k),                      &amp;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                         q_global(1,1,n_levs_on_proc(map(k))),      &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                         row_length + 2*off_x, rows + 2*off_y,      &amp;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                         global_row_length, global_rows,            &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                         fld_type_p, halo_type,                     &amp;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                         map(k), gc_all_proc_group,                 &amp;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                         icode, cmessage)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;-<span class="comment">! Section 4.  Do QPOS for all the levels on this processor</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;-</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">! DEPENDS ON: q_pos</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  <span class="keyword">CALL </span>q_pos(                                                       &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;             q_global, global_row_length, global_rows,              &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;             n_levs_on_proc(me),                                    &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;             l_q_pos_local, qlimit ,                                &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;             model_domain)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;-<span class="comment">! Section 5.  Scatter back levels to original processors</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;-  n_levs_on_proc(:) = 0</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keywordflow">DO</span> k=1, wet_model_levels</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordflow">IF</span> (levels_to_fix(k) &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;      n_levs_on_proc(map(k)) = n_levs_on_proc(map(k)) + 1</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">! DEPENDS ON: scatter_field</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scatter__field_8f90.xhtml#a07ff950f6735da93231f893dcccad8dc" title="Scatters a field from one processor to many processors Scatters a field from one processor to many pr...">scatter_field</a>( q(1-off_x,1-off_y,k),                     &amp;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                          q_global(1,1,n_levs_on_proc(map(k))),     &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                          row_length + 2*off_x, rows + 2*off_y,     &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                          global_row_length, global_rows,           &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                          fld_type_p, halo_type,                    &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                          map(k), gc_all_proc_group,                &amp;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                          icode, cmessage)</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keywordflow">ELSE</span> <span class="comment">! no q_pos_method I recognise</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  icode = -10</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  cmessage = <span class="stringliteral">&#39;Q_POS: unrecognised method&#39;</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename, icode, cmessage)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;Q_POS_CTL&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="q__pos__ctl_8f90.xhtml#a9f63edb7ff67a260c3a388b95888fc5d" title="Subroutine Q_Pos_Ctl. ">q_pos_ctl</a></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
