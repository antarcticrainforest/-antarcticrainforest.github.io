<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/large_scale_preciptation/ls_ppn.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_e9ad03cb5a25088942c5c2b981810778.xhtml">large_scale_preciptation</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ls_ppn.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ls__ppn_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="namespacels__ppn__mod.xhtml">   17</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacels__ppn__mod.xhtml" title="SUBROUTINES LS_PPN and LS_PPNC SUBROUTINES LS_PPN and LS_PPNC Purpose: LS_PPN and LS_PPNC: Calculate ...">ls_ppn_mod</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacels__ppn__mod.xhtml#a04a50a9f284f7ebb1acbb206ac81cdb9">ls_ppn</a>(                                                      &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  p_layer_boundaries, p_theta_levels, bland,                            &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;!&gt; primary fields and</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;!&gt; cloud fractions</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  cf, cfl, cff,                                                         &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  rhcrit,                                                               &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  lspice_dim1,lspice_dim2,lspice_dim3,                                  &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  rho_r2, q, qcf, qcl, t,                                               &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  qcf2, qrain, qgraup,                                                  &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;!&gt; Wind field for lateral displacement!&gt; of falling ice by shear</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  u_on_p, v_on_p,                                                       &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;!&gt; aerosol variables</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  sea_salt_film, sea_salt_jet,                                          &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  salt_dim1, salt_dim2, salt_dim3,                                      &amp;  ukca_cdnc,                                                            &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  cdnc_dim1, cdnc_dim2, cdnc_dim3,                                      &amp;  biogenic,                                                             &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  snow_depth, land_fract,                                               &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  so4_ait,                                                              &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  so4_acc,                                                              &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  so4_dis,                                                              &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  bmass_agd,                                                            &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  bmass_cld,                                                            &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  ocff_agd,                                                             &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  ocff_cld,                                                             &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  nitr_acc,                                                             &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  nitr_diss,                                                            &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  aerosol,                                                              &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  arcl,                                                                 &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;!&gt; Other variables for mphys</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  lsrain,lssnow,                                                        &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  lsrain3d, lssnow3d, rainfrac3d,                                       &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  n_drop_tpr, n_drop_3d,                                                &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  rhc_row_length, rhc_rows,                                             &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  rhodz_dry, rhodz_moist,                                               &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;!&gt; Variables for stochastic physics random parameters2</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  m_ci,                                                                 &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;-! Error code</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="namespacels__ppn__mod.xhtml#a04a50a9f284f7ebb1acbb206ac81cdb9">   63</a></span>&#160;-  error          )</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;     <span class="comment">! General modules</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceum__input__control__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">um_input_control_mod</a><span class="keywordtype">,  ONLY</span>: <a class="code" href="namespaceum__input__control__mod.xhtml#a5e102a877cce4f02fad05c876cd2abad">l_mr_physics1</a></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keywordtype">USE </span>science_fixes_mod<span class="keywordtype">,     ONLY</span>: l_mphys_gr_out</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacearcl__mod.xhtml" title="Constants used by the aerosol climatology for NWP. ">arcl_mod</a><span class="keywordtype">,              ONLY</span>: <a class="code" href="namespacearcl__mod.xhtml#a0051721d4a166cc49e970f78d1a245f4">npd_arcl_compnts</a></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;     <span class="comment">! Microphysics modules</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemphys__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">mphys_inputs_mod</a><span class="keywordtype">,      ONLY</span>: <a class="code" href="namespacemphys__inputs__mod.xhtml#a4a81ea38c795301880efde5986e0a52d" title="Use iterative melting. ">l_it_melting</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#a8127fbd65ca93b0d6d08033f505bd60f" title="=========================================================================== LOGICAL options set from ...">l_mcr_iter</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#a662842094edbec74a0ed94931a48d5ef" title="=========================================================================== INTEGER options set from ...">lsiter</a>,    &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                   <a class="code" href="namespacemphys__inputs__mod.xhtml#a1655065299c01c0150b23466da9ba4e4">niter_bs</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#a92240689885adf9ac77eaf71b5171465" title="Use improved warm rain microphysics scheme. ">l_warm_new</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#ad580b93fb6223c38181f3f05d1b82c62">l_mcr_qrain</a>,   &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                   <a class="code" href="namespacemphys__inputs__mod.xhtml#a1e977cd2bfc88d00f67153d185e877f8">l_mcr_qcf2</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#a3d970e6ae2e572f69c0d3cea5b5247ce">l_mcr_qgraup</a></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                   <span class="keywordtype">USE </span><a class="code" href="namespacemphys__bypass__mod.xhtml" title="Global bypass module for switches concerned with microphysics. ">mphys_bypass_mod</a><span class="keywordtype">,      ONLY</span>: <a class="code" href="namespacemphys__bypass__mod.xhtml#a137aaa861391130f8b2d58fa6d529e80">mphys_mod_top</a>    </div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemphys__constants__mod.xhtml">mphys_constants_mod</a><span class="keywordtype">,   ONLY</span>: <a class="code" href="namespacemphys__constants__mod.xhtml#ad8a32b2db63522b5669f36771670e377">m_ci_sav</a>, <a class="code" href="namespacemphys__constants__mod.xhtml#ae967b3818286dab42f1363ebc505b4e7">l_calc_mp_const</a>, <a class="code" href="namespacemphys__constants__mod.xhtml#afb34a2820778a75a5deaf02ffd3334de" title="Iterations of microphysics. ">iter_z</a>,   &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                   <a class="code" href="namespacemphys__constants__mod.xhtml#aff9ecdc267d7e560c532cafea0fb1d54" title="Corresponds to level 13 in 38 level data set (Change added for move to 70 levels) ...">max_it_mlt</a></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemphys__diags__mod.xhtml">mphys_diags_mod</a><span class="keywordtype">,       ONLY</span>: <a class="code" href="namespacemphys__diags__mod.xhtml#a1cbe7fb5cd335e3f6890f7ac93e24d65">l_point_diag</a>, <a class="code" href="namespacemphys__diags__mod.xhtml#af0b48556db2bc3f42bbafb2a37b280e8">mphys_pts</a></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;     <span class="comment">! ENDGame modules</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacelevel__heights__mod.xhtml" title="Constants necessary for model level heights in advection and other schemes. Constants necessary for m...">level_heights_mod</a><span class="keywordtype">,     ONLY</span>: <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>,  <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>,       &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                   <a class="code" href="namespacelevel__heights__mod.xhtml#a47255d1b34083d1a399f41be0d9f703e" title="This module is used to hold levels values set in atmos_init. ">eta_theta_levels</a></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">, ONLY</span>: qdims, pdims_s, tdims,               &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                                   pdims</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;     <span class="comment">! Dr Hook modules</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,               ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,              ONLY</span>: jprb, jpim</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;     <span class="comment">! Large scale precipitation modules</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacels__ppnc__mod.xhtml" title="SUBROUTINES LS_PPN and LS_PPNC SUBROUTINES LS_PPN and LS_PPNC Purpose: LS_PPN and LS_PPNC: Calculate ...">ls_ppnc_mod</a><span class="keywordtype">,           ONLY</span>: <a class="code" href="namespacels__ppnc__mod.xhtml#a739c63dbab5632af7acbf3de0dc7fe9b">ls_ppnc</a></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacelsp__taper__ndrop__mod.xhtml" title="Large-scale precipitation scheme. Cloud droplet number calculator Large-scale precipitation scheme...">lsp_taper_ndrop_mod</a><span class="keywordtype">,   ONLY</span>: <a class="code" href="namespacelsp__taper__ndrop__mod.xhtml#a8c8602a4f3502703bda7d097ca25851f">lsp_taper_ndrop</a></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacelspcon__mod.xhtml" title="Calculates constants used in large-scale precipitation scheme. Calculates constants used in large-sca...">lspcon_mod</a><span class="keywordtype">,            ONLY</span>: <a class="code" href="namespacelspcon__mod.xhtml#a6eb591356273e5b4d14212ef85fa6bd7">lspcon</a></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    rhc_row_length, rhc_rows,                                           &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    lspice_dim1,lspice_dim2,lspice_dim3,                                &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    salt_dim1,                                                          &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                     <span class="comment">! Array dimensions for sea-salt arrays (equal</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    salt_dim2,                                                          &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                     <span class="comment">! either to qdims%i_start:qdims%i_end,</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                     <span class="comment">! qdims%j_start:qdims%j_end, and</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                     <span class="comment">! 1:qdims%k_end, or</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    salt_dim3,                                                          &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                     <span class="comment">! else 1,1,1, depending on L_SEASALT_CCN).</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    cdnc_dim1, cdnc_dim2, cdnc_dim3</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                     <span class="comment">! UKCA cloud drop number concentration dimensions</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    cf( qdims%i_start:qdims%i_end,                                      &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        qdims%j_start:qdims%j_end,                                      &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        1:qdims%k_end ),                                                &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                    <span class="comment">! IN Cloud fraction.</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="varcld_8h.xhtml#acd7a57e90bb1e737ecae71f1c1830ad6">p_theta_levels</a>( qdims%i_start:qdims%i_end,                          &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                    qdims%j_start:qdims%j_end,                          &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                    1:qdims%k_end ),                                    &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! Note that the declaration beneath has been written to cope with the</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">! ENDGame modules, but as ENDGame hasn&#39;t yet got a qdims value for 0</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">! in the k dimension, this may need altering in the future</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    p_layer_boundaries( tdims%i_start:tdims%i_end,                      &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                        tdims%j_start:tdims%j_end,                      &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                         0           :tdims%k_end ),                    &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    rhcrit( rhc_row_length, rhc_rows,                                   &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            1:qdims%k_end ),                                            &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                                 <span class="comment">! IN Critical humidity</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                                 <span class="comment">! for cloud formation.</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;   cfl( qdims%i_start:qdims%i_end,                                      &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        qdims%j_start:qdims%j_end,                                      &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        1:qdims%k_end ),                                                &amp;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                                        <span class="comment">!IN Cloud liquid fraction.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;   cff( qdims%i_start:qdims%i_end,                                      &amp;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        qdims%j_start:qdims%j_end,                                      &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        1:qdims%k_end ),                                                &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                                        <span class="comment">!IN Cloud ice fraction.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;   rho_r2(pdims_s%i_start:pdims_s%i_end,                                &amp;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;          pdims_s%j_start:pdims_s%j_end,                                &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;          pdims_s%k_start:pdims_s%k_end)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                <span class="comment">! IN Air density * earth radius**2</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordtype">LOGICAL</span> :: bland( tdims%i_start : tdims%i_end,                        &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                 tdims%j_start : tdims%j_end )                                                              <span class="comment">! IN Land/sea mask</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;   q( qdims%i_start:qdims%i_end,                                        &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      qdims%j_start:qdims%j_end,                                        &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      1:qdims%k_end ),                                                  &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                         <span class="comment">! Specific humidity (kg water</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;   qcf( qdims%i_start:qdims%i_end,                                      &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        qdims%j_start:qdims%j_end,                                      &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        1:qdims%k_end ),                                                &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                                         <span class="comment">! Cloud ice (kg per kg air).</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;   qcl( qdims%i_start:qdims%i_end,                                      &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        qdims%j_start:qdims%j_end,                                      &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        1:qdims%k_end ),                                                &amp;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                         <span class="comment">! Cloud liquid water (kg per</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;   qcf2( qdims%i_start:qdims%i_end,                                     &amp;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;         qdims%j_start:qdims%j_end,                                     &amp;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;         1:qdims%k_end ),                                               &amp;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                                         <span class="comment">! Ice (kg per kg air)</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;   qrain( qdims%i_start:qdims%i_end,                                    &amp;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;          qdims%j_start:qdims%j_end,                                    &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;          1:qdims%k_end ),                                              &amp;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                                         <span class="comment">! Rain (kg per kg air)</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;   qgraup( qdims%i_start:qdims%i_end,                                   &amp;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;           qdims%j_start:qdims%j_end,                                   &amp;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;           1:qdims%k_end ),                                             &amp;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                                         <span class="comment">! Graupel (kg per kg air)</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;   t( qdims%i_start:qdims%i_end,                                        &amp;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      qdims%j_start:qdims%j_end,                                        &amp;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      1:qdims%k_end ),                                                  &amp;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                         <span class="comment">! Temperature (K).</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;   aerosol( qdims%i_start:qdims%i_end,                                  &amp;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            qdims%j_start:qdims%j_end,                                  &amp;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            1:qdims%k_end )</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                         <span class="comment">! &#39;Murk&#39; tracer aerosol.</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                                  &amp;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;   rhodz_dry( qdims%i_start:qdims%i_end,                                &amp;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;              qdims%j_start:qdims%j_end,                                &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                          1:qdims%k_end ),                              &amp;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                                         <span class="comment">! Dry density</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;   rhodz_moist( qdims%i_start:qdims%i_end,                              &amp;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                qdims%j_start:qdims%j_end,                              &amp;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                            1:qdims%k_end )</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                         <span class="comment">! Moist density  </span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> ::                                                    &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="comment">! For calculating shear in falling ice cloud fraction calculation.</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    u_on_p( pdims%i_start : pdims%i_end,                                &amp;            pdims%j_start : pdims%j_end,                                &amp;            pdims%k_start : pdims%k_end),                               &amp;    v_on_p( pdims%i_start : pdims%i_end,                                &amp;            pdims%j_start : pdims%j_end,                                &amp;            pdims%k_start : pdims%k_end),                               &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    arcl(   qdims%i_start : qdims%i_end,                                &amp;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            qdims%j_start : qdims%j_end,                                &amp;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                        1 : qdims%k_end,                                &amp;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <a class="code" href="namespacearcl__mod.xhtml#a0051721d4a166cc49e970f78d1a245f4">npd_arcl_compnts</a>            )</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  <span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(INOUT)</span> ::                                                 &amp;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                     <span class="comment">!Sulphur Cycle tracers (mmr kg/kg)</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;     so4_ait( qdims%i_start:qdims%i_end,                                &amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;              qdims%j_start:qdims%j_end,                                &amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;              1:qdims%k_end ),                                          &amp;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;     so4_acc( qdims%i_start:qdims%i_end,                                &amp;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;              qdims%j_start:qdims%j_end,                                &amp;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;              1:qdims%k_end ),                                          &amp;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;     so4_dis( qdims%i_start:qdims%i_end,                                &amp;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;              qdims%j_start:qdims%j_end,                                &amp;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;              1:qdims%k_end ),                                          &amp;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                                     <span class="comment">!Biomass smoke tracers</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;     bmass_agd( qdims%i_start:qdims%i_end,                              &amp;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                qdims%j_start:qdims%j_end,                              &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                1:qdims%k_end ),                                        &amp;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;     bmass_cld( qdims%i_start:qdims%i_end,                              &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                qdims%j_start:qdims%j_end,                              &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                1:qdims%k_end ),                                        &amp;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                     <span class="comment">!Fossil-fuel organic carbon tracers</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;     ocff_agd( qdims%i_start:qdims%i_end,                               &amp;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;               qdims%j_start:qdims%j_end,                               &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;               1:qdims%k_end ),                                         &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;     ocff_cld( qdims%i_start:qdims%i_end,                               &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;               qdims%j_start:qdims%j_end,                               &amp;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;               1:qdims%k_end ),                                         &amp;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                                     <span class="comment">!Ammonium nitrate tracers</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;     nitr_acc( qdims%i_start:qdims%i_end,                               &amp;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                qdims%j_start:qdims%j_end,                              &amp;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                1:qdims%k_end ),                                        &amp;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      nitr_diss( qdims%i_start:qdims%i_end,                             &amp;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                 qdims%j_start:qdims%j_end,                             &amp;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                 1:qdims%k_end )</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      snow_depth( qdims%i_start:qdims%i_end,                            &amp;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                  qdims%j_start:qdims%j_end ),                          &amp;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                                     <span class="comment">! IN Snow depth (m)</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;      land_fract( qdims%i_start:qdims%i_end,                            &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                  qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                                     <span class="comment">! IN Land fraction</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      sea_salt_film(salt_dim1, salt_dim2, salt_dim3),                   &amp;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                                         <span class="comment">! (m-3)</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      sea_salt_jet(salt_dim1, salt_dim2, salt_dim3)  <span class="comment">! (m-3)</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      biogenic( qdims%i_start:qdims%i_end,                              &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                qdims%j_start:qdims%j_end,                              &amp;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                1:qdims%k_end )</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                                  <span class="comment">! (m.m.r.)</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  <span class="keywordtype">REAL</span> :: ukca_cdnc(cdnc_dim1, cdnc_dim2, cdnc_dim3)<span class="comment">!         CDNC from UKCA for 2nd indirect effect (m-3)</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;   lsrain( qdims%i_start:qdims%i_end,                                   &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;           qdims%j_start:qdims%j_end ),                                 &amp;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                               <span class="comment">! OUT Surface rainfall rate (kg / sq m /</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;   lssnow( qdims%i_start:qdims%i_end,                                   &amp;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;           qdims%j_start:qdims%j_end ),                                 &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                               <span class="comment">! OUT Surface snowfall rate (kg / sq m /</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;   lsgraup( qdims%i_start:qdims%i_end,                                  &amp;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                               <span class="comment">! Graupel fall rate (kg/m2/s)</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: n_drop_tpr( qdims%i_start : qdims%i_end,         &amp;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                                   qdims%j_start : qdims%j_end,         &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                                               1 : qdims%k_end ),       &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                       n_drop_3d(  qdims%i_start : qdims%i_end,         &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                                   qdims%j_start : qdims%j_end,         &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                                               1 : qdims%k_end )</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                       <span class="comment">! Tapered droplet number and droplet number</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                       <span class="comment">! from autoconversion scheme</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      lsrain3d(lspice_dim1,lspice_dim2,lspice_dim3),                    &amp;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                                                        <span class="comment">! OUT</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">!                           Rain rate out of each model layer</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;      lssnow3d(lspice_dim1,lspice_dim2,lspice_dim3),                    &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                                                        <span class="comment">! OUT</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">!                           Snow rate out of each model layer</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;      rainfrac3d(lspice_dim1,lspice_dim2,lspice_dim3) <span class="comment">! OUT</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">!                           rain fraction out of each model layer</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">! Variables for stochastic physics random parameters</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: m_ci   <span class="comment">! used to modify ice fall speed.</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  <span class="keywordtype">INTEGER</span> ::    error          <span class="comment">! OUT Return code - 0 if OK,</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">!                                                - 1 if bad arguments.</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">!    Workspace usage</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  <span class="keywordtype">REAL</span> ::  lsrain_mean(qdims%i_start:qdims%i_end,                       &amp;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                       qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  <span class="keywordtype">REAL</span> ::  lssnow_mean(qdims%i_start:qdims%i_end,                       &amp;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                       qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;   ix( (qdims%i_end - qdims%i_start + 1) *                              &amp;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;       (qdims%j_end - qdims%j_start + 1) , 2 ),                         &amp;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                                 <span class="comment">! Index for compress/expand.</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    n_iterations,                                                       &amp;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                                 <span class="comment">! Number of iterations</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    eta_ratio1               <span class="comment">! ratio of model level height to</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                                 <span class="comment">! iterative melting height plus 1.</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  <span class="keywordtype">REAL</span> :: vfall( qdims%i_start:qdims%i_end,                             &amp;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;              qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;               <span class="comment">! snow fall velocity (m per s).</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;  <span class="keywordtype">REAL</span> :: vfall2( qdims%i_start:qdims%i_end,                            &amp;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;               qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;               <span class="comment">! fall velocity for qcf2 (m/s)</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  <span class="keywordtype">REAL</span> :: lssnow2( qdims%i_start:qdims%i_end,                           &amp;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;               <span class="comment">! snowfall rate for qcf2</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;  <span class="keywordtype">REAL</span> :: droplet_flux( qdims%i_start:qdims%i_end,                      &amp;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                     qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;               <span class="comment">! water drop flux / kg m-2 s-1</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;  <span class="keywordtype">REAL</span> :: vfall_rain( qdims%i_start:qdims%i_end,                        &amp;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                   qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;               <span class="comment">! fall velocity for rain (m/s)</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  <span class="keywordtype">REAL</span> :: vfall_graup( qdims%i_start:qdims%i_end,                       &amp;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                    qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;               <span class="comment">! fall vel. for graupel (m/s)</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;  <span class="keywordtype">REAL</span> :: cttemp( qdims%i_start:qdims%i_end,                            &amp;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;               qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;  <span class="keywordtype">REAL</span> :: rainfrac( qdims%i_start:qdims%i_end,                          &amp;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                 qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  <span class="keywordtype">REAL</span> :: frac_ice_above( qdims%i_start:qdims%i_end,                    &amp;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                       qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;               <span class="comment">! Cloud ice fraction passed</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;               <span class="comment">! in layer above</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  <span class="keywordtype">REAL</span> :: layer_thickness( qdims%i_start:qdims%i_end,                   &amp;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                        qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;  <span class="keywordtype">REAL</span> :: rho1( qdims%i_start:qdims%i_end,                              &amp;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;             qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  <span class="keywordtype">REAL</span> :: rho2( qdims%i_start:qdims%i_end,                              &amp;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;             qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;  <span class="keywordtype">REAL</span> :: deltaz( qdims%i_start : qdims%i_end,                          &amp;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                  qdims%j_start : qdims%j_end,                          &amp;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                              1 : qdims%k_end )</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                                         <span class="comment">! Layer Thickness</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;  <span class="keywordtype">REAL</span> :: q_total( qdims%i_start:qdims%i_end,                           &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                qdims%j_start:qdims%j_end )</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;  <span class="keywordtype">REAL</span> :: iter_eta                      <span class="comment">! eta value at which to</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                                         <span class="comment">! start iterative melting</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;  <span class="keywordtype">REAL</span> :: fqi_rain( qdims%i_start:qdims%i_end,                          &amp;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                 qdims%j_start:qdims%j_end,                             &amp;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                 1:qdims%k_end )</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;  <span class="keywordtype">REAL</span> :: lamr( qdims%i_start:qdims%i_end,                              &amp;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;             qdims%j_start:qdims%j_end,                                 &amp;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;             1:qdims%k_end )</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">!  Physical constants   REAL :: cfmin</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;  parameter(                                                           &amp;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;   cfmin=1.0e-3                                                         &amp;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                           <span class="comment">! Used for LS_PPNC  compress.</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;  )</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">!  Define local variables   INTEGER :: i,k,j,it,                                                  &amp;</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                        <span class="comment">! Loop counters: I - horizontal field index;</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">!                                        K - vertical level index.</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;             kp1,                                                       &amp;                        <span class="comment">! Index of level above: k=k+1, apart from                         ! when k=_dims%end when kp1=k.</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;             n          <span class="comment">! &quot;nval&quot; for WHEN routine.</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;  <span class="keywordtype">REAL</span> :: work</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                      <span class="comment">! work variable</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;  <span class="keywordtype">LOGICAL</span> :: l_3ddiag <span class="comment">! Flag to determine if we want 3d diagnostics   REAL :: one_over_niter_bs  ! 1./niter_bs</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">!  Variables for Dr Hook:</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LS_PPN&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;  error=0</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">! Determine if we want 3d diagnosics</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;  l_3ddiag = (lspice_dim1  ==  (qdims%i_end - qdims%i_start + 1)  .AND. &amp;     lspice_dim2  ==  (qdims%j_end - qdims%j_start + 1)  .AND.          &amp;     lspice_dim3  ==  ( qdims%k_end ) )</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;-<span class="comment">! If multiple iterations is not selected, then ensure the number</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment">! of all iterations is always exactly 1.</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;-</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;  <span class="keywordflow">IF</span> ( .NOT. <a class="code" href="namespacemphys__inputs__mod.xhtml#a8127fbd65ca93b0d6d08033f505bd60f" title="=========================================================================== LOGICAL options set from ...">l_mcr_iter</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <a class="code" href="namespacemphys__inputs__mod.xhtml#a662842094edbec74a0ed94931a48d5ef" title="=========================================================================== INTEGER options set from ...">lsiter</a>   = 1</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <a class="code" href="namespacemphys__inputs__mod.xhtml#a1655065299c01c0150b23466da9ba4e4">niter_bs</a> = 1</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;-</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment">! Define CX and CONSTP values</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__constants__mod.xhtml#ae967b3818286dab42f1363ebc505b4e7">l_calc_mp_const</a> .OR. m_ci /= <a class="code" href="namespacemphys__constants__mod.xhtml#ad8a32b2db63522b5669f36771670e377">m_ci_sav</a>) <span class="keywordflow">THEN</span> </div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="comment">! If the microphysics constants are not set we can compute them</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="comment">! and save to a module. However, if m_ci (random parameters)    ! changes some constants will change with it, so we</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="comment">! need to recompute the constants in this case. Continuation</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="comment">! runs (e.g. climate) will also need to recalculate the constants.</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacelspcon__mod.xhtml#a6eb591356273e5b4d14212ef85fa6bd7">lspcon</a>( m_ci )</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160; </div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="comment">! ! Calculate the (non-hydrostatic) layer thicknesses (deltaz) and air</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">! densities multiplied by deltaz (rhodz_moist and rhodz_dry).</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment">! ! We should note that this formulation, although better than the</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">! hydrostatic formulation, is still not entirely conservative. To ensure</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">! conservation we would need to rewrite the large-scale precipitation</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">! scheme to consider masses in terms of rho&lt;q&gt;, and</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">! not the current &lt;rho&gt;q formulation.</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment">! We only need to calculate averages for the moist levels</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="comment">!$OMP  PARALLEL DO SCHEDULE(STATIC) DEFAULT(SHARED) PRIVATE(i,j,k,      &amp;</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment">!$OMP&amp; q_total,rho1,rho2)</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;  <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, qdims%k_end</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a> = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;      <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;              <span class="comment">! Calculate densities at the boundaries of the layer</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;              <span class="comment">! by removing the r**2 term from rho_r2.</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;              <span class="comment">! Rho1 is the density at the lower boundary.</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        rho1(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)= rho_r2(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)/( <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) *                &amp;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                               <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) )</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;              <span class="comment">! Check whether there is a rho level above the current</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;              <span class="comment">! moist level.</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <span class="keywordflow">IF</span> ( <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>  &lt;   tdims%k_end ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                <span class="comment">! Rho2 is the density at the upper boundary.</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;          rho2(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)= rho_r2(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1)/( <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1) *          &amp;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                                 <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1) )</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                <span class="comment">! Calculate the average value of rho across the layer</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                <span class="comment">! multiplied by the layer thickness and the layer</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                <span class="comment">! thickness.</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;          rhodz_moist(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =                                          &amp;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                        rho2(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) * ( <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) -           &amp;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                                           <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) )        &amp;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                     +  rho1(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) * ( <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1) -           &amp;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                                      <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) )</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;          deltaz(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1)                         &amp;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                            - <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>  ==  1) <span class="keywordflow">THEN</span>             <span class="comment">! For the lowest layer we need to extend the lower</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            <span class="comment">! boundary from the first rho level to the surface.</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            <span class="comment">! The surface is the 0&#39;th theta level.</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            deltaz(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,1) = <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,2)                         &amp;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                              - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,0)</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            rhodz_moist(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,1) = rhodz_moist(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,1)*deltaz(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,1)       &amp;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                     / (<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,2)-<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,1))</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="keywordflow">          END IF</span>  <span class="comment">! k  ==  1</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;          <span class="comment">! For a top layer higher than the highest rho level</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;          <span class="comment">! we can calculate a pseudo rho level. We will assume</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;          <span class="comment">! it has a similar density to the rho level below</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;          <span class="comment">! and that the intervening theta level is in the centre</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;          <span class="comment">! of the layer.</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;          deltaz(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 2.0*(<a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                    &amp;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                                -<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;          rhodz_moist(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = rho1(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) * deltaz(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="keywordflow">        END IF</span>  <span class="comment">! k  &lt;   tdims%k_end</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        <span class="comment">! Calculate total moisture</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        q_total(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = q(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + qcl(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + qcf(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a1e977cd2bfc88d00f67153d185e877f8">l_mcr_qcf2</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;          q_total(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = q_total(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) + qcf2(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="keywordflow">        END IF</span>  <span class="comment">! l_mcr_qcf2</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                 <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#ad580b93fb6223c38181f3f05d1b82c62">l_mcr_qrain</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;          q_total(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = q_total(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) + qrain(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="keywordflow">        END IF</span>  <span class="comment">! l_mcr_qrain</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a3d970e6ae2e572f69c0d3cea5b5247ce">l_mcr_qgraup</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;          q_total(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = q_total(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) + qgraup(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="keywordflow">        END IF</span>  <span class="comment">! l_mcr_qgraup</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        <span class="comment">! Rho_r2 uses the moist density of air. If the mixing</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        <span class="comment">! ratio framework is in place then we need to also know</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="comment">! the dry density of air.</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a5e102a877cce4f02fad05c876cd2abad">l_mr_physics1</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;          rhodz_dry(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = rhodz_moist(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                         &amp;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;               / (1.0 + q_total(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>))</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;          rhodz_dry(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = rhodz_moist(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                         &amp;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;               * (1.0 - q_total(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>))<span class="keywordflow">        END IF</span>  <span class="comment">! l_mr_physics1</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="keywordflow">      END DO</span>  <span class="comment">! i</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="keywordflow">    END DO</span>  <span class="comment">! j</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="keywordflow">  END DO</span>  <span class="comment">! k</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment">!$OMP END PARALLEL DO</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;-<span class="comment">! Calculation of cloud droplet number. This is now calculated</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment">! here for all models and not in lsp_autoc as was done in</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="comment">! older versions of the Unified Model</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;-</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacelsp__taper__ndrop__mod.xhtml#a8c8602a4f3502703bda7d097ca25851f">lsp_taper_ndrop</a>(                                               &amp;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                   <span class="comment">! (Full) Aerosol tracers</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                            so4_ait, so4_acc, so4_dis, sea_salt_film,   &amp;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                            biogenic, sea_salt_jet, bmass_agd,          &amp;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                            bmass_cld, ocff_agd, ocff_cld,              &amp;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                            nitr_acc, nitr_diss, arcl,                  &amp;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                   <span class="comment">! Murk aerosol</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                            aerosol,                                    &amp;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                   <span class="comment">! CDNC from UKCA                            ukca_cdnc,                                  &amp;</span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                            cdnc_dim1, cdnc_dim2, cdnc_dim3,            &amp;                   <span class="comment">! Other parameters</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                            rhodz_dry,  rhodz_moist,                    &amp;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                            deltaz,                                     &amp;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                            snow_depth, land_fract,                     &amp;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                   <span class="comment">! Output parameters</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                            n_drop_tpr                                  &amp;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                                 )</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="comment">!  2. Loop round levels from top down (counting bottom level as level 1,</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="comment">!     as is standard in the Unified model).</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="comment">! Setup for iterative metlting</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="comment">! Define constants outside of K loop</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;      <span class="comment">! calculate level independent eta value</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;      <span class="comment">! iter_z is theta_height for level 13 in 38 level set.</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;      <span class="comment">! hence is now independent of number of levels</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;  iter_eta = <a class="code" href="namespacemphys__constants__mod.xhtml#afb34a2820778a75a5deaf02ffd3334de" title="Iterations of microphysics. ">iter_z</a> / <a class="code" href="namespacemphys__bypass__mod.xhtml#a137aaa861391130f8b2d58fa6d529e80">mphys_mod_top</a></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment">! Internal structure. ! 2a. Initialise outside of iterative loop.  lsrain_mean=0.0  lssnow_mean=0.0  lsrain3d=0.0  lssnow3d=0.0  rainfrac3d=0.0</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;  one_over_niter_bs=1.0/<a class="code" href="namespacemphys__inputs__mod.xhtml#a1655065299c01c0150b23466da9ba4e4">niter_bs</a></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;  <span class="keywordflow">DO</span> it = 1, <a class="code" href="namespacemphys__inputs__mod.xhtml#a1655065299c01c0150b23466da9ba4e4">niter_bs</a> <span class="comment">! Substep outside of column</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment">!  Internal structure - moved inside BS iter loop</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="comment">!  2.b Initialise rain and snow to zero.</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="comment">!   Initialise scavenged amounts of S Cycle tracers to 0 for full field</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;  <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a> = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;      lsrain(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=0.0</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;      lssnow(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=0.0</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;      lssnow2(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=0.0</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;      lsgraup(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=0.0</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;      droplet_flux(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=0.0</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;      cttemp(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=0.0</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;      rainfrac(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=0.0</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;      frac_ice_above(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=0.0</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;      vfall(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=0.0</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;      vfall2(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=0.0</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;      vfall_rain(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=0.0</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;      vfall_graup(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)=0.0</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! Loop over points,i</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">! Loop over points,j</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="comment">! Initialise n_drop_3d to zero before passing down code tree</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;  n_drop_3d(:,:,:) = 0.0</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;  <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = qdims%k_end, 1, -1</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="comment">! kp1 is index of model level above, unless we are the model     ! top in which case it is set to k. Used to calc vertical wind shear.    IF (k == qdims%k_end) THEN      kp1=k    ELSE      kp1=k+1    END IF</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a4a81ea38c795301880efde5986e0a52d" title="Use iterative melting. ">l_it_melting</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                     <span class="comment">!      Calculate the number of fall and melting iterations</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                        <span class="comment">!Version to remove dependency on bl_levels</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespacelevel__heights__mod.xhtml#a47255d1b34083d1a399f41be0d9f703e" title="This module is used to hold levels values set in atmos_init. ">eta_theta_levels</a>(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) /= 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                 <span class="comment">! We&#39;re not right at the surface, so can</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                 <span class="comment">! calculate the number of iterations based</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                 <span class="comment">! on eta value.</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        eta_ratio1 =                                                    &amp;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;              int( (iter_eta / <a class="code" href="namespacelevel__heights__mod.xhtml#a47255d1b34083d1a399f41be0d9f703e" title="This module is used to hold levels values set in atmos_init. ">eta_theta_levels</a>(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) ) )+ 1</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                    <span class="comment">! was eta_theta_levels_tmp(k+1)</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        n_iterations = min(eta_ratio1, <a class="code" href="namespacemphys__constants__mod.xhtml#aff9ecdc267d7e560c532cafea0fb1d54" title="Corresponds to level 13 in 38 level data set (Change added for move to 70 levels) ...">max_it_mlt</a>)</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                 <span class="comment">! eta_theta_levels = 0.0</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                 <span class="comment">! need to avoid divide by 0.0 error</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                 <span class="comment">! at this level, however, iterations should always</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                 <span class="comment">! be the maximum number, so we can just set this.</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;        n_iterations = <a class="code" href="namespacemphys__constants__mod.xhtml#aff9ecdc267d7e560c532cafea0fb1d54" title="Corresponds to level 13 in 38 level data set (Change added for move to 70 levels) ...">max_it_mlt</a></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! eta_theta_levels &gt; 0</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    <span class="keywordflow">ELSE</span>     <span class="comment">! Do not use iterative melting</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;      n_iterations = 1</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="keywordflow">    END IF</span>  <span class="comment">! l_it_melting</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    n=0</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a> = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;      <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="comment">!  2.5 Form INDEX IX to gather/scatter variables in LS_PPNC</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="comment">!  Set index where cloud fraction &gt; CFMIN or where non-zero pptn</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="comment">!  Note: whenimd is functionally equivalent to WHENILE (but autotasks).</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        layer_thickness(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) =                                          &amp;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;         p_layer_boundaries(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - p_layer_boundaries(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1)</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;            <span class="comment">! Set up IF statement to determine whether to call the</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;            <span class="comment">! microphysics code for this grid box (i.e. if there is</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;            <span class="comment">! already condensate in the grid box or there is</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;            <span class="comment">! precipitation about to fall into the grid box)</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        work = qcf(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;            <span class="comment">! Include extra microphysics variables if in use</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a1e977cd2bfc88d00f67153d185e877f8">l_mcr_qcf2</a> )  work = work + qcf2(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + lssnow2(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#ad580b93fb6223c38181f3f05d1b82c62">l_mcr_qrain</a>)  work = work + qrain(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a3d970e6ae2e572f69c0d3cea5b5247ce">l_mcr_qgraup</a>) work = work + qgraup(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)+lsgraup(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;        work = work + droplet_flux(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)   <span class="comment">! droplet settling</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;        <span class="keywordflow">IF</span> (cfl(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &gt; cfmin .OR.                                     &amp;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;           (lsrain(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)+lssnow(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)) &gt; 0.0 .OR. work &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;              <span class="comment">! include this grid box.</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;              <span class="comment">! Strictly speaking the CFL &gt; CFMIN clause is too</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;              <span class="comment">! restrictive since ice nucleation does not require</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;              <span class="comment">! liquid water, but the code would be very messy.</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;          n = n + 1</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;          ix(n,1) = i</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;          ix(n,2) = <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;              <span class="comment">! Note that mphys is done on this point if diagnostic is</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;              <span class="comment">! requested</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__diags__mod.xhtml#a1cbe7fb5cd335e3f6890f7ac93e24d65">l_point_diag</a>) <a class="code" href="namespacemphys__diags__mod.xhtml#af0b48556db2bc3f42bbafb2a37b280e8">mphys_pts</a>(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = .true.</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="comment">! set up rain fraction</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#ad580b93fb6223c38181f3f05d1b82c62">l_mcr_qrain</a> .AND. <a class="code" href="namespacemphys__inputs__mod.xhtml#a92240689885adf9ac77eaf71b5171465" title="Use improved warm rain microphysics scheme. ">l_warm_new</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;          <span class="keywordflow">IF</span> (rainfrac(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) == 0.0 .AND. qrain(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="comment">! if cloud is present, assume this is a good proxy for the rain frac</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;            rainfrac(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = maxval(cf(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>:qdims%k_end))</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;          <span class="keywordflow">IF</span> (rainfrac(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) == 0.0 .AND. qrain(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="comment">! otherwise set to 0.5</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;            rainfrac(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = 0.5</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="comment">! set a lower limit for stability          ELSE IF (rainfrac(i,j) &lt;= 0.01 .AND. qrain(i,j,k) &gt; 0.0) THEN            rainfrac(i,j) = 0.01          END IF</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! Loop over points,i    END DO ! Loop over points,j</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    <span class="keywordflow">IF</span> (n &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacels__ppnc__mod.xhtml#a739c63dbab5632af7acbf3de0dc7fe9b">ls_ppnc</a>(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>,ix,n,n_iterations,                                 &amp;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;                   lsrain,lssnow,lssnow2,lsgraup,droplet_flux,          &amp;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                   cf(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),cfl(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),cff(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),                     &amp;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                   qcf(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),qcl(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),t(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),                      &amp;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                   qcf2(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),qrain(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),qgraup(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),              &amp;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;                   n_drop_tpr(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>), n_drop_3d(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),                 &amp;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                   aerosol(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>), land_fract,                          &amp;</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;                   q(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>), <a class="code" href="varcld_8h.xhtml#acd7a57e90bb1e737ecae71f1c1830ad6">p_theta_levels</a>(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>), layer_thickness,    &amp;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                   deltaz(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>), rhodz_dry(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>), rhodz_moist(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>), &amp;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                   rhc_row_length, rhc_rows,                            &amp;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                   bland, rhcrit(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),                                &amp;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                   vfall, vfall2, vfall_rain, vfall_graup,              &amp;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;                   frac_ice_above,                                      &amp;                   cttemp, rainfrac, <a class="code" href="namespacemphys__inputs__mod.xhtml#a662842094edbec74a0ed94931a48d5ef" title="=========================================================================== INTEGER options set from ...">lsiter</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#a1655065299c01c0150b23466da9ba4e4">niter_bs</a>,                  &amp;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                   u_on_p(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),   v_on_p(1,1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),                      &amp;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                   u_on_p(1,1,kp1), v_on_p(1,1,kp1), <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>                  &amp;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;                    )</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;<span class="comment">! Copy rainfall and snowfall rates to 3D fields for diagnostic output</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    <span class="keywordflow">IF</span> ( l_3ddiag ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="comment">! Only copy rain and snow to 3D fields if arrays are dimensionalized.</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a> = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;          lsrain3d(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>, <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)   = lsrain3d(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>, <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) +                     &amp;              (lsrain(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) + droplet_flux(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>))*one_over_niter_bs</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;          lssnow3d(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>, <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)   = lssnow3d(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>, <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) +                     &amp;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;             (lssnow(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) + lssnow2(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) + lsgraup(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>))             &amp;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;             *one_over_niter_bs</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;          rainfrac3d(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>, <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = rainfrac3d(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>, <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) +                   &amp;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;             rainfrac(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)*one_over_niter_bs</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">! Loop over K</span></div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;<span class="comment">! If substepping outside of loop over K, then need to accumulate (mean)</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;<span class="comment">! precip rates...</span></div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;  <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a> = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;      lsrain_mean(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = lsrain_mean(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)                             &amp;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;         + (lsrain(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) + droplet_flux(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>))*one_over_niter_bs</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;     <span class="comment">! Add together ice crystals, snow aggregates and graupel</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;<span class="comment">! for surface snow rate (kg/m2/s)</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;      <span class="keywordflow">IF</span> (l_mphys_gr_out) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;          lssnow_mean(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = lssnow_mean(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)                         &amp;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                          + (lssnow(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)  + lssnow2(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)              &amp;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                          + lsgraup(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)) * one_over_niter_bs</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a1e977cd2bfc88d00f67153d185e877f8">l_mcr_qcf2</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;          lssnow_mean(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = lssnow_mean(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)                         &amp;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                            + (lssnow(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)  + lssnow2(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)            &amp;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                            + lsgraup(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)) * one_over_niter_bs</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;        <span class="keywordflow">ELSE</span> <span class="comment">! l_mcr_qcf2</span></div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;          lssnow_mean(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = lssnow_mean(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)                         &amp;</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                            + ( lssnow(i, <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) ) * one_over_niter_bs</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! l_mcr_qcf2</span></div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! l_mphys_gr_out</span></div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! qdims&amp;i</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">! qdims%j</span></div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">! Outer substepping loop over it</span></div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;<span class="comment">! Recover meaned precip rates</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a> = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;      <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;        lssnow(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = lssnow_mean(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;        lsrain(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>) = lsrain_mean(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>)</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LS_PPN&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespacels__ppn__mod.xhtml#a04a50a9f284f7ebb1acbb206ac81cdb9">ls_ppn</a></div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacels__ppn__mod.xhtml" title="SUBROUTINES LS_PPN and LS_PPNC SUBROUTINES LS_PPN and LS_PPNC Purpose: LS_PPN and LS_PPNC: Calculate ...">ls_ppn_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
