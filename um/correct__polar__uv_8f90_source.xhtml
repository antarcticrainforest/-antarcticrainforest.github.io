<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/coupling/correct_polar_uv.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_ae9187a779f8f5f7681b102cffaf7bb8.xhtml">coupling</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">correct_polar_uv.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="correct__polar__uv_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#if defined(OASIS3)</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="correct__polar__uv_8f90.xhtml#a4faa8855a0ba2f378183d0432d759c89" title="*****************************COPYRIGHT**************************************** For further details pl...">correct_polar_uv</a>(               &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;   delta_lambda, global_row_length,        &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;   ocn_uv_in, ocn_uv_out,                  &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;   oasis_jmt_in, oasis_jmt_out)</div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="correct__polar__uv_8f90.xhtml#a4faa8855a0ba2f378183d0432d759c89">   10</a></span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecontrol__max__sizes.xhtml" title="This file belongs in section: Misc. ">control_max_sizes</a></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceoasis__atm__data__mod.xhtml" title="*****************************COPYRIGHT**************************************** **********************...">oasis_atm_data_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a31342c762b2b314484e4e8bfc00cd93c">oasis_imt</a></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacetrignometric__mod.xhtml" title="Constants necessary for Coriolis terms in advection scheme. Constants necessary for Coriolis terms in...">trignometric_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacetrignometric__mod.xhtml#a1900988e9b6a5b36d6a0652ad8784518">sin_theta_longitude</a>,  &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;                              <a class="code" href="namespacetrignometric__mod.xhtml#a565df059154bacb783d466016f551879">cos_theta_longitude</a>,  &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                              <a class="code" href="namespacetrignometric__mod.xhtml#a7093d9186036ccde4fb6d2419edb08de">sin_u_longitude</a>,      &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                              <a class="code" href="namespacetrignometric__mod.xhtml#a9615d398c96f2ee35e27f36b863dd5ce">cos_u_longitude</a>        implicit none</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="comment">! Description:</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="comment">! Calculate consistent values for polar row velocities (these may be</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="comment">! U or V depending on grid type) based on velocity pair values</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="comment">! half a grid point below the polar row. E.g calculate U at pole</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="comment">! based on the northeren-most row of V data (which is offset half a grid</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="comment">! point to the south in ND.)  ! Alternatively calculate V at pole based on the northeren-most row of  ! U data (which is offset half a grid point to the south in ENDGAME or  ! V at Poles.)  ! This process is necessaryto ensure menaingful polar values in coupled</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="comment">! fields which otherwise tend to contain junk as a result of SCRIP/OASIS</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="comment">! regridding failing to deal effectively with values on the polar  ! singularity.</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="comment">! This routine only needs to deal with the North Pole since the South pole</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="comment">! plays no part of ocean-atmos coupling.    !</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="comment">! This file belongs in section: Coupling</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="comment">!=======================================================================</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="comment">!     Subroutine arguments</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: delta_lambda <span class="comment">! longitude per grid box</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: global_row_length</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: oasis_jmt_in   <span class="comment">! Size of incoming velocity array</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: oasis_jmt_out  <span class="comment">! Aize of outgoing velocity array,</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                            <span class="comment">! typically oasis_jmt_in+1 because it covers the                            ! N pole.</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: ocn_uv_in(<a class="code" href="namespaceoasis__atm__data__mod.xhtml#a31342c762b2b314484e4e8bfc00cd93c">oasis_imt</a>,oasis_jmt_in)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: ocn_uv_out(<a class="code" href="namespaceoasis__atm__data__mod.xhtml#a31342c762b2b314484e4e8bfc00cd93c">oasis_imt</a>,oasis_jmt_out)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="comment">!     Local variables</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordtype">INTEGER</span> :: i, gi, levs   <span class="comment">! Loop counters/indices</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordtype">INTEGER</span> :: halo_none     <span class="comment">! Size of mpp halo (always zero)</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keywordtype">REAL</span> :: mag_vector_np(1),                                &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;          dir_vector_np(1),                                &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;          mag_vector_sp(1),                                &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;          dir_vector_sp(1)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">REAL</span> :: posneg           <span class="comment">! +/-1 depending on whether we are calculating</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                           <span class="comment">! U based on V values or V based on U values.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: aicenmin</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="comment">! Initialise potential incoming fields</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CORRECT_POLAR_UV&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="comment">! First compute total V component (ND) or U component (EG).  ! Note the fields we are dealing with here are those returned from  ! the coupler - i.e. they do not contain halos, so we must indicate  ! this accordingly in the following subroutine calls.  ! We also need to ensure that the dimensions supplied for the  ! input array are similarly devoid of halos.  </span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="comment">! We only deal with a single vertical level in surface coupling  ! fields, hence the following.</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  levs=1</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  halo_none=0</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordflow">IF</span> (glsize(2,fld_type_u) &gt; glsize(2,fld_type_v)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;     <span class="comment">! If we have more U rows than V rows then we have U points at the N pole</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;     <span class="comment">! i.e. we&#39;re using ND and consequently need to calculate U values based     ! on V (half a row below the pole.) Note, therefore, the use of     ! longitudes at V points in the following.</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;     posneg = 1.0</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;     <span class="keyword">CALL </span><a class="code" href="polar__vector__wind__n_8f90.xhtml#ab3d6e08d4d489ae42dd07f5c50859b9f" title="Subroutine Polar_Vector_Wind. ">polar_vector_wind_n</a>(                                            &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                            ocn_uv_in,                                    &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                            <a class="code" href="namespacetrignometric__mod.xhtml#a1900988e9b6a5b36d6a0652ad8784518">sin_theta_longitude</a>,                          &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                            <a class="code" href="namespacetrignometric__mod.xhtml#a565df059154bacb783d466016f551879">cos_theta_longitude</a>, <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a31342c762b2b314484e4e8bfc00cd93c">oasis_imt</a>,               &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                            oasis_jmt_in, levs, mag_vector_np,            &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                            dir_vector_np, mag_vector_sp,                 &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                            dir_vector_sp,                                &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                            halo_none, halo_none, global_row_length ,     &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                            gc_proc_row_group, at_extremity)</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;     <span class="comment">! If we have more V rows than U rows then we have V points at the N pole</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;     <span class="comment">! i.e. we&#39;re using EG and consequently need to calculate V values based     ! on U (half a row below the pole.) Note, therefore, the use of     ! longitudes at U points in the following.</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;     posneg = -1.0</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;     <span class="keyword">CALL </span><a class="code" href="polar__vector__wind__n_8f90.xhtml#ab3d6e08d4d489ae42dd07f5c50859b9f" title="Subroutine Polar_Vector_Wind. ">polar_vector_wind_n</a>(                                            &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                            ocn_uv_in,                                    &amp;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                            <a class="code" href="namespacetrignometric__mod.xhtml#a7093d9186036ccde4fb6d2419edb08de">sin_u_longitude</a>,                              &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                            <a class="code" href="namespacetrignometric__mod.xhtml#a9615d398c96f2ee35e27f36b863dd5ce">cos_u_longitude</a>, <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a31342c762b2b314484e4e8bfc00cd93c">oasis_imt</a>,                   &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                            oasis_jmt_in, levs, mag_vector_np,            &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                            dir_vector_np, mag_vector_sp,                 &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                            dir_vector_sp,                                &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                            halo_none, halo_none, global_row_length ,     &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                            gc_proc_row_group, at_extremity)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordflow">IF</span> (at_extremity(<a class="code" href="namespaceum__parparams.xhtml#a575a86c6ed199d617f169b0bbd20ec88">pnorth</a>) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;     <span class="comment">! We now have a single value of magnitude and direction</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;     <span class="comment">! for cross polar v (or u) from which we can work out the full set of     ! u (or v) vectors along the polar row.     ! Note we only do this for the N pole.       ! Direction at each point is given by:     !       longitude(i)-direction of maximum magnitude     !             (offset horizontally by half a d-lambda due to     !              U/V point staggering)     ! and using a sine (not a cosine), because our reference direction</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;     <span class="comment">! by definition, must be a point where u (or v) = 0 (ignoring the half     ! grid point offset for the moment) because its&#39;s where v=maximum.</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;     <span class="comment">! i.e. V and U maxima are out of phase by 90 degrees. </span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;     <span class="keywordflow">DO</span> i = 1, <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a31342c762b2b314484e4e8bfc00cd93c">oasis_imt</a></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="comment">! Other areas in the UM which use this approach</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="comment">! employ something called &quot;l_datastart&quot; to figure out the        ! local data start position in terms of global indices</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="comment">! which seems to add an unnecessary level of obfuscation.        ! Here we use g_datastart directly!</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        gi = g_datastart(1,mype) + i - 1</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="comment">! As our U (or V) points are positioned half a grid point</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="comment">! to the West of our V (or U) points we subtract half a d-lambda</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="comment">! when calculating the sine of the longitude at the        ! equivalent (i,j) U (or V) point.        ocn_uv_out(i,oasis_jmt_out) = posneg * (mag_vector_np(1) *         &amp;</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                 sin(((gi-.5)*delta_lambda) - dir_vector_np(1)))</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keywordflow">     END DO</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordflow">  END IF</span>  <span class="comment">! at_extremity(PNorth)</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CORRECT_POLAR_UV&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="correct__polar__uv_8f90.xhtml#a4faa8855a0ba2f378183d0432d759c89" title="*****************************COPYRIGHT**************************************** For further details pl...">correct_polar_uv</a></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">#endif</span></div><span class="preprocessor"></span></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
