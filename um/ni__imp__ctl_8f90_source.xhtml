<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/top_level/ni_imp_ctl.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_b65d766d7948d607099cfdc8ce198b76.xhtml">top_level</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ni_imp_ctl.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ni__imp__ctl_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">! code description:</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="ni__imp__ctl_8f90.xhtml#a9d192b5c45d7330f88208ed64fe4d6b4" title="Subroutine NI_imp_ctl Subroutine NI_imp_ctl  ">ni_imp_ctl</a> (                                                 &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;!&gt; IN model dimensions.</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  rhc_row_length, rhc_rows, land_points,                                &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  ntiles, bl_levels, dst_levels,                                        &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  dsm_levels, cloud_levels, n_cca_levels, nice, nice_use,               &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;!&gt; IN Model switches</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  numcycles, cycleno, lq_mix_bl, l_use_cariolle,                        &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;!&gt; IN model Parameters</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  rhcrit, tr_vars, co2_mmr,                                             &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;!&gt; IN coordinate information</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  delta_lambda, delta_phi,                                              &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;!&gt; IN trig arrays</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  sin_theta_longitude, cos_theta_longitude, fv_cos_theta_latitude,      &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  f3_at_u,                                                              &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;!&gt; IN data fields.</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  p_layer_centres, p_layer_boundaries, rho, rho_wet_theta,              &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  u, v, w,                                                              &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  land_sea_mask, q, qcl, qcf, p_star, theta, exner_theta_levels,        &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;!&gt; IN ancillary fields and fields needed to be kept from tstep to tstep</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  sil_orog_land, ho2r2_orog,                                            &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  ice_fract, di_ncat, ice_fract_ncat, k_sice, u_0, v_0,land_index,      &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  cca, lcbase, ccb0, cct0, surf_radflux,                                &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  ls_rain, ls_snow, conv_rain, conv_snow, l_scrn, l_plsp,               &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;!&gt; IN variables required from BDY_LAYR in IMP_SOLVER</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  alpha1_sice, ashtf, bq_gb, bt_gb, dtrdz_charney_grid,                 &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  rdz_charney_grid, dtrdz_u, dtrdz_v, rdz_u, rdz_v,                     &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  cdr10m_u, cdr10m_v, z1_tq, uStarGBM, rhokm_u,rhokm_v,                 &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;!&gt; IN diagnostics (started or from) <a class="code" href="bdy__layr_8f90.xhtml#af7679ff7941f4d90c6fcfd7f286c0a43" title="SUBROUTINE BDY_LAYR- SUBROUTINE BDY_LAYR- Purpose: Calculate turbulent fluxes of heat, moisture and momentum between (a) surface and atmosphere, (b) atmospheric levels within the boundary layer, and/or the effects of these fluxes on the primary model variables. The flux of heat into and through the soil is also modelled. Numerous related diagnostics are also calculated. ">bdy_layr</a></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  rib_gb, zlcl, zht, dzh, zh,                                           &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  bl_type_1,bl_type_2,bl_type_3,bl_type_4,bl_type_5,bl_type_6,          &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  bl_type_7, z0m_gb, z0m_eff_gb, z0h_eff_gb, fme,                       &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  ntml, cumulus, l_pc2_diag_sh_pts,                                     &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  l_flux_bc,                                                            &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  rho_aresist,aresist,resist_b,r_b_dust,                                &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  kent, we_lim, t_frac, zrzi,                                           &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  kent_dsc, we_lim_dsc, t_frac_dsc, zrzi_dsc,                           &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  zhsc,z_half,dust_flux,dust_emiss_frac,                                &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  u_s_t_tile,u_s_t_dry_tile,u_s_std_tile,                               &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  tile_pts,tile_index,tile_frac,canopy,                                 &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  alpha1,fraca,rhokh_tile,smc,chr1p5m,resfs,z0hssi,z0mssi,              &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  canhc_tile,flake,wt_ext_tile,lw_down,lai_ft,canht_ft,                 &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  sw_tile,ashtf_tile,gc,aresist_tile,resist_b_tile,                     &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  resft,rhokh_sice, z0h_tile,z0m_tile,chr1p5m_sice,                     &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  fland,flandg,flandg_u,flandg_v,tstar_sea,vshr_land,vshr_ssi,          &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  emis_tile, t_soil, snow_tile, rib_ssi,                                &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  gs,gpp,npp,resp_p,gpp_ft,npp_ft,resp_p_ft,resp_s,                     &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  resp_s_tot,cs,                                                        &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  rib_tile,fsmc,catch,g_leaf,                                           &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  co2_emits, co2flux,                                                   &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  wt_ext,ra,                                                            &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">#include &quot;argsts.h&quot;</span></div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="ni__imp__ctl_8f90.xhtml#a9d192b5c45d7330f88208ed64fe4d6b4">   72</a></span>&#160;<span class="preprocessor"></span> stashwork3, stashwork9,                                                &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  nscmdpkgs, l_scmdiags, bl_diag,                                       &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  tscrndcl_ssi, tscrndcl_tile, tstbtrans,                               &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  cca0,ccw0,cca0_2d, fqt, ftl, taux, tauy, rhokh,                       &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  fqt_ice,ftl_ice,dtstar_tile,dtstar, ti,                               &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  area_cloud_fraction, bulk_cloud_fraction,                             &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  t_latest, q_latest, qcl_latest, qcf_latest,                           &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  cf_latest, cfl_latest, cff_latest,                                    &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  r_u, r_v, r_w, cloud_fraction_liquid, cloud_fraction_frozen,          &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  sum_eng_fluxes,sum_moist_flux,rhcpt,                                  &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  aerosol, free_tracers,                                                &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  dust_div1,dust_div2,dust_div3,dust_div4,dust_div5,dust_div6,          &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  drydep2, so2, dms, so4_aitken, so4_accu, so4_diss, nh3,               &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  soot_new, soot_aged, soot_cld, bmass_new, bmass_agd,                  &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  bmass_cld, ocff_new, ocff_aged, ocff_cld, nitr_acc, nitr_diss,        &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  co2, ozone_tracer,                                                    &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  tstar_tile,fqt_tile,epot_tile,ftl_tile,                               &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  radnet_sice,olr, tstar_sice_cat,tstar_ssi,                            &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  taux_land,taux_ssi,tauy_land,tauy_ssi,error_code,                     &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  surf_ht_flux_land, snomlt_surf_htf, ch_term,                          &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  t_surf, ti_gb, ext, snowmelt, tstar_land,tstar_sice, ei_tile,         &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  ecan_tile,melt_tile, surf_htf_tile                                    &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  )</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacedynamics__grid__mod.xhtml" title="Input control for dynamics. Input control for dynamics. ">dynamics_grid_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceproc__info__mod.xhtml" title="Processor parallel properties and pointers. Processor parallel properties and pointers. ">proc_info_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>, <a class="code" href="namespaceproc__info__mod.xhtml#a9d5aa0d84f9ab4d047647a65804a8650">model_domain</a></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordtype">USE </span>nstypes<span class="keywordtype">, ONLY</span>: ntype, npft</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceatm__step__local.xhtml" title="Declares variables and allocatable arrays which are local to atm_step!&gt; (and below) ...">atm_step_local</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceatm__step__local.xhtml#acc69694f1f2bbeecdbf17757ca10e303">dim_cs1</a>, <a class="code" href="namespaceatm__step__local.xhtml#afb2f57aeece69e9a6be83f45ab953a3d">dim_cs2</a></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">, ONLY</span>:                                      &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;   udims, udims_s, udims_l, vdims, vdims_s, vdims_l,                    &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;   tdims, tdims_s, tdims_l, qdims, qdims_s, qdims_l,                    &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;   pdims, pdims_s, pdims_l, wdims, wdims_s, trdims_ltl</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g, earth_radius, two_omega</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: cp, r, repsilon</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: lc</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecv__run__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_run_mod</a><span class="keywordtype">, ONLY</span>:                                                 &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <a class="code" href="namespacecv__run__mod.xhtml#ad9fc9a06c049ee7180700c302282c716">tice</a>, rad_cloud_decay_opt, <a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a>, <a class="code" href="namespacecv__run__mod.xhtml#af3aff8585bb16fdc7cddc62da16fd0d7">l_3d_cca</a>, <a class="code" href="namespacecv__run__mod.xhtml#a7c5e9f2b1af9e229ed225af8fc6f7112">l_pc2_diag_sh</a></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacedynamics__input__mod.xhtml" title="Input control for dynamics. Input control for dynamics. ">dynamics_input_mod</a><span class="keywordtype">, ONLY</span>:                                         &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <a class="code" href="namespacedynamics__input__mod.xhtml#a7c6b718ea6d9c2ebe60128c60caab726">l_check_moist_inc</a></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecv__param__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_param_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecv__param__mod.xhtml#a5428bfc5134cfe05ce46bfefb1d6edb3">rad_decay_off</a></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecloud__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cloud_inputs_mod</a><span class="keywordtype">, ONLY</span>:                                           &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <a class="code" href="namespacecloud__inputs__mod.xhtml#a8d957eb7dd8afa520bd3a74c21609daa">l_fixbug_pc2_mixph</a>, <a class="code" href="namespacecloud__inputs__mod.xhtml#a79cb0747bc150aa7b8f838bc144a554d">forced_cu</a>, <a class="code" href="namespacecloud__inputs__mod.xhtml#af2526dc522554e1852d2b801552264d8">l_cld_area</a>, <a class="code" href="namespacecloud__inputs__mod.xhtml#a0beb50d23fbd057bc3ebb23973490bbf">l_acf_cusack</a>,          &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <a class="code" href="namespacecloud__inputs__mod.xhtml#a6c812fb3aac239f0dedbc794d787ae46">l_acf_brooks</a>, <a class="code" href="namespacecloud__inputs__mod.xhtml#a7c7136e2f41b93943e9467178bde33a9">l_rhcpt</a>, <a class="code" href="namespacecloud__inputs__mod.xhtml#ae04fb44426849e3f308912a8311bb53b">l_pc2</a></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacebl__option__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">bl_option_mod</a><span class="keywordtype">, ONLY</span>:                                              &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <a class="code" href="namespacebl__option__mod.xhtml#afbf42f288e9aea3bc5b38c397c92221b">fric_heating</a>, <a class="code" href="namespacebl__option__mod.xhtml#a4d4d768b22319d5970e78429dc03f23b">alpha_cd</a>,<a class="code" href="namespacebl__option__mod.xhtml#a476b6aea35f949fad832420cd8fbb3de">trweights1</a>, <a class="code" href="namespacebl__option__mod.xhtml#a0104ca19d099164084f92fc37a2e1ddc">l_use_bl_diag_term</a>, <a class="code" href="namespacebl__option__mod.xhtml#ac0a3cc253b58569885342a82d27e98e9">on</a>, <a class="code" href="namespacebl__option__mod.xhtml#a86e9bc58fc73bfa0e100aaf8b753c84e" title="Declarations: ">off</a></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keywordtype">USE </span>bl_diags_mod<span class="keywordtype">, ONLY</span>: strnewbldiag</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceeng__corr__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">eng_corr_inputs_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceeng__corr__inputs__mod.xhtml#afa85786376e90acd7e63aafb5fda1028" title="=========================================================================== LOGICAL options set from ...">l_emcorr</a></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacedynamics__testing__mod.xhtml" title="Input control for dynamics. Input control for dynamics. ">dynamics_testing_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacedynamics__testing__mod.xhtml#a6d813b288fa2670aa64d35f1f00348db">l_dry</a></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemurk__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">murk_inputs_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemurk__inputs__mod.xhtml#a86d12abdf2733c53d3b7b8c6a2edbde4" title="=========================================================================== LOGICAL options set from ...">l_murk</a></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceum__input__control__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">um_input_control_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceum__input__control__mod.xhtml#a0bd0498aa08dacb21be20b0c5df315a0">l_bl_tracer_mix</a>, <a class="code" href="namespaceum__input__control__mod.xhtml#afcfb603e4c2bcc2bf5d129963425fbbb">l_co2_interactive</a></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacerun__aerosol__mod.xhtml" title="A module containing tunable parameters and dependent logicals!&gt; used in the aerosol scheme...">run_aerosol_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacerun__aerosol__mod.xhtml#a2a0e2fefafaaa254aac4cf8cd4a291e1" title="Control logicals for Classic aerosol options ">l_sulpc_so2</a>,                               &amp;      <a class="code" href="namespacerun__aerosol__mod.xhtml#a49e39d25a38244027b312e0298566110" title="Soot scheme. ">l_soot</a>, <a class="code" href="namespacerun__aerosol__mod.xhtml#ab289e7ad790cc1441c12d9265336b626" title="Biomass scheme. ">l_biomass</a>, <a class="code" href="namespacerun__aerosol__mod.xhtml#a08c24874ad5cdfed2445a206552c249d" title="OCFF (Organic Carbon from Fossil Fuels) scheme. ">l_ocff</a>, <a class="code" href="namespacerun__aerosol__mod.xhtml#a66e1005b9ceceb05bcd815d826b99c24" title="Ammonium nitrate aerosol. ">l_nitrate</a></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceswapable__field__mod.xhtml" title="This file belongs in section: MPP. ">swapable_field_mod</a><span class="keywordtype">, ONLY</span> :                                        &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      <a class="code" href="structswapable__field__mod_1_1swapable__field__pointer__type.xhtml">swapable_field_pointer_type</a></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordtype">USE </span>switches<span class="keywordtype">, ONLY</span>: iscrntdiag</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacedust__parameters__mod.xhtml" title="A module containing constants/parameters used in the dust scheme. ">dust_parameters_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacedust__parameters__mod.xhtml#acd60b6ea942dd71f3d3f244e09990bf7" title="Number of discrete particle size divisions (bins) ">ndiv</a>, <a class="code" href="namespacedust__parameters__mod.xhtml#a240a7a2c93599e6a4403dc9f84e01947">ndivh</a>, <a class="code" href="namespacedust__parameters__mod.xhtml#a8327d8f2d78c6d8e99e46db681161e56" title="Physical properties of the dust. ">rhop</a>, <a class="code" href="namespacedust__parameters__mod.xhtml#a099a3d7d36bee342be39830e047ff4b0">drep</a>,               &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      l_twobin_dust, <a class="code" href="namespacedust__parameters__mod.xhtml#ac897534dc97f74f123a81079a464283b" title="Parameters fundamental to the dust scheme!&gt; (Details of dust properties/size divisions etc...">l_dust</a></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacepc2__constants__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">pc2_constants_mod</a><span class="keywordtype">,   ONLY</span>: ls_bl0</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacetimestep__mod.xhtml" title="Timestepping values. Timestepping values. ">timestep_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacetimestep__mod.xhtml#af5057870e73925950dded81acfffb0d6">timestep</a></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacelevel__heights__mod.xhtml" title="Constants necessary for model level heights in advection and other schemes. Constants necessary for m...">level_heights_mod</a><span class="keywordtype">, ONLY</span>:                                          &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceturb__diff__mod.xhtml" title="Declares variables for turbulent diffusion input. ">turb_diff_mod</a><span class="keywordtype">, ONLY</span>:                                              &amp;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <a class="code" href="namespaceturb__diff__mod.xhtml#a0ae64159bea8aff378de3c4e2d6bc0ce">l_subfilter_vert</a>, <a class="code" href="namespaceturb__diff__mod.xhtml#a9ab4e3c30f160039ea6bf8dd23590e6d">l_subfilter_horiz</a></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacerad__pcf.xhtml" title="Radiation Program Configuration File. ">rad_pcf</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacerad__pcf.xhtml#aa6bb2ded6902baf3dc05462648abb51e">ip_cloud_mix_max</a></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacesubmodel__mod.xhtml#a632aec067eb5d42141b256110bc535e6">n_internal_model</a></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacefield__types.xhtml">field_types</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceum__parparams.xhtml" title="This file belongs in section: MPP. ">um_parparams</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceum__parparams.xhtml#a575a86c6ed199d617f169b0bbd20ec88">pnorth</a>, <a class="code" href="namespaceum__parparams.xhtml#a055cccbf23dd97e54f86b7be2fbfccb3">psouth</a>, mt_global</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceu__to__p__mod.xhtml" title="subroutine U_TO_p for calculating variables held at u points subroutine U_TO_p for calculating variab...">u_to_p_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceu__to__p__mod.xhtml#abec25da0a0e72ae2bd1efd5a110125fb">u_to_p</a></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordtype">USE </span>tr_mix_mod<span class="keywordtype">, ONLY</span>: <a class="code" href="tr__mix_8f90.xhtml#a46b8187d395ca81bf4ff84e34cf7173c">tr_mix</a></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacetypstsz__mod.xhtml" title="This file belongs in section: Top_level This file belongs in section: Top_level. ">typstsz_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacetypstsz__mod.xhtml#a2d5b74ad731a4a4aca62f353e7b84024">num_pseudo_lists</a>, <a class="code" href="namespacetypstsz__mod.xhtml#a72972ee66e046bccc7b39ee78280eedd">num_stash_pseudo</a>,            &amp;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;       <a class="code" href="namespacetypstsz__mod.xhtml#a5d130a37d39d42a7500ebe20eaff5902">num_level_lists</a>, <a class="code" href="namespacetypstsz__mod.xhtml#acba78531729a230794b349e59b5ff4a2">nstash_series_block</a>, <a class="code" href="namespacetypstsz__mod.xhtml#a16501f9aceafb655e3755255dbe60c0d">nstash_series_records</a>,     &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;       <a class="code" href="namespacetypstsz__mod.xhtml#a29b8a4fed7aa30e12a71bb1f6604a979">time_series_rec_len</a>, <a class="code" href="namespacetypstsz__mod.xhtml#a5a0231faa6b8ea777d308f0d8929b12b">num_stash_levels</a>, <a class="code" href="namespacetypstsz__mod.xhtml#afc9e413a1e99e61e593d489ea92db107" title="Sizes derived from STASHC file of UMUI/Rose job. Includes those sizes needed to dimension arrays in t...">len_stlist</a>, <a class="code" href="namespacetypstsz__mod.xhtml#a2a8bf6566e5ec6b9111577631997b3f7">nsects</a>,       &amp;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;       <a class="code" href="namespacetypstsz__mod.xhtml#a5e62dec293b2a6fa0f81de90e35b2743">nitems</a>, <a class="code" href="namespacetypstsz__mod.xhtml#a494d6f7d7f83ba0cc704280292ccd4cf">nsttabl</a>, <a class="code" href="namespacetypstsz__mod.xhtml#aac6e4a74c36dec5a8c9a791a2f61c93f">nsttims</a>, <a class="code" href="namespacetypstsz__mod.xhtml#a37cf3a635bd0a87949973ea24fb6a680">totitems</a></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">USE </span><a class="code" href="namespaces__scmop__mod.xhtml">s_scmop_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>                                   &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5a13db9f3d2b54dc7f02f3fa3fc19ece">t_max</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a45eef9702d217d7da71dcf394198f2d6">t_min</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5a6f815019b3004ecc7040ec4b4d1fd4">t_acc</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a597140e5cb551f5f4651c9b4cd534865">t_div</a>, <a class="code" href="namespaces__scmop__mod.xhtml#acfaa64e6b4c579d708188c5774d8ac7d">t_mult</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a58d068616503a332fdbc2e4c7bb9f23b">t_acc_div</a>         &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#acaad14680fec34a8c1c206ebeb34d239">t_acc_mult</a>, <a class="code" href="namespaces__scmop__mod.xhtml#ab61b1909fcdb9b3f9552d14f2f8839fe">t_const</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a25166a280622f5787108c0078a033004">only_radsteps</a>                                   &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#a9e42893fdbe56b604355689cd9248c63">d_sl</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5914c497075c8cbd0e5cd1d211e1a123">d_soilt</a>, <a class="code" href="namespaces__scmop__mod.xhtml#ad97dd1acaa61800db9233ae60f5b1e84">d_bl</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a1462f6faadb6334b311e602285d8a286">d_soilm</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a80fd65616a49171a9ac7ecac7338d70a">d_tile</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a92a2c3b6b4b2b0dd800234719ca7207b">d_vis</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>   &amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#a11d031129d23dbffdab391dd303cdd08">d_allxtra</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5de685a17fc8f67d938e5982544ec05f">d_land</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a049e4924fd63af8676e1697fcde11654">d_cloud</a>                                           &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#a6ff96781019d621303b6d86d6d2486a5">scmdiag_gen</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5564776c9d09d933db80c6c1c3c47b3d">scmdiag_rad</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a6099058c886f9254fabef330fa2caedd">scmdiag_bl</a>,   <a class="code" href="namespaces__scmop__mod.xhtml#aa95516bacfa8a4f2932fc3e17f5f6b65">scmdiag_surf</a>,  <a class="code" href="namespaces__scmop__mod.xhtml#a89d9b3531f7c5739e1d9b9edf0583d58">scmdiag_land</a>  &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#a762d12a388196f9c5a907e8090d18e3a">scmdiag_sea</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a40ccacb1e960d2ef3da728d637e5ebe2">scmdiag_lsp</a>, <a class="code" href="namespaces__scmop__mod.xhtml#abf142f0f2bdc021960cf0c6a5ecd065b">scmdiag_conv</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a73ce0babd803e10fbcb82921346b3ccc">scmdiag_lscld</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a2b946f89404f7668eb56ca960c3c3de6">scmdiag_pc2</a>   &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      , <a class="code" href="namespaces__scmop__mod.xhtml#a61abfb55fdd33cfc5d44f00076f252c8">scmdiag_forc</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a8a1879aca60631ef706c8ce42618ced6">scmdiag_incs</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a765b6df27a911737054c8df3c0746c15">scmdiag_gwd</a></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="preprocessor"></span>  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">! arguments with intent IN. ie: input variables.</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">! Parallel setup variables</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;   lq_mix_bl,                                                           &amp;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;              <span class="comment">! TRUE if mixing ratios used in boundary layer code</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    l_flux_bc</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;              <span class="comment">! Switch for  surface flux forcing in SCM</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">! Model dimensions</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    rhc_row_length,                                                     &amp;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    rhc_rows,                                                           &amp;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    land_points,                                                        &amp;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                    <span class="comment">! IN No.of land points being processed, can be 0.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    ntiles,                                                             &amp;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    <span class="comment">! IN No. of land-surface tiles ( JULES )</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    nice,                                                               &amp;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                    <span class="comment">! IN No. of sea ice categories</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    nice_use,                                                           &amp;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                    <span class="comment">! IN No. of sea ice categories used fully in surface</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                    <span class="comment">!    exchange code</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    bl_levels,                                                          &amp;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    dst_levels,                                                         &amp;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                    <span class="comment">! number of deep soil temperature levels</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    dsm_levels,                                                         &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                    <span class="comment">! number of deep soil moisture levels</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    cloud_levels,                                                       &amp;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    n_cca_levels</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                      <span class="comment">! Number of levels for conv cloud amount :</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">!                       1 for 2D, nlevs for 3D.</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;   numcycles,                                                           &amp;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                   <span class="comment">! Number of cycles</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;   cycleno</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                   <span class="comment">! Sweep number</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">! Model switches</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    l_use_cariolle</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                          <span class="comment">! Switch for cariolle ozone tracer scheme</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    rhcrit(qdims%k_end)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                  <span class="comment">! IN Critical relative humidity.</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                                  <span class="comment">! the values need to be tuned</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                                  <span class="comment">! for the given set of levels.</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>  :: co2_mmr</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                             <span class="comment">! Initial or fixed concentration of CO2</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    tr_vars</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                             <span class="comment">! IN number of free tracer variables</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">! Co-ordinate arrays</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    delta_lambda,                                                       &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    delta_phi</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">! Trig arrays</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    cos_theta_longitude (tdims%i_start:tdims%i_end,                     &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                         tdims%j_start:tdims%j_end),                    &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    sin_theta_longitude (tdims%i_start:tdims%i_end,                     &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                         tdims%j_start:tdims%j_end),                    &amp;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    fv_cos_theta_latitude (tdims_s%i_start:tdims_s%i_end,               &amp;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                           tdims_s%j_start:tdims_s%j_end),              &amp;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    f3_at_u (udims_s%i_start:udims_s%i_end,                             &amp;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;             udims_s%j_start:udims_s%j_end)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">! Data arrays</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    u(udims_s%i_start:udims_s%i_end,udims_s%j_start:udims_s%j_end,      &amp;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        udims_s%k_start:udims_s%k_end),                                 &amp;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    v(vdims_s%i_start:vdims_s%i_end,vdims_s%j_start:vdims_s%j_end,      &amp;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        vdims_s%k_start:vdims_s%k_end),                                 &amp;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    w(wdims_s%i_start:wdims_s%i_end,wdims_s%j_start:wdims_s%j_end,      &amp;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      wdims_s%k_start:wdims_s%k_end),                                   &amp;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    rho(pdims_s%i_start:pdims_s%i_end,                                  &amp;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        pdims_s%j_start:pdims_s%j_end,                                  &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        pdims_s%k_start:pdims_s%k_end),                                 &amp;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    rho_wet_theta(tdims%i_start:tdims%i_end,                            &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                  tdims%j_start:tdims%j_end,                            &amp;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                  1:tdims%k_end-1),                                     &amp;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    p_layer_centres(tdims%i_start:tdims%i_end,                          &amp;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                    tdims%j_start:tdims%j_end,0:tdims%k_end),           &amp;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    p_layer_boundaries(pdims%i_start:pdims%i_end,                       &amp;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                       pdims%j_start:pdims%j_end,0:pdims%k_end),        &amp;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;              <span class="comment">! pressure at layer boundaries. Same as p except at</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;              <span class="comment">! bottom level = pstar, and at top = 0.</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    p_star(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),        &amp;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    theta(tdims_s%i_start:tdims_s%i_end,                                &amp;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;          tdims_s%j_start:tdims_s%j_end,                                &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;          tdims_s%k_start:tdims_s%k_end),                               &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    exner_theta_levels(tdims_s%i_start:tdims_s%i_end,                   &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                       tdims_s%j_start:tdims_s%j_end,                   &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                       tdims_s%k_start:tdims_s%k_end),                  &amp;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    q(qdims_l%i_start:qdims_l%i_end,qdims_l%j_start:qdims_l%j_end,      &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      qdims_l%k_start:qdims_l%k_end),                                   &amp;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    qcl(qdims_l%i_start:qdims_l%i_end,qdims_l%j_start:qdims_l%j_end,    &amp;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        qdims_l%k_start:qdims_l%k_end),                                 &amp;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    qcf(qdims_l%i_start:qdims_l%i_end,qdims_l%j_start:qdims_l%j_end,    &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        qdims_l%k_start:qdims_l%k_end),                                 &amp;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    ls_rain(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),       &amp;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    ls_snow(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),       &amp;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    conv_rain(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),     &amp;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    conv_snow(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    land_sea_mask(pdims%i_start:pdims%i_end,                            &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                  pdims%j_start:pdims%j_end),                           &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    l_scrn,                                                             &amp;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                                 <span class="comment">! Logical to control output</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                                 <span class="comment">!    of screen level T,Q,QCL,QCF</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    l_plsp                   <span class="comment">! Logical to control output</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                                 <span class="comment">!    of Probability of LS Precip</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">! ancillary arrays and fields required to be saved from timestep to</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">! timestep.</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    land_index (land_points)      <span class="comment">! set from land_sea_mask</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    u_0(udims%i_start:udims%i_end,udims%j_start:udims%j_end),           &amp;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                                <span class="comment">! set to zero</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    v_0(vdims%i_start:vdims%i_end,vdims%j_start:vdims%j_end),           &amp;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                                <span class="comment">! set to zero</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    sil_orog_land(land_points),                                        &amp;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                                    <span class="comment">! orog/qrparm.orog.as</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    ho2r2_orog(land_points),                                           &amp;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                                 <span class="comment">! orog/qrparm.orog.h2root2</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    ice_fract(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),    &amp;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                                     <span class="comment">! ice/qrclim.ice.(month)</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    ice_fract_ncat(pdims%i_start:pdims%i_end,                          &amp;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                    pdims%j_start:pdims%j_end, nice),                   &amp;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                              <span class="comment">!ice fract on categories</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    di_ncat(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,        &amp;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            nice),                                                      &amp;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                              <span class="comment">! ice thickness on categories</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    k_sice(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,nice)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                              <span class="comment">! sea ice effective conductivity in</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                              <span class="comment">!  sfc layer on categories (W/m2/K)</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;   cumulus (qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end),       &amp;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                                   <span class="comment">! *APL bl convection flag</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;   l_pc2_diag_sh_pts(tdims%i_start:tdims%i_end,                         &amp;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                     tdims%j_start:tdims%j_end)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                <span class="comment">! Carry diagnostic shallow convective information for PC2</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    ntml (pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;   surf_radflux(pdims%i_start:pdims%i_end,                              &amp;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                pdims%j_start:pdims%j_end,nice_use)</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                <span class="comment">! IN Surface net radiation (W/sq m,  positive downwards).</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;   cca    (qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,         &amp;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;           n_cca_levels)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>  ::                                               &amp;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;   lcbase (qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end),        &amp;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;   ccb0   (qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end),        &amp;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;   cct0   (qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end)</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">! in variables passed from BDY_LAYR to IMP_SOLVER</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    alpha1_sice(pdims%i_start:pdims%i_end,                              &amp;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                pdims%j_start:pdims%j_end,nice_use),                    &amp;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    ashtf(pdims%i_start:pdims%i_end,                                    &amp;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;          pdims%j_start:pdims%j_end,nice_use),                          &amp;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    bq_gb(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,          &amp;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;          bl_levels),                                                   &amp;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    bt_gb(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,          &amp;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;          bl_levels),                                                   &amp;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    dtrdz_charney_grid(pdims%i_start:pdims%i_end,                       &amp;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                       pdims%j_start:pdims%j_end,                       &amp;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                       bl_levels),                                      &amp;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    rdz_charney_grid(pdims%i_start:pdims%i_end,                         &amp;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                     pdims%j_start:pdims%j_end,                         &amp;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                     bl_levels),                                        &amp;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    dtrdz_u(udims%i_start:udims%i_end,udims%j_start:udims%j_end,        &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                            bl_levels),                                 &amp;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    dtrdz_v(vdims%i_start:vdims%i_end,vdims%j_start:vdims%j_end,        &amp;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                              bl_levels),                               &amp;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    rdz_u(udims%i_start:udims%i_end,udims%j_start:udims%j_end,          &amp;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                          2:bl_levels),                                 &amp;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    rdz_v(vdims%i_start:vdims%i_end,vdims%j_start:vdims%j_end,          &amp;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                            2:bl_levels),                               &amp;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    cdr10m_u(udims%i_start:udims%i_end,udims%j_start:udims%j_end),      &amp;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    cdr10m_v(vdims%i_start:vdims%i_end,vdims%j_start:vdims%j_end),      &amp;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    z1_tq(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: uStarGBM(pdims%i_start:pdims%i_end,               &amp;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                                pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">!       ! GBM surface friction velocity for diagnosis of decoupling</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    rhokm_u(udims%i_start:udims%i_end,udims%j_start:udims%j_end,        &amp;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                             bl_levels),                                &amp;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    rhokm_v(vdims%i_start:vdims%i_end,vdims%j_start:vdims%j_end,        &amp;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                             bl_levels)</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">! in diagnostics (started or from) BDY_LAYR</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    rib_gb(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),        &amp;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                                     <span class="comment">! Mean bulk Richardson number for</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment">!                                     lowest layer.</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    zlcl(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    zht(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),           &amp;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                                      <span class="comment">! Max height of turb mixing</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    dzh(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),           &amp;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                                  <span class="comment">! IN inversion thickness</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    zh(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),            &amp;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    bl_type_1(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),     &amp;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                                  <span class="comment">! IN Indicator set to 1.0 if stable</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">!                                 !     b.l. diagnosed, 0.0 otherwise.</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    bl_type_2(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),     &amp;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                                  <span class="comment">! IN Indicator set to 1.0 if Sc over</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment">!                                 !     stable surface layer diagnosed,</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment">!                                 !     0.0 otherwise.</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    bl_type_3(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),     &amp;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                                  <span class="comment">! IN Indicator set to 1.0 if well</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">!                                 !     mixed b.l. diagnosed,</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">!                                 !     0.0 otherwise.</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    bl_type_4(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),     &amp;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                                  <span class="comment">! IN Indicator set to 1.0 if</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment">!                                 !     decoupled Sc layer (not over</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">!                                 !     cumulus) diagnosed,</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment">!                                 !     0.0 otherwise.</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    bl_type_5(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),     &amp;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                                  <span class="comment">! IN Indicator set to 1.0 if</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">!                                 !     decoupled Sc layer over cumulus</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">!                                 !     diagnosed, 0.0 otherwise.</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    bl_type_6(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),     &amp;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                                  <span class="comment">! IN Indicator set to 1.0 if a</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">!                                 !     cumulus capped b.l. diagnosed,</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment">!                                 !     0.0 otherwise.</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    bl_type_7(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),     &amp;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                                  <span class="comment">! IN Indicator set to 1.0 if a</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">!                                 !     shear-dominated b.l. diagnosed,</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment">!                                 !     0.0 otherwise.</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    z0m_eff_gb(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),    &amp;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    z0h_eff_gb(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),    &amp;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                                  <span class="comment">! IN Effective grid-box roughness</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                                  <span class="comment">!     lengths for diagnostics</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    fme(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    rho_aresist(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                                <span class="comment">! IN RHOSTAR*CD_STD*VSHR</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                                <span class="comment">!     for CLASSIC aerosol scheme</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    aresist(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),       &amp;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                                <span class="comment">! IN 1/(CD_STD*VSHR)</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                                <span class="comment">!     for CLASSIC aerosol scheme</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    resist_b(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                                <span class="comment">! IN (1/CH-1/(CD_STD)/VSHR</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                                <span class="comment">!     for CLASSIC aerosol scheme</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    r_b_dust(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,       &amp;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;             <a class="code" href="namespacedust__parameters__mod.xhtml#acd60b6ea942dd71f3d3f244e09990bf7" title="Number of discrete particle size divisions (bins) ">ndiv</a>),                                                     &amp;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                                        <span class="comment">! IN surf layer res for dust</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    we_lim(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,3),      &amp;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                                    <span class="comment">! IN rho*entrainment rate implied by</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment">!                                   !     placing of subsidence</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    zrzi(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,3),        &amp;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                                    <span class="comment">! IN (z-z_base)/(z_i-z_base)</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    t_frac(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,3),      &amp;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                                    <span class="comment">! IN a fraction of the timestep</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    we_lim_dsc(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,3),  &amp;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment">!                                   ! IN rho*entrainment rate implied by</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">!                                   !     placing of subsidence</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    zrzi_dsc(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,3),    &amp;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                                    <span class="comment">! IN (z-z_base)/(z_i-z_base)</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    t_frac_dsc(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,3),  &amp;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">!                                   ! IN a fraction of the timestep</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    z_half(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,         &amp;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;           bl_levels),                                                  &amp;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                                    <span class="comment">! IN Z_HALF(*,K) is height of half</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">!                                   !    level k-1/2.</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    zhsc(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                                    <span class="comment">! IN Top of decoupled layer</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    ra(land_points),                                                    &amp;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                                    <span class="comment">! IN aerodynamic resiatnce (s/m)</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    wt_ext(land_points,dsm_levels) <span class="comment">! IN cumulative fract of trans&#39;n</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    kent(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                                    <span class="comment">! IN grid-level of SML inversion</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    kent_dsc(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                                    <span class="comment">! IN grid-level of DSC inversion</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">! Mineral dust source flux for tracer mixing</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    dust_flux(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,      &amp;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;              ndiv),                                                    &amp;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    dust_emiss_frac(land_points,ntiles),                                &amp;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                                <span class="comment">! IN fraction of tile can emit dust</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    u_s_t_tile(land_points,ntiles,<a class="code" href="namespacedust__parameters__mod.xhtml#a240a7a2c93599e6a4403dc9f84e01947">ndivh</a>),                               &amp;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                                           <span class="comment">!IN threshold frict. vel</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    u_s_t_dry_tile(land_points,ntiles,<a class="code" href="namespacedust__parameters__mod.xhtml#a240a7a2c93599e6a4403dc9f84e01947">ndivh</a>),                           &amp;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                                               <span class="comment">!IN dry soil value</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    u_s_std_tile(land_points,ntiles)<span class="comment">!IN friction velocity</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">! IN additional variables for JULES</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;   tile_pts(ntype),                                                     &amp;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                                 <span class="comment">! IN Number of tile points.</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;   tile_index(land_points,ntype)</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment">!                                ! IN Index of tile points.</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;   tile_frac(land_points,ntiles),                                       &amp;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                                <span class="comment">! IN fractional coverage for each</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                                <span class="comment">!    surface tile</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;   canopy(land_points,ntiles),                                          &amp;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                                   <span class="comment">! IN Surface/canopy water (kg/m2)</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;   alpha1(land_points,ntiles),                                          &amp;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                                  <span class="comment">! IN Mean gradient of saturated</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment">!                                 specific humidity with</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">!                                 respect to temperature between</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment">!                                 the bottom model layer and the</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="comment">!                                 tile surfaces.</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;   fraca(land_points,ntiles),                                           &amp;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                                   <span class="comment">! IN Fraction of surface</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                                <span class="comment">!            moisture flux with only</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                                <span class="comment">!            aerodynamic resistance.</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;   rhokh_tile(land_points,ntiles),                                      &amp;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                                      <span class="comment">! IN</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">!                                 Tile surface exchange coefficients</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="comment">!                                 for heat</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;   smc(land_points),                                                    &amp;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                                <span class="comment">! IN Soil moisture content in root depth</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment">!                                  (kg/m2).</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;   chr1p5m(land_points,ntiles),                                         &amp;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                                   <span class="comment">! IN Ratio of coefficients reqd for</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment">!                                 calculation of 1.5 m T.</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;   resfs(land_points,ntiles),                                           &amp;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                                 <span class="comment">! IN Combined soil, stomatal</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="comment">!                                 and aerodynamicresistance</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="comment">!                                 factor = PSIS/(1+RS/RA) for</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment">!                                 fraction (1-FRACA)</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;   z0hssi(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;   z0mssi(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                                <span class="comment">! IN Roughness lengths over sea (m).</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;   z0m_gb(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                                <span class="comment">! IN Gridbox mean roughness length</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="comment">!                               !    for momentum (m).</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;   canhc_tile(land_points,ntiles),                                      &amp;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="comment">!                               ! IN Areal heat capacity of canopy</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment">!                               !    for land tiles (J/K/m2).</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;   flake(land_points,ntiles),                                           &amp;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                                   <span class="comment">! IN Lake fraction.</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;   wt_ext_tile(land_points,dsm_levels,ntiles),                          &amp;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="comment">!                               ! IN Fraction of evapotranspiration</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="comment">!                               !    which is extracted from each</span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="comment">!                               !    soil layer by each tile.</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;   lw_down(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),        &amp;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                                <span class="comment">! IN Surface downward LW radiation</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="comment">!                               !    (W/m2).</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;   lai_ft(land_points,npft),                                            &amp;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                                   <span class="comment">! IN LAI on vegetated tiles</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;   canht_ft(land_points,npft),                                          &amp;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                                   <span class="comment">! IN CANHT on vegetated tiles</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;   sw_tile(land_points,ntiles),                                         &amp;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                                   <span class="comment">! IN Surface net SW radiation on land</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="comment">!                               !    tiles (W/m2).</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;   ashtf_tile(land_points,ntiles),                                      &amp;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="comment">!                               ! IN Coefficient to calculate</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="comment">!                               !    surface heat flux into land</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="comment">!                               !    tiles.</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;   resft(land_points,ntiles),                                           &amp;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                                   <span class="comment">! IN Total resistance factor.</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="comment">!                               !    FRACA+(1-FRACA)*RESFS for</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="comment">!                               !    snow-free land, 1 for snow.</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;   rhokh_sice(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),     &amp;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="comment">!                               ! IN Surface exchange coefficients</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="comment">!                               !    for sea and sea-ice</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;   epot_tile(land_points,ntiles),                                       &amp;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="comment">!                               ! INOUT surface tile potential</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="comment">!                               !       evaporation</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;   z0h_tile(land_points,ntiles),                                        &amp;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                                <span class="comment">! IN Tile roughness lengths for heat</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="comment">!                               !    and moisture (m).</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;   z0m_tile(land_points,ntiles),                                        &amp;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                                <span class="comment">! IN Tile roughness lengths for</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="comment">!                               !    momentum.</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;   chr1p5m_sice(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="comment">!                               ! IN CHR1P5M for sea and sea-ice</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="comment">!                               !    (leads ignored).</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;   fland(land_points),                                                  &amp;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                                <span class="comment">! IN Land fraction on land tiles.</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;   flandg(pdims_s%i_start:pdims_s%i_end,                                &amp;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;          pdims_s%j_start:pdims_s%j_end),                               &amp;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                                <span class="comment">! IN Land fraction on all points.</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;   flandg_u(udims%i_start:udims%i_end,udims%j_start:udims%j_end),       &amp;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="comment">!                               ! IN Land frac (on U-grid, with 1st</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="comment">!                               !    and last rows undefined or, at</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="comment">!                               !    present, set to &quot;missing data&quot;)</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;   flandg_v(vdims%i_start:vdims%i_end,vdims%j_start:vdims%j_end),       &amp;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="comment">!                               ! IN Land frac (on V-grid, with 1st</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="comment">!                               !    and last rows undefined or, at</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="comment">!                               !    present, set to &quot;missing data&quot;)</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;   tstar_sea(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end),      &amp;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="comment">!                               ! IN Open sea sfc temperature (K).</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    vshr_land(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),     &amp;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="comment">!                               ! IN VSHR over land part of gridbox.</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    vshr_ssi(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                                <span class="comment">! IN VSHR over sea part of gridbox.</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    gc(land_points,ntiles),                                             &amp;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                                  <span class="comment">!Stomatal conductance to evapn</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="comment">!                                 !    for land tiles (m/s).</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    aresist_tile(land_points,ntiles),                                   &amp;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="comment">!                                  !1/(CD_STD*VSHR) on land tiles</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="comment">!                                  !for CLASSIC aerosol scheme</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    resist_b_tile(land_points,ntiles)</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment">!                                  !(1/CH-1/CD_STD)/VSHR on land tiles</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment">!                                  !for CLASSIC aerosol scheme</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment">! Additional variables for JULES</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;   emis_tile(land_points,ntiles),                                       &amp;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                                   <span class="comment">! IN  Emissivity for land tiles</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    t_soil(land_points,dsm_levels),                                     &amp;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                                       <span class="comment">! slt/qrclim.slt_pm(lev).(month)</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;   snow_tile(land_points,ntiles),                                       &amp;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="comment">!                               ! INOUT Snow on tiles (kg/m2).</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;   rib_ssi(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                                   <span class="comment">! INOUT Sea mean bulk Richardson</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="comment">!                                          number for lowest layer.</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="comment">! IN JULES additional STASH variables</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;   Gs(land_points),                                                     &amp;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                                <span class="comment">! IN &quot;Stomatal&quot; conductance to</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;<span class="comment">!                               !    evaporation (m/s).</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;   gpp(land_points),                                                    &amp;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                                <span class="comment">! IN Gross primary productivity</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="comment">!                               !    (kg C/m2/s).</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;   npp(land_points),                                                    &amp;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                                <span class="comment">! IN Net primary productivity</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment">!                               !    (kg C/m2/s).</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;   resp_p(land_points),                                                 &amp;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                                <span class="comment">! IN Plant respiration (kg C/m2/s).</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;   gpp_ft(land_points,npft),                                            &amp;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                                <span class="comment">! IN Gross primary productivity</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="comment">!                               !    on PFTs (kg C/m2/s).</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;   npp_ft(land_points,npft),                                            &amp;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                                <span class="comment">! IN Net primary productivity</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="comment">!                               !    on PFTs (kg C/m2/s).</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;   resp_p_ft(land_points,npft),                                         &amp;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                                  <span class="comment">!IN Plant respiration on PFTs</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="comment">!                               !     (kg C/m2/s).</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;   resp_s(land_points,<a class="code" href="namespaceatm__step__local.xhtml#acc69694f1f2bbeecdbf17757ca10e303">dim_cs1</a>),                                         &amp;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                                   <span class="comment">! IN Soil respiration (kg C/m2/s).</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;   resp_s_tot(<a class="code" href="namespaceatm__step__local.xhtml#afb2f57aeece69e9a6be83f45ab953a3d">dim_cs2</a>),                                                 &amp;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;                                   <span class="comment">! IN Total soil resp&#39;n (kg C/m2/s).</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;   cs(land_points,<a class="code" href="namespaceatm__step__local.xhtml#acc69694f1f2bbeecdbf17757ca10e303">dim_cs1</a>),                                             &amp;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                                   <span class="comment">! IN Soil carbon</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;   rib_tile(land_points,ntiles),                                        &amp;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="comment">!                               ! IN RIB for land tiles.</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;   fsmc(land_points,npft),                                              &amp;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                                <span class="comment">! IN Moisture availability factor.</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;   catch(land_points,ntiles),                                           &amp;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                                <span class="comment">! IN Surface/canopy water capacity</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="comment">!                               !    of snow-free land tiles (kg/m2).</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;   g_leaf(land_points,npft),                                            &amp;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                                <span class="comment">! IN Leaf turnover rate (/360days).</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;   co2_emits(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;                                 <span class="comment">!IN CO2 Emissions</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;   co2flux(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;                                      <span class="comment">! IN ocean CO2 flux</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<span class="comment">! arguments with intent INOUT. ie: input variables changed on output.</span></div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="comment">!     Declaration of new BL diagnostics.</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;  type(strnewbldiag), <span class="keywordtype">INTENT(INOUT)</span> :: bl_diag</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="comment">! Diagnostics info</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;  stashwork3(*),                                                        &amp;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                     <span class="comment">! STASH workspace for section 3 (Boundary Layer)</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;  stashwork9(*) <span class="comment">! STASH workspace for section 9 (LS Cloud)</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;<span class="comment">! Additional variables for SCM diagnostics which are dummy in full UM</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    nSCMDpkgs              <span class="comment">! No of SCM diagnostics packages</span></div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    L_SCMDiags(nscmdpkgs)  <span class="comment">! Logicals for SCM diagnostics packages</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: TScrnDcl_SSI(pdims%i_start:pdims%i_end,        &amp;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                                      pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="comment">!                           !    Decoupled screen-level temperature</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="comment">!                           !    over sea or sea-ice</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: TScrnDcl_TILE(land_points,ntiles)</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="comment">!                           !    Decoupled screen-level temperature</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="comment">!                           !    over land tiles</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: tStbTrans(pdims%i_start:pdims%i_end,           &amp;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;                                      pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;<span class="comment">!                           !    Time since the transition</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;   cca0   (qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,         &amp;</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;           n_cca_levels),                                               &amp;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;   ccw0   (qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,         &amp;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;           qdims%k_end),                                                &amp;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;   cca0_2d(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end)</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    fqt(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,            &amp;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;        bl_levels),                                                     &amp;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                                          <span class="comment">! needed as diagnostic ?</span></div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    ftl(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,            &amp;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;        bl_levels),                                                     &amp;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                                          <span class="comment">! needed as diagnostic</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    taux(udims%i_start:udims%i_end,udims%j_start:udims%j_end,           &amp;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                           bl_levels),                                  &amp;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                                           <span class="comment">! needed as diagnostic</span></div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;    tauy(vdims%i_start:vdims%i_end,vdims%j_start:vdims%j_end,           &amp;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                             bl_levels),                                &amp;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;                                             <span class="comment">! needed as diagnostic</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    rhokh(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,         &amp;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;           bl_levels),                                                  &amp;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;   fqt_ice(pdims%i_start:pdims%i_end,                                   &amp;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;           pdims%j_start:pdims%j_end,nice_use),                         &amp;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;                                <span class="comment">! INOUT Surface FQT for sea-ice</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;   ftl_ice(pdims%i_start:pdims%i_end,                                   &amp;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;           pdims%j_start:pdims%j_end,nice_use),                         &amp;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                                <span class="comment">! INOUT Surface FTL for sea-ice</span></div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;   dtstar_tile(land_points,ntiles),                                     &amp;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;                                   <span class="comment">! INOUT  Change in TSTAR over timestep</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;<span class="comment">!                                  !     for land tiles</span></div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;   dtstar(pdims%i_start:pdims%i_end,                                    &amp;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;          pdims%j_start:pdims%j_end,nice_use),                          &amp;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                                   <span class="comment">! INOUT  Change is TSTAR over timestep</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;<span class="comment">!                                  !     for sea-ice</span></div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    ti(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end,nice),       &amp;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;                                       <span class="comment">! category sea ice sfc layer temp</span></div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;                                       <span class="comment">! (IN only if l_sice_multilayers=T)</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    r_u(udims_s%i_start:udims_s%i_end,udims_s%j_start:udims_s%j_end,    &amp;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;          udims_s%k_start:udims_s%k_end),                               &amp;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    r_v(vdims_s%i_start:vdims_s%i_end,vdims_s%j_start:vdims_s%j_end,    &amp;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;          vdims_s%k_start:vdims_s%k_end),                               &amp;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    r_w(wdims%i_start:wdims%i_end,wdims%j_start:wdims%j_end,            &amp;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        wdims%k_start:wdims%k_end),                                     &amp;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    t_latest(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end,       &amp;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;             tdims%k_end),                                              &amp;</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;    q_latest(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,       &amp;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;             qdims%k_end),                                              &amp;</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    qcl_latest(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,     &amp;</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;               qdims%k_end),                                            &amp;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    qcf_latest(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,     &amp;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;               qdims%k_end),                                            &amp;</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    cf_latest(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,      &amp;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;              qdims%k_end),                                             &amp;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    cfl_latest(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,     &amp;</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;               qdims%k_end),                                            &amp;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    cff_latest(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,     &amp;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;               qdims%k_end),                                            &amp;</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    area_cloud_fraction(qdims%i_start:qdims%i_end,                      &amp;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;                        qdims%j_start:qdims%j_end,                      &amp;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;                        qdims%k_end),                                   &amp;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    bulk_cloud_fraction(qdims%i_start:qdims%i_end,                      &amp;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                        qdims%j_start:qdims%j_end,                      &amp;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                        qdims%k_end),                                   &amp;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    cloud_fraction_liquid(qdims%i_start:qdims%i_end,                    &amp;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                          qdims%j_start:qdims%j_end,                    &amp;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                          qdims%k_end),                                 &amp;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    cloud_fraction_frozen(qdims%i_start:qdims%i_end,                    &amp;</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                          qdims%j_start:qdims%j_end,                    &amp;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                          qdims%k_end),                                 &amp;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    sum_eng_fluxes(pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                   pdims%j_start:pdims%j_end),                          &amp;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    sum_moist_flux(pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;                   pdims%j_start:pdims%j_end),                          &amp;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    rhcpt(rhc_row_length, rhc_rows, qdims%k_end)</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;<span class="comment">! Tracer variables</span></div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    aerosol     (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                 tdims_s%k_start:tdims_s%k_end),                        &amp;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    free_tracers(tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;                 trdims_ltl%k_end, tr_vars)</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    dust_div1   (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    dust_div2   (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    dust_div3   (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    dust_div4   (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    dust_div5   (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    dust_div6   (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    drydep2(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end,        &amp;</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;            ndiv) <span class="comment">!dry dep though grav. set.</span></div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    so2         (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    dms         (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    so4_aitken  (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    so4_accu    (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;    so4_diss    (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;    nh3         (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;                 tdims_s%k_start:tdims_s%k_end )</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    soot_new    (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    soot_aged   (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    soot_cld    (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    bmass_new   (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    bmass_agd   (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    bmass_cld   (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;    ocff_new    (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;    ocff_aged   (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;    ocff_cld    (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    nitr_acc    (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    nitr_diss   (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    co2         (tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;                 tdims_s%k_start:tdims_s%k_end ),                       &amp;</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    ozone_tracer(tdims_s%i_start:tdims_s%i_end,                         &amp;</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;                 tdims_s%j_start:tdims_s%j_end,                         &amp;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;                 tdims_s%k_start:tdims_s%k_end )</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;<span class="comment">! INOUT additional variables for JULES</span></div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;   tstar_tile(land_points,ntiles),                                      &amp;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;                                <span class="comment">! INOUT Surface tile temperature</span></div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;   fqt_tile(land_points,ntiles),                                        &amp;</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;                                <span class="comment">! INOUT surface tile moisture flux</span></div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;   ftl_tile(land_points,ntiles),                                        &amp;</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;<span class="comment">!                               ! INOUT surface tile heat flux</span></div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;   radnet_sice(pdims%i_start:pdims%i_end,                               &amp;</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;               pdims%j_start:pdims%j_end,nice_use),                     &amp;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;<span class="comment">!                               ! INOUT Sea-ice surface net radiation.</span></div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;   olr(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),            &amp;</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;                                <span class="comment">! IN    TOA - surface upward LW on</span></div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;<span class="comment">!                               !       last radiation timestep</span></div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;<span class="comment">!                               ! OUT   Corrected TOA outward LW</span></div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;   tstar_sice_cat(tdims%i_start:tdims%i_end,                            &amp;</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                  tdims%j_start:tdims%j_end,nice_use),                  &amp;</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;                                   <span class="comment">! INOUT Sea-ice sfc temperature (K).</span></div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;   tstar_ssi(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end),      &amp;</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;                                   <span class="comment">! INOUT Sea mean sfc temperature (K).</span></div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;   taux_land(udims%i_start:udims%i_end,udims%j_start:udims%j_end),      &amp;</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;                                   <span class="comment">! INOUT W&#39;ly compt of land sfc wind</span></div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;<span class="comment">!                                  !       stress (N/sq m). (On U-grid</span></div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;<span class="comment">!                                  !       with first and last rows</span></div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;<span class="comment">!                                  !       undefined or, at present,</span></div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;<span class="comment">!                                  !       set to missing data</span></div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;   taux_ssi(udims%i_start:udims%i_end,udims%j_start:udims%j_end),       &amp;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;                                   <span class="comment">! INOUT W&#39;ly compt of sea sfc wind</span></div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;<span class="comment">!                                  !       stress (N/sq m). (On U-grid</span></div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;<span class="comment">!                                  !       with first and last rows</span></div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;<span class="comment">!                                  !       undefined or, at present,</span></div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;<span class="comment">!                                  !       set to missing data</span></div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;   tauy_land(vdims%i_start:vdims%i_end,vdims%j_start:vdims%j_end),      &amp;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                                   <span class="comment">! INOUT S&#39;ly compt of land sfc wind</span></div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;<span class="comment">!                                  !       stress (N/sq m).  On V-grid;</span></div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;<span class="comment">!                                  !       comments as per TAUX.</span></div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;   tauy_ssi(vdims%i_start:vdims%i_end,vdims%j_start:vdims%j_end)</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                                   <span class="comment">! INOUT S&#39;ly compt of sea sfc wind</span></div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;<span class="comment">!                                  !       stress (N/sq m).  On V-grid;</span></div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;<span class="comment">!                                  !       comments as per TAUX.</span></div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                             &amp;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;    error_code</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;<span class="comment">! OUT variables</span></div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                                  &amp;</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;   ch_term(pdims_s%i_start:pdims_s%i_end,                               &amp;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;           pdims_s%j_start:pdims_s%j_end,                               &amp;</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;           pdims_s%k_start:pdims_s%k_end-1)</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                                  &amp;</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;    snomlt_surf_htf(pdims%i_start:pdims%i_end,                          &amp;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;                    pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;<span class="comment">! OUT additional variables for JULES</span></div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                                  &amp;</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;   t_surf(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end),         &amp;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;    ti_gb(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end),         &amp;</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;                                               <span class="comment">!output seaice temp.</span></div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;                                               <span class="comment">! sfc layer (ice mean)</span></div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    ext(land_points,dsm_levels),                                        &amp;</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;                                    <span class="comment">! Extraction of water from each</span></div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="comment">!                                    soil layer (kg/m2/s).</span></div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;    snowmelt(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),      &amp;</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;                                        <span class="comment">!output from sf_evap.</span></div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;   tstar_land(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end),     &amp;</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;                                   <span class="comment">! INOUT Land mean sfc temperature (K)</span></div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;   tstar_sice(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end),     &amp;</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;                                   <span class="comment">! OUT Sea-ice sfc temperature (K).</span></div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;                                   <span class="comment">!     (Ice mean over categories)</span></div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;   ei_tile(land_points,ntiles),                                         &amp;</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;                                   <span class="comment">! OUT EI for land tiles</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;   ecan_tile(land_points,ntiles),                                       &amp;</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;                                <span class="comment">! OUT ECAN for land tiles</span></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;   melt_tile(land_points,ntiles),                                       &amp;</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;<span class="comment">!                               ! OUT Snowmelt on tiles (kg/m2/s).</span></div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;   surf_htf_tile(land_points,ntiles),                                   &amp;</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;<span class="comment">!                               ! OUT Net downward surface heat flux</span></div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;<span class="comment">!                               !     on tiles (W/m2)</span></div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;    surf_ht_flux_land(pdims%i_start:pdims%i_end,                        &amp;</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;                      pdims%j_start:pdims%j_end)</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;<span class="preprocessor">#include &quot;typsts.h&quot;</span></div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;screendiag.h&quot;</span></div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;<span class="preprocessor"></span><span class="comment">! Local variables</span></div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;  <span class="keywordtype">REAL</span> :: alpha_tr(bl_levels)  <span class="comment">! Implicit weights for tracers</span></div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;<span class="comment">!                                  !  = alpha_cd from RUN_BL namelist</span></div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;<span class="comment">!                                  ! or = 1 if TRWEIGHTS1 = ON</span></div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;<span class="comment">! local variables.</span></div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;    denom,                                                              &amp;</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;                   <span class="comment">! Denominator in PC2 inhomogeneous ice forcing calc.</span></div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;    q4,                                                                 &amp;</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;                   <span class="comment">! QCF increment in PC2 inhomog.    ice forcing calc.</span></div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;    incloudice,                                                         &amp;</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;                   <span class="comment">! Value of QCF/CFF used for calculating sink of CFF</span></div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;    deltacff,                                                           &amp;</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;                   <span class="comment">! Ice cloud fraction increment</span></div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;    surf_ht_flux_gb(pdims%i_start:pdims%i_end,                          &amp;</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;                    pdims%j_start:pdims%j_end),                         &amp;</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;   co2_flux_tot(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;                                      <span class="comment">!  total CO2 flux</span></div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;   land_co2(land_points)          <span class="comment">!  terrestrial CO2 flux</span></div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;    e_sea(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;                                 <span class="comment">! needed as diagnostic ?</span></div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;    h_sea(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;                                 <span class="comment">! needed as diagnostic ?</span></div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;   radnet_tile(land_points,ntiles),                                     &amp;</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;<span class="comment">!                               ! Tile surface net radiation.</span></div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;   le_tile(land_points,ntiles),                                         &amp;</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;                                   <span class="comment">! Surface latent heat flux for</span></div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;<span class="comment">!                               !       land tiles (W/m2).</span></div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;    e_ssi(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;                                    <span class="comment">! Evaporation from mean sea</span></div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;    ei_sice(pdims%i_start:pdims%i_end,                                  &amp;</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;            pdims%j_start:pdims%j_end,nice_use),                        &amp;</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;                                    <span class="comment">! Output from sf_evap.</span></div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;    surf_ht_flux_sice(pdims%i_start:pdims%i_end,                        &amp;</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;                      pdims%j_start:pdims%j_end,nice),                  &amp;</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;                                    <span class="comment">! Category sea ice surface heat flux</span></div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;    ftl_ssi(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),       &amp;</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;                                    <span class="comment">! Surface FTL for mean sea</span></div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;    ecan(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;                                        <span class="comment">!output from sf_evap.</span></div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;    ei(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),            &amp;</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;                                        <span class="comment">!output from sf_evap.</span></div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;   esoil_tile(land_points,ntiles),                                      &amp;</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;                                <span class="comment">! Evaporation from bare soil (kg/m2)</span></div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;   es(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),             &amp;</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;                                <span class="comment">! Surface evapotranspiration from</span></div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;<span class="comment">!                               !     soil moisture store (kg/m2/s).</span></div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;   q1p5m_tile(land_points,ntiles),                                      &amp;</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;<span class="comment">!                               ! Q1P5M over land tiles.</span></div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;   t1p5m_tile(land_points,ntiles)</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;<span class="comment">!                               ! T1P5M over land tiles.</span></div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;<span class="comment">!local variables for mineral dust</span></div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: dust_all(:,:,:,:) <span class="comment">!dust mmr</span></div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: w_int(:,:,:),                                    &amp;</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;                                             <span class="comment">! w on interior points</span></div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;                       qs(:,:,:)</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;  <span class="keywordtype">REAL</span> :: cca_at_base(qdims%i_start:qdims%i_end,                        &amp;</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;                      qdims%j_start:qdims%j_end)</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;<span class="comment">! loop counters</span></div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;    i, j, k,                                                            &amp;</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;    kinvert,                                                            &amp;</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;                                <span class="comment">! vertical index for inverted arrays.</span></div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;    idiv</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;  <span class="keywordtype">INTEGER</span> :: i_field  <span class="comment">! counter for swap_bounds_mv</span></div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;<span class="comment">! Diagnostic switches</span></div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;<span class="comment">! a) boundary layer</span></div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;  <span class="keywordtype">LOGICAL</span> ::                                                            &amp;</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;    su10, sv10, slh, sq1p5, st1p5, sq_t1p5,                             &amp;</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;    simlt, smlt, l_ftl, l_fqw, l_taux, l_tauy</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;<span class="comment">! Diagnostics controlled by Diagnostic switches</span></div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;    q1p5m(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;    t1p5m(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),         &amp;</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;    rho1(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),          &amp;</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;                                               <span class="comment">! Density at level 1</span></div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;    u10m(udims%i_start:udims%i_end,udims%j_start:udims%j_end),          &amp;</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;    v10m(vdims%i_start:vdims%i_end,vdims%j_start:vdims%j_end),          &amp;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;    latent_heat(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;    sice_mlt_htf(pdims%i_start:pdims%i_end,                             &amp;</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;                 pdims%j_start:pdims%j_end, nice),                      &amp;</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;                                               <span class="comment">!output seaice topmelt</span></div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;    sea_ice_htf(pdims%i_start:pdims%i_end,                              &amp;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;                pdims%j_start:pdims%j_end, nice)</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;                                               <span class="comment">!output seaice fcondtop</span></div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;                                               <span class="comment">!(downwards conductive flux</span></div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;                                               <span class="comment">! used to force ice model)</span></div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;    rhokh_mix (pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,     &amp;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;               bl_levels)</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;<span class="comment">! local variables</span></div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;    nclds      <span class="comment">! Number of radiation cloud levels ( &lt;=  wet levels)</span></div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;--needed for area_cloud formulation  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;    levels_per_level,                                                   &amp;</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;                               <span class="comment">! 3 is hardwired inside ls_arcld</span></div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;    large_levels           <span class="comment">! depends on above and wet_levels</span></div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;   qn,                                                                  &amp;</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;              <span class="comment">! temporary in forced cloud calculation</span></div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;   qcl_forced,                                                          &amp;</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;   cf_forced,                                                           &amp;</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;              <span class="comment">! forced cloud water content and fraction</span></div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;   dqcl,                                                                &amp;</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;   dcfl,                                                                &amp;</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;              <span class="comment">! forced cloud water content and fraction increments</span></div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;   z_theta,                                                             &amp;</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;              <span class="comment">! height of theta levels above the surface</span></div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;   cf_base,                                                             &amp;</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;   cf_top,                                                              &amp;</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;              <span class="comment">! forced cloud fraction at cloud base and top</span></div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;   zc_depth,                                                            &amp;</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;              <span class="comment">! forced cloud depth</span></div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;   rht,                                                                 &amp;</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;   rhc,                                                                 &amp;</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;              <span class="comment">!       total and critical RH</span></div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;   alpha,                                                               &amp;</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;              <span class="comment">!       d qsat/dT (kg kg-1 K-1)</span></div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;   al,                                                                  &amp;</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;              <span class="comment">!       1 / (1 + alpha L/cp)  (no units)</span></div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;   bs     <span class="comment">!       Width of distribution (kg kg-1)</span></div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: lcrcp=lc/cp</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;<span class="comment">! Local data arrays</span></div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;    t(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end,tdims%k_end)</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">TARGET</span> :: ext_ice_frac(0:rhc_row_length+1,0:rhc_rows+1)</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;    u_inc_bl(udims_s%i_start:udims_s%i_end,                             &amp;</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;              udims_s%j_start:udims_s%j_end,bl_levels),                 &amp;</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;    v_inc_bl(vdims_s%i_start:vdims_s%i_end,                             &amp;</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;              vdims_s%j_start:vdims_s%j_end,bl_levels)</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;    interp(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),        &amp;</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;                                 <span class="comment">! Workspace in calculation of Ch_term&#39;s</span></div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;    temp1, temp2, temp3,                                                &amp;</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;                                 <span class="comment">! Temporary variables in calculation of</span></div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;                                 <span class="comment">! Ch_term&#39;s.</span></div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;    drydep_str(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">TARGET</span> ::                                                       &amp;</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;    ext_p_layer_centres(0:rhc_row_length+1,0:rhc_rows+1,                &amp;</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;                                           0:qdims%k_end),              &amp;</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;    ext_tl(0:rhc_row_length+1, 0:rhc_rows+1,qdims%k_end),               &amp;</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;    ext_ql(0:rhc_row_length+1, 0:rhc_rows+1,qdims%k_end),               &amp;</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;    ext_qcf(0:rhc_row_length+1,0:rhc_rows+1,qdims%k_end)</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;   work2d_1(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end),       &amp;</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;                                    <span class="comment">! Single-level work array (cloud)</span></div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;   plsp(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;                                    <span class="comment">! Probability of large-scale precip</span></div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: f3_at_p(:, :)</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;                                    <span class="comment">! Coriolis parameter at theta-points</span></div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;<span class="preprocessor"></span>  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;    lwp(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end),           &amp;</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;                                      <span class="comment">! Liquid water path (kg/m2)</span></div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;    iwp(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end),           &amp;</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;                                      <span class="comment">! Ice water path    (kg/m2)</span></div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;    bl_alltypes(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;                                      <span class="comment">! Boundary layer all types</span></div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;    rho_theta_levs                <span class="comment">! Rho averaged onto theta levels</span></div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;  <span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">PARAMETER</span> :: RoutineName = <span class="stringliteral">&#39;ni_imp_ctl&#39;</span></div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;<span class="comment">! Allocatable arrays for diagnostic variables - required to save memory</span></div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;<span class="comment">! when diagnostic not requested</span></div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;  <span class="keywordtype">REAL</span>,<span class="keywordtype">DIMENSION(:,:,:)</span>,<span class="keywordtype">ALLOCATABLE</span>::                                   &amp;</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;   combined_cloud,                                                      &amp;</div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;                             <span class="comment">! Mixed CCA and CF per gridbox</span></div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;   t_earliest,                                                          &amp;</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;   q_earliest,                                                          &amp;</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;   qcl_earliest,                                                        &amp;</div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;   qcf_earliest,                                                        &amp;</div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;   cf_earliest,                                                         &amp;</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;   cfl_earliest,                                                        &amp;</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;   cff_earliest,                                                        &amp;</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;   t_inc_pc2,                                                           &amp;</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;                        <span class="comment">!  temperature     increment due to PC2 homog</span></div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;   q_inc_pc2,                                                           &amp;</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;                        <span class="comment">!  humidity        increment due to PC2 homog</span></div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;   qcl_inc_pc2,                                                         &amp;</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;                        <span class="comment">!  qCL             increment due to PC2 homog</span></div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;   cfl_inc_pc2,                                                         &amp;</div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;                        <span class="comment">!  cf_liquid       increment due to PC2 homog</span></div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;   bcf_inc_pc2      <span class="comment">!  bulk cloud      increment due to PC2 homog</span></div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;</div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">DIMENSION (:,:,:)</span>, <span class="keywordtype">ALLOCATABLE</span> ::                               &amp;</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;   zeros,             &amp; <span class="comment">! Array of zero values</span></div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;   tl_force,          &amp; <span class="comment">! Forcing of TL by homogenous processes</span></div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;   qt_force,          &amp; <span class="comment">! Forcing of QT by homogenous processes</span></div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;   ccw_cca,           &amp; <span class="comment">! Convective cloud water * frac (i.e. gridbox</span></div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;                            <span class="comment">! mean ccw)</span></div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;   cca_3d               <span class="comment">! 3D array of convective cloud frac</span></div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> ::                                                  &amp;</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;    cca4comb_cld(:,:,:),&amp;<span class="comment">! Used to calculate combined cloud</span></div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;    ccb4comb_cld(:,:),  &amp;<span class="comment">! Used to calculate combined cloud</span></div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;    cct4comb_cld(:,:)    <span class="comment">! Used to calculate combined cloud</span></div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;</div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;<span class="comment">! STASHflag switches for increment diagnostics:</span></div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;  <span class="keywordtype">LOGICAL</span> ::                                                            &amp;</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;   l_apply_diag</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;                             <span class="comment">! flag to determine when to apply</span></div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;                             <span class="comment">! diagnostics when iterating</span></div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;<span class="comment">! Switch for field calculations to support STASH diagnostics</span></div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;  <span class="keywordtype">LOGICAL</span> ::                                                            &amp;</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;   l_combi_cld           <span class="comment">! combined cloud amount</span></div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;  <span class="keywordtype">TYPE</span>(<a class="code" href="structswapable__field__mod_1_1swapable__field__pointer__type.xhtml">swapable_field_pointer_type</a>) :: fields_to_swap(4) <span class="comment">! mv swapbounds</span></div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;<span class="comment">!- End of Header</span></div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;<span class="comment">!  IF (lhook) CALL dr_hook(&#39;NI_IMP_CTL&#39;,zhook_in,zhook_handle)</span></div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;  <span class="keywordflow">IF</span> ( error_code  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;<span class="comment">! ! Section BL.0 Initialisation of variables.</span></div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;<span class="comment">!     IF ( trweights1  ==  on ) THEN</span></div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;<span class="comment">!         ! Set all implict weights used by tracers to one</span></div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;<span class="comment">!         !  - overweighting not necessary since tracers</span></div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;<span class="comment">!         !    have no feedback on the diffusion coefficients</span></div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;      <span class="keywordflow">DO</span> k = 1, bl_levels</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;        alpha_tr(k) = 1.0</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;<span class="comment">!        ! Set implict weights used by tracers to those input</span></div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;      <span class="keywordflow">DO</span> k = 1, bl_levels</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;        alpha_tr(k) = <a class="code" href="namespacebl__option__mod.xhtml#a4d4d768b22319d5970e78429dc03f23b">alpha_cd</a>(k)</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;<span class="preprocessor">#if !defined(SCMA)</span></div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;<span class="preprocessor"></span><span class="comment">! Apply diags at last cycle only</span></div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;    l_apply_diag = cycleno == numcycles</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;<span class="comment">! Set diagnostic flags required for boundary layer diagnostics from</span></div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;<span class="comment">! STASHflags.</span></div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;<span class="comment">!       !        ! Note that an equivalent block of code exists in routine</span></div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;<span class="comment">!        ! ni_bl_ctl, and needs to be kept consistent.</span></div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;<span class="comment">!       !        ! Windspeed (227, 230) and u, v at 10m on &#39;B&#39; or &#39;C&#39; grid</span></div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;    su10 = (sf(209,3) .OR. sf(225,3) .OR. sf(227,3) .OR.                &amp;</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;                      sf(230,3) .OR. sf(463,3)) .AND. l_apply_diag</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;    sv10 = (sf(210,3) .OR. sf(226,3) .OR. sf(227,3) .OR.                &amp;</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;                      sf(230,3) .OR. sf(463,3)) .AND. l_apply_diag</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;    slh = sf(234,3) .AND. l_apply_diag</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;    sq_t1p5 = ( sf(236,3) .OR. sf(237,3) .OR. sf(245,3)                 &amp;</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;         .OR. sf(247,3) .OR. sf(248,3) .OR. sf(250,3) .OR. l_scrn       &amp;</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;         .OR. sf(341,3) .OR. sf(342,3)                                  &amp;</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;         .OR. sf(253,3) .OR. sf(328,3) .OR. sf(329,3)                   &amp;</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;               ) .AND. l_apply_diag</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;    sq1p5 = sq_t1p5 .AND. l_apply_diag</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;    st1p5 = sq_t1p5 .AND. l_apply_diag</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;         <span class="comment">! Sea ice topmelt (single category or multi category)</span></div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;    simlt = ( sf(235,3) .OR. sf(257,3) ) .AND. l_apply_diag</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;    smlt = sf(258,3) .AND. l_apply_diag</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;    l_ftl = (<a class="code" href="namespacebl__option__mod.xhtml#afbf42f288e9aea3bc5b38c397c92221b">fric_heating</a> /= <a class="code" href="namespacebl__option__mod.xhtml#a86e9bc58fc73bfa0e100aaf8b753c84e" title="Declarations: ">off</a>) .OR.                                  &amp;</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;            ( sf(216,3) .AND. l_apply_diag )</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;    l_fqw = (<a class="code" href="namespacebl__option__mod.xhtml#afbf42f288e9aea3bc5b38c397c92221b">fric_heating</a> /= <a class="code" href="namespacebl__option__mod.xhtml#a86e9bc58fc73bfa0e100aaf8b753c84e" title="Declarations: ">off</a>) .OR.                                  &amp;</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;            ( sf(222,3) .AND. l_apply_diag )</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;    l_taux = (<a class="code" href="namespacebl__option__mod.xhtml#afbf42f288e9aea3bc5b38c397c92221b">fric_heating</a> /= <a class="code" href="namespacebl__option__mod.xhtml#a86e9bc58fc73bfa0e100aaf8b753c84e" title="Declarations: ">off</a>) .OR.                                 &amp;</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;             ( ( sf(219,3) .OR. sf(221,3) .OR. sf(463,3) ) .AND.        &amp;</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;               l_apply_diag  )</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;    l_tauy = (<a class="code" href="namespacebl__option__mod.xhtml#afbf42f288e9aea3bc5b38c397c92221b">fric_heating</a> /= <a class="code" href="namespacebl__option__mod.xhtml#a86e9bc58fc73bfa0e100aaf8b753c84e" title="Declarations: ">off</a>) .OR.                                 &amp;</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;             ( ( sf(220,3) .OR. sf(221,3) .OR. sf(463,3) ) .AND.        &amp;</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;               l_apply_diag  )</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;    bl_diag%l_u_incr = sf(185,3) .AND. l_apply_diag</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;    bl_diag%l_v_incr = sf(186,3) .AND. l_apply_diag</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;    bl_diag%l_t_incr = (sf(181,9).OR.sf(181,3)) .AND. l_apply_diag</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;    bl_diag%l_tl_incr = sf(189,3) .AND. l_apply_diag</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;    bl_diag%l_q_incr = (sf(182,9).OR.sf(182,3).OR.<a class="code" href="namespacedynamics__input__mod.xhtml#a7c6b718ea6d9c2ebe60128c60caab726">l_check_moist_inc</a>)    &amp;</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;                        .AND. l_apply_diag</div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;    bl_diag%l_qtl_incr = sf(190,3) .AND. l_apply_diag</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;    bl_diag%l_qcl_incr =(sf(183,9).OR.sf(183,3).OR.sf(170,3)            &amp;</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;                        .OR.sf(171,3).OR.<a class="code" href="namespacedynamics__input__mod.xhtml#a7c6b718ea6d9c2ebe60128c60caab726">l_check_moist_inc</a>).AND. l_apply_diag</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;    bl_diag%l_qcf_incr = (sf(184,3).OR.sf(172,3).OR.sf(173,3)           &amp;</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;                        .OR.<a class="code" href="namespacedynamics__input__mod.xhtml#a7c6b718ea6d9c2ebe60128c60caab726">l_check_moist_inc</a>) .AND. l_apply_diag</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;    bl_diag%l_cf_incr = sf(192,3) .AND. l_apply_diag</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;    bl_diag%l_cfl_incr = (sf(193,3).OR.sf(176,3).OR.sf(177,3))          &amp;</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;                     .AND. l_apply_diag</div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;    bl_diag%l_cff_incr = (sf(194,3).OR.sf(178,3).OR.sf(179,3))          &amp;</div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;                     .AND. l_apply_diag</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;<span class="comment">! Flag required for pre-calculation of cloud-related fields needed for</span></div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;<span class="comment">! cloud and vis diagnostics. Not duplicated in ni_bl_ctl.</span></div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;</div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;         l_combi_cld = ( l_plsp .OR.                                    &amp;</div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;                 sf(208,9) .OR. sf(209,9) .OR. sf(210,9) .OR. sf(211,9) &amp;</div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;            .OR. sf(212,9) .OR. sf(213,9) .OR. sf(214,9) .OR. sf(215,9) &amp;</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;            .OR. sf(216,9) .OR. sf(217,9) .OR. sf(223,9) .OR. sf(231,9) &amp;</div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;            .OR. sf(232,9) .OR. sf(233,9) .OR. sf(234,9)                &amp;</div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;            ) .AND. l_apply_diag</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;</div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;<span class="preprocessor"></span><span class="comment">! Always apply diags in SCM if stash flags are on.</span></div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;    l_apply_diag = .true.</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;<span class="comment">! diagnostic switches to be passed in</span></div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;<span class="comment">! These could be set using the input diagnostic requests to avoid</span></div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;<span class="comment">! un-necessary diagnostic calculations. Currently they are either</span></div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;<span class="comment">! on, if the diagnostic can be output, or</span></div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;<span class="comment">! off, if it can&#39;t.</span></div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;    su10=.true.               <span class="comment">! Calculate u10m</span></div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;    sv10=.true.               <span class="comment">!    &quot;      v10m</span></div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;    slh=.true.                <span class="comment">!    &quot;      latent_heat</span></div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;    sq1p5 =.true.             <span class="comment">!    &quot;      q1p5m</span></div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;    st1p5=.true.              <span class="comment">!    &quot;      t1p5m</span></div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;    simlt=.true.              <span class="comment">!    &quot;      sice_mlt_htf</span></div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;    smlt=.true.               <span class="comment">!    &quot;      snomlt_surf_htf</span></div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;    sq_t1p5=.false.           <span class="comment">! This can cause diagnostics_bl to</span></div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;                                <span class="comment">! change the values of q1p5m and t1p5m.</span></div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;    l_ftl = .true.</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;    l_fqw = .true.</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;    l_taux = .true.</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;    l_tauy = .true.</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;      <span class="comment">! The following set true or diagnostics_bl will crash</span></div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;    bl_diag%l_u_incr=.true.</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;    bl_diag%l_v_incr=.true.</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;    bl_diag%l_t_incr=.false.</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;    bl_diag%l_tl_incr=.true.</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;    bl_diag%l_q_incr=.true.</div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;    bl_diag%l_qtl_incr=.true.</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;    bl_diag%l_qcl_incr=.true.</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;    bl_diag%l_qcf_incr=.true.</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;    bl_diag%l_cf_incr  = .false.</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;    bl_diag%l_cfl_incr = .false.</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;    bl_diag%l_cff_incr = .false.</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;    l_combi_cld = l_plsp</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;<span class="preprocessor"></span>      <span class="comment">! Note this will be affected by the anvil scheme if it is</span></div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;      <span class="comment">! applied, i.e the cca at the anvil base may have been</span></div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;      <span class="comment">! scaled by the anvil tower_factor.</span></div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#af3aff8585bb16fdc7cddc62da16fd0d7">l_3d_cca</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;      <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;        <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;          <span class="keywordflow">IF</span> (lcbase(i,j) /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;            cca_at_base(i,j) = cca(i,j,lcbase(i,j))</div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;            cca_at_base(i,j) = 0.0</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;        <span class="comment">! CCA is only dimensioned with one level</span></div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;      <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;        <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;          <span class="keywordflow">IF</span> (lcbase(i,j) /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;            cca_at_base(i,j) = cca(i,j,1)</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;            cca_at_base(i,j) = 0.0</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! l_3d_cca</span></div><div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;</div><div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;<span class="comment">! Intercept values of physics increments before being updated by</span></div><div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;<span class="comment">! implicit solver for optional output of bl wind increments</span></div><div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;<span class="comment">! We need to store information about the increments of the temperature</span></div><div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;<span class="comment">! and moisture variables, so copy these to the _earliest variables.</span></div><div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;    <span class="keywordflow">IF</span> (bl_diag%l_t_incr .OR. bl_diag%l_tl_incr .OR. <a class="code" href="namespacecloud__inputs__mod.xhtml#ae04fb44426849e3f308912a8311bb53b">l_pc2</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;</div><div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;      <span class="keyword">ALLOCATE</span> ( t_earliest(tdims%i_start:tdims%i_end,                  &amp;</div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;                            tdims%j_start:tdims%j_end,tdims%k_end) )</div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;</div><div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;<span class="comment">! Hold initial value of Temperature</span></div><div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;      <span class="keywordflow">DO</span> k = 1, tdims%k_end</div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;        <span class="keywordflow">DO</span> j = tdims%j_start, tdims%j_end</div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;          <span class="keywordflow">DO</span> i = tdims%i_start, tdims%i_end</div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;            t_earliest(i,j,k) = t_latest(i,j,k)</div><div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;      <span class="keyword">ALLOCATE</span>( t_earliest(1,1,1) )</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;<span class="keywordflow">    END IF</span>                   <span class="comment">! on STASHflags or PC2</span></div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;    <span class="keywordflow">IF</span>(bl_diag%l_q_incr .OR. bl_diag%l_qtl_incr                         &amp;</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;       .OR. bl_diag%l_qcl_incr .OR. bl_diag%l_tl_incr                   &amp;</div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;       .OR. bl_diag%l_qcf_incr .OR. <a class="code" href="namespacecloud__inputs__mod.xhtml#ae04fb44426849e3f308912a8311bb53b">l_pc2</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;</div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;      <span class="keyword">ALLOCATE</span> ( q_earliest(qdims%i_start:qdims%i_end,                  &amp;</div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;                            qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;      <span class="keyword">ALLOCATE</span> ( qcl_earliest(qdims%i_start:qdims%i_end,                &amp;</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;                              qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;      <span class="keyword">ALLOCATE</span> ( qcf_earliest(qdims%i_start:qdims%i_end,                &amp;</div><div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;                              qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;      <span class="keyword">ALLOCATE</span> ( cf_earliest(qdims%i_start:qdims%i_end,                 &amp;</div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;                             qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;      <span class="keyword">ALLOCATE</span> ( cfl_earliest(qdims%i_start:qdims%i_end,                &amp;</div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;                              qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;      <span class="keyword">ALLOCATE</span> ( cff_earliest(qdims%i_start:qdims%i_end,                &amp;</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;                              qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;</div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;<span class="comment">! Hold initial values of wet parameters</span></div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;      <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;            q_earliest(i,j,k)   = q_latest(i,j,k)</div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;            qcl_earliest(i,j,k) = qcl_latest(i,j,k)</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;            qcf_earliest(i,j,k) = qcf_latest(i,j,k)</div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;            cf_earliest(i,j,k)  = cf_latest(i,j,k)</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;            cfl_earliest(i,j,k) = cfl_latest(i,j,k)</div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;            cff_earliest(i,j,k) = cff_latest(i,j,k)</div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;</div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;      <span class="keyword">ALLOCATE</span> ( q_earliest(1,1,1) )</div><div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;      <span class="keyword">ALLOCATE</span> ( qcl_earliest(1,1,1) )</div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;      <span class="keyword">ALLOCATE</span> ( qcf_earliest(1,1,1) )</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;      <span class="keyword">ALLOCATE</span> ( cf_earliest(1,1,1) )</div><div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;      <span class="keyword">ALLOCATE</span> ( cfl_earliest(1,1,1) )</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;      <span class="keyword">ALLOCATE</span> ( cff_earliest(1,1,1) )</div><div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;</div><div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;<span class="keywordflow">    END IF</span>                  <span class="comment">! on STASHflags or PC2</span></div><div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;</div><div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;<span class="comment">! ! Section BL.1 Calculate T at old time level.</span></div><div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;<span class="comment">! Modified to use latest values to avoid time-level inconsistencies</span></div><div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;<span class="comment">! with cloud data.</span></div><div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;<span class="comment">!    DO k = 1, bl_levels</span></div><div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;      <span class="keywordflow">DO</span> j = tdims%j_start, tdims%j_end</div><div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;        <span class="keywordflow">DO</span> i = tdims%i_start, tdims%i_end</div><div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;          t(i,j,k) = theta(i,j,k) * exner_theta_levels(i,j,k)</div><div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;</div><div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;<span class="comment">!  Initialise output arrays to zero</span></div><div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;    <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;      <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;        ecan(i,j)=0.0</div><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;        ei(i,j) = 0.0</div><div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;        snowmelt(i,j)=0.0</div><div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;<span class="comment">! ! Section BL.2  Call Implicit solver</span></div><div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;<span class="comment">!               Call tracer mixing for qcf.</span></div><div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;<span class="comment">!               Call tracer mixing for other tracers.</span></div><div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;<span class="comment">!       Density of the lowest level is required for the transient screen</span></div><div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;<span class="comment">!       diagnostic. (Note: rho1 is recalculated in part 6 for</span></div><div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;<span class="comment">!       visibility, so a minor efficiency saving could be made.)</span></div><div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;    <span class="keywordflow">IF</span> (iscrntdiag == ip_scrndecpl2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;      <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;        <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;          rho1(i,j)=rho(i,j,1)/(<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,1)*<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,1))</div><div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;<span class="comment">!         Allocate the Coriolis parameter on the p-grid and interpolate</span></div><div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;<span class="comment">!         from the u-grid.</span></div><div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;      <span class="keyword">ALLOCATE</span>(f3_at_p(pdims%i_start:pdims%i_end,                       &amp;</div><div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;                       pdims%j_start:pdims%j_end))</div><div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;<span class="preprocessor">#if !defined(SCMA)</span></div><div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;<span class="preprocessor"></span>      <span class="keyword">CALL </span><a class="code" href="namespaceu__to__p__mod.xhtml#abec25da0a0e72ae2bd1efd5a110125fb">u_to_p</a> (f3_at_u,                                             &amp;</div><div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;                        udims_s%i_start,udims_s%i_end,                  &amp;</div><div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;                        udims_s%j_start,udims_s%j_end,                  &amp;</div><div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;                        pdims%i_start,pdims%i_end,                      &amp;</div><div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;                        pdims%j_start,pdims%j_end,                      &amp;</div><div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;                        1,                                              &amp;</div><div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;                        <a class="code" href="namespaceproc__info__mod.xhtml#a9d5aa0d84f9ab4d047647a65804a8650">model_domain</a>,<a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>, f3_at_p)</div><div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;</div><div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;      <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;<span class="comment">!         This routine does not fill the poles in a global model, so</span></div><div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;<span class="comment">!         the numbers are filled in by hand.</span></div><div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespaceproc__info__mod.xhtml#a9d5aa0d84f9ab4d047647a65804a8650">model_domain</a>  ==  mt_global) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;</div><div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>(<a class="code" href="namespaceum__parparams.xhtml#a055cccbf23dd97e54f86b7be2fbfccb3">psouth</a>) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;            f3_at_p(:,pdims%j_start) = -two_omega</div><div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>(<a class="code" href="namespaceum__parparams.xhtml#a575a86c6ed199d617f169b0bbd20ec88">pnorth</a>) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;            f3_at_p(:,pdims%j_end) = two_omega</div><div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! vatpoles</span></div><div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;</div><div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;<span class="preprocessor"></span><span class="comment">! unsure what will happen with combination of endgame+scm</span></div><div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;      f3_at_p(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end)      &amp;</div><div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;    = f3_at_u(udims%i_start:udims%i_end,udims%j_start:udims%j_end)</div><div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;      <span class="keyword">ALLOCATE</span>(f3_at_p(1,1))</div><div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;</div><div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;<span class="comment">! DEPENDS ON: imp_solver</span></div><div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;    <span class="keyword">CALL </span>imp_solver(ntiles, land_points, nice, nice_use,                &amp;</div><div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;<span class="comment">! IN values defining model domain, vertical grid of model atmosphere</span></div><div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160; bl_levels,<a class="code" href="namespacebl__option__mod.xhtml#a4d4d768b22319d5970e78429dc03f23b">alpha_cd</a>,                                                    &amp;</div><div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;<span class="comment">! IN U and V momentum fields and increments</span></div><div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160; u, v, r_u, r_v,                                                        &amp;</div><div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;<span class="comment">! IN soil/vegetation/land surface data :</span></div><div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160; land_index,dsm_levels, tile_frac,canopy,fland,                         &amp;</div><div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160; flandg(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),           &amp;</div><div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;<span class="comment">! IN sea/sea-ice data :</span></div><div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160; ice_fract,di_ncat,ice_fract_ncat,k_sice, u_0, v_0,                     &amp;</div><div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;<span class="comment">! IN cloud data</span></div><div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160; q(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,1:bl_levels),    &amp;</div><div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160; qcf(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,1:bl_levels),  &amp;</div><div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160; qcl(qdims%i_start:qdims%i_end,qdims%j_start:qdims%j_end,1:bl_levels),  &amp;</div><div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160; qcf_latest, qcl_latest, t,                                             &amp;</div><div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;<span class="comment">! IN everything not covered so far :</span></div><div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160; rho_wet_theta, p_star, surf_radflux,                                   &amp;</div><div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;<span class="comment">! IN variables required in IMP_SOLVER</span></div><div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;  alpha1, ashtf, bq_gb, bt_gb,dtrdz_charney_grid, rdz_charney_grid,     &amp;</div><div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;  dtrdz_u, dtrdz_v, rdz_u, rdz_v, fraca, rhokh_tile, smc, chr1p5m,      &amp;</div><div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;  resfs,z0hssi,z0mssi,cdr10m_u, cdr10m_v, z1_tq, zh,rhokm_u,rhokm_v,    &amp;</div><div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;<span class="comment">! IN variables for new BL solver</span></div><div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;  bl_type_1,bl_type_2,                                                  &amp;</div><div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;<span class="comment">! IN additional variables for JULES</span></div><div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;  tile_pts,tile_index,canhc_tile,flake,wt_ext_tile,lw_down,sw_tile,     &amp;</div><div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;  alpha1_sice,ashtf_tile,resft,rhokh_sice,                              &amp;</div><div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;  z0h_tile,z0m_tile,chr1p5m_sice,flandg_u,flandg_v,                     &amp;</div><div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;  <a class="code" href="namespaceum__input__control__mod.xhtml#afcfb603e4c2bcc2bf5d129963425fbbb">l_co2_interactive</a>, co2_mmr, co2(:, :, 1), rho1, f3_at_p, ustargbm,    &amp;</div><div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;  emis_tile,t_soil,tstar_sea,snow_tile,                                 &amp;</div><div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;<span class="comment">! IN stash flags :  simlt, smlt, slh, sq1p5, st1p5, su10, sv10,l_ftl,l_fqw,l_taux,l_tauy, &amp;</span></div><div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;  bl_diag, lq_mix_bl, l_flux_bc,                                        &amp;</div><div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;<span class="comment">! INOUT data :</span></div><div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;  dtstar_tile,dtstar,ti,tstar_sice_cat,tstar_ssi,                       &amp;</div><div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;  tstar_tile, t_latest, q_latest,                                       &amp;</div><div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;<span class="comment">! INOUT  diagnostic started in bdy_layr not requiring stash flags :</span></div><div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;  fqt_ice,ftl_ice,fqt,fqt_tile,epot_tile,ftl,ftl_tile,rhokh,            &amp;</div><div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;  taux,tauy,taux_land,taux_ssi,tauy_land,tauy_ssi,                      &amp;</div><div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;  tscrndcl_ssi, tscrndcl_tile, tstbtrans,                               &amp;</div><div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;<span class="comment">! INOUT additional variables for JULES</span></div><div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;  radnet_sice,olr,                                                      &amp;</div><div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;<span class="comment">! OUT u and v increments</span></div><div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;  u_inc_bl, v_inc_bl,                                                   &amp;</div><div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;<span class="comment">! OUT  diagnostic not requiring stash flags :</span></div><div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;  rhokh_mix, sea_ice_htf,                                               &amp;</div><div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;<span class="comment">! OUT diagnostic requiring stash flags :</span></div><div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;  sice_mlt_htf, snomlt_surf_htf, latent_heat, q1p5m, t1p5m, u10m, v10m, &amp;</div><div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;<span class="comment">! OUT additional variables for JULES</span></div><div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;  ti_gb,t_surf,tstar_land,tstar_sice,e_sea,h_sea,le_tile,radnet_tile,   &amp;</div><div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;  esoil_tile,surf_ht_flux_gb,surf_ht_flux_land,surf_ht_flux_sice,       &amp;</div><div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;  surf_htf_tile,ei_tile,q1p5m_tile,t1p5m_tile,ecan_tile,melt_tile,      &amp;</div><div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;  e_ssi,ei_sice,ftl_ssi,error_code,                                     &amp;</div><div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;<span class="comment">! OUT data required elsewhere in um system :</span></div><div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;  ecan, ei, es, ext, snowmelt                                           &amp;</div><div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;  )</div><div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;</div><div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;<span class="comment">!       Release space used for the screen diagnostic.</span></div><div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;    <span class="keyword">DEALLOCATE</span>(f3_at_p)</div><div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;</div><div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;<span class="comment">! add boundary layer increment to R_u and R_v</span></div><div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;    <span class="keywordflow">IF</span> ( bl_diag%l_u_incr ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;<span class="comment">! add boundary layer increment to R_u and R_v</span></div><div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;      <span class="keyword">ALLOCATE</span> ( bl_diag%u_incr(udims%i_start:udims%i_end,              &amp;</div><div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;                                udims%j_start:udims%j_end,              &amp;</div><div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;                                udims%k_start:udims%k_end) )</div><div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;      bl_diag%u_incr = 0.</div><div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;      <span class="keywordflow">DO</span> k = 1, bl_levels</div><div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;        <span class="keywordflow">DO</span> j = udims%j_start, udims%j_end</div><div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;          <span class="keywordflow">DO</span> i = udims%i_start, udims%i_end</div><div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;            bl_diag%u_incr(i,j,k) = u_inc_bl(i,j,k) - r_u(i,j,k)</div><div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;            r_u(i,j,k) = u_inc_bl(i,j,k)</div><div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;      <span class="keyword">ALLOCATE</span>( bl_diag%u_incr(1,1,1) )</div><div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;      <span class="keywordflow">DO</span> k = 1, bl_levels</div><div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;        <span class="keywordflow">DO</span> j = udims%j_start, udims%j_end</div><div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;          <span class="keywordflow">DO</span> i = udims%i_start, udims%i_end</div><div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;            r_u(i,j,k) = u_inc_bl(i,j,k)</div><div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;</div><div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;    <span class="keywordflow">IF</span> ( bl_diag%l_v_incr ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;      <span class="keyword">ALLOCATE</span> ( bl_diag%v_incr(vdims%i_start:vdims%i_end,              &amp;</div><div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;                                vdims%j_start:vdims%j_end,              &amp;</div><div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;                                vdims%k_start:vdims%k_end) )</div><div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;      bl_diag%v_incr = 0.</div><div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;      <span class="keywordflow">DO</span> k = 1, bl_levels</div><div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;        <span class="keywordflow">DO</span> j = vdims%j_start, vdims%j_end</div><div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;          <span class="keywordflow">DO</span> i = vdims%i_start, vdims%i_end</div><div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;            bl_diag%v_incr(i,j,k) = v_inc_bl(i,j,k) - r_v(i,j,k)</div><div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;            r_v(i,j,k) = v_inc_bl(i,j,k)</div><div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;      <span class="keyword">ALLOCATE</span>( bl_diag%v_incr(1,1,1) )</div><div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;      <span class="keywordflow">DO</span> k = 1, bl_levels</div><div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;        <span class="keywordflow">DO</span> j = vdims%j_start, vdims%j_end</div><div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;          <span class="keywordflow">DO</span> i = vdims%i_start, vdims%i_end</div><div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;            r_v(i,j,k) = v_inc_bl(i,j,k)</div><div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;</div><div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;<span class="comment">! Call tr_mix to mix qcf</span></div><div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;<span class="comment">! output qcf_flux in T to save workspace</span></div><div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;<span class="comment">! Pass in a zero field for source terms.</span></div><div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;    <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;      <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;        interp(i,j) = 0.</div><div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;</div><div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;    <span class="keyword">CALL  </span><a class="code" href="tr__mix_8f90.xhtml#a46b8187d395ca81bf4ff84e34cf7173c">tr_mix</a> (                                                      &amp;</div><div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;<span class="comment">! IN fields</span></div><div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;          bl_levels, alpha_tr, rhokh_mix(:,:,2:), rhokh_mix(:,:,1),     &amp;</div><div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;          dtrdz_charney_grid,interp, interp,                            &amp;</div><div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;          kent, we_lim, t_frac, zrzi,                                   &amp;</div><div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;          kent_dsc, we_lim_dsc, t_frac_dsc, zrzi_dsc,                   &amp;</div><div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;          zh ,zhsc, z_half,                                             &amp;</div><div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;<span class="comment">! INOUT / OUT fields</span></div><div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;          qcf_latest,t,drydep_str                                       &amp;</div><div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;          )</div><div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;</div><div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;<span class="comment">!Call tr_mix to mix w in the vertical when the subgrid turbulence</span></div><div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;<span class="comment">!scheme is activated</span></div><div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaceturb__diff__mod.xhtml#a0ae64159bea8aff378de3c4e2d6bc0ce">l_subfilter_vert</a> .OR. <a class="code" href="namespaceturb__diff__mod.xhtml#a9ab4e3c30f160039ea6bf8dd23590e6d">l_subfilter_horiz</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;</div><div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;      <span class="keyword">ALLOCATE</span> (w_int(wdims%i_start:wdims%i_end,                        &amp;</div><div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;                      wdims%j_start:wdims%j_end,bl_levels) )</div><div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;</div><div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;      <span class="keywordflow">DO</span> k = 1, bl_levels</div><div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;        <span class="keywordflow">DO</span> j = wdims%j_start, wdims%j_end</div><div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;          <span class="keywordflow">DO</span> i = wdims%i_start, wdims%i_end</div><div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;            w_int(i,j,k) = w(i,j,k)</div><div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;</div><div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;<span class="comment">!rhokm should be used in mixing of w.  rhokh_mix is used instead to avoid</span></div><div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;<span class="comment">!passing around rhokm on p-points.</span></div><div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;</div><div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;      <span class="keyword">CALL  </span><a class="code" href="tr__mix_8f90.xhtml#a46b8187d395ca81bf4ff84e34cf7173c">tr_mix</a> (                                                    &amp;</div><div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;<span class="comment">! In fields</span></div><div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;          bl_levels, <a class="code" href="namespacebl__option__mod.xhtml#a4d4d768b22319d5970e78429dc03f23b">alpha_cd</a>,rhokh_mix(:,:,2:), rhokh_mix(:,:,1),      &amp;</div><div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;          dtrdz_charney_grid,interp, interp,                            &amp;</div><div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;          kent, we_lim, t_frac, zrzi,                                   &amp;</div><div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;          kent_dsc, we_lim_dsc, t_frac_dsc, zrzi_dsc,                   &amp;</div><div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;          zh ,zhsc, z_half,                                             &amp;</div><div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;<span class="comment">! INOUT / OUT fields</span></div><div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;          w_int,t,drydep_str                                            &amp;</div><div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;          )</div><div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;</div><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;      <span class="keywordflow">DO</span> k = 1, bl_levels</div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;        <span class="keywordflow">DO</span> j = wdims%j_start, wdims%j_end</div><div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;          <span class="keywordflow">DO</span> i = wdims%i_start, wdims%i_end</div><div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;            r_w(i,j,k) = r_w(i,j,k) + (w_int(i,j,k) - w(i,j,k))</div><div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;      <span class="keyword">DEALLOCATE</span> (w_int)</div><div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;<span class="keywordflow">    END IF</span>     <span class="comment">!L_subfilter_vert or L_subfilter_horiz</span></div><div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;</div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;<span class="comment">! apply BL tracer mixing and gravitational settling of dust</span></div><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;<span class="comment">! on the last cycle only</span></div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;    <span class="keywordflow">IF</span> ( cycleno == numcycles ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;</div><div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;<span class="comment">! Gravitational settling of mineral dust</span></div><div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;</div><div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespacedust__parameters__mod.xhtml#ac897534dc97f74f123a81079a464283b" title="Parameters fundamental to the dust scheme!&gt; (Details of dust properties/size divisions etc...">l_dust</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;</div><div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;        <span class="keyword">ALLOCATE</span>( dust_all(tdims%i_start:tdims%i_end,                   &amp;</div><div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;                           tdims%j_start:tdims%j_end,                   &amp;</div><div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;                           1:tdims%k_end,ndiv) )</div><div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;</div><div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;        <span class="keywordflow">DO</span> k = 1, tdims%k_end</div><div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;          <span class="keywordflow">DO</span> j = tdims%j_start, tdims%j_end</div><div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;            <span class="keywordflow">DO</span> i = tdims%i_start, tdims%i_end</div><div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;              t(i,j,k)=theta(i,j,k)*exner_theta_levels(i,j,k)</div><div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;              dust_all(i,j,k,1)=dust_div1(i,j,k)</div><div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;              dust_all(i,j,k,2)=dust_div2(i,j,k)</div><div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;              <span class="keywordflow">IF</span> (.NOT.l_twobin_dust) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;                dust_all(i,j,k,3)=dust_div3(i,j,k)</div><div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;                dust_all(i,j,k,4)=dust_div4(i,j,k)</div><div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;                dust_all(i,j,k,5)=dust_div5(i,j,k)</div><div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;                dust_all(i,j,k,6)=dust_div6(i,j,k)</div><div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;<span class="keywordflow">            END DO</span> <span class="comment">!i</span></div><div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">!j</span></div><div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">!k</span></div><div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;</div><div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;        <span class="keywordflow">DO</span> idiv = 1, ndiv</div><div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;</div><div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;<span class="comment">! DEPENDS ON: gravsett</span></div><div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;          <span class="keyword">CALL </span><a class="code" href="gravsett_8f90.xhtml#afcf28bf8fa1f334d0f104fbb3b0e035a" title="Subroutine GRAVSETT!&gt; Purpose: To perform gravitational settlement of tracer particles Subroutine GRA...">gravsett</a>(                                                &amp;</div><div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;     <a class="code" href="namespacedust__parameters__mod.xhtml#a099a3d7d36bee342be39830e047ff4b0">drep</a>(idiv),<a class="code" href="namespacedust__parameters__mod.xhtml#a8327d8f2d78c6d8e99e46db681161e56" title="Physical properties of the dust. ">rhop</a>,p_layer_centres,p_layer_boundaries,t,              &amp;</div><div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;     dust_all(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end,      &amp;</div><div class="line"><a name="l01632"></a><span class="lineno"> 1632</span>&#160;              pdims%k_start:pdims%k_end,idiv),                          &amp;</div><div class="line"><a name="l01633"></a><span class="lineno"> 1633</span>&#160;     drydep2(tdims%i_start:tdims%i_end,tdims%j_start:tdims%j_end,       &amp;</div><div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;     idiv))</div><div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;</div><div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;</div><div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;        <span class="keywordflow">DO</span> k = 1, tdims%k_end</div><div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;          <span class="keywordflow">DO</span> j = tdims%j_start, tdims%j_end</div><div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;            <span class="keywordflow">DO</span> i = tdims%i_start, tdims%i_end</div><div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;              dust_div1(i,j,k)=dust_all(i,j,k,1)</div><div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;              dust_div2(i,j,k)=dust_all(i,j,k,2)</div><div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;              <span class="keywordflow">IF</span>(.NOT.l_twobin_dust) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;                dust_div3(i,j,k)=dust_all(i,j,k,3)</div><div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;                dust_div4(i,j,k)=dust_all(i,j,k,4)</div><div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;                dust_div5(i,j,k)=dust_all(i,j,k,5)</div><div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;                dust_div6(i,j,k)=dust_all(i,j,k,6)</div><div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;<span class="keywordflow">            END DO</span> <span class="comment">!ROW_LENGTH</span></div><div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">!ROWS</span></div><div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">!MODEL_LEVELS</span></div><div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;        <span class="keyword">DEALLOCATE</span> (dust_all)</div><div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">!L_DUST</span></div><div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;</div><div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;<span class="comment">! Mixing for all non-qcf tracers done in subroutine</span></div><div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;      <span class="keywordflow">IF</span> ( <a class="code" href="namespaceum__input__control__mod.xhtml#a0bd0498aa08dacb21be20b0c5df315a0">l_bl_tracer_mix</a> .OR. <a class="code" href="namespacerun__aerosol__mod.xhtml#a2a0e2fefafaaa254aac4cf8cd4a291e1" title="Control logicals for Classic aerosol options ">l_sulpc_so2</a> .OR. <a class="code" href="namespacerun__aerosol__mod.xhtml#a49e39d25a38244027b312e0298566110" title="Soot scheme. ">l_soot</a> .OR.            &amp;</div><div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;           <a class="code" href="namespaceum__input__control__mod.xhtml#afcfb603e4c2bcc2bf5d129963425fbbb">l_co2_interactive</a> .OR. <a class="code" href="namespacemurk__inputs__mod.xhtml#a86d12abdf2733c53d3b7b8c6a2edbde4" title="=========================================================================== LOGICAL options set from ...">l_murk</a> .OR. <a class="code" href="namespacerun__aerosol__mod.xhtml#ab289e7ad790cc1441c12d9265336b626" title="Biomass scheme. ">l_biomass</a> .OR.            &amp;</div><div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;           <a class="code" href="namespacedust__parameters__mod.xhtml#ac897534dc97f74f123a81079a464283b" title="Parameters fundamental to the dust scheme!&gt; (Details of dust properties/size divisions etc...">l_dust</a> .OR. <a class="code" href="namespacerun__aerosol__mod.xhtml#a08c24874ad5cdfed2445a206552c249d" title="OCFF (Organic Carbon from Fossil Fuels) scheme. ">l_ocff</a> .OR. <a class="code" href="namespacerun__aerosol__mod.xhtml#a66e1005b9ceceb05bcd815d826b99c24" title="Ammonium nitrate aerosol. ">l_nitrate</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;</div><div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;<span class="comment">! DEPENDS ON: bl_trmix_dd</span></div><div class="line"><a name="l01661"></a><span class="lineno"> 1661</span>&#160;        <span class="keyword">CALL </span>bl_trmix_dd(                                               &amp;</div><div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160;<span class="comment">! IN arguments</span></div><div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;             bl_levels,dtrdz_charney_grid,tr_vars,                      &amp;</div><div class="line"><a name="l01664"></a><span class="lineno"> 1664</span>&#160;             alpha_tr, rhokh_mix, p_star,                               &amp;</div><div class="line"><a name="l01665"></a><span class="lineno"> 1665</span>&#160;<span class="comment">! IN Control logicals</span></div><div class="line"><a name="l01666"></a><span class="lineno"> 1666</span>&#160;             l_use_cariolle,                                            &amp;</div><div class="line"><a name="l01667"></a><span class="lineno"> 1667</span>&#160;<span class="comment">! IN Emissions fields</span></div><div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160;             dust_flux, co2_emits, co2flux, npp, resp_s_tot,            &amp;</div><div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;<span class="comment">! IN variables for tr_mix</span></div><div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;             kent, we_lim, t_frac, zrzi,                                &amp;</div><div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;             kent_dsc, we_lim_dsc, t_frac_dsc, zrzi_dsc,                &amp;</div><div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;             zh, zhsc, z_half,                                          &amp;</div><div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;<span class="comment">! IN for dry deposition of tracers</span></div><div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160;            rho_aresist, aresist,                                       &amp;</div><div class="line"><a name="l01675"></a><span class="lineno"> 1675</span>&#160;             r_b_dust,t_surf, land_points, land_index, ice_fract,       &amp;</div><div class="line"><a name="l01676"></a><span class="lineno"> 1676</span>&#160;<span class="comment">! IN variables for sresfact</span></div><div class="line"><a name="l01677"></a><span class="lineno"> 1677</span>&#160;            ntype, ntiles, tile_pts, tile_index, tile_frac,             &amp;</div><div class="line"><a name="l01678"></a><span class="lineno"> 1678</span>&#160;            canopy, catch, snow_tile, gc,                               &amp;</div><div class="line"><a name="l01679"></a><span class="lineno"> 1679</span>&#160;            aresist_tile, resist_b_tile,                                &amp;</div><div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;        flandg(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),    &amp;</div><div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;<span class="comment">! INOUT Fields to mix</span></div><div class="line"><a name="l01682"></a><span class="lineno"> 1682</span>&#160;             aerosol(tdims_s%i_start,tdims_s%j_start,1),                &amp;</div><div class="line"><a name="l01683"></a><span class="lineno"> 1683</span>&#160;             free_tracers,                                              &amp;</div><div class="line"><a name="l01684"></a><span class="lineno"> 1684</span>&#160;             ozone_tracer(tdims_s%i_start,tdims_s%j_start,1),           &amp;</div><div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;             drydep_str, resist_b,                                      &amp;</div><div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;<span class="comment">! Mineral dust</span></div><div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;             dust_div1(tdims_s%i_start,tdims_s%j_start,1),              &amp;</div><div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;             dust_div2(tdims_s%i_start,tdims_s%j_start,1),              &amp;</div><div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;             dust_div3(tdims_s%i_start,tdims_s%j_start,1),              &amp;</div><div class="line"><a name="l01690"></a><span class="lineno"> 1690</span>&#160;             dust_div4(tdims_s%i_start,tdims_s%j_start,1),              &amp;</div><div class="line"><a name="l01691"></a><span class="lineno"> 1691</span>&#160;             dust_div5(tdims_s%i_start,tdims_s%j_start,1),              &amp;</div><div class="line"><a name="l01692"></a><span class="lineno"> 1692</span>&#160;             dust_div6(tdims_s%i_start,tdims_s%j_start,1),              &amp;</div><div class="line"><a name="l01693"></a><span class="lineno"> 1693</span>&#160;<span class="comment">! Sulphur cycle</span></div><div class="line"><a name="l01694"></a><span class="lineno"> 1694</span>&#160;             so2(tdims_s%i_start,tdims_s%j_start,1),                    &amp;</div><div class="line"><a name="l01695"></a><span class="lineno"> 1695</span>&#160;             dms(tdims_s%i_start,tdims_s%j_start,1),                    &amp;</div><div class="line"><a name="l01696"></a><span class="lineno"> 1696</span>&#160;             so4_aitken(tdims_s%i_start,tdims_s%j_start,1),             &amp;</div><div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160;             so4_accu(tdims_s%i_start,tdims_s%j_start,1),               &amp;</div><div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160;             so4_diss(tdims_s%i_start,tdims_s%j_start,1),               &amp;</div><div class="line"><a name="l01699"></a><span class="lineno"> 1699</span>&#160;             nh3(tdims_s%i_start,tdims_s%j_start,1),                    &amp;</div><div class="line"><a name="l01700"></a><span class="lineno"> 1700</span>&#160;<span class="comment">! Soot cycle</span></div><div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160;             soot_new(tdims_s%i_start,tdims_s%j_start,1),               &amp;</div><div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160;             soot_aged(tdims_s%i_start,tdims_s%j_start,1),              &amp;</div><div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;             soot_cld(tdims_s%i_start,tdims_s%j_start,1),               &amp;</div><div class="line"><a name="l01704"></a><span class="lineno"> 1704</span>&#160;<span class="comment">! Biomass aerosol</span></div><div class="line"><a name="l01705"></a><span class="lineno"> 1705</span>&#160;             bmass_new(tdims_s%i_start,tdims_s%j_start,1),              &amp;</div><div class="line"><a name="l01706"></a><span class="lineno"> 1706</span>&#160;             bmass_agd(tdims_s%i_start,tdims_s%j_start,1),              &amp;</div><div class="line"><a name="l01707"></a><span class="lineno"> 1707</span>&#160;             bmass_cld(tdims_s%i_start,tdims_s%j_start,1),              &amp;</div><div class="line"><a name="l01708"></a><span class="lineno"> 1708</span>&#160;<span class="comment">! Fossil-fuel organic carbon aerosol</span></div><div class="line"><a name="l01709"></a><span class="lineno"> 1709</span>&#160;             ocff_new(tdims_s%i_start,tdims_s%j_start,1),               &amp;</div><div class="line"><a name="l01710"></a><span class="lineno"> 1710</span>&#160;             ocff_aged(tdims_s%i_start,tdims_s%j_start,1),              &amp;</div><div class="line"><a name="l01711"></a><span class="lineno"> 1711</span>&#160;             ocff_cld(tdims_s%i_start,tdims_s%j_start,1),               &amp;</div><div class="line"><a name="l01712"></a><span class="lineno"> 1712</span>&#160;<span class="comment">! Ammonium nitrate aerosol</span></div><div class="line"><a name="l01713"></a><span class="lineno"> 1713</span>&#160;             nitr_acc(tdims_s%i_start,tdims_s%j_start,1),               &amp;</div><div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;             nitr_diss(tdims_s%i_start,tdims_s%j_start,1),              &amp;</div><div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160;<span class="comment">! Carbon cycle</span></div><div class="line"><a name="l01716"></a><span class="lineno"> 1716</span>&#160;             co2(tdims_s%i_start,tdims_s%j_start,1),                    &amp;</div><div class="line"><a name="l01717"></a><span class="lineno"> 1717</span>&#160;             co2_flux_tot, land_co2,                                    &amp;</div><div class="line"><a name="l01718"></a><span class="lineno"> 1718</span>&#160;<span class="preprocessor">#include &quot;argsts.h&quot;</span></div><div class="line"><a name="l01719"></a><span class="lineno"> 1719</span>&#160;<span class="preprocessor"></span>            stashwork3,                                                 &amp;</div><div class="line"><a name="l01720"></a><span class="lineno"> 1720</span>&#160;<span class="comment">! SCM diagnostics (dummy in full UM)</span></div><div class="line"><a name="l01721"></a><span class="lineno"> 1721</span>&#160;            nscmdpkgs, l_scmdiags                                       &amp;</div><div class="line"><a name="l01722"></a><span class="lineno"> 1722</span>&#160;            )</div><div class="line"><a name="l01723"></a><span class="lineno"> 1723</span>&#160;</div><div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! if tracer mixing required</span></div><div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160;</div><div class="line"><a name="l01726"></a><span class="lineno"> 1726</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! ( CycleNo == NumCycles )</span></div><div class="line"><a name="l01727"></a><span class="lineno"> 1727</span>&#160;<span class="comment">! ! Section BL.3 Form Ch terms.</span></div><div class="line"><a name="l01728"></a><span class="lineno"> 1728</span>&#160;<span class="comment">! ! NB: Code assumes that the number of boundary layer levels is at</span></div><div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;<span class="comment">!     least 2.</span></div><div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160;    <span class="keywordflow">IF</span> ( <a class="code" href="namespacebl__option__mod.xhtml#a0104ca19d099164084f92fc37a2e1ddc">l_use_bl_diag_term</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01731"></a><span class="lineno"> 1731</span>&#160;<span class="comment">! Remove factor of r**2 from rho, store in interp</span></div><div class="line"><a name="l01732"></a><span class="lineno"> 1732</span>&#160;</div><div class="line"><a name="l01733"></a><span class="lineno"> 1733</span>&#160;      <span class="keywordflow">DO</span> k = 1, bl_levels</div><div class="line"><a name="l01734"></a><span class="lineno"> 1734</span>&#160;</div><div class="line"><a name="l01735"></a><span class="lineno"> 1735</span>&#160;        <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l01736"></a><span class="lineno"> 1736</span>&#160;          <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l01737"></a><span class="lineno"> 1737</span>&#160;            interp(i,j) = ( ( <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) -                   &amp;</div><div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;                              <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k) )                     &amp;</div><div class="line"><a name="l01739"></a><span class="lineno"> 1739</span>&#160;                             * rho(i,j,k+1) /                           &amp;</div><div class="line"><a name="l01740"></a><span class="lineno"> 1740</span>&#160;                              (<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k+1) *                  &amp;</div><div class="line"><a name="l01741"></a><span class="lineno"> 1741</span>&#160;                               <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k+1))                   &amp;</div><div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160;                           + ( <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k+1) -                  &amp;</div><div class="line"><a name="l01743"></a><span class="lineno"> 1743</span>&#160;                               <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) )                  &amp;</div><div class="line"><a name="l01744"></a><span class="lineno"> 1744</span>&#160;                             * rho(i,j,k) /                             &amp;</div><div class="line"><a name="l01745"></a><span class="lineno"> 1745</span>&#160;                              (<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k) *                    &amp;</div><div class="line"><a name="l01746"></a><span class="lineno"> 1746</span>&#160;                               <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k))                     &amp;</div><div class="line"><a name="l01747"></a><span class="lineno"> 1747</span>&#160;                          ) / (<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k+1) -                  &amp;</div><div class="line"><a name="l01748"></a><span class="lineno"> 1748</span>&#160;                               <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k) )</div><div class="line"><a name="l01749"></a><span class="lineno"> 1749</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01750"></a><span class="lineno"> 1750</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01751"></a><span class="lineno"> 1751</span>&#160;</div><div class="line"><a name="l01752"></a><span class="lineno"> 1752</span>&#160;        <span class="keywordflow">IF</span> (k  ==  1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01753"></a><span class="lineno"> 1753</span>&#160;          <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l01754"></a><span class="lineno"> 1754</span>&#160;            <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l01755"></a><span class="lineno"> 1755</span>&#160;</div><div class="line"><a name="l01756"></a><span class="lineno"> 1756</span>&#160;              temp1 = rhokh(i,j,k)</div><div class="line"><a name="l01757"></a><span class="lineno"> 1757</span>&#160;</div><div class="line"><a name="l01758"></a><span class="lineno"> 1758</span>&#160;              temp2 = rhokh(i,j,k+1)/ (<a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k+1)          &amp;</div><div class="line"><a name="l01759"></a><span class="lineno"> 1759</span>&#160;                                       - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k))</div><div class="line"><a name="l01760"></a><span class="lineno"> 1760</span>&#160;</div><div class="line"><a name="l01761"></a><span class="lineno"> 1761</span>&#160;              ch_term(i,j,k) = exner_theta_levels(i,j,k) * <a class="code" href="namespacebl__option__mod.xhtml#a4d4d768b22319d5970e78429dc03f23b">alpha_cd</a>(k)  &amp;</div><div class="line"><a name="l01762"></a><span class="lineno"> 1762</span>&#160;                               * ( temp1 + temp2 )                      &amp;</div><div class="line"><a name="l01763"></a><span class="lineno"> 1763</span>&#160;                               / (interp(i,j) *                         &amp;</div><div class="line"><a name="l01764"></a><span class="lineno"> 1764</span>&#160;                               (<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k+1) -                 &amp;</div><div class="line"><a name="l01765"></a><span class="lineno"> 1765</span>&#160;                                <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k)))</div><div class="line"><a name="l01766"></a><span class="lineno"> 1766</span>&#160;</div><div class="line"><a name="l01767"></a><span class="lineno"> 1767</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l01768"></a><span class="lineno"> 1768</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01769"></a><span class="lineno"> 1769</span>&#160;</div><div class="line"><a name="l01770"></a><span class="lineno"> 1770</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (k  &lt;   bl_levels) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01771"></a><span class="lineno"> 1771</span>&#160;          <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l01772"></a><span class="lineno"> 1772</span>&#160;            <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l01773"></a><span class="lineno"> 1773</span>&#160;</div><div class="line"><a name="l01774"></a><span class="lineno"> 1774</span>&#160;              temp1 = rhokh(i,j,k)/ (<a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k)              &amp;</div><div class="line"><a name="l01775"></a><span class="lineno"> 1775</span>&#160;                                     - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k-1))</div><div class="line"><a name="l01776"></a><span class="lineno"> 1776</span>&#160;</div><div class="line"><a name="l01777"></a><span class="lineno"> 1777</span>&#160;              temp2 = rhokh(i,j,k+1)/ (<a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k+1)          &amp;</div><div class="line"><a name="l01778"></a><span class="lineno"> 1778</span>&#160;                                       - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k))</div><div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160;</div><div class="line"><a name="l01780"></a><span class="lineno"> 1780</span>&#160;              ch_term(i,j,k) = exner_theta_levels(i,j,k) * <a class="code" href="namespacebl__option__mod.xhtml#a4d4d768b22319d5970e78429dc03f23b">alpha_cd</a>(k)  &amp;</div><div class="line"><a name="l01781"></a><span class="lineno"> 1781</span>&#160;                               * ( temp1 + temp2 )                      &amp;</div><div class="line"><a name="l01782"></a><span class="lineno"> 1782</span>&#160;                             / (interp(i,j) * (<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k+1)    &amp;</div><div class="line"><a name="l01783"></a><span class="lineno"> 1783</span>&#160;                                - <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k)))</div><div class="line"><a name="l01784"></a><span class="lineno"> 1784</span>&#160;</div><div class="line"><a name="l01785"></a><span class="lineno"> 1785</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l01786"></a><span class="lineno"> 1786</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01787"></a><span class="lineno"> 1787</span>&#160;</div><div class="line"><a name="l01788"></a><span class="lineno"> 1788</span>&#160;        <span class="keywordflow">ELSE</span> <span class="comment">! top boundary layer level</span></div><div class="line"><a name="l01789"></a><span class="lineno"> 1789</span>&#160;</div><div class="line"><a name="l01790"></a><span class="lineno"> 1790</span>&#160;          <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l01791"></a><span class="lineno"> 1791</span>&#160;            <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l01792"></a><span class="lineno"> 1792</span>&#160;</div><div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;              temp1 = rhokh(i,j,k)/ (<a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k)              &amp;</div><div class="line"><a name="l01794"></a><span class="lineno"> 1794</span>&#160;                                     - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k-1))</div><div class="line"><a name="l01795"></a><span class="lineno"> 1795</span>&#160;</div><div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;              temp2 = 0.0</div><div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;</div><div class="line"><a name="l01798"></a><span class="lineno"> 1798</span>&#160;              ch_term(i,j,k) = exner_theta_levels(i,j,k) * <a class="code" href="namespacebl__option__mod.xhtml#a4d4d768b22319d5970e78429dc03f23b">alpha_cd</a>(k)  &amp;</div><div class="line"><a name="l01799"></a><span class="lineno"> 1799</span>&#160;                               * ( temp1 + temp2 )                      &amp;</div><div class="line"><a name="l01800"></a><span class="lineno"> 1800</span>&#160;                             / (interp(i,j) * (<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k+1)    &amp;</div><div class="line"><a name="l01801"></a><span class="lineno"> 1801</span>&#160;                                 - <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k)))</div><div class="line"><a name="l01802"></a><span class="lineno"> 1802</span>&#160;</div><div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l01804"></a><span class="lineno"> 1804</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01805"></a><span class="lineno"> 1805</span>&#160;</div><div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01807"></a><span class="lineno"> 1807</span>&#160;</div><div class="line"><a name="l01808"></a><span class="lineno"> 1808</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01809"></a><span class="lineno"> 1809</span>&#160;<span class="comment">! swop halo values for Ch_term in boundary layer</span></div><div class="line"><a name="l01810"></a><span class="lineno"> 1810</span>&#160;<span class="comment">! DEPENDS ON: swap_bounds</span></div><div class="line"><a name="l01811"></a><span class="lineno"> 1811</span>&#160;      <span class="keyword">CALL </span><a class="code" href="swap__bounds-swpbnd2a_8f90.xhtml#aa0269e41062e156c437596022ea9ccd0" title="Portable GCOM based version SWAP_BOUNDS. ">swap_bounds</a>(                                                 &amp;</div><div class="line"><a name="l01812"></a><span class="lineno"> 1812</span>&#160;                       ch_term, pdims%i_end,pdims%j_end,                &amp;</div><div class="line"><a name="l01813"></a><span class="lineno"> 1813</span>&#160;        bl_levels,pdims_s%halo_i,pdims_s%halo_j, <a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a>,  .false.)</div><div class="line"><a name="l01814"></a><span class="lineno"> 1814</span>&#160;</div><div class="line"><a name="l01815"></a><span class="lineno"> 1815</span>&#160;<span class="comment">! set zero value above Boundary layer</span></div><div class="line"><a name="l01816"></a><span class="lineno"> 1816</span>&#160;      <span class="keywordflow">DO</span> k = bl_levels + 1, pdims_s%k_end - 1</div><div class="line"><a name="l01817"></a><span class="lineno"> 1817</span>&#160;        <span class="keywordflow">DO</span> j = pdims_s%j_start, pdims_s%j_end</div><div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;          <span class="keywordflow">DO</span> i = pdims_s%i_start, pdims_s%i_end</div><div class="line"><a name="l01819"></a><span class="lineno"> 1819</span>&#160;            ch_term(i,j,k) = 0.0</div><div class="line"><a name="l01820"></a><span class="lineno"> 1820</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01821"></a><span class="lineno"> 1821</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01822"></a><span class="lineno"> 1822</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01823"></a><span class="lineno"> 1823</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! If  L_use_bl_diag_term</span></div><div class="line"><a name="l01824"></a><span class="lineno"> 1824</span>&#160;<span class="comment">! ! Section BL.4 Convert and calculate theta and q fields from qT and Tl.</span></div><div class="line"><a name="l01825"></a><span class="lineno"> 1825</span>&#160;<span class="comment">!     IF (.NOT. l_dry) THEN</span></div><div class="line"><a name="l01826"></a><span class="lineno"> 1826</span>&#160;<span class="comment">! If the mixed phase precipitation scheme is used then T and Q are</span></div><div class="line"><a name="l01827"></a><span class="lineno"> 1827</span>&#160;<span class="comment">! required to contain T liquid and Q(vapour+liquid) but at this stage</span></div><div class="line"><a name="l01828"></a><span class="lineno"> 1828</span>&#160;<span class="comment">! will actually contain T liquid ice and Q(vapour+liquid+ice)</span></div><div class="line"><a name="l01829"></a><span class="lineno"> 1829</span>&#160;</div><div class="line"><a name="l01830"></a><span class="lineno"> 1830</span>&#160;<span class="comment">! DEPENDS ON: bl_lsp</span></div><div class="line"><a name="l01831"></a><span class="lineno"> 1831</span>&#160;      <span class="keyword">CALL </span><a class="code" href="bl__lsp_8f90.xhtml#ab332e12c863451a8b33babf9b2366beb" title="Purpose: Convert temperature from liquid ice to liquid, and convert Purpose: Convert temperature from...">bl_lsp</a>( bl_levels, qcf_latest, q_latest, t_latest )</div><div class="line"><a name="l01832"></a><span class="lineno"> 1832</span>&#160;</div><div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;</div><div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;      <span class="keywordflow">DO</span> k = bl_levels+1, qdims%k_end</div><div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;            q_latest(i,j,k) = 0.0</div><div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;            qcl_latest(i,j,k) = 0.0</div><div class="line"><a name="l01840"></a><span class="lineno"> 1840</span>&#160;            qcf_latest(i,j,k) = 0.0</div><div class="line"><a name="l01841"></a><span class="lineno"> 1841</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l01842"></a><span class="lineno"> 1842</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01843"></a><span class="lineno"> 1843</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01844"></a><span class="lineno"> 1844</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;</div><div class="line"><a name="l01846"></a><span class="lineno"> 1846</span>&#160;<span class="comment">! Create Tl and qT outside boundary layer</span></div><div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;    <span class="keywordflow">DO</span> k = bl_levels+1, qdims%k_end</div><div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;      <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l01849"></a><span class="lineno"> 1849</span>&#160;        <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;          t_latest(i,j,k) = t_latest(i,j,k) -                           &amp;</div><div class="line"><a name="l01851"></a><span class="lineno"> 1851</span>&#160;                          (lc * qcl_latest(i,j,k))                      &amp;</div><div class="line"><a name="l01852"></a><span class="lineno"> 1852</span>&#160;                           / cp</div><div class="line"><a name="l01853"></a><span class="lineno"> 1853</span>&#160;          q_latest(i,j,k) = q_latest(i,j,k) + qcl_latest(i,j,k)</div><div class="line"><a name="l01854"></a><span class="lineno"> 1854</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01855"></a><span class="lineno"> 1855</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01856"></a><span class="lineno"> 1856</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01857"></a><span class="lineno"> 1857</span>&#160;</div><div class="line"><a name="l01858"></a><span class="lineno"> 1858</span>&#160;<span class="comment">! Prepare for cloud scheme. Are we using PC2 or not?</span></div><div class="line"><a name="l01859"></a><span class="lineno"> 1859</span>&#160;</div><div class="line"><a name="l01860"></a><span class="lineno"> 1860</span>&#160;<span class="comment">! zero any negative q_latests</span></div><div class="line"><a name="l01861"></a><span class="lineno"> 1861</span>&#160;    <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l01862"></a><span class="lineno"> 1862</span>&#160;      <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l01863"></a><span class="lineno"> 1863</span>&#160;        <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l01864"></a><span class="lineno"> 1864</span>&#160;          <span class="keywordflow">IF</span> (q_latest(i,j,k)  &lt;   0.) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01865"></a><span class="lineno"> 1865</span>&#160;<span class="comment">!              print*,&#39; neg qT before BL cld call set to zero&#39;,i,j,k</span></div><div class="line"><a name="l01866"></a><span class="lineno"> 1866</span>&#160;            q_latest(i,j,k) = 0.</div><div class="line"><a name="l01867"></a><span class="lineno"> 1867</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01868"></a><span class="lineno"> 1868</span>&#160;          <span class="keywordflow">IF</span> (qcf_latest(i,j,k)  &lt;   0.) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01869"></a><span class="lineno"> 1869</span>&#160;<span class="comment">!              print*,&#39; neg qcf before BL cld call set to zero&#39;,i,j,k</span></div><div class="line"><a name="l01870"></a><span class="lineno"> 1870</span>&#160;            qcf_latest(i,j,k) = 0.</div><div class="line"><a name="l01871"></a><span class="lineno"> 1871</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01872"></a><span class="lineno"> 1872</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l01873"></a><span class="lineno"> 1873</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01874"></a><span class="lineno"> 1874</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01875"></a><span class="lineno"> 1875</span>&#160;</div><div class="line"><a name="l01876"></a><span class="lineno"> 1876</span>&#160;<span class="comment">! Calculate diagnostic RHcrit or read as parameter in from namelist</span></div><div class="line"><a name="l01877"></a><span class="lineno"> 1877</span>&#160;</div><div class="line"><a name="l01878"></a><span class="lineno"> 1878</span>&#160;<span class="comment">! Lrhcpt_if1:</span></div><div class="line"><a name="l01879"></a><span class="lineno"> 1879</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a7c7136e2f41b93943e9467178bde33a9">l_rhcpt</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01880"></a><span class="lineno"> 1880</span>&#160;<span class="comment">!       RHCRIT is 3D diagnosed variable</span></div><div class="line"><a name="l01881"></a><span class="lineno"> 1881</span>&#160;<span class="comment">! Wet_mlev_do1:</span></div><div class="line"><a name="l01882"></a><span class="lineno"> 1882</span>&#160;      <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l01883"></a><span class="lineno"> 1883</span>&#160;<span class="comment">! Rhc_rows_do1:</span></div><div class="line"><a name="l01884"></a><span class="lineno"> 1884</span>&#160;        <span class="keywordflow">DO</span> j = 1, rhc_rows</div><div class="line"><a name="l01885"></a><span class="lineno"> 1885</span>&#160;<span class="comment">! Rhc_rowlen_do1:</span></div><div class="line"><a name="l01886"></a><span class="lineno"> 1886</span>&#160;          <span class="keywordflow">DO</span> i = 1, rhc_row_length</div><div class="line"><a name="l01887"></a><span class="lineno"> 1887</span>&#160;            ext_p_layer_centres(i,j,k) = p_layer_centres(i,j,k)</div><div class="line"><a name="l01888"></a><span class="lineno"> 1888</span>&#160;            ext_tl(i,j,k) = t_latest(i,j,k)</div><div class="line"><a name="l01889"></a><span class="lineno"> 1889</span>&#160;            ext_ql(i,j,k) = q_latest(i,j,k)</div><div class="line"><a name="l01890"></a><span class="lineno"> 1890</span>&#160;            ext_qcf(i,j,k) = qcf_latest(i,j,k)</div><div class="line"><a name="l01891"></a><span class="lineno"> 1891</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! Rhc_rowlen_do1</span></div><div class="line"><a name="l01892"></a><span class="lineno"> 1892</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! Rhc_rows_do1</span></div><div class="line"><a name="l01893"></a><span class="lineno"> 1893</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! Wet_mlev_do1</span></div><div class="line"><a name="l01894"></a><span class="lineno"> 1894</span>&#160;</div><div class="line"><a name="l01895"></a><span class="lineno"> 1895</span>&#160;<span class="comment">! Rhc_rows_do2:</span></div><div class="line"><a name="l01896"></a><span class="lineno"> 1896</span>&#160;      <span class="keywordflow">DO</span> j = 1, rhc_rows</div><div class="line"><a name="l01897"></a><span class="lineno"> 1897</span>&#160;<span class="comment">! Rhc_rowlen_do2:</span></div><div class="line"><a name="l01898"></a><span class="lineno"> 1898</span>&#160;        <span class="keywordflow">DO</span> i = 1, rhc_row_length</div><div class="line"><a name="l01899"></a><span class="lineno"> 1899</span>&#160;          ext_p_layer_centres(i,j,0) = p_layer_centres(i,j,0)</div><div class="line"><a name="l01900"></a><span class="lineno"> 1900</span>&#160;          ext_ice_frac(i,j) = ice_fract(i,j)</div><div class="line"><a name="l01901"></a><span class="lineno"> 1901</span>&#160;<span class="comment">! extended halo land fraction now passed in from AP2</span></div><div class="line"><a name="l01902"></a><span class="lineno"> 1902</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! Rhc_rowlen_do2</span></div><div class="line"><a name="l01903"></a><span class="lineno"> 1903</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! Rhc_rows_do2</span></div><div class="line"><a name="l01904"></a><span class="lineno"> 1904</span>&#160;</div><div class="line"><a name="l01905"></a><span class="lineno"> 1905</span>&#160;<span class="comment">! Synchronize haloes.</span></div><div class="line"><a name="l01906"></a><span class="lineno"> 1906</span>&#160;</div><div class="line"><a name="l01907"></a><span class="lineno"> 1907</span>&#160;      i_field = 0</div><div class="line"><a name="l01908"></a><span class="lineno"> 1908</span>&#160;      i_field = i_field + 1</div><div class="line"><a name="l01909"></a><span class="lineno"> 1909</span>&#160;      fields_to_swap(i_field) % field       =&gt; ext_p_layer_centres(:,:,:)</div><div class="line"><a name="l01910"></a><span class="lineno"> 1910</span>&#160;      fields_to_swap(i_field) % field_type  =  <a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a></div><div class="line"><a name="l01911"></a><span class="lineno"> 1911</span>&#160;      fields_to_swap(i_field) % levels      =  qdims%k_end+1</div><div class="line"><a name="l01912"></a><span class="lineno"> 1912</span>&#160;      fields_to_swap(i_field) % rows        =  rhc_rows</div><div class="line"><a name="l01913"></a><span class="lineno"> 1913</span>&#160;      fields_to_swap(i_field) % vector      =  .false.</div><div class="line"><a name="l01914"></a><span class="lineno"> 1914</span>&#160;</div><div class="line"><a name="l01915"></a><span class="lineno"> 1915</span>&#160;      i_field = i_field + 1</div><div class="line"><a name="l01916"></a><span class="lineno"> 1916</span>&#160;      fields_to_swap(i_field) % field       =&gt; ext_tl(:,:,:)</div><div class="line"><a name="l01917"></a><span class="lineno"> 1917</span>&#160;      fields_to_swap(i_field) % field_type  =  <a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a></div><div class="line"><a name="l01918"></a><span class="lineno"> 1918</span>&#160;      fields_to_swap(i_field) % levels      =  qdims%k_end</div><div class="line"><a name="l01919"></a><span class="lineno"> 1919</span>&#160;      fields_to_swap(i_field) % rows        =  rhc_rows</div><div class="line"><a name="l01920"></a><span class="lineno"> 1920</span>&#160;      fields_to_swap(i_field) % vector      =  .false.</div><div class="line"><a name="l01921"></a><span class="lineno"> 1921</span>&#160;</div><div class="line"><a name="l01922"></a><span class="lineno"> 1922</span>&#160;      i_field = i_field + 1</div><div class="line"><a name="l01923"></a><span class="lineno"> 1923</span>&#160;      fields_to_swap(i_field) % field       =&gt; ext_ql(:,:,:)</div><div class="line"><a name="l01924"></a><span class="lineno"> 1924</span>&#160;      fields_to_swap(i_field) % field_type  =  <a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a></div><div class="line"><a name="l01925"></a><span class="lineno"> 1925</span>&#160;      fields_to_swap(i_field) % levels      =  qdims%k_end</div><div class="line"><a name="l01926"></a><span class="lineno"> 1926</span>&#160;      fields_to_swap(i_field) % rows        =  rhc_rows</div><div class="line"><a name="l01927"></a><span class="lineno"> 1927</span>&#160;      fields_to_swap(i_field) % vector      =  .false.</div><div class="line"><a name="l01928"></a><span class="lineno"> 1928</span>&#160;</div><div class="line"><a name="l01929"></a><span class="lineno"> 1929</span>&#160;      i_field = i_field + 1</div><div class="line"><a name="l01930"></a><span class="lineno"> 1930</span>&#160;      fields_to_swap(i_field) % field       =&gt; ext_qcf(:,:,:)</div><div class="line"><a name="l01931"></a><span class="lineno"> 1931</span>&#160;      fields_to_swap(i_field) % field_type  =  <a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a></div><div class="line"><a name="l01932"></a><span class="lineno"> 1932</span>&#160;      fields_to_swap(i_field) % levels      =  qdims%k_end</div><div class="line"><a name="l01933"></a><span class="lineno"> 1933</span>&#160;      fields_to_swap(i_field) % rows        =  rhc_rows</div><div class="line"><a name="l01934"></a><span class="lineno"> 1934</span>&#160;      fields_to_swap(i_field) % vector      =  .false.</div><div class="line"><a name="l01935"></a><span class="lineno"> 1935</span>&#160;</div><div class="line"><a name="l01936"></a><span class="lineno"> 1936</span>&#160;<span class="comment">! DEPENDS ON: swap_bounds_mv</span></div><div class="line"><a name="l01937"></a><span class="lineno"> 1937</span>&#160;      <span class="keyword">CALL </span><a class="code" href="swap__bounds__mv-2c_8f90.xhtml#a7ec706a27cea514039111eeb3f669540" title="Direct MPI version of swap_bounds to deal with multiple variables. ">swap_bounds_mv</a>( fields_to_swap, i_field,                     &amp;</div><div class="line"><a name="l01938"></a><span class="lineno"> 1938</span>&#160;                           rhc_row_length, 1, 1)</div><div class="line"><a name="l01939"></a><span class="lineno"> 1939</span>&#160;</div><div class="line"><a name="l01940"></a><span class="lineno"> 1940</span>&#160;      i_field = 0</div><div class="line"><a name="l01941"></a><span class="lineno"> 1941</span>&#160;</div><div class="line"><a name="l01942"></a><span class="lineno"> 1942</span>&#160;      i_field = i_field + 1</div><div class="line"><a name="l01943"></a><span class="lineno"> 1943</span>&#160;      fields_to_swap(i_field) % field_2d    =&gt; ext_ice_frac(:,:)</div><div class="line"><a name="l01944"></a><span class="lineno"> 1944</span>&#160;      fields_to_swap(i_field) % field_type  =  <a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a></div><div class="line"><a name="l01945"></a><span class="lineno"> 1945</span>&#160;      fields_to_swap(i_field) % levels      =  1</div><div class="line"><a name="l01946"></a><span class="lineno"> 1946</span>&#160;      fields_to_swap(i_field) % rows        =  rhc_rows</div><div class="line"><a name="l01947"></a><span class="lineno"> 1947</span>&#160;      fields_to_swap(i_field) % vector      =  .false.</div><div class="line"><a name="l01948"></a><span class="lineno"> 1948</span>&#160;</div><div class="line"><a name="l01949"></a><span class="lineno"> 1949</span>&#160;<span class="comment">! DEPENDS ON: swap_bounds_2d_mv</span></div><div class="line"><a name="l01950"></a><span class="lineno"> 1950</span>&#160;      <span class="keyword">CALL </span><a class="code" href="swap__bounds__2d__mv-2c_8f90.xhtml#a1180e478d1c8e7141d38eaf14d2c021d" title="Direct MPI version of swap_bounds to deal with multiple variables. ">swap_bounds_2d_mv</a>( fields_to_swap, i_field,                  &amp;</div><div class="line"><a name="l01951"></a><span class="lineno"> 1951</span>&#160;                           rhc_row_length, 1, 1)</div><div class="line"><a name="l01952"></a><span class="lineno"> 1952</span>&#160;</div><div class="line"><a name="l01953"></a><span class="lineno"> 1953</span>&#160;<span class="comment">! DEPENDS ON: ls_calc_rhcrit</span></div><div class="line"><a name="l01954"></a><span class="lineno"> 1954</span>&#160;      <span class="keyword">CALL </span><a class="code" href="ls__calc__rhcrit_8f90.xhtml#acda63ad174d7c15ec886d8c997d79f19" title="Diagnostic RHcrit Calculation Scheme. ">ls_calc_rhcrit</a>( ext_p_layer_centres,                         &amp;</div><div class="line"><a name="l01955"></a><span class="lineno"> 1955</span>&#160;<span class="comment">!              Array dimensions</span></div><div class="line"><a name="l01956"></a><span class="lineno"> 1956</span>&#160;         qdims%k_end, rhc_row_length, rhc_rows,                         &amp;</div><div class="line"><a name="l01957"></a><span class="lineno"> 1957</span>&#160;<span class="comment">!              Prognostic Fields</span></div><div class="line"><a name="l01958"></a><span class="lineno"> 1958</span>&#160;         ext_tl, ext_ql, ext_qcf,                                       &amp;</div><div class="line"><a name="l01959"></a><span class="lineno"> 1959</span>&#160;         flandg(0:rhc_row_length,0:rhc_rows), ext_ice_frac,             &amp;</div><div class="line"><a name="l01960"></a><span class="lineno"> 1960</span>&#160;<span class="comment">!              Logical control</span></div><div class="line"><a name="l01961"></a><span class="lineno"> 1961</span>&#160;         lq_mix_bl,                                                     &amp;</div><div class="line"><a name="l01962"></a><span class="lineno"> 1962</span>&#160;                           <span class="comment">! Use mixing_ratio</span></div><div class="line"><a name="l01963"></a><span class="lineno"> 1963</span>&#160;<span class="comment">!              Output</span></div><div class="line"><a name="l01964"></a><span class="lineno"> 1964</span>&#160;         rhcpt)</div><div class="line"><a name="l01965"></a><span class="lineno"> 1965</span>&#160;</div><div class="line"><a name="l01966"></a><span class="lineno"> 1966</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01967"></a><span class="lineno"> 1967</span>&#160;<span class="comment">!         RHCRIT is 1D Parameter read in from namelist</span></div><div class="line"><a name="l01968"></a><span class="lineno"> 1968</span>&#160;      <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l01969"></a><span class="lineno"> 1969</span>&#160;        rhcpt(1,1,k) = rhcrit(k)</div><div class="line"><a name="l01970"></a><span class="lineno"> 1970</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01971"></a><span class="lineno"> 1971</span>&#160;<span class="keywordflow">    END IF</span>  <span class="comment">! Lrhcpt_if1</span></div><div class="line"><a name="l01972"></a><span class="lineno"> 1972</span>&#160;</div><div class="line"><a name="l01973"></a><span class="lineno"> 1973</span>&#160;<span class="comment">! Which cloud scheme are we using?</span></div><div class="line"><a name="l01974"></a><span class="lineno"> 1974</span>&#160;</div><div class="line"><a name="l01975"></a><span class="lineno"> 1975</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#ae04fb44426849e3f308912a8311bb53b">l_pc2</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01976"></a><span class="lineno"> 1976</span>&#160;</div><div class="line"><a name="l01977"></a><span class="lineno"> 1977</span>&#160;<span class="comment">! ! PC2 cloud scheme</span></div><div class="line"><a name="l01978"></a><span class="lineno"> 1978</span>&#160;<span class="comment">!       ALLOCATE ( zeros   (qdims%i_start:qdims%i_end,                    &amp;</span></div><div class="line"><a name="l01979"></a><span class="lineno"> 1979</span>&#160;                          qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l01980"></a><span class="lineno"> 1980</span>&#160;</div><div class="line"><a name="l01981"></a><span class="lineno"> 1981</span>&#160;<span class="comment">! ! Inhomogenous forcing of ice</span></div><div class="line"><a name="l01982"></a><span class="lineno"> 1982</span>&#160;<span class="comment">! Calculate in-plume ice content (LS) by assuming that they are equal to</span></div><div class="line"><a name="l01983"></a><span class="lineno"> 1983</span>&#160;<span class="comment">! the current values, except when the current value is not defined.</span></div><div class="line"><a name="l01984"></a><span class="lineno"> 1984</span>&#160;<span class="comment">! Also calculate the forcing of ice content Q4F</span></div><div class="line"><a name="l01985"></a><span class="lineno"> 1985</span>&#160;</div><div class="line"><a name="l01986"></a><span class="lineno"> 1986</span>&#160;      <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l01987"></a><span class="lineno"> 1987</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l01988"></a><span class="lineno"> 1988</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l01989"></a><span class="lineno"> 1989</span>&#160;</div><div class="line"><a name="l01990"></a><span class="lineno"> 1990</span>&#160;<span class="comment">! Calculate Q4. Only perform the calculation if the Q4 is non-zero.</span></div><div class="line"><a name="l01991"></a><span class="lineno"> 1991</span>&#160;<span class="comment">! Since ice is mixed by tracer mixing regardless of whether cumulus</span></div><div class="line"><a name="l01992"></a><span class="lineno"> 1992</span>&#160;<span class="comment">! is present we still need to provide an ice cloud fraction increment</span></div><div class="line"><a name="l01993"></a><span class="lineno"> 1993</span>&#160;<span class="comment">! below cumulus base.</span></div><div class="line"><a name="l01994"></a><span class="lineno"> 1994</span>&#160;</div><div class="line"><a name="l01995"></a><span class="lineno"> 1995</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a8d957eb7dd8afa520bd3a74c21609daa">l_fixbug_pc2_mixph</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01996"></a><span class="lineno"> 1996</span>&#160;</div><div class="line"><a name="l01997"></a><span class="lineno"> 1997</span>&#160;<span class="comment">! Calculate change in ice cloud fraction differently depending on</span></div><div class="line"><a name="l01998"></a><span class="lineno"> 1998</span>&#160;<span class="comment">! whether QCF has increased or decreased.</span></div><div class="line"><a name="l01999"></a><span class="lineno"> 1999</span>&#160;</div><div class="line"><a name="l02000"></a><span class="lineno"> 2000</span>&#160;              q4 = qcf_latest(i,j,k) - qcf_earliest(i,j,k)</div><div class="line"><a name="l02001"></a><span class="lineno"> 2001</span>&#160;</div><div class="line"><a name="l02002"></a><span class="lineno"> 2002</span>&#160;              <span class="keywordflow">IF</span> (q4 &gt; 1.0e-12) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02003"></a><span class="lineno"> 2003</span>&#160;</div><div class="line"><a name="l02004"></a><span class="lineno"> 2004</span>&#160;<span class="comment">! Source.</span></div><div class="line"><a name="l02005"></a><span class="lineno"> 2005</span>&#160;</div><div class="line"><a name="l02006"></a><span class="lineno"> 2006</span>&#160;<span class="comment">! Calculate the change in total cloud fraction.</span></div><div class="line"><a name="l02007"></a><span class="lineno"> 2007</span>&#160;<span class="comment">! Use a weighted (by ice cloud fraction) average of in-cloud ice</span></div><div class="line"><a name="l02008"></a><span class="lineno"> 2008</span>&#160;<span class="comment">! content and a fixed value to specify the plume ice content.</span></div><div class="line"><a name="l02009"></a><span class="lineno"> 2009</span>&#160;<span class="comment">! The denominator in the deltaCf calculation is then</span></div><div class="line"><a name="l02010"></a><span class="lineno"> 2010</span>&#160;<span class="comment">! ((qcf_earliest/cff_earliest)*cffearliest +</span></div><div class="line"><a name="l02011"></a><span class="lineno"> 2011</span>&#160;<span class="comment">! ls_bl0*(1-cff_earliest) - qcf_earliest</span></div><div class="line"><a name="l02012"></a><span class="lineno"> 2012</span>&#160;<span class="comment">! and the qcf_earliest terms cancel.</span></div><div class="line"><a name="l02013"></a><span class="lineno"> 2013</span>&#160;</div><div class="line"><a name="l02014"></a><span class="lineno"> 2014</span>&#160;                denom = ls_bl0 * ( 1.0 - cff_earliest(i,j,k) )</div><div class="line"><a name="l02015"></a><span class="lineno"> 2015</span>&#160;</div><div class="line"><a name="l02016"></a><span class="lineno"> 2016</span>&#160;                <span class="keywordflow">IF</span> ( abs(denom) &gt; 1.0e-10 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02017"></a><span class="lineno"> 2017</span>&#160;</div><div class="line"><a name="l02018"></a><span class="lineno"> 2018</span>&#160;                  denom = q4 / denom</div><div class="line"><a name="l02019"></a><span class="lineno"> 2019</span>&#160;</div><div class="line"><a name="l02020"></a><span class="lineno"> 2020</span>&#160;                  deltacff = (1.0-cff_latest(i,j,k)) * denom</div><div class="line"><a name="l02021"></a><span class="lineno"> 2021</span>&#160;                  cff_latest(i,j,k) = cff_latest(i,j,k) + deltacff</div><div class="line"><a name="l02022"></a><span class="lineno"> 2022</span>&#160;</div><div class="line"><a name="l02023"></a><span class="lineno"> 2023</span>&#160;<span class="comment">! calculate total cf based on minimum overlap</span></div><div class="line"><a name="l02024"></a><span class="lineno"> 2024</span>&#160;                  cf_latest(i,j,k)  = cf_latest(i,j,k)  + deltacff</div><div class="line"><a name="l02025"></a><span class="lineno"> 2025</span>&#160;</div><div class="line"><a name="l02026"></a><span class="lineno"> 2026</span>&#160;                <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02027"></a><span class="lineno"> 2027</span>&#160;                  cf_latest(i,j,k)  = 1.0</div><div class="line"><a name="l02028"></a><span class="lineno"> 2028</span>&#160;                  cff_latest(i,j,k) = 1.0</div><div class="line"><a name="l02029"></a><span class="lineno"> 2029</span>&#160;<span class="keywordflow">                END IF</span></div><div class="line"><a name="l02030"></a><span class="lineno"> 2030</span>&#160;</div><div class="line"><a name="l02031"></a><span class="lineno"> 2031</span>&#160;              <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (q4 &lt; -1.0e-12) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02032"></a><span class="lineno"> 2032</span>&#160;</div><div class="line"><a name="l02033"></a><span class="lineno"> 2033</span>&#160;<span class="comment">! Sink.</span></div><div class="line"><a name="l02034"></a><span class="lineno"> 2034</span>&#160;</div><div class="line"><a name="l02035"></a><span class="lineno"> 2035</span>&#160;<span class="comment">! Given a reduction in qcf, remove some CFF in order to maintain the</span></div><div class="line"><a name="l02036"></a><span class="lineno"> 2036</span>&#160;<span class="comment">! same in-cloud IWC.</span></div><div class="line"><a name="l02037"></a><span class="lineno"> 2037</span>&#160;</div><div class="line"><a name="l02038"></a><span class="lineno"> 2038</span>&#160;                incloudice = qcf_latest(i,j,k) /                        &amp;</div><div class="line"><a name="l02039"></a><span class="lineno"> 2039</span>&#160;                  max(cff_latest(i,j,k),1.e-6)</div><div class="line"><a name="l02040"></a><span class="lineno"> 2040</span>&#160;</div><div class="line"><a name="l02041"></a><span class="lineno"> 2041</span>&#160;                cf_latest(i,j,k) = cf_latest(i,j,k) +                   &amp;</div><div class="line"><a name="l02042"></a><span class="lineno"> 2042</span>&#160;                  q4/max(incloudice, ls_bl0)</div><div class="line"><a name="l02043"></a><span class="lineno"> 2043</span>&#160;</div><div class="line"><a name="l02044"></a><span class="lineno"> 2044</span>&#160;                cff_latest(i,j,k) = cff_latest(i,j,k) +                 &amp;</div><div class="line"><a name="l02045"></a><span class="lineno"> 2045</span>&#160;                  q4/max(incloudice, ls_bl0)</div><div class="line"><a name="l02046"></a><span class="lineno"> 2046</span>&#160;</div><div class="line"><a name="l02047"></a><span class="lineno"> 2047</span>&#160;                temp3=cff_latest(i,j,k)</div><div class="line"><a name="l02048"></a><span class="lineno"> 2048</span>&#160;</div><div class="line"><a name="l02049"></a><span class="lineno"> 2049</span>&#160;                <span class="keywordflow">IF</span> (cff_latest(i,j,k) &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02050"></a><span class="lineno"> 2050</span>&#160;                    <span class="comment">!Prevent very high in-cloud values by increasing CFF.</span></div><div class="line"><a name="l02051"></a><span class="lineno"> 2051</span>&#160;                  <span class="keywordflow">IF</span> ( (qcf_latest(i,j,k) / cff_latest(i,j,k) )         &amp;</div><div class="line"><a name="l02052"></a><span class="lineno"> 2052</span>&#160;                       &gt; 2.0e-3) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02053"></a><span class="lineno"> 2053</span>&#160;                    cff_latest(i,j,k)=qcf_latest(i,j,k)/2.e3</div><div class="line"><a name="l02054"></a><span class="lineno"> 2054</span>&#160;                    temp3=cff_latest(i,j,k)-temp3</div><div class="line"><a name="l02055"></a><span class="lineno"> 2055</span>&#160;                      <span class="comment">! Update total cloud fraction.</span></div><div class="line"><a name="l02056"></a><span class="lineno"> 2056</span>&#160;                    cf_latest(i,j,k)=cf_latest(i,j,k)+temp3</div><div class="line"><a name="l02057"></a><span class="lineno"> 2057</span>&#160;<span class="keywordflow">                  END IF</span></div><div class="line"><a name="l02058"></a><span class="lineno"> 2058</span>&#160;</div><div class="line"><a name="l02059"></a><span class="lineno"> 2059</span>&#160;<span class="keywordflow">                END IF</span></div><div class="line"><a name="l02060"></a><span class="lineno"> 2060</span>&#160;</div><div class="line"><a name="l02061"></a><span class="lineno"> 2061</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l02062"></a><span class="lineno"> 2062</span>&#160;</div><div class="line"><a name="l02063"></a><span class="lineno"> 2063</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02064"></a><span class="lineno"> 2064</span>&#160;</div><div class="line"><a name="l02065"></a><span class="lineno"> 2065</span>&#160;<span class="comment">! Original code as run in Wilson et al (2008a,b).</span></div><div class="line"><a name="l02066"></a><span class="lineno"> 2066</span>&#160;<span class="comment">! Calculation of change in cloud fraction is consitent with an increase</span></div><div class="line"><a name="l02067"></a><span class="lineno"> 2067</span>&#160;<span class="comment">! in QCF but not consistent with a decrease.</span></div><div class="line"><a name="l02068"></a><span class="lineno"> 2068</span>&#160;</div><div class="line"><a name="l02069"></a><span class="lineno"> 2069</span>&#160;              q4 = qcf_latest(i,j,k) - qcf_earliest(i,j,k)</div><div class="line"><a name="l02070"></a><span class="lineno"> 2070</span>&#160;              <span class="keywordflow">IF</span> (q4  /=  0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02071"></a><span class="lineno"> 2071</span>&#160;</div><div class="line"><a name="l02072"></a><span class="lineno"> 2072</span>&#160;<span class="comment">! Calculate the change in total cloud fraction.</span></div><div class="line"><a name="l02073"></a><span class="lineno"> 2073</span>&#160;<span class="comment">! Use a weighted (by ice cloud fraction) average of in-cloud ice</span></div><div class="line"><a name="l02074"></a><span class="lineno"> 2074</span>&#160;<span class="comment">! content and a fixed value to specify the plume ice content.</span></div><div class="line"><a name="l02075"></a><span class="lineno"> 2075</span>&#160;<span class="comment">! The denominator in the deltaCf calculation is then</span></div><div class="line"><a name="l02076"></a><span class="lineno"> 2076</span>&#160;<span class="comment">! (qcf_earliest/cff_earliest + ls_bl0*(1-cff_earliest) - qcf_earliest</span></div><div class="line"><a name="l02077"></a><span class="lineno"> 2077</span>&#160;<span class="comment">! and the qcf_earliest terms cancel.</span></div><div class="line"><a name="l02078"></a><span class="lineno"> 2078</span>&#160;</div><div class="line"><a name="l02079"></a><span class="lineno"> 2079</span>&#160;                denom = ls_bl0 * (1.0 - cff_earliest(i,j,k))</div><div class="line"><a name="l02080"></a><span class="lineno"> 2080</span>&#160;</div><div class="line"><a name="l02081"></a><span class="lineno"> 2081</span>&#160;                <span class="keywordflow">IF</span> ( abs(denom)  &gt;   1.0e-10 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02082"></a><span class="lineno"> 2082</span>&#160;</div><div class="line"><a name="l02083"></a><span class="lineno"> 2083</span>&#160;                  denom = q4 / denom</div><div class="line"><a name="l02084"></a><span class="lineno"> 2084</span>&#160;                  cf_latest(i,j,k)  = cf_latest(i,j,k)  +               &amp;</div><div class="line"><a name="l02085"></a><span class="lineno"> 2085</span>&#160;                               (1.0 - cf_latest(i,j,k))  * denom</div><div class="line"><a name="l02086"></a><span class="lineno"> 2086</span>&#160;                  cff_latest(i,j,k) = cff_latest(i,j,k) +               &amp;</div><div class="line"><a name="l02087"></a><span class="lineno"> 2087</span>&#160;                               (1.0 - cff_latest(i,j,k)) * denom</div><div class="line"><a name="l02088"></a><span class="lineno"> 2088</span>&#160;</div><div class="line"><a name="l02089"></a><span class="lineno"> 2089</span>&#160;<span class="comment">! Otherwise cloud fraction will go to one. In theory, cloud fraction</span></div><div class="line"><a name="l02090"></a><span class="lineno"> 2090</span>&#160;<span class="comment">! can never be reduced by this process.</span></div><div class="line"><a name="l02091"></a><span class="lineno"> 2091</span>&#160;</div><div class="line"><a name="l02092"></a><span class="lineno"> 2092</span>&#160;                <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02093"></a><span class="lineno"> 2093</span>&#160;                  cf_latest(i,j,k)  = 1.0</div><div class="line"><a name="l02094"></a><span class="lineno"> 2094</span>&#160;                  cff_latest(i,j,k) = 1.0</div><div class="line"><a name="l02095"></a><span class="lineno"> 2095</span>&#160;<span class="keywordflow">                END IF</span></div><div class="line"><a name="l02096"></a><span class="lineno"> 2096</span>&#160;</div><div class="line"><a name="l02097"></a><span class="lineno"> 2097</span>&#160;<span class="keywordflow">              END IF</span> <span class="comment">!(Q4  /=  0.0)</span></div><div class="line"><a name="l02098"></a><span class="lineno"> 2098</span>&#160;</div><div class="line"><a name="l02099"></a><span class="lineno"> 2099</span>&#160;<span class="keywordflow">            END IF</span> <span class="comment">! l_fixbug_pc2_mixph</span></div><div class="line"><a name="l02100"></a><span class="lineno"> 2100</span>&#160;</div><div class="line"><a name="l02101"></a><span class="lineno"> 2101</span>&#160;<span class="comment">! Set zero array</span></div><div class="line"><a name="l02102"></a><span class="lineno"> 2102</span>&#160;            zeros(i,j,k)        = 0.0</div><div class="line"><a name="l02103"></a><span class="lineno"> 2103</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l02104"></a><span class="lineno"> 2104</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02105"></a><span class="lineno"> 2105</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02106"></a><span class="lineno"> 2106</span>&#160;</div><div class="line"><a name="l02107"></a><span class="lineno"> 2107</span>&#160;<span class="comment">! ! Homogenous forcing of the liquid cloud</span></div><div class="line"><a name="l02108"></a><span class="lineno"> 2108</span>&#160;<span class="comment">! Calculate forcing in qT and TL. Currently q_latest contains the vapour</span></div><div class="line"><a name="l02109"></a><span class="lineno"> 2109</span>&#160;<span class="comment">! plus liquid content and q_earliest just the initial vapour content</span></div><div class="line"><a name="l02110"></a><span class="lineno"> 2110</span>&#160;</div><div class="line"><a name="l02111"></a><span class="lineno"> 2111</span>&#160;      <span class="keyword">ALLOCATE</span> ( qt_force(qdims%i_start:qdims%i_end,                    &amp;</div><div class="line"><a name="l02112"></a><span class="lineno"> 2112</span>&#160;                          qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l02113"></a><span class="lineno"> 2113</span>&#160;      <span class="keyword">ALLOCATE</span> ( tl_force(tdims%i_start:tdims%i_end,                    &amp;</div><div class="line"><a name="l02114"></a><span class="lineno"> 2114</span>&#160;                          tdims%j_start:tdims%j_end,tdims%k_end) )</div><div class="line"><a name="l02115"></a><span class="lineno"> 2115</span>&#160;      <span class="keyword">ALLOCATE</span> ( t_inc_pc2(tdims%i_start:tdims%i_end,                   &amp;</div><div class="line"><a name="l02116"></a><span class="lineno"> 2116</span>&#160;                           tdims%j_start:tdims%j_end,tdims%k_end) )</div><div class="line"><a name="l02117"></a><span class="lineno"> 2117</span>&#160;      <span class="keyword">ALLOCATE</span> ( q_inc_pc2(qdims%i_start:qdims%i_end,                   &amp;</div><div class="line"><a name="l02118"></a><span class="lineno"> 2118</span>&#160;                           qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l02119"></a><span class="lineno"> 2119</span>&#160;      <span class="keyword">ALLOCATE</span> ( qcl_inc_pc2(qdims%i_start:qdims%i_end,                 &amp;</div><div class="line"><a name="l02120"></a><span class="lineno"> 2120</span>&#160;                             qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l02121"></a><span class="lineno"> 2121</span>&#160;      <span class="keyword">ALLOCATE</span> ( cfl_inc_pc2(qdims%i_start:qdims%i_end,                 &amp;</div><div class="line"><a name="l02122"></a><span class="lineno"> 2122</span>&#160;                             qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l02123"></a><span class="lineno"> 2123</span>&#160;      <span class="keyword">ALLOCATE</span> ( bcf_inc_pc2(qdims%i_start:qdims%i_end,                 &amp;</div><div class="line"><a name="l02124"></a><span class="lineno"> 2124</span>&#160;                             qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l02125"></a><span class="lineno"> 2125</span>&#160;</div><div class="line"><a name="l02126"></a><span class="lineno"> 2126</span>&#160;      <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02127"></a><span class="lineno"> 2127</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02128"></a><span class="lineno"> 2128</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02129"></a><span class="lineno"> 2129</span>&#160;            qt_force(i,j,k) = ( q_latest(i,j,k)                         &amp;</div><div class="line"><a name="l02130"></a><span class="lineno"> 2130</span>&#160;              - (q_earliest(i,j,k) + qcl_earliest(i,j,k)) )</div><div class="line"><a name="l02131"></a><span class="lineno"> 2131</span>&#160;            tl_force(i,j,k) = ( t_latest(i,j,k)                         &amp;</div><div class="line"><a name="l02132"></a><span class="lineno"> 2132</span>&#160;              - (t_earliest(i,j,k)- lc * qcl_earliest(i,j,k) / cp) )</div><div class="line"><a name="l02133"></a><span class="lineno"> 2133</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l02134"></a><span class="lineno"> 2134</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02135"></a><span class="lineno"> 2135</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02136"></a><span class="lineno"> 2136</span>&#160;</div><div class="line"><a name="l02137"></a><span class="lineno"> 2137</span>&#160;<span class="comment">! Call homogenous forcing routine</span></div><div class="line"><a name="l02138"></a><span class="lineno"> 2138</span>&#160;</div><div class="line"><a name="l02139"></a><span class="lineno"> 2139</span>&#160;<span class="comment">! DEPENDS ON: pc2_delta_hom_turb</span></div><div class="line"><a name="l02140"></a><span class="lineno"> 2140</span>&#160;      <span class="keyword">CALL </span><a class="code" href="pc2__delta__hom__turb_8f90.xhtml#a3a2d22ace760b9ed4827975aaf99a086" title="Cloud Scheme: Homogenous forcing and Turbulence (non-updating) ">pc2_delta_hom_turb</a>(                                          &amp;</div><div class="line"><a name="l02141"></a><span class="lineno"> 2141</span>&#160;<span class="comment">! INput variables</span></div><div class="line"><a name="l02142"></a><span class="lineno"> 2142</span>&#160;        p_layer_centres(1,1,1),                                         &amp;</div><div class="line"><a name="l02143"></a><span class="lineno"> 2143</span>&#160;<span class="comment">! INput variables</span></div><div class="line"><a name="l02144"></a><span class="lineno"> 2144</span>&#160;        t_earliest(1,1,1), q_earliest(1,1,1), qcl_earliest(1,1,1),      &amp;</div><div class="line"><a name="l02145"></a><span class="lineno"> 2145</span>&#160;        cf_latest(1,1,1), cfl_latest(1,1,1), cff_latest(1,1,1),         &amp;</div><div class="line"><a name="l02146"></a><span class="lineno"> 2146</span>&#160;        tl_force(1,1,1),qt_force(1,1,1),zeros(1,1,1),zeros(1,1,1),      &amp;</div><div class="line"><a name="l02147"></a><span class="lineno"> 2147</span>&#160;<span class="comment">! OUTput variables</span></div><div class="line"><a name="l02148"></a><span class="lineno"> 2148</span>&#160;        t_inc_pc2, q_inc_pc2, qcl_inc_pc2, bcf_inc_pc2, cfl_inc_pc2,    &amp;</div><div class="line"><a name="l02149"></a><span class="lineno"> 2149</span>&#160;<span class="comment">! INput variables (other quantities)</span></div><div class="line"><a name="l02150"></a><span class="lineno"> 2150</span>&#160;        0.0, 0.0, lq_mix_bl)</div><div class="line"><a name="l02151"></a><span class="lineno"> 2151</span>&#160;</div><div class="line"><a name="l02152"></a><span class="lineno"> 2152</span>&#160;<span class="comment">! Diagnostic shallow cloud within PC2</span></div><div class="line"><a name="l02153"></a><span class="lineno"> 2153</span>&#160;</div><div class="line"><a name="l02154"></a><span class="lineno"> 2154</span>&#160;      <span class="keywordflow">IF</span> ( <a class="code" href="namespacecv__run__mod.xhtml#a7c5e9f2b1af9e229ed225af8fc6f7112">l_pc2_diag_sh</a> .AND. .NOT. <a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a> .AND.                      &amp;</div><div class="line"><a name="l02155"></a><span class="lineno"> 2155</span>&#160;           rad_cloud_decay_opt == <a class="code" href="namespacecv__param__mod.xhtml#a5428bfc5134cfe05ce46bfefb1d6edb3">rad_decay_off</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02156"></a><span class="lineno"> 2156</span>&#160;</div><div class="line"><a name="l02157"></a><span class="lineno"> 2157</span>&#160;            <span class="comment">! The following code is only valid with the follow settings.</span></div><div class="line"><a name="l02158"></a><span class="lineno"> 2158</span>&#160;</div><div class="line"><a name="l02159"></a><span class="lineno"> 2159</span>&#160;            <span class="comment">! l_pc2               = .true.</span></div><div class="line"><a name="l02160"></a><span class="lineno"> 2160</span>&#160;            <span class="comment">! l_pc2_diag_sh     = .true.</span></div><div class="line"><a name="l02161"></a><span class="lineno"> 2161</span>&#160;            <span class="comment">! l_ccrad           = .false.</span></div><div class="line"><a name="l02162"></a><span class="lineno"> 2162</span>&#160;            <span class="comment">! Rad_cloud_decay_opt = rad_decay_off</span></div><div class="line"><a name="l02163"></a><span class="lineno"> 2163</span>&#160;</div><div class="line"><a name="l02164"></a><span class="lineno"> 2164</span>&#160;        <span class="keyword">ALLOCATE</span> ( ccw_cca(qdims%i_start:qdims%i_end,                   &amp;</div><div class="line"><a name="l02165"></a><span class="lineno"> 2165</span>&#160;                           qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l02166"></a><span class="lineno"> 2166</span>&#160;        <span class="keyword">ALLOCATE</span> ( cca_3d(qdims%i_start:qdims%i_end,                   &amp;</div><div class="line"><a name="l02167"></a><span class="lineno"> 2167</span>&#160;                           qdims%j_start:qdims%j_end,qdims%k_end) )</div><div class="line"><a name="l02168"></a><span class="lineno"> 2168</span>&#160;</div><div class="line"><a name="l02169"></a><span class="lineno"> 2169</span>&#160;        <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02170"></a><span class="lineno"> 2170</span>&#160;          <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02171"></a><span class="lineno"> 2171</span>&#160;            <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02172"></a><span class="lineno"> 2172</span>&#160;</div><div class="line"><a name="l02173"></a><span class="lineno"> 2173</span>&#160;<span class="comment">! If below cumulus cloud base or we are using a diagnostic</span></div><div class="line"><a name="l02174"></a><span class="lineno"> 2174</span>&#160;<span class="comment">! shallow convective cloud then we simply zero the liquid water</span></div><div class="line"><a name="l02175"></a><span class="lineno"> 2175</span>&#160;<span class="comment">! content instead of using the homogenous BL response. The forcings</span></div><div class="line"><a name="l02176"></a><span class="lineno"> 2176</span>&#160;<span class="comment">! themselves are still applied but to q and T.</span></div><div class="line"><a name="l02177"></a><span class="lineno"> 2177</span>&#160;<span class="comment">! Note that we find, for PC2, that zeroing up to ntml,</span></div><div class="line"><a name="l02178"></a><span class="lineno"> 2178</span>&#160;<span class="comment">! rather than ntml+1, is more physically justified and gives slightly</span></div><div class="line"><a name="l02179"></a><span class="lineno"> 2179</span>&#160;<span class="comment">! better cloud results.</span></div><div class="line"><a name="l02180"></a><span class="lineno"> 2180</span>&#160;</div><div class="line"><a name="l02181"></a><span class="lineno"> 2181</span>&#160;              <span class="keywordflow">IF</span> ( (l_pc2_diag_sh_pts(i,j) .AND. k &lt;= cct0(i,j)) .OR.   &amp;</div><div class="line"><a name="l02182"></a><span class="lineno"> 2182</span>&#160;                   (cumulus(i,j)           .AND. k &lt;= ntml(i,j)) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02183"></a><span class="lineno"> 2183</span>&#160;                t_inc_pc2(i,j,k)   = (-lc/cp) * qcl_earliest(i,j,k)</div><div class="line"><a name="l02184"></a><span class="lineno"> 2184</span>&#160;                q_inc_pc2(i,j,k)   = qcl_earliest(i,j,k)</div><div class="line"><a name="l02185"></a><span class="lineno"> 2185</span>&#160;                qcl_inc_pc2(i,j,k) = (-qcl_earliest(i,j,k))</div><div class="line"><a name="l02186"></a><span class="lineno"> 2186</span>&#160;                cfl_inc_pc2(i,j,k) = (-cfl_earliest(i,j,k))</div><div class="line"><a name="l02187"></a><span class="lineno"> 2187</span>&#160;                bcf_inc_pc2(i,j,k) = cff_latest(i,j,k)-cf_earliest(i,j,k)</div><div class="line"><a name="l02188"></a><span class="lineno"> 2188</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l02189"></a><span class="lineno"> 2189</span>&#160;</div><div class="line"><a name="l02190"></a><span class="lineno"> 2190</span>&#160;                  <span class="comment">! Set convective cloud properties if we are</span></div><div class="line"><a name="l02191"></a><span class="lineno"> 2191</span>&#160;                  <span class="comment">! using a diagnostic shallow convection for PC2</span></div><div class="line"><a name="l02192"></a><span class="lineno"> 2192</span>&#160;                  <span class="comment">! Calculate convective properties</span></div><div class="line"><a name="l02193"></a><span class="lineno"> 2193</span>&#160;</div><div class="line"><a name="l02194"></a><span class="lineno"> 2194</span>&#160;                  <span class="comment">! With l_PC2 =true, the cca0 which goes</span></div><div class="line"><a name="l02195"></a><span class="lineno"> 2195</span>&#160;                  <span class="comment">! to radiation should only contain only</span></div><div class="line"><a name="l02196"></a><span class="lineno"> 2196</span>&#160;                  <span class="comment">! shallow convection (i.e. no deep or mid-level).</span></div><div class="line"><a name="l02197"></a><span class="lineno"> 2197</span>&#160;</div><div class="line"><a name="l02198"></a><span class="lineno"> 2198</span>&#160;                  <span class="comment">! l_pc2_diag_sh and l_ccrad should not be</span></div><div class="line"><a name="l02199"></a><span class="lineno"> 2199</span>&#160;                  <span class="comment">! true at the same time.</span></div><div class="line"><a name="l02200"></a><span class="lineno"> 2200</span>&#160;              <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#af3aff8585bb16fdc7cddc62da16fd0d7">l_3d_cca</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02201"></a><span class="lineno"> 2201</span>&#160;</div><div class="line"><a name="l02202"></a><span class="lineno"> 2202</span>&#160;                ccw_cca(i,j,k) = ccw0(i,j,k)*cca0(i,j,k)</div><div class="line"><a name="l02203"></a><span class="lineno"> 2203</span>&#160;                cca_3d(i,j,k)  = cca0(i,j,k)</div><div class="line"><a name="l02204"></a><span class="lineno"> 2204</span>&#160;</div><div class="line"><a name="l02205"></a><span class="lineno"> 2205</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02206"></a><span class="lineno"> 2206</span>&#160;</div><div class="line"><a name="l02207"></a><span class="lineno"> 2207</span>&#160;                    <span class="comment">! Currently with this switch cca is set to be</span></div><div class="line"><a name="l02208"></a><span class="lineno"> 2208</span>&#160;                    <span class="comment">! a single level field. In which case use cca0_2d</span></div><div class="line"><a name="l02209"></a><span class="lineno"> 2209</span>&#160;                    <span class="comment">! which should also only contain cca0_2d from</span></div><div class="line"><a name="l02210"></a><span class="lineno"> 2210</span>&#160;                    <span class="comment">! shallow cloud</span></div><div class="line"><a name="l02211"></a><span class="lineno"> 2211</span>&#160;</div><div class="line"><a name="l02212"></a><span class="lineno"> 2212</span>&#160;                <span class="keywordflow">IF</span> (k &lt;= cct0(i,j) .AND. k &gt;= ccb0(i,j)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02213"></a><span class="lineno"> 2213</span>&#160;                  ccw_cca(i,j,k) = ccw0(i,j,k) * cca0_2d(i,j)</div><div class="line"><a name="l02214"></a><span class="lineno"> 2214</span>&#160;                  cca_3d(i,j,k)  = cca0_2d(i,j)</div><div class="line"><a name="l02215"></a><span class="lineno"> 2215</span>&#160;                <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02216"></a><span class="lineno"> 2216</span>&#160;                  ccw_cca(i,j,k) = 0.0</div><div class="line"><a name="l02217"></a><span class="lineno"> 2217</span>&#160;                  cca_3d(i,j,k)  = 0.0</div><div class="line"><a name="l02218"></a><span class="lineno"> 2218</span>&#160;<span class="keywordflow">                END IF</span></div><div class="line"><a name="l02219"></a><span class="lineno"> 2219</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l02220"></a><span class="lineno"> 2220</span>&#160;</div><div class="line"><a name="l02221"></a><span class="lineno"> 2221</span>&#160;</div><div class="line"><a name="l02222"></a><span class="lineno"> 2222</span>&#160;              <span class="keywordflow">IF</span> ( l_pc2_diag_sh_pts(i,j) .AND. k &lt;= cct0(i,j)          &amp;</div><div class="line"><a name="l02223"></a><span class="lineno"> 2223</span>&#160;                            .AND. t_earliest(i,j,k) &gt;= <a class="code" href="namespacecv__run__mod.xhtml#ad9fc9a06c049ee7180700c302282c716">tice</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02224"></a><span class="lineno"> 2224</span>&#160;</div><div class="line"><a name="l02225"></a><span class="lineno"> 2225</span>&#160;                    <span class="comment">! Hand over convective attributes to the large scale</span></div><div class="line"><a name="l02226"></a><span class="lineno"> 2226</span>&#160;                t_inc_pc2(i,j,k)   =  t_inc_pc2(i,j,k)                  &amp;</div><div class="line"><a name="l02227"></a><span class="lineno"> 2227</span>&#160;                                    + (lc/cp) *  ccw_cca(i,j,k)</div><div class="line"><a name="l02228"></a><span class="lineno"> 2228</span>&#160;                q_inc_pc2(i,j,k)   =  q_inc_pc2(i,j,k) -  ccw_cca(i,j,k)</div><div class="line"><a name="l02229"></a><span class="lineno"> 2229</span>&#160;                qcl_inc_pc2(i,j,k) =  qcl_inc_pc2(i,j,k)                &amp;</div><div class="line"><a name="l02230"></a><span class="lineno"> 2230</span>&#160;                                    + ccw_cca(i,j,k)</div><div class="line"><a name="l02231"></a><span class="lineno"> 2231</span>&#160;                cfl_inc_pc2(i,j,k) =  cfl_inc_pc2(i,j,k)                &amp;</div><div class="line"><a name="l02232"></a><span class="lineno"> 2232</span>&#160;                                     + cca_3d(i,j,k)</div><div class="line"><a name="l02233"></a><span class="lineno"> 2233</span>&#160;                bcf_inc_pc2(i,j,k) =  bcf_inc_pc2(i,j,k)                &amp;</div><div class="line"><a name="l02234"></a><span class="lineno"> 2234</span>&#160;                                + cca_3d(i,j,k) *(1.0-cff_latest(i,j,k))</div><div class="line"><a name="l02235"></a><span class="lineno"> 2235</span>&#160;</div><div class="line"><a name="l02236"></a><span class="lineno"> 2236</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l02237"></a><span class="lineno"> 2237</span>&#160;</div><div class="line"><a name="l02238"></a><span class="lineno"> 2238</span>&#160;                  <span class="comment">! Reset the section 0 convective cloud back to zero</span></div><div class="line"><a name="l02239"></a><span class="lineno"> 2239</span>&#160;                  <span class="comment">! now that increments have been included in PC2</span></div><div class="line"><a name="l02240"></a><span class="lineno"> 2240</span>&#160;                  <span class="comment">! increments.</span></div><div class="line"><a name="l02241"></a><span class="lineno"> 2241</span>&#160;              cca0(i,j,k)  = 0.0</div><div class="line"><a name="l02242"></a><span class="lineno"> 2242</span>&#160;              cca0_2d(i,j) = 0.0</div><div class="line"><a name="l02243"></a><span class="lineno"> 2243</span>&#160;              ccw0(i,j,k)  = 0.0</div><div class="line"><a name="l02244"></a><span class="lineno"> 2244</span>&#160;</div><div class="line"><a name="l02245"></a><span class="lineno"> 2245</span>&#160;<span class="keywordflow">            END DO</span>  <span class="comment">! i loop</span></div><div class="line"><a name="l02246"></a><span class="lineno"> 2246</span>&#160;<span class="keywordflow">          END DO</span>  <span class="comment">! j</span></div><div class="line"><a name="l02247"></a><span class="lineno"> 2247</span>&#160;<span class="keywordflow">        END DO</span>  <span class="comment">! k</span></div><div class="line"><a name="l02248"></a><span class="lineno"> 2248</span>&#160;</div><div class="line"><a name="l02249"></a><span class="lineno"> 2249</span>&#160;        <span class="keyword">DEALLOCATE</span> (ccw_cca)</div><div class="line"><a name="l02250"></a><span class="lineno"> 2250</span>&#160;        <span class="keyword">DEALLOCATE</span> (cca_3d)</div><div class="line"><a name="l02251"></a><span class="lineno"> 2251</span>&#160;</div><div class="line"><a name="l02252"></a><span class="lineno"> 2252</span>&#160;      <span class="keywordflow">ELSE</span>     <span class="comment">! original code</span></div><div class="line"><a name="l02253"></a><span class="lineno"> 2253</span>&#160;</div><div class="line"><a name="l02254"></a><span class="lineno"> 2254</span>&#160;        <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02255"></a><span class="lineno"> 2255</span>&#160;          <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02256"></a><span class="lineno"> 2256</span>&#160;            <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02257"></a><span class="lineno"> 2257</span>&#160;</div><div class="line"><a name="l02258"></a><span class="lineno"> 2258</span>&#160;</div><div class="line"><a name="l02259"></a><span class="lineno"> 2259</span>&#160;<span class="comment">! If below the LCL in cumulus or unstable (but not shear-dominated)</span></div><div class="line"><a name="l02260"></a><span class="lineno"> 2260</span>&#160;<span class="comment">! boundary layers then we simply zero the liquid water content</span></div><div class="line"><a name="l02261"></a><span class="lineno"> 2261</span>&#160;<span class="comment">! instead of using the homogenous BL response. The forcings</span></div><div class="line"><a name="l02262"></a><span class="lineno"> 2262</span>&#160;<span class="comment">! themselves are still applied but to q and T.</span></div><div class="line"><a name="l02263"></a><span class="lineno"> 2263</span>&#160;              z_theta = <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,0)</div><div class="line"><a name="l02264"></a><span class="lineno"> 2264</span>&#160;              <span class="keywordflow">IF</span> ( ( cumulus(i,j) .AND. k  &lt;=  ntml(i,j) ) .OR.         &amp;</div><div class="line"><a name="l02265"></a><span class="lineno"> 2265</span>&#160;                   ( <a class="code" href="namespacecloud__inputs__mod.xhtml#a79cb0747bc150aa7b8f838bc144a554d">forced_cu</a> &gt;= 1 .AND. (bl_type_3(i,j) &gt; 0.5         &amp;</div><div class="line"><a name="l02266"></a><span class="lineno"> 2266</span>&#160;                      .OR. bl_type_4(i,j) &gt; 0.5 )                       &amp;</div><div class="line"><a name="l02267"></a><span class="lineno"> 2267</span>&#160;                      .AND. z_theta  &lt;  zlcl(i,j) )  ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02268"></a><span class="lineno"> 2268</span>&#160;                t_inc_pc2(i,j,k)   =  (-lc/cp) * qcl_earliest(i,j,k)</div><div class="line"><a name="l02269"></a><span class="lineno"> 2269</span>&#160;                q_inc_pc2(i,j,k)   =  qcl_earliest(i,j,k)</div><div class="line"><a name="l02270"></a><span class="lineno"> 2270</span>&#160;                qcl_inc_pc2(i,j,k) =  (-qcl_earliest(i,j,k))</div><div class="line"><a name="l02271"></a><span class="lineno"> 2271</span>&#160;                cfl_inc_pc2(i,j,k) =  (-cfl_earliest(i,j,k))</div><div class="line"><a name="l02272"></a><span class="lineno"> 2272</span>&#160;                bcf_inc_pc2(i,j,k) =  cff_latest(i,j,k)                 &amp;</div><div class="line"><a name="l02273"></a><span class="lineno"> 2273</span>&#160;                                        -cf_earliest(i,j,k)</div><div class="line"><a name="l02274"></a><span class="lineno"> 2274</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l02275"></a><span class="lineno"> 2275</span>&#160;<span class="keywordflow">            END DO</span>  <span class="comment">! i loop</span></div><div class="line"><a name="l02276"></a><span class="lineno"> 2276</span>&#160;<span class="keywordflow">          END DO</span>  <span class="comment">! j</span></div><div class="line"><a name="l02277"></a><span class="lineno"> 2277</span>&#160;<span class="keywordflow">        END DO</span>  <span class="comment">! k</span></div><div class="line"><a name="l02278"></a><span class="lineno"> 2278</span>&#160;</div><div class="line"><a name="l02279"></a><span class="lineno"> 2279</span>&#160;<span class="keywordflow">      END IF</span>    <span class="comment">! test on l_pc2_diag_sh</span></div><div class="line"><a name="l02280"></a><span class="lineno"> 2280</span>&#160;</div><div class="line"><a name="l02281"></a><span class="lineno"> 2281</span>&#160;      <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02282"></a><span class="lineno"> 2282</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02283"></a><span class="lineno"> 2283</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02284"></a><span class="lineno"> 2284</span>&#160;</div><div class="line"><a name="l02285"></a><span class="lineno"> 2285</span>&#160;<span class="comment">! Update working version of temperature, moisture and cloud fields with</span></div><div class="line"><a name="l02286"></a><span class="lineno"> 2286</span>&#160;<span class="comment">! increments from the PC2 homogenous response.</span></div><div class="line"><a name="l02287"></a><span class="lineno"> 2287</span>&#160;</div><div class="line"><a name="l02288"></a><span class="lineno"> 2288</span>&#160;            t_latest(i,j,k)   = t_earliest(i,j,k) + tl_force(i,j,k)     &amp;</div><div class="line"><a name="l02289"></a><span class="lineno"> 2289</span>&#160;                               + t_inc_pc2(i,j,k)</div><div class="line"><a name="l02290"></a><span class="lineno"> 2290</span>&#160;            q_latest(i,j,k)   = q_earliest(i,j,k) + qt_force(i,j,k)     &amp;</div><div class="line"><a name="l02291"></a><span class="lineno"> 2291</span>&#160;                               + q_inc_pc2(i,j,k)</div><div class="line"><a name="l02292"></a><span class="lineno"> 2292</span>&#160;            qcl_latest(i,j,k) = qcl_earliest(i,j,k)                     &amp;</div><div class="line"><a name="l02293"></a><span class="lineno"> 2293</span>&#160;                               + qcl_inc_pc2(i,j,k)</div><div class="line"><a name="l02294"></a><span class="lineno"> 2294</span>&#160;            cfl_latest(i,j,k) = cfl_earliest(i,j,k)                     &amp;</div><div class="line"><a name="l02295"></a><span class="lineno"> 2295</span>&#160;                               + cfl_inc_pc2(i,j,k)</div><div class="line"><a name="l02296"></a><span class="lineno"> 2296</span>&#160;            cf_latest(i,j,k)  =  cf_earliest(i,j,k)                     &amp;</div><div class="line"><a name="l02297"></a><span class="lineno"> 2297</span>&#160;                               + bcf_inc_pc2(i,j,k)</div><div class="line"><a name="l02298"></a><span class="lineno"> 2298</span>&#160;<span class="comment">!               qcf_latest and cff_latest are not updated</span></div><div class="line"><a name="l02299"></a><span class="lineno"> 2299</span>&#160;</div><div class="line"><a name="l02300"></a><span class="lineno"> 2300</span>&#160;<span class="keywordflow">          END DO</span>  <span class="comment">! i loop</span></div><div class="line"><a name="l02301"></a><span class="lineno"> 2301</span>&#160;<span class="keywordflow">        END DO</span>  <span class="comment">! j</span></div><div class="line"><a name="l02302"></a><span class="lineno"> 2302</span>&#160;<span class="keywordflow">      END DO</span>  <span class="comment">! k</span></div><div class="line"><a name="l02303"></a><span class="lineno"> 2303</span>&#160;</div><div class="line"><a name="l02304"></a><span class="lineno"> 2304</span>&#160;      <span class="keyword">DEALLOCATE</span> (zeros)</div><div class="line"><a name="l02305"></a><span class="lineno"> 2305</span>&#160;<span class="comment">! Parametrize &quot;forced cumulus clouds&quot; at top of well-mixed BL</span></div><div class="line"><a name="l02306"></a><span class="lineno"> 2306</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a79cb0747bc150aa7b8f838bc144a554d">forced_cu</a> == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02307"></a><span class="lineno"> 2307</span>&#160;        <span class="keyword">ALLOCATE</span>( qs(tdims%i_start:tdims%i_end,                         &amp;</div><div class="line"><a name="l02308"></a><span class="lineno"> 2308</span>&#160;                     tdims%j_start:tdims%j_end,tdims%k_end) )</div><div class="line"><a name="l02309"></a><span class="lineno"> 2309</span>&#160;<span class="comment">! Use TL_force to store TL_latest</span></div><div class="line"><a name="l02310"></a><span class="lineno"> 2310</span>&#160;        <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02311"></a><span class="lineno"> 2311</span>&#160;          <span class="keywordflow">DO</span> j = tdims%j_start, tdims%j_end</div><div class="line"><a name="l02312"></a><span class="lineno"> 2312</span>&#160;            <span class="keywordflow">DO</span> i = tdims%i_start, tdims%i_end</div><div class="line"><a name="l02313"></a><span class="lineno"> 2313</span>&#160;              tl_force(i,j,k) = t_latest(i,j,k)                         &amp;</div><div class="line"><a name="l02314"></a><span class="lineno"> 2314</span>&#160;                                - (lc/cp) * qcl_latest(i,j,k)</div><div class="line"><a name="l02315"></a><span class="lineno"> 2315</span>&#160;<span class="keywordflow">            END DO</span>  <span class="comment">! i loop</span></div><div class="line"><a name="l02316"></a><span class="lineno"> 2316</span>&#160;<span class="keywordflow">          END DO</span>  <span class="comment">! j</span></div><div class="line"><a name="l02317"></a><span class="lineno"> 2317</span>&#160;<span class="keywordflow">        END DO</span>  <span class="comment">! k</span></div><div class="line"><a name="l02318"></a><span class="lineno"> 2318</span>&#160;</div><div class="line"><a name="l02319"></a><span class="lineno"> 2319</span>&#160;        <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02320"></a><span class="lineno"> 2320</span>&#160;<span class="comment">! DEPENDS ON: qsat_mix</span></div><div class="line"><a name="l02321"></a><span class="lineno"> 2321</span>&#160;          <span class="keyword">CALL </span><a class="code" href="qsat__mix_8f90.xhtml#ab2c9bd03497c107afdc2ea71e3887626" title="Saturation Specific Humidity/mixing Scheme(Qsat):Vapour to Liquid/Ice. ">qsat_mix</a>(qs(1,1,k),tl_force(1,1,k),                      &amp;</div><div class="line"><a name="l02322"></a><span class="lineno"> 2322</span>&#160;            p_layer_centres(1,1,k),tdims%i_end*tdims%j_end,lq_mix_bl)</div><div class="line"><a name="l02323"></a><span class="lineno"> 2323</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02324"></a><span class="lineno"> 2324</span>&#160;</div><div class="line"><a name="l02325"></a><span class="lineno"> 2325</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02326"></a><span class="lineno"> 2326</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02327"></a><span class="lineno"> 2327</span>&#160;            <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02328"></a><span class="lineno"> 2328</span>&#160;              z_theta = <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,0)</div><div class="line"><a name="l02329"></a><span class="lineno"> 2329</span>&#160;              zc_depth = zh(i,j)+dzh(i,j)-zlcl(i,j)</div><div class="line"><a name="l02330"></a><span class="lineno"> 2330</span>&#160;              <span class="keywordflow">IF</span> ( z_theta &gt;= zlcl(i,j)                                 &amp;</div><div class="line"><a name="l02331"></a><span class="lineno"> 2331</span>&#160;                  .AND. z_theta &lt;= zh(i,j)+dzh(i,j)                     &amp;</div><div class="line"><a name="l02332"></a><span class="lineno"> 2332</span>&#160;                  .AND. zc_depth &gt; 1.0                                  &amp;</div><div class="line"><a name="l02333"></a><span class="lineno"> 2333</span>&#160;                  .AND. cfl_latest(i,j,k) &lt; 0.5                         &amp;</div><div class="line"><a name="l02334"></a><span class="lineno"> 2334</span>&#160;                  .AND. bl_type_3(i,j)&gt;0.5                              &amp;</div><div class="line"><a name="l02335"></a><span class="lineno"> 2335</span>&#160;                 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02336"></a><span class="lineno"> 2336</span>&#160;                rht = (q_latest(i,j,k)+qcl_latest(i,j,k))/qs(i,j,k)</div><div class="line"><a name="l02337"></a><span class="lineno"> 2337</span>&#160;                cf_top  = 0.1</div><div class="line"><a name="l02338"></a><span class="lineno"> 2338</span>&#160;                  <span class="comment">! Make cloud fraction at cloud base a function of</span></div><div class="line"><a name="l02339"></a><span class="lineno"> 2339</span>&#160;                  <span class="comment">! the cloud depth:</span></div><div class="line"><a name="l02340"></a><span class="lineno"> 2340</span>&#160;                cf_base = max( cf_top,                                  &amp;</div><div class="line"><a name="l02341"></a><span class="lineno"> 2341</span>&#160;                               0.3 * min( 1.0, zc_depth/300.0 ) )</div><div class="line"><a name="l02342"></a><span class="lineno"> 2342</span>&#160;                cf_forced = cf_base - (cf_base-cf_top) *                &amp;</div><div class="line"><a name="l02343"></a><span class="lineno"> 2343</span>&#160;                                      (z_theta-zlcl(i,j)) / zc_depth</div><div class="line"><a name="l02344"></a><span class="lineno"> 2344</span>&#160;                  <span class="comment">! calculate implied RHcrit (between 0.01 and 0.99)</span></div><div class="line"><a name="l02345"></a><span class="lineno"> 2345</span>&#160;                rhc = max( 0.01, min( 0.99,                             &amp;</div><div class="line"><a name="l02346"></a><span class="lineno"> 2346</span>&#160;                                 (rht - sqrt(2.0*cf_forced))/           &amp;</div><div class="line"><a name="l02347"></a><span class="lineno"> 2347</span>&#160;                                 (1.0- sqrt(2.0*cf_forced)) ) )</div><div class="line"><a name="l02348"></a><span class="lineno"> 2348</span>&#160;                qn = (rht-1.0)/(1.0-rhc)</div><div class="line"><a name="l02349"></a><span class="lineno"> 2349</span>&#160;                alpha=repsilon*lc*qs(i,j,k)/(r*tl_force(i,j,k)**2)</div><div class="line"><a name="l02350"></a><span class="lineno"> 2350</span>&#160;                al=1.0/(1.0+lcrcp*alpha)</div><div class="line"><a name="l02351"></a><span class="lineno"> 2351</span>&#160;                bs=al*(1.0-rhc)*qs(i,j,k)</div><div class="line"><a name="l02352"></a><span class="lineno"> 2352</span>&#160;                qcl_forced = 0.00001  <span class="comment">! small default cloud water</span></div><div class="line"><a name="l02353"></a><span class="lineno"> 2353</span>&#160;                <span class="keywordflow">IF</span> (qn &gt; -1.0 .AND. qn &lt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02354"></a><span class="lineno"> 2354</span>&#160;                  qcl_forced = (bs/6.0)*(1.0 + qn)**3</div><div class="line"><a name="l02355"></a><span class="lineno"> 2355</span>&#160;                <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (qn &lt; 1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02356"></a><span class="lineno"> 2356</span>&#160;                  qcl_forced = bs*( qn + ((1.0-qn)**3)/6.0 )</div><div class="line"><a name="l02357"></a><span class="lineno"> 2357</span>&#160;                <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02358"></a><span class="lineno"> 2358</span>&#160;                  qcl_forced = bs*qn</div><div class="line"><a name="l02359"></a><span class="lineno"> 2359</span>&#160;<span class="keywordflow">                END IF</span></div><div class="line"><a name="l02360"></a><span class="lineno"> 2360</span>&#160;                <span class="keywordflow">IF</span> ( cf_forced &gt; cfl_latest(i,j,k) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02361"></a><span class="lineno"> 2361</span>&#160;                  dcfl = cf_forced - cfl_latest(i,j,k)</div><div class="line"><a name="l02362"></a><span class="lineno"> 2362</span>&#160;                  cfl_latest(i,j,k) = cf_forced</div><div class="line"><a name="l02363"></a><span class="lineno"> 2363</span>&#160;                  cf_latest(i,j,k)  = cf_latest(i,j,k) + dcfl</div><div class="line"><a name="l02364"></a><span class="lineno"> 2364</span>&#160;                  dqcl = max( qcl_latest(i,j,k), qcl_forced )           &amp;</div><div class="line"><a name="l02365"></a><span class="lineno"> 2365</span>&#160;                          - qcl_latest(i,j,k)</div><div class="line"><a name="l02366"></a><span class="lineno"> 2366</span>&#160;                  qcl_latest(i,j,k) = max( qcl_latest(i,j,k),           &amp;</div><div class="line"><a name="l02367"></a><span class="lineno"> 2367</span>&#160;                                           qcl_forced )</div><div class="line"><a name="l02368"></a><span class="lineno"> 2368</span>&#160;                  t_latest(i,j,k)  = t_latest(i,j,k)+(lc/cp) * dqcl</div><div class="line"><a name="l02369"></a><span class="lineno"> 2369</span>&#160;                  q_latest(i,j,k)  = q_latest(i,j,k) - dqcl</div><div class="line"><a name="l02370"></a><span class="lineno"> 2370</span>&#160;<span class="keywordflow">                END IF</span></div><div class="line"><a name="l02371"></a><span class="lineno"> 2371</span>&#160;<span class="keywordflow">              END IF</span>  <span class="comment">! test on z and BLtype</span></div><div class="line"><a name="l02372"></a><span class="lineno"> 2372</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l02373"></a><span class="lineno"> 2373</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l02374"></a><span class="lineno"> 2374</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02375"></a><span class="lineno"> 2375</span>&#160;        <span class="keyword">DEALLOCATE</span> (qs)</div><div class="line"><a name="l02376"></a><span class="lineno"> 2376</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! test on forced_cu eq 1</span></div><div class="line"><a name="l02377"></a><span class="lineno"> 2377</span>&#160;      <span class="keyword">DEALLOCATE</span> ( bcf_inc_pc2 )</div><div class="line"><a name="l02378"></a><span class="lineno"> 2378</span>&#160;      <span class="keyword">DEALLOCATE</span> ( cfl_inc_pc2 )</div><div class="line"><a name="l02379"></a><span class="lineno"> 2379</span>&#160;      <span class="keyword">DEALLOCATE</span> ( qcl_inc_pc2 )</div><div class="line"><a name="l02380"></a><span class="lineno"> 2380</span>&#160;      <span class="keyword">DEALLOCATE</span> ( q_inc_pc2 )</div><div class="line"><a name="l02381"></a><span class="lineno"> 2381</span>&#160;      <span class="keyword">DEALLOCATE</span> ( t_inc_pc2 )</div><div class="line"><a name="l02382"></a><span class="lineno"> 2382</span>&#160;      <span class="keyword">DEALLOCATE</span> (tl_force)</div><div class="line"><a name="l02383"></a><span class="lineno"> 2383</span>&#160;      <span class="keyword">DEALLOCATE</span> (qt_force)</div><div class="line"><a name="l02384"></a><span class="lineno"> 2384</span>&#160;<span class="comment">! ! Copy updated cloud fractions to the in/out variables</span></div><div class="line"><a name="l02385"></a><span class="lineno"> 2385</span>&#160;<span class="comment">!      IF (.NOT. l_cld_area) THEN</span></div><div class="line"><a name="l02386"></a><span class="lineno"> 2386</span>&#160;</div><div class="line"><a name="l02387"></a><span class="lineno"> 2387</span>&#160;        <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02388"></a><span class="lineno"> 2388</span>&#160;          <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02389"></a><span class="lineno"> 2389</span>&#160;            <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02390"></a><span class="lineno"> 2390</span>&#160;                  <span class="comment">! For the moment set area cloud fraction</span></div><div class="line"><a name="l02391"></a><span class="lineno"> 2391</span>&#160;                  <span class="comment">! to the bulk cloud fraction</span></div><div class="line"><a name="l02392"></a><span class="lineno"> 2392</span>&#160;              area_cloud_fraction(i,j,k)=cf_latest(i,j,k)</div><div class="line"><a name="l02393"></a><span class="lineno"> 2393</span>&#160;                  <span class="comment">! Ensure it has a value between 0.0 and 1.0</span></div><div class="line"><a name="l02394"></a><span class="lineno"> 2394</span>&#160;              area_cloud_fraction(i,j,k)=                               &amp;</div><div class="line"><a name="l02395"></a><span class="lineno"> 2395</span>&#160;                   max(min(area_cloud_fraction(i,j,k),1.0),0.0)</div><div class="line"><a name="l02396"></a><span class="lineno"> 2396</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l02397"></a><span class="lineno"> 2397</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l02398"></a><span class="lineno"> 2398</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02399"></a><span class="lineno"> 2399</span>&#160;</div><div class="line"><a name="l02400"></a><span class="lineno"> 2400</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02401"></a><span class="lineno"> 2401</span>&#160;</div><div class="line"><a name="l02402"></a><span class="lineno"> 2402</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a6c812fb3aac239f0dedbc794d787ae46">l_acf_brooks</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02403"></a><span class="lineno"> 2403</span>&#160;</div><div class="line"><a name="l02404"></a><span class="lineno"> 2404</span>&#160;<span class="comment">! DEPENDS ON: ls_acf_brooks</span></div><div class="line"><a name="l02405"></a><span class="lineno"> 2405</span>&#160;          <span class="keyword">CALL </span><a class="code" href="ls__acf__brooks_8f90.xhtml#a63af0c69b0ce0df3b5570af35c2035df" title="Subroutine Interface: ">ls_acf_brooks</a> (                                          &amp;</div><div class="line"><a name="l02406"></a><span class="lineno"> 2406</span>&#160;               delta_lambda, delta_phi,                                 &amp;</div><div class="line"><a name="l02407"></a><span class="lineno"> 2407</span>&#160;               fv_cos_theta_latitude,                                   &amp;</div><div class="line"><a name="l02408"></a><span class="lineno"> 2408</span>&#160;               bulk_cloud_fraction, cloud_fraction_liquid,              &amp;</div><div class="line"><a name="l02409"></a><span class="lineno"> 2409</span>&#160;               cloud_fraction_frozen, cumulus,                          &amp;</div><div class="line"><a name="l02410"></a><span class="lineno"> 2410</span>&#160;               area_cloud_fraction )</div><div class="line"><a name="l02411"></a><span class="lineno"> 2411</span>&#160;</div><div class="line"><a name="l02412"></a><span class="lineno"> 2412</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! L_ACF_Brooks</span></div><div class="line"><a name="l02413"></a><span class="lineno"> 2413</span>&#160;</div><div class="line"><a name="l02414"></a><span class="lineno"> 2414</span>&#160;<span class="comment">! call sub-level interpolation parameterisation of cloud area</span></div><div class="line"><a name="l02415"></a><span class="lineno"> 2415</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a0beb50d23fbd057bc3ebb23973490bbf">l_acf_cusack</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02416"></a><span class="lineno"> 2416</span>&#160;</div><div class="line"><a name="l02417"></a><span class="lineno"> 2417</span>&#160;<span class="comment">! Determine number of sublevels for vertical gradient area cloud</span></div><div class="line"><a name="l02418"></a><span class="lineno"> 2418</span>&#160;<span class="comment">! Want an odd number of sublevels per level: 3 is hardwired in do loops</span></div><div class="line"><a name="l02419"></a><span class="lineno"> 2419</span>&#160;          levels_per_level = 3</div><div class="line"><a name="l02420"></a><span class="lineno"> 2420</span>&#160;          large_levels = ((qdims%k_end - 2)*levels_per_level) + 2</div><div class="line"><a name="l02421"></a><span class="lineno"> 2421</span>&#160;</div><div class="line"><a name="l02422"></a><span class="lineno"> 2422</span>&#160;<span class="comment">! DEPENDS ON: pc2_hom_arcld</span></div><div class="line"><a name="l02423"></a><span class="lineno"> 2423</span>&#160;          <span class="keyword">CALL </span><a class="code" href="pc2__hom__arcld_8f90.xhtml#af6c1bd55e74a5829e5f51718d8b921a6" title="Area cloud parameterisation for use with PC2 Cloud Scheme. Area cloud parameterisation for use with P...">pc2_hom_arcld</a>(p_layer_centres,p_layer_boundaries,        &amp;</div><div class="line"><a name="l02424"></a><span class="lineno"> 2424</span>&#160;           large_levels,levels_per_level,                               &amp;</div><div class="line"><a name="l02425"></a><span class="lineno"> 2425</span>&#160;           area_cloud_fraction,t_latest,bulk_cloud_fraction,            &amp;</div><div class="line"><a name="l02426"></a><span class="lineno"> 2426</span>&#160;           cloud_fraction_liquid,cloud_fraction_frozen,q_latest,        &amp;</div><div class="line"><a name="l02427"></a><span class="lineno"> 2427</span>&#160;           qcl_latest,qcf_latest,                                       &amp;</div><div class="line"><a name="l02428"></a><span class="lineno"> 2428</span>&#160;           lq_mix_bl)</div><div class="line"><a name="l02429"></a><span class="lineno"> 2429</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! L_ACF_Cusack</span></div><div class="line"><a name="l02430"></a><span class="lineno"> 2430</span>&#160;</div><div class="line"><a name="l02431"></a><span class="lineno"> 2431</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! L_cld_area</span></div><div class="line"><a name="l02432"></a><span class="lineno"> 2432</span>&#160;</div><div class="line"><a name="l02433"></a><span class="lineno"> 2433</span>&#160;<span class="comment">! ! Provide an estimate of convective cloud fraction for visibility</span></div><div class="line"><a name="l02434"></a><span class="lineno"> 2434</span>&#160;<span class="comment">!      DO j = qdims%j_start, qdims%j_end</span></div><div class="line"><a name="l02435"></a><span class="lineno"> 2435</span>&#160;        <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02436"></a><span class="lineno"> 2436</span>&#160;          <span class="keywordflow">IF</span> (cca_at_base(i,j) == 0.0 .AND.                             &amp;</div><div class="line"><a name="l02437"></a><span class="lineno"> 2437</span>&#160;             (conv_rain(i,j) + conv_snow(i,j)) &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02438"></a><span class="lineno"> 2438</span>&#160;                 <span class="comment">! Convective precipitation exists but no</span></div><div class="line"><a name="l02439"></a><span class="lineno"> 2439</span>&#160;                 <span class="comment">! estimate for its cloud fraction. Set it</span></div><div class="line"><a name="l02440"></a><span class="lineno"> 2440</span>&#160;                 <span class="comment">! to a constant value of 0.2 as an estimate.</span></div><div class="line"><a name="l02441"></a><span class="lineno"> 2441</span>&#160;            cca_at_base(i,j) = 0.2</div><div class="line"><a name="l02442"></a><span class="lineno"> 2442</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l02443"></a><span class="lineno"> 2443</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02444"></a><span class="lineno"> 2444</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02445"></a><span class="lineno"> 2445</span>&#160;</div><div class="line"><a name="l02446"></a><span class="lineno"> 2446</span>&#160;<span class="comment">! !  PC2: End of cloud section</span></div><div class="line"><a name="l02447"></a><span class="lineno"> 2447</span>&#160;<span class="comment">!    ELSE   !  L_pc2</span></div><div class="line"><a name="l02448"></a><span class="lineno"> 2448</span>&#160;</div><div class="line"><a name="l02449"></a><span class="lineno"> 2449</span>&#160;<span class="comment">! ! Section BL.4b Call cloud scheme to convert Tl and qT to T, q and qcl</span></div><div class="line"><a name="l02450"></a><span class="lineno"> 2450</span>&#160;<span class="comment">! in boundary layer, calculate bulk_cloud fields from qT and qcf</span></div><div class="line"><a name="l02451"></a><span class="lineno"> 2451</span>&#160;<span class="comment">! and calculate area_cloud fields.</span></div><div class="line"><a name="l02452"></a><span class="lineno"> 2452</span>&#160;<span class="comment">! Determine number of sublevels for vertical gradient area cloud</span></div><div class="line"><a name="l02453"></a><span class="lineno"> 2453</span>&#160;<span class="comment">! Want an odd number of sublevels per level: 3 is hardwired in do loops</span></div><div class="line"><a name="l02454"></a><span class="lineno"> 2454</span>&#160;      levels_per_level = 3</div><div class="line"><a name="l02455"></a><span class="lineno"> 2455</span>&#160;      large_levels = ((qdims%k_end - 2)*levels_per_level) + 2</div><div class="line"><a name="l02456"></a><span class="lineno"> 2456</span>&#160;</div><div class="line"><a name="l02457"></a><span class="lineno"> 2457</span>&#160;<span class="comment">! DEPENDS ON: ls_arcld</span></div><div class="line"><a name="l02458"></a><span class="lineno"> 2458</span>&#160;      <span class="keyword">CALL </span><a class="code" href="ls__arcld_8f90.xhtml#a93d82ad6f454b35ff21cb20a6eff42d6" title="Large-scale Area (Vertical Gradient) Cloud Scheme. ">ls_arcld</a>( p_layer_centres, rhcpt, p_layer_boundaries,        &amp;</div><div class="line"><a name="l02459"></a><span class="lineno"> 2459</span>&#160;                   rhc_row_length, rhc_rows, bl_levels,                 &amp;</div><div class="line"><a name="l02460"></a><span class="lineno"> 2460</span>&#160;                   levels_per_level, large_levels,                      &amp;</div><div class="line"><a name="l02461"></a><span class="lineno"> 2461</span>&#160;                   <a class="code" href="namespacecloud__inputs__mod.xhtml#af2526dc522554e1852d2b801552264d8">l_cld_area</a>,<a class="code" href="namespacecloud__inputs__mod.xhtml#a0beb50d23fbd057bc3ebb23973490bbf">l_acf_cusack</a>,<a class="code" href="namespacecloud__inputs__mod.xhtml#a6c812fb3aac239f0dedbc794d787ae46">l_acf_brooks</a>,                &amp;</div><div class="line"><a name="l02462"></a><span class="lineno"> 2462</span>&#160;                   delta_lambda, delta_phi,                             &amp;</div><div class="line"><a name="l02463"></a><span class="lineno"> 2463</span>&#160;                   fv_cos_theta_latitude,                               &amp;</div><div class="line"><a name="l02464"></a><span class="lineno"> 2464</span>&#160;                   ntml, cumulus, lq_mix_bl, qcf_latest,                &amp;</div><div class="line"><a name="l02465"></a><span class="lineno"> 2465</span>&#160;                   t_latest, q_latest, qcl_latest,                      &amp;</div><div class="line"><a name="l02466"></a><span class="lineno"> 2466</span>&#160;                   area_cloud_fraction, bulk_cloud_fraction,            &amp;</div><div class="line"><a name="l02467"></a><span class="lineno"> 2467</span>&#160;                   cloud_fraction_liquid, cloud_fraction_frozen,        &amp;</div><div class="line"><a name="l02468"></a><span class="lineno"> 2468</span>&#160;                   error_code)</div><div class="line"><a name="l02469"></a><span class="lineno"> 2469</span>&#160;</div><div class="line"><a name="l02470"></a><span class="lineno"> 2470</span>&#160;<span class="keywordflow">    END IF</span>   <span class="comment">! L_pc2</span></div><div class="line"><a name="l02471"></a><span class="lineno"> 2471</span>&#160;</div><div class="line"><a name="l02472"></a><span class="lineno"> 2472</span>&#160;    <span class="keywordflow">IF</span> ( bl_diag%l_t_incr .OR. bl_diag%l_tl_incr ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02473"></a><span class="lineno"> 2473</span>&#160;      <span class="keyword">ALLOCATE</span> ( bl_diag%t_incr(tdims%i_start:tdims%i_end,              &amp;</div><div class="line"><a name="l02474"></a><span class="lineno"> 2474</span>&#160;                                tdims%j_start:tdims%j_end,              &amp;</div><div class="line"><a name="l02475"></a><span class="lineno"> 2475</span>&#160;                                            1:tdims%k_end) )</div><div class="line"><a name="l02476"></a><span class="lineno"> 2476</span>&#160;      <span class="keywordflow">DO</span> k = 1, tdims%k_end</div><div class="line"><a name="l02477"></a><span class="lineno"> 2477</span>&#160;        <span class="keywordflow">DO</span> j = tdims%j_start, tdims%j_end</div><div class="line"><a name="l02478"></a><span class="lineno"> 2478</span>&#160;          <span class="keywordflow">DO</span> i = tdims%i_start, tdims%i_end</div><div class="line"><a name="l02479"></a><span class="lineno"> 2479</span>&#160;            bl_diag%t_incr(i,j,k) = t_latest(i,j,k) - t_earliest(i,j,k)</div><div class="line"><a name="l02480"></a><span class="lineno"> 2480</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l02481"></a><span class="lineno"> 2481</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l02482"></a><span class="lineno"> 2482</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l02483"></a><span class="lineno"> 2483</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02484"></a><span class="lineno"> 2484</span>&#160;      <span class="keyword">ALLOCATE</span> ( bl_diag%t_incr(1,1,1) )</div><div class="line"><a name="l02485"></a><span class="lineno"> 2485</span>&#160;<span class="keywordflow">    END IF</span>                   <span class="comment">! on STASHflags</span></div><div class="line"><a name="l02486"></a><span class="lineno"> 2486</span>&#160;</div><div class="line"><a name="l02487"></a><span class="lineno"> 2487</span>&#160;    <span class="keywordflow">IF</span> ( bl_diag%l_q_incr .OR. bl_diag%l_qtl_incr ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02488"></a><span class="lineno"> 2488</span>&#160;      <span class="keyword">ALLOCATE</span> ( bl_diag%q_incr(qdims%i_start:qdims%i_end,              &amp;</div><div class="line"><a name="l02489"></a><span class="lineno"> 2489</span>&#160;                                qdims%j_start:qdims%j_end,              &amp;</div><div class="line"><a name="l02490"></a><span class="lineno"> 2490</span>&#160;                                            1:qdims%k_end) )</div><div class="line"><a name="l02491"></a><span class="lineno"> 2491</span>&#160;      <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02492"></a><span class="lineno"> 2492</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02493"></a><span class="lineno"> 2493</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02494"></a><span class="lineno"> 2494</span>&#160;            bl_diag%q_incr(i,j,k) = q_latest(i,j,k) - q_earliest(i,j,k)</div><div class="line"><a name="l02495"></a><span class="lineno"> 2495</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l02496"></a><span class="lineno"> 2496</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l02497"></a><span class="lineno"> 2497</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l02498"></a><span class="lineno"> 2498</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02499"></a><span class="lineno"> 2499</span>&#160;      <span class="keyword">ALLOCATE</span> ( bl_diag%q_incr(1,1,1) )</div><div class="line"><a name="l02500"></a><span class="lineno"> 2500</span>&#160;<span class="keywordflow">    END IF</span>                  <span class="comment">! on STASHflags</span></div><div class="line"><a name="l02501"></a><span class="lineno"> 2501</span>&#160;</div><div class="line"><a name="l02502"></a><span class="lineno"> 2502</span>&#160;    <span class="keywordflow">IF</span> ( bl_diag%l_qcl_incr .OR. bl_diag%l_tl_incr .OR.                 &amp;</div><div class="line"><a name="l02503"></a><span class="lineno"> 2503</span>&#160;         bl_diag%l_qtl_incr ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02504"></a><span class="lineno"> 2504</span>&#160;      <span class="keyword">ALLOCATE</span> ( bl_diag%qcl_incr(qdims%i_start:qdims%i_end,            &amp;</div><div class="line"><a name="l02505"></a><span class="lineno"> 2505</span>&#160;                                  qdims%j_start:qdims%j_end,            &amp;</div><div class="line"><a name="l02506"></a><span class="lineno"> 2506</span>&#160;                                              1:qdims%k_end) )</div><div class="line"><a name="l02507"></a><span class="lineno"> 2507</span>&#160;      <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02508"></a><span class="lineno"> 2508</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02509"></a><span class="lineno"> 2509</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02510"></a><span class="lineno"> 2510</span>&#160;            bl_diag%qcl_incr(i,j,k) = qcl_latest(i,j,k)                 &amp;</div><div class="line"><a name="l02511"></a><span class="lineno"> 2511</span>&#160;                                    - qcl_earliest(i,j,k)</div><div class="line"><a name="l02512"></a><span class="lineno"> 2512</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l02513"></a><span class="lineno"> 2513</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l02514"></a><span class="lineno"> 2514</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l02515"></a><span class="lineno"> 2515</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02516"></a><span class="lineno"> 2516</span>&#160;      <span class="keyword">ALLOCATE</span> ( bl_diag%qcl_incr(1,1,1) )</div><div class="line"><a name="l02517"></a><span class="lineno"> 2517</span>&#160;<span class="keywordflow">    END IF</span>                  <span class="comment">! on STASHflag</span></div><div class="line"><a name="l02518"></a><span class="lineno"> 2518</span>&#160;</div><div class="line"><a name="l02519"></a><span class="lineno"> 2519</span>&#160;    <span class="keywordflow">IF</span> ( bl_diag%l_qcf_incr ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02520"></a><span class="lineno"> 2520</span>&#160;      <span class="keyword">ALLOCATE</span> (bl_diag%qcf_incr(qdims%i_start:qdims%i_end,             &amp;</div><div class="line"><a name="l02521"></a><span class="lineno"> 2521</span>&#160;                                 qdims%j_start:qdims%j_end,             &amp;</div><div class="line"><a name="l02522"></a><span class="lineno"> 2522</span>&#160;                                             1:qdims%k_end))</div><div class="line"><a name="l02523"></a><span class="lineno"> 2523</span>&#160;      <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02524"></a><span class="lineno"> 2524</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02525"></a><span class="lineno"> 2525</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02526"></a><span class="lineno"> 2526</span>&#160;            bl_diag%qcf_incr(i,j,k) = qcf_latest(i,j,k)                 &amp;</div><div class="line"><a name="l02527"></a><span class="lineno"> 2527</span>&#160;                                    - qcf_earliest(i,j,k)</div><div class="line"><a name="l02528"></a><span class="lineno"> 2528</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l02529"></a><span class="lineno"> 2529</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l02530"></a><span class="lineno"> 2530</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l02531"></a><span class="lineno"> 2531</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02532"></a><span class="lineno"> 2532</span>&#160;      <span class="keyword">ALLOCATE</span> ( bl_diag%qcf_incr(1,1,1) )</div><div class="line"><a name="l02533"></a><span class="lineno"> 2533</span>&#160;<span class="keywordflow">    END IF</span>                  <span class="comment">! on STASHflag!</span></div><div class="line"><a name="l02534"></a><span class="lineno"> 2534</span>&#160;</div><div class="line"><a name="l02535"></a><span class="lineno"> 2535</span>&#160;    <span class="keywordflow">IF</span> ( bl_diag%l_cf_incr ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02536"></a><span class="lineno"> 2536</span>&#160;      <span class="keyword">ALLOCATE</span> (bl_diag%cf_incr(qdims%i_start:qdims%i_end,              &amp;</div><div class="line"><a name="l02537"></a><span class="lineno"> 2537</span>&#160;                                qdims%j_start:qdims%j_end,              &amp;</div><div class="line"><a name="l02538"></a><span class="lineno"> 2538</span>&#160;                                            1:qdims%k_end))</div><div class="line"><a name="l02539"></a><span class="lineno"> 2539</span>&#160;      <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02540"></a><span class="lineno"> 2540</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02541"></a><span class="lineno"> 2541</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02542"></a><span class="lineno"> 2542</span>&#160;            bl_diag%cf_incr(i,j,k) = cf_latest(i,j,k)                   &amp;</div><div class="line"><a name="l02543"></a><span class="lineno"> 2543</span>&#160;                                   - cf_earliest(i,j,k)</div><div class="line"><a name="l02544"></a><span class="lineno"> 2544</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l02545"></a><span class="lineno"> 2545</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l02546"></a><span class="lineno"> 2546</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l02547"></a><span class="lineno"> 2547</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02548"></a><span class="lineno"> 2548</span>&#160;      <span class="keyword">ALLOCATE</span> ( bl_diag%cf_incr(1,1,1) )</div><div class="line"><a name="l02549"></a><span class="lineno"> 2549</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l02550"></a><span class="lineno"> 2550</span>&#160;</div><div class="line"><a name="l02551"></a><span class="lineno"> 2551</span>&#160;    <span class="keywordflow">IF</span> ( bl_diag%l_cfl_incr ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02552"></a><span class="lineno"> 2552</span>&#160;      <span class="keyword">ALLOCATE</span> (bl_diag%cfl_incr(qdims%i_start:qdims%i_end,             &amp;</div><div class="line"><a name="l02553"></a><span class="lineno"> 2553</span>&#160;                                 qdims%j_start:qdims%j_end,             &amp;</div><div class="line"><a name="l02554"></a><span class="lineno"> 2554</span>&#160;                                             1:qdims%k_end))</div><div class="line"><a name="l02555"></a><span class="lineno"> 2555</span>&#160;      <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02556"></a><span class="lineno"> 2556</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02557"></a><span class="lineno"> 2557</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02558"></a><span class="lineno"> 2558</span>&#160;            bl_diag%cfl_incr(i,j,k) = cfl_latest(i,j,k)                 &amp;</div><div class="line"><a name="l02559"></a><span class="lineno"> 2559</span>&#160;                                    - cfl_earliest(i,j,k)</div><div class="line"><a name="l02560"></a><span class="lineno"> 2560</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l02561"></a><span class="lineno"> 2561</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l02562"></a><span class="lineno"> 2562</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l02563"></a><span class="lineno"> 2563</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02564"></a><span class="lineno"> 2564</span>&#160;      <span class="keyword">ALLOCATE</span> ( bl_diag%cfl_incr(1,1,1) )</div><div class="line"><a name="l02565"></a><span class="lineno"> 2565</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l02566"></a><span class="lineno"> 2566</span>&#160;</div><div class="line"><a name="l02567"></a><span class="lineno"> 2567</span>&#160;    <span class="keywordflow">IF</span> ( bl_diag%l_cff_incr ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02568"></a><span class="lineno"> 2568</span>&#160;      <span class="keyword">ALLOCATE</span> (bl_diag%cff_incr(qdims%i_start:qdims%i_end,             &amp;</div><div class="line"><a name="l02569"></a><span class="lineno"> 2569</span>&#160;                                 qdims%j_start:qdims%j_end,             &amp;</div><div class="line"><a name="l02570"></a><span class="lineno"> 2570</span>&#160;                                             1:qdims%k_end))</div><div class="line"><a name="l02571"></a><span class="lineno"> 2571</span>&#160;      <span class="keywordflow">DO</span> k = 1, qdims%k_end</div><div class="line"><a name="l02572"></a><span class="lineno"> 2572</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02573"></a><span class="lineno"> 2573</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02574"></a><span class="lineno"> 2574</span>&#160;            bl_diag%cff_incr(i,j,k) = cff_latest(i,j,k)                 &amp;</div><div class="line"><a name="l02575"></a><span class="lineno"> 2575</span>&#160;                                    - cff_earliest(i,j,k)</div><div class="line"><a name="l02576"></a><span class="lineno"> 2576</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l02577"></a><span class="lineno"> 2577</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l02578"></a><span class="lineno"> 2578</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l02579"></a><span class="lineno"> 2579</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02580"></a><span class="lineno"> 2580</span>&#160;      <span class="keyword">ALLOCATE</span> ( bl_diag%cff_incr(1,1,1) )</div><div class="line"><a name="l02581"></a><span class="lineno"> 2581</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l02582"></a><span class="lineno"> 2582</span>&#160;</div><div class="line"><a name="l02583"></a><span class="lineno"> 2583</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! on error code zero</span></div><div class="line"><a name="l02584"></a><span class="lineno"> 2584</span>&#160;</div><div class="line"><a name="l02585"></a><span class="lineno"> 2585</span>&#160;<span class="comment">! ! Section BL.4c Combined cloud field calculation for use by visibility</span></div><div class="line"><a name="l02586"></a><span class="lineno"> 2586</span>&#160;<span class="comment">!               (section 3) and cloud scheme (section 9) diagnostics</span></div><div class="line"><a name="l02587"></a><span class="lineno"> 2587</span>&#160;<span class="comment">!               09208 - 09217 and 09223.</span></div><div class="line"><a name="l02588"></a><span class="lineno"> 2588</span>&#160;<span class="comment">! L_combi_cld_if1:</span></div><div class="line"><a name="l02589"></a><span class="lineno"> 2589</span>&#160;  <span class="keywordflow">IF</span> (error_code  &lt;=  0  .AND.  l_combi_cld .AND. l_apply_diag)  <span class="keywordflow">THEN</span></div><div class="line"><a name="l02590"></a><span class="lineno"> 2590</span>&#160;        <span class="comment">! Set the combined cloud area fractions in each gridbox.</span></div><div class="line"><a name="l02591"></a><span class="lineno"> 2591</span>&#160;        <span class="comment">! Convention in Sect 70 (Radiation) is to invert levels, 1 at top.</span></div><div class="line"><a name="l02592"></a><span class="lineno"> 2592</span>&#160;</div><div class="line"><a name="l02593"></a><span class="lineno"> 2593</span>&#160;    <span class="keyword">ALLOCATE</span>                                                            &amp;</div><div class="line"><a name="l02594"></a><span class="lineno"> 2594</span>&#160;      ( combined_cloud(qdims%i_start:qdims%i_end,                      &amp;</div><div class="line"><a name="l02595"></a><span class="lineno"> 2595</span>&#160;                        qdims%j_start:qdims%j_end,                      &amp;</div><div class="line"><a name="l02596"></a><span class="lineno"> 2596</span>&#160;                        qdims%k_end),                                   &amp;</div><div class="line"><a name="l02597"></a><span class="lineno"> 2597</span>&#160;        cca4comb_cld(qdims%i_start:qdims%i_end,                      &amp;</div><div class="line"><a name="l02598"></a><span class="lineno"> 2598</span>&#160;                        qdims%j_start:qdims%j_end,                      &amp;</div><div class="line"><a name="l02599"></a><span class="lineno"> 2599</span>&#160;                        n_cca_levels),                                  &amp;</div><div class="line"><a name="l02600"></a><span class="lineno"> 2600</span>&#160;        ccb4comb_cld(qdims%i_start:qdims%i_end,                      &amp;</div><div class="line"><a name="l02601"></a><span class="lineno"> 2601</span>&#160;                        qdims%j_start:qdims%j_end),                     &amp;</div><div class="line"><a name="l02602"></a><span class="lineno"> 2602</span>&#160;        cct4comb_cld(qdims%i_start:qdims%i_end,                      &amp;</div><div class="line"><a name="l02603"></a><span class="lineno"> 2603</span>&#160;                        qdims%j_start:qdims%j_end) )</div><div class="line"><a name="l02604"></a><span class="lineno"> 2604</span>&#160;</div><div class="line"><a name="l02605"></a><span class="lineno"> 2605</span>&#160;    nclds = min(cloud_levels, qdims%k_end)</div><div class="line"><a name="l02606"></a><span class="lineno"> 2606</span>&#160;</div><div class="line"><a name="l02607"></a><span class="lineno"> 2607</span>&#160;        <span class="comment">! ***** Code adapted from R2_SET_CLOUD_FIELD. *****</span></div><div class="line"><a name="l02608"></a><span class="lineno"> 2608</span>&#160;</div><div class="line"><a name="l02609"></a><span class="lineno"> 2609</span>&#160;        <span class="comment">! Zero cloud amounts in the upper layers (if necessary).</span></div><div class="line"><a name="l02610"></a><span class="lineno"> 2610</span>&#160;<span class="comment">! Nclds_if1:</span></div><div class="line"><a name="l02611"></a><span class="lineno"> 2611</span>&#160;    <span class="keywordflow">IF</span> (qdims%k_end  &gt;   nclds) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02612"></a><span class="lineno"> 2612</span>&#160;<span class="comment">! Rad_k_do1:</span></div><div class="line"><a name="l02613"></a><span class="lineno"> 2613</span>&#160;      <span class="keywordflow">DO</span> k = 1, qdims%k_end-nclds</div><div class="line"><a name="l02614"></a><span class="lineno"> 2614</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02615"></a><span class="lineno"> 2615</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02616"></a><span class="lineno"> 2616</span>&#160;            combined_cloud(i, j, k) = 0.0e+00</div><div class="line"><a name="l02617"></a><span class="lineno"> 2617</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l02618"></a><span class="lineno"> 2618</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02619"></a><span class="lineno"> 2619</span>&#160;<span class="keywordflow">      END DO</span>  <span class="comment">! Rad_k_do1</span></div><div class="line"><a name="l02620"></a><span class="lineno"> 2620</span>&#160;<span class="keywordflow">    END IF</span>  <span class="comment">! Nclds_if1</span></div><div class="line"><a name="l02621"></a><span class="lineno"> 2621</span>&#160;</div><div class="line"><a name="l02622"></a><span class="lineno"> 2622</span>&#160;        <span class="comment">! Use Sec 0 convective cloud</span></div><div class="line"><a name="l02623"></a><span class="lineno"> 2623</span>&#160;    <span class="keywordflow">DO</span> k = 1, n_cca_levels</div><div class="line"><a name="l02624"></a><span class="lineno"> 2624</span>&#160;      <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02625"></a><span class="lineno"> 2625</span>&#160;        <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02626"></a><span class="lineno"> 2626</span>&#160;          cca4comb_cld(i,j,k) = cca0(i,j,k)</div><div class="line"><a name="l02627"></a><span class="lineno"> 2627</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02628"></a><span class="lineno"> 2628</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02629"></a><span class="lineno"> 2629</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02630"></a><span class="lineno"> 2630</span>&#160;    <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02631"></a><span class="lineno"> 2631</span>&#160;      <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02632"></a><span class="lineno"> 2632</span>&#160;        ccb4comb_cld(i,j) = ccb0(i,j)</div><div class="line"><a name="l02633"></a><span class="lineno"> 2633</span>&#160;        cct4comb_cld(i,j) = cct0(i,j)</div><div class="line"><a name="l02634"></a><span class="lineno"> 2634</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02635"></a><span class="lineno"> 2635</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02636"></a><span class="lineno"> 2636</span>&#160;</div><div class="line"><a name="l02637"></a><span class="lineno"> 2637</span>&#160;        <span class="comment">! Calculate combined cloud field</span></div><div class="line"><a name="l02638"></a><span class="lineno"> 2638</span>&#160;    <span class="keywordflow">DO</span> k = qdims%k_end+1-nclds, qdims%k_end</div><div class="line"><a name="l02639"></a><span class="lineno"> 2639</span>&#160;</div><div class="line"><a name="l02640"></a><span class="lineno"> 2640</span>&#160;      kinvert = qdims%k_end+1 - k</div><div class="line"><a name="l02641"></a><span class="lineno"> 2641</span>&#160;</div><div class="line"><a name="l02642"></a><span class="lineno"> 2642</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#af3aff8585bb16fdc7cddc62da16fd0d7">l_3d_cca</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02643"></a><span class="lineno"> 2643</span>&#160;</div><div class="line"><a name="l02644"></a><span class="lineno"> 2644</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02645"></a><span class="lineno"> 2645</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02646"></a><span class="lineno"> 2646</span>&#160;            combined_cloud(i,j,k) = cca4comb_cld(i,j,kinvert)           &amp;</div><div class="line"><a name="l02647"></a><span class="lineno"> 2647</span>&#160;                                  + (1.0 - cca4comb_cld(i,j,kinvert))   &amp;</div><div class="line"><a name="l02648"></a><span class="lineno"> 2648</span>&#160;                                  * area_cloud_fraction(i,j,kinvert)</div><div class="line"><a name="l02649"></a><span class="lineno"> 2649</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l02650"></a><span class="lineno"> 2650</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02651"></a><span class="lineno"> 2651</span>&#160;</div><div class="line"><a name="l02652"></a><span class="lineno"> 2652</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02653"></a><span class="lineno"> 2653</span>&#160;</div><div class="line"><a name="l02654"></a><span class="lineno"> 2654</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02655"></a><span class="lineno"> 2655</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02656"></a><span class="lineno"> 2656</span>&#160;            <span class="keywordflow">IF</span> ( (cct4comb_cld(i,j) &gt;= kinvert+1) .AND.                 &amp;</div><div class="line"><a name="l02657"></a><span class="lineno"> 2657</span>&#160;                 (ccb4comb_cld(i,j) &lt;= kinvert) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02658"></a><span class="lineno"> 2658</span>&#160;              combined_cloud(i,j,k) = cca4comb_cld(i,j,1)               &amp;</div><div class="line"><a name="l02659"></a><span class="lineno"> 2659</span>&#160;                                    + (1.0-cca4comb_cld(i,j,1))         &amp;</div><div class="line"><a name="l02660"></a><span class="lineno"> 2660</span>&#160;                                    * area_cloud_fraction(i,j,kinvert)</div><div class="line"><a name="l02661"></a><span class="lineno"> 2661</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02662"></a><span class="lineno"> 2662</span>&#160;              combined_cloud(i,j,k) = area_cloud_fraction(i,j,kinvert)</div><div class="line"><a name="l02663"></a><span class="lineno"> 2663</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l02664"></a><span class="lineno"> 2664</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l02665"></a><span class="lineno"> 2665</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02666"></a><span class="lineno"> 2666</span>&#160;</div><div class="line"><a name="l02667"></a><span class="lineno"> 2667</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! l_3d_cca</span></div><div class="line"><a name="l02668"></a><span class="lineno"> 2668</span>&#160;</div><div class="line"><a name="l02669"></a><span class="lineno"> 2669</span>&#160;<span class="keywordflow">    END DO</span>  <span class="comment">! k</span></div><div class="line"><a name="l02670"></a><span class="lineno"> 2670</span>&#160;</div><div class="line"><a name="l02671"></a><span class="lineno"> 2671</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02672"></a><span class="lineno"> 2672</span>&#160;    <span class="keyword">ALLOCATE</span>(combined_cloud(1,1,1))</div><div class="line"><a name="l02673"></a><span class="lineno"> 2673</span>&#160;<span class="keywordflow">  END IF</span>  <span class="comment">! L_combi_cld_if1</span></div><div class="line"><a name="l02674"></a><span class="lineno"> 2674</span>&#160;</div><div class="line"><a name="l02675"></a><span class="lineno"> 2675</span>&#160;<span class="comment">! NB: Combined cloud area fractions in each gridbox set up above.</span></div><div class="line"><a name="l02676"></a><span class="lineno"> 2676</span>&#160;<span class="comment">!     Convention in Sect 70 (Radiation) is to invert levels, 1 at top.</span></div><div class="line"><a name="l02677"></a><span class="lineno"> 2677</span>&#160;</div><div class="line"><a name="l02678"></a><span class="lineno"> 2678</span>&#160;<span class="comment">! L_plsp_if1:</span></div><div class="line"><a name="l02679"></a><span class="lineno"> 2679</span>&#160;  <span class="keywordflow">IF</span> ( error_code &lt;= 0  .AND.  l_plsp .AND. l_apply_diag ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02680"></a><span class="lineno"> 2680</span>&#160;</div><div class="line"><a name="l02681"></a><span class="lineno"> 2681</span>&#160;<span class="comment">! DEPENDS ON: r2_calc_total_cloud_cover</span></div><div class="line"><a name="l02682"></a><span class="lineno"> 2682</span>&#160;    <span class="keyword">CALL </span>r2_calc_total_cloud_cover(                                     &amp;</div><div class="line"><a name="l02683"></a><span class="lineno"> 2683</span>&#160;           pdims%i_end*pdims%j_end, qdims%k_end, nclds,                 &amp;</div><div class="line"><a name="l02684"></a><span class="lineno"> 2684</span>&#160;           <a class="code" href="namespacerad__pcf.xhtml#aa6bb2ded6902baf3dc05462648abb51e">ip_cloud_mix_max</a>, combined_cloud(1,1,1), work2d_1,           &amp;</div><div class="line"><a name="l02685"></a><span class="lineno"> 2685</span>&#160;           pdims%i_end*pdims%j_end, qdims%k_end                         &amp;</div><div class="line"><a name="l02686"></a><span class="lineno"> 2686</span>&#160;         )</div><div class="line"><a name="l02687"></a><span class="lineno"> 2687</span>&#160;</div><div class="line"><a name="l02688"></a><span class="lineno"> 2688</span>&#160;    <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02689"></a><span class="lineno"> 2689</span>&#160;      <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02690"></a><span class="lineno"> 2690</span>&#160;        <span class="keywordflow">IF</span> (cca_at_base(i,j) &lt; 1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02691"></a><span class="lineno"> 2691</span>&#160;          plsp(i,j) = max( 0.0,                                         &amp;</div><div class="line"><a name="l02692"></a><span class="lineno"> 2692</span>&#160;                           (work2d_1(i,j)-cca_at_base(i,j))             &amp;</div><div class="line"><a name="l02693"></a><span class="lineno"> 2693</span>&#160;                            / (1.0 - cca_at_base(i,j)) )</div><div class="line"><a name="l02694"></a><span class="lineno"> 2694</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l02695"></a><span class="lineno"> 2695</span>&#160;          plsp(i,j) = 0.0</div><div class="line"><a name="l02696"></a><span class="lineno"> 2696</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l02697"></a><span class="lineno"> 2697</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l02698"></a><span class="lineno"> 2698</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l02699"></a><span class="lineno"> 2699</span>&#160;</div><div class="line"><a name="l02700"></a><span class="lineno"> 2700</span>&#160;<span class="keywordflow">  END IF</span>  <span class="comment">! L_plsp_if1:</span></div><div class="line"><a name="l02701"></a><span class="lineno"> 2701</span>&#160;</div><div class="line"><a name="l02702"></a><span class="lineno"> 2702</span>&#160;  <span class="keywordflow">IF</span> ( l_apply_diag ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02703"></a><span class="lineno"> 2703</span>&#160;<span class="comment">! ! Section BL.4d Cloud scheme (section 9) diagnostics.</span></div><div class="line"><a name="l02704"></a><span class="lineno"> 2704</span>&#160;<span class="comment">! Check that cloud diagnostics are requested this timestep</span></div><div class="line"><a name="l02705"></a><span class="lineno"> 2705</span>&#160;<span class="comment">! DiagSect09_if1:</span></div><div class="line"><a name="l02706"></a><span class="lineno"> 2706</span>&#160;<span class="preprocessor">#if !defined(SCMA)</span></div><div class="line"><a name="l02707"></a><span class="lineno"> 2707</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">IF</span> (error_code  ==  0 .AND. sf(0,9)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02708"></a><span class="lineno"> 2708</span>&#160;</div><div class="line"><a name="l02709"></a><span class="lineno"> 2709</span>&#160;<span class="comment">! DEPENDS ON: diagnostics_lscld</span></div><div class="line"><a name="l02710"></a><span class="lineno"> 2710</span>&#160;      <span class="keyword">CALL </span><a class="code" href="diagnostics__lscld_8f90.xhtml#a5d774d776a0a1ba0d40a8e04859c9b42" title="Diagnostic output area for Large Scale Cloud (Section 9) Diagnostics. ">diagnostics_lscld</a>(                                           &amp;</div><div class="line"><a name="l02711"></a><span class="lineno"> 2711</span>&#160;                           pdims%i_end,pdims%j_end, pdims%k_end,        &amp;</div><div class="line"><a name="l02712"></a><span class="lineno"> 2712</span>&#160;                           rhc_row_length, rhc_rows,                    &amp;</div><div class="line"><a name="l02713"></a><span class="lineno"> 2713</span>&#160;                           qdims%k_end, bl_levels, cloud_levels,        &amp;</div><div class="line"><a name="l02714"></a><span class="lineno"> 2714</span>&#160;                      p_layer_centres(1,1,1),p_layer_boundaries(1,1,1), &amp;</div><div class="line"><a name="l02715"></a><span class="lineno"> 2715</span>&#160;                           bl_diag%t_incr, bl_diag%q_incr,              &amp;</div><div class="line"><a name="l02716"></a><span class="lineno"> 2716</span>&#160;                           bl_diag%qcl_incr,                            &amp;</div><div class="line"><a name="l02717"></a><span class="lineno"> 2717</span>&#160;                           t_latest, q_latest, qcl_latest, qcf_latest,  &amp;</div><div class="line"><a name="l02718"></a><span class="lineno"> 2718</span>&#160;                           area_cloud_fraction, bulk_cloud_fraction,    &amp;</div><div class="line"><a name="l02719"></a><span class="lineno"> 2719</span>&#160;                           cfl_latest, cff_latest,                      &amp;</div><div class="line"><a name="l02720"></a><span class="lineno"> 2720</span>&#160;                           rho_wet_theta(tdims%i_start:tdims%i_end,     &amp;</div><div class="line"><a name="l02721"></a><span class="lineno"> 2721</span>&#160;                                         tdims%j_start:tdims%j_end,     &amp;</div><div class="line"><a name="l02722"></a><span class="lineno"> 2722</span>&#160;                                         1:tdims%k_end-1),              &amp;</div><div class="line"><a name="l02723"></a><span class="lineno"> 2723</span>&#160;                           p_star, rhcpt,                               &amp;</div><div class="line"><a name="l02724"></a><span class="lineno"> 2724</span>&#160;                           combined_cloud, aerosol, rhcrit,             &amp;</div><div class="line"><a name="l02725"></a><span class="lineno"> 2725</span>&#160;                           lq_mix_bl,                                   &amp;</div><div class="line"><a name="l02726"></a><span class="lineno"> 2726</span>&#160;                           delta_lambda, delta_phi,                     &amp;</div><div class="line"><a name="l02727"></a><span class="lineno"> 2727</span>&#160;                           fv_cos_theta_latitude,                       &amp;</div><div class="line"><a name="l02728"></a><span class="lineno"> 2728</span>&#160;<span class="preprocessor">#include &quot;argsts.h&quot;</span></div><div class="line"><a name="l02729"></a><span class="lineno"> 2729</span>&#160;<span class="preprocessor"></span>                           stashwork9,                                  &amp;</div><div class="line"><a name="l02730"></a><span class="lineno"> 2730</span>&#160;                           l_combi_cld                                  &amp;</div><div class="line"><a name="l02731"></a><span class="lineno"> 2731</span>&#160;                            )</div><div class="line"><a name="l02732"></a><span class="lineno"> 2732</span>&#160;</div><div class="line"><a name="l02733"></a><span class="lineno"> 2733</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! DiagSect09_if1</span></div><div class="line"><a name="l02734"></a><span class="lineno"> 2734</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l02735"></a><span class="lineno"> 2735</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l02736"></a><span class="lineno"> 2736</span>&#160;<span class="comment">! ! Section BL.5 Energy correction</span></div><div class="line"><a name="l02737"></a><span class="lineno"> 2737</span>&#160;<span class="comment">!     IF (l_emcorr .AND. error_code  ==  0) THEN</span></div><div class="line"><a name="l02738"></a><span class="lineno"> 2738</span>&#160;</div><div class="line"><a name="l02739"></a><span class="lineno"> 2739</span>&#160;<span class="comment">! Add surface sensible heat flux into diabatic heating</span></div><div class="line"><a name="l02740"></a><span class="lineno"> 2740</span>&#160;<span class="comment">! for use in energy correction procedure.</span></div><div class="line"><a name="l02741"></a><span class="lineno"> 2741</span>&#160;</div><div class="line"><a name="l02742"></a><span class="lineno"> 2742</span>&#160;<span class="comment">! DEPENDS ON: flux_diag</span></div><div class="line"><a name="l02743"></a><span class="lineno"> 2743</span>&#160;      <span class="keyword">CALL </span><a class="code" href="flux__diag-fldiag1a_8f90.xhtml#aab4a447d92bc2e0575a42e41350d169c" title="LL SUBROUTINE FLUX_DIAG!&gt;LL. ">flux_diag</a>(ftl, fv_cos_theta_latitude,                        &amp;</div><div class="line"><a name="l02744"></a><span class="lineno"> 2744</span>&#160;                pdims%i_end,pdims%j_end,pdims_s%halo_i,pdims_s%halo_j,  &amp;</div><div class="line"><a name="l02745"></a><span class="lineno"> 2745</span>&#160;                     1.0, sum_eng_fluxes,<a class="code" href="namespacetimestep__mod.xhtml#af5057870e73925950dded81acfffb0d6">timestep</a>)</div><div class="line"><a name="l02746"></a><span class="lineno"> 2746</span>&#160;<span class="comment">! moisture flux level 1 held in fqt</span></div><div class="line"><a name="l02747"></a><span class="lineno"> 2747</span>&#160;<span class="comment">! Should be total moisture flux from surface to layer 1 ie evaporation</span></div><div class="line"><a name="l02748"></a><span class="lineno"> 2748</span>&#160;<span class="comment">! DEPENDS ON: flux_diag</span></div><div class="line"><a name="l02749"></a><span class="lineno"> 2749</span>&#160;      <span class="keyword">CALL </span><a class="code" href="flux__diag-fldiag1a_8f90.xhtml#aab4a447d92bc2e0575a42e41350d169c" title="LL SUBROUTINE FLUX_DIAG!&gt;LL. ">flux_diag</a>(fqt, fv_cos_theta_latitude,                        &amp;</div><div class="line"><a name="l02750"></a><span class="lineno"> 2750</span>&#160;                pdims%i_end,pdims%j_end,pdims_s%halo_i,pdims_s%halo_j,  &amp;</div><div class="line"><a name="l02751"></a><span class="lineno"> 2751</span>&#160;                     1.0, sum_moist_flux,<a class="code" href="namespacetimestep__mod.xhtml#af5057870e73925950dded81acfffb0d6">timestep</a>)</div><div class="line"><a name="l02752"></a><span class="lineno"> 2752</span>&#160;</div><div class="line"><a name="l02753"></a><span class="lineno"> 2753</span>&#160;<span class="keywordflow">    END IF</span>   <span class="comment">! L_emcorr</span></div><div class="line"><a name="l02754"></a><span class="lineno"> 2754</span>&#160;<span class="comment">! ! Section BL.6 Output Diagnostics requested.</span></div><div class="line"><a name="l02755"></a><span class="lineno"> 2755</span>&#160;<span class="comment">! #if !defined(SCMA)</span></div><div class="line"><a name="l02756"></a><span class="lineno"> 2756</span>&#160;<span class="comment">! diagnostics requested this timestep</span></div><div class="line"><a name="l02757"></a><span class="lineno"> 2757</span>&#160;    <span class="keywordflow">IF</span> ( sf(0,3) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02758"></a><span class="lineno"> 2758</span>&#160;      <span class="keywordflow">IF</span> ( error_code  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02759"></a><span class="lineno"> 2759</span>&#160;</div><div class="line"><a name="l02760"></a><span class="lineno"> 2760</span>&#160;      <span class="comment">! Take rho values on the lowest level for visibility diagnostics</span></div><div class="line"><a name="l02761"></a><span class="lineno"> 2761</span>&#160;        <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l02762"></a><span class="lineno"> 2762</span>&#160;          <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l02763"></a><span class="lineno"> 2763</span>&#160;            rho1(i,j)=rho(i,j,1)/(<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,1)*<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,1))</div><div class="line"><a name="l02764"></a><span class="lineno"> 2764</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l02765"></a><span class="lineno"> 2765</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l02766"></a><span class="lineno"> 2766</span>&#160;</div><div class="line"><a name="l02767"></a><span class="lineno"> 2767</span>&#160;<span class="comment">! DEPENDS ON: diagnostics_bl</span></div><div class="line"><a name="l02768"></a><span class="lineno"> 2768</span>&#160;        <span class="keyword">CALL </span><a class="code" href="diagnostics__bl_8f90.xhtml#a50229e39ea09211655a2e283d999410f" title="This file belongs in section: boundary layer. ">diagnostics_bl</a>(                                            &amp;</div><div class="line"><a name="l02769"></a><span class="lineno"> 2769</span>&#160;<span class="comment">! IN levels / grids / switches</span></div><div class="line"><a name="l02770"></a><span class="lineno"> 2770</span>&#160;                           bl_levels, land_points, dsm_levels,          &amp;</div><div class="line"><a name="l02771"></a><span class="lineno"> 2771</span>&#160;                           rhc_row_length, rhc_rows,                    &amp;</div><div class="line"><a name="l02772"></a><span class="lineno"> 2772</span>&#160;                           sin_theta_longitude, cos_theta_longitude,    &amp;</div><div class="line"><a name="l02773"></a><span class="lineno"> 2773</span>&#160;                           land_index,ntiles,npft,nice,nice_use,        &amp;</div><div class="line"><a name="l02774"></a><span class="lineno"> 2774</span>&#160;                           sq_t1p5,                                     &amp;</div><div class="line"><a name="l02775"></a><span class="lineno"> 2775</span>&#160;<span class="comment">! IN fields for diagnostics</span></div><div class="line"><a name="l02776"></a><span class="lineno"> 2776</span>&#160;                           aerosol(1:tdims%i_end,1:tdims%j_end,1),      &amp;</div><div class="line"><a name="l02777"></a><span class="lineno"> 2777</span>&#160;                           rhcrit, plsp, cca_at_base,                   &amp;</div><div class="line"><a name="l02778"></a><span class="lineno"> 2778</span>&#160;                           ls_rain, ls_snow, conv_rain, conv_snow,      &amp;</div><div class="line"><a name="l02779"></a><span class="lineno"> 2779</span>&#160;                           p_star, rhcpt, ntml, cumulus, rho1,          &amp;</div><div class="line"><a name="l02780"></a><span class="lineno"> 2780</span>&#160;                           qcf_latest,                                  &amp;</div><div class="line"><a name="l02781"></a><span class="lineno"> 2781</span>&#160;                           t1p5m, zh, u10m, v10m, q1p5m,                &amp;</div><div class="line"><a name="l02782"></a><span class="lineno"> 2782</span>&#160;                           e_sea, h_sea,ei,                             &amp;</div><div class="line"><a name="l02783"></a><span class="lineno"> 2783</span>&#160;                           sea_ice_htf, sice_mlt_htf,                   &amp;</div><div class="line"><a name="l02784"></a><span class="lineno"> 2784</span>&#160;                           snomlt_surf_htf, zht,                        &amp;</div><div class="line"><a name="l02785"></a><span class="lineno"> 2785</span>&#160;                           bl_type_1,bl_type_2,bl_type_3,bl_type_4,     &amp;</div><div class="line"><a name="l02786"></a><span class="lineno"> 2786</span>&#160;                           bl_type_5,bl_type_6,bl_type_7,               &amp;</div><div class="line"><a name="l02787"></a><span class="lineno"> 2787</span>&#160;                           fqt, ftl, z0m_gb, z0m_eff_gb, z0h_eff_gb,    &amp;</div><div class="line"><a name="l02788"></a><span class="lineno"> 2788</span>&#160;                           rib_gb, latent_heat, taux, tauy, fme,        &amp;</div><div class="line"><a name="l02789"></a><span class="lineno"> 2789</span>&#160;                           t_soil, surf_ht_flux_gb,                     &amp;</div><div class="line"><a name="l02790"></a><span class="lineno"> 2790</span>&#160;                           surf_ht_flux_land,surf_ht_flux_sice,         &amp;</div><div class="line"><a name="l02791"></a><span class="lineno"> 2791</span>&#160;                           rib_ssi,ftl_ssi,e_ssi,ei_sice,               &amp;</div><div class="line"><a name="l02792"></a><span class="lineno"> 2792</span>&#160;                           vshr_land,vshr_ssi,                          &amp;</div><div class="line"><a name="l02793"></a><span class="lineno"> 2793</span>&#160;                           taux_land,taux_ssi,tauy_land,tauy_ssi,       &amp;</div><div class="line"><a name="l02794"></a><span class="lineno"> 2794</span>&#160;                           radnet_sice,                                 &amp;</div><div class="line"><a name="l02795"></a><span class="lineno"> 2795</span>&#160;         flandg(pdims%i_start:pdims%i_end,pdims%j_start:pdims%j_end),   &amp;</div><div class="line"><a name="l02796"></a><span class="lineno"> 2796</span>&#160;                           land_sea_mask,                               &amp;</div><div class="line"><a name="l02797"></a><span class="lineno"> 2797</span>&#160;                           sil_orog_land,ho2r2_orog,gs,gpp,npp,resp_p,  &amp;</div><div class="line"><a name="l02798"></a><span class="lineno"> 2798</span>&#160;                           ecan_tile,esoil_tile,gpp_ft,ftl_tile,        &amp;</div><div class="line"><a name="l02799"></a><span class="lineno"> 2799</span>&#160;                           npp_ft,resp_p_ft,resp_s,resp_s_tot,cs,       &amp;</div><div class="line"><a name="l02800"></a><span class="lineno"> 2800</span>&#160;                           rib_tile,es,ecan,fsmc,radnet_tile,           &amp;</div><div class="line"><a name="l02801"></a><span class="lineno"> 2801</span>&#160;                           tstar_tile,canopy,catch,z0m_tile,g_leaf,     &amp;</div><div class="line"><a name="l02802"></a><span class="lineno"> 2802</span>&#160;                           t1p5m_tile,q1p5m_tile,le_tile,ei_tile,olr,   &amp;</div><div class="line"><a name="l02803"></a><span class="lineno"> 2803</span>&#160;                           epot_tile,tile_frac,                         &amp;</div><div class="line"><a name="l02804"></a><span class="lineno"> 2804</span>&#160;                           co2_flux_tot, land_co2, dust_flux,           &amp;</div><div class="line"><a name="l02805"></a><span class="lineno"> 2805</span>&#160;                           dust_emiss_frac,u_s_t_tile,u_s_t_dry_tile,   &amp;</div><div class="line"><a name="l02806"></a><span class="lineno"> 2806</span>&#160;                           u_s_std_tile,drydep2, bl_diag,               &amp;</div><div class="line"><a name="l02807"></a><span class="lineno"> 2807</span>&#160;<span class="comment">! variables required for soil moisture nudging scheme macro</span></div><div class="line"><a name="l02808"></a><span class="lineno"> 2808</span>&#160;                           rhokh,resfs,chr1p5m,alpha1,ra,wt_ext,        &amp;</div><div class="line"><a name="l02809"></a><span class="lineno"> 2809</span>&#160;                           lai_ft,canht_ft,gc,                          &amp;</div><div class="line"><a name="l02810"></a><span class="lineno"> 2810</span>&#160;<span class="comment">! MGS extra bl vars for UKCA</span></div><div class="line"><a name="l02811"></a><span class="lineno"> 2811</span>&#160;      rhokh_mix, rho_aresist, aresist, resist_b, r_b_dust,              &amp;</div><div class="line"><a name="l02812"></a><span class="lineno"> 2812</span>&#160;      dtrdz_charney_grid, kent, we_lim, t_frac, zrzi, kent_dsc,         &amp;</div><div class="line"><a name="l02813"></a><span class="lineno"> 2813</span>&#160;      we_lim_dsc, t_frac_dsc, zrzi_dsc, zhsc,                           &amp;</div><div class="line"><a name="l02814"></a><span class="lineno"> 2814</span>&#160;<span class="preprocessor">#include &quot;argsts.h&quot;</span></div><div class="line"><a name="l02815"></a><span class="lineno"> 2815</span>&#160;<span class="preprocessor"></span><span class="comment">! INOUT stash workspace</span></div><div class="line"><a name="l02816"></a><span class="lineno"> 2816</span>&#160;     stashwork3)</div><div class="line"><a name="l02817"></a><span class="lineno"> 2817</span>&#160;</div><div class="line"><a name="l02818"></a><span class="lineno"> 2818</span>&#160;<span class="keywordflow">      END IF</span>   <span class="comment">! error code zero</span></div><div class="line"><a name="l02819"></a><span class="lineno"> 2819</span>&#160;<span class="keywordflow">    END IF</span>      <span class="comment">! sf(0,3)</span></div><div class="line"><a name="l02820"></a><span class="lineno"> 2820</span>&#160;</div><div class="line"><a name="l02821"></a><span class="lineno"> 2821</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l02822"></a><span class="lineno"> 2822</span>&#160;<span class="preprocessor"></span>      <span class="comment">! Output diagnostics the SCM way.</span></div><div class="line"><a name="l02823"></a><span class="lineno"> 2823</span>&#160;</div><div class="line"><a name="l02824"></a><span class="lineno"> 2824</span>&#160;<span class="comment">!     Initialise arrays</span></div><div class="line"><a name="l02825"></a><span class="lineno"> 2825</span>&#160;    <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02826"></a><span class="lineno"> 2826</span>&#160;      <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02827"></a><span class="lineno"> 2827</span>&#160;        lwp(i,j) = 0.0</div><div class="line"><a name="l02828"></a><span class="lineno"> 2828</span>&#160;        iwp(i,j) = 0.0</div><div class="line"><a name="l02829"></a><span class="lineno"> 2829</span>&#160;        bl_alltypes(i,j) = 0.0</div><div class="line"><a name="l02830"></a><span class="lineno"> 2830</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l02831"></a><span class="lineno"> 2831</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l02832"></a><span class="lineno"> 2832</span>&#160;</div><div class="line"><a name="l02833"></a><span class="lineno"> 2833</span>&#160;<span class="comment">!     Set single diagnostic of BL type.</span></div><div class="line"><a name="l02834"></a><span class="lineno"> 2834</span>&#160;    <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l02835"></a><span class="lineno"> 2835</span>&#160;      <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l02836"></a><span class="lineno"> 2836</span>&#160;        bl_alltypes(i,j) = bl_type_1(i, j)*1.0                          &amp;</div><div class="line"><a name="l02837"></a><span class="lineno"> 2837</span>&#160;                         + bl_type_2(i, j)*2.0                          &amp;</div><div class="line"><a name="l02838"></a><span class="lineno"> 2838</span>&#160;                         + bl_type_3(i, j)*3.0                          &amp;</div><div class="line"><a name="l02839"></a><span class="lineno"> 2839</span>&#160;                         + bl_type_4(i, j)*4.0                          &amp;</div><div class="line"><a name="l02840"></a><span class="lineno"> 2840</span>&#160;                         + bl_type_5(i, j)*5.0                          &amp;</div><div class="line"><a name="l02841"></a><span class="lineno"> 2841</span>&#160;                         + bl_type_6(i, j)*6.0                          &amp;</div><div class="line"><a name="l02842"></a><span class="lineno"> 2842</span>&#160;                         + bl_type_7(i, j)*7.0</div><div class="line"><a name="l02843"></a><span class="lineno"> 2843</span>&#160;        rho1(i,j)=rho(i,j,1)/(<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,1)*<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,1))</div><div class="line"><a name="l02844"></a><span class="lineno"> 2844</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l02845"></a><span class="lineno"> 2845</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l02846"></a><span class="lineno"> 2846</span>&#160;</div><div class="line"><a name="l02847"></a><span class="lineno"> 2847</span>&#160;<span class="comment">!     Calculate density averaged on theta levels, IWP and LWP</span></div><div class="line"><a name="l02848"></a><span class="lineno"> 2848</span>&#160;    <span class="keywordflow">DO</span> k = 1, qdims%k_end-1</div><div class="line"><a name="l02849"></a><span class="lineno"> 2849</span>&#160;      <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l02850"></a><span class="lineno"> 2850</span>&#160;        <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l02851"></a><span class="lineno"> 2851</span>&#160;          rho_theta_levs = 0.5*                                         &amp;</div><div class="line"><a name="l02852"></a><span class="lineno"> 2852</span>&#160;          ( rho(i,j,k)/(<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k)*<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k))        &amp;</div><div class="line"><a name="l02853"></a><span class="lineno"> 2853</span>&#160;          + rho(i,j,k+1)                                                &amp;</div><div class="line"><a name="l02854"></a><span class="lineno"> 2854</span>&#160;                  /(<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k+1)*<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k+1)) )</div><div class="line"><a name="l02855"></a><span class="lineno"> 2855</span>&#160;          lwp(i,j) = lwp(i,j) + qcl_latest(i,j,k)*rho_theta_levs*       &amp;</div><div class="line"><a name="l02856"></a><span class="lineno"> 2856</span>&#160;                     (<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k+1)-<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k))</div><div class="line"><a name="l02857"></a><span class="lineno"> 2857</span>&#160;          iwp(i,j) = iwp(i,j) + qcf_latest(i,j,k)*rho_theta_levs*       &amp;</div><div class="line"><a name="l02858"></a><span class="lineno"> 2858</span>&#160;                     (<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k+1)-<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k))</div><div class="line"><a name="l02859"></a><span class="lineno"> 2859</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l02860"></a><span class="lineno"> 2860</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l02861"></a><span class="lineno"> 2861</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l02862"></a><span class="lineno"> 2862</span>&#160;</div><div class="line"><a name="l02863"></a><span class="lineno"> 2863</span>&#160;<span class="comment">! DEPENDS ON: dgnstcs_imp_ctl2</span></div><div class="line"><a name="l02864"></a><span class="lineno"> 2864</span>&#160;    <span class="keyword">CALL </span><a class="code" href="dgnstcs__imp__ctl2_8f90.xhtml#a7a449dfc0ca4da965d5c1d1b0c9a6dbe" title="Calculate and output some SCM diagnostics. ">dgnstcs_imp_ctl2</a>(                                              &amp;</div><div class="line"><a name="l02865"></a><span class="lineno"> 2865</span>&#160;      <span class="comment">! IN</span></div><div class="line"><a name="l02866"></a><span class="lineno"> 2866</span>&#160;         pdims%i_end,pdims%j_end,rhc_row_length,rhc_rows,               &amp;</div><div class="line"><a name="l02867"></a><span class="lineno"> 2867</span>&#160;         pdims%k_end,qdims%k_end,bl_levels,                             &amp;</div><div class="line"><a name="l02868"></a><span class="lineno"> 2868</span>&#160;         cloud_levels,                                                  &amp;</div><div class="line"><a name="l02869"></a><span class="lineno"> 2869</span>&#160;         rhcrit,combined_cloud,nclds,cumulus,ntml,                      &amp;</div><div class="line"><a name="l02870"></a><span class="lineno"> 2870</span>&#160;         plsp,conv_rain,conv_snow,ls_rain,ls_snow,                      &amp;</div><div class="line"><a name="l02871"></a><span class="lineno"> 2871</span>&#160;         r_u,r_v,                                                       &amp;</div><div class="line"><a name="l02872"></a><span class="lineno"> 2872</span>&#160;         zh,zht,bl_type_1,bl_type_2,bl_type_3,bl_type_4,                &amp;</div><div class="line"><a name="l02873"></a><span class="lineno"> 2873</span>&#160;         bl_type_5,bl_type_6,bl_type_7,bl_alltypes,                     &amp;</div><div class="line"><a name="l02874"></a><span class="lineno"> 2874</span>&#160;         fqt,ftl,t_latest,q_latest,cf_latest,cfl_latest,cff_latest,     &amp;</div><div class="line"><a name="l02875"></a><span class="lineno"> 2875</span>&#160;         t_earliest,q_earliest,qcl_earliest,qcf_earliest,               &amp;</div><div class="line"><a name="l02876"></a><span class="lineno"> 2876</span>&#160;         cf_earliest,cfl_earliest,cff_earliest,                         &amp;</div><div class="line"><a name="l02877"></a><span class="lineno"> 2877</span>&#160;         p_layer_centres(1, 1, 1),lwp,iwp,                              &amp;</div><div class="line"><a name="l02878"></a><span class="lineno"> 2878</span>&#160;         z0m_gb,z0h_eff_gb,z0m_eff_gb,                                  &amp;</div><div class="line"><a name="l02879"></a><span class="lineno"> 2879</span>&#160;         sea_ice_htf,sice_mlt_htf,taux,tauy,area_cloud_fraction,        &amp;</div><div class="line"><a name="l02880"></a><span class="lineno"> 2880</span>&#160;         p_star,u10m,v10m,latent_heat,cca_at_base,                      &amp;</div><div class="line"><a name="l02881"></a><span class="lineno"> 2881</span>&#160;         rho1,qcl_latest,qcf_latest,                                    &amp;</div><div class="line"><a name="l02882"></a><span class="lineno"> 2882</span>&#160;         surf_ht_flux_sice,rhcpt,surf_ht_flux_gb,aerosol,               &amp;</div><div class="line"><a name="l02883"></a><span class="lineno"> 2883</span>&#160;         nscmdpkgs,l_scmdiags,bl_diag,                                  &amp;</div><div class="line"><a name="l02884"></a><span class="lineno"> 2884</span>&#160;      <span class="comment">! INOUT</span></div><div class="line"><a name="l02885"></a><span class="lineno"> 2885</span>&#160;         q1p5m,t1p5m)</div><div class="line"><a name="l02886"></a><span class="lineno"> 2886</span>&#160;</div><div class="line"><a name="l02887"></a><span class="lineno"> 2887</span>&#160;<span class="comment">! SCM diags moved here from atmos_physics2</span></div><div class="line"><a name="l02888"></a><span class="lineno"> 2888</span>&#160;    <span class="keywordflow">IF</span> (l_scmdiags(<a class="code" href="namespaces__scmop__mod.xhtml#a89d9b3531f7c5739e1d9b9edf0583d58">scmdiag_land</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02889"></a><span class="lineno"> 2889</span>&#160;</div><div class="line"><a name="l02890"></a><span class="lineno"> 2890</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l02891"></a><span class="lineno"> 2891</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(ecan,                                              &amp;</div><div class="line"><a name="l02892"></a><span class="lineno"> 2892</span>&#160;           <span class="stringliteral">&#39;can_evap&#39;</span>,<span class="stringliteral">&#39;Canopy evaporation&#39;</span>,<span class="stringliteral">&#39;kg/m2/day&#39;</span>,                 &amp;</div><div class="line"><a name="l02893"></a><span class="lineno"> 2893</span>&#160;           <a class="code" href="namespaces__scmop__mod.xhtml#acfaa64e6b4c579d708188c5774d8ac7d">t_mult</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a9e42893fdbe56b604355689cd9248c63">d_sl</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;sec_day&#39;</span>,routinename)</div><div class="line"><a name="l02894"></a><span class="lineno"> 2894</span>&#160;</div><div class="line"><a name="l02895"></a><span class="lineno"> 2895</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l02896"></a><span class="lineno"> 2896</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(le_tile,                                           &amp;</div><div class="line"><a name="l02897"></a><span class="lineno"> 2897</span>&#160;           <span class="stringliteral">&#39;lhf_tile&#39;</span>,<span class="stringliteral">&#39;Tile latent heat flux&#39;</span>,<span class="stringliteral">&#39;W/m2&#39;</span>,                   &amp;</div><div class="line"><a name="l02898"></a><span class="lineno"> 2898</span>&#160;           <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a80fd65616a49171a9ac7ecac7338d70a">d_tile</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l02899"></a><span class="lineno"> 2899</span>&#160;</div><div class="line"><a name="l02900"></a><span class="lineno"> 2900</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l02901"></a><span class="lineno"> 2901</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(es,                                                &amp;</div><div class="line"><a name="l02902"></a><span class="lineno"> 2902</span>&#160;           <span class="stringliteral">&#39;soil_evap&#39;</span>,<span class="stringliteral">&#39;Soil evapotranspiration&#39;</span>,<span class="stringliteral">&#39;kg/m2/day&#39;</span>,           &amp;</div><div class="line"><a name="l02903"></a><span class="lineno"> 2903</span>&#160;           <a class="code" href="namespaces__scmop__mod.xhtml#acfaa64e6b4c579d708188c5774d8ac7d">t_mult</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a9e42893fdbe56b604355689cd9248c63">d_sl</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;sec_day&#39;</span>,routinename)</div><div class="line"><a name="l02904"></a><span class="lineno"> 2904</span>&#160;</div><div class="line"><a name="l02905"></a><span class="lineno"> 2905</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l02906"></a><span class="lineno"> 2906</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(t1p5m_tile,                                        &amp;</div><div class="line"><a name="l02907"></a><span class="lineno"> 2907</span>&#160;           <span class="stringliteral">&#39;t1p5m_tile&#39;</span>,<span class="stringliteral">&#39;Tile 1.5m temperature&#39;</span>,<span class="stringliteral">&#39;K&#39;</span>,                    &amp;</div><div class="line"><a name="l02908"></a><span class="lineno"> 2908</span>&#160;           <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a80fd65616a49171a9ac7ecac7338d70a">d_tile</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l02909"></a><span class="lineno"> 2909</span>&#160;</div><div class="line"><a name="l02910"></a><span class="lineno"> 2910</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! L_SCMDiags(SCMDiag_land)</span></div><div class="line"><a name="l02911"></a><span class="lineno"> 2911</span>&#160;</div><div class="line"><a name="l02912"></a><span class="lineno"> 2912</span>&#160;    <span class="keywordflow">IF</span> (l_scmdiags(<a class="code" href="namespaces__scmop__mod.xhtml#aa95516bacfa8a4f2932fc3e17f5f6b65">scmdiag_surf</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02913"></a><span class="lineno"> 2913</span>&#160;</div><div class="line"><a name="l02914"></a><span class="lineno"> 2914</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l02915"></a><span class="lineno"> 2915</span>&#160;      <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(ei,                                                &amp;</div><div class="line"><a name="l02916"></a><span class="lineno"> 2916</span>&#160;           <span class="stringliteral">&#39;sublim&#39;</span>,<span class="stringliteral">&#39;Sublimation from lying snow or sea ice&#39;</span>,           &amp;</div><div class="line"><a name="l02917"></a><span class="lineno"> 2917</span>&#160;           <span class="stringliteral">&#39;kg/m2/day&#39;</span>,                                                 &amp;</div><div class="line"><a name="l02918"></a><span class="lineno"> 2918</span>&#160;           <a class="code" href="namespaces__scmop__mod.xhtml#acfaa64e6b4c579d708188c5774d8ac7d">t_mult</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a9e42893fdbe56b604355689cd9248c63">d_sl</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;sec_day&#39;</span>,routinename)</div><div class="line"><a name="l02919"></a><span class="lineno"> 2919</span>&#160;</div><div class="line"><a name="l02920"></a><span class="lineno"> 2920</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! L_SCMDiags(SCMDiag_surf)</span></div><div class="line"><a name="l02921"></a><span class="lineno"> 2921</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l02922"></a><span class="lineno"> 2922</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l02923"></a><span class="lineno"> 2923</span>&#160;<span class="comment">! Clear up allocatable arrays</span></div><div class="line"><a name="l02924"></a><span class="lineno"> 2924</span>&#160;    <span class="keywordflow">IF</span> (error_code  &lt;=  0  .AND.  l_combi_cld) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02925"></a><span class="lineno"> 2925</span>&#160;      <span class="keyword">DEALLOCATE</span> ( cct4comb_cld   )</div><div class="line"><a name="l02926"></a><span class="lineno"> 2926</span>&#160;      <span class="keyword">DEALLOCATE</span> ( ccb4comb_cld   )</div><div class="line"><a name="l02927"></a><span class="lineno"> 2927</span>&#160;      <span class="keyword">DEALLOCATE</span> ( cca4comb_cld   )</div><div class="line"><a name="l02928"></a><span class="lineno"> 2928</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l02929"></a><span class="lineno"> 2929</span>&#160;</div><div class="line"><a name="l02930"></a><span class="lineno"> 2930</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! L_apply_diag</span></div><div class="line"><a name="l02931"></a><span class="lineno"> 2931</span>&#160;</div><div class="line"><a name="l02932"></a><span class="lineno"> 2932</span>&#160;  <span class="keyword">DEALLOCATE</span> ( combined_cloud )</div><div class="line"><a name="l02933"></a><span class="lineno"> 2933</span>&#160;  <span class="keyword">DEALLOCATE</span> (bl_diag%cff_incr)</div><div class="line"><a name="l02934"></a><span class="lineno"> 2934</span>&#160;  <span class="keyword">DEALLOCATE</span> (bl_diag%cfl_incr)</div><div class="line"><a name="l02935"></a><span class="lineno"> 2935</span>&#160;  <span class="keyword">DEALLOCATE</span> (bl_diag%cf_incr)</div><div class="line"><a name="l02936"></a><span class="lineno"> 2936</span>&#160;  <span class="comment">! Deallocation of BL_diag%q, qcl and qcf _incr moved to atmos_phyiscs2 as</span></div><div class="line"><a name="l02937"></a><span class="lineno"> 2937</span>&#160;  <span class="comment">! required if moisture conservation being checked  DEALLOCATE (BL_diag%t_incr)</span></div><div class="line"><a name="l02938"></a><span class="lineno"> 2938</span>&#160;  <span class="keyword">DEALLOCATE</span> (bl_diag%v_incr)</div><div class="line"><a name="l02939"></a><span class="lineno"> 2939</span>&#160;  <span class="keyword">DEALLOCATE</span> (bl_diag%u_incr)</div><div class="line"><a name="l02940"></a><span class="lineno"> 2940</span>&#160;</div><div class="line"><a name="l02941"></a><span class="lineno"> 2941</span>&#160;<span class="comment">! Deallocate BL_diags on last substep</span></div><div class="line"><a name="l02942"></a><span class="lineno"> 2942</span>&#160;  <span class="keywordflow">IF</span> (l_apply_diag) <span class="keywordflow">THEN</span></div><div class="line"><a name="l02943"></a><span class="lineno"> 2943</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%oblen)</div><div class="line"><a name="l02944"></a><span class="lineno"> 2944</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%ustar)</div><div class="line"><a name="l02945"></a><span class="lineno"> 2945</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%wbsurf)</div><div class="line"><a name="l02946"></a><span class="lineno"> 2946</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%gradrich)</div><div class="line"><a name="l02947"></a><span class="lineno"> 2947</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%wstar)</div><div class="line"><a name="l02948"></a><span class="lineno"> 2948</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%dbdz)</div><div class="line"><a name="l02949"></a><span class="lineno"> 2949</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%dvdzm)</div><div class="line"><a name="l02950"></a><span class="lineno"> 2950</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%rhokm)</div><div class="line"><a name="l02951"></a><span class="lineno"> 2951</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%rhokh)</div><div class="line"><a name="l02952"></a><span class="lineno"> 2952</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%tke)</div><div class="line"><a name="l02953"></a><span class="lineno"> 2953</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%ostressx)</div><div class="line"><a name="l02954"></a><span class="lineno"> 2954</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%ostressy)</div><div class="line"><a name="l02955"></a><span class="lineno"> 2955</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%smltop)</div><div class="line"><a name="l02956"></a><span class="lineno"> 2956</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%dsctop)</div><div class="line"><a name="l02957"></a><span class="lineno"> 2957</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%zhlocal)</div><div class="line"><a name="l02958"></a><span class="lineno"> 2958</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%zhpar)</div><div class="line"><a name="l02959"></a><span class="lineno"> 2959</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%dscbase)</div><div class="line"><a name="l02960"></a><span class="lineno"> 2960</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%cldbase)</div><div class="line"><a name="l02961"></a><span class="lineno"> 2961</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%weparm)</div><div class="line"><a name="l02962"></a><span class="lineno"> 2962</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%weparm_dsc)</div><div class="line"><a name="l02963"></a><span class="lineno"> 2963</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%dTfric)</div><div class="line"><a name="l02964"></a><span class="lineno"> 2964</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%elm3d)</div><div class="line"><a name="l02965"></a><span class="lineno"> 2965</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%elh3d)</div><div class="line"><a name="l02966"></a><span class="lineno"> 2966</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%rhokmloc)</div><div class="line"><a name="l02967"></a><span class="lineno"> 2967</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%rhokhloc)</div><div class="line"><a name="l02968"></a><span class="lineno"> 2968</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%rhokmsurf)</div><div class="line"><a name="l02969"></a><span class="lineno"> 2969</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%rhokhsurf)</div><div class="line"><a name="l02970"></a><span class="lineno"> 2970</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%rhokmsc)</div><div class="line"><a name="l02971"></a><span class="lineno"> 2971</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%rhokhsc)</div><div class="line"><a name="l02972"></a><span class="lineno"> 2972</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%weight1d)</div><div class="line"><a name="l02973"></a><span class="lineno"> 2973</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%fm)    <span class="keyword">DEALLOCATE</span>(bl_diag%fh)    <span class="keyword">DEALLOCATE</span>(bl_diag%sgm_trb)</div><div class="line"><a name="l02974"></a><span class="lineno"> 2974</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%ql_trb)</div><div class="line"><a name="l02975"></a><span class="lineno"> 2975</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%cf_trb)</div><div class="line"><a name="l02976"></a><span class="lineno"> 2976</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%wb_ng)</div><div class="line"><a name="l02977"></a><span class="lineno"> 2977</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%sh)</div><div class="line"><a name="l02978"></a><span class="lineno"> 2978</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%sm)</div><div class="line"><a name="l02979"></a><span class="lineno"> 2979</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%tke_dissp)</div><div class="line"><a name="l02980"></a><span class="lineno"> 2980</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%tke_boy_prod)</div><div class="line"><a name="l02981"></a><span class="lineno"> 2981</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%tke_shr_prod)</div><div class="line"><a name="l02982"></a><span class="lineno"> 2982</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%elm)</div><div class="line"><a name="l02983"></a><span class="lineno"> 2983</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%rhogamq)</div><div class="line"><a name="l02984"></a><span class="lineno"> 2984</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%rhogamt)</div><div class="line"><a name="l02985"></a><span class="lineno"> 2985</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%rhogamv)</div><div class="line"><a name="l02986"></a><span class="lineno"> 2986</span>&#160;    <span class="keyword">DEALLOCATE</span>(bl_diag%rhogamu)</div><div class="line"><a name="l02987"></a><span class="lineno"> 2987</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">!l_apply_diag</span></div><div class="line"><a name="l02988"></a><span class="lineno"> 2988</span>&#160;</div><div class="line"><a name="l02989"></a><span class="lineno"> 2989</span>&#160;  <span class="keyword">DEALLOCATE</span> (t_earliest)</div><div class="line"><a name="l02990"></a><span class="lineno"> 2990</span>&#160;  <span class="keyword">DEALLOCATE</span> (q_earliest)</div><div class="line"><a name="l02991"></a><span class="lineno"> 2991</span>&#160;  <span class="keyword">DEALLOCATE</span> (qcl_earliest)</div><div class="line"><a name="l02992"></a><span class="lineno"> 2992</span>&#160;  <span class="keyword">DEALLOCATE</span> (qcf_earliest)</div><div class="line"><a name="l02993"></a><span class="lineno"> 2993</span>&#160;  <span class="keyword">DEALLOCATE</span> (cf_earliest)</div><div class="line"><a name="l02994"></a><span class="lineno"> 2994</span>&#160;  <span class="keyword">DEALLOCATE</span> (cfl_earliest)</div><div class="line"><a name="l02995"></a><span class="lineno"> 2995</span>&#160;  <span class="keyword">DEALLOCATE</span> (cff_earliest)</div><div class="line"><a name="l02996"></a><span class="lineno"> 2996</span>&#160;</div><div class="line"><a name="l02997"></a><span class="lineno"> 2997</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;NI_IMP_CTL&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l02998"></a><span class="lineno"> 2998</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l02999"></a><span class="lineno"> 2999</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="ni__imp__ctl_8f90.xhtml#a9d192b5c45d7330f88208ed64fe4d6b4" title="Subroutine NI_imp_ctl Subroutine NI_imp_ctl  ">ni_imp_ctl</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
