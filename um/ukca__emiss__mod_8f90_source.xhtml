<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/UKCA/ukca_emiss_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_3b087d695daa154bfcb7242bcfd0fbd3.xhtml">UKCA</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ukca_emiss_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ukca__emiss__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">! Description:!   Module holding procedures for New UKCA emission system</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!   Description of each subroutine contained here:</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="namespaceukca__emiss__mod.xhtml">   30</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceukca__emiss__mod.xhtml" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_emiss_mod</a></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceum__types.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">um_types</a><span class="keywordtype">,              ONLY</span>: <a class="code" href="namespaceum__types.xhtml#af5fbacdfa62f7f4f6d3aaab1a1149e9a">integer32</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">,           ONLY</span>: <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keywordtype">USE </span>netcdf</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecontrol__max__sizes.xhtml" title="This file belongs in section: Misc. ">control_max_sizes</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceum__parcore.xhtml" title="This file belongs in section: MPP. ">um_parcore</a><span class="keywordtype">,            ONLY</span>: <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>, <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>, <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>, &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                       <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacet__int__mod.xhtml" title="SUBROUTINE T_INT:-!&gt; SUBROUTINE T_INT:-!&gt; Purpose: Carries out linear interpolation in time between t...">t_int_mod</a><span class="keywordtype">,             ONLY</span>: <a class="code" href="namespacet__int__mod.xhtml#a3f81b12bc3c2632d894e6f990f081472">t_int</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keywordtype">USE </span>ukca_option_mod<span class="keywordtype">,       ONLY</span>: l_ukca_qch4inter, l_ukca_prescribech4, &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                                 ukca_em_dir, ukca_em_files</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keywordtype">USE </span>ukca_constants<span class="keywordtype">,        ONLY</span>: l_ukca_diurnal_isopems</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceukca__d1__defs.xhtml" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_d1_defs</a><span class="keywordtype">,          ONLY</span>: <a class="code" href="namespaceukca__d1__defs.xhtml#a15927bee65eb236ea301f0c8b369b736">n_chem_emissions</a>, <a class="code" href="namespaceukca__d1__defs.xhtml#afe84aeea998546cb85af033f08f9d6b7">n_3d_emissions</a>, <a class="code" href="namespaceukca__d1__defs.xhtml#afdc77c4596d6446bbed092bf8e81a735">em_chem_spec</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceum__input__control__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">um_input_control_mod</a><span class="keywordtype">,  ONLY</span>: <a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">,              ONLY</span>: jpim, jprb      <span class="comment">! DrHook</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">,               ONLY</span>: lhook, dr_hook  <span class="comment">! DrHook</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">PRIVATE</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span>  :: max_em_file  = 40  <span class="comment">! Set a max nr of emiss files</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">INTEGER</span>             :: em_update_freq (max_em_file) <span class="comment">! update freq. (hours)</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">INTEGER</span>             :: em_update_type (max_em_file) <span class="comment">! 1 serial, 2 periodic</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">CHARACTER (LEN=256)</span> :: em_filename    (max_em_file) <span class="comment">! names of source files</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">INTEGER</span>         :: num_file_nml              <span class="comment">! Number of files in namelist</span></div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="namespaceukca__emiss__mod.xhtml#ab911b454f95ed6db42efe692274c5140">   63</a></span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">PUBLIC</span> :: <a class="code" href="namespaceukca__emiss__mod.xhtml#ab911b454f95ed6db42efe692274c5140">num_cdf_em_flds</a>           <span class="comment">! Number of NetCDF emission fields</span></div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="namespaceukca__emiss__mod.xhtml#acfd36bb08f27d744c24e10fe9ef3ad60">   64</a></span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">PUBLIC</span> :: <a class="code" href="namespaceukca__emiss__mod.xhtml#acfd36bb08f27d744c24e10fe9ef3ad60">num_em_flds</a>               <span class="comment">! Number of total emission fields</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e">   67</a></span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">PUBLIC</span> :: <a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>                <span class="comment">! Index for lightning emiss of NOx</span></div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">   68</a></span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">PUBLIC</span> :: <a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>                 <span class="comment">! Index for wetland emiss of CH4</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">TYPE</span> ukca_em_struct</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordtype">CHARACTER (LEN=256)</span>  :: file_name    <span class="comment">! Name of source file</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">CHARACTER (LEN=80)</span>   :: var_name     <span class="comment">! Name of variable in file</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keywordtype">CHARACTER (LEN=10)</span>   :: tracer_name  <span class="comment">! Emitted species</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">CHARACTER (LEN=256)</span>  :: std_name     <span class="comment">! standard_name attrib in NetCDF files</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordtype">CHARACTER (LEN=256)</span>  :: lng_name     <span class="comment">! long_name     attrib in NetCDF files</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordtype">CHARACTER (LEN=30)</span>   :: units        <span class="comment">! Units of the emission field</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keywordtype">INTEGER</span>              :: update_freq  <span class="comment">! Update frequency (hours)</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keywordtype">INTEGER</span>              :: update_type  <span class="comment">! 1 serial, 2 periodic, ...</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordtype">LOGICAL</span>              :: l_update     <span class="comment">! True if field updated in a given tstep</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keywordtype">LOGICAL</span>              :: three_dim    <span class="comment">! True if 3D emiss field</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keywordtype">REAL</span>                 :: base_fact     <span class="comment">! Base conv factor</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">POINTER</span>        :: vert_scaling_3d (:,:,:) <span class="comment">! Vertical conv factor</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordtype">CHARACTER (LEN=20)</span>   :: hourly_fact  <span class="comment">! hourly_scaling: traffic,</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                                                <span class="comment">! none, diurnal_isopems</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">CHARACTER (LEN=20)</span>   :: daily_fact   <span class="comment">! daily_scaling:  traffic,</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                                <span class="comment">! none</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">CHARACTER (LEN=30)</span>   :: vert_fact    <span class="comment">! vertical_scaling: surface,                                       ! all_levels, etc.</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordtype">INTEGER</span>              :: lowest_lev   <span class="comment">! Lowest and highest level where</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordtype">INTEGER</span>              :: highest_lev  <span class="comment">! emiss can be injected</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">POINTER</span>:: values (:,:,:)      <span class="comment">! emission data</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">POINTER</span>:: diags  (:,:,:)      <span class="comment">! emission diagnostics</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">END TYPE </span>ukca_em_struct</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb">  103</a></span>&#160;type(ukca_em_struct), <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">PUBLIC</span> :: <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">! 2-D field to hold biogenic isoprene emissions, with base scaling</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">! applied (in case units are not kg m-2 s-1), but without diurnal cycle</span></div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="namespaceukca__emiss__mod.xhtml#a18ec5c3e5bc51253842dbbe568efec4f">  107</a></span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>, <span class="keywordtype">PUBLIC</span> :: <a class="code" href="namespaceukca__emiss__mod.xhtml#a18ec5c3e5bc51253842dbbe568efec4f">biogenic_isop</a> (:,:)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">! Subroutines available outside this module</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordtype">PUBLIC</span> :: ukca_emiss_init, ukca_emiss_update</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">!  Get emission NetCDF files from namelist, check fields in them</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">!  and initialise the emissions structure.</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">! Method:</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">! 1) Go through all possible NetCDF emission files in the namelist and get!    the current number of files to read (num_file_nml).</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">! 2) First loop through all files found in (1) to get all the emission fields</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">!    present and their update frequencies. Note that one file can contain</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">!    several emission fields but only one global attribute with the update</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">!    frequency, which means this freq is the same for all fields in a file.</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! 3) Get:</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">!    * number of emission fields found in the NetCDF files: num_cdf_em_flds</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">!    * total number of emission fields: num_em_flds, which is equal to</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">!      num_cdf_em_flds + nr of online emiss (online emissions can include e.g.</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">!      NOx from lightning or CH4 from wetlands)</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">! 4) Allocate the emissions structure, with upper bounds equal to num_em_flds</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">!    and call UKCA_EM_STRUCT_INIT to initialise some items there.</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">! 5) Repeat loop like in (2) and check also the online emissions again!    to fill in (or to allocate) some items in the emissions structure.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">!SUBROUTINE ukca_emiss_init (row_length, rows,  model_levels,  &amp;</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                            global_row_length, global_rows)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">! Subroutine arguments</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordtype">INTEGER</span>,           <span class="keywordtype">INTENT(IN)</span> :: row_length       <span class="comment">! model dimensionsINTEGER,           INTENT(IN) :: rows</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordtype">INTEGER</span>,           <span class="keywordtype">INTENT(IN)</span> :: model_levels</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordtype">INTEGER</span>,           <span class="keywordtype">INTENT(IN)</span> :: global_row_length</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keywordtype">INTEGER</span>,           <span class="keywordtype">INTENT(IN)</span> :: global_rows</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keywordtype">LOGICAL</span>             :: l_nml_exis = .false.</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keywordtype">INTEGER</span>             :: n, l, fileid, ecount</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordtype">INTEGER</span>             :: n_em_files     <span class="comment">! Max nr of emiss files in namelist</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span>  :: max_dims = 5           <span class="comment">! Max nr of dims per var</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keywordtype">INTEGER</span>             :: dimen_size (max_dims)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keywordtype">CHARACTER (LEN=4)</span>   :: char_em_update_freq    <span class="comment">! Emiss update freq (in hours),</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keywordtype">CHARACTER (LEN=1)</span>   :: char_em_update_type    <span class="comment">! serial, periodic, single point</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                                    <span class="comment">! both fields are read from global attrib.</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keywordtype">INTEGER   (KIND=integer32)</span> :: nvars, varid, var_type, nstatus</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keywordtype">CHARACTER (LEN=256)</span>        :: variable_name</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordtype">CHARACTER (LEN=100)</span>        :: cmessage</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">! Attributes read from the NetCDF files</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keywordtype">CHARACTER (LEN=10)</span>         :: emitted_tracer</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keywordtype">CHARACTER (LEN=20)</span>         :: hourly_scaling, daily_scaling</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordtype">CHARACTER (LEN=30)</span>         :: vert_scaling</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keywordtype">CHARACTER (LEN=30)</span>         :: emiss_units</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keywordtype">CHARACTER (LEN=2)</span>          :: alowest_level, ahighest_level</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keywordtype">CHARACTER (LEN=256)</span>        :: standard_name, long_name</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordtype">INTEGER</span>                    :: lowest_level,  highest_level</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keywordtype">INTEGER</span>                    :: ierror      <span class="comment">! Error code</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">SAVE</span> :: test_single_emiss = .false. <span class="comment">! True if we intend to have one</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                                             <span class="comment">! single emiss field per tracer</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordtype">INTEGER (KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordtype">INTEGER (KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keywordtype">REAL    (KIND=jprb)</span>            :: zhook_handle</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">! End of header</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, zhook_in, zhook_handle)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; ierror   = 0</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">! Initialise variables to default values before</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">! reading them from namelist</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; em_filename(:) = <span class="stringliteral">&#39; &#39;</span>       <span class="comment">! File names</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; em_update_freq(:) = imdi      <span class="comment">! Update frequencies</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; em_update_type(:) = imdi      <span class="comment">! Emission type: serial, periodic, ...</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">! Go through all possible files in the namelist and find out</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">! how many of them are not empty. That will be the current</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">! number of files to read.</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; num_file_nml = 0</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; n_em_files   = <span class="keyword">SIZE</span> (ukca_em_files) <span class="comment">! max nr of emiss files in namelist</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; <span class="keywordflow">DO</span> n = 1, n_em_files</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;   <span class="comment">! Exit when first empty file found (note that the array ukca_em_files</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;   <span class="comment">! was initialised as &#39;ukca_em_files is unset&#39; in UKCA_OPTION_MOD)</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;   <span class="keywordflow">IF</span> (ukca_em_files(n) == <span class="stringliteral">&#39; &#39;</span>                       .OR.   &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;       ukca_em_files(n) == <span class="stringliteral">&#39;ukca_em_files is unset&#39;</span>) <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;   em_filename(n) = trim(ukca_em_dir) // <span class="stringliteral">&#39;/&#39;</span> // trim(ukca_em_files(n))</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;   num_file_nml    = num_file_nml + 1</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordflow"> END DO</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">! Stop with error message if no files found (i.e. if user did! not introduce the name of any NetCDF emission file)</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; <span class="keywordflow">IF</span> (num_file_nml == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;   ierror   = 1</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;   cmessage = <span class="stringliteral">&#39;Need to provide name of at least one NetCDF emission file&#39;</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;   <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, ierror, cmessage)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keywordflow"> END IF</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;   <span class="keyword">WRITE</span> (<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(I3,X,A)&#39;</span>) num_file_nml,<span class="stringliteral">&#39;files found in emission namelist&#39;</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;   <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_emiss_init&#39;</span>)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keywordflow"> END IF</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">! -! First loop through all emission files to get their update</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">! frequencies (stored as global attribute) as well as the</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">! total number of NetCDF emission fields (num_cdf_em_flds).</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; <a class="code" href="namespaceukca__emiss__mod.xhtml#ab911b454f95ed6db42efe692274c5140">num_cdf_em_flds</a>  = 0</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; <span class="keywordflow">DO</span> n = 1, num_file_nml</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;   <span class="keyword">CALL </span>em_fopen (trim(em_filename(n)),fileid)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;   nfid = fileid</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">!  Get the update frequency of the file (in hours). Needs to be read</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">!  as character before storing it in a numeric array.</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;   nstatus = nf90_get_att(nfid, nf90_global, <span class="stringliteral">&#39;update_freq_in_hours&#39;</span>,        &amp;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                           char_em_update_freq)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;   <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, <span class="stringliteral">&#39;get_att update_freq_in_hours from &#39;</span> // &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                   trim(em_filename(n)))</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;   <span class="keyword">READ</span> (char_em_update_freq, <span class="stringliteral">&#39;(I4)&#39;</span>) em_update_freq(n)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;   <span class="comment">! Make sure that update frequency is filled with an integer greater   ! or equal to 1</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;   <span class="keywordflow">IF</span> (em_update_freq(n) .LT. 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;     ierror   = 1</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;     cmessage = <span class="stringliteral">&#39;Update frequency needs to be multiple of one hour for &#39;</span> // &amp;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                trim(em_filename(n))</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;     <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, ierror, cmessage)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keywordflow">   END IF</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">!  Similarly read the indicator for times at which data is provided.</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">!  We adopt the same conventions as for ancillary files:</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">!    0 Single time           (not tested and therefore not allowed yet)</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">!    1 Time series</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">!    2 Periodic time series</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;   nstatus = nf90_get_att(nfid, nf90_global, <span class="stringliteral">&#39;emission_type&#39;</span>,        &amp;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                           char_em_update_type)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;   <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, <span class="stringliteral">&#39;get_att emission_type from &#39;</span> // &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                   trim(em_filename(n)))</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;   <span class="keyword">READ</span> (char_em_update_type, <span class="stringliteral">&#39;(I1)&#39;</span>) em_update_type(n)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">!  For the moment only allow the two options that have been tested:</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">!    time series - update_type = 1</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">!    periodic    - update_type = 2</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;   <span class="keywordflow">IF</span> (em_update_type(n) /= 1 .AND. em_update_type(n) /= 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;     ierror   = 1</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;     cmessage = <span class="stringliteral">&#39;Time series (1) and periodic (2) are the only &#39;</span> // &amp;                <span class="stringliteral">&#39;options allowed for &#39;</span> // trim(em_filename(n))</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;     <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, ierror, cmessage)</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="keywordflow">   END IF</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">!  Get number of variables in an emission file</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;   nstatus = nf90_inquire(nfid, nvariables = nvars)</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;   <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, <span class="stringliteral">&#39;inquire &#39;</span> // trim(em_filename(n)))</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">!  Go through all variables in each emission file to calculate the</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">!  total number of emission fields (considering all files)</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;   <span class="keywordflow">DO</span> varid = 1, nvars</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;     nstatus = nf90_inquire_variable(nfid, varid, variable_name, var_type)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;     <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, <span class="stringliteral">&#39;inquire_var &#39;</span> // trim(em_filename(n)))</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;     nstatus = nf90_get_att(nfid, varid, <span class="stringliteral">&#39;tracer_name&#39;</span>, emitted_tracer)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;     <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, <span class="stringliteral">&#39;get_att tracer_name from &#39;</span> //        &amp;                     variable_name)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">!    Select only variables which are consistent with the emission definition</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">!    of the chemistry scheme. For that the attribute &#39;tracer_name&#39; needs to</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">!    be present in the NetCDF field and the variable where that attribute is</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">!    stored (i.e. emitted_tracer) needs to be equal to one of the elements in</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">!    the array of emitted species (i.e. array em_chem_spec).</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;     <span class="keywordflow">IF</span> (any(<a class="code" href="namespaceukca__d1__defs.xhtml#afdc77c4596d6446bbed092bf8e81a735">em_chem_spec</a> == emitted_tracer)) <span class="keywordflow">THEN</span>  <span class="comment">! emitted in chem scheme</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;       <a class="code" href="namespaceukca__emiss__mod.xhtml#ab911b454f95ed6db42efe692274c5140">num_cdf_em_flds</a> = <a class="code" href="namespaceukca__emiss__mod.xhtml#ab911b454f95ed6db42efe692274c5140">num_cdf_em_flds</a> + 1</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;       <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;         <span class="keyword">WRITE</span> (<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A,A)&#39;</span>) emitted_tracer, <span class="stringliteral">&#39; found in &#39;</span>,            &amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                               trim(em_filename(n))</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_emiss_init&#39;</span>)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;     <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">!      Report a warning and ignore the emission field if it is not present</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">!      in the current chemistry scheme. Note that with the condition below!      the warning message will not appear for variables which are not!      emission fields (e.g. dimension variables, variables related to the!      &quot;grid_mapping&quot; of the NetCDF files, etc.), because they will not!      contain the attribute &#39;tracer_name&#39;.</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;       <span class="keywordflow">IF</span> (trim(emitted_tracer) /= <span class="stringliteral">&#39;&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;         ierror   = -1</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;         cmessage = <span class="stringliteral">&#39;emission field &#39;</span> // trim(emitted_tracer) //       &amp;           <span class="stringliteral">&#39; not present in the chemistry scheme and therefore ignored&#39;</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;         <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, ierror, cmessage)</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">     END IF</span>       <span class="comment">! emitted in chem scheme</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="keywordflow">   END DO</span>         <span class="comment">! loop trhough variables in an emission file</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;   <span class="keyword">CALL </span>em_fclose(fileid)</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keywordflow"> END DO</span>    <span class="comment">! loop through all NetCDF emiss files</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">! -! The total nr of emission fields will be equal to the number of fields</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">! found in the NetCDF files (i.e. num_cdf_em_flds) plus any other fields</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">! that account for online emissions (only lightning NOx and wetland CH4</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">! at the moment, but this can be extended).</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment">! Add first an index for online NOx emiss from lightning,</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">! which are always present</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160; <a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>  = <a class="code" href="namespaceukca__emiss__mod.xhtml#ab911b454f95ed6db42efe692274c5140">num_cdf_em_flds</a> + 1     <span class="comment">! index for NOx lightning emiss</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; <a class="code" href="namespaceukca__emiss__mod.xhtml#acfd36bb08f27d744c24e10fe9ef3ad60">num_em_flds</a> = <a class="code" href="namespaceukca__emiss__mod.xhtml#ab911b454f95ed6db42efe692274c5140">num_cdf_em_flds</a> + 1     <span class="comment">! total number of emiss fields ! Add index for online CH4 from wetland emissions if these are</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">! active and prescribed surface CH4 concentrations are not used.</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">! Also increment the index for total number of emissions</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; <span class="keywordflow">IF</span> (l_ukca_qch4inter .AND. (.NOT. l_ukca_prescribech4)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;   <a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>   = <a class="code" href="namespaceukca__emiss__mod.xhtml#acfd36bb08f27d744c24e10fe9ef3ad60">num_em_flds</a> + 1</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;   <a class="code" href="namespaceukca__emiss__mod.xhtml#acfd36bb08f27d744c24e10fe9ef3ad60">num_em_flds</a> = <a class="code" href="namespaceukca__emiss__mod.xhtml#acfd36bb08f27d744c24e10fe9ef3ad60">num_em_flds</a> + 1</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;  <a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a> = -99</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keywordflow"> END IF</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160; <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;   <span class="keyword">WRITE</span> (<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,X,I3)&#39;</span>) <span class="stringliteral">&#39;Number of NetCDF emission fields:&#39;</span>, &amp;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                                 <a class="code" href="namespaceukca__emiss__mod.xhtml#ab911b454f95ed6db42efe692274c5140">num_cdf_em_flds</a></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;   <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_emiss_init&#39;</span>)</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;   <span class="keyword">WRITE</span> (<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,X,I3)&#39;</span>) <span class="stringliteral">&#39;Total number of emission fields:&#39;</span>,  &amp;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                                  <a class="code" href="namespaceukca__emiss__mod.xhtml#acfd36bb08f27d744c24e10fe9ef3ad60">num_em_flds</a></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;   <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_emiss_init&#39;</span>)</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keywordflow"> END IF</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">! Allocate the emission structure and initialise some</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">! of its elements to default values ALLOCATE (emissions(num_em_flds))</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; <span class="keyword">CALL </span>ukca_em_struct_init</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">! -! Now repeat loops through emission files and fields, with the  objective</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">! to fill in (or allocate) some items in the emissions structure</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; ecount = 0   <span class="comment">! initialise counter for elements in emissions tructure</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160; <span class="keywordflow">DO</span> n = 1, num_file_nml</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;   <span class="keyword">CALL </span>em_fopen (trim(em_filename(n)),fileid)</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;   nfid    = fileid</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">!  Get number of variables in each emission file</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;   nstatus = nf90_inquire(nfid, nvariables = nvars)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;   <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, <span class="stringliteral">&#39;inquire &#39;</span> // trim(em_filename(n)))</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">!  Select the right emission fields as before and store</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">!  some of their attributes in the emissions structure</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;   <span class="keywordflow">DO</span> varid = 1, nvars</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;     nstatus = nf90_inquire_variable(nfid, varid, variable_name, var_type)</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;     <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, <span class="stringliteral">&#39;inquire_var &#39;</span> // trim(em_filename(n)))</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;     nstatus = nf90_get_att(nfid, varid, <span class="stringliteral">&#39;tracer_name&#39;</span>, emitted_tracer)</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;     <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, <span class="stringliteral">&#39;get_att tracer_name from &#39;</span> //         &amp;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                      trim(variable_name) )</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">!    If an emission field is found then do some updates for it</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">!    in the emissions structure</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;     <span class="keywordflow">IF</span> (any(<a class="code" href="namespaceukca__d1__defs.xhtml#afdc77c4596d6446bbed092bf8e81a735">em_chem_spec</a> == emitted_tracer)) <span class="keywordflow">THEN</span>  <span class="comment">! emitted in chem scheme</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;         ecount = ecount + 1 <span class="comment">! increase counter for field in emissions struct</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">!        Get values of some attributes for the emission field</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;         nstatus = nf90_get_att(nfid, varid, <span class="stringliteral">&#39;standard_name&#39;</span>,  standard_name)</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;         <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>,<span class="stringliteral">&#39;get_att standard_name from &#39;</span>    // &amp;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                         trim(variable_name))</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;         nstatus = nf90_get_att(nfid, varid, <span class="stringliteral">&#39;long_name&#39;</span>,      long_name)</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;         <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>,<span class="stringliteral">&#39;get_att long_name from &#39;</span>        // &amp;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                         trim(variable_name))</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;         nstatus = nf90_get_att(nfid, varid, <span class="stringliteral">&#39;units&#39;</span>,          emiss_units)</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;         <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>,<span class="stringliteral">&#39;get_att units from &#39;</span>            // &amp;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                         trim(variable_name))</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;         nstatus = nf90_get_att(nfid, varid, <span class="stringliteral">&#39;hourly_scaling&#39;</span>, hourly_scaling)</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;         <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, <span class="stringliteral">&#39;get_att hourly_scaling from &#39;</span>  // &amp;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                         trim(variable_name))</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;         nstatus = nf90_get_att(nfid, varid, <span class="stringliteral">&#39;daily_scaling&#39;</span>,  daily_scaling)</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;         <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, <span class="stringliteral">&#39;get_att daily_scaling from &#39;</span>   // &amp;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                         trim(variable_name))</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;         nstatus = nf90_get_att(nfid, varid, <span class="stringliteral">&#39;vertical_scaling&#39;</span>, vert_scaling)</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;         <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, <span class="stringliteral">&#39;get_att vertical_scaling from &#39;</span>// &amp;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                         trim(variable_name))</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">!        Fill in file_name and update_freq with information read from the</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">!        namelist (these two variables are the same for all fields within!        the same emision file).</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;         <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%file_name   = em_filename(n)</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;         <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%update_freq = em_update_freq(n) <span class="comment">! hours</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;         <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%update_type = em_update_type(n)</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment">!        The other elements of the structure can be read</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment">!        from the variables/attributes in the emission files</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;         <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%var_name    = variable_name</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;         <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%tracer_name = emitted_tracer</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;         <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%std_name    = standard_name</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;         <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%lng_name    = long_name</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;         <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%units       = emiss_units</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;         <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%hourly_fact = hourly_scaling</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;         <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%daily_fact  = daily_scaling</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;         <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%vert_fact   = vert_scaling</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">!        Note that by default ukca_em_struct_init has set:</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment">!           emissions(:)%base_fact   = 1.</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">!        The routine ukca_emiss_factors will update this</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">!        based on the units of the emission field</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment">!        If it is a high or a single level emission field then the</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">!        NetCDF file should contain two attributes indicating the!        highest and lowest level where emissions should be injected</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;         <span class="keywordflow">IF</span> (vert_scaling == <span class="stringliteral">&#39;high_level&#39;</span>    .OR.                             &amp;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;             vert_scaling == <span class="stringliteral">&#39;single_level&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;           nstatus = nf90_get_att(nfid, varid, <span class="stringliteral">&#39;lowest_level&#39;</span>, alowest_level)</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;           <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, <span class="stringliteral">&#39;get_att lowest_level from &#39;</span>  // &amp;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                           trim(variable_name))</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;           nstatus = nf90_get_att(nfid, varid, <span class="stringliteral">&#39;highest_level&#39;</span>, ahighest_level)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;           <span class="keyword">CALL </span>nd_error (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, <span class="stringliteral">&#39;get_att highest_level from &#39;</span> // &amp;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                           trim(variable_name))</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">!          Convert attributes from character to integer type</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;           <span class="keyword">READ</span> (alowest_level,  <span class="stringliteral">&#39;(I2)&#39;</span>) lowest_level</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;           <span class="keyword">READ</span> (ahighest_level, <span class="stringliteral">&#39;(I2)&#39;</span>) highest_level</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;           <span class="keywordflow">IF</span> (lowest_level  &lt; 1 .OR. lowest_level  &gt; model_levels) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;             ierror   = 1</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;             cmessage = <span class="stringliteral">&#39;lowest level for &#39;</span> // trim(variable_name) //         &amp;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                        <span class="stringliteral">&#39; outside the range of model vertical levels&#39;</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;             <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, ierror, cmessage)</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;           <span class="keywordflow">IF</span> (highest_level &lt; 1 .OR. highest_level &gt; model_levels) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;             ierror   = 1</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;             cmessage = <span class="stringliteral">&#39;highest level for &#39;</span> // trim(variable_name) //        &amp;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                        <span class="stringliteral">&#39; outside the range of model vertical levels&#39;</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;             <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, ierror, cmessage)</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;           <span class="keywordflow">IF</span> (lowest_level &gt; highest_level) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;             ierror   = 1</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;             cmessage = <span class="stringliteral">&#39;lowest level has to be less than or equal &#39;</span>//         &amp;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                        <span class="stringliteral">&#39;to highest level for &#39;</span> // trim(variable_name)</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;             <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, ierror, cmessage)</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;           <span class="keywordflow">IF</span> (vert_scaling == <span class="stringliteral">&#39;single_level&#39;</span> .AND.                            &amp;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;               lowest_level /= highest_level) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;             ierror   = 1</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;             cmessage = <span class="stringliteral">&#39;highest and lowest level should coincide for &#39;</span> //     &amp;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                        <span class="stringliteral">&#39;single level emissions (&#39;</span>                      //     &amp;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                        trim(variable_name) // <span class="stringliteral">&#39;)&#39;</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;             <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, ierror, cmessage)</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;           <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%lowest_lev  = lowest_level</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;           <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%highest_lev = highest_level</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="keywordflow">         END IF</span>  <span class="comment">! &#39;high_level&#39; OR &#39;single_level&#39;</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">!        Checking number of dimensions of the emission field</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;         <span class="keyword">CALL </span>em_var_check_dims (global_row_length, global_rows, model_levels, &amp;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                                 fileid, variable_name, dimen_size)</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">!        Different allocations depending on the nr of elements</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">!        in the vertical dimension</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;         <span class="keywordflow">IF</span> (dimen_size(3) == 1) <span class="keywordflow">THEN</span>                <span class="comment">! 2D emiss field</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;           <span class="keyword">ALLOCATE</span> (<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%values(row_length, rows, 1))</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;           <span class="keyword">ALLOCATE</span> (<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%diags (row_length, rows, 1))</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">!          If &#39;high_level&#39; or &#39;single_level&#39; emission then the highest and</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">!          lowest levels where to inject the emissions should have been</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">!          updated above. If not then assume that it is a surface emiss</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">!          field and therefore set both of them to 1 (just for completeness)</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;           <span class="keywordflow">IF</span> (vert_scaling /= <span class="stringliteral">&#39;high_level&#39;</span>    .AND.                         &amp;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;               vert_scaling /= <span class="stringliteral">&#39;single_level&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;             <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%lowest_lev  = 1</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;             <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%highest_lev = 1</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;         <span class="keywordflow">ELSE</span>           <span class="keywordflow">IF</span> (dimen_size(3) == model_levels) <span class="keywordflow">THEN</span>   <span class="comment">! 3D emiss field</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;             <span class="keyword">ALLOCATE</span> (<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%values(row_length, rows, model_levels))</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;             <span class="keyword">ALLOCATE</span> (<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%diags (row_length, rows, model_levels))</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;             <span class="comment">! Update the lowest and highest levels where emiss are injected</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;             <span class="comment">! (just for consistency) and indicate that it is a 3D emiss field</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;             <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%lowest_lev  = 1</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;             <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%highest_lev = model_levels</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;             <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%three_dim   = .true.           <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;             <span class="comment">! Report error just to double-check. However em_var_check_dims</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;             <span class="comment">! should have failed if the number of vertical levels is not             ! equal to 1 or to model_levels</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;             <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, fileid,             &amp;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;               <span class="stringliteral">&#39;Dimension mismatch for: &#39;</span> // trim(variable_name))</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="keywordflow">         END IF</span>  <span class="comment">! dimen_size</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;         <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%values(:,:,:) = 0.0  <span class="comment">! will be filled when we</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;         <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(ecount)%diags (:,:,:) = 0.0  <span class="comment">! update emissions</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="keywordflow">     END IF</span>    <span class="comment">! emitted in chem scheme</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="keywordflow">   END DO</span>      <span class="comment">! loop through variables in an emission file</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;   <span class="keyword">CALL </span>em_fclose(fileid)</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="keywordflow"> END DO</span>        <span class="comment">! loop through all NetCDF emission fields</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">! Initialise fields for lightning NOx in the emissions structure</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="comment">! (Note that there is no need to update file_name, update_freq ! and update_type for online emissions)</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160; <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%var_name    = <span class="stringliteral">&#39;NOx_lightning_emissions&#39;</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160; <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%tracer_name = <span class="stringliteral">&#39;NO_lightng&#39;</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment">! Units should be consistent with the emission field we will take from</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="comment">! the call to ukca_light_ctl within ukca_new_emiss_ctl, i.e.</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment">! &#39;kg(N) gridbox-1 s-1&#39;. However, to follow the same approach as</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="comment">! for NetCDF emission fields, we do not indicate &#39;N&#39; in the units</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment">! but use the substring &#39;expressed as nitrogen&#39; in the long_name.</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160; <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%units       = <span class="stringliteral">&#39;kg gridbox-1 s-1&#39;</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160; <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%lng_name    = <span class="stringliteral">&#39;tendency of atmosphere mass content&#39;</span> // &amp;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;   <span class="stringliteral">&#39; of nitrogen monoxide expressed as nitrogen due to emission from lightning&#39;</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160; <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%hourly_fact = <span class="stringliteral">&#39;none&#39;</span>         <span class="comment">! No need to apply</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160; <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%daily_fact  = <span class="stringliteral">&#39;none&#39;</span>         <span class="comment">! time profiles</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160; <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%vert_fact   = <span class="stringliteral">&#39;all_levels&#39;</span>   <span class="comment">! 3D emissions</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160; <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%three_dim   = .true. <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%lowest_lev  = 1 <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%highest_lev = model_levels</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="comment">! Emission values and diagostics allocated and initialised here.</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment">! They will be updated in ukca_new_emiss_ctl and ukca_add_emiss,</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment">! respectively</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160; <span class="keyword">ALLOCATE</span> (<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%values(row_length, rows, model_levels))</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160; <span class="keyword">ALLOCATE</span> (<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%diags (row_length, rows, model_levels))</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160; <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%values(:,:,:) = 0.0</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160; <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#afc3eeca0d9bc6c2158872517959db75e" title="Indices for any online emissions which are not input as NetCDF. ">inox_light</a>)%diags (:,:,:) = 0.0</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment">! Initialise fields for online wetland emiss of CH4 in emissions structure</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="comment">! (done in a similar way as done above for lightning NOx, but only if! these emissions exist)</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160; <span class="keywordflow">IF</span> (l_ukca_qch4inter .AND. (.NOT. l_ukca_prescribech4)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;   <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%var_name    = <span class="stringliteral">&#39;CH4_wetland_emissions&#39;</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;   <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%tracer_name = <span class="stringliteral">&#39;CH4_wetlnd&#39;</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="comment">!  Units should be consistent with CH4 wetland emiss from JULES,!  given in &#39;kg(C) m-2 s-1&#39;. Similarly as seen above for &#39;NO_lightng&#39;,</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="comment">!  we do not indicate &#39;C&#39; in the units but use the substring</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="comment">!  &#39;expressed as carbon&#39; in the long_name.</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;   <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%units      = <span class="stringliteral">&#39;kg m-2 s-1&#39;</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;   <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%lng_name   = <span class="stringliteral">&#39;tendency of atmosphere mass content&#39;</span> // &amp;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;      <span class="stringliteral">&#39; of methane expressed as carbon due to emission from wetlands&#39;</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;   <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%hourly_fact = <span class="stringliteral">&#39;none&#39;</span>      <span class="comment">! No need to apply</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;   <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%daily_fact  = <span class="stringliteral">&#39;none&#39;</span>      <span class="comment">! time profiles</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;   <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%vert_fact   = <span class="stringliteral">&#39;surface&#39;</span>   <span class="comment">! surface emissions</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;   <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%three_dim   = .false.   <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%lowest_lev  = 1   <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%highest_lev = 1</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;   <span class="keyword">ALLOCATE</span> (<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%values(row_length, rows, 1))</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;   <span class="keyword">ALLOCATE</span> (<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%diags (row_length, rows, 1))</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;   <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%values(:,:,:) = 0.0</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;   <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(<a class="code" href="namespaceukca__emiss__mod.xhtml#abfcf9476cd6ca73d737b04b184779bb6">ich4_wetl</a>)%diags (:,:,:) = 0.0</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="keywordflow"> END IF</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160; <span class="comment">! If the emissions structure contains a biogenic isoprene field</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160; <span class="comment">! that needs a diurnal cycle to be applied online (via the routine ! UKCA_DIURNAL_ISOP_EMS) then create a 2-D field which will hold ! such emissions before applying the diurnal cycle.</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160; <span class="comment">! That field will be updated only when emission values are</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160; <span class="comment">! updated, depending on the updating frequency, but will not</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160; <span class="comment">! include the diurnal correction to avoid re-applying it</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160; <span class="comment">! (see code in UKCA_NEW_EMISS_CTL).</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160; <span class="keywordflow">IF</span> (any(<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%tracer_name == <span class="stringliteral">&#39;C5H8      &#39;</span>  .AND. &amp;     <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%hourly_fact == <span class="stringliteral">&#39;diurnal_isopems&#39;</span>) .AND. &amp;     l_ukca_diurnal_isopems) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;   <span class="keyword">ALLOCATE</span> (<a class="code" href="namespaceukca__emiss__mod.xhtml#a18ec5c3e5bc51253842dbbe568efec4f">biogenic_isop</a>(row_length, rows))</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="keywordflow"> END IF</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160; <span class="comment">! Make sure that there are no missing fields in the emission files,</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160; <span class="comment">! i.e. that all names in em_chem_spec are present in emissions structure</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160; <span class="keywordflow">DO</span> n = 1, <a class="code" href="namespaceukca__d1__defs.xhtml#a15927bee65eb236ea301f0c8b369b736">n_chem_emissions</a> + <a class="code" href="namespaceukca__d1__defs.xhtml#afe84aeea998546cb85af033f08f9d6b7">n_3d_emissions</a></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;   <span class="keywordflow">IF</span> (.NOT. any(<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%tracer_name == <a class="code" href="namespaceukca__d1__defs.xhtml#afdc77c4596d6446bbed092bf8e81a735">em_chem_spec</a>(n)) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;     cmessage = trim(<a class="code" href="namespaceukca__d1__defs.xhtml#afdc77c4596d6446bbed092bf8e81a735">em_chem_spec</a>(n)) // <span class="stringliteral">&#39; missing in the emission files&#39;</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;     <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, n, cmessage)</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="keywordflow">   END IF</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="keywordflow"> END DO</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="comment">! The switch test_single_emiss can be set to TRUE if for whatever reason</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="comment">! it is intended that there is only one emission field for each tracer.! The code below checks that there is no duplication of names in the final</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="comment">! emissions structure for that particular case.! Note however that the switch will be FALSE by default, because some</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="comment">! chemistry schemes will use several emission fields for most tracers! in the future to account for different emission source sectors.</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160; <span class="keywordflow">IF</span> (test_single_emiss) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;   <span class="keywordflow">DO</span> n = 1, <a class="code" href="namespaceukca__emiss__mod.xhtml#acfd36bb08f27d744c24e10fe9ef3ad60">num_em_flds</a>-1</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;     <span class="keywordflow">IF</span> ( any(<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(n+1:<a class="code" href="namespaceukca__emiss__mod.xhtml#acfd36bb08f27d744c24e10fe9ef3ad60">num_em_flds</a>)%tracer_name ==                      &amp;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;               <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(n)%tracer_name) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;       cmessage = <span class="stringliteral">&#39;Duplicate emission fields for &#39;</span> // <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(n)%tracer_name</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;       <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, n, cmessage)</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="keywordflow">     END IF</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="keywordflow">   END DO</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="keywordflow"> END IF</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160; <span class="comment">! Check that all specified NetCDF files are valid and that dimensions match</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="comment">! (just double-checking, but not strictly needed because similar checks were</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment">! done before when looking for the nr of vertical levels in each emiss field)</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160; <span class="keywordflow">IF</span> ( <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;   <span class="keywordflow">DO</span> n = 1, <a class="code" href="namespaceukca__emiss__mod.xhtml#ab911b454f95ed6db42efe692274c5140">num_cdf_em_flds</a></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;     <span class="comment">! Aborts internally if problems</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;     <span class="keyword">CALL </span>em_fopen (trim(<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(n)%file_name), fileid) </div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;     <span class="keyword">WRITE</span> (<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A,A,A)&#39;</span>)  <span class="stringliteral">&#39;Verifying File: &#39;</span>,                    &amp;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;         trim(<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(n)%file_name), <span class="stringliteral">&#39; for &#39;</span>,                            &amp;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;         trim(<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(n)%var_name)     <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_emiss_init&#39;</span>)</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;     <span class="keyword">CALL </span>em_var_check_dims (global_row_length, global_rows, model_levels, &amp;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                            fileid, <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(n)%var_name, dimen_size)</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;     <span class="keyword">CALL </span>em_fclose(fileid)</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="keywordflow">   END DO</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="keywordflow"> END IF</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160; <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook (<span class="stringliteral">&#39;UKCA_EMISS_INIT&#39;</span>, zhook_out, zhook_handle)</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;<span class="keyword">END SUBROUTINE </span>ukca_emiss_init</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment">!   Initialisation of emissions structure to default values.</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="comment">! Method:</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment">!   Initialise elements of the emissions structure, which has been!   previously allocated with upper bound equal to &#39;num_em_flds&#39;.</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="comment">!   Note that as indicated below some elements cannot be!   allocated yet within this subroutine.</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="keyword">SUBROUTINE </span>ukca_em_struct_init</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="keywordtype">INTEGER</span>                        :: ierror         <span class="comment">! Error code</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="keywordtype">INTEGER (KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0  <span class="comment">! For Dr Hook</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="keywordtype">INTEGER (KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="keywordtype">REAL    (KIND=jprb)</span>            :: zhook_handle</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="comment">! End of header</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook (<span class="stringliteral">&#39;UKCA_EM_STRUC_INIT&#39;</span>, zhook_in, zhook_handle)</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;ierror = 0</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="keywordflow">IF</span> ( .NOT. <span class="keyword">ALLOCATED</span>(<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;  ierror = 1</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EM_STRUCT_INIT&#39;</span>, ierror,                       &amp;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    <span class="stringliteral">&#39;Emissions super array should be allocated before this routine&#39;</span>)</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%file_name   = <span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%var_name    = <span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%tracer_name = <span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%std_name    = <span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%lng_name    = <span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%units       = <span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%update_freq = 0</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%update_type = 0</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%l_update    = .false.</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%three_dim   = .false.</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%base_fact   = 1.0 <span class="comment">! by default do not apply any conversion factor</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%hourly_fact = <span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%daily_fact  = <span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%vert_fact   = <span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%lowest_lev  = 1   <span class="comment">! Initially assume surface emiss (changed later</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%highest_lev = 1   <span class="comment">! in the code for both 3D and high level emiss)</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="comment">! Note that the pointers emissions(:)%values and emissions(:)%diags</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;<span class="comment">! cannot be initialised yet. Before that they need to be allocated! independently for each element of emissions(:). This is done in</span></div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="comment">! ukca_emiss_init after calling this routine.</span></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook (<span class="stringliteral">&#39;UKCA_EM_STRUC_INIT&#39;</span>, zhook_out, zhook_handle)</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="keyword">END SUBROUTINE </span>ukca_em_struct_init</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="comment">! Description:!   Check if it is time to update the values in the emissions structure,!   and do it when needed.</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="comment">! Method:</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="comment">! 1) Check first if full hour. If so go through all emission fields and!    decide to update their values only when the hours from start of the</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="comment">!    run are multiple of their update frequency (in hours).</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="comment">! 2) When it is time to update then take the current model time!    (i_year, i_month, i_day, i_hour, i_minute, i_second) from ctime.h,</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="comment">!    and pass it to GET_EMFILE_REC to get the previous and next register.</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;<span class="comment">!    Then call EM_GET_DATA to get the emission values for those two registers,</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="comment">!    and interpolate the values if none of the registers coincides exactly!    with the model time.</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;<span class="comment">!SUBROUTINE ukca_emiss_update (row_length, rows, model_levels, &amp;</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                              global_row_length, global_rows, &amp;                              timestep_number, timestep,      &amp;</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;                              l_first)</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="comment">! Get model time (i_year, i_month, i_day, i_hour, i_minute, i_second)</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="comment">! from ctime.h. Note that csubmmax.h is needed before, because it</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;<span class="comment">! declares the variable INTERNAL_ID_MAX used by ctime.h.</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="preprocessor">#include &quot;csubmmax.h&quot;</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;ctime.h&quot;</span></div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="comment">! Subroutine arguments</span></div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: row_length       <span class="comment">! model dimensions</span></div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: rows</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: model_levels</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: global_row_length</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: global_rows</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: timestep_number  <span class="comment">! Nr of timesteps since start</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: timestep         <span class="comment">! Timestep length (sec)</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_first          <span class="comment">! True if first call</span></div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span>       :: ihour_last       <span class="comment">! To store the last hour</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;<span class="keywordtype">INTEGER</span>             :: hours_from_st    <span class="comment">! Int hours from start</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="keywordtype">INTEGER</span>             :: fid              <span class="comment">! NetCDF file id</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;<span class="keywordtype">INTEGER</span>             :: ireco(2)      <span class="comment">! NetCDF time record indices: prev &amp; next</span></div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="keywordtype">INTEGER</span>             :: creco(2,6)    <span class="comment">! Time records: 1st dim is for prev &amp; next</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                                     <span class="comment">! 2nd dim is for yr, mon, day, hr, min, sec</span></div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;<span class="keywordtype">REAL</span>                :: ftreco(2)     <span class="comment">! Time of prev/next time records (fract</span></div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                                     <span class="comment">! hours since 0:00 h on 1st Jan)</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="keywordtype">REAL</span>                :: fhournow      <span class="comment">! Current time (fractional hours since</span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;                                     <span class="comment">! 0:00 h on 1st Jan)</span></div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span>  :: max_dims = 5            <span class="comment">! Max nr of dims per var</span></div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;<span class="keywordtype">INTEGER</span>             :: dimsize (max_dims)      <span class="comment">! dimension sizes</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>   :: tmpdat1 (:,:,:)         <span class="comment">! Temporal data arrays</span></div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>   :: tmpdat2 (:,:,:)</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="keywordtype">INTEGER</span>             :: l                       <span class="comment">! Index</span></div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="keywordtype">LOGICAL</span>             :: l_noreco                <span class="comment">! True if record not found (EOF)</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;<span class="keywordtype">INTEGER (KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="keywordtype">INTEGER (KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="keywordtype">REAL    (KIND=jprb)</span>            :: zhook_handle</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;<span class="comment">! End of header</span></div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook (<span class="stringliteral">&#39;UKCA_EMISS_UPDATE&#39;</span>, zhook_in, zhook_handle)</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;<span class="comment">! Reset l_update to false for all emission fields.! Note that this is changed to TRUE below separately for each</span></div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="comment">! NetCDF emission field if it is updated in the current timestep.! UKCA_NEW_EMISS_CTL also updates this field to TRUE for all online</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;<span class="comment">! emissions (e.g. lightning NOx and wetland CH4) at each timestep.</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(:)%l_update = .false.</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;<span class="comment">! Check whether it is time to update emissions, based on</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;<span class="comment">! the maximum update frequency allowed (1 hour) and on the</span></div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="comment">! update frequency for each emission file.</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;<span class="comment">! As update frequency is currently limited to hours we do checks only</span></div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;<span class="comment">! once in each hour. For that we calculate full hours from start! and compare that with the hour during last call</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;hours_from_st = int( timestep * float(timestep_number) /3600. )</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;<span class="keywordflow">IF</span> (l_first .OR. ihour_last /= i_hour) <span class="keywordflow">THEN</span>                </div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;<span class="comment">! Loop over NetCDF emission fields</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;  <span class="keywordflow">DO</span> l = 1, <a class="code" href="namespaceukca__emiss__mod.xhtml#ab911b454f95ed6db42efe692274c5140">num_cdf_em_flds</a></div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;<span class="comment">!   Update only if first time step or if hour from start is !   multiple of update frequency for that emission field</span></div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    <span class="keywordflow">IF</span> ( mod(hours_from_st,<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%update_freq) == 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;      <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%l_update = .true.</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;<span class="comment">!     Debug update times only for first emission field</span></div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;      <span class="keywordflow">IF</span> (l ==1 .AND. printstatus &gt;= prstatus_diag) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;        <span class="keyword">WRITE</span> (<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,6(1x,I4))&#39;</span>)                                 &amp;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;           <span class="stringliteral">&#39;UKCA_EMISS_UPDATE: Update first emission field for &#39;</span>, &amp;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;           i_year, i_month, i_day, i_hour, i_minute, i_second</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_emiss_init&#39;</span>)</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;<span class="comment">!     Open emission file to read an emision field</span></div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;      <span class="keyword">CALL </span>em_fopen(<a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%file_name, fid)</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;     <span class="comment">!     Pass current model time (i_year, ..., i_second) and other data</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="comment">!     to GET_EMFILE_REC in order to get:!     * current hour since basis time: fhournow,</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;<span class="comment">!     * indices of the matching NetCDF records used for</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="comment">!       interpolation: ireco (1:2)</span></div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="comment">!     * yr, mon, day, hr, min, sec for those two records: creco (1:2,1:6)</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;<span class="comment">!     * hour since basis time for those records: ftreco (1:2)</span></div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;      <span class="keyword">CALL </span>get_emfile_rec (row_length, rows, fid, l,                    &amp;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;               <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%update_freq, <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%update_type,      &amp;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;               (/i_year, i_month, i_day, i_hour, i_minute, i_second /), &amp;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;               l_first, ireco, creco, fhournow, ftreco)</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;<span class="comment">!     Later we will call EM_GET_DATA to get the emission values for registers!     ireco(1) &amp; ireco(2), at hours ftreco(1) and ftreco(2), so that we can!     interpolate them to the current model time in hours (i.e. to hournow).</span></div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;<span class="comment">!     Check that matching time records are found           IF ( ANY(ireco(:) == -1) )  THEN            WRITE (umMessage,&#39;(A,6(1x,I4),1x,F15.5)&#39;) &#39;At time:&#39;, i_year, &amp;</span></div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;          i_month, i_day, i_hour, i_minute, i_second, fhournow</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_emiss_init&#39;</span>)</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;        <span class="keyword">CALL </span>em_fclose(fid)</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EMISS_UPDATE&#39;</span>, l,                                  &amp;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;          <span class="stringliteral">&#39;Required time record not in file &#39;</span> // <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%file_name)</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;<span class="comment">!     Go ahead with reading values and interpolations</span></div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;<span class="comment">!     First get dimensions, in particular the vertical levels, so</span></div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;<span class="comment">!     that we can allocate the temp data arrays tmpdat1 &amp; tmpdat2.</span></div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;      <span class="keyword">CALL </span>em_var_check_dims (global_row_length, global_rows, model_levels,   &amp;</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                              fid, <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%var_name, dimsize)</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;      l_noreco = .false.  <span class="comment">! initially assume that records are found</span></div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;      <span class="keywordflow">IF</span> ( ireco(1) == ireco(2) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;<span class="comment">!     No interpolation if exact time match. Get only emiss values!     for register ireco(1).</span></div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;        <span class="keyword">CALL </span>em_get_data (row_length, rows, fid, ireco(1),          &amp;                          <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%var_name,                    &amp;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;                          <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%values (:, :, 1:dimsize(3)), &amp;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;                          l_noreco )</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        <span class="keywordflow">IF</span> (l_noreco)  <span class="keywordflow">THEN</span></div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;          <span class="keyword">CALL </span>em_fclose(fid)</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EMISS_UPDATE&#39;</span>,l,                       &amp;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;            <span class="stringliteral">&#39;Error reading data1: &#39;</span> // <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%var_name)</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;<span class="comment">!       Get two emission values tmpdat1 and tmpdat2, for registers</span></div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<span class="comment">!       ireco(1) and ireco(2), to later interpolate.</span></div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;        <span class="keyword">ALLOCATE</span> ( tmpdat1(row_length, rows, dimsize(3)) )              <span class="keyword">ALLOCATE</span> ( tmpdat2(row_length, rows, dimsize(3)) )</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;<span class="comment">!       Read in data for previous matching time. Stop if record not found.</span></div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;        <span class="keyword">CALL </span>em_get_data (row_length, rows, fid, ireco(1),          &amp;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;                          <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%var_name,                    &amp;</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;                          tmpdat1(:,:,:), l_noreco)</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;        <span class="keywordflow">IF</span> (l_noreco)  <span class="keywordflow">THEN</span></div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;         <span class="keyword">CALL </span>em_fclose(fid)</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;         <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EMISS_UPDATE&#39;</span>,l,                        &amp;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;            <span class="stringliteral">&#39;Error reading data1: &#39;</span> // <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%var_name)</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;<span class="comment">!       Read in data for next matching time.</span></div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;        <span class="keyword">CALL </span>em_get_data (row_length, rows, fid, ireco(2),          &amp;                          <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%var_name,                    &amp;</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;                          tmpdat2(:,:,:), l_noreco)</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;        <span class="keywordflow">IF</span> (l_noreco)  <span class="keywordflow">THEN</span></div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;         <span class="keyword">CALL </span>em_fclose(fid)</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;         <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_EMISS_UPDATE&#39;</span>,l,                        &amp;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;            <span class="stringliteral">&#39;Error reading data2: &#39;</span> // <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%var_name)</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;<span class="comment">! Interpolate using same UM routine as REPLANCA</span></div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;        <span class="keyword">CALL </span>t_int (                                  &amp;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;             tmpdat1(:,:,:), ftreco(1),              &amp;  <span class="comment">! Data1 &amp; time1</span></div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;             tmpdat2(:,:,:), ftreco(2),              &amp;  <span class="comment">! Data2 &amp; time2</span></div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;             <a class="code" href="namespaceukca__emiss__mod.xhtml#acd9e532a1b4f0ecbfdbd2027f3ad0abb" title="Super array of emissions. ">emissions</a>(l)%values(:, :, 1:dimsize(3)), &amp;  <span class="comment">! Data interpolated</span></div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;             fhournow,                                &amp;  <span class="comment">! to current time</span></div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;             row_length*rows*dimsize(3))                 <span class="comment">! Nr of points</span></div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;        <span class="keyword">DEALLOCATE</span>(tmpdat2)</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;        <span class="keyword">DEALLOCATE</span>(tmpdat1)<span class="keywordflow">           END IF</span>      <span class="comment">! Interpolation required?   </span></div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;<span class="comment">!     Close emission file after reading an emision field</span></div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;      <span class="keyword">CALL </span>em_fclose(fid)</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;<span class="keywordflow">    END IF</span>        <span class="comment">! Update time? (dependent on hours_from_st &amp; update_freq)</span></div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;<span class="keywordflow">  END DO</span>          <span class="comment">! loop over emission species</span></div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="keywordflow">END IF</span>            <span class="comment">! ihour_last /= i_hour ?  </span></div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;ihour_last = i_hour  <span class="comment">! store hour just passed</span></div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook (<span class="stringliteral">&#39;UKCA_EMISS_UPDATE&#39;</span>, zhook_out, zhook_handle)</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;<span class="keyword">END SUBROUTINE </span>ukca_emiss_update</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;<span class="comment">! Description:!   Get time records (indices as well as values) from a NetCDF</span></div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;<span class="comment">!   emission file that correspond to the closest times before!   and after the current model_time.</span></div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;<span class="comment">! Method:</span></div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;<span class="comment">! 1) Call time2sec to get current model time in hours and seconds,</span></div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;<span class="comment">!    and then calculate the target time in the model in fractional</span></div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;<span class="comment">!    hours (fhr_now).</span></div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;<span class="comment">! 2) Loop over time records in the file, calling EM_GET_TIME_REC</span></div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;<span class="comment">!    to get time for the previous and next record.</span></div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;<span class="comment">!    When fhr_now is between both records then get the indices and!    current times (both as a date and in hours since base time)</span></div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;<span class="comment">!    of those two records  and exit the loop.</span></div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;<span class="comment">!SUBROUTINE get_emfile_rec ( row_length, rows, fid, nfield, iupd_freq, &amp;</span></div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                            iupd_type, model_time, l_first,           &amp;</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;                            irec, crec, fhr_now, ftrec )</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;<span class="comment">! Subroutine arguments</span></div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: row_length     <span class="comment">! model horiz dimensions</span></div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: rows</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: fid            <span class="comment">! NetCDF file ID (already open)</span></div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: nfield         <span class="comment">! nr of NetCDF emiss field</span></div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: iupd_freq      <span class="comment">! Update frequency (hours)</span></div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: iupd_type      <span class="comment">! iupd_serial=1, iupd_cyclic=2</span></div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: model_time(6)  <span class="comment">! Current model time:                                      ! yr, mon, day, hr, min, sec</span></div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_first</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span>:: irec(2)        <span class="comment">! Time record indices: prev &amp; next</span></div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span>:: crec(2,6)      <span class="comment">! Readable time of records                                      ! 1st dim is for prev &amp; next                                      ! 2nd dim for yr, mn, day, hr, mon, sec</span></div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;<span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(OUT)</span>:: fhr_now        <span class="comment">! Current model time in fract hours</span></div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                                      <span class="comment">! since base time (0:00 h on 1st Jan)</span></div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;<span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(OUT)</span>:: ftrec(2)       <span class="comment">! Prev/next time in hours since</span></div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                                      <span class="comment">! the same base time</span></div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;<span class="keywordtype">INTEGER</span>          :: daynow, secnow    <span class="comment">! current model time in days and secs                                      ! elapsed since 0:00 on 1st Jan</span></div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;<span class="keywordtype">INTEGER</span>          :: tday1, tday2, tsec1, tsec2, fdaynum <span class="comment">! prev/next times</span></div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;<span class="keywordtype">INTEGER</span>          :: exact_match       <span class="comment">! Null if interpol required, and                                      ! 1 or 2 if a NetCDF reg is matched</span></div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;<span class="keywordtype">INTEGER</span>          :: model_yr              <span class="comment">! current model year</span></div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;<span class="keywordtype">INTEGER</span>          :: itime, itime1, itime2 <span class="comment">! time rec counters for NetCDF filesINTEGER          :: ihr                   ! integer hours from ref time</span></div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;<span class="keywordtype">REAL</span>               :: ftime(2)              <span class="comment">! time record value in file</span></div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span>    :: fsec_to_day  = 1./86400. <span class="comment">! Conv factor, seconds to day</span></div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span>    :: fsec_to_hour = 1./3600.  <span class="comment">! Conv factor, seconds to hour</span></div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span>    :: small_number = 0.00001   <span class="comment">! For comparing reals numbers</span></div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;<span class="keywordtype">LOGICAL</span>          :: l_notime         <span class="comment">! True if end-of-file</span></div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;<span class="keywordtype">LOGICAL</span>          :: l_new_cdf_yr     <span class="comment">! True if periodic data and need to read</span></div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;                                     <span class="comment">! Dec of year i and Jan of year i+1</span></div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;<span class="keywordtype">LOGICAL</span>          :: l_new_model_yr   <span class="comment">! True if model year is i+1</span></div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;<span class="keywordtype">INTEGER (KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;<span class="keywordtype">INTEGER (KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;<span class="keywordtype">REAL    (KIND=jprb)</span>            :: zhook_handle</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;<span class="comment">! End of header</span></div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook (<span class="stringliteral">&#39;GET_EMFILE_REC&#39;</span>, zhook_in, zhook_handle)</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;<span class="comment">! Start with negat indices for prev/next time records</span></div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;<span class="comment">! until they are found in the TIME_REC loop</span></div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;irec(:) = -1  </div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;<span class="comment">! Time in NetCDF files is in days since the base time (0:00 h on 1st Jan</span></div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;<span class="comment">! of a given year). The code below gets current model days/secs since</span></div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;<span class="comment">! the same base time so that we can interpolate.! When file is periodic then ignore year. In that case the year is set to</span></div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;<span class="comment">! 0 or 1 depending on the calendar chosen in order to get reasonable! values of daynow in the call to TIME2SEC.</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;model_yr = model_time(1)</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;<span class="keywordflow">IF</span> (iupd_type == iupd_cyclic) <span class="keywordflow">THEN</span>  <span class="comment">! periodic time series</span></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;  <span class="keywordflow">IF</span>  (lcal360) <span class="keywordflow">THEN</span>                <span class="comment">! 360-d calendar</span></div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;    model_yr = 0</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;  <span class="keywordflow">ELSE</span>    model_yr = 1</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;<span class="keyword">  END </span>IFEND if</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;<span class="comment">! Get current time in days and seconds (daynow &amp; secnow)</span></div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;<span class="comment">! elapsed since base time (0:00 h on 1st Jan)</span></div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;<span class="comment">! DEPENDS ON: time2sec</span></div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;<span class="keyword">CALL </span>time2sec ( model_yr,      model_time(2),  &amp;  <span class="comment">! current time: yr,  mon,</span></div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;                model_time(3), model_time(4),  &amp;  <span class="comment">!               day, hour                model_time(5), model_time(6),  &amp;  !               min, sec</span></div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;                0, 0,                          &amp;  <span class="comment">! basis time: 0 h on 1st Jan</span></div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;                daynow, secnow, lcal360 )</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;<span class="comment">! Note that the code below interpolates to the start time of the</span></div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;<span class="comment">! given timestep (integer hours) plus half the update frequency.</span></div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;<span class="comment">! Calculate integer hours from ref time</span></div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;ihr =  daynow * 24 + int(secnow * fsec_to_hour)</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;<span class="comment">! Make target time to which we will interpolate</span></div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;<span class="comment">! equal to mid of update period and convert to real</span></div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;fhr_now = float(ihr) + float(iupd_freq) / 2.</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;<span class="comment">! If extra diags messg then print time info only for first NetCDF field</span></div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;<span class="keywordflow">IF</span> (printstatus &gt;= prstatus_diag .AND. nfield == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;  <span class="keyword">WRITE</span> (<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I4,5(1x,I2),1x,I6,1x,I6,1x,F12.3)&#39;</span>)       &amp;</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;    <span class="stringliteral">&#39;GET_EMFILE_REC: Get emiss for &#39;</span>,                    &amp;</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;     model_time(1:6), daynow, secnow, fhr_now</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_emiss_init&#39;</span>)</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;<span class="comment">! Loop over time records in file until we find two consecutive records</span></div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;<span class="comment">! before and after the model time. Note that in the case of cyclic! emissions we assume 12 NetCDF registers with monthly means and</span></div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;<span class="comment">! some conditions will be needed for particular cases when the model</span></div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;<span class="comment">! time should fall between register 12 (December) and register 1</span></div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;<span class="comment">! (January) of the NetCDF files.</span></div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;itime          = 1         <span class="comment">! Initialise time counter</span></div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;l_notime       = .false.   <span class="comment">! Initially assume that time records found</span></div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;time_rec: <span class="keywordflow">DO</span>    <span class="comment">! loop over time records</span></div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;  <span class="comment">! Initially assume that no need to change year either in  ! the model or in the NetCDF files</span></div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;  l_new_model_yr = .false.</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;  l_new_cdf_yr   = .false.</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;  <span class="comment">! Get previous time (from a register in NetCDF file)  ! in days and secs: tday1, tsec1</span></div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;  <span class="comment">! This first register will usually be itime1 = itime</span></div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;  <span class="comment">! However when emissions are periodic/cyclic and the model time is in  ! early January that would be before the time of the first register in the</span></div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;  <span class="comment">! NetCDF files (mid-January assuming 12 registers with monthly emissions).</span></div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;  <span class="comment">! In that particular case no previous register will be found within this loop</span></div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;  <span class="comment">! and itime will reach 13, which will cause an end-of-file. For this</span></div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;  <span class="comment">! particular case wee need the condition below to indicate that:  ! * 1st NetCDF reg. is in Dec of year i   (itime1=12, L_new_cdf_yr = .FALSE.)</span></div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;  <span class="comment">! * 2nd NetCDF reg. is in Jan of year i+1 (itime2= 1, L_new_cdf_yr = .TRUE.)</span></div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;  <span class="comment">! * model time is in year i+1 (L_new_model_yr = .TRUE.). That will be  !   between both NetCDF regs and interpolations should work.</span></div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;  <span class="keywordflow">IF</span> (iupd_type == iupd_cyclic .AND. itime == 13) <span class="keywordflow">THEN</span>    <span class="comment">! 1st NetCDF register in Dec of year i</span></div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;    itime1     = 12</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;    <span class="keyword">CALL </span>em_get_time_rec (row_length, rows, fid, itime1, iupd_type,     &amp;</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;                          l_first, l_new_cdf_yr, tday1, tsec1, l_notime)</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;    <span class="comment">! 2nd NetCDF register in Jan of year i+1</span></div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;    itime2         = 1</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;    l_new_cdf_yr   = .true.</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;    <span class="comment">! Recalculate the model time &#39;fhr_now&#39; as done before this DO loop    ! but indicating that year is i+1 so that interpolations can be made.</span></div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;    l_new_model_yr = .true.</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;<span class="comment">! DEPENDS ON: time2sec</span></div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;    <span class="keyword">CALL </span>time2sec ( model_yr + 1,  model_time(2),  &amp;</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;                    model_time(3), model_time(4),  &amp;</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;                    model_time(5), model_time(6),  &amp;</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;                    0, 0,                          &amp;</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;                    daynow, secnow, lcal360 )</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;    ihr     = daynow * 24 + int(secnow * fsec_to_hour)</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;    fhr_now = float(ihr)  + float(iupd_freq) / 2.</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;    <span class="keywordflow">IF</span> (printstatus &gt;= prstatus_diag .AND. nfield == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;      <span class="keyword">WRITE</span> (<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I4,5(1x,I2),1x,I6,1x,I6,1x,F12.3,1x,A)&#39;</span>)   &amp;</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;        <span class="stringliteral">&#39;GET_EMFILE_REC: Get emiss for &#39;</span>,                     &amp;</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;        model_time(1:6), daynow, secnow, fhr_now,             &amp;</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;        <span class="stringliteral">&#39;(after shifting model time one year forward)&#39;</span>      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_emiss_init&#39;</span>)</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;    <span class="comment">! Simple case where the max nr of NetCDF registers has not been exceeded</span></div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;    itime1     = itime</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;    <span class="keyword">CALL </span>em_get_time_rec (row_length, rows, fid, itime1, iupd_type,     &amp;</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;                          l_first, l_new_cdf_yr, tday1, tsec1, l_notime)</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;  <span class="comment">! The line below checks that the file has not run out of time records.</span></div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;  <span class="comment">! In the future the code might allow to automatically open the  ! next file using prefix+timestamp</span></div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;  <span class="keywordflow">IF</span> ( l_notime ) <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (<span class="stringliteral">&#39;GET_EMFILE_REC&#39;</span>, itime1,              &amp;</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;      <span class="stringliteral">&#39;Invalid time record 1, End-of-file reached ?&#39;</span>)</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;  <span class="comment">! Get next time in days and secs: tday2, tsec2</span></div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;  <span class="comment">! This second register will usually be itime2 = itime1 + 1.</span></div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;  <span class="comment">! However if emissions are periodic and the first NetCDF register is in  ! December (12) then the second reg to read is in January (1) of the  ! following year. L_new_cdf_yr is set to TRUE to inform EM_GET_TIME_REC</span></div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;  <span class="comment">! that the year should be increased one unit for that second register.</span></div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;  <span class="comment">! We exclude checks for the case when the model year has also changed</span></div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;  <span class="comment">! since that has been dealt with above</span></div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;  <span class="keywordflow">IF</span> (.NOT. l_new_model_yr) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;    <span class="keywordflow">IF</span> (iupd_type == iupd_cyclic .AND. itime1 == 12) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;      itime2       = 1</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;      l_new_cdf_yr = .true.</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;      itime2       = itime1 + 1</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;  <span class="keyword">CALL </span>em_get_time_rec (row_length, rows, fid, itime2, iupd_type,      &amp;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;                        l_first, l_new_cdf_yr, tday2, tsec2, l_notime)</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;  <span class="keywordflow">IF</span> ( l_notime ) <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (<span class="stringliteral">&#39;GET_EMFILE_REC&#39;</span>, itime2,              &amp;</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;      <span class="stringliteral">&#39;Invalid time record 2, End-of-file reached ?&#39;</span>)</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;  <span class="comment">! Convert record times (in days and secs) to fractional hours</span></div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;  <span class="comment">! to compare with fhr_now</span></div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;  ftrec(1) = float(tday1) * 24. + float(tsec1) * fsec_to_hour <span class="comment">! prev record</span></div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;  ftrec(2) = float(tday2) * 24. + float(tsec2) * fsec_to_hour <span class="comment">! next record</span></div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;  <span class="comment">! Check if current time is between two time records    IF ( ftrec(1) &lt;= fhr_now .AND. fhr_now &lt;= ftrec(2) )  THEN</span></div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;    irec(1) = itime1             <span class="comment">! Prev time record for interpolation</span></div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;    irec(2) = itime2             <span class="comment">! Next time record for interpolation</span></div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;    <span class="comment">! Get time yr-mon-day-hr-min-sec and store them in crec (1,1:6) for</span></div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;    <span class="comment">! prev time record (given as tday1-tsec1). Useful for debugging.</span></div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;<span class="comment">! DEPENDS ON: sec2time</span></div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;    <span class="keyword">CALL </span><a class="code" href="sec2time_8f90.xhtml#ac74065211f64970d62c9e83164972f15" title="LL Routine: SEC2TIM0 !&gt;LL. ">sec2time</a> (tday1, tsec1, 0, 0,                                     &amp;</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;         crec(1,1), crec(1,2), crec(1,3), crec(1,4), crec(1,5), crec(1,6), &amp;</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;         fdaynum, lcal360 )</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;    <span class="comment">! Similarly, get time yr-mon-day-hr-min-sec for next time record</span></div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;<span class="comment">! DEPENDS ON: sec2time</span></div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;    <span class="keyword">CALL </span><a class="code" href="sec2time_8f90.xhtml#ac74065211f64970d62c9e83164972f15" title="LL Routine: SEC2TIM0 !&gt;LL. ">sec2time</a> (tday2, tsec2, 0, 0,                                     &amp;</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;         crec(2,1), crec(2,2), crec(2,3), crec(2,4), crec(2,5), crec(2,6), &amp;</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;         fdaynum, lcal360 )</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;    <span class="comment">! Assume that not exact match, i.e. interpolation required</span></div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;    exact_match = 0</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;    <span class="comment">! If exact time match, no interpolation required. Therefore</span></div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;    <span class="comment">! set both recs to same value</span></div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;    <span class="keywordflow">IF</span> ( abs(ftrec(1) - fhr_now) &lt; small_number ) <span class="keywordflow">THEN</span>      irec(2)   = irec(1)       <span class="comment">! record indices</span></div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;      crec(2,:) = crec(1,:)     <span class="comment">! record times: yr, mon, day, hr, min, sec</span></div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;      ftrec(2)   = ftrec(1)       <span class="comment">! hours since base time</span></div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;      exact_match = 1</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;    <span class="keywordflow">IF</span> ( abs(ftrec(2) - fhr_now) &lt; small_number ) <span class="keywordflow">THEN</span>      irec(1)   = irec(2)</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;      crec(1,:) = crec(2,:)</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;      ftrec(1)   = ftrec(2)</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;      exact_match = 2</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;    <span class="comment">! If extra diag mssg then print time info for first NetCDF field</span></div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;    <span class="keywordflow">IF</span> (printstatus &gt;= prstatus_diag .AND. nfield == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;      <span class="keywordflow">SELECT CASE</span>  (exact_match)</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;        <span class="keywordflow">CASE</span> (0)</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;          <span class="keyword">WRITE</span> (<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,X,I5,X,I5,X,F12.3,X,F12.3)&#39;</span>)                   &amp;</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;            <span class="stringliteral">&quot;GET_EMFILE_REC: Time found between these regs. in NetCDF file:&quot;</span>,  &amp;</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;            irec(1), irec(2), ftrec(1), ftrec(2)</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_emiss_init&#39;</span>)</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;        <span class="keywordflow">CASE</span> (1)</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;          <span class="keyword">WRITE</span> (<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,X,I5,X,F12.3)&#39;</span>)                                &amp;</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;            <span class="stringliteral">&quot;GET_EMFILE_REC: Time found for this reg. in NetCDF file:&quot;</span>,        &amp;</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;            irec(1), ftrec(1)</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_emiss_init&#39;</span>)</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;        <span class="keywordflow">CASE</span> (2)</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;          <span class="keyword">WRITE</span> (<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,X,I5,X,F12.3)&#39;</span>)                                &amp;</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;            <span class="stringliteral">&quot;GET_EMFILE_REC: Time found for this reg. in NetCDF file:&quot;</span>,        &amp;</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;            irec(2), ftrec(2)</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_emiss_init&#39;</span>)</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;<span class="keywordflow">      END SELECT</span></div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;    <span class="keywordflow">EXIT</span>  time_rec          <span class="comment">! exit loop over time records                 </span></div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;    itime = itime + 1       <span class="comment">! increment time rec counter =&gt; next rec in file</span></div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;<span class="keywordflow">  END IF</span>                    <span class="comment">! if t1 &lt;= current &lt;= t2</span></div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;<span class="keywordflow">END DO</span>  time_rec            <span class="comment">! loop over time records</span></div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook (<span class="stringliteral">&#39;GET_EMFILE_REC&#39;</span>, zhook_out, zhook_handle)</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;<span class="keywordflow">RETURN</span>       end<span class="keyword"> SUBROUTINE </span>get_emfile_rec</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceukca__emiss__mod.xhtml" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_emiss_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
