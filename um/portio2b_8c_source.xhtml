<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/c_code/portio2b.c Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_3870c6a11f19197dc24c93b76d301a96.xhtml">c_code</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">portio2b.c</div>  </div>
</div><!--header-->
<div class="contents">
<a href="portio2b_8c.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#if defined(C95_2B)</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/******************************COPYRIGHT*******************************/</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/* (C) Crown copyright Met Office. All rights reserved.               */</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">/* For further details please refer to the file COPYRIGHT.txt         */</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">/* which you should have received as part of this distribution.       */</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">/* *****************************COPYRIGHT******************************/</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;time.h&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;errno.h&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="c__fort2c__2b_8h.xhtml">c_fort2c_2b.h</a>&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="c__io_8h.xhtml">c_io.h</a>&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">const</span> int64_t  default_buffering=524288;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">const</span> int64_t  default_timing=0;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">/* depends on: c_io.o */</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* default buffering size - 4MB (expressed in 64-bit words for */</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/*                               consistency with 2A code)     */</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/****************************************************************</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * IO wrappers to new interface                                 *</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> ****************************************************************/</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">/****************************************************************</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment"> * Open                                                         *</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment"> ****************************************************************/</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<a class="code" href="namespaceio.xhtml#ab946b14dae999144008cbe9c82d50a21">file_open</a></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;file_open_</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;FILE_OPEN</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;open_single</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;open_single_</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;OPEN_SINGLE</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;(</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; <a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> * unit,             <span class="comment">/* Fortran unit                         */</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; <span class="keywordtype">char</span>    * <a class="code" href="namespaceoasis__atm__data__mod.xhtml#af84ddabcf5a2f596a6aed7d1908d2a60">name</a>,             <span class="comment">/* File name or environment variable    */</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; <a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> * char_len,         <span class="comment">/* No of chars in file name             */</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; <a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> * intent,           <span class="comment">/* =0 read only,!=0 read and write      */</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; <a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> * environ_var_flag, <span class="comment">/* =0 file name in environment var,     */</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; <a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> * err               <span class="comment">/* =0 file opened,                      */</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                             <span class="comment">/* =1 file failed to open because the </span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">                expected environment not set         */</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                     <span class="comment">/* =&lt;other&gt; file not opened for another </span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">                reason                      */</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; )</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  int64_t mode;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">char</span> *C_name;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordtype">char</span> *fileName;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordtype">char</span> message[<a class="code" href="c__fort2c__2a_8h.xhtml#a96207e4b40450e26909c380a8c14b493">MAX_OUTSTR</a>];</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> * the_unit;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  the_unit=unit;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  *err=0;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="comment">/*c_io_ini</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">   * If the portioInit was not called (usually via ioInit in fortran)</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">   *  then initialise automatically with sane defaults</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="c__io_8h.xhtml#a78eca6da0ebc239b3c7497939b066ed0">c_io_initialised</a>)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="c__io_8h.xhtml#a3d83601943e5e5f712c58208035f23c1">c_io_init</a>(8,300,</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;          default_buffering*<span class="keyword">sizeof</span>(<a class="code" href="c__fort2c__2a_8h.xhtml#a37403417beea25ea13a11ca4bb12659a">um_data_t</a>),</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;          0,0,0,0,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;          default_timing);  </div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;       </div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="comment">/* get the filename */</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  C_name=malloc(*char_len+1);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  strncpy(C_name,<a class="code" href="namespaceoasis__atm__data__mod.xhtml#af84ddabcf5a2f596a6aed7d1908d2a60">name</a>,*char_len);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  C_name[ *char_len ] = <span class="charliteral">&#39;\0&#39;</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  sscanf( C_name, <span class="stringliteral">&quot;%s&quot;</span>, C_name );</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  </div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keywordflow">if</span> ( *environ_var_flag == 0 )  <span class="comment">/* File name held in environ var */</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    {  </div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      fileName = getenv( C_name );</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordflow">if</span> ( fileName == NULL ) {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    snprintf(message,<a class="code" href="c__fort2c__2a_8h.xhtml#a96207e4b40450e26909c380a8c14b493">MAX_OUTSTR</a>,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;         <span class="stringliteral">&quot;OPEN:  WARNING: Environment variable %s not set&quot;</span>,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;         C_name);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="c__fort2c__2a_8h.xhtml#a4e5eb0357202094964fd7f4fe5ad9eab">CALL_MESSAGE_PRINT</a>(message);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    *err=1;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    free (C_name);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordflow">else</span>                           <span class="comment">/* get file name from argmt C_name */</span>    </div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    fileName = C_name;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  mode=<a class="code" href="c__io_8h.xhtml#aa5c4d22a4bdc1b3b3b6b3b150f75d345ae33d4c8af430bebd96e3a5ff0b5dbe5d">readwrite</a>;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordflow">if</span> (*intent==0)mode=<a class="code" href="c__io_8h.xhtml#aa5c4d22a4bdc1b3b3b6b3b150f75d345a2699d203153059eabe7399fecff12930">readonly</a>;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <a class="code" href="c__io_8h.xhtml#a8a8d53d35cb0a483e4028a17aebdf5c7">c_io_open</a>(*unit,fileName,strlen(fileName),mode);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  free (C_name);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">/****************************************************************</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"> * Close                                                        *</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment"> ****************************************************************/</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<a class="code" href="namespaceio.xhtml#ade07b9db8d4954fd605a7212d5f46e2a">file_close</a></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;file_close_</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;FILE_CLOSE</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;close_single</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;close_single_</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;CLOSE_SINGLE</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;(</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; <a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> * unit,             <span class="comment">/* Fortran unit                         */</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; <span class="keywordtype">char</span>    * <a class="code" href="namespaceoasis__atm__data__mod.xhtml#af84ddabcf5a2f596a6aed7d1908d2a60">name</a>,             <span class="comment">/* File name or environment variable    */</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; <a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> * char_len,         <span class="comment">/* No of chars in file name             */</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; <a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> * environ_var_flag, <span class="comment">/* =0 file name in environment var,     */</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; <a class="code" href="eg__hash_8c.xhtml#a3b6ee100a473e8866bcea6d1fc4041d9">integer</a> * <span class="keyword">delete</span>,           <span class="comment">/* =0 do not delete file,!=0 delete file*/</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; integer * err               <span class="comment">/* =0 file close ok,                    */</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                             <span class="comment">/*    or problems                       */</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; )</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;{</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordtype">char</span> *C_name;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordtype">char</span> *fileName;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordtype">char</span> message[<a class="code" href="c__fort2c__2a_8h.xhtml#a96207e4b40450e26909c380a8c14b493">MAX_OUTSTR</a>];</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  integer * the_unit;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  *err=0;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  the_unit=unit;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="comment">/* convert file name to C format */</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  C_name = malloc(*char_len + 1);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  strncpy(C_name,name,*char_len);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  C_name[*char_len] = <span class="charliteral">&#39;\0&#39;</span>;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordflow">for</span> (i=0; i&lt;*char_len; i++){    </div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">if</span> (C_name[i] == <span class="charliteral">&#39; &#39;</span>){</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      C_name[<a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>] = <span class="charliteral">&#39;\0&#39;</span>;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="keywordflow">break</span>;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  }</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  </div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordflow">if</span>(*environ_var_flag == 0){ </div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    fileName = getenv( C_name );</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">if</span> ( fileName == NULL ) {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      snprintf(message,<a class="code" href="c__fort2c__2a_8h.xhtml#a96207e4b40450e26909c380a8c14b493">MAX_OUTSTR</a>,</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;           <span class="stringliteral">&quot;CLOSE: WARNING: Environment variable %s not set&quot;</span>,</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;           C_name);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <a class="code" href="c__fort2c__2a_8h.xhtml#a4e5eb0357202094964fd7f4fe5ad9eab">CALL_MESSAGE_PRINT</a>(message);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      *err=1;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      free( C_name );</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="keywordflow">return</span>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    }    </div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordflow">else</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    fileName=C_name;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  </div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="c__io_8h.xhtml#a7feb1d5091bc47febcb6cc4e14dce098">c_io_close</a>(*unit)!=<a class="code" href="c__io_8h.xhtml#a8444a95c4b21bb1662fbc6c8335a383c">c_io_success</a>)*err=1;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <span class="comment">/* delete file */</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keywordflow">if</span>(*<span class="keyword">delete</span> != 0)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="c__io_8h.xhtml#aec222adeecf97f2db876bc5b938e7110">c_io_delete</a>(fileName);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  free( C_name );</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;}</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">/****************************************************************</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment"> * buffin (and type varients)                                   *</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment"> ****************************************************************/</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;buffin</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;buffin_</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;BUFFIN</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;buffin_single</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;buffin_single_</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;BUFFIN_SINGLE</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;(integer * unit,    <span class="comment">/* Fortran unit                         */</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; <span class="keywordtype">void</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>,      <span class="comment">/* Array into which data is read        */</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; integer * maxlen,  <span class="comment">/* Number of real numbers to be read    */</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; integer * <a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a>,  <span class="comment">/* Number of real numbers actualy read  */</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; <a class="code" href="c__fort2c__2a_8h.xhtml#a031f8951175b43076c2084a6c2173410">real</a> * <a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>      <span class="comment">/* Return code                          */</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; )</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;{  </div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  *length=<a class="code" href="c__io_8h.xhtml#aa6390ade9a6d27c63a7deb6ee0c13433">c_io_in</a>(*unit,array,* maxlen,<span class="keyword">sizeof</span>(integer));</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  *<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=-1.0;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keywordflow">if</span> (*length!=*maxlen)*<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=1.0;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;}</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;buffin8</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;buffin8_</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;BUFFIN8</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;buffin8_single</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;buffin8_single_</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;BUFFIN8_SINGLE</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;(integer * unit,    <span class="comment">/* Fortran unit                         */</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; <span class="keywordtype">void</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>,      <span class="comment">/* Array into which data is read        */</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; integer * maxlen,  <span class="comment">/* Number of real numbers to be read    */</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; integer * <a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a>,  <span class="comment">/* Number of real numbers actualy read  */</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; <a class="code" href="c__fort2c__2a_8h.xhtml#a031f8951175b43076c2084a6c2173410">real</a> * <a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>      <span class="comment">/* Return code                          */</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; )</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;{  </div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  *length=<a class="code" href="c__io_8h.xhtml#aa6390ade9a6d27c63a7deb6ee0c13433">c_io_in</a>(*unit,array,* maxlen,1);</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  *<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=-1.0;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="keywordflow">if</span> (*length!=*maxlen)*<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=1.0;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;}</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;buffin16</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;buffin16_</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;BUFFIN16</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;buffin16_single</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;buffin16_single_</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;BUFFIN16_SINGLE</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;(integer * unit,    <span class="comment">/* Fortran unit                         */</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; <span class="keywordtype">void</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>,      <span class="comment">/* Array into which data is read        */</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160; integer * maxlen,  <span class="comment">/* Number of real numbers to be read    */</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; integer * <a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a>,  <span class="comment">/* Number of real numbers actualy read  */</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; <a class="code" href="c__fort2c__2a_8h.xhtml#a031f8951175b43076c2084a6c2173410">real</a> * <a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>      <span class="comment">/* Return code                          */</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; )</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;{  </div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  *length=<a class="code" href="c__io_8h.xhtml#aa6390ade9a6d27c63a7deb6ee0c13433">c_io_in</a>(*unit,array,* maxlen,2);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  *<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=-1.0;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  <span class="keywordflow">if</span> (*length!=*maxlen)*<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=1.0;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;}</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;buffin32</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;buffin32_</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;BUFFIN32</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;buffin32_single</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;buffin32_single_</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;BUFFIN32_SINGLE</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;(integer * unit,    <span class="comment">/* Fortran unit                         */</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160; <span class="keywordtype">void</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>,      <span class="comment">/* Array into which data is read        */</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160; integer * maxlen,  <span class="comment">/* Number of real numbers to be read    */</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160; integer * <a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a>,  <span class="comment">/* Number of real numbers actualy read  */</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160; <a class="code" href="c__fort2c__2a_8h.xhtml#a031f8951175b43076c2084a6c2173410">real</a> * <a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>      <span class="comment">/* Return code                          */</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; )</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;{  </div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  *length=<a class="code" href="c__io_8h.xhtml#aa6390ade9a6d27c63a7deb6ee0c13433">c_io_in</a>(*unit,array,* maxlen,4);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  *<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=-1.0;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  <span class="keywordflow">if</span> (*length!=*maxlen)*<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=1.0;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;}</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;buffin64</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;buffin64_</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;BUFFIN64</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;buffin64_single</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;buffin64_single_</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;BUFFIN64_SINGLE</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;(integer * unit,    <span class="comment">/* Fortran unit                         */</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160; <span class="keywordtype">void</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>,      <span class="comment">/* Array into which data is read        */</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160; integer * maxlen,  <span class="comment">/* Number of real numbers to be read    */</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160; integer * <a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a>,  <span class="comment">/* Number of real numbers actualy read  */</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160; <a class="code" href="c__fort2c__2a_8h.xhtml#a031f8951175b43076c2084a6c2173410">real</a> * <a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>      <span class="comment">/* Return code                          */</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; )</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;{  </div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;  *length=<a class="code" href="c__io_8h.xhtml#aa6390ade9a6d27c63a7deb6ee0c13433">c_io_in</a>(*unit,array,* maxlen,8);</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  *<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=-1.0;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;  <span class="keywordflow">if</span> (*length!=*maxlen)*<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=1.0;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;}</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">/****************************************************************</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment"> * buffout (and type varients)                                  *</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment"> ****************************************************************/</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;buffout</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;buffout_</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;BUFFOUT</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;buffout_single</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;buffout_single_</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;BUFFOUT_SINGLE</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;(integer * unit,    <span class="comment">/* Fortran unit                           */</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160; <span class="keywordtype">void</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>,      <span class="comment">/* Array from which data is written       */</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160; integer * maxlen,  <span class="comment">/* Number of real numbers to write        */</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160; integer * <a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a>,  <span class="comment">/* Number of real numbers actualy written */</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160; <a class="code" href="c__fort2c__2a_8h.xhtml#a031f8951175b43076c2084a6c2173410">real</a> * <a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>      <span class="comment">/* Return code                            */</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160; )</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;{</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;  *length=<a class="code" href="c__io_8h.xhtml#afb34db849406bc6cd72919a80611e09d">c_io_out</a>(*unit,array,*maxlen,<span class="keyword">sizeof</span>(integer));</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  *<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=-1.0;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  <span class="keywordflow">if</span> (*length!=*maxlen)*<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=1.0;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;}</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;buffou8</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;buffou8_</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;BUFFOU8</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;buffou8_single</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;buffou8_single_</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;BUFFOU8_SINGLE</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;(integer * unit,    <span class="comment">/* Fortran unit                           */</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160; <span class="keywordtype">void</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>,      <span class="comment">/* Array from which data is written       */</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160; integer * maxlen,  <span class="comment">/* Number of real numbers to write        */</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160; integer * <a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a>,  <span class="comment">/* Number of real numbers actualy written */</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160; <a class="code" href="c__fort2c__2a_8h.xhtml#a031f8951175b43076c2084a6c2173410">real</a> * <a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>      <span class="comment">/* Return code                            */</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160; )</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;{</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;  *length=<a class="code" href="c__io_8h.xhtml#afb34db849406bc6cd72919a80611e09d">c_io_out</a>(*unit,array,* maxlen,1);</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  *<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=-1.0;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  <span class="keywordflow">if</span> (*length!=*maxlen)*<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=1.0;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;}</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;buffo32</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;buffo32_</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;BUFFO32</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;buffo32_single</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;buffo32_single_</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;BUFFO32_SINGLE</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;(integer * unit,    <span class="comment">/* Fortran unit                           */</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160; <span class="keywordtype">void</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>,      <span class="comment">/* Array from which data is written       */</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160; integer * maxlen,  <span class="comment">/* Number of real numbers to write        */</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160; integer * <a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a>,  <span class="comment">/* Number of real numbers actualy written */</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160; <a class="code" href="c__fort2c__2a_8h.xhtml#a031f8951175b43076c2084a6c2173410">real</a> * <a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>      <span class="comment">/* Return code                            */</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160; )</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;{</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;  *length=<a class="code" href="c__io_8h.xhtml#afb34db849406bc6cd72919a80611e09d">c_io_out</a>(*unit,array,* maxlen,4);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;  *<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=-1.0;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;  <span class="keywordflow">if</span> (*length!=*maxlen)*<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=1.0;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;}</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;buffout64</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;buffout64_</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;BUFFOUT64</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;buffout64_single</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;buffout64_single_</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;BUFFOUT64_SINGLE</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;(integer * unit,    <span class="comment">/* Fortran unit                           */</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160; <span class="keywordtype">void</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>,      <span class="comment">/* Array from which data is written       */</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160; integer * maxlen,  <span class="comment">/* Number of real numbers to write        */</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160; integer * <a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a>,  <span class="comment">/* Number of real numbers actualy written */</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160; <a class="code" href="c__fort2c__2a_8h.xhtml#a031f8951175b43076c2084a6c2173410">real</a> * <a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>      <span class="comment">/* Return code                            */</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160; )</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;{</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;  *length=<a class="code" href="c__io_8h.xhtml#afb34db849406bc6cd72919a80611e09d">c_io_out</a>(*unit,array,* maxlen,8);</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;  *<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=-1.0;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;  <span class="keywordflow">if</span> (*length!=*maxlen)*<a class="code" href="namespaceid__arr__netcdf.xhtml#acfb5399775bed0194a730c8c49db86a6" title="Declares ids/arrays used when reading in netcdf files into SCM. ">status</a>=1.0;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;}</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment">/****************************************************************</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="comment"> * setpos (and type varients)                                   *</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="comment"> ****************************************************************/</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;setpos_</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;SETPOS</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;setpos_single</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;setpos_single_</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;SETPOS_SINGLE</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;(integer * unit,          <span class="comment">/* Fortran unit                         */</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160; integer * word_address,  <span class="comment">/* Number of words into file            */</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160; integer *err             <span class="comment">/* Error checking, err = 0 no errors,</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment">                 err = 1 errors                       */</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160; )</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;{ </div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  <a class="code" href="c__io_8h.xhtml#ae703d2eb2279b3f1b8ada9789214324f">c_io_setpos</a>(*unit,*word_address,<span class="keyword">sizeof</span>(integer));</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;  *err=0;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;}</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<a class="code" href="namespaceio.xhtml#a721ac51d746320ffbb2626d59748ff4a">setpos8</a></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;setpos8_</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;SETPOS8</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;setpos8_single</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;setpos8_single_</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;SETPOS8_SINGLE</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;(integer * unit,          <span class="comment">/* Fortran unit                         */</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160; integer * word_address,  <span class="comment">/* Number of words into file            */</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160; integer * err            <span class="comment">/* Error checking, err = 0 no errors,</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="comment">                 err = 1 errors */</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160; )</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;{ </div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;  <a class="code" href="c__io_8h.xhtml#ae703d2eb2279b3f1b8ada9789214324f">c_io_setpos</a>(*unit,*word_address,1);</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;  *err=0;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;}</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="preprocessor">#if defined(VAROPSVER)</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<a class="code" href="namespaceio.xhtml#a52865072dfc7267acc99b0f14b97abb2">setpos32</a></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;setpos32_</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;SETPOS32</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;setpos32_single</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;setpos32_single_</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;SETPOS32_SINGLE</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;(integer * unit,          <span class="comment">/* Fortran unit                         */</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160; integer * word_address,  <span class="comment">/* Number of words into file            */</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160; integer *err             <span class="comment">/* Error checking, err = 0 no errors,</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="comment">                 err = 1 errors                       */</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160; )</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;{ </div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;  <a class="code" href="c__io_8h.xhtml#ae703d2eb2279b3f1b8ada9789214324f">c_io_setpos</a>(*unit,*word_address,4);</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;  *err=0;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;}</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="comment">/****************************************************************</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="comment"> * getpos                                                       *</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="comment"> ****************************************************************/</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;getpos</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;getpos_</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;GETPOS</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;(integer * unit,          <span class="comment">/* Fortran unit                         */</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160; integer * word_address   <span class="comment">/* Number of words into file            */</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160; )</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;{ </div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;  (*word_address)=<a class="code" href="c__io_8h.xhtml#a9332d2edb3fd897df61bb85ee183831a">c_io_getpos</a>(*unit,<span class="keyword">sizeof</span>(integer)); </div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;}</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;getpos8</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;getpos8_</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;GETPOS8</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;(integer * unit,          <span class="comment">/* Fortran unit                         */</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160; integer * word_address   <span class="comment">/* Number of words into file            */</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160; )</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;{ </div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;  (*word_address)=<a class="code" href="c__io_8h.xhtml#a9332d2edb3fd897df61bb85ee183831a">c_io_getpos</a>(*unit,1); </div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;}</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;sync_single</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;sync_single_</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;SYNC_SINGLE</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;(integer * unit,integer * <a class="code" href="namespaceboundary__layer__mod.xhtml#a3c2da9c3eb23b85d958d24fa854ae444">icode</a>)</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;{</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;  <a class="code" href="c__io_8h.xhtml#afe7a8f31f48ab5b2b693661778eee293">c_io_sync</a>(*unit);</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;  *<a class="code" href="namespaceboundary__layer__mod.xhtml#a3c2da9c3eb23b85d958d24fa854ae444">icode</a>=0;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;}</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="comment">/****************************************************************/</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="comment">/* The following function determines the size in bytes of the   */</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="comment">/* file attached to a given unit.                               */</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="comment">/****************************************************************/</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;getextent</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;getextent_</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;GETEXTENT</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;(integer * unit,integer * extent,integer * <a class="code" href="namespaceboundary__layer__mod.xhtml#a3c2da9c3eb23b85d958d24fa854ae444">icode</a>)</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;{</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;  *<a class="code" href="namespaceboundary__layer__mod.xhtml#a3c2da9c3eb23b85d958d24fa854ae444">icode</a>=0;</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;  *extent=<a class="code" href="c__io_8h.xhtml#a9b3168b2b998041e87f9a3b366dcff24">c_io_getExtent</a>(*unit);</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;}</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;set_printstatus</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;set_printstatus_</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;SET_PRINTSTATUS</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;(integer * printstatus_f) <span class="comment">/* IN: fortran equivalent */</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;{</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;  <a class="code" href="c__io_8h.xhtml#abcc1167ba91f63427944af4d34e2ce9f">c_io_setOutPutLevel</a>(*printstatus_f);</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;}</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;<span class="keywordtype">void</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;portioshutdown</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;portioshutdown_</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;PORTIOSHUTDOWN</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;()</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;{</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;  <a class="code" href="c__io_8h.xhtml#ab283cd8d08eed83a82a3a96f317fe7b5">c_io_fini</a>();</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;}</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="comment">/****************************************************************/</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;<span class="comment">/* The following function is to be called from Fortran.         */</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="comment">/* It allows the user to override the size of the I/O buffer    */</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;<span class="comment">/* as passed to c_io_init                                       */</span></div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="comment">/****************************************************************/</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="keywordtype">void</span> portioinit</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;<span class="keywordtype">void</span> portioinit_</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;  <span class="keywordtype">void</span> PORTIOINIT</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;(integer *wb_size,</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160; integer *rb_size,</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160; integer *rb_count,</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160; integer *rb_update,</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160; integer *rb_prefetch,</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160; integer *<a class="code" href="namespaceio__configuration__mod.xhtml#a54d150db59ec5e4dbfe37ba2975530e9">io_timing</a>)</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;{</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;  <a class="code" href="c__io_8h.xhtml#a3d83601943e5e5f712c58208035f23c1">c_io_init</a>(</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;        (int64_t)8,</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;        (int64_t)300,</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;        (int64_t)(*wb_size*<span class="keyword">sizeof</span>(<a class="code" href="c__fort2c__2a_8h.xhtml#a37403417beea25ea13a11ca4bb12659a">um_data_t</a>)),</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;        (int64_t)(*rb_size*<span class="keyword">sizeof</span>(<a class="code" href="c__fort2c__2a_8h.xhtml#a37403417beea25ea13a11ca4bb12659a">um_data_t</a>)),</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        (int64_t)*rb_count,</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        (int64_t)*rb_update,</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;        (int64_t)*rb_prefetch,</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;        (int64_t)*<a class="code" href="namespaceio__configuration__mod.xhtml#a54d150db59ec5e4dbfe37ba2975530e9">io_timing</a>); </div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;}</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;<span class="keywordtype">void</span> portioaddhelper</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;<span class="keywordtype">void</span> portioaddhelper_</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;  <span class="keywordtype">void</span> PORTIOADDHELPER</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;(integer * role)</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;{</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;  <a class="code" href="c__io_8h.xhtml#a4f71783d9e0af7aaef71c79a778da0b4">c_io_attachHelper</a>(*role);</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;}</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="preprocessor">#if defined(C_LOW)</span></div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="keywordtype">void</span> portiodettachallhelpers</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="preprocessor">#elif defined(C_LOW_U)</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="keywordtype">void</span> portiodettachallhelpers_</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;  <span class="keywordtype">void</span> PORTIODETTACHALLHELPERS</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;()</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;{</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;  <a class="code" href="c__io_8h.xhtml#a6535d5fe7c4c36ee982607a7daced29b">c_io_dettachAllHelpers</a>();</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;}</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="preprocessor">#endif</span></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
