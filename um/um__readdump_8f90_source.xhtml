<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/dump_io/um_readdump.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_dc377c3c325b720b1e9a3b21c5b1edf6.xhtml">dump_io</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">um_readdump.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="um__readdump_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#if !defined(SCMA)</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="um__readdump_8f90.xhtml#a1cd34d50f40d6c5161e8efaf6a716404" title="SUBROUTINE UM_READDUMP. ">um_readdump</a>(nftin,fixhd,len_fixhd                      &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; ,inthd,len_inthd                                                 &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; ,realhd,len_realhd                                               &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; ,levdepc,len1_levdepc,len2_levdepc                               &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; ,rowdepc,len1_rowdepc,len2_rowdepc                               &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; ,coldepc,len1_coldepc,len2_coldepc                               &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; ,flddepc,len1_flddepc,len2_flddepc                               &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; ,extcnst,len_extcnst                                             &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; ,dumphist,len_dumphist                                           &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; ,cfi1,len_cfi1                                                   &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; ,cfi2,len_cfi2                                                   &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; ,cfi3,len_cfi3                                                   &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; ,lookup,len1_lookup,len2_lookup                                  &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; ,mpp_lookup,mpp_len1_lookup                                      &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; ,submodel_id,n_objs_d1,d1_addr                                   &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; ,len_data,d1                                                     &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; ,read_header                                                     &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  )</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="um__readdump_8f90.xhtml#a1cd34d50f40d6c5161e8efaf6a716404">   31</a></span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a>    use um_parvars</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacedecomp__db.xhtml" title="This file belongs in section: MPP. ">decomp_db</a></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; <span class="keywordtype">INTEGER</span>                                                          &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  nftin                                                           &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                  <span class="comment">!IN Unit number of dump</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;, len_fixhd                                                       &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                  <span class="comment">!IN Length of fixed length header</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;, len_inthd                                                       &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                  <span class="comment">!IN Length of integer header</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;, len_realhd                                                      &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                  <span class="comment">!IN Length of real header</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;, len1_levdepc                                                    &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                  <span class="comment">!IN 1st dim of level dep consts</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;, len2_levdepc                                                    &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                  <span class="comment">!IN 2nd dim of level dep consts</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;, len1_rowdepc                                                    &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                  <span class="comment">!IN 1st dim of row dep consts</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;, len2_rowdepc                                                    &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                  <span class="comment">!IN 2nd dim of row dep consts</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;, len1_coldepc                                                    &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                  <span class="comment">!IN 1st dim of column dep consts</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;, len2_coldepc                                                    &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                  <span class="comment">!IN 2nd dim of column dep consts</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;, len1_flddepc                                                    &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                  <span class="comment">!IN 1st dim of field dep consts</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;, len2_flddepc                                                    &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                  <span class="comment">!IN 2nd dim of field dep consts</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;, len_extcnst                                                     &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                  <span class="comment">!IN Length of extra constants</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;, len_dumphist                                                    &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                  <span class="comment">!IN Length of history block</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;, len_cfi1                                                        &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                  <span class="comment">!IN Length of comp field index 1</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;, len_cfi2                                                        &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                  <span class="comment">!IN Length of comp field index 2</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;, len_cfi3                                                        &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                  <span class="comment">!IN Length of comp field index 3</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;, len1_lookup                                                     &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                  <span class="comment">!IN 1st dim of lookup</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;, len2_lookup                                                     &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                  <span class="comment">!IN 2nd dim of lookup</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;, mpp_len1_lookup                                                 &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                  <span class="comment">!IN 1st dim of MPP lookup</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;, submodel_id                                                     &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                  <span class="comment">!IN submodel of dump</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;, n_objs_d1                                                       &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                  <span class="comment">!IN number of objects (3D fields) in D1</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;, len_data        <span class="comment">!IN length of model data</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  fixhd(len_fixhd)                                                &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                     <span class="comment">!IN Fixed length header</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;, inthd(len_inthd)                                                &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                     <span class="comment">!IN Integer header</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;, lookup(len1_lookup,len2_lookup)                                 &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                     <span class="comment">!IN PP lookup tables</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;, cfi1(len_cfi1+1)                                                &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                     <span class="comment">!IN Compressed field index no 1</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;, cfi2(len_cfi2+1)                                                &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                     <span class="comment">!IN Compressed field index no 2</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;, cfi3(len_cfi3+1)                                                &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                     <span class="comment">!IN Compressed field index no 3</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;, mpp_lookup(mpp_len1_lookup,len2_lookup)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                     <span class="comment">!OUT Local processor lookup</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  realhd(len_realhd)                                              &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                     <span class="comment">!IN Real header</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;, levdepc(1+len1_levdepc*len2_levdepc)                            &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                       <span class="comment">!IN Lev dep consts</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;, rowdepc(1+len1_rowdepc*len2_rowdepc)                            &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                       <span class="comment">!IN Row dep consts</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;, coldepc(1+len1_coldepc*len2_coldepc)                            &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                       <span class="comment">!IN Col dep consts</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;, flddepc(1+len1_flddepc*len2_flddepc)                            &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                       <span class="comment">!IN Field dep consts</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;, extcnst(len_extcnst+1)                                          &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                           <span class="comment">!IN Extra constants</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;, dumphist(len_dumphist+1)                                        &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                           <span class="comment">!IN History block</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;, d1(len_data)       <span class="comment">!OUT Local subdomain of dump</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordtype">LOGICAL</span>                                                           &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; read_header         <span class="comment">!IN  True if header is to be read in</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">! Parameters required for dimensioning the D1_ADDR array</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">#include &quot;d1_addr.h&quot;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  d1_addr(d1_list_len,n_objs_d1)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                     <span class="comment">! IN D1 addressing info.</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">! Include files/common blocks/parameters</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  start_block                                                     &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <span class="comment">! first word of field data in dump (unused)</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;, object_index                                                    &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                <span class="comment">! pointer to entry in D1_ADDR</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;, level                                                           &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                <span class="comment">! level number of multi-level field</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;, d1_item_code                                                    &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="comment">! sec/item in d1_addr converted into single code</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;, number_of_fields                                                &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                <span class="comment">! total number of fields to read in</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;, field_start                                                     &amp;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                <span class="comment">! start address of a field in the file</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;, data_size                                                       &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                <span class="comment">! number of words of data on disk for a field</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;, data_read_size                                                  &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                <span class="comment">! total number of words to read for a field</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;, data_full_size                                                  &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                <span class="comment">! total number of words after any unpacking</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;, len_io                                                          &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                <span class="comment">! number of words of data successfully read</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;, <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>                                                               &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                <span class="comment">! loop counter over fields</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;, orig_decomp                                                     &amp;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <span class="comment">! current decomposition on entry</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;, address                                                         &amp;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                <span class="comment">! start address of field in D1</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;, local_len     <span class="comment">! number of words of data put into D1 on this</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <span class="comment">! processor</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordtype">LOGICAL</span>                                                           &amp;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  packed_field  <span class="comment">! TRUE if a field has been packed to 32 bits</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">! Error reporting</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordtype">INTEGER</span>       icode       <span class="comment">! =0 normal exit; &gt;0 error exit</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keywordtype">CHARACTER(LEN=256)</span> cmessage    <span class="comment">! Error message</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keywordtype">CHARACTER(LEN=*)</span> routinename</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<a class="code" href="namespaceukca__radaer__struct__mod.xhtml#a7b11899c3ce190bb3d00d3a633af780e">parameter</a>(   routinename=<span class="stringliteral">&#39;UM_READDUMP&#39;</span>)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UM_READDUMP&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;icode=0</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;cmessage=<span class="stringliteral">&#39;&#39;</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordflow">IF</span> (mype  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(&#39;</span><span class="stringliteral">&#39; READING UNIFIED MODEL DUMP ON UNIT&#39;</span><span class="stringliteral">&#39;,I3)&#39;</span>)nftin</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(&#39;</span><span class="stringliteral">&#39; #####################################&#39;</span><span class="stringliteral">&#39;)&#39;</span>)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">! Change to the relevant decomposition type for this dump</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;orig_decomp=current_decomp_type</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keywordflow">IF</span> (submodel_id  ==  <a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keywordflow">IF</span> (current_decomp_type  /=  decomp_standard_atmos)             &amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keyword">CALL </span>change_decomposition(decomp_standard_atmos,icode)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keywordflow">ELSE</span>  <span class="comment">! unsupported decomposition type</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)                                                      &amp;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="stringliteral">&#39;UM_READDUMP : Could not change to decomposition required &#39;</span>,  &amp;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="stringliteral">&#39;for submodel type &#39;</span>,submodel_id</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  icode=1</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  cmessage=<span class="stringliteral">&#39;Unsupported submodel for MPP code&#39;</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  icode=2</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;UM_READDUMP : Error - Could not set decomposition &#39;</span>,&amp;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;             <span class="stringliteral">&#39;for selected submodel.&#39;</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  cmessage=<span class="stringliteral">&#39;Unsupported decomposition selected for MPP code&#39;</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">! Read in the header records, and do a consistency check</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keywordflow">IF</span> (read_header) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">! DEPENDS ON: readhead</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <span class="keyword">CALL </span><a class="code" href="readhead_8f90.xhtml#af37bf84978a2c56e2bc7765318ca005f" title="SUBROUTINE READHEAD. ">readhead</a>(nftin,fixhd,len_fixhd,                            &amp;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                inthd,len_inthd,                                  &amp;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                realhd,len_realhd,                                &amp;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                levdepc,len1_levdepc,len2_levdepc,                &amp;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                rowdepc,len1_rowdepc,len2_rowdepc,                &amp;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                coldepc,len1_coldepc,len2_coldepc,                &amp;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                flddepc,len1_flddepc,len2_flddepc,                &amp;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                extcnst,len_extcnst,                              &amp;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                dumphist,len_dumphist,                            &amp;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                cfi1,len_cfi1,                                    &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                cfi2,len_cfi2,                                    &amp;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                cfi3,len_cfi3,                                    &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                lookup,len1_lookup,len2_lookup,                   &amp;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                len_data,                                         &amp;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                start_block,icode,cmessage)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;UM_READDUMP : Error reading dump header &#39;</span>,        &amp;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;               <span class="stringliteral">&#39;on unit &#39;</span>,nftin</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Return code from READHEAD was &#39;</span>,icode,            &amp;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;               <span class="stringliteral">&#39; and error message was &#39;</span>,cmessage</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    icode=3</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    cmessage=<span class="stringliteral">&#39;Error reading dump header&#39;</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keywordflow">END IF</span>  <span class="comment">! IF (READ_HEADER)</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keywordflow">IF</span> (fixhd(160)  &gt;   0) <span class="keywordflow">THEN</span> <span class="comment">! If there is data to read</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">! Loop over fields and read into D1</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  number_of_fields=fixhd(152)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  address=1</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  object_index=1</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  level=1</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  local_len=0</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=1,number_of_fields  <span class="comment">! loop over fields to read in</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="comment">! Use previous value of local_len to increment address</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    address = address+local_len</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="comment">! Reset local_len</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    local_len = 0</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    mpp_lookup(<a class="code" href="namespacelookup__addresses.xhtml#a85cc3fee89ebba11441735210c046fa1">p_lblrec</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=0</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    mpp_lookup(<a class="code" href="namespacelookup__addresses.xhtml#a6d09aec63ae9307dff50019de5a2b091">p_naddr</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=address</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordflow">IF</span> (lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  &gt;   0) <span class="keywordflow">THEN</span> <span class="comment">! If there&#39;s data in</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                                      <span class="comment">! the field</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">! Check that DATA_TYPE is valid no: +/-1 to +/-3</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;      <span class="keywordflow">IF</span> (( abs(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))  &gt;=  1) .AND.                &amp;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;          ( abs(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))  &lt;=  3)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">! Set &quot;packed_field&quot; to .TRUE. if 32bit packing has been used</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        packed_field=(mod((lookup(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)),10) == 2)</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">! Check that the diagnostic in the dump matches that expected</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">! from D1_ADDR</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keywordflow">IF</span> (d1_addr(d1_object_type,object_index)  ==  diagnostic) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;          d1_item_code= (d1_addr(d1_section,object_index)*1000) + &amp;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                         d1_addr(d1_item,object_index)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;          <span class="keywordflow">IF</span> (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a4f2a173b22a48250d86265493664e6ad">item_code</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  /=  d1_item_code) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)                                            &amp;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;              <span class="stringliteral">&#39;UM_READDUMP : Dump field &#39;</span>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>,                      &amp;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;              <span class="stringliteral">&#39; does not match STASH request for item &#39;</span>,          &amp;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;              d1_addr(d1_item,object_index),                      &amp;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;              <span class="stringliteral">&#39; section &#39;</span>,d1_addr(d1_section,object_index)</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Expected code &#39;</span>,lookup(<a class="code" href="namespacelookup__addresses.xhtml#a4f2a173b22a48250d86265493664e6ad">item_code</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            cmessage=<span class="stringliteral">&#39;UM_READDUMP Dump does not match STASH list&#39;</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            icode=4</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">! IF (LOOKUP(ITEM_CODE,K)  /=  d1_item_code)</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! IF (D1_ADDR(d1_object_type,object_index)  ==</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;              <span class="comment">!     diagnostic)</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">! Set up the location of the field on disk and how much data</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">! needs to be read in</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        field_start=lookup(<a class="code" href="namespacelookup__addresses.xhtml#afbf7195b85d47a8f92d0769c84f846a4">lbegin</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) <span class="comment">! position of field in file</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">! data_size contains the number of words to data used to store</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">! the field on disk</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keywordflow">IF</span> (packed_field) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;          data_size=(lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)+1)/2</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;          data_size=lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">! data_read_size contains the number of words to data that need to</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">! be read in for a field. Each field has extra words of dummy data</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">! added at the end to ensure each field starts on a disk sector</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">! boundary. The last field on a dump does not have these extra words</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment">! added</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>  /=  number_of_fields) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;          data_read_size=lookup(<a class="code" href="namespacelookup__addresses.xhtml#a7fbd5df41f854a6fd5c4d35c0942742e">lbnrec</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;          data_read_size=data_size</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">! This is the max of number of words required to store the field in</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">! memory after any unpacking is done, and number of words required</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">! to read in the data.</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        data_full_size=max(lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),data_read_size)</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">! Move file pointer to the start of the field</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a>(nftin,field_start,icode)</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)                                              &amp;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;          <span class="stringliteral">&#39;UM_READDUMP - SETPOS failed to move file pointer to &#39;</span>, &amp;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;          field_start,<span class="stringliteral">&#39; on unit &#39;</span>,nftin</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;SETPOS returned error code &#39;</span>,icode</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;          icode=5</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;          cmessage=<span class="stringliteral">&#39;SETPOS failed while reading dump. See output.&#39;</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        <span class="keywordflow">IF</span> (address &gt; len_data) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;          <span class="keywordflow">IF</span> (d1_addr(d1_length,object_index) &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            icode=5</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I5,A,I9,A,I9,A,I9)&#39;</span>) &amp;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                       <span class="stringliteral">&quot;Error for field &quot;</span>, <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>, <span class="stringliteral">&quot; with calculated address &quot;</span>,    &amp;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                       address, <span class="stringliteral">&quot; and maximum D1 address of &quot;</span>, len_data,      &amp;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                       <span class="stringliteral">&quot; and D1 length of &quot;</span>, d1_addr(d1_length,object_index)</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            cmessage=<span class="stringliteral">&#39;Error calculating address in D1&#39;</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <span class="comment">! A zero sized field (land packed maybe?) set to maximum.</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            address = len_data</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="comment">! DEPENDS ON: um_read_multi</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <span class="keyword">CALL </span><a class="code" href="um__read__multi_8f90.xhtml#a9feb8d67a971df4da0762e811c1c8163" title="Parallel UM interface to BUFFIN - for use by the UM only. ">um_read_multi</a>(nftin,d1(address),data_read_size,         &amp;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                           data_full_size,                           &amp;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                           len_io,local_len,lookup(1,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>),fixhd(12),   &amp;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                           d1_addr(1,object_index),1,                &amp;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                           icode,cmessage)</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        mpp_lookup(<a class="code" href="namespacelookup__addresses.xhtml#a85cc3fee89ebba11441735210c046fa1">p_lblrec</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=local_len</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)                                              &amp;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            <span class="stringliteral">&#39;UM_READDUMP - Error while attempting to read field &#39;</span>,&amp;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>,<span class="stringliteral">&#39; of &#39;</span>,number_of_fields,<span class="stringliteral">&#39; from unit &#39;</span>,              &amp;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            nftin</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Return code from UM_READ_MULTI was &#39;</span>,icode, &amp;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <span class="stringliteral">&#39;and error message was &#39;</span>,cmessage</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Field Information: &#39;</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Section &#39;</span>,d1_addr(d1_section,object_index), &amp;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                     <span class="stringliteral">&#39; Item &#39;</span>,d1_addr(d1_item,object_index)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Disk address : &#39;</span>,field_start</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;D1 address : &#39;</span>,address</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Number of words requested : &#39;</span>,data_read_size</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Number of words returned : &#39;</span>,len_io</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;          icode=6</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;          cmessage=<span class="stringliteral">&#39;Error reading field from dump&#39;</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! If an error was detected reading the field</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;      <span class="keywordflow">ELSE</span> <span class="comment">! Error in LOOKUP(DATA_TYPE,K)</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <span class="keywordflow">IF</span> (( fixhd(5)  &lt;   6) .OR.                               &amp;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                                     <span class="comment">! Not AC, Var or Cx</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            ( fixhd(5)  &gt;   8)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">! DEPENDS ON: pr_look</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;          <span class="keyword">CALL </span><a class="code" href="pr__look_8f90.xhtml#a2fb0fb7746c91f2a3c62b5034f7d7fec" title="SUBROUTINE PR_LOOK!&gt; ">pr_look</a>(                                           &amp;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                  lookup,lookup,len1_lookup,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;um_readdump : failure for field &#39;</span>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>,<span class="stringliteral">&#39; of &#39;</span>,   &amp;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                   number_of_fields</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;LOOKUP(DATA_TYPE,K)= &#39;</span>,lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        icode=7</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        cmessage=<span class="stringliteral">&#39;Invalid data type ( LOOKUP(DATA_TYPE,K) )&#39;</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! Check the LOOKUP(DATA_TYPE,K) is valid</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="preprocessor">#if defined (UTILIO)</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="preprocessor"></span>      <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        <span class="keywordflow">IF</span> ((fixhd(5)  &lt;   6) .OR.                                &amp;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                                  <span class="comment">! Not AC/Var</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            (fixhd(5)  &gt;   8)) <span class="keywordflow">THEN</span> <span class="comment">!     Obs/Cx</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">! Print out header and summary of data field</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="comment">! DEPENDS ON: pr_look</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;          <span class="keyword">CALL </span><a class="code" href="pr__look_8f90.xhtml#a2fb0fb7746c91f2a3c62b5034f7d7fec" title="SUBROUTINE PR_LOOK!&gt; ">pr_look</a>(                                           &amp;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;          lookup,lookup,len1_lookup,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;          <span class="keywordflow">IF</span> (fixhd(5)  /= 5 ) <span class="keywordflow">THEN</span>   <span class="comment">!  Skip if boundary dataset</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            <span class="keywordflow">IF</span> (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) == 1) <span class="keywordflow">THEN</span>  <span class="comment">!  Real</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">! DEPENDS ON: pr_rfld</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;              <span class="keyword">CALL </span><a class="code" href="pr__rfld_8f90.xhtml#ada76aa41d88e73cb7140bafcbaff6a40" title="SUBROUTINE PR_RFLD!&gt; ">pr_rfld</a>(lookup,lookup,d1(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a16f485ed422b2c5c4014cfb66960f51a">naddr</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)),<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) == 2) <span class="keywordflow">THEN</span>  <span class="comment">!  Integer</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">! DEPENDS ON: pr_ifld</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;              <span class="keyword">CALL </span><a class="code" href="pr__ifld_8f90.xhtml#af3138d8f85ef3a566dd26bd891de85ac" title="SUBROUTINE PR_IFLD!&gt; ">pr_ifld</a>(lookup,lookup,d1(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a16f485ed422b2c5c4014cfb66960f51a">naddr</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)),<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) == 3) <span class="keywordflow">THEN</span>  <span class="comment">!  Logical</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment">! DEPENDS ON: pr_lfld</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;              <span class="keyword">CALL </span><a class="code" href="pr__lfld_8f90.xhtml#a78f2fcaee160bab6f36a746afd08c25f" title="SUBROUTINE PR_LFLD!&gt; ">pr_lfld</a>(lookup,lookup,len1_lookup,               &amp;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                         d1(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a16f485ed422b2c5c4014cfb66960f51a">naddr</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)),<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="keywordflow">            END IF</span> <span class="comment">! Test for different data types</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">! test for boundary dataset</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! test for field type</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! PrintStatus &gt;= PrStatus_Diag</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="preprocessor"></span><span class="keywordflow">    END IF</span> <span class="comment">! If there was data in the field</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    level=level+1</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="keywordflow">IF</span> (level  &gt;   d1_addr(d1_no_levels,object_index)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;      level=1</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;      object_index=object_index+1</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">! K : loop over fields to read in</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>  &gt;=  <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <span class="keywordflow">IF</span> (mype  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Data successfully read&#39;</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) fixhd(161),<span class="stringliteral">&#39; words read from unit &#39;</span>,nftin</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;      <span class="keywordflow">IF</span> ((fixhd(5)  &gt;=  6) .AND.                                 &amp;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                                   <span class="comment">! AC/Var</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;          (fixhd(5)  &lt;=  8)) <span class="keywordflow">THEN</span> <span class="comment">! Obs/Cx</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;(Observational data)&#39;</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;(Model data)&#39;</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;um_readdump&#39;</span>)</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! IF (mype  ==  0)</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! IF (PrintStatus  &gt;=  PrStatus_Normal)</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! IF (FIXHD(160)  &gt;   0)</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="comment">! Reset to original decomposition type</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="keyword">CALL </span>change_decomposition(orig_decomp,icode)</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UM_READDUMP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="um__readdump_8f90.xhtml#a1cd34d50f40d6c5161e8efaf6a716404" title="SUBROUTINE UM_READDUMP. ">um_readdump</a></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="preprocessor">#endif</span></div><span class="preprocessor"></span></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
