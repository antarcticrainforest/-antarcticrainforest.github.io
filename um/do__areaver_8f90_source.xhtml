<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/river_routing/do_areaver.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_bae1cb46695abd27a5646b02ea8f0e2c.xhtml">river_routing</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">do_areaver.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="do__areaver_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespacedo__areaver__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacedo__areaver__mod.xhtml" title="Code Owner: See Unified Model Code Owners HTML page. ">do_areaver_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="namespacedo__areaver__mod.xhtml#aaf428fe8fac14d92329d342802211081">do_areaver</a>(gaps_lambda_srce,gaps_phi_srce             &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;      ,data_srce,gaps_lambda_targ,gaps_phi_targ,count_targ,base_targ   &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;      ,lrow_targ,want,mask_targ,index_srce,weight,data_targ            &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;      ,global_src_lambda_gaps,global_src_phi_gaps, grid, recv_concern, &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;      recv_size)</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="namespacedo__areaver__mod.xhtml#aaf428fe8fac14d92329d342802211081">   17</a></span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordtype">USE </span>regrid_utils<span class="keywordtype">, ONLY</span>: global_to_local_gridpt, find_value,      &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;             gridpt_outside_proc_domain</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordtype">USE </span><a class="code" href="namespaceregrid__types.xhtml" title="Module: REGRID_TYPES !&gt; ">regrid_types</a></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordtype">USE </span>um_parvars<span class="keywordtype">, ONLY</span>: mype, g_blsize, fld_type_p</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;             <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;       gaps_lambda_srce                                                 &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                               <span class="comment">!   number lambda gaps in source grid</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      ,gaps_phi_srce                                                    &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                               <span class="comment">!   number phi gaps in source grid</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      ,gaps_lambda_targ                                                 &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                               <span class="comment">!   number lambda gaps in target grid</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      ,gaps_phi_targ                                                    &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                               <span class="comment">!   number phi gaps in target grid</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      ,lrow_targ                                                        &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                               <span class="comment">!   first dimension of target arrays</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      ,count_targ(gaps_lambda_targ,gaps_phi_targ)                       &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      ,base_targ(gaps_lambda_targ,gaps_phi_targ)                        &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      ,index_srce(*)                                                    &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                               <span class="comment">!   list of source box indices</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      ,global_src_lambda_gaps                                           &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                               <span class="comment">!   lambda gaps in global src grid</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      ,global_src_phi_gaps                                              &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                               <span class="comment">!   phi gaps in global src grid</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      ,grid                                                             &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                               <span class="comment">! grid type (e.g. atmos, river ...)</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      ,recv_size</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;       want                                                             &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                               <span class="comment">!   indicator of wanted points in mask</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      ,mask_targ(gaps_lambda_targ, gaps_phi_targ)       <span class="comment">!   land/sea mask for target grid</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;         <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                               &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;       data_srce(gaps_lambda_srce,gaps_phi_srce)                                                                        <span class="comment">!    data on source grid</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                               &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;       weight(*)                                                                                      <span class="comment">!   list of weights for source boxes</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                              &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;       data_targ(gaps_lambda_targ, gaps_phi_targ)                                <span class="comment">!    data on target grid</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keywordtype">TYPE</span>(<a class="code" href="structregrid__types_1_1concern.xhtml">concern</a>), <span class="keywordtype">INTENT(IN)</span> :: recv_concern(recv_size)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">! local variables</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;       ip                                                               &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                               <span class="comment">! pointer into lists</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      ,i                                                                &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                               <span class="comment">! loop index</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      ,ix1(gaps_lambda_srce*gaps_phi_srce)                              &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">!                              ! working srce lambda indices</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      ,iy1(gaps_lambda_srce*gaps_phi_srce)                              &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">!                              ! working srce phi indices</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      ,ix2,iy2                                                          &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                               <span class="comment">! working targ lambda/phi indices              ,src_phi_gap                                                      &amp;</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                               <span class="comment">! phi gap in global domain src grid</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      ,src_lambda_gap</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                               <span class="comment">! lambda gap in global domain src grid</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;       lambda_gap0, lambda_gapf, phi_gap0, phi_gapf, xSrc, ySrc                                <span class="comment">! the local start and end points in the src grid</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;       temp_targ, data_src                                                     </div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keywordtype">LOGICAL</span> found, not_within</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">!     loop over all target boxes and calculate values as required.</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">!     the weights and source box indices are recorded in continuous</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">!     lists. count_targ indicates how many consecutive entries in these</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">!     lists apply to each target box.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="keywordflow">DO</span> iy2=1,gaps_phi_targ</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;         <span class="keywordflow">DO</span> ix2=1,gaps_lambda_targ</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">IF</span> (mask_targ(ix2,iy2).EQV.want) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;               <span class="keywordflow">IF</span> (count_targ(ix2,iy2) /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                  temp_targ=0.</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                  <span class="keywordflow">DO</span> i=1,count_targ(ix2,iy2)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                     ip=base_targ(ix2,iy2)+i</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                                         <span class="comment">! determine if src requested is within boundary                     ! in global src grid                     src_lambda_gap = MOD(index_srce(ip)-1,             &amp;</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                          global_src_lambda_gaps)+1</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                     src_phi_gap = (index_srce(ip)-1)/                  &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                          global_src_lambda_gaps+1</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    </div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                     <span class="comment">! check if src point is in proc domain</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                     not_within = gridpt_outside_proc_domain(           &amp;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                     src_lambda_gap, src_phi_gap, grid)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                     data_src = 0</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                         <span class="comment">! if not check in your recv Concerns</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                     <span class="keywordflow">IF</span>(not_within) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                             found = .false.</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                        <span class="keyword">CALL </span>find_value(src_lambda_gap, src_phi_gap,    &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                             recv_size, recv_concern, data_src, found)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                        <span class="keywordflow">IF</span>(.NOT. found) print*, <span class="stringliteral">&quot;Error, Src Not Found!&quot;</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                     <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                        xsrc = src_lambda_gap</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                        ysrc = src_phi_gap</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                        <span class="keyword">CALL </span>global_to_local_gridpt(xsrc, ysrc, grid)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                        data_src = data_srce(xsrc, ysrc)<span class="keywordflow">                                               END IF</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                     <span class="comment">! apply weighting                     temp_targ=temp_targ+weight(ip)*data_src                                 END DO</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;               <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                  <span class="comment">! one to one                  temp_targ=data_targ(ix2,iy2)</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordflow">               END IF</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;               data_targ(ix2,iy2)=temp_targ</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword">    END SUBROUTINE </span><a class="code" href="namespacedo__areaver__mod.xhtml#aaf428fe8fac14d92329d342802211081">do_areaver</a></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacedo__areaver__mod.xhtml" title="Code Owner: See Unified Model Code Owners HTML page. ">do_areaver_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
