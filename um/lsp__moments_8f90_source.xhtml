<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/large_scale_preciptation/lsp_moments.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_e9ad03cb5a25088942c5c2b981810778.xhtml">large_scale_preciptation</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">lsp_moments.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="lsp__moments_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno"><a class="line" href="namespacelsp__moments__mod.xhtml">    3</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacelsp__moments__mod.xhtml" title="Large-scale precipitation scheme. Conversion between moments of PSD Large-scale precipitation scheme...">lsp_moments_mod</a></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a>( points, rho, t, qcf, cficei, n_out, moment_out )</div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">   10</a></span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="comment">! microphysics modules</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemphys__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">mphys_inputs_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemphys__inputs__mod.xhtml#adcc26f6b924dae1f28fb02aed0e4ec9a" title="Use global version (mid-lat selected if .false.) ">l_psd_global</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#a2306247e87b60f96b153fbf2ebf97d27">ai</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="comment">! General atmosphere modules</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="keywordtype">USE </span>conversions_mod<span class="keywordtype">,  ONLY</span>: zerodegc</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;   <span class="comment">! Dr Hook modules</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,          ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,         ONLY</span>: jprb, jpim</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacevectlib__mod.xhtml">vectlib_mod</a><span class="keywordtype">,      ONLY</span>: <a class="code" href="namespacevectlib__mod.xhtml#ae619493e9e4d10fb153e38fc3413a371">powr_v</a>, <a class="code" href="namespacevectlib__mod.xhtml#a158dc38b092e77b3f84dc889d5ed2bd3">oneover_v</a>, <a class="code" href="namespacevectlib__mod.xhtml#a53a6632af5f46174122764b28fe255e8">exp_v</a></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">! Description of Code:</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    points</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                        <span class="comment">! Number of points to calculate</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    n_out,                                                              &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                        <span class="comment">! Moment of the PSD to be output</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    rho(points),                                                        &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                        <span class="comment">! Air density / kg m-3</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    t(points),                                                          &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                        <span class="comment">! Temperature / K</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    qcf(points),                                                        &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                        <span class="comment">! Ice water content / kg kg-1</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    cficei(points)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                        <span class="comment">! 1 / ice cloud fraction</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                                  &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    moment_out(points)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                        <span class="comment">! n_out moment of the in-cloud</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                        <span class="comment">! particle size distn</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    i, j</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                        <span class="comment">! Loop counter for points</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    one_over_ai,                                                        &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                        <span class="comment">! 1 / ai</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    tc(points),                                                         &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                        <span class="comment">! Temperature in degrees Celsius</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    log10_abi(points),                                                  &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                        <span class="comment">! log10 of conversion factor a(bi,Tc)</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    abi(points),                                                        &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                        <span class="comment">! Conversion factor a(bi,Tc)</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    bbi(points),                                                        &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                        <span class="comment">! Conversion factor b(bi,Tc)</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    m_2(points),                                                        &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                        <span class="comment">! Second moment of the PSD</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    m_bi(points),                                                       &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                        <span class="comment">! bi&#39;th moment of the PSD</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    log10_an_out(points),                                               &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                        <span class="comment">! log10 of conversion factor a(n_out,Tc)</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    an_out(points),                                                     &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                        <span class="comment">! Conversion factor a(n_out,Tc)</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    bn_out(points),                                                     &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                        <span class="comment">! Conversion factor b(n_out,Tc)</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    a_tot_1, b_tot_1, c_tot_1, a_tot_2, b_tot_2, c_tot_2,               &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                        <span class="comment">! Totals of conversion factors for global</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                        <span class="comment">! version</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    temp_in(points), tc_1_in(points) , tc_2_in(points),                 &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    temp_out(points), tc_1_out(points) , tc_2_out(points)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                        <span class="comment">! temporaries for vector computations</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="comment">! The following values are from Table 1 of Field et al (2005)</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <span class="comment">! and represent the conversion parameters between moments.</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span>:: a(10) = (/5.065339,-0.062659,-3.032362,             &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    0.029469,-0.000285,0.312550,0.000204,0.003199,0.000000,             &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    -0.015952 /)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span>:: b(10) = (/0.476221,-0.015896,0.165977,              &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    0.007468,-0.000141,0.060366,0.000079,0.000594,0.000000,             &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    -0.003577 /)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <span class="comment">! The following values are from Field et al (2007)</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="comment">! and represent the conversion parameters between moments.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span>:: gl_a(3) = (/13.6078, -7.76062, 0.478694 /)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span>:: gl_b(3) = (/-0.0360722, 0.0150830, 0.00149453 /)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span>:: gl_c(3) = (/0.806856, 0.00581022, 0.0456723 /)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: smallnum = 2.2e-14</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                          <span class="comment">! Small value used in if tests</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">! Start the subroutine</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LSP_MOMENTS&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  one_over_ai = 1.0 / <a class="code" href="namespacemphys__inputs__mod.xhtml#a2306247e87b60f96b153fbf2ebf97d27">ai</a></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;           <span class="comment">! Decide whether to use the later (global) version of the</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="comment">! distribution or the earlier (midlat) version of the</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="comment">! distribution as controlled by the logical l_psd_global</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;     </div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#adcc26f6b924dae1f28fb02aed0e4ec9a" title="Use global version (mid-lat selected if .false.) ">l_psd_global</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">! calculate loop invariant quantities</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;       a_tot_1=gl_a(1)+gl_a(2)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>+gl_a(3)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>**2</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    b_tot_1=gl_b(1)+gl_b(2)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>+gl_b(3)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>**2</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    c_tot_1=gl_c(1)+gl_c(2)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>+gl_c(3)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>**2</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;       <span class="comment">! Now do the exponential of a_tot (save variables)</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    a_tot_1=exp(a_tot_1)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    c_tot_1 = 1./c_tot_1       a_tot_2=gl_a(1)+gl_a(2)*n_out+gl_a(3)*n_out**2</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    b_tot_2=gl_b(1)+gl_b(2)*n_out+gl_b(3)*n_out**2</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    c_tot_2=gl_c(1)+gl_c(2)*n_out+gl_c(3)*n_out**2</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;       a_tot_2=exp(a_tot_2)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;       <span class="comment">! Use the global version of the particle size distn</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="comment">! Field et al (2007) J. Atmos. Sci.</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;   </div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;       <span class="comment">! Form the bi&#39;th moment of the ice particle size</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="comment">! distribution from the ice water content.</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;   </div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    j = 0</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="comment">! pack into vector      IF (qcf(i) &gt; smallnum) THEN</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;         j = j + 1</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;         tc_1_in(j) = (t(i) - zerodegc)*b_tot_1</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;         tc_2_in(j) = (t(i) - zerodegc)*b_tot_2         temp_in(j) = rho(i) * qcf(i) * cficei(i) * one_over_ai</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;         temp_in(j) = max(temp_in(j),0.0)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacevectlib__mod.xhtml#a53a6632af5f46174122764b28fe255e8">exp_v</a>(j, tc_1_in, tc_1_out)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacevectlib__mod.xhtml#a53a6632af5f46174122764b28fe255e8">exp_v</a>(j, tc_2_in, tc_2_out)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    tc_1_in(1:j) = a_tot_1*tc_1_out(1:j)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacevectlib__mod.xhtml#a158dc38b092e77b3f84dc889d5ed2bd3">oneover_v</a>(j, tc_1_in, tc_1_out)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    temp_in(1:j) = temp_in(1:j)*tc_1_out(1:j)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;       <span class="comment">! Calculate the second moment of the PSD</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;       <span class="keyword">CALL </span><a class="code" href="namespacevectlib__mod.xhtml#ae619493e9e4d10fb153e38fc3413a371">powr_v</a>(j,temp_in, c_tot_1, temp_out)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    temp_in(1:j) = temp_out(1:j)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;       <span class="comment">! Calculate the n_out moment of the PSD</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;       <span class="keyword">CALL </span><a class="code" href="namespacevectlib__mod.xhtml#ae619493e9e4d10fb153e38fc3413a371">powr_v</a>(j,temp_in, c_tot_2, temp_out)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    temp_out(1:j) = a_tot_2*tc_2_out(1:j)*temp_out(1:j)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    j = 0</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      <span class="comment">! unpack</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      <span class="keywordflow">IF</span>(qcf(i) &gt; smallnum) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;         j = j + 1</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;         moment_out(i)=temp_out(j)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;     <span class="keywordflow">ELSE</span>  <span class="comment">! qcf &gt; 0</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                     <span class="comment">! Set the output moment to zero</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                 moment_out(i) = 0.0</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordflow">     END IF</span>  <span class="comment">! qcf &gt; 0</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordflow">   END DO</span>  <span class="comment">! i</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                   <span class="comment">! Use the midlat version of the particle size distn</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          <span class="comment">! Field et al (2005) Q. J. R Met Soc</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;         </div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      <span class="keywordflow">IF</span> (qcf(i) &gt; smallnum) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                     <span class="comment">! Form the bi&#39;th moment of the ice particle size</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;           <span class="comment">! distribution from the ice water content.</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                  m_bi(i) = rho(i) * qcf(i) * cficei(i) * one_over_ai</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        m_bi(i) = max(m_bi(i) , 0.0)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                     <span class="comment">! Calculate the second moment of the PSD</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                  tc(i) = t(i) - zerodegc</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        log10_abi(i) = a(1) + a(2)*tc(i) + a(3)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>                      &amp;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                  + a(4)*tc(i)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a> + a(5)*tc(i)*tc(i)                    &amp;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                  + a(6)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a> + a(7)*tc(i)*tc(i)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>                    &amp;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                  + a(8)*tc(i)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a> + a(9)*tc(i)*tc(i)*tc(i)           &amp;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                  + a(10)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        abi(i) = 10.0**(log10_abi(i))</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        bbi(i) =    b(1) + b(2)*tc(i) + b(3)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>                         &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                  + b(4)*tc(i)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a> + b(5)*tc(i)*tc(i)                    &amp;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                  + b(6)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a> + b(7)*tc(i)*tc(i)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>                    &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                  + b(8)*tc(i)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a> + b(9)*tc(i)*tc(i)*tc(i)           &amp;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                  + b(10)*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>*<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        m_2(i) = (m_bi(i) / abi(i))**(1.0/bbi(i))</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                     <span class="comment">! Calculate the n_out moment of the PSD</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                  log10_an_out(i) = a(1) + a(2)*tc(i) + a(3)*n_out                &amp;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                  + a(4)*tc(i)*n_out + a(5)*tc(i)*tc(i)                 &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                  + a(6)*n_out*n_out + a(7)*tc(i)*tc(i)*n_out           &amp;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                  + a(8)*tc(i)*n_out*n_out + a(9)*tc(i)*tc(i)*tc(i)     &amp;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                  + a(10)*n_out*n_out*n_out</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        an_out(i) = 10.0**(log10_an_out(i))</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        bn_out(i) = b(1) + b(2)*tc(i) + b(3)*n_out                      &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                  + b(4)*tc(i)*n_out + b(5)*tc(i)*tc(i)                 &amp;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                  + b(6)*n_out*n_out + b(7)*tc(i)*tc(i)*n_out           &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                  + b(8)*tc(i)*n_out*n_out + b(9)*tc(i)*tc(i)*tc(i)     &amp;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                  + b(10)*n_out*n_out*n_out</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        moment_out(i) = an_out(i) * m_2(i) ** bn_out(i)</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      <span class="keywordflow">ELSE</span>  <span class="comment">! qcf &gt; 0</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                     <span class="comment">! Set the output moment to zero</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                  moment_out(i) = 0.0</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! qcf &gt; 0</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keywordflow">    END DO</span>  <span class="comment">! i</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keywordflow">  END IF</span>  <span class="comment">! l_psd_global</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LSP_MOMENTS&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacelsp__moments__mod.xhtml" title="Large-scale precipitation scheme. Conversion between moments of PSD Large-scale precipitation scheme...">lsp_moments_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
