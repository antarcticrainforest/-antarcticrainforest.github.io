<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/stash/pp_file.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_807f876cb6d36c1a4c0b1b86608d148a.xhtml">stash</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">pp_file.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pp__file_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="pp__file_8f90.xhtml#a16dcddb977828f88bb3f21e8bc1b8c30" title="SUBROUTINE PP_FILE -!&gt; ">pp_file</a>(ppfield,icurrll,lenbuf,num_words,    &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;    rmdi,comp_accrcy,pphoriz_out,unitpp,iwa,n_cols_out, &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    n_rows_out,packing,im_ident,                        &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    packing_type,current_io_pe,len_extra,               &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    srow_out,wcol_out,icode,cmessage)</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="pp__file_8f90.xhtml#a16dcddb977828f88bb3f21e8bc1b8c30">   16</a></span>&#160;   <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="keywordtype">USE </span>stwork_aux<span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      flushpendingstashforunit</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;      buffout,   &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;      <a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceios.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">ios</a><span class="keywordtype">, ONLY</span> :       &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;      <a class="code" href="namespaceios.xhtml#ac7537aeefda69c380a135b15882f81c2">ios_setpos_stash</a>, &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;      <a class="code" href="namespaceios.xhtml#a14bd72f59d2241814c97927a3dd25372">ios_write_stash_prepacked_data</a></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordtype">USE </span>ios_stash_common<span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      isusingasyncstash</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceio__configuration__mod.xhtml" title="This file belongs in section: C96. ">io_configuration_mod</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <a class="code" href="namespaceio__configuration__mod.xhtml#a47a1a0bfdbd64545a5967659ae7d6435">io_field_padding</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :       &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                 &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,               &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>,             &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacechsunits__mod.xhtml" title="copied from include file chsunits.h ">chsunits_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacechsunits__mod.xhtml#af6e26d3a6a1fedf0b44203712a772f8e">nunits</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;     <span class="keywordtype">CHARACTER(LEN=80)</span> CMESSAGE <span class="comment">!OUT OUT MESSAGE FROM ROUTINE</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;   <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      LENBUF,       &amp;<span class="comment">! LENGTH OFF PP BUFFER</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      UNITPP,       &amp;<span class="comment">! OUTPUT PP UNIT NUMBER</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      im_ident,     &amp;<span class="comment">! Internal model identifier</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      current_io_pe,&amp;<span class="comment">! PE which will do the I/O</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      N_ROWS_OUT,   &amp;<span class="comment">! PPHORIZ_OUT=N_ROWS_OUT*N_COLS_OUT</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      N_COLS_OUT,   &amp;<span class="comment">! PPHORIZ_OUT=N_COLS_OUT*N_ROWS_OUT</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      COMP_ACCRCY,  &amp;<span class="comment">! PACKING ACCURACY IN POWER OF 2</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      PPHORIZ_OUT,  &amp;<span class="comment">! SIZE OF OUTPUT FIELD</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      ICURRLL,      &amp;<span class="comment">! Record Number</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      LEN_EXTRA,    &amp;<span class="comment">! IN size of expected extra data</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      SROW_OUT,     &amp;<span class="comment">! 1st southern row to output</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      WCOL_OUT       <span class="comment">! 1st western column to output</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      PACKING        <span class="comment">!IN OVERALL Packing switch (T if pckng reqd)</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      PACKING_TYPE   <span class="comment">! OUT set to 1 if WGDOS packing else set to zero.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> :: &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      NUM_WORDS,    &amp;<span class="comment">! NUMBER OF 64 BIT WORDS WORTH OF DATA</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      ICODE          <span class="comment">! RETURN CODE FROM ROUTINE</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordtype">REAL</span>                           &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      PPFIELD(pphoriz_out),      &amp; <span class="comment">!INOUT ARRAY TO STORE PPDATA</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      BUFOUT(lenbuf+len_extra),  &amp; <span class="comment">!OUTPUT PP BUFFER (ROUNDED UP)</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      RMDI                         <span class="comment">!IN     Missing data indicator</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#include &quot;comvgrid.h&quot;</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordtype">INTEGER</span> ::          &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;          ml,             &amp;<span class="comment">! longitude counter</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;          jl,             &amp;<span class="comment">! latitude counter</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;          iwa,            &amp;<span class="comment">! record number</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;          ii,             &amp;<span class="comment">! counter</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;          ocode,          &amp;<span class="comment">! copy of the input value of icode</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;          length_fullwrd, &amp;<span class="comment">! length in bits of fullword var</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;          len_buf_words,  &amp;<span class="comment">! num_words rounded by 512 and actually</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;          num_out,        &amp;<span class="comment">! number of compressed (32 bit) words</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;          len_io,         &amp;<span class="comment">! not used, but needed for buffout call</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;          JJ               <span class="comment">! Local counter</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keywordtype">LOGICAL</span> :: UV       <span class="keywordtype">REAL</span> :: IX           <span class="comment">! RETURN VALUE FROM UNIT COMMAND</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;PP_FILE&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">!    Check if an error has already been encountered, and get out</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">!    if it has.</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      ocode = 0</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">then</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;         <span class="keywordflow">goto</span> 999</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (icode  &lt;   0)<span class="keywordflow">then</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;         ocode = icode</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;         icode = 0</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">!    REMEMBER THAT BUFFER OUT STARTS AT ADDRESS 0 THUS IPPLOOK GOES</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">!    FROM 0 to 262143 ie THE NEXT ADDRESS SHOULD BE IWA=262144 to</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">!    IWA=325119 then IWA=325120 to 388095 then 388096 etc</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">!======================================================================</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      length_fullwrd=64   <span class="comment">!   LENGTH IN BITS OF FULLWORD VAR</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">!L   At this point packing,if required,will be done using the WGDOS</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">!L   method of packing.</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      packing_type=0</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">! Note the value of -26 corresponds to -15 (F) in ppxref.</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">! The packing acuracy is scaled to allow greater accuracy.</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">! Packing will only be attempted if there are at least 2 points per row</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">! in the PPfield.</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      <span class="keywordflow">IF</span>(packing .AND. n_cols_out  &gt;=  2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="comment">! 1. Climate wgdos packing has been selected for current file</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="comment">!    stream via UMUI</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">IF</span>(comp_accrcy  &gt;   -99) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;          <span class="comment">! 2. STASH packing profile for the field is set.</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;          packing_type = 1</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      <span class="keywordflow">IF</span>(packing_type == 1)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">! DEPENDS ON: coex</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keyword">CALL </span><a class="code" href="coex_8f90.xhtml#a10c39971fd4f9c6cb48ce993c34b53ee" title="SUBROUTINE COEX. ">coex</a>(ppfield,pphoriz_out,bufout,lenbuf,n_cols_out,         &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;     &amp;  n_rows_out,num_out,comp_accrcy,.true.,rmdi,length_fullwrd,      &amp;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;     &amp;  icode,cmessage)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        num_words=(num_out+1)/2 <span class="comment">! Round up to the nearest 64 Bit CRAY Wd</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!  COEX returns the number of IBM words needed to hold the packed data</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">!                             ~~~</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        len_buf_words=((num_words+<a class="code" href="namespaceio__configuration__mod.xhtml#a47a1a0bfdbd64545a5967659ae7d6435">io_field_padding</a>-1)/<a class="code" href="namespaceio__configuration__mod.xhtml#a47a1a0bfdbd64545a5967659ae7d6435">io_field_padding</a>)*    &amp;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;     &amp;   <a class="code" href="namespaceio__configuration__mod.xhtml#a47a1a0bfdbd64545a5967659ae7d6435">io_field_padding</a></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(1X,A,I7,A,I7)&#39;</span>)<span class="stringliteral">&#39;PP_FILE: Field Packed from&#39;</span>, pphoriz_out, &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="stringliteral">&#39; to&#39;</span>, num_words</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;pp_file&#39;</span>)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>(packing_type == 4)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>  ==  current_io_pe) <span class="keywordflow">then</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">! DEPENDS ON: runlen_encode</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;          <span class="keyword">CALL </span><a class="code" href="runlen__encode_8f90.xhtml#a49c7e383fa761d4a8e3018b638e2df66" title="Purpose: Reduce storage requirements by removing land points from. ">runlen_encode</a>(ppfield,pphoriz_out,bufout,pphoriz_out,    &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;     &amp;                     num_out,rmdi,icode,cmessage)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="comment">! Size of run length encoded data is greater than unpacked</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="comment">! field therefore leave field unpacked.</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;          <span class="keywordflow">if</span> (num_out  &gt;=  pphoriz_out) <span class="keywordflow">then</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            packing_type = 0</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordflow">DO</span> jj=1,pphoriz_out</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;              bufout(jj) = ppfield(jj)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            num_words=pphoriz_out</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            len_buf_words=lenbuf</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;          <span class="keywordflow">else</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            num_words=num_out</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            len_buf_words=((num_words+<a class="code" href="namespaceio__configuration__mod.xhtml#a47a1a0bfdbd64545a5967659ae7d6435">io_field_padding</a>-1)/<a class="code" href="namespaceio__configuration__mod.xhtml#a47a1a0bfdbd64545a5967659ae7d6435">io_field_padding</a>)*&amp;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;     &amp;      <a class="code" href="namespaceio__configuration__mod.xhtml#a47a1a0bfdbd64545a5967659ae7d6435">io_field_padding</a></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordflow">          endif</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      <span class="keywordflow">ELSE</span>  <span class="comment">! No packing required.</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(1X,A,I7,I7)&#39;</span>)<span class="stringliteral">&#39;PP_FILE: Output field with grid dimensions&#39;</span>, &amp;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        n_rows_out,n_cols_out</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;pp_file&#39;</span>)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keywordflow">DO</span> jj=1,pphoriz_out</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;          bufout(jj) = ppfield(jj)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        num_words=pphoriz_out</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        len_buf_words=lenbuf</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      <span class="keywordflow">IF</span> (var_grid_type &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;         <span class="comment">! If we have a variable horizontal grid then we</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;         <span class="comment">! must add the grid data to the end of the PP record</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;         <span class="comment">! as &quot;EXTRA DATA&quot;.</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">! DEPENDS ON: extra_variable_grid</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;         <span class="keyword">CALL </span><a class="code" href="extra__variable__grid_8f90.xhtml#a1daaed4a254ea9d057236480bdafd4c3" title="This file belongs in section: STASH. ">extra_variable_grid</a>(bufout(num_words+1),len_extra         &amp;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;     &amp;            ,srow_out,n_rows_out                                  &amp;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;     &amp;            ,wcol_out,n_cols_out)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;         <span class="comment">! Adjust output buffer size for WFIO.</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;         num_words = num_words + len_extra</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;         <span class="keywordflow">IF</span> ((packing_type == 1).OR.(packing_type == 4)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;           len_buf_words=((num_words+<a class="code" href="namespaceio__configuration__mod.xhtml#a47a1a0bfdbd64545a5967659ae7d6435">io_field_padding</a>-1)/<a class="code" href="namespaceio__configuration__mod.xhtml#a47a1a0bfdbd64545a5967659ae7d6435">io_field_padding</a>)* &amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;     &amp;                     <a class="code" href="namespaceio__configuration__mod.xhtml#a47a1a0bfdbd64545a5967659ae7d6435">io_field_padding</a> <span class="comment">! No of words output</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;             len_buf_words=lenbuf+len_extra</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keywordflow">         ENDIF</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keywordflow">      ENDIF</span> <span class="comment">! If variable grid data needed adding</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      <span class="keywordflow">IF</span> (isusingasyncstash().AND.icurrll&gt;=0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="comment">! If we are here we received a stash field object thats</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="comment">!  not using the async-queue method, and we are calling the        !  fallback code. Hence we should purge anything for the        !  unit that may be cached and not yet sent before we send        !  more data.</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keyword">CALL </span>flushpendingstashforunit(unitpp)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>  ==  current_io_pe) <span class="keywordflow">then</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordflow">DO</span> jj=num_words+1,len_buf_words</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        bufout(jj)= 0.0</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <span class="keywordflow">IF</span> (isusingasyncstash().AND.icurrll&gt;=0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="comment">! This is an alternate route for stash fields, where we use data</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="comment">! on the backend IOS to keep a track of file locations. If we are        ! executing this code it means that some fields are written via async</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="comment">! and this is a fallback for those that are not - in this case the        ! file locations are unknown and we need to use the stash aware setpos</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="comment">! with the field number....</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceios.xhtml#ac7537aeefda69c380a135b15882f81c2">ios_setpos_stash</a>(unitpp,icurrll,icode)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceios.xhtml#a14bd72f59d2241814c97927a3dd25372">ios_write_stash_prepacked_data</a>(unitpp,icurrll, &amp;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            bufout(1:len_buf_words))</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        len_io=len_buf_words</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        ix = -1.0</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a>(unitpp,iwa,icode)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keyword">CALL </span>buffout(unitpp,bufout,len_buf_words,len_io,ix)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">!     WRITE(6,102) IWA,LEN_BUF_WORDS</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  100 <span class="keyword">FORMAT</span>(//,32<a class="code" href="namespaceregrid__types.xhtml#a7ca70352d6d7a250eb1f293e3801d767">x</a>,<span class="stringliteral">&#39;   ARRAY BUFOUT AT END OF PPOUT &#39;</span>,//,32(10f8.0/))</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  102 <span class="keyword">FORMAT</span>(<span class="stringliteral">&#39; FROM PP_FILE    IWA  LEN_BUF_WORDS &#39;</span>,2i12)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      <span class="keywordflow">IF</span> (ix /= -1.0.OR.len_io /= len_buf_words) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">! DEPENDS ON: ioerror</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="keyword">CALL </span><a class="code" href="ioerror_8f90.xhtml#aa3812224bd42148a2e00c44c715f82de" title="SUBROUTINE IOERROR!&gt; ">ioerror</a>(<span class="stringliteral">&#39;Buffer out Data Field&#39;</span>,ix,len_io,                 &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;     &amp;                len_buf_words)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        cmessage=<span class="stringliteral">&#39;PPFILE  : I/O error - PP Data Field Output&#39;</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        icode=7</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;PP_FILE&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordflow">      endif</span> <span class="comment">! (mype  ==  current_io_pe)</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">!     If we have found an error, leave it in icode.  If no error</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">!     occurred then check if the original input value of icode was</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">!     non-zero (a previous untrapped error/warning), and copy this</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">!     back into ICODE before eaving the routine.</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="keywordflow">IF</span> (icode  ==  0 .and. ocode  /=  0) <span class="keywordflow">then</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;         icode = ocode</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;PP_FILE&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="pp__file_8f90.xhtml#a16dcddb977828f88bb3f21e8bc1b8c30" title="SUBROUTINE PP_FILE -!&gt; ">pp_file</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
