<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/UKCA/ukca_volume_mode.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_3b087d695daa154bfcb7242bcfd0fbd3.xhtml">UKCA</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ukca_volume_mode.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ukca__volume__mode_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">!  Description:</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">!  Code Description:</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="ukca__volume__mode_8f90.xhtml#af3dc5907e8940a43bb8ef2aee9a63993" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_volume_mode</a>(NBOX,ND,MD,MDT,                       &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;       RH,WVOL,WETDP,RHOPAR,IWVOLMETHOD,                                &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;       DVOL,DRYDP,MDWAT,PVOL,PVOL_WAT,VERBOSE,                          &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;       T,PMID,S)</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="ukca__volume__mode_8f90.xhtml#af3dc5907e8940a43bb8ef2aee9a63993">   31</a></span>&#160;-<span class="comment">!</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">! MASK     : Mask where in domain to calculate values</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">! MDSOL    : Mass per particle (total over soluble cpts) (mlcls/ptcl)</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">! RHOSOL   : Density of particle solution [excl. insoluble cpts] (kg/m3)</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">! B        : Factor in solute term in Kohler equation =</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">!              BCONST*(no. of ions)*(solute mass)/(solute molar mass)</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">! DENOM    : Temporary variable calculating denominator of expression</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">! DENOM2   : Temporary variable calculating denominator of expression</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">! RHOTMP   : Temporary variable in calculation of particle density</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">! RHOTMP2  : Temporary variable in calculation of particle density</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! WVOL_SOL : Contribution to wet volume from soluble components (m^3)</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">! WC       : Water content for aerosol (moles/cm3 of air)</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">! WDPCUB   : Cube of particle wet diameter (m^3)</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">! SIXOVRPIX: (6.0/pi)*{ 1.0/EXP((9/2)*LOG^2(SIGMA_G)) }</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">! Inputted by module UKCA_CONSTANTS</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">! PPI      : 3.1415927....</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">! AVC      : Avogadro&#39;s constant (molecules per mole)</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">! CONC_EPS : Value of soluble material mass conc. below which</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">!            assume no soluble mass</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">! RHOW     : Density of water (=1000.0 kgm^-3)</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! MMW      : Molecular mass of water (=0.018 kg/mol)</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">! BCONST   : Value of constant in B term of Kohler equation</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">! NU_H2SO4 : Number of dissociated ions for H2SO4</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">! CONVERT  : Conversion from micron^3 to m^3</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">! RHOSUL   : Mass density of a pure H2SO4 aerosol (kg per m^3)</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">! Inputted by module UKCA_MODE_SETUP</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">! ! NMODES   : Number of possible aerosol modes</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">! NCP      : Number of possible aerosol components</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">! MODE     : Logical variable denoting where mode is defined</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">! COMPONENT: Logical variable denoting where cpt is defined</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">! SOLUBLE  : Logical variable defining which cpts are soluble</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">! MM       : Molar masses of components (kg per mole)</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">! NO_IONS  : Number of dissociating ions in solute (H2SO4=3,NaCl=2)</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">! MODESOL  : Defines which modes are soluble (integer)</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">! RHOCOMP  : Densities (dry) of each component (kg/m^3)</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">! MMID     : Avg mass of mode when rmed_g=exp(0.5*(lnr0+lnr1)) (ptcl^-1)</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">! X        : EXP((9/2)*LOG^2(SIGMA_G))</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">! NUM_EPS  : Value of NEWN below which don&#39;t recalculate MD (per cc)</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">!                                            or carry out process</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">! CP_SU    : Index of component containing SO4    component</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">! CP_OC    : Index of component containing 1st OC component</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">! CP_CL    : Index of component containing NaCl   component</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">! CP_SO    : Index of component containing 2nd OC component</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">! Inputted by module UKCA_SETUP_INDICES</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">! ! NCHEMG   : Number of gas phase tracers for gas phase chemistry scheme</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">! MM_GAS   : Array of molar masses for gas phase species (kg/mol)</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="keywordtype">USE </span>ukca_constants<span class="keywordtype">,       ONLY</span>: ppi, avc, conc_eps, rhow, mmw,    &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                      bconst, nu_h2so4, convert, rhosul</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="keywordtype">USE </span>ukca_mode_setup</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceukca__setup__indices.xhtml" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_setup_indices</a></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,              ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,             ONLY</span>: jprb, jpim</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">,          ONLY</span>: <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;          <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;          <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;     </div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">! Subroutine interface</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: NBOX</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: IWVOLMETHOD</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: VERBOSE</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: ND(nbox,nmodes)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: MD(nbox,nmodes,ncp)</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: MDT(nbox,nmodes)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: RH(nbox)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: DVOL(nbox,nmodes)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: DRYDP(nbox,nmodes)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: T(nbox)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: PMID(nbox)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: S(nbox)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>   :: MDWAT(nbox,nmodes)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>   :: WVOL(nbox,nmodes)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>   :: WETDP(nbox,nmodes)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>   :: RHOPAR(nbox,nmodes)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>   :: PVOL(nbox,nmodes,ncp)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>   :: PVOL_WAT(nbox,nmodes)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <span class="keywordtype">INTEGER</span> :: errcode                <span class="comment">! Variable passed to ereport</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      <span class="keywordtype">INTEGER</span> :: I</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <span class="keywordtype">INTEGER</span> :: IMODE</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      <span class="keywordtype">INTEGER</span> :: ICP</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      <span class="keywordtype">INTEGER</span> :: JJL(1)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      <span class="keywordtype">INTEGER</span> :: IIMODE</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      <span class="keywordtype">INTEGER</span> :: IICP</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      <span class="keywordtype">INTEGER</span> :: IERR(nbox)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      <span class="keywordtype">LOGICAL</span> :: MASK(nbox)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      <span class="keywordtype">LOGICAL</span> :: MASK_SOL(nbox)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      <span class="keywordtype">LOGICAL</span> :: MASK_NOSOL(nbox)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      <span class="keywordtype">LOGICAL</span> :: MASK_ERROR(nbox)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="keywordtype">LOGICAL</span> :: IONS(nbox,-nanion:ncation) <span class="comment">!ION PRESENCE SWITCHES</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <span class="keywordtype">REAL</span>    :: CORRH(nbox)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      <span class="keywordtype">REAL</span>    :: B(nbox)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      <span class="keywordtype">REAL</span>    :: MDSOL(nbox)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      <span class="keywordtype">REAL</span>    :: RHOSOL(nbox)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      <span class="keywordtype">REAL</span>    :: WC(nbox)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;      <span class="keywordtype">REAL</span>    :: WVOL_SOL(nbox)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      <span class="keywordtype">REAL</span>    :: RHOTMP(nbox)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      <span class="keywordtype">REAL</span>    :: RHOTMP2(nbox)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      <span class="keywordtype">REAL</span>    :: DENOM(nbox)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      <span class="keywordtype">REAL</span>    :: DENOM2(nbox)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;      <span class="keywordtype">REAL</span>    :: CBRT</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;      <span class="keywordtype">REAL</span>    :: WDPCUB(nbox)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      <span class="keywordtype">REAL</span>    :: PIOVRSIX</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      <span class="keywordtype">REAL</span>    :: SIXOVRPIX(nmodes)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;      <span class="keywordtype">REAL</span>    :: MDMM(nbox,ncp)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      <span class="keywordtype">REAL</span>    :: MM_OVRAVC(ncp)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      <span class="keywordtype">REAL</span>    :: MMWOVRAVC</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      <span class="keywordtype">REAL</span>    :: MM_OVRAVCRHOCP(ncp)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <span class="keywordtype">REAL</span>    :: MMWOVRAVCRHOW</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordtype">REAL</span>    :: MM_RHOCP(ncp)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;      <span class="keywordtype">REAL</span>    :: MMWRHOW</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;      <span class="keywordtype">REAL</span>    :: F_AO</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <span class="keywordtype">REAL</span>    :: CL(nbox,-nanion:ncation) <span class="comment">!ION CONCS (MOL/CC OF AIR)</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">! extra local vars for stratospheric calculation</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      <span class="keywordtype">REAL</span>    :: RP(nbox)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      <span class="keywordtype">REAL</span>    :: WTS(nbox)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      <span class="keywordtype">REAL</span>    :: RHOSOL_STRAT(nbox)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      <span class="keywordtype">REAL</span>    :: VPKEL(nbox)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      <span class="keywordtype">REAL</span>    :: MASSH2SO4KG(nbox)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      <span class="keywordtype">REAL</span>    :: MASSWATERKG(nbox)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordtype">CHARACTER(LEN=72)</span> :: cmessage</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: FHYG_AOM=0.65</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: MM_AGE_ORG=0.150</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: MM_POM=0.0168</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: PUTLS=1.5e4 <span class="comment">! set max pressure for UTLS region to 150hPa</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_VOLUME_MODE&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      <span class="keywordflow">IF</span>((iwvolmethod /= 1).AND.(iwvolmethod /= 2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;       cmessage=<span class="stringliteral">&#39; IWVOLMETHOD NOT 1 OR 2&#39;</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;       errcode=1</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;       <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_VOLUME_MODE&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">!at this point in the code, the value of RP does not matter</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      rp(:)=100.0e-9 <span class="comment">! dummy value</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">! DEPENDS ON: ukca_vapour</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="keyword">CALL </span><a class="code" href="ukca__vapour_8f90.xhtml#a14f834f57759406e4a0dddd6e653c61b" title="(c) [University of Leeds]. All rights reserved. ">ukca_vapour</a>(nbox,t,pmid,s,rp,vpkel,wts,rhosol_strat)</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">! Note that here we only want to get WTS and RHOSOL_STRAT which</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">!  are independent of particle size and composition -- so we only</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">!  need to call this once here -0- and VPKEL is not used.</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      piovrsix=ppi/6.0</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      sixovrpix(:)=1.0/(x(:)*piovrsix)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      mm_ovravc(:)=mm(:)/avc</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      mmwovravc   =mmw/avc</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      mm_ovravcrhocp(:)=mm_ovravc(:)/rhocomp(:)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      mmwovravcrhow    =mmwovravc/rhow</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      mm_rhocp(:)=mm(:)*rhocomp(:)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      mmwrhow    =mmw*rhow</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      denom(:)=0.0         <span class="comment">! define on all points to avoid error</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      denom2(:)=0.0</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">! Correct relative humidities to lie within the range of 10-90%</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;      corrh(:)=rh(:)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      <span class="keywordflow">WHERE</span> (corrh(:) &gt; 0.9) corrh(:)=0.9</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;      <span class="keywordflow">WHERE</span> (corrh(:) &lt; 0.1) corrh(:)=0.1</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      <span class="keywordflow">DO</span> imode=1,nmodes</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;       <span class="keywordflow">IF</span>(mode(imode)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        mask(:) =(nd(:,imode) &gt; num_eps(imode))</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="keywordflow">IF</span>(modesol(imode) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">! .. first calculate the total mass per particle over all soluble cpts</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;         mdsol(:)=0.0</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;         <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;          <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;           <span class="keywordflow">IF</span>(soluble(icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">! .. calculate total mass (in molecules per particle) of all solutes</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <span class="keywordflow">WHERE</span>(mask(:)) mdsol(:)=mdsol(:)+md(:,imode,icp)</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">! .. make mask &quot;MASK_SOL&quot;   for where ND&gt;NUM_EPS and some soluble mass</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">! .. make mask &quot;MASK_NOSOL&quot; for where ND&gt;NUM_EPS and no   soluble mass</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;         mask_sol(:) = (mask(:) .AND. (mdsol(:) &gt; 0.0))</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;         mask_nosol(:) = (mask(:) .AND. (mdsol(:) == 0.0))</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;         <span class="keywordflow">IF</span>(iwvolmethod == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment">! .. assume all soluble components are H2SO4 &amp; uses Kohler theory</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">!     Kohler equation is lnS=A/Dp - B/Dp^3</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">!     In sub-saturated environment, B/Dp^3 &gt; A/Dp</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">!     Reasonable assumption B/Dp^3 &gt;&gt; A/Dp for all but smallest ptcls</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">!     Then,   Dp=(-B/ln(rh))^(1/3)</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">!       or  volp=-(pi/6)*B/ln(rh)</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">!     (CONVERT converts from micron^3 to m^3 in B term, see S&amp;P pg 787).</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;          <span class="keywordflow">WHERE</span>(mask(:))</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;           b(:)=bconst*nu_h2so4*mdsol(:)/avc</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;           wvol_sol(:)=-piovrsix*b(:)/log(corrh(:))*convert</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">! .. Calculate the volume of the solution WVOL_SOL</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keywordflow">          ENDWHERE</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;          <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;           <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            <span class="keywordflow">IF</span>(.NOT.soluble(icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;             <span class="keywordflow">WHERE</span>(mask(:))</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;              pvol(:,imode,icp)=md(:,imode,icp)*mm_ovravcrhocp(icp)</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">! .. Calculate partial volumes of the insoluble components</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;              wvol(:,imode)=wvol_sol(:)+pvol(:,imode,icp)</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">! .. Wet volume set as solution volume plus insoluble cpt partial volumes</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keywordflow">             ENDWHERE</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;          <span class="keywordflow">WHERE</span>(mask(:))</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;           mdwat(:,imode)=(wvol(:,imode)-dvol(:,imode))/mmwovravcrhow</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">! .. Water content calculated from difference between dry &amp; wet volumes</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;           denom(:)=mdwat(:,imode)*mmw</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;           rhotmp(:)=mdwat(:,imode)*mmwrhow</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">! .. Set initial value of DENOM &amp; RHOTMP for density calculation</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">! .. note only need to define DENOM,RHOTMP where MASK(:)</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;          <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">! below is for gridboxes with ND&lt;NUM_EPS</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">! -- define DENOM,RHOTMP,DENOM2,RHOTMP2=0 (they will not be used)</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;           mdwat(:,imode)=0.0</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;           denom(:)=0.0</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;           rhotmp(:)=0.0</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;           denom2(:)=0.0</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;           rhotmp2(:)=0.0</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keywordflow">          ENDWHERE</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;          <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;           <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            <span class="keywordflow">WHERE</span>(mask(:))</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;             mdmm(:,icp)=md(:,imode,icp)*mm(icp)</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;             rhotmp(:)=rhotmp(:)+md(:,imode,icp)*mm_rhocp(icp)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;             denom(:)=denom(:)+mdmm(:,icp)</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">! .. increment RHOTMP &amp; DENOM by each component for density calculation</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="keywordflow">            ENDWHERE</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;          <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;           <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="keywordflow">IF</span>(soluble(icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;             <span class="keywordflow">WHERE</span>(mask_sol(:))</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;              pvol(:,imode,icp)=mdmm(:,icp)*wvol_sol(:)/denom(:)</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">! .. Calculate partial volume of soluble components as fraction of</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">! .. solution volume according to fraction of total mass (including water)</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;             <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;              pvol(:,imode,icp)=dvol(:,imode)*mfrac_0(imode,icp)</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">! where ND&lt;NUM_EPS, over-write PVOL with default value</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keywordflow">             ENDWHERE</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;             <span class="keywordflow">WHERE</span>(mask_nosol(:))</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;              pvol(:,imode,icp)=0.0</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">! .. In case where soluble mode has some insoluble cpt mass but no soluble</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">! .. component mass, DENOM=0.0 so just set PVOL for soluble cpt =0.0 here</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="keywordflow">             ENDWHERE</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;          <span class="keywordflow">WHERE</span>(mask_sol(:))</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;           pvol_wat(:,imode)=mdwat(:,imode)*mmw*wvol_sol(:)/denom(:)</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">! .. Calculate partial volume of water as fraction of</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">! .. solution volume according to fraction of total mass (including water)</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;           rhopar(:,imode)=rhotmp(:)/denom(:)</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">! .. RHOPAR total particle density [including H2O &amp; insoluble cpts] (kgm^-3)</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">! .. Calculated according to mass-weighted average of cpt &amp; water densities</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;          <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;           pvol_wat(:,imode)=0.0</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;           wvol(:,imode)=dvol(:,imode)</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;           rhopar(:,imode)=rhosul</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">! where ND&lt;NUM_EPS, set PVOL_WAT=0.0, set WVOL=DVOL and RHOPAR=RHOSUL</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="keywordflow">          ENDWHERE</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="keywordflow">         END IF</span> <span class="comment">! if IWVOLMETHOD = 1</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;         f_ao=mm_age_org/mm_pom</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;         <span class="keywordflow">IF</span>(iwvolmethod == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">! .. Use composition information to calculate water uptake by</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment">! .. each component according to ZSR using water activity data from</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">! .. Jacobsen page 610 (Table B.10) for binary electrolyte molalities</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment">!***********************************************************************</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment">!**  Liquid Phase Species:</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">!**</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment">!**  **Cations**           **Anions**             **Neutrals**</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment">!**  1: H                  -1: HSO4               0: H2O</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment">!**  2: NH4                -2: SO4</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">!**  3: Na                 -3: NO3</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment">!**                        -4: Cl</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">!***********************************************************************</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;          mask(:) =(nd(:,imode) &gt; num_eps(imode))</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;          <span class="keywordflow">DO</span> i=-nanion,ncation</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;           cl(:,i)=0.0 <span class="comment">! set all concentrations to zero initially</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;          <span class="keywordflow">IF</span>(component(imode,cp_su)) <span class="keywordflow">THEN</span> <span class="comment">! assume all H2SO4 --&gt; SO4</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;           cl(:,-2)=md(:,imode,cp_su)/avc   <span class="comment">! [SO4] in moles/cc (air)</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;          <span class="keywordflow">IF</span>(component(imode,cp_so)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;           cl(:,-2)=cl(:,-2)+(fhyg_aom/avc)*(md(:,imode,cp_so)/f_ao)</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">! .. Increment concentration of SO4 ions to represent the</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">! .. presence of hygroscopic aged organic aerosol mass in CP_SO.</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment">! .. Assume it has uptake behaviour at fraction FHYG_AOM of SO4.</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment">! .. Need to divide by F_AO because MD of CP_SO is in &quot;moles&quot; of POM</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="comment">! .. whereas CL needs to be in moles of aged organic (MM=0.15kg/mol).</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;          <span class="keywordflow">IF</span>(component(imode,cp_oc)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;           cl(:,-2)=cl(:,-2)+(fhyg_aom/avc)*(md(:,imode,cp_oc)/f_ao)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment">! .. Increment concentration of SO4 ions to represent the</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment">! .. presence of hygroscopic aged organic aerosol mass in CP_OC.</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment">! .. Assume it has uptake behaviour at fraction FHYG_AOM of SO4.</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">! .. Need to divide by F_AO because MD of CP_OC is in &quot;moles&quot; of POM</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment">! .. whereas CL needs to be in moles of aged organic (MM=0.15kg/mol).</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="comment">! .. This effectively says that by the time the primary carbonaceous</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="comment">! .. aerosol has been microphysically aged to the soluble mode, the</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">! .. organic component has been chemically aged to become hygroscopic.</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">! .. (it is assumed to be water-insoluble in the insoluble mode)</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;          <span class="keywordflow">IF</span>(component(imode,cp_cl)) <span class="keywordflow">THEN</span> <span class="comment">! assume complete dissociation</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;           cl(:,3)=md(:,imode,cp_cl)/avc  <span class="comment">! [Na] in moles per cc (air)</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;           cl(:,-4)=md(:,imode,cp_cl)/avc <span class="comment">! [Cl] in moles per cc (air)</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">! SET H+ FOR CHARGE BALANCE  -- CL(1) is [H] in moles per cc(air)</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;          cl(:,1)=max((2.0*cl(:,-2)+cl(:,-1)+cl(:,-3)+cl(:,-4)          &amp;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                       -cl(:,2)-cl(:,3)),0.0)</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;          <span class="keywordflow">DO</span> i=-nanion,ncation</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;           ions(:,i)=(cl(:,i) &gt; 0.)</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">! DEPENDS ON: ukca_water_content_v</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;          <span class="keyword">CALL </span><a class="code" href="ukca__water__content__v_8f90.xhtml#ad987d2fabe7edd132c04ead9312c33ee" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_water_content_v</a>(nbox,mask,cl,corrh,ions,wc)</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;          <span class="keywordflow">WHERE</span>(mask(:)) mdwat(:,imode)=wc(:)*avc</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">! over-write MDWAT in strat with value from WTS retured from UKCA_VAPOUR</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;          <span class="keywordflow">WHERE</span>(mask(:).AND.(pmid(:).LT.putls)) <span class="comment">! P&lt;PUTLS</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;           massh2so4kg(:)=md(:,imode,cp_su)*mm(cp_su)/avc <span class="comment">! in kg/particle</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;           masswaterkg(:)=(100.0/wts(:)-1.0)*massh2so4kg(:) <span class="comment">! kg/ptcl</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;           mdwat(:,imode)=masswaterkg(:)/mmwovravc <span class="comment">! in molecules per particle</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="keywordflow">          ENDWHERE</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;          <span class="keywordflow">WHERE</span>(mask(:))</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="comment">! .. calculate solution density (avg over each cpt mass contribution)</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;           rhotmp(:)=mdwat(:,imode)*mmwrhow</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;           rhotmp2(:)=rhotmp(:)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;           denom(:)=mdwat(:,imode)*mmw</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;           denom2(:)=denom(:)</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="comment">! .. note only need to define DENOM,DENOM2,RHOTMP,RHOTMP2 where MASK(:)</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;          <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;           mdwat(:,imode)=0.0</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment">! .. set MDWAT to be zero where ND&lt;NUM_EPS</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;           rhotmp(:)=0.0</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;           denom(:)=0.0</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;           rhotmp2(:)=0.0</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;           denom2(:)=0.0</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="comment">! .. also set RHOTMP,DENOM,RHOTMP2,DENOM2=0 (they will not be used)</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="keywordflow">          ENDWHERE</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;          <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;           <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            <span class="keywordflow">IF</span>(soluble(icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;             <span class="keywordflow">WHERE</span>(mask(:))</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;              rhotmp(:)=rhotmp(:)+md(:,imode,icp)*mm_rhocp(icp)</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;              denom(:)=denom(:)+md(:,imode,icp)*mm(icp)</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="keywordflow">             ENDWHERE</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            <span class="keywordflow">WHERE</span>(mask(:))</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;             rhotmp2(:)=rhotmp2(:)+md(:,imode,icp)*mm_rhocp(icp)</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;             denom2(:)=denom2(:)+md(:,imode,icp)*mm(icp)</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="keywordflow">            ENDWHERE</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment">! .. RHOSOL is density of ptcl solution [exclud. insoluble cpts] (kgm/3)</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment">!  .. section below added to check for DENOM &lt;= 0.0 or DENOM2 &lt;= 0.0</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;          mask_error(:)= (mask_sol(:) .AND. (denom(:) &lt;= 0.0))</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;          ierr(:)=0</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;          <span class="keywordflow">WHERE</span>(mask_error(:))</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;           ierr(:)=1</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="keywordflow">          ENDWHERE</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;          <span class="keywordflow">IF</span>(<a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(ierr(:)) &gt; 0) <span class="keywordflow">THEN</span> <span class="comment">! error (DENOM&lt;=0 when some soluble cpt)</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;           <span class="keywordflow">DO</span> i=1,nbox</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            <span class="keywordflow">IF</span>((mask(i)).AND.(denom(i) &lt;= 0.0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;             cmessage = <span class="stringliteral">&#39;DENOM(I) &lt;= 0.0&#39;</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;             <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) cmessage</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;             <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;             <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;I,RHOTMP(I),DENOM(I),MASK(I) =&#39;</span>,               &amp;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                                       i,rhotmp(i),denom(i),mask(i)</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;             <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;             <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;IMODE,MODESOL(IMODE),ND(I,IMODE)&#39;</span>,             &amp;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                        <span class="stringliteral">&#39;NUM_EPS(IMODE)=&#39;</span>,                              &amp;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                        imode,modesol(imode),nd(i,imode),num_eps(imode)</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;             <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;             <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;              <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;               <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;ICP,MM(ICP),MM_RHOCP(ICP),MD(I,IMODE,ICP)=&#39;</span>,  &amp;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                       icp,mm(icp),mm_rhocp(icp),md(i,imode,icp)</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;               <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="keywordflow">             ENDDO</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;             <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;MDWAT(I,IMODE),MMW=&#39;</span>,mdwat(i,imode),mmw</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;             <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;             errcode=1</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;             <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_VOLUME_MODE&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="keywordflow">            END IF</span> <span class="comment">! if DENOM(I) &lt;= 0.0</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            <span class="keywordflow">IF</span>((mask(i)).AND.(denom2(i) &lt;= 0.0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;             cmessage = <span class="stringliteral">&#39;DENOM2(I) &lt;= 0.0&#39;</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;             <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;I,RHOTMP2(I),DENOM2(I),MASK(I)=&#39;</span>,              &amp;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                         i,rhotmp2(i),denom2(i),mask(i)</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;             <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;             <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;MODE,MODESOL(IMODE)=&#39;</span>,imode,modesol(imode)</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;             <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;             <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;              <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;               <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;ICP,MM(ICP),MM_RHOCP(ICP),MD(I,IMODE,ICP)=&#39;</span>,  &amp;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                       icp,mm(icp),mm_rhocp(icp),md(i,imode,icp)</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;               <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="keywordflow">             END DO</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;             <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;MDWAT(I,IMODE),MMW=&#39;</span>,mdwat(i,imode),mmw</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;             <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;             errcode=1</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;             <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_VOLUME_MODE&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="keywordflow">            END IF</span> <span class="comment">! if DENOM2(I) &lt;= 0.0</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="keywordflow">           END DO</span> <span class="comment">! loop over NBOX (I)</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="comment">! .. where ND&gt;NUM_EPS and there is some soluble material</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;          <span class="keywordflow">WHERE</span>(mask_sol(:))</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;           rhosol(:)=rhotmp(:)/denom(:)</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="comment">! .. only need to define RHOSOL where ND&gt;NUM_EPS and MDSOL&gt;0 (MASK_SOL)</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="keywordflow">          ENDWHERE</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="comment">!  over-write RHOSOL in strat with RHOSOL_STRAT from UKCA_VAPOUR</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;          <span class="keywordflow">WHERE</span>(mask_sol(:).AND.(pmid(:).LT.putls)) <span class="comment">! P&lt;PUTLS</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;           rhosol(:)=rhosol_strat(:)</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="keywordflow">          ENDWHERE</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;          wvol(:,imode)=0.0        <span class="comment">! initialise wet volume to zero</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;          <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;           <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            <span class="keywordflow">IF</span>(soluble(icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;             <span class="keywordflow">WHERE</span>(mask_sol(:))</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;              pvol(:,imode,icp)=md(:,imode,icp)*mm_ovravc(icp)/rhosol(:)</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment">! .. for soluble cpts set PVOL according to cpt mass and solution density</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;              wvol(:,imode)=wvol(:,imode)+pvol(:,imode,icp)</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;             <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;              pvol(:,imode,icp)=dvol(:,imode)*mfrac_0(imode,icp)</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment">! where ND&lt;NUM_EPS, over-write PVOL with default value</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="keywordflow">             ENDWHERE</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;             <span class="keywordflow">WHERE</span>(mask_nosol(:))</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;              pvol(:,imode,icp)=0.0</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="comment">! .. In case where soluble mode has some insoluble cpt mass but no soluble</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="comment">! .. component mass, DENOM=0.0 so just set PVOL for soluble cpt =0.0 here</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="keywordflow">             ENDWHERE</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;             <span class="keywordflow">WHERE</span>(mask(:))</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;              pvol(:,imode,icp)=md(:,imode,icp)*mm_ovravcrhocp(icp)</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="comment">! .. for insoluble cpts set PVOL according to cpt mass and cpt density</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;              wvol(:,imode)=wvol(:,imode)+pvol(:,imode,icp)</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;             <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;              pvol(:,imode,icp)=dvol(:,imode)*mfrac_0(imode,icp)</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="comment">! where ND&lt;NUM_EPS, over-write PVOL with default value</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="keywordflow">             ENDWHERE</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="comment">! .. initially set WVOL to sum of partial volumes of each component</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;          <span class="keywordflow">WHERE</span>(mask_sol(:))</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;           pvol_wat(:,imode)=mdwat(:,imode)*mmwovravc/rhosol(:)</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment">! .. for water, set PVOL according to water mass and solution density</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;           wvol(:,imode)=wvol(:,imode)+pvol_wat(:,imode)</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment">! .. add on partial volume of water to give total wet volume</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;           rhopar(:,imode)=rhotmp2(:)/denom2(:)</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="comment">! .. RHOPAR is total particle density [incl H2O &amp; insoluble cpts] (kgm^-3)</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="comment">! .. calculated as mass-weighted mean of component &amp; water densities</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;          <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;           pvol_wat(:,imode)=0.0</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;           wvol(:,imode)=dvol(:,imode)</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;           rhopar(:,imode)=rhosul</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="comment">! where ND&lt;NUM_EPS, set PVOL_WAT=0.0, set WVOL=DVOL and RHOPAR=RHOSUL</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="keywordflow">          ENDWHERE</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="keywordflow">         END IF</span> <span class="comment">! if IWVOLMETHOD=2</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        <span class="keywordflow">ELSE</span>  <span class="comment">! if mode not soluble</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="comment">! where mode not soluble, set PVOL_WAT=0.0, set WVOL=DVOL and MDWAT=0.0</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;         pvol_wat(:,imode)=0.0</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;         wvol(:,imode)=dvol(:,imode)</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;         mdwat(:,imode)=0.0</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;         <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;          <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;           pvol(:,imode,icp)=md(:,imode,icp)*mm_ovravcrhocp(icp)</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;<span class="comment">! .. all cpts insoluble in insoluble modes,</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="comment">! .. so set PVOL according to cpt mass &amp; cpt density</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;         rhotmp2(:)=0.0</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;         denom2(:)=0.0</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;         <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;          <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;           <span class="keywordflow">WHERE</span>(mask(:))</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;            rhotmp2(:)=rhotmp2(:)+md(:,imode,icp)*mm_rhocp(icp)</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            denom2(:)=denom2(:)+md(:,imode,icp)*mm(icp)</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="keywordflow">           ENDWHERE</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;         <span class="keywordflow">WHERE</span>(mask(:))</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;          rhopar(:,imode)=rhotmp2(:)/denom2(:)</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;<span class="comment">! .. RHOPAR is total particle density [here only insoluble cpts] (kgm^-3)</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;<span class="comment">! .. calculated as mass-weighted mean of component densities</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;         <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;          rhopar(:,imode)=rhosul</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="comment">! .. if insignificant # of particles, set density to default value</span></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;<span class="keywordflow">         ENDWHERE</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! if mode is soluble</span></div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;       <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="comment">! .. set PVOL_WAT=MDWAT=0.0 and WVOL=DVOL if mode not present</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;        pvol_wat(:,imode)=0.0</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        wvol(:,imode)=dvol(:,imode)</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        mdwat(:,imode)=0.0</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="comment">! .. set density to default value if mode not present</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        rhopar(:,imode)=rhosul</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;         <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;          pvol(:,imode,icp)=dvol(:,imode)*mfrac_0(imode,icp)</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;<span class="comment">! .. set partial volume to default value if mode not present</span></div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="keywordflow">       END IF</span> <span class="comment">! if(mode(imode))</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;      <span class="keywordflow">DO</span> imode=1,nmodes</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;       <span class="keywordflow">IF</span>(mode(imode)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        wdpcub(:)=sixovrpix(imode)*wvol(:,imode)</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;        wetdp(:,imode)=wdpcub(:)**(1.0/3.0)</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;       <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;        wetdp(:,imode)=drydp(:,imode)</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="keywordflow">       END IF</span>  <span class="comment">! if(mode(imode))</span></div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! loop over modes</span></div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;      <span class="keywordflow">DO</span> imode=1,nmodes</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;       <span class="keywordflow">IF</span>((minval(wetdp(:,imode)) &lt;= 0.0).OR.                          &amp;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;          (minval(drydp(:,imode)) &lt;= 0.0).OR.                          &amp;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;          (minval(wvol(:,imode)) &lt;= 0.0).OR.                          &amp;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;          (minval(dvol(:,imode)) &lt;= 0.0).OR.                          &amp;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;          (minval(rhopar(:,imode)) &lt;= 0.0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        cmessage=<span class="stringliteral">&#39;Minval &lt;= 0 - See output&#39;</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Error in VOLUME_MODE&#39;</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;wetdp/drydp/wvol/dvol/rhopar &lt;= 0&#39;</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;In Volume_mode: MDWAT (min,max,sum), IMODE=&#39;</span>,imode</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) minval(mdwat(:,imode)),maxval(mdwat(:,imode)),       &amp;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;                   <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(mdwat(:,imode))</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Location of min: &#39;</span>,minloc(mdwat(:,imode))</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Location of max: &#39;</span>,maxloc(mdwat(:,imode))</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;In Volume_mode: wetdp (min,max,sum)&#39;</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) minval(wetdp(:,imode)),maxval(wetdp(:,imode)),       &amp;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                   <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(wetdp(:,imode))</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Location of min: &#39;</span>,minloc(wetdp(:,imode))</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Location of max: &#39;</span>,maxloc(wetdp(:,imode))</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;In Volume_mode: drydp (min,max,sum)&#39;</span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) minval(drydp(:,imode)),maxval(drydp(:,imode)),       &amp;</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;                   <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(drydp(:,imode))</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Location of min: &#39;</span>,minloc(drydp(:,imode))</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Location of max: &#39;</span>,maxloc(drydp(:,imode))</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;In Volume_mode: rhopar(min,max,sum)&#39;</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) minval(rhopar(:,imode)),maxval(rhopar(:,imode)),     &amp;</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;                   <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(rhopar(:,imode))</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Location of min: &#39;</span>,minloc(rhopar(:,imode))</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Location of max: &#39;</span>,maxloc(rhopar(:,imode))</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;In Volume_mode: dvol(min,max,sum)&#39;</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) minval(dvol(:,imode)),maxval(dvol(:,imode)),       &amp;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                   <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(dvol(:,imode))</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Location of min: &#39;</span>,minloc(dvol(:,imode))</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Location of max: &#39;</span>,maxloc(dvol(:,imode))</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;In Volume_mode: wvol(min,max,sum)&#39;</span></div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) minval(wvol(:,imode)),maxval(wvol(:,imode)),       &amp;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                   <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(wvol(:,imode))</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Location of min: &#39;</span>,minloc(wvol(:,imode))</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Location of max: &#39;</span>,maxloc(wvol(:,imode))</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;        jjl=minloc(wvol(:,imode))</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;        <span class="keywordflow">DO</span> iimode=1,nmodes</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;         <span class="keywordflow">IF</span>(mode(iimode)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(1a14,1i5,2e15.6)&#39;</span>) <span class="stringliteral">&#39;IIMODE,ND,MDT=&#39;</span>,                &amp;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;                             iimode,nd(jjl(1),iimode),mdt(jjl(1),iimode)</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;          <span class="keywordflow">DO</span> iicp=1,ncp</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;           <span class="keywordflow">IF</span>(component(iimode,iicp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(1a17,2i5,1e15.6)&#39;</span>) <span class="stringliteral">&#39;IIMODE,IICP,MD()=&#39;</span>,           &amp;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                           iimode,iicp,md(jjl(1),iimode,iicp)</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_volume_mode&#39;</span>)</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;<span class="keywordflow">           END IF</span> <span class="comment">! if component present in mode (IICP)</span></div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! loop over cpts (IICP)</span></div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;<span class="keywordflow">         END IF</span> <span class="comment">! if mode present (IIMODE)</span></div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! loop over modes (IIMODE)</span></div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;        errcode=1</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_VOLUME_MODE&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;<span class="keywordflow">       END IF</span> <span class="comment">! if wetdp/drydp/wvol/dvol/rhopar &lt;= 0</span></div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! loop over modes</span></div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_VOLUME_MODE&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="ukca__volume__mode_8f90.xhtml#af3dc5907e8940a43bb8ef2aee9a63993" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_volume_mode</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
