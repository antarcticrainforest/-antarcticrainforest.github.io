<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/layer_cn_mod-6a.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">layer_cn_mod-6a.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="layer__cn__mod-6a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespacelayer__cn__6a__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacelayer__cn__6a__mod.xhtml" title="Calculates layer dependent constants. ">layer_cn_6a_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacelayer__cn__6a__mod.xhtml#a6e67333abc120f3a7cff5f4da5798656" title="Calculates the following layer dependent constants: ">layer_cn_6a</a>(k, npnts, nlev,                                  &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                       mdet_on,                                         &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                       ntml, ntpar,                                     &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                       exner_layer_boundaries, exner_layer_centres,     &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                       p_layer_boundaries, p_layer_centres,             &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                       z_rho,                                           &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                       recip_pstar, entrain_coef, rhum,                 &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                       zk, zkp12, zkp1,                                 &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                       thek, qek, thekp1, qekp1,                        &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                       thpk, qpk,                                       &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                       wsc_o_mb,                                        &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                       l_shallow, l_congestus, l_deep,                  &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                       bconv,                                           &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                       ! Out</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                       pk, pkp1, exk, exkp1,                            &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                       delpk, delpkp12, delpkp1,                        &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                       delp_uv_k, delp_uv_kp1,                          &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                       ekp14, ekp34, amdetk                             &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                       )</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="namespacelayer__cn__6a__mod.xhtml#a6e67333abc120f3a7cff5f4da5798656">   47</a></span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: cp</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__run__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_run_mod</a><span class="keywordtype">, ONLY</span>:                                                   &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#af08ccf5d1620e011f2de9772da8763fb">ent_fac_dp</a>, <a class="code" href="namespacecv__run__mod.xhtml#a522133df1b9eb4d1288bd9fa0563de5a">ent_fac_md</a>, <a class="code" href="namespacecv__run__mod.xhtml#a37da6c276c5e0c1be49f68daf550887d">amdet_fac</a>, <a class="code" href="namespacecv__run__mod.xhtml#ab1d28ae7d556e487333b62b39e45e05d">ent_opt_dp</a>, <a class="code" href="namespacecv__run__mod.xhtml#a026f533f2afe310d9ed7e72eef7c88b7">ent_opt_md</a>,          &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#a640e7a0050ee80e003db7b5426a2ec81">ent_dp_power</a>, <a class="code" href="namespacecv__run__mod.xhtml#ab1f7d2b3167cba1d077a8c33846e8ed6">ent_md_power</a>, <a class="code" href="namespacecv__run__mod.xhtml#a30d8a48861997bce840c606c91b18dfe">mdet_opt_dp</a>, <a class="code" href="namespacecv__run__mod.xhtml#a5fea1dcfdbe431050f3fd9e4b0354a57">icvdiag</a></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__param__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_param_mod</a><span class="keywordtype">, ONLY</span>: ae2, <a class="code" href="namespacecv__param__mod.xhtml#ae383ac8dc01a116f25a3ab4e5aedafc4">refdepth_dp</a></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__dependent__switch__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_dependent_switch_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecv__dependent__switch__mod.xhtml#af485791f0145456f7f8416de7c10696b" title="Module containing extra switches set dependent on convection namelist variables read in at the start ...">l_var_entrain</a>, <a class="code" href="namespacecv__dependent__switch__mod.xhtml#a50df0b2cc671723ae757efaeb813269f">l_new_det</a>,            &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="namespacecv__dependent__switch__mod.xhtml#ab121f10cc75127f7014ee706689b4c10">l_const_ent</a>, <a class="code" href="namespacecv__dependent__switch__mod.xhtml#a6a0879b7a28fdcb71d673d1c76810d94">sh_grey</a></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceentcoef__mod.xhtml">entcoef_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: lc, lf</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;-<span class="comment">! Subroutine arguments</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;-</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;-<span class="comment">! Variables which are input</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;-<span class="comment">! Vector lengths and loop counters</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: k             <span class="comment">! present model layer</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: npnts         <span class="comment">! Number of points</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: nlev          <span class="comment">! Number of model levels for calculations</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: mdet_on       <span class="comment">! flag for adaptive mixing detrainment</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                    <span class="comment">!  on = 1, off = 0</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: ntml(npnts)   <span class="comment">! Number of levels in the surface-based</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                    <span class="comment">! turbulently mixed layer</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keywordtype">INTEGER</span>,<span class="keywordtype">INTENT(IN)</span> :: ntpar(npnts)  <span class="comment">! Top of initial parcel ascent</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;     <span class="comment">! Field on model levels</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: exner_layer_boundaries(npnts,0:nlev) <span class="comment">! Exner ratio at layer</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                                        <span class="comment">! boundary starting                                                        ! at level k-1/2</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: exner_layer_centres(npnts,0:nlev)    <span class="comment">! Exner function                                                        ! at layer centre</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: p_layer_centres(npnts,0:nlev)        <span class="comment">! Pressure                                                        ! at layer centre (Pa)</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: p_layer_boundaries(npnts,0:nlev)     <span class="comment">! Pressure</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                                        <span class="comment">! at layer boundary (Pa)</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: z_rho(npnts,nlev)                    <span class="comment">! height of rho levels</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                                        <span class="comment">! (m)</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: recip_pstar(npnts) <span class="comment">! Reciprocal of pstar array (1/Pa)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: entrain_coef(npnts)<span class="comment">! entrainment coefficients</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: rhum(npnts)        <span class="comment">! Relative humidity at level K</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: zk(npnts)          <span class="comment">! height on k</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: zkp12(npnts)       <span class="comment">! height on k+1/2</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: zkp1(npnts)        <span class="comment">! height on k+1</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: thek(npnts)        <span class="comment">! theta for environment on k</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qek(npnts)         <span class="comment">! q for environment on k</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: thekp1(npnts)      <span class="comment">! theta for environment on k+1</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qekp1(npnts)       <span class="comment">! q for environment on k+1</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: thpk(npnts)        <span class="comment">! parcel theta on k</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: qpk(npnts)         <span class="comment">! parcel q on k</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(IN)</span> :: wsc_o_mb(npnts)    <span class="comment">! Convective velocity scale divided                                      ! by cloud base mass flux mb</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: l_shallow       <span class="comment">! indicator all points are shallow</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: l_congestus     <span class="comment">! indicator all points are congestus</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: l_deep          <span class="comment">! indicator all points are deep</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keywordtype">LOGICAL</span>,<span class="keywordtype">INTENT(IN)</span> :: bconv(npnts)    <span class="comment">! Mask for points at which</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                      <span class="comment">! convection is occurring</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;-<span class="comment">! Variables which are output</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;-<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: pk(npnts)         <span class="comment">! pressure at mid-point of layer k (Pa)</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: pkp1(npnts)       <span class="comment">! pressure at mid-point of layer k+1 (Pa)</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: exk(npnts)        <span class="comment">! Exner ratio at mid-point of layer k</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: exkp1(npnts)      <span class="comment">! Exner ratio at mid-point of layer k+1</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: delpk(npnts)      <span class="comment">! pressure difference across layer k (Pa)</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: delpkp12(npnts)   <span class="comment">! pressure diff. across layer k+1/2 (Pa)</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: delpkp1(npnts)    <span class="comment">! pressure diff. across layer k+1 (Pa)</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: delp_uv_k(npnts)  <span class="comment">! pressure difference across UV                                      ! layer k (Pa)</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: delp_uv_kp1(npnts)<span class="comment">! pressure difference across UV</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                      <span class="comment">! layer k+1 (Pa)</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: ekp14(npnts)    <span class="comment">! Entrainment coefficient at level k+1/4</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                    <span class="comment">! multiplied by appropriate layer thickness</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: ekp34(npnts)    <span class="comment">! Entrainment coefficient at level k+3/4                                    ! multiplied by appropriate layer thickness</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">INTENT(OUT)</span> :: amdetk(npnts)   <span class="comment">! Mixing detrainment coefficient at level k                                    ! multiplied by appropriate layer thickness</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;-<span class="comment">! Local variables</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;-</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordtype">INTEGER</span> :: i              <span class="comment">! loop counter</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordtype">REAL</span> :: aekp14            <span class="comment">! Used in calculation of entrainment rate</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keywordtype">REAL</span> :: aekp34            <span class="comment">! Used in calculation of entrainment rate</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keywordtype">REAL</span> :: pkp12(npnts)      <span class="comment">! Pressure at upper boundary of layer k (Pa)</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keywordtype">REAL</span> :: pntml(npnts)      <span class="comment">! Pressure at upper boundary of layer ntml (Pa)</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordtype">REAL</span> :: delp_cld(npnts)   <span class="comment">! thickness of cloud layer (Pa)</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keywordtype">REAL</span> :: delz_cld(npnts)   <span class="comment">! thickness of cloud layer (m)</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordtype">REAL</span> :: delpkp14(npnts)   <span class="comment">! thickness of layer for k+1/4 (Pa)</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordtype">REAL</span> :: delpkp34(npnts)   <span class="comment">! thickness of layer for k+3/4 (Pa)</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keywordtype">REAL</span> :: amdet_func(npnts) <span class="comment">! detrainment function of RH</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordtype">REAL</span> :: tmp_entrain_coef(npnts)<span class="comment">! entrainment coefficients</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keywordtype">REAL</span> :: r_mdet_depth      <span class="comment">! Reciprocal of the scale depth used in variable</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                          <span class="comment">! mixing detrainment calculation (m^-1)</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordtype">REAL</span> :: mdet_fac          <span class="comment">! constant used in mixing detrainment calculation</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                          <span class="comment">! (unitless)</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordtype">REAL</span> :: factorREAL :: factor1REAL :: factor2</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LAYER_CN&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;-<span class="comment">! Initialise entrainment and detrainment rates to zero and hence they</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">! will default to 0.0 if not explicitly set.</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;-<span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  ekp14(i)  = 0.0</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  ekp34(i)  = 0.0</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  amdetk(i) = 0.0</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;-<span class="comment">! Set constant ae used in calculation of entrainment and detrainment</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">! rates depending upon level.</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;-<span class="keywordflow">IF</span> (l_deep) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="comment">!Deep only</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  aekp14 = <a class="code" href="namespacecv__run__mod.xhtml#af08ccf5d1620e011f2de9772da8763fb">ent_fac_dp</a>*ae2</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  aekp34 = <a class="code" href="namespacecv__run__mod.xhtml#af08ccf5d1620e011f2de9772da8763fb">ent_fac_dp</a>*ae2</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="comment">!Used only for mid-level</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  aekp14 = <a class="code" href="namespacecv__run__mod.xhtml#a522133df1b9eb4d1288bd9fa0563de5a">ent_fac_md</a>*ae2</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  aekp34 = <a class="code" href="namespacecv__run__mod.xhtml#a522133df1b9eb4d1288bd9fa0563de5a">ent_fac_md</a>*ae2</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">! Calculate pressurea and pressure thicknesses</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">! NB pressure differences are calculated at k+1 - k to give positive</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">! thicknesses.</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  pk(i)           = p_layer_centres(i,k)</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  pkp12(i)        = p_layer_boundaries(i,k)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  pkp1(i)         = p_layer_centres(i,k+1)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  exk(i)          = exner_layer_centres(i,k)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  exkp1(i)        = exner_layer_centres(i,k+1)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  delpk(i)        = p_layer_boundaries(i,k-1)   - p_layer_boundaries(i,k)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  delpkp1(i)      = p_layer_boundaries(i,k)     - p_layer_boundaries(i,k+1)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  delpkp12(i)     = pk(i)                       - pkp1(i)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  delpkp14(i)     = pk(i)                       - p_layer_boundaries(i,k)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  delpkp34(i)     = p_layer_boundaries(i,k)     - pkp1(i)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  delp_uv_k(i)    = p_layer_centres(i,k-1)      - p_layer_centres(i,k)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  delp_uv_kp1(i)  = p_layer_centres(i,k)        - p_layer_centres(i,k+1)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;     <span class="keywordflow">IF</span> (l_shallow) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">! Cloud thickness  - only used for shallow convection</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    delp_cld(i)  = p_layer_boundaries(i,ntml(i)) -                      &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                   p_layer_boundaries(i,ntpar(i))</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    pntml(i)     = p_layer_boundaries(i,ntml(i))</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordflow">IF</span> (l_deep .AND. (<a class="code" href="namespacecv__run__mod.xhtml#a30d8a48861997bce840c606c91b18dfe">mdet_opt_dp</a> == 2 .OR. <a class="code" href="namespacecv__run__mod.xhtml#ab1d28ae7d556e487333b62b39e45e05d">ent_opt_dp</a> == 4 .OR.            &amp;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                  <a class="code" href="namespacecv__run__mod.xhtml#ab1d28ae7d556e487333b62b39e45e05d">ent_opt_dp</a> == 5)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">! Cloud thickness  - only used for deep convection with particular options.</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    delz_cld(i)  = z_rho(i,ntpar(i)+1)-z_rho(i,ntml(i)+1)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">! Calculate entrainment coefficients multiplied by approppriate</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">! layer thickness.</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">! Shallow convection entrainment coefficients</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">! Exponential decrease of entrainment rate with height above NTPAR! is stopped to ensure massflux continues to decrease! significantly with height (characteristic of shallow)</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keywordflow">IF</span> (l_shallow) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__dependent__switch__mod.xhtml#a6a0879b7a28fdcb71d673d1c76810d94">sh_grey</a> == 0) <span class="keywordflow">THEN</span>   <span class="comment">! Original entrainment rates</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;      <span class="keywordflow">IF</span> (k &gt;= ntml(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        ekp14(i) = wsc_o_mb(i) * delpkp14(i) * 0.03 * exp( -1.0*min( 1.0, &amp;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                  (pntml(i)-pk(i)   )/delp_cld(i) ) ) / delp_cld(i)        ekp34(i) = wsc_o_mb(i) * delpkp34(i) * 0.03 * exp( -1.0*min( 1.0, &amp;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                  (pntml(i)-pkp12(i))/delp_cld(i) ) ) / delp_cld(i)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordflow">      END IF</span>    <span class="comment">! level</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      <span class="keywordflow">IF</span> (k == ntml(i)) ekp14(i) = 0.0</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordflow">    END DO</span>  <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__dependent__switch__mod.xhtml#a6a0879b7a28fdcb71d673d1c76810d94">sh_grey</a> == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="comment">! Increased entrainment for grey zone</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordflow">IF</span> (k &gt;= ntml(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        ekp14(i) = wsc_o_mb(i) * delpkp14(i) * 0.06 * exp( -1.5*min( 1.0, &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                  (pntml(i)-pk(i)   )/delp_cld(i) ) ) / delp_cld(i)        ekp34(i) = wsc_o_mb(i) * delpkp34(i) * 0.06 * exp( -1.5*min( 1.0, &amp;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                  (pntml(i)-pkp12(i))/delp_cld(i) ) ) / delp_cld(i)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="keywordflow">      END IF</span>    <span class="comment">! level</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;      <span class="keywordflow">IF</span> (k == ntml(i)) ekp14(i) = 0.0</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordflow">    END DO</span><span class="keywordflow">  END IF</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">! Congestus convection entrainment coefficients</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">! 0.5/z rates</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (l_congestus) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  <span class="keywordflow">DO</span> i=1,npnts           <span class="keywordflow">IF</span> (k &gt; ntml(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="comment">! Is there any reason why k=ntml isn&#39;t set?</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        ekp34(i) = 0.5*2.0 * (zkp1(i)-zkp12(i))/(zkp12(i)+zkp1(i))</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        ekp14(i) = 0.5*2.0 * (zkp12(i) - zk(i))/(zkp12(i) + zk(i))</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keywordflow">    END IF</span>    <span class="comment">! type of convection and level</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">! Deep convection entrainment coefficients</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">!ELSE IF (l_deep) THEN</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <span class="keywordflow">SELECT CASE</span> (<a class="code" href="namespacecv__run__mod.xhtml#ab1d28ae7d556e487333b62b39e45e05d">ent_opt_dp</a>)  <span class="keywordflow">CASE</span>(0)     <span class="comment">! original Ap/(p*)^2  style entrainment    DO i=1,npnts      ekp14(i) = entcoef * aekp14 * pk(i)    * delpkp14(i) *            &amp;</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                 recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      ekp34(i) = <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp34 * pkp12(i) * delpkp34(i) *            &amp;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                 recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  <span class="keywordflow">CASE</span>(1)     <span class="comment">!  n/z style entrainment  where n = ent_fac                  DO i=1,npnts      ekp14(i) = ent_fac_dp *2.0 * (zkp12(i) - zk(i))/(zkp12(i) + zk(i))      ekp34(i) = ent_fac_dp *2.0 * (zkp1(i)-zkp12(i))/(zkp12(i)+zkp1(i))</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="keywordflow">CASE</span>(2)     <span class="comment">! Higher entrainment near surface (various versions have</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;              <span class="comment">! been used during GA3.0 plus testing) current code has</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;              <span class="comment">! version known as New 3.</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;              <span class="comment">! factor * original Ap/(p*)^2                     DO i=1,npnts      IF (pk(i) &gt; 50000.0) THEN</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        factor1 = 1.0 + 1.25*(1.0-(100000.0 - pk(i))/50000.0)</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;      <span class="keywordflow">ELSE</span>        factor1 = 1.0</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keywordflow">      END IF</span>      <span class="keywordflow">IF</span> (pkp12(i) &gt; 50000.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        factor2 = 1.0 + 1.25*(1.0-(100000.0 - pkp12(i))/50000.0)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="keywordflow">ELSE</span>        factor2 = 1.0</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordflow">      END IF</span>      ekp14(i) = factor1 * <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp14 * pk(i)    * delpkp14(i) *  &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                 recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      ekp34(i) = factor2 * <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp34 * pkp12(i) * delpkp34(i) *  &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                 recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <span class="keywordflow">CASE</span>(3)     <span class="comment">! factor * (A/p*)*((p/p*)^m)  style entrainment</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts      ekp14(i) = <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp14 * delpkp14(i) * recip_pstar(i) *      &amp;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                (pk(i)    * recip_pstar(i))**<a class="code" href="namespacecv__run__mod.xhtml#a640e7a0050ee80e003db7b5426a2ec81">ent_dp_power</a></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      ekp34(i) = <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp34 * delpkp34(i) * recip_pstar(i) *      &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                (pkp12(i) * recip_pstar(i))**<a class="code" href="namespacecv__run__mod.xhtml#a640e7a0050ee80e003db7b5426a2ec81">ent_dp_power</a></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  <span class="keywordflow">CASE</span>(4)     <span class="comment">! variable n/z style entrainment</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts      tmp_entrain_coef(i) = <a class="code" href="namespacecv__param__mod.xhtml#ae383ac8dc01a116f25a3ab4e5aedafc4">refdepth_dp</a>/delz_cld(i)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts      ekp34(i) = tmp_entrain_coef(i) *2.0 * (zkp1(i)-zkp12(i))          &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                               / (zkp12(i)+zkp1(i))</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      ekp14(i) = tmp_entrain_coef(i) *2.0 * (zkp12(i) - zk(i))          &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                               / (zkp12(i) + zk(i))</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;   <span class="keywordflow">CASE</span>(5)     <span class="comment">! variable p/(p*)^2  style entrainment</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts      tmp_entrain_coef(i) = <a class="code" href="namespacecv__param__mod.xhtml#ae383ac8dc01a116f25a3ab4e5aedafc4">refdepth_dp</a>/delz_cld(i)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts      ekp14(i) = tmp_entrain_coef(i) *                                  &amp;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                 <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp14 * pk(i)    * delpkp14(i) *            &amp;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                 recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;      ekp34(i) = tmp_entrain_coef(i) *                                  &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                 <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp34 * pkp12(i) * delpkp34(i) *            &amp;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                 recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordflow">  END SELECT</span>  <span class="comment">! test on ent_opt_dp</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">! Mid-Level convection entrainment coefficients</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">!ELSE</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  <span class="keywordflow">SELECT CASE</span> (<a class="code" href="namespacecv__run__mod.xhtml#a026f533f2afe310d9ed7e72eef7c88b7">ent_opt_md</a>)  <span class="keywordflow">CASE</span>(0)     <span class="comment">! orignal Ap/(p*)^2  style entrainment             DO i=1,npnts      ekp14(i) = entcoef * aekp14 * pk(i)    * delpkp14(i) *            &amp;</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                 recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;      ekp34(i) = <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp34 * pkp12(i) * delpkp34(i) *            &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                 recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  <span class="keywordflow">CASE</span>(1)     <span class="comment">!  n/z style entrainment  where n = ent_fac</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts      ekp34(i) = <a class="code" href="namespacecv__run__mod.xhtml#a522133df1b9eb4d1288bd9fa0563de5a">ent_fac_md</a> *2.0 * (zkp1(i)-zkp12(i))/(zkp12(i)+zkp1(i))</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;      ekp14(i) = <a class="code" href="namespacecv__run__mod.xhtml#a522133df1b9eb4d1288bd9fa0563de5a">ent_fac_md</a> *2.0 * (zkp12(i) - zk(i))/(zkp12(i) + zk(i))<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="keywordflow">CASE</span>(2)     <span class="comment">! New 3 profile - higher near surface (option not used              ! during GA3.0 plus testing).</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts      <span class="keywordflow">IF</span> (pk(i) &gt; 50000.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        factor1 = 1.0 + 1.25*(1.0-(100000.0 - pk(i))/50000.0)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;      <span class="keywordflow">ELSE</span>        factor1 = 1.0</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="keywordflow">      END IF</span>      <span class="keywordflow">IF</span> (pkp12(i) &gt; 50000.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        factor2 = 1.0 + 1.25*(1.0-(100000.0 - pkp12(i))/50000.0)</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;      <span class="keywordflow">ELSE</span>        factor2 = 1.0</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordflow">      END IF</span>      ekp14(i) = factor1 * <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp14 * pk(i)    * delpkp14(i) *  &amp;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                 recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;      ekp34(i) = factor2 * <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp34 * pkp12(i) * delpkp34(i) *  &amp;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                 recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  <span class="keywordflow">CASE</span>(3)     <span class="comment">! factor * (A/p*)*((p/p*)^m)  style entrainment</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts      ekp14(i) = <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp14 * delpkp14(i) * recip_pstar(i) *      &amp;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                (pk(i)    * recip_pstar(i))**<a class="code" href="namespacecv__run__mod.xhtml#ab1f7d2b3167cba1d077a8c33846e8ed6">ent_md_power</a></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      ekp34(i) = <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp34 * delpkp34(i) * recip_pstar(i) *      &amp;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                (pkp12(i) * recip_pstar(i))**<a class="code" href="namespacecv__run__mod.xhtml#ab1f7d2b3167cba1d077a8c33846e8ed6">ent_md_power</a></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keywordflow">  END SELECT</span>  <span class="comment">! test on ent_opt</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="keywordflow">END IF</span>        <span class="comment">! type of convection</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">! If variable entrainment then overwrite previously calculated! entrainment values when there is a valid (positive) entrain_coef</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">! entrain_coef is calculated in the diagnosis (conv_diag_comp).</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">!IF ( (icvdiag == 4) .OR. (icvdiag == 5) ) THEN</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  <span class="keywordflow">IF</span> (l_shallow .OR. l_congestus .OR. l_deep) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keywordflow">IF</span>  (<a class="code" href="namespacecv__dependent__switch__mod.xhtml#ab121f10cc75127f7014ee706689b4c10">l_const_ent</a>) <span class="keywordflow">THEN</span>         <span class="comment">! no height dependence</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;      <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="keywordflow">IF</span> (entrain_coef(i)  &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;          ekp14(i) = entrain_coef(i) * (zkp12(i) - zk(i))</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;          ekp34(i) = entrain_coef(i) * (zkp1(i)-zkp12(i))</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordflow">IF</span> (l_shallow .OR. l_congestus) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;          <span class="keywordflow">IF</span> (k == ntml(i)) ekp14(i) = 0.0</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keywordflow">      END DO</span>    <span class="keywordflow">ELSE</span>      <span class="comment">! rates vary with height</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;      <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        <span class="keywordflow">IF</span> (entrain_coef(i)  &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;          factor = 1.0</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;          ekp34(i) = entrain_coef(i) *2.0 * (zkp1(i)-zkp12(i))          &amp;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                                  *factor / (zkp12(i)+zkp1(i))</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;          ekp14(i) = entrain_coef(i) *2.0 * (zkp12(i) - zk(i))          &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                                  *factor / (zkp12(i) + zk(i))</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keywordflow">        END IF</span>    <span class="comment">! test on entrain_coef</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="keywordflow">IF</span> (l_shallow .OR. l_congestus) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;          <span class="keywordflow">IF</span> (k == ntml(i)) ekp14(i) = 0.0</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="keywordflow">      END DO</span><span class="keywordflow">    END IF</span>    <span class="comment">! test on l_const_ent</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keywordflow">  END IF</span>      <span class="comment">! conv type</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">! Calculate mixing detrainment coefficient multiplied by appropriate</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">! layer thickness.</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">! NB the mixing detrainment is always zero for the first convecting</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">! level.</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">! Shallow convection mixing detrainment coefficients</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">!IF (l_shallow) THEN</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__dependent__switch__mod.xhtml#a50df0b2cc671723ae757efaeb813269f">l_new_det</a>) <span class="keywordflow">THEN</span>    <span class="comment">! Use new relationship for detrainment</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;      <span class="keywordflow">IF</span> ( k &gt; ntml(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keywordflow">IF</span> (entrain_coef(i) &gt; 0.0) <span class="keywordflow">THEN</span>    <span class="comment">! alter detrainment</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;          <span class="comment">! Trying 2* entrainment rates for shallow</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;          amdetk(i) = (1.0 + 1.0) * (ekp14(i) + ekp34(i))</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;          <span class="comment">!    But set to 1 if RH is greater than 100%             IF (rhum(i)  &gt;   1.0) THEN</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            amdetk(i) = 1.0 * (ekp14(i) + ekp34(i))</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="keywordflow">    END DO</span>    <span class="comment">! npnts</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__dependent__switch__mod.xhtml#a6a0879b7a28fdcb71d673d1c76810d94">sh_grey</a> == 1) <span class="keywordflow">THEN</span> <span class="comment">! Increased entrainment for grey zone</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;      <span class="keywordflow">IF</span> (k  &gt; ntml(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        amdetk(i) = 1.5*(ekp14(i) + ekp34(i))</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="keywordflow">    END DO</span>    <span class="comment">! npnts</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;  <span class="keywordflow">ELSE</span>  <span class="comment">!Original detrainment rates</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;      <span class="keywordflow">IF</span>( k &gt; ntml(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <span class="keywordflow">IF</span> (rhum(i)  &lt;=  0.85) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;          amdetk(i) = (1.0 + 0.3) * (ekp14(i) + ekp34(i))</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (rhum(i)  &gt;   1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;          amdetk(i) =  1.0        * (ekp14(i) + ekp34(i))</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        <span class="keywordflow">ELSE</span>  <span class="comment">! 0.85 &lt;  rhum &lt;= 1.0</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;          amdetk(i) = (1.0 + (0.3/0.15) * (1.0-rhum(i)))                &amp;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                                  * (ekp14(i) + ekp34(i))</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keywordflow">    END DO</span>    <span class="comment">! npnts</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">! Congestus convection mixing detrainment coefficients</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment">! adaptive mixing detrainment used in all cases</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (l_congestus) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;  <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="keywordflow">IF</span> ( k &gt; ntml(i) .AND. rhum(i) &lt;= 1.0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;      amdetk(i) = (1.-rhum(i)) * (ekp14(i) + ekp34(i))</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">!npnts</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">! Deep convection mixing detrainment coefficients</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="comment">!ELSE IF (l_deep) THEN</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  <span class="keywordflow">SELECT CASE</span> (<a class="code" href="namespacecv__run__mod.xhtml#a30d8a48861997bce840c606c91b18dfe">mdet_opt_dp</a>)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;  <span class="keywordflow">CASE</span>(0)     <span class="comment">! Original (1.-1./(ent_fac_dp*ae2))</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;      <span class="keywordflow">IF</span> ( k &gt; ntml(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        amdetk(i) = (ekp14(i) + ekp34(i)) * (1.0-1.0/aekp34)</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">!npnts</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;  <span class="keywordflow">CASE</span>(1)     <span class="comment">! Adaptive mixing detrainment</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;      <span class="keywordflow">IF</span> ( k &gt; ntml(i) .AND. rhum(i) &lt;= 1.0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        amdetk(i) = <a class="code" href="namespacecv__run__mod.xhtml#a37da6c276c5e0c1be49f68daf550887d">amdet_fac</a>*(ekp14(i) + ekp34(i))*(1-rhum(i))</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">!npnts</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  <span class="keywordflow">CASE</span>(2)     <span class="comment">! Variable mixing detrainment</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    r_mdet_depth = 1./(<a class="code" href="namespacecv__param__mod.xhtml#ae383ac8dc01a116f25a3ab4e5aedafc4">refdepth_dp</a> - 2000.0)</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    mdet_fac     = 5./3.</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;      <span class="keywordflow">IF</span> ( k &gt; ntml(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        factor    = max(mdet_fac - r_mdet_depth * delz_cld(i), 1./3.)</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        amdetk(i) = <a class="code" href="namespacecv__run__mod.xhtml#a37da6c276c5e0c1be49f68daf550887d">amdet_fac</a>*(ekp14(i) + ekp34(i)) * factor<span class="keywordflow">                         END IF</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">!npnts</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="keywordflow">  END SELECT</span>  <span class="comment">! mdet_dpt_dp</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment">! Mid-level convection mixing detrainment coefficients</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">!ELSE</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;  <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <span class="keywordflow">IF</span> (bconv(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;      amdetk(i) = (ekp14(i) + ekp34(i)) * (1.0-1.0/aekp34)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">!npnts       END IF  ! type of convection scheme</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LAYER_CN&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespacelayer__cn__6a__mod.xhtml#a6e67333abc120f3a7cff5f4da5798656" title="Calculates the following layer dependent constants: ">layer_cn_6a</a></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacelayer__cn__6a__mod.xhtml" title="Calculates layer dependent constants. ">layer_cn_6a_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
