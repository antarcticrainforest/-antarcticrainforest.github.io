<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/c_code/c_io_rbuffering.c Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_3870c6a11f19197dc24c93b76d301a96.xhtml">c_code</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">c_io_rbuffering.c</div>  </div>
</div><!--header-->
<div class="contents">
<a href="c__io__rbuffering_8c.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#if defined (F2K3)</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="c__io__layers_8h.xhtml">c_io_layers.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#define CIO_NEXT_LAYER CIO_UNIX</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="c__io_8h.xhtml">c_io.h</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="c__io__rbuffering_8h.xhtml">c_io_rbuffering.h</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">/* Functions in this file:</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">   Layer interfaces:</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">     init</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">     fini</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">     open</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">     close</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">     in</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">     out</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">     getpos</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">     setpos</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">     change_mode</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Implentation routines:</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   To make a new implementation of an IO layer, copy this </span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   file, replacing rbuffering with your identifier.</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">*/</span>  </div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment"> * Helper threads. There may be a helper thread associated with this module. </span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment"> * The thread safety/locking metaphor for this module is as follows</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"> * 1. The helper thread will ONLY load data into blocks maked as </span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"> *    c_io_instantiated taking their state to c_io_ready, it should not make </span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"> *    any other modification to structure. Whilst loading it must hold the </span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"> *    lock for that block </span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"> * 2. The primary thread will assign blocks to disk regions and will not </span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"> *    load any data if the helper is present. The primary can alter any </span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> *    structure without the lock, unless the structure is marked as </span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"> *    c_io_instantiated, in which case the lock must be taken to avoid </span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> *    concurrent access. The only time that the primary would need to modiy</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> *    such a block, is in the case where a new instantiation is needed but there</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> *    are no non-instantiated buffers present.</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> *    RULES</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> *     helper:  can only modify a block if state is &quot;instantiated&quot;</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> *              can only change the state to ready</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> *     primary: can not modify the block if the state is instantiated</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"> *     all:     must threadFlush() if altering state.</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;int64_t c_io_rbuffering_init(<a class="code" href="structc__io__init__t.xhtml">c_io_init_t</a> * <a class="code" href="c__io_8h.xhtml#a7ed5ff2a03f7684212b28aa1968622f1">params</a>)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>               = <a class="code" href="c__io__layers_8h.xhtml#ab37149944a170aeec451a02a37cba045">c_io_init_next_layer</a>(<a class="code" href="c__io_8h.xhtml#a5140b8af92a952340818455d7ab84316">CIO_NEXT_LAYER</a>);  </div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#add6facdcc05c26c6f88b74475ce17439">helper_start</a> = <a class="code" href="c__io__rbuffering_8h.xhtml#a14df417d62cabdf619f4af0acd5838cd">c_io_rbuffering_helper</a>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abee4af3c5b54038e3646c4097f3d1c1a">helper_stop</a>  = <a class="code" href="c__io__rbuffering_8h.xhtml#a0a07c087c2bd0f6fe78448d4831d9ec5">c_io_rbuffering_release_helper</a>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordflow">if</span> (params-&gt;<a class="code" href="structc__io__init__t.xhtml#a22882ca633c73398fcb2442ae3cb1e20">rbuffering_buffer_size</a> &gt; 0)</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#ac28e991cf10fd0060d6e6c3bbcc27053">RBufferSz</a>             = params-&gt;<a class="code" href="structc__io__init__t.xhtml#a22882ca633c73398fcb2442ae3cb1e20">rbuffering_buffer_size</a>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordflow">if</span> (params-&gt;<a class="code" href="structc__io__init__t.xhtml#a2343e17b1bc28124120f77ec6915c94a">rbuffering_buffer_count</a> &gt; 0)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>           = params-&gt;<a class="code" href="structc__io__init__t.xhtml#a2343e17b1bc28124120f77ec6915c94a">rbuffering_buffer_count</a>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordflow">else</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>           = 0; <span class="comment">/* i.e. off */</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordflow">if</span> (params-&gt;<a class="code" href="structc__io__init__t.xhtml#a25ee32798a3593b3145522446f9bf578">rbuffering_buffer_prefetch</a> &gt; 0)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#a106c4d7a5b6ae06c64f3e3dfa77d10da">prefetchRBuffers</a>      = <a class="code" href="c__io_8h.xhtml#ad2f3678bf5eae3684fc497130b946eae">MIN</a>(params-&gt;<a class="code" href="structc__io__init__t.xhtml#a25ee32798a3593b3145522446f9bf578">rbuffering_buffer_prefetch</a>,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                <a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>-1);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>!=0){</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      (-1,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;       <span class="stringliteral">&quot;init: rbuffering: Buffer size=%lld bytes, &quot;</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;       <span class="stringliteral">&quot;Buffers=%lld, prefetch=%lld\n&quot;</span>, </div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;       <a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(<a class="code" href="c__io__rbuffering_8h.xhtml#ac28e991cf10fd0060d6e6c3bbcc27053">RBufferSz</a>),<a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>),<a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(<a class="code" href="c__io__rbuffering_8h.xhtml#a106c4d7a5b6ae06c64f3e3dfa77d10da">prefetchRBuffers</a>));</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">if</span> (params-&gt;<a class="code" href="structc__io__init__t.xhtml#aae653aba05e876c5c325c6fb819be335">rbuffering_buffer_update</a>==1)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;init: rbuffering: buffers will update on writes\n&quot;</span>);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="comment">/* allocate local data */</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>= </div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      (<a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a>*) </div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      malloc(params-&gt;<a class="code" href="structc__io__init__t.xhtml#a0089446ddc73d4756e0b360d9860533b">max_unit</a>*<span class="keyword">sizeof</span>(<a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a>));</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>=</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      (<a class="code" href="structc__io__rbuffering__counters__t.xhtml">c_io_rbuffering_counters_t</a>*) </div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      malloc(<span class="keyword">sizeof</span>(<a class="code" href="structc__io__rbuffering__counters__t.xhtml">c_io_rbuffering_counters_t</a>));</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>==NULL){</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    (-1,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;     <span class="stringliteral">&quot;init: rbuffering: allocation of control structure %d bytes failed\n&quot;</span>,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;     params-&gt;<a class="code" href="structc__io__init__t.xhtml#a0089446ddc73d4756e0b360d9860533b">max_unit</a>*<span class="keyword">sizeof</span>(<a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a>));</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      abort();</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">for</span> (i=0;i&lt;params-&gt;<a class="code" href="structc__io__init__t.xhtml#a0089446ddc73d4756e0b360d9860533b">max_unit</a>;i++)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <a class="code" href="c__io__rbuffering_8h.xhtml#a831c2b075718c420714e24c2dcd601cc">c_io_rbuffering_reset</a>(i,<span class="keyword">true</span>);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a12ab199cefe39ecf86dbbfa518450007">loaded</a>=0;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a9ab900fb05db6b85b704739a700c0262">alloced_pre</a>=0;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a324c8ecd42691a4eb5079acc16e43c4b">alloced_imm</a>=0;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a3347cda0dea17ab2a1d77032135ba8ff">b_used</a>=0;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a1a27dc8cdfa8379a9e0a4910ff44d697">wait_calls</a>=0;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a3f5a14465606fc10e36ec1789a00e422">wait</a>=0.0;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    </div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordflow">else</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;init: rbuffering: is switched off (numRBuffers=0)\n&quot;</span>);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordflow">return</span> C_IO_INIT(params);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;int64_t c_io_rbuffering_fini()</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot; \n&quot;</span>);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;RBbuffering usage\n&quot;</span>);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot; \n&quot;</span>);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;  Blocks allocated for prefetch      %lld\n&quot;</span>,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;          <a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(<a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a9ab900fb05db6b85b704739a700c0262">alloced_pre</a>));</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;  Blocks allocated for immediate use %lld\n&quot;</span>,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;          <a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(<a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a324c8ecd42691a4eb5079acc16e43c4b">alloced_imm</a>));</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;  Blocks loaded                      %lld\n&quot;</span>,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;          <a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(<a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a12ab199cefe39ecf86dbbfa518450007">loaded</a>));</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;  Total data read (blocks eqv.)      %10.2f\n&quot;</span>,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;          <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a3347cda0dea17ab2a1d77032135ba8ff">b_used</a>/(1.0*<a class="code" href="c__io__rbuffering_8h.xhtml#ac28e991cf10fd0060d6e6c3bbcc27053">RBufferSz</a>));</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;  Wait calls                         %lld\n&quot;</span>,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;          <a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(<a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a1a27dc8cdfa8379a9e0a4910ff44d697">wait_calls</a>));</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;  Wait time                          %8.2f secs\n&quot;</span>,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;          <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a3f5a14465606fc10e36ec1789a00e422">wait</a>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot; \n&quot;</span>);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>!=0) </div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    free (<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keywordflow">return</span> C_IO_FINI();</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;int64_t c_io_rbuffering_in (int64_t unit, </div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <span class="keywordtype">char</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>, </div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                int64_t len, </div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                int64_t word_len)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordtype">char</span> * current_pos=<a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  int64_t transferSize;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  int64_t ammountRead=0;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a> * buffData=&amp;<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[unit];</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">   * fast return if not active...</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>==0)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordflow">return</span> C_IO_IN(unit,array,len,word_len);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  </div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#a71d30f3efafccf44ac8e146b5e7eed42">c_io_rbuffering_check_latch</a>();</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="comment">/* convert request to bytes */</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  len=len*word_len;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a3347cda0dea17ab2a1d77032135ba8ff">b_used</a>+=len;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keywordflow">while</span> (len&gt;0){</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">if</span> ((transferSize=<a class="code" href="c__io__rbuffering_8h.xhtml#a4b53c0cbee94e7d31a7d80106a6eb031">c_io_rbuffering_bytesLeftInBlock</a>(unit))&gt;0){</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="comment">/* we already have some data in the current block allocated as current */</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="comment">/* check that it has data and either load or wait </span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">       * depending on helper presence */</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="keywordflow">if</span> (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>].<a class="code" href="structc__io__rblock__t.xhtml#ab12eae6e0009a0d4be116e40b4924cf5">state</a>==<a class="code" href="c__io__rbuffering_8h.xhtml#a66d7e951fc61c05941b5bd244295c271a9be7a235db60c93d71a1948e8aed1ef8">c_io_instantiated</a>){</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abea45de0e0746075c17deadfafb825dc">helper_state</a>==<a class="code" href="c__io__layers_8h.xhtml#a1f9b140902f37e8d18f36a3474788a73aff8dc32b8804d79fbad87d37a3c779b6">c_io_running</a>) <span class="comment">/* wait for helper */</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <a class="code" href="c__io__rbuffering_8h.xhtml#a98532a98e25a0204423dc29abe00fb90">c_io_rbuffering_waitGECondidion</a></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        (&amp;buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>].<a class="code" href="structc__io__rblock__t.xhtml#ab12eae6e0009a0d4be116e40b4924cf5">state</a>,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;         <a class="code" href="c__io__rbuffering_8h.xhtml#a66d7e951fc61c05941b5bd244295c271a525cdc018a7f0c11b5929d48f57c30a2">c_io_ready</a>);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">else</span> <span class="comment">/* no helper, load it ourselves */</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <a class="code" href="c__io__rbuffering_8h.xhtml#ac3342dd13f72812bdbdac3996d9b0916">c_io_rbuffering_load_block</a></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        (unit,</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;         &amp;buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>]);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      }</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    </div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      <span class="comment">/* shrink the transfer size if we want less than the rest of the block */</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      <span class="keywordflow">if</span> (len&lt;transferSize) transferSize=len;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      memcpy(current_pos,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;         &amp;buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>].<a class="code" href="structc__io__rblock__t.xhtml#a19251658f02a8870d1c9a32aedc878a1">data</a>[buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a7a981ffc5b1abc842cdb1813cd491220">blockPosition</a>],</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;         transferSize);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      <span class="comment">/* adjust pointers */</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      ammountRead+=transferSize;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      current_pos+=transferSize;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a7a981ffc5b1abc842cdb1813cd491220">blockPosition</a>+=transferSize;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      len-=transferSize;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      </div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      <span class="comment">/* check whether we used the whole block */</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      <span class="keywordflow">if</span> (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a7a981ffc5b1abc842cdb1813cd491220">blockPosition</a>==<a class="code" href="c__io__rbuffering_8h.xhtml#ac28e991cf10fd0060d6e6c3bbcc27053">RBufferSz</a>){</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>].<a class="code" href="structc__io__rblock__t.xhtml#ab12eae6e0009a0d4be116e40b4924cf5">state</a>=<a class="code" href="c__io__rbuffering_8h.xhtml#a66d7e951fc61c05941b5bd244295c271ad5d7516eb268f2ce67ddbceb87190bf2">c_io_consumed</a>;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    threadFlush();</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      }</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    }</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordflow">else</span>{</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      <span class="comment">/* </span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">       * no data in current block so set up a new one, RBufferSz </span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">       *  further on from the current one </span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">       */</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      <a class="code" href="c__io__rbuffering_8h.xhtml#ac24a6829723a9b58b561a93d321d464e">c_io_rbuffering_instantiate_block_for</a></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    (unit, </div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;     buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>+<a class="code" href="c__io__rbuffering_8h.xhtml#ac28e991cf10fd0060d6e6c3bbcc27053">RBufferSz</a>,</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;     <span class="keyword">true</span>);      </div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;      <span class="comment">/* and prefetch ahead in multples of RBufferSz */</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;      <span class="keywordflow">for</span> (i=0;i&lt;<a class="code" href="c__io__rbuffering_8h.xhtml#a106c4d7a5b6ae06c64f3e3dfa77d10da">prefetchRBuffers</a>;i++)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#ac24a6829723a9b58b561a93d321d464e">c_io_rbuffering_instantiate_block_for</a></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      (unit, </div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;       buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>+<a class="code" href="c__io__rbuffering_8h.xhtml#ac28e991cf10fd0060d6e6c3bbcc27053">RBufferSz</a>*(i+1),</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;       <span class="keyword">false</span>); <span class="comment">/* false means not to update the current block! */</span>      </div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    </div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      </div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    }</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  }</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <span class="keywordflow">return</span> ammountRead/word_len; <span class="comment">/* converting back to words of the req. type */</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;int64_t c_io_rbuffering_out (int64_t unit, </div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                 <span class="keywordtype">char</span> * array, </div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                 int64_t len, </div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                 int64_t word_len)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;{ </div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  int64_t retVal;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  int64_t start=C_IO_GETPOS(unit);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  retVal=C_IO_OUT(unit,array,len,word_len);</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>!=0){</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keywordflow">if</span> (params-&gt;<a class="code" href="structc__io__init__t.xhtml#aae653aba05e876c5c325c6fb819be335">rbuffering_buffer_update</a>==1)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      <a class="code" href="c__io__rbuffering_8h.xhtml#acdca44219a0176d85e38bb98a7b0b680">c_io_rbuffering_update_block</a>(unit,array,start,len*word_len);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      <a class="code" href="c__io__rbuffering_8h.xhtml#a7395cdd6fbb345d99d8b1a432b16e9cd">c_io_rbuffering_invalidate_block</a>(unit,start,len*word_len);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  }</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  <span class="keywordflow">return</span> retVal;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;}</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;int64_t c_io_rbuffering_setpos (int64_t unit, </div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                int64_t pos,</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                int64_t word_len)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;{</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  <a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a> * buffData;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>==0) <span class="keywordflow">return</span> C_IO_SETPOS(unit,pos,word_len);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="c__io_8h.xhtml#acdbb2445860ec92ab11b0c3e39168cc0">c_io_attributes</a>[unit].mode==<a class="code" href="c__io_8h.xhtml#af05b6eea205ddb71dcdab3fc4c5561eba83b2c75d9f5bc57938f655d35b337b3c">reading</a>){</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#ac24a6829723a9b58b561a93d321d464e">c_io_rbuffering_instantiate_block_for</a>(unit,pos*word_len,<span class="keyword">true</span>);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="keywordflow">else</span> {</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keywordflow">return</span> C_IO_SETPOS(unit,pos,word_len);</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  }</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  buffData=&amp;<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[unit];</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  <span class="keywordflow">return</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a> +</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a7a981ffc5b1abc842cdb1813cd491220">blockPosition</a>;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;}</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;int64_t c_io_rbuffering_getpos (int64_t unit)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;{ </div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>==0) <span class="keywordflow">return</span> C_IO_GETPOS(unit);</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  </div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  <a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a> * buffData=&amp;<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[unit];</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="c__io_8h.xhtml#acdbb2445860ec92ab11b0c3e39168cc0">c_io_attributes</a>[unit].mode==<a class="code" href="c__io_8h.xhtml#af05b6eea205ddb71dcdab3fc4c5561eba83b2c75d9f5bc57938f655d35b337b3c">reading</a>){</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keywordflow">return</span> buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a> +</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a7a981ffc5b1abc842cdb1813cd491220">blockPosition</a>;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  }</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <span class="keywordflow">return</span> C_IO_GETPOS(unit);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;}</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;int64_t c_io_rbuffering_open (int64_t unit,</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                  <span class="keywordtype">char</span> *  filename, </div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                  int64_t file_name_len,</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                  int64_t fileMode)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;{</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#a71d30f3efafccf44ac8e146b5e7eed42">c_io_rbuffering_check_latch</a>();</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>!=0){</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a> * buffData=&amp;<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[unit];</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>=</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;      (<a class="code" href="structc__io__rblock__t.xhtml">c_io_rblock_t</a> *)malloc(<span class="keyword">sizeof</span>(<a class="code" href="structc__io__rblock__t.xhtml">c_io_rblock_t</a>)*<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordflow">if</span> (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>==NULL){</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;      <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    (-1,</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;     <span class="stringliteral">&quot;open: rbuffering: allocation of control structure %d bytes failed\n&quot;</span>,</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;     <span class="keyword">sizeof</span>(<a class="code" href="structc__io__rblock__t.xhtml">c_io_rblock_t</a>)*<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;      abort();</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    }</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordflow">for</span> (i=0;i&lt;<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>;i++)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;      <a class="code" href="c__io__rbuffering_8h.xhtml#aaabc4584bf97bdbba68f227b467babe6">c_io_rbuffering_init_block</a>(&amp;buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[i]);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>=  -1;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a7a981ffc5b1abc842cdb1813cd491220">blockPosition</a>= -1;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  }</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  C_IO_OPEN(unit,filename,file_name_len,fileMode);</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;}</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;int64_t c_io_rbuffering_close (int64_t unit)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;{</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  <a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a> * buffData=&amp;<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[unit];</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  </div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  <span class="comment">/* </span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">   * kill off our data structures, which will also cause any helper thread</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">   * to complete operations on the unit.</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>!=0){</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordflow">for</span> (i=0;i&lt;<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>;i++)</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;      <a class="code" href="c__io__rbuffering_8h.xhtml#ac9da5ed703ccb639e797b13669fcf049">c_io_rbuffering_destroy_block</a>(&amp;buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[i]);</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    free (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>=NULL;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;  }</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;  <span class="keywordflow">return</span> C_IO_CLOSE(unit);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;}</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;int64_t c_io_rbuffering_change_mode (int64_t unit,int64_t newMode)</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;{</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a> * buffData=&amp;<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[unit];</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  int64_t retVal;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  int64_t  file_pos;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;  retVal=C_IO_CHANGE_MODE(unit,newMode);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;  <span class="keywordflow">if</span>(<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>!=0){</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keywordflow">if</span> (newMode==<a class="code" href="c__io_8h.xhtml#af05b6eea205ddb71dcdab3fc4c5561eba83b2c75d9f5bc57938f655d35b337b3c">reading</a>){</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      file_pos=C_IO_GETPOS(unit);</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;      <a class="code" href="c__io__rbuffering_8h.xhtml#ac24a6829723a9b58b561a93d321d464e">c_io_rbuffering_instantiate_block_for</a>(unit,file_pos,<span class="keyword">true</span>);</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    }</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="c__io_8h.xhtml#acdbb2445860ec92ab11b0c3e39168cc0">c_io_attributes</a>[unit].mode==<a class="code" href="c__io_8h.xhtml#af05b6eea205ddb71dcdab3fc4c5561eba83b2c75d9f5bc57938f655d35b337b3c">reading</a>){</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;      </div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;      <span class="comment">/*</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">       *   Restore the real position on disk, so that </span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">       *   subsequent *write* operations land in the correct spot.</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">       */</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;      </div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;      <span class="keywordflow">if</span> (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>==-1){</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(unit,<span class="stringliteral">&quot;rbuff: PANIC: changed mode away from reading but there was no read block!\n&quot;</span>);</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    abort();</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;      }</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;      file_pos=</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>+</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a7a981ffc5b1abc842cdb1813cd491220">blockPosition</a>;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      C_IO_SETPOS(unit,file_pos,1);     </div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    }</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;  }</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  <span class="keywordflow">return</span> retVal;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;}</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">/* </span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment"> * reset the buffering data for a unit </span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io__rbuffering_8h.xhtml#a831c2b075718c420714e24c2dcd601cc">c_io_rbuffering_reset</a> (int64_t unit,</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                <span class="keywordtype">bool</span> force_init)</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;{  </div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;  <a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a> * buffData=&amp;<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[unit];</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;  buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>=NULL;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;  buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>=-1;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;  buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a7a981ffc5b1abc842cdb1813cd491220">blockPosition</a>=-1;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;}</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">/* </span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment"> * allocate block structure </span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io__rbuffering_8h.xhtml#aaabc4584bf97bdbba68f227b467babe6">c_io_rbuffering_init_block</a> (<a class="code" href="structc__io__rblock__t.xhtml">c_io_rblock_t</a> * blk)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;{</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;  blk-&gt;<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>=-1;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;  blk-&gt;<a class="code" href="structc__io__rblock__t.xhtml#af8d9fb7ecd27e848122e595aa3c27351">age</a>=0;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;  blk-&gt;<a class="code" href="structc__io__rblock__t.xhtml#ab12eae6e0009a0d4be116e40b4924cf5">state</a>=<a class="code" href="c__io__rbuffering_8h.xhtml#a66d7e951fc61c05941b5bd244295c271a2d01131e7df40fd277b173202b390bdb">c_io_unassigned</a>;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  blk-&gt;<a class="code" href="structc__io__rblock__t.xhtml#a19251658f02a8870d1c9a32aedc878a1">data</a> =malloc(<a class="code" href="c__io__rbuffering_8h.xhtml#ac28e991cf10fd0060d6e6c3bbcc27053">RBufferSz</a>);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  <span class="keywordflow">if</span> (blk-&gt;<a class="code" href="structc__io__rblock__t.xhtml#a19251658f02a8870d1c9a32aedc878a1">data</a> == NULL){</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;      (-1,</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;       <span class="stringliteral">&quot;rbuff: init_block: Allocation for block 0x%p of %d bytes failed \n&quot;</span>,</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;       blk,<a class="code" href="c__io__rbuffering_8h.xhtml#ac28e991cf10fd0060d6e6c3bbcc27053">RBufferSz</a>);</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    abort();</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;  }</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;  threadFlush();</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;}</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">/* </span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment"> * delete data structures assiciated with a unit </span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io__rbuffering_8h.xhtml#ac9da5ed703ccb639e797b13669fcf049">c_io_rbuffering_destroy_block</a> (<a class="code" href="structc__io__rblock__t.xhtml">c_io_rblock_t</a> * block)</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;{</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">   * Wait for the block to be in a condition where </span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment">   * we have legitimate write access</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abea45de0e0746075c17deadfafb825dc">helper_state</a>==<a class="code" href="c__io__layers_8h.xhtml#a1f9b140902f37e8d18f36a3474788a73aff8dc32b8804d79fbad87d37a3c779b6">c_io_running</a>)</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#ad9bee4579d55fba3ad2b742112759f1e">c_io_rbuffering_waitNotCondidion</a></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;      (&amp;block-&gt;<a class="code" href="structc__io__rblock__t.xhtml#ab12eae6e0009a0d4be116e40b4924cf5">state</a>,<a class="code" href="c__io__rbuffering_8h.xhtml#a66d7e951fc61c05941b5bd244295c271a9be7a235db60c93d71a1948e8aed1ef8">c_io_instantiated</a>);</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">   * Clean up data structures.</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  free(block-&gt;<a class="code" href="structc__io__rblock__t.xhtml#a19251658f02a8870d1c9a32aedc878a1">data</a>);</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;  block-&gt;<a class="code" href="structc__io__rblock__t.xhtml#a19251658f02a8870d1c9a32aedc878a1">data</a>=NULL;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  block-&gt;<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>=-1;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;  block-&gt;<a class="code" href="structc__io__rblock__t.xhtml#af8d9fb7ecd27e848122e595aa3c27351">age</a>=0;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  block-&gt;<a class="code" href="structc__io__rblock__t.xhtml#ab12eae6e0009a0d4be116e40b4924cf5">state</a>=<a class="code" href="c__io__rbuffering_8h.xhtml#a66d7e951fc61c05941b5bd244295c271a76846d8aa158a349d5d49129af8135d3">c_io_unallocated</a>;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  threadFlush();</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;}</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment">/* </span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment"> * assign a block for the given position. </span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment"> * Note: that if we want to use this block next we must setCurrent=true, </span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="comment"> *       and byte_pos must be the actual postion we want to read from,</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment"> *       not just &#39;somewhere&#39; in the blocks range.</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;int64_t <a class="code" href="c__io__rbuffering_8h.xhtml#ac24a6829723a9b58b561a93d321d464e">c_io_rbuffering_instantiate_block_for</a> (int64_t unit,</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                           int64_t byte_pos,</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                           <span class="keywordtype">bool</span>    setCurrent)</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;{</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;  <a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a> * buffData=&amp;<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[unit];</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;  <span class="keywordtype">int</span> blk;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;  int64_t oldest;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;  <span class="comment">/* check whether the requested block exists */</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;  blk=<a class="code" href="c__io__rbuffering_8h.xhtml#adbb3a1c4303fd943ab26a14d72fa240e">c_io_rbuffering_get_block_for_pos</a>(unit,byte_pos);</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;  </div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;  <span class="comment">/* create one if needed */</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;  <span class="keywordflow">if</span> (blk==-1){</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160; </div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    oldest=INT64_MAX;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keywordflow">while</span> (blk==-1){</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;      <span class="keywordflow">for</span> (i=0;i&lt;<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>;i++)</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">     * We want the olders buffer (ie the smallest &#39;age&#39;), but we can&#39;t </span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment">     * choose an instantiated buffer if there is a helper running....</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <span class="keywordflow">if</span> (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[i].<a class="code" href="structc__io__rblock__t.xhtml#af8d9fb7ecd27e848122e595aa3c27351">age</a>&lt;oldest &amp;&amp; </div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[i].<a class="code" href="structc__io__rblock__t.xhtml#ab12eae6e0009a0d4be116e40b4924cf5">state</a> != <a class="code" href="c__io__rbuffering_8h.xhtml#a66d7e951fc61c05941b5bd244295c271a9be7a235db60c93d71a1948e8aed1ef8">c_io_instantiated</a> ||</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;         <a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abea45de0e0746075c17deadfafb825dc">helper_state</a>   != <a class="code" href="c__io__layers_8h.xhtml#a1f9b140902f37e8d18f36a3474788a73aff8dc32b8804d79fbad87d37a3c779b6">c_io_running</a>))</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;      {blk=<a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>;oldest=buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[<a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>].<a class="code" href="structc__io__rblock__t.xhtml#af8d9fb7ecd27e848122e595aa3c27351">age</a>;}      </div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;      <span class="keywordflow">if</span> (blk==-1){</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    threadFlush();</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    usleep(100);</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      }</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    }</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="comment">/* DEBUG PRINT</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">      c_io_printf(unit,</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">        &quot;rbuff: instantiate_block, curr= %d, new=%d @%p has age=%lld\n&quot;,</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">        buffData-&gt;blockCurrent,</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">        blk,</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment">        &amp;buffData-&gt;blocks[blk],</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment">        LLD(buffData-&gt;blocks[blk].age));</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">    */</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[blk].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>=<a class="code" href="c__io__rbuffering_8h.xhtml#ad1b16f5c3cefb8a9de1b975a1cfd42a6">c_io_rbuffering_blockStart</a>(byte_pos);    </div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[blk].<a class="code" href="structc__io__rblock__t.xhtml#af8d9fb7ecd27e848122e595aa3c27351">age</a>=++<a class="code" href="c__io__rbuffering_8h.xhtml#a7e445e6fe3d74c9671d5809ca5d033a8">bufCount</a>;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;      <span class="keywordflow">if</span> (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[blk].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>&lt;0){</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;      <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(unit,</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;          <span class="stringliteral">&quot;rbuff: negative block start generated for position &quot;</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;          <span class="stringliteral">&quot;%lld (ouch!)\n&quot;</span>,</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;          <a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(byte_pos));</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;      abort();</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    }</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[blk].<a class="code" href="structc__io__rblock__t.xhtml#ab12eae6e0009a0d4be116e40b4924cf5">state</a>=<a class="code" href="c__io__rbuffering_8h.xhtml#a66d7e951fc61c05941b5bd244295c271a9be7a235db60c93d71a1948e8aed1ef8">c_io_instantiated</a>;    </div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    <span class="keywordflow">if</span> (setCurrent)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;      <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a324c8ecd42691a4eb5079acc16e43c4b">alloced_imm</a>++;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;      <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a9ab900fb05db6b85b704739a700c0262">alloced_pre</a>++;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    threadFlush();</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;  } </div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;  <span class="comment">/*  DEBUG PRINT</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="comment">  else c_io_printf</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="comment">     (unit,</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="comment">      &quot;rbuff: instantiate_block, already exists; &quot;</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="comment">      &quot;setCurrent=%s blk=%d @ %p age=%lld\n&quot;,</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment">      (setCurrent)?&quot;true&quot;:&quot;false&quot;,</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">      blk,</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment">      &amp;buffData-&gt;blocks[blk],</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="comment">      LLD(buffData-&gt;blocks[blk].age));  </span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment">  */</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;  <span class="keywordflow">if</span> (setCurrent){</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="comment">/* set the current block to this one */</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a4cdb1ba31d8f009c0a436fc60f311f66">blockCurrent</a>=blk;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="comment">/* set the location in the block */</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a7a981ffc5b1abc842cdb1813cd491220">blockPosition</a>=byte_pos-buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[blk].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;  }</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;  <span class="keywordflow">return</span> blk;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;}</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment">/* </span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="comment"> * find an existing block for the given postion</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;int64_t <a class="code" href="c__io__rbuffering_8h.xhtml#adbb3a1c4303fd943ab26a14d72fa240e">c_io_rbuffering_get_block_for_pos</a> (int64_t unit,</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                       int64_t byte_pos)</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;{</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;  <a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a> * buffData=&amp;<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[unit];</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;  <span class="keywordtype">int</span> blk=0;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;  int64_t start_pos;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;  <span class="comment">/* loop over blocks and see if the target is in one */</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;  start_pos=<a class="code" href="c__io__rbuffering_8h.xhtml#ad1b16f5c3cefb8a9de1b975a1cfd42a6">c_io_rbuffering_blockStart</a>(byte_pos);</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;  <span class="keywordflow">while</span> (blk &lt; numRBuffers){</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <span class="keywordflow">if</span> (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[blk].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>==start_pos){</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;      <span class="comment">/* freshen the block */</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;      buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[blk].<a class="code" href="structc__io__rblock__t.xhtml#af8d9fb7ecd27e848122e595aa3c27351">age</a>=++<a class="code" href="c__io__rbuffering_8h.xhtml#a7e445e6fe3d74c9671d5809ca5d033a8">bufCount</a>;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;      <span class="keywordflow">return</span> blk;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    }</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    blk++;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;  }</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;  <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;}</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment">/* </span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="comment"> * invalidate cached blocks in a given range </span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io__rbuffering_8h.xhtml#a7395cdd6fbb345d99d8b1a432b16e9cd">c_io_rbuffering_invalidate_block</a> (int64_t unit,</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                       int64_t start,</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                       int64_t extent)</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;{</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;  <a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a> * buffData=&amp;<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[unit];</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>;  </div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;  <span class="keywordflow">for</span> (i=0;i&lt;<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>;i++){</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <span class="keywordflow">if</span> (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[i].<a class="code" href="structc__io__rblock__t.xhtml#ab12eae6e0009a0d4be116e40b4924cf5">state</a>&gt;=<a class="code" href="c__io__rbuffering_8h.xhtml#a66d7e951fc61c05941b5bd244295c271a525cdc018a7f0c11b5929d48f57c30a2">c_io_ready</a>){</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;      <span class="keywordflow">if</span> (start         &lt; buffData-&gt;blocks[i].start+<a class="code" href="c__io__rbuffering_8h.xhtml#ac28e991cf10fd0060d6e6c3bbcc27053">RBufferSz</a> &amp;&amp;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;      start+extent  &gt;=buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[i].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>){</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="comment">/* i.e. we thing the buffer has data and there is overlap */</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[<a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>].<a class="code" href="structc__io__rblock__t.xhtml#ab12eae6e0009a0d4be116e40b4924cf5">state</a>=<a class="code" href="c__io__rbuffering_8h.xhtml#a66d7e951fc61c05941b5bd244295c271a9be7a235db60c93d71a1948e8aed1ef8">c_io_instantiated</a>;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    threadFlush();</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;      }</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    } </div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;  }</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;}</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="comment">/* </span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="comment"> * invalidate cached blocks in a given range </span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io__rbuffering_8h.xhtml#acdca44219a0176d85e38bb98a7b0b680">c_io_rbuffering_update_block</a> (int64_t unit,</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                   <span class="keywordtype">char</span> * array,</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                   int64_t start,</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                   int64_t extent)</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;{</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;  <a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a> * buffData=&amp;<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[unit];</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>;  </div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;  int64_t blStart;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;  int64_t arStart;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;  int64_t copyAmmount;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;  <span class="keywordflow">for</span> (i=0;i&lt;<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>;i++){</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="keywordflow">if</span> (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[i].<a class="code" href="structc__io__rblock__t.xhtml#ab12eae6e0009a0d4be116e40b4924cf5">state</a>&gt;=<a class="code" href="c__io__rbuffering_8h.xhtml#a66d7e951fc61c05941b5bd244295c271a525cdc018a7f0c11b5929d48f57c30a2">c_io_ready</a>){</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;      <span class="keywordflow">if</span> (start         &lt; buffData-&gt;blocks[i].start+<a class="code" href="c__io__rbuffering_8h.xhtml#ac28e991cf10fd0060d6e6c3bbcc27053">RBufferSz</a> &amp;&amp;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;      start+extent  &gt;=buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[i].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>){</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="comment">/* i.e. we thing the buffer has data and there is overlap */</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    blStart=0;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <span class="keywordflow">if</span> (start&gt;buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[i].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>)</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;      blStart=start-buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[<a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    arStart=0;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    <span class="keywordflow">if</span> (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[i].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>&gt;start)</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;      arStart=buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[<a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>-start;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    copyAmmount=<a class="code" href="c__io__rbuffering_8h.xhtml#ac28e991cf10fd0060d6e6c3bbcc27053">RBufferSz</a>-blStart;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    <span class="keywordflow">if</span> (start+extent&lt;buffData-&gt;blocks[i].start+<a class="code" href="c__io__rbuffering_8h.xhtml#ac28e991cf10fd0060d6e6c3bbcc27053">RBufferSz</a>)</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;      copyAmmount=(start+extent)-(buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[i].<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>+blStart);</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    memcpy(&amp;buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[i].<a class="code" href="structc__io__rblock__t.xhtml#a19251658f02a8870d1c9a32aedc878a1">data</a>[blStart],&amp;array[arStart],copyAmmount);</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;      }</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    } </div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;  }</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;}</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="comment">/* </span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment"> * load a block from disk</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;int64_t <a class="code" href="c__io__rbuffering_8h.xhtml#ac3342dd13f72812bdbdac3996d9b0916">c_io_rbuffering_load_block</a>(int64_t unit,</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                   <a class="code" href="structc__io__rblock__t.xhtml">c_io_rblock_t</a> * block)</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;{</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;  <span class="comment">/* DEBUG PRINT</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="comment">    c_io_printf(unit,</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="comment">          &quot;rbuff: load_block %p addr=%lld age=%lld \n&quot;,</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="comment">          block,</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="comment">          LLD(block-&gt;start),</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="comment">          LLD(block-&gt;age));</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="comment">  */</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a12ab199cefe39ecf86dbbfa518450007">loaded</a>++;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;  C_IO_SETPOS(unit,block-&gt;<a class="code" href="structc__io__rblock__t.xhtml#aa734070a725d59a2efe586d7f95ef616">start</a>,1);</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;  C_IO_IN    (unit,block-&gt;<a class="code" href="structc__io__rblock__t.xhtml#a19251658f02a8870d1c9a32aedc878a1">data</a> ,<a class="code" href="c__io__rbuffering_8h.xhtml#ac28e991cf10fd0060d6e6c3bbcc27053">RBufferSz</a>,1);</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;  block-&gt;<a class="code" href="structc__io__rblock__t.xhtml#ab12eae6e0009a0d4be116e40b4924cf5">state</a>=<a class="code" href="c__io__rbuffering_8h.xhtml#a66d7e951fc61c05941b5bd244295c271a525cdc018a7f0c11b5929d48f57c30a2">c_io_ready</a>;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;  threadFlush();</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;  <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;}</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="comment">/* </span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment"> * debug aid, not normally called</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io__rbuffering_8h.xhtml#ae219363b95b234109b3ed238dac26dfd">c_io_rbuffering_dumpstate</a> (<span class="keywordtype">void</span>)</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;{</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>,<a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a60afa5f1b5495c6838f16244676480e6">j</a>;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;dump: *********************************************************\n&quot;</span>);  </div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;  <span class="keywordflow">for</span> (i=params-&gt;<a class="code" href="structc__io__init__t.xhtml#a8a1182f0b37ad3a36419c167bb253eab">min_unit</a>;i&lt;params-&gt;max_unit;i++){</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[i].blockCurrent!=-1){</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;      <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(i,<span class="stringliteral">&quot;dump: blockCurrent     =%lld\n&quot;</span>, </div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;          <a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[i].blockCurrent));  </div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;      <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(i,<span class="stringliteral">&quot;dump: blockPosition =%lld\n&quot;</span>, </div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;          <a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[i].blockPosition));</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;      <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(i,<span class="stringliteral">&quot;dump: data address      =0x%p\n&quot;</span>,</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;          <a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[i].blocks);  </div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[i].blocks!=NULL)</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    <span class="keywordflow">for</span> (j=0;j&lt;<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>;j++){</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;      <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(i,<span class="stringliteral">&quot;dump:    block=%d start=%lld\n&quot;</span> ,</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;              j,<a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[i].blocks[j].start));</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;      <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(i,<span class="stringliteral">&quot;dump:    block=%d state=%lld\n&quot;</span> ,</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;              j,<a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[i].blocks[j].state));</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;      <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(i,<span class="stringliteral">&quot;dump:    block=%d data =0x%p\n&quot;</span>,</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;              j,<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[i].blocks[j].data);</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    }</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    }</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;  }</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;dump end: *****************************************************\n&quot;</span>);  </div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;}</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io__rbuffering_8h.xhtml#a71d30f3efafccf44ac8e146b5e7eed42">c_io_rbuffering_check_latch</a>(){</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;  threadFlush();</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abea45de0e0746075c17deadfafb825dc">helper_state</a>==<a class="code" href="c__io__layers_8h.xhtml#a1f9b140902f37e8d18f36a3474788a73a6bcb3106776ee4d83d5fbb5080ddc090">c_io_present</a>){</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    <a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abea45de0e0746075c17deadfafb825dc">helper_state</a>=<a class="code" href="c__io__layers_8h.xhtml#a1f9b140902f37e8d18f36a3474788a73aff8dc32b8804d79fbad87d37a3c779b6">c_io_running</a>; </div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;rbuffering: check_latch: Who&#39;s there?\n&quot;</span>);    </div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    threadFlush();</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;  }</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;}</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io__rbuffering_8h.xhtml#a14df417d62cabdf619f4af0acd5838cd">c_io_rbuffering_helper</a>(){</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;  threadFlush();</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abea45de0e0746075c17deadfafb825dc">helper_state</a> != <a class="code" href="c__io__layers_8h.xhtml#a1f9b140902f37e8d18f36a3474788a73a5aba2c48bc42498fc95f6e8b24212928">c_io_none</a>){</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;      (-1,<span class="stringliteral">&quot;rbuffering: helper: bad initial condition, attach failed.\n&quot;</span>);</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;  }</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;rbuffering: helper: Knock knock! \n&quot;</span>);</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abea45de0e0746075c17deadfafb825dc">helper_state</a>=<a class="code" href="c__io__layers_8h.xhtml#a1f9b140902f37e8d18f36a3474788a73a6bcb3106776ee4d83d5fbb5080ddc090">c_io_present</a>; </div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;  threadFlush();</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;  </div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;  <span class="keywordflow">while</span> (<a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abea45de0e0746075c17deadfafb825dc">helper_state</a> != <a class="code" href="c__io__layers_8h.xhtml#a1f9b140902f37e8d18f36a3474788a73aff8dc32b8804d79fbad87d37a3c779b6">c_io_running</a>)</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    {</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;      threadFlush();</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    }</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;rbuffering: helper: A helper thread.\n&quot;</span>);  </div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#a6d91097ae57d27b6b33dceb6a7ace173">c_io_rbuffering_helper_loop</a>();</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;rbuffering: helper: I&#39;m gone.\n&quot;</span>);  </div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;}</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io__rbuffering_8h.xhtml#a0a07c087c2bd0f6fe78448d4831d9ec5">c_io_rbuffering_release_helper</a>(){</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="comment">   *  In case another thread had requested attach but not quite make it</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;<span class="comment">   *  latch him in first.</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#a71d30f3efafccf44ac8e146b5e7eed42">c_io_rbuffering_check_latch</a>();</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abea45de0e0746075c17deadfafb825dc">helper_state</a> != <a class="code" href="c__io__layers_8h.xhtml#a1f9b140902f37e8d18f36a3474788a73aff8dc32b8804d79fbad87d37a3c779b6">c_io_running</a>){</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;rbuffering: release_helper: nothing to release!\n&quot;</span>);      </div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;  }</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;rbuffering: release_helper: Go away! \n&quot;</span>);</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="comment">   * Set the latch out variable</span></div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abea45de0e0746075c17deadfafb825dc">helper_state</a>=<a class="code" href="c__io__layers_8h.xhtml#a1f9b140902f37e8d18f36a3474788a73a0855812e2eecac81687b6bb2b0f33dea">c_io_terminate</a>;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;  threadFlush();</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="comment">   * Wait for the other thread to notice</span></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;  <span class="keywordflow">while</span> (<a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abea45de0e0746075c17deadfafb825dc">helper_state</a> != <a class="code" href="c__io__layers_8h.xhtml#a1f9b140902f37e8d18f36a3474788a73a5aba2c48bc42498fc95f6e8b24212928">c_io_none</a>)</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    {</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;      threadFlush();</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;      usleep(100);</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    }</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;rbuffering: release_helper: Bye!\n&quot;</span>);      </div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;}</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io__rbuffering_8h.xhtml#a6d91097ae57d27b6b33dceb6a7ace173">c_io_rbuffering_helper_loop</a>(){</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>,<a class="code" href="namespaceeg__idl__baro__mod.xhtml#a32e7733f1c37c771a5550ad6a1eeb4d4">b</a>;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;  threadFlush();</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;  <span class="keywordflow">while</span> (<a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abea45de0e0746075c17deadfafb825dc">helper_state</a> != <a class="code" href="c__io__layers_8h.xhtml#a1f9b140902f37e8d18f36a3474788a73a0855812e2eecac81687b6bb2b0f33dea">c_io_terminate</a>)</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    {</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;      <span class="comment">/*      c_io_printf(-1,&quot;rbuffering: helper: polling...\n&quot;);       */</span></div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;      threadFlush();</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;      usleep(100);</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;      <span class="keywordflow">for</span> (i=0;i&lt;params-&gt;<a class="code" href="structc__io__init__t.xhtml#a0089446ddc73d4756e0b360d9860533b">max_unit</a>;i++){</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    <a class="code" href="structc__io__rbuffering__data__t.xhtml">c_io_rbuffering_data_t</a> * buffData=&amp;<a class="code" href="c__io__rbuffering_8h.xhtml#af7720009bd9f83041cf839d73aedab24">c_io_rbuffering_data</a>[<a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>];</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <span class="keywordflow">if</span> (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>!=NULL){</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;      <span class="keywordflow">for</span> (b=0;b&lt;<a class="code" href="c__io__rbuffering_8h.xhtml#a7b39523aa869bba7ec21c0be52590865">numRBuffers</a>;b++){</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        <span class="keywordflow">if</span> (buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[b].<a class="code" href="structc__io__rblock__t.xhtml#ab12eae6e0009a0d4be116e40b4924cf5">state</a>==<a class="code" href="c__io__rbuffering_8h.xhtml#a66d7e951fc61c05941b5bd244295c271a9be7a235db60c93d71a1948e8aed1ef8">c_io_instantiated</a>){</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;          <span class="comment">/*</span></div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="comment">          c_io_printf</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="comment">        (i,</span></div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;<span class="comment">         &quot;rbuffering: helper loading block %d with age=%lld\n&quot;,</span></div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="comment">         b,</span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="comment">         LLD(buffData-&gt;blocks[b].age));      </span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="comment">          */</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;          <a class="code" href="c__io__rbuffering_8h.xhtml#ac3342dd13f72812bdbdac3996d9b0916">c_io_rbuffering_load_block</a>(i,&amp;buffData-&gt;<a class="code" href="structc__io__rbuffering__data__t.xhtml#a59e7df76d989110dccf53c3002aa87b7">blocks</a>[b]);</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        }   </div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;      }</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    }</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;      }</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    }</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#ac1e1e49a6a975c6815d78ee5eb4b959b">rbufLayer</a>-&gt;<a class="code" href="structc__io__layer__t.xhtml#abea45de0e0746075c17deadfafb825dc">helper_state</a> = <a class="code" href="c__io__layers_8h.xhtml#a1f9b140902f37e8d18f36a3474788a73a5aba2c48bc42498fc95f6e8b24212928">c_io_none</a>;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;  threadFlush();</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;}</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="comment"> *  wait for the contents of flag to be cond.</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io__rbuffering_8h.xhtml#a92528bd686350bf0b911af0a81eab496">c_io_rbuffering_waitCondidion</a>(int64_t * flag, int64_t cond){</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;  <span class="keywordtype">double</span> t;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;  <span class="comment">/* c_io_printf(-1,&quot;rbuffering: &quot;</span></div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;<span class="comment">     &quot;waitCondition %lld == %lld: \n&quot;,LLD(*flag),LLD(cond)); */</span></div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;  threadFlush();</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;  <span class="keywordflow">if</span> (*flag == cond)<span class="keywordflow">return</span>;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;  t=<a class="code" href="c__io_8h.xhtml#a3efa24e643c9045fd84b9584f64c1da7">c_io_getTime</a>();</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;  <span class="keywordflow">while</span> (*flag != cond){</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    usleep(100);</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    threadFlush();</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;  }</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a3f5a14465606fc10e36ec1789a00e422">wait</a>+=(<a class="code" href="c__io_8h.xhtml#a3efa24e643c9045fd84b9584f64c1da7">c_io_getTime</a>()-t);</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a1a27dc8cdfa8379a9e0a4910ff44d697">wait_calls</a>++;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;  <span class="comment">/* c_io_printf(-1,&quot;rbuffering: waitCondition: completed\n&quot;);       */</span></div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;}</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io__rbuffering_8h.xhtml#a98532a98e25a0204423dc29abe00fb90">c_io_rbuffering_waitGECondidion</a>(int64_t * flag, int64_t cond){</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;  <span class="keywordtype">double</span> t;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;  <span class="comment">/* c_io_printf(-1,&quot;rbuffering: &quot;</span></div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;<span class="comment">     &quot;waitGECondition %lld .GE. %lld: \n&quot;,LLD(*flag),LLD(cond));*/</span></div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;  threadFlush();</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;  <span class="keywordflow">if</span> (*flag &gt;= cond)<span class="keywordflow">return</span>;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;  t=<a class="code" href="c__io_8h.xhtml#a3efa24e643c9045fd84b9584f64c1da7">c_io_getTime</a>();</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;  <span class="keywordflow">while</span> (*flag &lt; cond){</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    usleep(100);</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    threadFlush();</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;  }</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a3f5a14465606fc10e36ec1789a00e422">wait</a>+=(<a class="code" href="c__io_8h.xhtml#a3efa24e643c9045fd84b9584f64c1da7">c_io_getTime</a>()-t);</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a1a27dc8cdfa8379a9e0a4910ff44d697">wait_calls</a>++;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;  <span class="comment">/* c_io_printf(-1,&quot;rbuffering: waitGECondition: completed\n&quot;);       */</span></div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;}</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;<span class="keywordtype">void</span> <a class="code" href="c__io__rbuffering_8h.xhtml#ad9bee4579d55fba3ad2b742112759f1e">c_io_rbuffering_waitNotCondidion</a>(int64_t * flag, int64_t cond){</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;  <span class="keywordtype">double</span> t;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;  <span class="comment">/* c_io_printf(-1,&quot;rbuffering: &quot;</span></div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;<span class="comment">     &quot;waitNotCondition %lld != %lld: \n&quot;,LLD(*flag),LLD(cond));       */</span></div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;  threadFlush();</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;  <span class="keywordflow">if</span> (*flag != cond)<span class="keywordflow">return</span>;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;  t=<a class="code" href="c__io_8h.xhtml#a3efa24e643c9045fd84b9584f64c1da7">c_io_getTime</a>();</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;  <span class="keywordflow">while</span> (*flag == cond){</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    usleep(100);</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    threadFlush();</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;  }</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a3f5a14465606fc10e36ec1789a00e422">wait</a>+=(<a class="code" href="c__io_8h.xhtml#a3efa24e643c9045fd84b9584f64c1da7">c_io_getTime</a>()-t);</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;  <a class="code" href="c__io__rbuffering_8h.xhtml#a0846f7a088a3079776d87b3412af5940">c_io_rbuffering_counters</a>-&gt;<a class="code" href="structc__io__rbuffering__counters__t.xhtml#a1a27dc8cdfa8379a9e0a4910ff44d697">wait_calls</a>++;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;  <span class="comment">/* c_io_printf(-1,&quot;rbuffering: waitNotCondition: completed\n&quot;);       */</span></div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;}</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;<span class="preprocessor">#endif</span></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
