<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/calc_w_eqn.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">calc_w_eqn.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="calc__w__eqn_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespacecalc__w__eqn__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacecalc__w__eqn__mod.xhtml" title="Calculates parcel vertical velocity diagnostic (w) ">calc_w_eqn_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacecalc__w__eqn__mod.xhtml#a1fb8243a802798cb75d3c8fbc4f9b7bd">calc_w_eqn</a> ( k, npnts, np_full, nlev, bterm, blowst    &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                      , ekp14, ekp34, zkm1, zk, zkp12, zkp1       &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;                      , thek,  thekp1,  thpk,  thpkp1             &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;                      , qek,   qekp1,   qpk,   qpkp1              &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;                      , qclek, qclekp1, qclpk, qclpkp1            &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                      , qcfek, qcfekp1, qcfpk, qcfpkp1            &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                      , w2p_km1, w2p_k, w2p_kp1 )</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="namespacecalc__w__eqn__mod.xhtml#a1fb8243a802798cb75d3c8fbc4f9b7bd">   18</a></span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: c_virtual</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span>  <span class="keywordtype">USE </span>scm_utils<span class="keywordtype">,           ONLY</span>: scm_timestep_count</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecv__run__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_run_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecv__run__mod.xhtml#adb523e824ee63bf708b36e5ef08eb898">cnv_wat_load_opt</a></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecv__param__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_param_mod</a>,                                               &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      only: <a class="code" href="namespacecv__param__mod.xhtml#a579b4e90409d0de47ee7a87806e76ef3">gamma_in_w_eqn</a>, <a class="code" href="namespacecv__param__mod.xhtml#aad1ec53fe15838480a8cf8dc7bb31305">watload_opt</a>, <a class="code" href="namespacecv__param__mod.xhtml#a16b70203d6b3852f56fa9632105c444f">w2pi</a>                     &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;          , <a class="code" href="namespacecv__param__mod.xhtml#a0f8c8ca02967e1199b291efabfa682f7">cumulus_r</a>, <a class="code" href="namespacecv__param__mod.xhtml#a4de8a67bc11ff140bc209b53d6696aa3">drag_coeff</a>, <a class="code" href="namespacecv__param__mod.xhtml#a992bb86665d5ca76d5ae705d82df14a7">k2_const</a>, <a class="code" href="namespacecv__param__mod.xhtml#ac7d40850d7f9118620521acd5f8b0148">fix_alpha</a>, <a class="code" href="namespacecv__param__mod.xhtml#ad7fb6c1b2af31215ecd0256b7426ec73">alpha_opt</a> &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;          , <a class="code" href="namespacecv__param__mod.xhtml#a67f245d8d52277f5e2f4875bcbb7cc89">wcalcmethod</a>, <a class="code" href="namespacecv__param__mod.xhtml#a820ff4b6f3a7b3813160a01ccbdd35bc">negbuoyopt</a>, <a class="code" href="namespacecv__param__mod.xhtml#a3a8e1684eb7ee893afc71c6b4d6a9c76">gamma_b</a>, <a class="code" href="namespacecv__param__mod.xhtml#a90611a551e437f75ad56df35147d303b">negbuoyminw</a></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keywordtype">USE </span>ieee_arithmetic</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,             ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,            ONLY</span>: jprb, jpim</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;-<span class="comment">! Description:</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;-<span class="comment">! Subroutine arguments</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;-</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: k            <span class="comment">! Current model layer</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: npnts        <span class="comment">! Vector length (nconv)</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: np_full      <span class="comment">! Full field length (n_dp/n_md/n_sh)</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: nlev         <span class="comment">! Number of model levels</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: ekp14(npnts) <span class="comment">! Entrainment rate on k+1/4 (-)</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: ekp34(npnts) <span class="comment">! Entrainment rate on k+3/4 (-)</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="comment">! Masks for points where ...</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: bterm(npnts) <span class="comment">! ...parcels terminate in layer k+1</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: blowst(npnts)<span class="comment">! ...stability is low enough for</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                      <span class="comment">!    convection to occur</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="comment">! Layer variables</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: zkm1  (npnts) <span class="comment">! Height of theta level k-1</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: zk    (npnts) <span class="comment">! Height of theta level k</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: zkp12 (npnts) <span class="comment">! Height of theta level k+1/2</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: zkp1  (npnts) <span class="comment">! Height of theta level k+1</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="comment">! Potential Temperature (Theta) on ...</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: thek  (npnts) <span class="comment">! ...layer centre k   (env)</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: thekp1(npnts) <span class="comment">! ...layer centre k+1 (env)</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: thpk  (npnts) <span class="comment">! ...layer centre k   (par)</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: thpkp1(npnts) <span class="comment">! ...layer centre k+1 (par)</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="comment">! Specific humidity on ...</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qek   (npnts) <span class="comment">! ...layer centre k   (env)</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qekp1 (npnts) <span class="comment">! ...layer centre k+1 (env)</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qpk   (npnts) <span class="comment">! ...layer centre k   (par)</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qpkp1 (npnts) <span class="comment">! ...layer centre k+1 (par)</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="comment">! Liquid water content on ...</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qclek   (npnts) <span class="comment">! ...layer centre k   (env)</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qclekp1 (npnts) <span class="comment">! ...layer centre k+1 (env)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qclpk   (npnts) <span class="comment">! ...layer centre k   (par)</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qclpkp1 (npnts) <span class="comment">! ...layer centre k+1 (par)</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="comment">! Ice water content on ...</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qcfek   (npnts) <span class="comment">! ...layer centre k   (env)</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qcfekp1 (npnts) <span class="comment">! ...layer centre k+1 (env)</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qcfpk   (npnts) <span class="comment">! ...layer centre k   (par)</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qcfpkp1 (npnts) <span class="comment">! ...layer centre k+1 (par)</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="comment">! Output variables</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="comment">! (Parcel vertical velocity)^2 on ...</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: w2p_km1(npnts) <span class="comment">! ...layer centre k-1 [(m/s)^2]</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: w2p_k  (npnts) <span class="comment">! ...layer centre k   [(m/s)^2]</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>   :: w2p_kp1(npnts) <span class="comment">! ...layer centre k+1 [(m/s)^2]</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">!=====================================================================</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="comment">! Local variables</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="comment">!===================</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordtype">REAL</span> :: alpha  (npnts)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="keywordtype">REAL</span> :: coeff1</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keywordtype">REAL</span> :: dz</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordtype">REAL</span> :: thvpk</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordtype">REAL</span> :: thvek</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">REAL</span> :: thvpkp1</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordtype">REAL</span> :: thvekp1</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">REAL</span> :: term1</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordtype">REAL</span> :: term2</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordtype">REAL</span> :: r_min</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordtype">REAL</span> :: BuoyExcess</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keywordtype">LOGICAL</span> :: parcel_neg_buoy</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordtype">INTEGER</span> :: i</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="comment">! Local parameters so as not to use magic numbers</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="comment">! (development)</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="comment">!===================================================================</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="comment">! For method use to calculate w or w^2</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: method_simpsonwiggert = 1</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: method_buoyscale      = 2</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="comment">! For setting calcuation of alpha</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: alpha_simpsonwiggert  = 1</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: alpha_um              = 2</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: alpha_const           = 3</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="comment">! For treatment of negative buoyancy occurance</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: NegBuoyLimit = 1</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: NegBuoyZero  = 2</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="comment">! For treatment of water loading</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: watload_simpsonwiggert = 1</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: watload_um             = 2</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">! End of declarations</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CALC_W_EQN&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="comment">! Current development notes (Subject to further testing)</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="comment">! =======================================================</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="comment">! The following notes apply to some sensitivity tests</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="comment">! on using a fixing value of alpha in the SCM. These are</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="comment">! NOT intended as general advice or recommendations</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="comment">! =======================================================</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="comment">! alpha_opt = um</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="comment">! fix_alpha = 0.01   ! This alpha dies</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="comment">! fix_alpha = 0.005  ! This alpha seems noise creeping in, effectively dead</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="comment">! fix_alpha = 0.002  ! Works okay</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="comment">! fix_alpha = 0.001  ! Nice and smooth some buoyancy violations</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="comment">! fix_alpha = 0.0001 ! Smooth, similar to none, peaks higher up, possibly</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                       <span class="comment">! too low</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;w2p_kp1(:) = 0.0</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordflow">SELECT CASE</span> (<a class="code" href="namespacecv__param__mod.xhtml#a67f245d8d52277f5e2f4875bcbb7cc89">wcalcmethod</a>)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keywordflow">CASE</span> (method_simpsonwiggert)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">SELECT CASE</span> (<a class="code" href="namespacecv__param__mod.xhtml#ad7fb6c1b2af31215ecd0256b7426ec73">alpha_opt</a>)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      <span class="keywordflow">CASE</span> (alpha_simpsonwiggert)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        alpha(:) = (0.75*<a class="code" href="namespacecv__param__mod.xhtml#a992bb86665d5ca76d5ae705d82df14a7">k2_const</a>+<a class="code" href="namespacecv__param__mod.xhtml#a4de8a67bc11ff140bc209b53d6696aa3">drag_coeff</a>)*(3.0/(8.0*<a class="code" href="namespacecv__param__mod.xhtml#a0f8c8ca02967e1199b291efabfa682f7">cumulus_r</a>))</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keywordflow">CASE</span> (alpha_um)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="comment">! Use convection scheme entrainment coefficents</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        alpha(:) =  0.5*(  ekp14(:)/(zkp12(:) - zk(:)   ) &amp;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                         + ekp34(:)/(zkp1(:)  - zkp12(:)) )</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="keywordflow">CASE</span> (alpha_const)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        alpha(:) = <a class="code" href="namespacecv__param__mod.xhtml#ac7d40850d7f9118620521acd5f8b0148">fix_alpha</a></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordflow">      CASE DEFAULT</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        alpha(:) = 0.0</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordflow">    END SELECT</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    coeff1 = 2.0*g/(1+<a class="code" href="namespacecv__param__mod.xhtml#a579b4e90409d0de47ee7a87806e76ef3">gamma_in_w_eqn</a>)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="comment">! Note: Could use module to get the layer thicknesses,</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="comment">!       though the height in the modules have halos etc, and these</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="comment">!       pointare compressed... not a problem if the indexes are available</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="comment">!       though how to relate the haloes.?</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="comment">!</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="comment">! For now pass down height levels like the rest of the convection scheme.</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="comment">! Give parcel at surface an initial kick to start it off?</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="comment">! Calculate limit of Radius, to small and the velocity squared goes -ve</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="comment">! which is not possible. i.e. the drag term (for the given seetings)</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="comment">! is too large.</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="comment">! Calculate min. radius required to prevent -ve w^2 for a given level</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      <span class="comment">! Calculate w2p if this point is marked as convecting</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      <span class="keywordflow">IF</span> ( .NOT. bterm(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="comment">! Calculate Parcel/Environment Virtual Theta for level k</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        -        <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#adb523e824ee63bf708b36e5ef08eb898">cnv_wat_load_opt</a> == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;          <span class="comment">! How to apply water loading?</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__param__mod.xhtml#aad1ec53fe15838480a8cf8dc7bb31305">watload_opt</a> == watload_simpsonwiggert) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;              thvpk = (thpk(i)*(1.0 + c_virtual*qpk(i)))*(1-qclpk(i)-qcfpk(i))</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;              thvek = (thek(i)*(1.0 + c_virtual*qek(i)))*(1-qclek(i)-qcfek(i))</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;          <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__param__mod.xhtml#aad1ec53fe15838480a8cf8dc7bb31305">watload_opt</a> == watload_um) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;              thvpk =  thpk(i)*(1.0 + c_virtual*qpk(i)-qclpk(i)-qcfpk(i))</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;              thvek =  thek(i)*(1.0 + c_virtual*qek(i)-qclek(i)-qcfek(i))</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;          <span class="comment">! Do not apply water loading</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          thvpk = thpk(i) * (1.0 + c_virtual*qpk(i))</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;          thvek = thek(i) * (1.0 + c_virtual*qek(i))</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="comment">! Take into account of water loading in parcel</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="comment">! Assume no water loading for now</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        term2 = (thvpk/thvek) - 1.0</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="comment">! This is the first level of a convective layer?</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="comment">! If so, assume initial w=w2pi for this convecting layer</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="keywordflow">IF</span> (blowst(i)) w2p_k(i) = <a class="code" href="namespacecv__param__mod.xhtml#a16b70203d6b3852f56fa9632105c444f">w2pi</a></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="comment">! Calculate w2p on level k+1 using forward difference</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        dz = zkp1(i) - zk(i)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        w2p_kp1(i) = dz*(coeff1*term2 - alpha(i)*w2p_k(i)) + w2p_k(i)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! bterm test</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! npnts</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  <span class="keywordflow">CASE</span> (method_buoyscale)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="comment">! Calculate w via scaled buoyancy on level k+1</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="comment">! This can only be done here because the call to</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="comment">! calc_w_eqn is at the end of convec2 when the input</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="comment">! parcel properties from convec2 at level k+1 are now</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="comment">! known</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="comment">!=======================================================</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="comment">! NOTE: May need to add a check for the initiation of</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="comment">!       convection so as to apply scaling to initial</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="comment">!       buoyancy excess</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="comment">!=======================================================</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="comment">!</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      <span class="comment">! Calculate w2p if this point is marked as convecting</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      <span class="keywordflow">IF</span> ( .NOT. bterm(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="comment">! Calculate Parcel/Environment Virtual Theta for level k+1</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#adb523e824ee63bf708b36e5ef08eb898">cnv_wat_load_opt</a> == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;          thvpkp1 = thpkp1(i) * (1.0+c_virtual*qpkp1(i)-qclpkp1(i)-qcfpkp1(i))</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;          thvekp1 = thekp1(i) * (1.0+c_virtual*qekp1(i)-qclekp1(i)-qcfekp1(i))</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;          thvpkp1 = thpkp1(i) * (1.0+c_virtual*qpkp1(i))</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;          thvekp1 = thekp1(i) * (1.0+c_virtual*qekp1(i))</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        buoyexcess = g * (thvpkp1 - thvekp1) / thvekp1</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        w2p_kp1(i) = (<a class="code" href="namespacecv__param__mod.xhtml#a3a8e1684eb7ee893afc71c6b4d6a9c76">gamma_b</a>*buoyexcess) * (<a class="code" href="namespacecv__param__mod.xhtml#a3a8e1684eb7ee893afc71c6b4d6a9c76">gamma_b</a>*buoyexcess)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">IF</span> (buoyexcess &lt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;          <span class="keywordflow">SELECT CASE</span>(<a class="code" href="namespacecv__param__mod.xhtml#a820ff4b6f3a7b3813160a01ccbdd35bc">negbuoyopt</a>)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;          <span class="keywordflow">CASE</span>(negbuoylimit)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            w2p_kp1(i) = (<a class="code" href="namespacecv__param__mod.xhtml#a3a8e1684eb7ee893afc71c6b4d6a9c76">gamma_b</a>*<a class="code" href="namespacecv__param__mod.xhtml#a90611a551e437f75ad56df35147d303b">negbuoyminw</a>) * (<a class="code" href="namespacecv__param__mod.xhtml#a3a8e1684eb7ee893afc71c6b4d6a9c76">gamma_b</a>*<a class="code" href="namespacecv__param__mod.xhtml#a90611a551e437f75ad56df35147d303b">negbuoyminw</a>)</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;          <span class="keywordflow">CASE</span>(negbuoyzero)</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            w2p_kp1(i) = 0.0</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keywordflow">          END SELECT</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">  END SELECT</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CALC_W_EQN&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespacecalc__w__eqn__mod.xhtml#a1fb8243a802798cb75d3c8fbc4f9b7bd">calc_w_eqn</a></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacecalc__w__eqn__mod.xhtml" title="Calculates parcel vertical velocity diagnostic (w) ">calc_w_eqn_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
