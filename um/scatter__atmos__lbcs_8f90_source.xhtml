<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/mpp/scatter_atmos_lbcs.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_14a8e295637c738acc16dab33472505b.xhtml">mpp</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">scatter_atmos_lbcs.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="scatter__atmos__lbcs_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="scatter__atmos__lbcs_8f90.xhtml#a6dbc7290498e27cd6c99f0fb668e2a5d" title="Passes out atmosphere LBCs to processors at boundaries. ">scatter_atmos_lbcs</a>(                                    &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  full_lbc,decomp_lbc,                                            &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  full_lbc_size,decomp_lbc_size,                                  &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  full_lbc_levels,decomp_lbc_levels,                              &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  fld_type,halo_type,rim_type,                                    &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  pe_for_level,                                                   &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  icode,cmessage)</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="scatter__atmos__lbcs_8f90.xhtml#a6dbc7290498e27cd6c99f0fb668e2a5d">   16</a></span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacedynamics__grid__mod.xhtml" title="Input control for dynamics. Input control for dynamics. ">dynamics_grid_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keywordtype">USE </span>gcom_mod</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacelbc__mod.xhtml" title="This file belongs in section: MPP. ">lbc_mod</a></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keywordtype">USE </span>mpl<span class="keywordtype">, ONLY</span>: mpl_real</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  full_lbc_size                               <span class="comment">! IN single level size of the FULL_LBC array</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  decomp_lbc_size                               <span class="comment">! IN single level size of the DECOMP_LBC</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                               <span class="comment">!    array</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: full_lbc_levels                                    <span class="comment">! IN number of levels of FULL_LBC on this</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                               <span class="comment">!    processor</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  decomp_lbc_levels</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                               <span class="comment">! IN number of levels of DECOMP_LBC</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  fld_type                                <span class="comment">! IN Which fld_type is the LBC?</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  halo_type                               <span class="comment">! IN Which halo_type is the LBC?</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  rim_type</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                               <span class="comment">! IN Which rim_type is the LBC?</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  pe_for_level(decomp_lbc_levels)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                               <span class="comment">! IN which level of FULL_LBC is on</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                               <span class="comment">!    which processor</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::  full_lbc(full_lbc_size,full_lbc_levels)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                               <span class="comment">! IN Some levels of the full LBC</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: decomp_lbc(decomp_lbc_size,decomp_lbc_levels)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                               <span class="comment">! OUT All levels of the decomposed LBC on</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                               <span class="comment">!     this processor</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> :: icode  <span class="comment">! Return code not used at present.</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keywordtype">CHARACTER(LEN=80)</span> ::  cmessage <span class="comment">! OUT Error message</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#include &quot;typsize.h&quot;</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">INTEGER</span> ::                                                        &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  iproc                                                           &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                     <span class="comment">! loop counter for loop over processors</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;, iside                                                           &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                     <span class="comment">! loop counter for loop over sides</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;, <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>                                                               &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                     <span class="comment">! loop counter for levels</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;, full_lbc_row_len                                                &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                     <span class="comment">! length of a row of data on the full LBC</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;, full_lbc_nrows                                                  &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                     <span class="comment">! number of rows of data on the full LBC</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;, decomp_lbc_row_len                                              &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                     <span class="comment">! length of a row of data on the</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                     <span class="comment">! decomposed LBC</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;, decomp_lbc_nrows                                                &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                     <span class="comment">! number of rows of data on the</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                     <span class="comment">! decomposed LBC</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;, first_lbc_pt                                                    &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                     <span class="comment">! first point in full LBC to start</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                     <span class="comment">! copying from</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;, first_lbc_row                                                   &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                     <span class="comment">! first row in fill LBC to start</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                     <span class="comment">! copying from</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;, level_index_pe(0:nproc-1)                                       &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                     <span class="comment">! How many levels on each PE</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;, level_index(decomp_lbc_levels)                                  &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                     <span class="comment">! Which level full_LBC corresponds</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                     <span class="comment">! to the real level</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;, full_lbc_start_pt                                               &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                     <span class="comment">! First point index on a level of the</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                     <span class="comment">! full LBC to start sending</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;, decomp_lbc_start_pt                                             &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                     <span class="comment">! First point index on a level of the</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                     <span class="comment">! decomposed LBC to start receiving</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;, info                                                                                <span class="comment">! GCOM return code</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keywordtype">INTEGER</span> :: g_decomp_lbc_size(0:nproc-1)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">! New data buffer to fill the decomposition to scatter</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keywordtype">INTEGER</span> :: size_data_lbc, data_lbc_start</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: data_lbc(:)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! Control data needed for the scattering</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordtype">INTEGER</span> :: recvcount</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordtype">INTEGER</span> :: displs(0:nproc-1), sendcounts(0:nproc-1)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keywordtype">INTEGER</span> :: my_comm <span class="comment">! communicator</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">! Other variables</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keywordtype">INTEGER</span> :: i, j, index_s, index_d</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">! 1.0 Set up indexing describing where each level of full LBC data is</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">!     held</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;SCATTER_ATMOS_LBCS&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;icode = 0</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;g_decomp_lbc_size=0</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;g_decomp_lbc_size(<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>)=decomp_lbc_size</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">CALL </span>gc_imax(nproc,nproc,info,g_decomp_lbc_size(0:nproc-1))</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;level_index_pe(:)=0</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">! Calculate indexing of full LBC data on the processors.</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">! A given level &quot;k&quot; of full LBC data will be held on</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">! processor &quot;PE_FOR_LEVEL(k)&quot; and the index of the level</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">! on this processor will be &quot;level_index(k)&quot;</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=1,decomp_lbc_levels</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  level_index_pe(pe_for_level(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))=                                &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    level_index_pe(pe_for_level(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))+1</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  level_index(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=level_index_pe(pe_for_level(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">! Allocate the buffer</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  size_data_lbc = <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(g_decomp_lbc_size) * full_lbc_levels</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keyword">allocate</span>(data_lbc(size_data_lbc))</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  displs(0)=0</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keywordflow">DO</span> iproc=1, nproc-1</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    displs(iproc)=displs(iproc-1) +            &amp;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      g_decomp_lbc_size(iproc-1) * full_lbc_levels</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keywordflow">DO</span> iproc=0, nproc-1</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">DO</span> iside=1,4</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="keywordflow">IF</span> (g_at_extremity(iside,iproc)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">! This processor is at edge type iside and so needs LBC data</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">! In order to copy data from full_lbc array to data_lbc ( that</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">! contains data to be scattered ) the following variables need to</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">! be calculated</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">! full_lbc_row_len : East-West dimension of the full lbc side</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">! full_lbc_nrows : North-South dimension of the full lbc side</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">! decomp_lbc_row_len : East-West dimension of decomp lbc side</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">! decomp_lbc_nrows : North-South dimension of decomp lbc side</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">! full_lbc_start_pt : First point of the decomposed lbc side inside</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">!                     the 1d full_lbc array</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">! decomp_lbc_start_pt : First point of the decomposed lbc side inside</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">!                       the 1d decomposed lbc array</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">! data_lbc_start : First point inside the data lbc array ( corresponds</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">!                  to the first point of the distributed lbc_comp )</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="keywordflow">IF</span> ((iside == <a class="code" href="namespaceum__parparams.xhtml#a575a86c6ed199d617f169b0bbd20ec88">pnorth</a>).OR.(iside==<a class="code" href="namespaceum__parparams.xhtml#a055cccbf23dd97e54f86b7be2fbfccb3">psouth</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                <span class="comment">! Calculate size of FULL_LBC</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;          <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;          <span class="keywordflow">IF</span> (fld_type  ==  fld_type_u) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            full_lbc_row_len=glsize(1,fld_type)-1</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            full_lbc_row_len=glsize(1,fld_type)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;          full_lbc_row_len=glsize(1,fld_type)<span class="keywordflow">          END IF</span>  <span class="comment">! vatpoles</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;          full_lbc_row_len=full_lbc_row_len+2*halosize(1,halo_type)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;          full_lbc_nrows=halosize(2,halo_type)+rimwidtha(rim_type)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">! Calculate size of DECOMP_LBC</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;          <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;          <span class="keywordflow">IF</span> ((fld_type  ==  fld_type_u) .AND.                      &amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            (g_at_extremity(<a class="code" href="namespaceum__parparams.xhtml#a6419e182a3656885cf3147466ab705ea">peast</a>,iproc))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            decomp_lbc_row_len=                                     &amp;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            g_lasize(1,fld_type,halo_type,iproc)-1</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            decomp_lbc_row_len=                                     &amp;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            g_lasize(1,fld_type,halo_type,iproc)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;          decomp_lbc_row_len=                                       &amp;          g_lasize(1,fld_type,halo_type,iproc)<span class="keywordflow">          END IF</span>  <span class="comment">! vatpoles</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;          decomp_lbc_nrows=halosize(2,halo_type)+                   &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                         rimwidtha(rim_type)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">! Calculate first point of DECOMP_LBC in FULL_LBC</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;          first_lbc_pt=g_datastart(1,iproc)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          first_lbc_row=1</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;          full_lbc_start_pt=                                          &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <a class="code" href="namespacelbc__mod.xhtml#aaa9641aa576ea5b414b5da0e5b67cd3d">global_lbc_starta</a>(iside,fld_type,halo_type,rim_type)+     &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            (first_lbc_row-1)*full_lbc_row_len +                      &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            first_lbc_pt-1</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;          decomp_lbc_start_pt=                                        &amp;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;          <a class="code" href="namespacelbc__mod.xhtml#a74abf1612e9104f6bfed396d5557d263">g_lbc_starta</a>(iside,fld_type,halo_type,rim_type,iproc)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ((iside==<a class="code" href="namespaceum__parparams.xhtml#a6419e182a3656885cf3147466ab705ea">peast</a>).OR.(iside==<a class="code" href="namespaceum__parparams.xhtml#adb75b95f9b9de945d4e1c15a922e9eab">pwest</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">! Calculate size of FULL_LBC</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;          full_lbc_row_len=halosize(1,halo_type)+                   &amp;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                         rimwidtha(rim_type)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;          full_lbc_nrows=glsize(2,fld_type)-2*rimwidtha(rim_type)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="comment">! Calculate size of DECOMP_LBC</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;          decomp_lbc_row_len=halosize(1,halo_type)+                 &amp;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                             rimwidtha(rim_type)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;          decomp_lbc_nrows=g_lasize(2,fld_type,halo_type,iproc)</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;          <span class="keywordflow">IF</span> (g_at_extremity(<a class="code" href="namespaceum__parparams.xhtml#a575a86c6ed199d617f169b0bbd20ec88">pnorth</a>,iproc))                         &amp;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            decomp_lbc_nrows=decomp_lbc_nrows-                      &amp;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                             halosize(2,halo_type)-               &amp;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                             rimwidtha(rim_type)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;          <span class="keywordflow">IF</span> (g_at_extremity(<a class="code" href="namespaceum__parparams.xhtml#a055cccbf23dd97e54f86b7be2fbfccb3">psouth</a>,iproc))                         &amp;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            decomp_lbc_nrows=decomp_lbc_nrows-                      &amp;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                             halosize(2,halo_type)-               &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                             rimwidtha(rim_type)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="comment">! Calculate first point of DECOMP_LBC in FULL_LBC</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;          first_lbc_pt=1</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;          first_lbc_row=g_datastart(2,iproc)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;          <span class="keywordflow">IF</span> (.NOT. g_at_extremity(<a class="code" href="namespaceum__parparams.xhtml#a055cccbf23dd97e54f86b7be2fbfccb3">psouth</a>,iproc))                   &amp;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            first_lbc_row=first_lbc_row-                            &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                          rimwidtha(rim_type)-                    &amp;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                          halosize(2,halo_type)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;          full_lbc_start_pt=                                          &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <a class="code" href="namespacelbc__mod.xhtml#aaa9641aa576ea5b414b5da0e5b67cd3d">global_lbc_starta</a>(iside,fld_type,halo_type,rim_type)+     &amp;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            (first_lbc_row-1)*full_lbc_row_len +                      &amp;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            first_lbc_pt-1</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;          decomp_lbc_start_pt=                                        &amp;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;          <a class="code" href="namespacelbc__mod.xhtml#a74abf1612e9104f6bfed396d5557d263">g_lbc_starta</a>(iside,fld_type,halo_type,rim_type,iproc)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! N/S or E/W test      </span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        data_lbc_start = displs(iproc)</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">! Now we can do the copy</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=1, decomp_lbc_levels</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;          <span class="keywordflow">DO</span> j=1, decomp_lbc_nrows</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keywordflow">DO</span> i=1, decomp_lbc_row_len</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;               index_s=full_lbc_start_pt + (i-1) + (j-1) * full_lbc_row_len</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;               index_d=data_lbc_start +                              &amp;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                 decomp_lbc_start_pt +                       &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                 (i-1) + (j-1) * decomp_lbc_row_len +                &amp;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                 (<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1) * g_decomp_lbc_size(iproc)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;               data_lbc(index_d)=full_lbc(index_s,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! At extremity</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">! iside loop        END DO ! iproc loop</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  <span class="keyword">ALLOCATE</span>(data_lbc(1))</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! Master PE Section</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">! And Now we can do the scatter</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keyword">CALL </span>gc_get_communicator(my_comm, info)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;sendcounts(:)=g_decomp_lbc_size(:) * decomp_lbc_levels</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;recvcount=decomp_lbc_size*decomp_lbc_levels</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="keyword">CALL </span>mpl_scatterv(data_lbc, sendcounts, displs, mpl_real, &amp;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                decomp_lbc, recvcount, mpl_real, 0, my_comm, info)</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keyword">deallocate</span>(data_lbc)</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;SCATTER_ATMOS_LBCS&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="scatter__atmos__lbcs_8f90.xhtml#a6dbc7290498e27cd6c99f0fb668e2a5d" title="Passes out atmosphere LBCs to processors at boundaries. ">scatter_atmos_lbcs</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
