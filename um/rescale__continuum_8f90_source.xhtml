<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/radiance_core/rescale_continuum.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_68003e6e168556241f03263b340b5802.xhtml">radiance_core</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">rescale_continuum.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="rescale__continuum_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;     , p, t, i_top                                                      &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;     , density, molar_density_water, molar_density_frn                  &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;     , water_frac                                                       &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;     , amount_continuum                                                 &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;     , i_fnc                                                            &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;     , p_reference, t_reference, scale_parameter                        &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;     , nd_profile, nd_layer                                             &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;     , nd_scale_variable                                                &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;     )</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacerealtype__rd.xhtml" title="Module to set the precision of real variables. ">realtype_rd</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacerealtype__rd.xhtml#aff478693c9291d2b87e7b91444f5b55c">realk</a></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacerad__pcf.xhtml" title="Radiation Program Configuration File. ">rad_pcf</a></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacerad__ccf.xhtml" title="Radiation Constant Configuration File. ">rad_ccf</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacerad__ccf.xhtml#a9fd98f5f6bf0fbe3bddfd2eab5d01eb9" title="Molar weight of dry air. ">n2_mass_frac</a></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacevectlib__mod.xhtml">vectlib_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacevectlib__mod.xhtml#ac137092b04949de8f6d44782d43343d6">rtor_v</a></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      nd_profile                                                        &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    , nd_layer                                                          &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    , nd_scale_variable</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      n_profile                                                         &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    , n_layer                                                           &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    , i_continuum                                                       &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    , i_fnc                                                             &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    , i_top</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      water_frac(nd_profile, nd_layer)                                  &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    , p(nd_profile, nd_layer)                                           &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    , t(nd_profile, nd_layer)                                           &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    , density(nd_profile, nd_layer)                                     &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    , molar_density_water(nd_profile, nd_layer)                         &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    , molar_density_frn(nd_profile, nd_layer)                           &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    , p_reference                                                       &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    , t_reference                                                       &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    , scale_parameter(nd_scale_variable)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                          &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      amount_continuum(nd_profile, nd_layer)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      l                                                                 &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    , i</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keywordtype">REAL (RealK)</span> :: pwk(n_profile,n_layer-i_top+1)  <span class="comment">! Workspace</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keywordtype">REAL (RealK)</span> :: twk(n_profile,n_layer-i_top+1)  <span class="comment">! Workspace</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordtype">REAL (RealK)</span> :: sp1(n_profile,n_layer-i_top+1)  <span class="comment">! Workspace</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordtype">REAL (RealK)</span> :: sp2(n_profile,n_layer-i_top+1)  <span class="comment">! Workspace</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordtype">INTEGER</span> :: n_input      <span class="comment">! No. of inputs for rtor_v function</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;RESCALE_CONTINUUM&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordflow">DO</span> i=1, n_layer-i_top+1</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      sp1(l,i)=scale_parameter(1)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      sp2(l,i)=scale_parameter(2)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  n_input=(n_layer-i_top+1)*n_profile</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keywordflow">DO</span> i=   1, n_layer-i_top+1</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      pwk(l,i)=p(l, i_top+i-1)/p_reference</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespacevectlib__mod.xhtml#ac137092b04949de8f6d44782d43343d6">rtor_v</a>(n_input,pwk,sp1,pwk)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordflow">IF</span> (i_fnc == <a class="code" href="namespacerad__pcf.xhtml#a4dc30725c338d4f6e9ac211553775029">ip_scale_power_law</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">DO</span> i=   1, n_layer-i_top+1</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        twk(l,i)=t(l, i_top+i-1)/t_reference</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacevectlib__mod.xhtml#ac137092b04949de8f6d44782d43343d6">rtor_v</a>(n_input,twk,sp2,twk)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">DO</span> i=i_top, n_layer</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        amount_continuum(l, i)=pwk(l,i-i_top+1)*twk(l,i-i_top+1)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>(i_fnc == <a class="code" href="namespacerad__pcf.xhtml#ac84b9626a71d9b41423deba002cbeb54">ip_scale_power_quad</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">DO</span> i=i_top, n_layer</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        amount_continuum(l, i)                                          &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;           =pwk(l,i-i_top+1)                                            &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;           *(1.0e+00+scale_parameter(2)*(t(l, i)                        &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;           /t_reference-1.0e+00)                                        &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;           +scale_parameter(3)*(t(l, i)                                 &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;           /t_reference-1.0e+00)**2)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordflow">IF</span> (i_continuum == <a class="code" href="namespacerad__pcf.xhtml#ab6d1c9a75f9713e877b1e102494c1fbe">ip_self_continuum</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">DO</span> i=1, n_layer</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        amount_continuum(l, i)=amount_continuum(l, i)                   &amp;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;          *molar_density_water(l, i)*water_frac(l, i)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (i_continuum == <a class="code" href="namespacerad__pcf.xhtml#a3006e008fe515a636087b4ec9cefc7e8">ip_frn_continuum</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">DO</span> i=1, n_layer</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        amount_continuum(l, i)=amount_continuum(l, i)                   &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;          *molar_density_frn(l, i)*water_frac(l, i)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (i_continuum == <a class="code" href="namespacerad__pcf.xhtml#a9a8f31b0d45b75d86092a08116516b02">ip_n2_continuum</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">DO</span> i=1, n_layer</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        amount_continuum(l, i)=amount_continuum(l, i)                   &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;          *<a class="code" href="namespacerad__ccf.xhtml#a9fd98f5f6bf0fbe3bddfd2eab5d01eb9" title="Molar weight of dry air. ">n2_mass_frac</a>*density(l, i)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;RESCALE_CONTINUUM&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword">END SUBROUTINE </span>rescale_continuum</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
