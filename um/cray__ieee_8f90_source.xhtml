<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/qxfieldcos/cray_ieee.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_460ae7958ffdd136c055c45af2f50e68.xhtml">qxfieldcos</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">cray_ieee.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="cray__ieee_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="cray__ieee_8f90.xhtml#aa27664f4d181048ca56074a5a7027fb6" title="LL Subroutine: CRAY_IEEE LL Subroutine: CRAY_IEEE LL LL Purpose: To read a direct access PP file and ...">cray_ieee</a>(IDIM,NUM_VALUES,PPUNIT,                      &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                   LEN1_LOOKUP,PP_LEN2_LOOKUP,PP_FIXHD,LOOKUP,          &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                   ROOKUP,ENTRY_NO,DATA_ADD,MODEL_FLAG,                 &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                   COS_PPUNIT,IEXTRA,IEXTRAW,LAST,OPER,MASS,            &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                   ICODE,CMESSAGE,LCAL360)</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="cray__ieee_8f90.xhtml#aa27664f4d181048ca56074a5a7027fb6">   25</a></span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;          <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;          <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;     <span class="comment">!     Arguments</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">CHARACTER</span>                                                         &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;           CMESSAGE*(*)           <span class="comment">!OUT error messages</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <span class="keywordtype">LOGICAL</span>                                                           &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;           LAST                                                         &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                                  <span class="comment">!IN indicates last record process</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;          ,oper                                                         &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                                  <span class="comment">!IN indicates whether operational</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;          ,<a class="code" href="typptra_8h.xhtml#a4ac6ab524823770b751a91f9f3cd54c4">mass</a>                                                         &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                                  <span class="comment">!IN indicates whether using for MASS</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;          ,model_flag                                                   &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                  <span class="comment">!IN True =&gt; dumps, False =&gt; fieldsfile</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;          ,<a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;           PPUNIT                                                       &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                  <span class="comment">!IN unit no of required fieldsfile</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;          ,cos_ppunit                                                   &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                  <span class="comment">!IN unit no of COS output file</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;          ,num_values                                                   &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                  <span class="comment">!IN No of data points NROWS*NCOLS</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;          ,idim                                                         &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                  <span class="comment">!IN NUM_VALUES rounded to an even no</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;          ,data_add                                                     &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                  <span class="comment">!IN The word address of the data.</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;     &amp;    ,len1_lookup                                                  &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                  <span class="comment">!IN First dimension of the lookup</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;     &amp;    ,pp_len2_lookup                                               &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                  <span class="comment">!IN Size of the LOOKUP on the file</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;     &amp;    ,iextra(10)                                                   &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                  <span class="comment">!IN Used within READFF</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;     &amp;    ,iextraw                                                      &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                  <span class="comment">!IN no of words of extra data.</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;     &amp;    ,entry_no                                                     &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                  <span class="comment">!IN Lookup entry no of the Field.</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;     &amp;    ,pp_fixhd(*)                                                  &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                  <span class="comment">!IN PPfile fixed header</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;     &amp;    ,lookup(len1_lookup,pp_len2_lookup)                           &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                               <span class="comment">!IN integer lookup</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;     &amp;    ,icode                  <span class="comment">!OUT error code</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;     &amp;     ROOKUP(LEN1_LOOKUP,PP_LEN2_LOOKUP)  <span class="comment">!IN Real lookup</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordtype">EXTERNAL</span> <a class="code" href="int__from__real_8f90.xhtml#a0863f0c3aec6a96d70ad70a3f2a97018" title="Subroutine interface: ">int_from_real</a></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keywordtype">INTEGER</span> IEEE2IEG</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="keywordtype">INTEGER</span> INT_FROM_REAL</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;     &amp;     MAX_LEN_ILABEL                                               &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;     &amp;    ,MAX_LEN_RLABEL</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <span class="keywordtype">PARAMETER</span> (max_len_ilabel=45,max_len_rlabel=32)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;     &amp;     END_YEAR                                                     &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                           <span class="comment">! )</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;     &amp;    ,end_month                                                    &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                           <span class="comment">! )</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;     &amp;    ,end_day                                                      &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                           <span class="comment">! )  arguments</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;     &amp;    ,end_hour                                                     &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                           <span class="comment">! )</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;     &amp;    ,end_minute                                                   &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                           <span class="comment">! )     for</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;     &amp;    ,end_second                                                   &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                           <span class="comment">! )</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;     &amp;    ,end_day_number                                               &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                           <span class="comment">! )</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;     &amp;    ,end_time_days                                                &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                           <span class="comment">! )</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;     &amp;    ,end_time_secs                                                &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                           <span class="comment">! )  date/time</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;     &amp;    ,start_time_secs                                              &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                           <span class="comment">! )</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;     &amp;    ,start_time_days                                              &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                           <span class="comment">! )</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;     &amp;    ,data_year                                                    &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                           <span class="comment">! )  conversion</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;     &amp;    ,data_month                                                   &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                           <span class="comment">! )</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;     &amp;    ,data_day                                                     &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                           <span class="comment">! )     when</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;     &amp;    ,data_hour                                                    &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                           <span class="comment">! )</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;     &amp;    ,data_minute                                                  &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                           <span class="comment">! )  OPER is TRUE</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;     &amp;    ,data_second                                                  &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                           <span class="comment">! )</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;     &amp;    ,data_day_number                                              &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                           <span class="comment">! )</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;     &amp;    ,addr                                                         &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                           <span class="comment">! address in fld, used to process extra data</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;     &amp;    ,ieee_addr                                                    &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                           <span class="comment">! address in ibm fld where extra data going.</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;     &amp;    ,bit_off                                                      &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                           <span class="comment">! what bit offset are we using</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">!                            (32 for odd, 0 for even values of addr)</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;     &amp;    ,ier                                                          &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                           <span class="comment">! error RETURN CODE from conversion</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;     &amp;    ,iv                                                           &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                           <span class="comment">! value of integer code for vectors</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;     &amp;    ,len_ilabel                                                   &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                           <span class="comment">! number of values in ILABEL</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;     &amp;    ,len_rlabel                                                   &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                           <span class="comment">! number of values in RLABEL</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;     &amp;    ,data_values                                                  &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                           <span class="comment">! number of values in real extra data</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;     &amp;    ,ilabel(max_len_ilabel)                                       &amp;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                                        <span class="comment">! holds integer part of LOOKUP</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;     &amp;    ,ieee_label((len1_lookup+1)/2)<span class="comment">! holds IEEEconversion of LABEL</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;     &amp;     FIELD(IDIM)                                                  &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                  <span class="comment">! array holding data</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;     &amp;    ,ieee_field(idim/2)                                           &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                  <span class="comment">! array holding IEEE data</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;     &amp;    ,rlabel(max_len_rlabel) <span class="comment">! holds real part of LOOKUP</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">!    LOCAL VARIABLES</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;     &amp;     I                                                            &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                          <span class="comment">! local counter</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;     &amp;    ,pack_type                                                    &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                          <span class="comment">! packing type N1 of LBPACK</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;     &amp;    ,data_comp                                                    &amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                          <span class="comment">! data compression code</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;     &amp;    ,data_comp_def                                                &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                          <span class="comment">! data compression definition</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;     &amp;    ,number_format                                                &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                          <span class="comment">! number format</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;     &amp;    ,fcst_prd</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordtype">LOGICAL</span> PACKED      <span class="comment">! indicates whether the data is packed</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordflow">DO</span> i=1,idim        <span class="comment">! make sure FIELD is initialised. An odd</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a>(i)=0.0       <span class="comment">! number of points might upset conversion</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      packed=.false.</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">!L access the Fields File.</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">! DEPENDS ON: readff_fieldcos</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      <span class="keyword">CALL </span><a class="code" href="readff-fieldcos_8f90.xhtml#ad3bad29fee11de511cba8a8aa3fbbb18" title="LL Routine: READFF LL Routine: READFF LL LL Purpose: To read a direct access PP file. LL LL Programming standard: UM Doc Paper 3, version 1 (15/1/90) LL LL Logical components covered: LL LL Project task: LL LL External documentation: LL. ">readff_fieldcos</a>(ppunit,<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a>,idim,entry_no,                  &amp;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;     &amp;ilabel,rlabel,iextra,pp_len2_lookup,len1_lookup,                  &amp;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;     &amp;pp_fixhd,lookup,rookup,data_add,                                  &amp;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;     &amp;model_flag,max_len_ilabel,max_len_rlabel,                         &amp;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;     &amp;len_ilabel,len_rlabel,                                            &amp;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;     &amp;icode,cmessage)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      <span class="keywordflow">IF</span>(icode /= 0) <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">! The data has now been read in and has 1) Been read in packed</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">! and left packed or 2) read in as packed and then un-packed or</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">! 3) The data was never packed at all.  If packed FIELD will have</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">! LBLREC/2 values if a DUMP and LBLREC values if a PP_FILE. If</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">! the data is not packed FIELD will have the no of data points</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">! length LBROW*LBNPT+LBEXT if a pp_file and LBLREC if a dump file.</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">! For a dump LBLREC will hold original no of data points.  For a</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">! pp_file LBLREC will hold the no of CRAY words needed to hold</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">! the data (if un-packed also no of data points)</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">! The value returned in ILABEL(LBLREC) may have to change because</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">! IEEE only has a 32 bit word length compared to the CRAY&#39;s 64</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">! bit word length. In IEEE ILABEL(LBLREC) will be no of 32 bit</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">! words needed to hold the data . If the data is not packed (or</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">! it has been un-packed) then this will be the no of data points.</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">! If the data is left packed the value of ILABEL(LBLREC)</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">! will have to be doubled as the no of 32bit words needed to</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">! hold the data will twice that on the CRAY.</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">! On output the data will either have been converted to IEEE</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">! numbers and stored in IEEE_FIELD or left packed in FIELD,but with</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">! 32 bit ieee numbers substituted into minimum values.</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">! If packed then LBLREC/2  words of FIELD are written as LBLREC is</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">! now the no of 32 bit words. If un-packed IEEE_FIELD which has size</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">! IDIM/2 (or NUM_VALUES/2) is written as it is.</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">!     decode LBPACK</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;      pack_type = mod(ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>),10)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      data_comp = mod(ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>),100) - pack_type</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      data_comp_def = mod(ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>),1000) -data_comp -pack_type</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      number_format = ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>)/1000</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordflow">IF</span>(pack_type &gt;  0) packed=.true.</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;      <span class="keywordflow">IF</span>(packed) <span class="keywordflow">THEN</span>              <span class="comment">! Data left in packed form. Number of</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        ilabel(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>)=ilabel(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>)*2 <span class="comment">! IEEE words needed is 2*CRAY</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">! verify that don&#39;t have extra data and packing at once</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;      <span class="keywordflow">IF</span> (iextraw &gt;  0.AND.packed) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        cmessage=<span class="stringliteral">&#39;FIELDCOS: Extra data with packing not supported&#39;</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        icode=1</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">!L Convert ILABEL to IBM(Hitachi) integers.</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">! For either an accumulation or time mean (ie LBTIM /= 0) the start &amp;</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">! end time are in a different order to the data and veri time for a</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">! snap shot type field. This anomaly has to be catered for operational</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">! use. Thus the PP package will not work properly on accum/time mn field</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">! for operational Fields files.</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      <span class="keywordflow">IF</span>(ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a27c45d3289bc2f747dd0912b6909cae1">lbtim</a>) /= 11.AND.oper) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">IF</span>(ilabel(<a class="code" href="namespacelookup__addresses.xhtml#aabd1e58da18c133f0ceeba0db78c9ecf">lbyr</a>) &gt;  0)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">!       re -calculate the data time from the end time  and fcst period</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">!     First calculate the no of seconds from day 0</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">! if initial data time is missing, cannot recalculate data time</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">! for accum/time mean fields, hence, the PP Package would fail.</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">! Therefore, if the anomaly arises and temporal data is missing,</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">! this subroutine will be aborted and data from this field will</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">! not be written to COS file.</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keyword">        END</span>_YEAR=ILABEL(LBYRD)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keyword">        END</span>_MONTH=ILABEL(LBMOND)</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keyword">        END</span>_DAY=ILABEL(LBDATD)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keyword">        END</span>_HOUR=ILABEL(LBHRD)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keyword">        END</span>_MINUTE=ILABEL(LBMIND)</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keyword">        END</span>_SECOND=ILABEL(LBSECD)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        fcst_prd=ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a828c4447a68437df852bfb58d8fbc25b">lbft</a>)</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">!       WRITE(6,*)&#39; START YR/MO/DA/HR/MIN/SEC BEFORE &#39;,ILABEL(1), &amp;</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">!       ILABEL(2),ILABEL(3),ILABEL(4),ILABEL(5),ILABEL(6)</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">!       WRITE(6,*)&#39; END   YR/MO/DA/HR/MIN/SEC BEFORE &#39;,ILABEL(7), &amp;</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">!       ILABEL(8),ILABEL(9),ILABEL(10),ILABEL(11),ILABEL(12)</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">!       WRITE(6,*)&#39; FCST_PRD BEFORE  &#39;,FCST_PRD</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">! DEPENDS ON: time2sec</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="keyword">CALL </span>time2sec (end_year,end_month,end_day,end_hour,             &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;     &amp;               end_minute,end_second,0,0,                         &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;     &amp;               end_time_days,end_time_secs,<a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a>)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">!   Subtract forecast hours from end time in (days,seconds)</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">! DEPENDS ON: time_df</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;       <span class="keyword">CALL </span><a class="code" href="time__df_8f90.xhtml#a492b028f7c354e8b20e685c39521c011" title="LL Routine: TIME_DF -!&gt;LL. ">time_df</a>(end_time_days,end_time_secs,0,-fcst_prd*3600,       &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;     &amp;              start_time_days,start_time_secs)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">!     Go back and re-calculate Year/Month/Day/Hour/Sec.</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">! DEPENDS ON: sec2time</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;       <span class="keyword">CALL </span><a class="code" href="sec2time_8f90.xhtml#ac74065211f64970d62c9e83164972f15" title="LL Routine: SEC2TIM0 !&gt;LL. ">sec2time</a>(0,0,start_time_days,start_time_secs,               &amp;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;     &amp;             data_year,data_month,data_day,                       &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;     &amp;             data_hour,data_minute,data_second,data_day_number,   &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;     &amp;             <a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a>)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a1e2e3863b21846750a0050a2c31c3b5c">lbyrd</a>)=data_year</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a8f7f5cb431a34329a65af835c2ff9038">lbmond</a>)=data_month</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a5ac67ad7ba51ace85cd20c4f10b2c8f7">lbdatd</a>)=data_day</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a2fb28367de3bc21b1a4702460b6c2a0b">lbhrd</a>)=data_hour</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        ilabel(<a class="code" href="namespacelookup__addresses.xhtml#af089abfa7a156eaf12983559df8acc76">lbmind</a>)=data_minute</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        ilabel(<a class="code" href="namespacelookup__addresses.xhtml#aefb0ae53542fec05683950c6badb04f1">lbsecd</a>)=data_second</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        ilabel(<a class="code" href="namespacelookup__addresses.xhtml#aabd1e58da18c133f0ceeba0db78c9ecf">lbyr</a>)=end_year</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        ilabel(<a class="code" href="namespacelookup__addresses.xhtml#aeaaef1dcf94dbe6d39b5783438cdda5b">lbmon</a>)=end_month</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        ilabel(<a class="code" href="namespacelookup__addresses.xhtml#ad8b62de4259cf3a7c56f0ae188e526f8">lbdat</a>)=end_day</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        ilabel(<a class="code" href="namespacelookup__addresses.xhtml#ab2bce3bc87d25358476475aed562f068">lbhr</a>)=end_hour</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a284423d27573ccb30828cde5ff510b52">lbmin</a>)=end_minute</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        ilabel(<a class="code" href="namespacelookup__addresses.xhtml#ac40a8889f8d7a68dd880a2ccc1769338">lbsec</a>)=end_second</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">!       WRITE(6,*)&#39; --&#39;</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">!       WRITE(6,*)&#39; Veri  YR/MO/DA/HR/MIN/SEC AFTER &#39;,ILABEL(1), &amp;</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">!       ILABEL(2),ILABEL(3),ILABEL(4),ILABEL(5),ILABEL(6)</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">!       WRITE(6,*)&#39; Data  YR/MO/DA/HR/MIN/SEC AFTER &#39;,ILABEL(7), &amp;</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">!       ILABEL(8),ILABEL(9),ILABEL(10),ILABEL(11),ILABEL(12)</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">!       WRITE(6,*)&#39; FCST_PRD AFTER   &#39;,FCST_PRD</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">!       WRITE(6,*)&#39; --&#39;</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">!       WRITE(6,*)&#39; --&#39;</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;          <span class="keyword">WRITE</span>(7,*) <span class="stringliteral">&#39;Missing temporal data.  Cannot recalculate &#39;</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;          <span class="keyword">WRITE</span>(7,*) <span class="stringliteral">&#39;data time.&#39;</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;          <span class="keyword">WRITE</span>(7,*) <span class="stringliteral">&#39;CONVERSION TO SEQUENTIAL PP FILE FAILED IN &#39;</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;          <span class="keyword">WRITE</span>(7,*) <span class="stringliteral">&#39;FIELD NO.&#39;</span>,entry_no</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;          <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">!     data now in IEEE format</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;      ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>) = ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>) - number_format*1000 + 3000</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">!L Convert ILABEL to IEEE  Integer</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;      bit_off=0</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;      ieee_addr = 1</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;      ier=ieee2ieg(2,len_ilabel,ieee_label(ieee_addr),                  &amp;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;     &amp;            bit_off,ilabel,1,64,32)</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="keywordflow">IF</span>(ier /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;          icode=1</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;          cmessage=<span class="stringliteral">&#39; CRAY_IEEE error converting INT for IEEE_LABEL&#39;</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;          <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">!L Convert RLABEL to IEEE  Real.</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      ieee_addr=len_ilabel/2</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;      <span class="keywordflow">IF</span>(ieee_addr*2 /= len_ilabel) bit_off=32</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;      ieee_addr=ieee_addr+1</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;      ier=ieee2ieg(3,len_rlabel,ieee_label(ieee_addr),                  &amp;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;     &amp;            bit_off,rlabel,1,64,32)</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keywordflow">IF</span>(ier /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;          icode=1</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;          cmessage=<span class="stringliteral">&#39; CRAY_IEEE error converting REAL for IEEE_LABEL&#39;</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;          <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;      bit_off=0</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;      <span class="keywordflow">IF</span>(.NOT.packed) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">!L Convert Real DATA to IEEE Real if not packed.</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="keywordflow">IF</span>(ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>) == 1) <span class="keywordflow">THEN</span>          <span class="comment">!Data Type Real</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keywordflow">IF</span>(ilabel(32) == 74) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;convert type 74 as logical and reset datatype&#39;</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;cray_ieee&#39;</span>)</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;          ier = ieee2ieg(5,num_values-iextraw,ieee_field,               &amp;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;     &amp;            bit_off,<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a>,1,64,32)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;          ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>) = 3</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;          ier = ieee2ieg(3,num_values-iextraw,ieee_field                &amp;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;     &amp;            ,bit_off,<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a>,1,64,32)</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;          <span class="keywordflow">IF</span>(ier /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            icode=1</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            cmessage=<span class="stringliteral">&#39;CRAY_IEEE error converting REAL for IEEE_FIELD&#39;</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">!L Convert Integer data to IEEE Integer.</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <span class="keywordflow">ELSEIF</span>(ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>) == 2) <span class="keywordflow">THEN</span>      <span class="comment">!Data Type Integer</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;          ier = ieee2ieg(2,num_values-iextraw,ieee_field,               &amp;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;     &amp;            bit_off,<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a>,1,64,32)</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;          <span class="keywordflow">IF</span>(ier /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            icode=1</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            cmessage=<span class="stringliteral">&#39;CRAY_IEEE error calling USICTI for IEEE_FIELD&#39;</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        <span class="keywordflow">ELSEIF</span>(ilabel(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>) == 3) <span class="keywordflow">THEN</span>      <span class="comment">!Data Type Logical</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;          ier = ieee2ieg(5,num_values-iextraw,ieee_field,               &amp;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;     &amp;            bit_off,<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a>,1,64,32)</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;          <span class="keywordflow">IF</span>(ier /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            icode=1</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            cmessage=<span class="stringliteral">&#39;CRAY_IEEE error converting logical forIEEE_FIELD&#39;</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;WARNING ! WGDOS packed data - contains IBM reals&#39;</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;cray_ieee&#39;</span>)</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">!       code to be added here to convert ibm reals in packed data</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment">!       to ieee reals</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">!L process extra data</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;      <span class="keywordflow">IF</span> (iextraw &gt;  0) <span class="keywordflow">THEN</span> <span class="comment">! process extra data as got some</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">!L init values for while loop</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        addr=num_values-iextraw+1 <span class="comment">! start address in field for extra dat</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        ieee_addr=(addr+1)/2</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="keywordflow">IF</span> (ieee_addr*2 == addr) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;          bit_off=32</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;          bit_off=0</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        <span class="keywordflow">DO</span> <span class="keywordflow">WHILE</span> (addr &lt;  num_values)</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">!L main while loop that works out code and then checks that code is ok.</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">!L if code is ok then data_values will contain the number of REAL entries</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">!L in the vector.</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">! DEPENDS ON: int_from_real</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;          iv=<a class="code" href="int__from__real_8f90.xhtml#a0863f0c3aec6a96d70ad70a3f2a97018" title="Subroutine interface: ">int_from_real</a>(<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a>(addr))</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment">! DEPENDS ON: check_extra</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;          <span class="keyword">CALL </span><a class="code" href="check__extra_8f90.xhtml#ab3b472df12f078237014131cb37576c2" title="Subroutine interface: ">check_extra</a>(iv,data_values,icode,cmessage)</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;          <span class="keywordflow">IF</span> (icode /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;          ier = ieee2ieg(2,1,ieee_field(ieee_addr),bit_off,             &amp;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;     &amp;            <a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a>(addr),1,64,32)</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment">!         convert the integer from cray format to IEEE format</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;          <span class="keywordflow">IF</span> (ier /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            icode=1</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            cmessage=<span class="stringliteral">&#39;CRAY_IEEE: FAILED IN INTEGER CONV OF EXTRA DATA&#39;</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment">!L         update bit_off, addr and IEEE_addr</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;          <span class="keywordflow">IF</span> (bit_off == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            bit_off=32</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            bit_off=0</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            ieee_addr=ieee_addr+1 <span class="comment">! gone on another word..</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;          addr=addr+1             <span class="comment">! increment address</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">!L now to convert REAL vector to IEEE format.</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;          ier=ieee2ieg(3,data_values,ieee_field(ieee_addr),             &amp;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;     &amp;      bit_off,<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a>(addr),1,64,32)</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">!         convert the real data values</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;          <span class="keywordflow">IF</span> (ier /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            icode=1</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;            cmessage=<span class="stringliteral">&#39;CRAY_IEEE: FAILED IN REAL CONV OF EXTRA DATA&#39;</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment">!L update loop variables.</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;          addr=addr+data_values</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;          ieee_addr=ieee_addr+data_values/2</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;          <span class="keywordflow">IF</span> ((data_values/2)*2 /= data_values) <span class="keywordflow">THEN</span> <span class="comment">! odd no. of values</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            <span class="keywordflow">IF</span> (bit_off == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;              bit_off=32</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;              bit_off=0</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;              ieee_addr=ieee_addr+1 <span class="comment">! gone on another word..</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="keywordflow">        ENDDO</span>                   <span class="comment">! continue until run out of data....</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">!L Verify addr and IEEE_addr have correct values at end of whileloop</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="comment">!L first check that addr is ok</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <span class="keywordflow">IF</span> (addr /= num_values+1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;          <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A,I5,A,I5)&#39;</span>) <span class="stringliteral">&#39;CRAY_IEEE: ADDR&#39;</span>,addr, &amp;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;          <span class="stringliteral">&#39; &lt;&gt; NUM_VALUES+1&#39;</span>,num_values+1</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;          icode=1</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;          <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">!L and so is IEEE_addr</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        <span class="keywordflow">IF</span> (bit_off == 0) ieee_addr=ieee_addr-1</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        <span class="keywordflow">IF</span> (ieee_addr /= (num_values+1)/2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;          <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A,I5,A,I5)&#39;</span>) <span class="stringliteral">&#39;CRAY_IEEE: IEEE_ADDR &#39;</span>, &amp;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;          ieee_addr,<span class="stringliteral">&#39; &lt;&gt; (NUM_VALUES+1)/2&#39;</span>,(num_values+1)/2</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;          icode=1</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;          <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="keywordflow">      ENDIF</span> <span class="comment">! end processing of extra data</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;      <span class="keywordflow">IF</span>(packed) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        <span class="keyword">WRITE</span>(cos_ppunit) ieee_label</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <span class="keyword">WRITE</span>(cos_ppunit) (<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a>(i),i=1,ilabel(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>)/2)</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        <span class="keyword">WRITE</span>(cos_ppunit) ieee_label</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        <span class="keyword">WRITE</span>(cos_ppunit) ieee_field</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">! The last field has been processed. An extra field is now written</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">! to act as a delimiter for the M08 software. This extra fields is</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">! a duplicate,but with a PP field code of -99 . ! If MASS is true then last record (-99) is omitted.</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;      <span class="keywordflow">IF</span>(last .AND. .NOT. <a class="code" href="typptra_8h.xhtml#a4ac6ab524823770b751a91f9f3cd54c4">mass</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;  WRITING LAST RECORD IN THE COS FILE &#39;</span>,src=<span class="stringliteral">&#39;cray_ieee&#39;</span>)</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        ilabel(23)=-99</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment">!L Convert ILABEL to IEEE  Integer</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        bit_off=0</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        ieee_addr = 1</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        ier=ieee2ieg(2,len_ilabel,ieee_label(ieee_addr),                &amp;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                     bit_off,ilabel,1,64,32)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        <span class="keywordflow">IF</span>(ier /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;          icode=1</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;          cmessage=<span class="stringliteral">&#39; CRAY_IEEE error converting INT for IEEE_LABEL&#39;</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;          <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment">!L Convert RLABEL to IEEE  Real.</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        ieee_addr=len_ilabel/2</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        <span class="keywordflow">IF</span>(ieee_addr*2 /= len_ilabel) bit_off=32</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        ieee_addr=ieee_addr+1</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        ier=ieee2ieg(3,len_rlabel,ieee_label(ieee_addr),                &amp;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                     bit_off,rlabel,1,64,32)</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        <span class="keywordflow">IF</span>(ier /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;          icode=1</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;          cmessage=<span class="stringliteral">&#39; CRAY_IEEE error converting REAL for IEEE_LABEL&#39;</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;          <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="keywordflow">IF</span> (packed) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;          <span class="keyword">WRITE</span>(cos_ppunit) ieee_label</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;          <span class="keyword">WRITE</span>(cos_ppunit) (<a class="code" href="s__dims_8h.xhtml#a98d64740628946d2acd859445eddad16">field</a>(i),i=1,ilabel(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>)/2)</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;          <span class="keyword">WRITE</span>(cos_ppunit) ieee_label</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;          <span class="keyword">WRITE</span>(cos_ppunit) ieee_field</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160; 9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="cray__ieee_8f90.xhtml#aa27664f4d181048ca56074a5a7027fb6" title="LL Subroutine: CRAY_IEEE LL Subroutine: CRAY_IEEE LL LL Purpose: To read a direct access PP file and ...">cray_ieee</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
