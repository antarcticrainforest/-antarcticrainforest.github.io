<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/electric/fr_mccaul.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_9d4c2ebcb8bf5f9bd58f10738ad664a6.xhtml">electric</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">fr_mccaul.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="fr__mccaul_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno"><a class="line" href="namespacefr__mccaul__mod.xhtml">    2</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacefr__mccaul__mod.xhtml">fr_mccaul_mod</a></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">,  ONLY</span>: qdims, tdims, wdims_s</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceelectric__constants__mod.xhtml" title="Purpose: Holds constants required for the electric scheme. ">electric_constants_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>, <a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>, <a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>, <a class="code" href="namespaceelectric__constants__mod.xhtml#a1b55f7e57f0d151a12e9a7281d0f9108" title="McCaul et al (2009) parameters. ">minus15</a>, <a class="code" href="namespaceelectric__constants__mod.xhtml#a55d686bd96d49c5fb0f587f8d91e4a52">mccaul_r1</a>, mccaul_r2,      &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;                                  <a class="code" href="namespaceelectric__constants__mod.xhtml#a94a3d2cdf5a27c75e30e4765b70ce7a2" title="Conversion terms. ">min2sec</a></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceelectric__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">electric_inputs_mod</a><span class="keywordtype">,    ONLY</span>: <a class="code" href="namespaceelectric__inputs__mod.xhtml#ace438d7a89b38125de10f724bc13a240" title="=========================================================================== Real options for the elec...">k1</a>, <a class="code" href="namespaceelectric__inputs__mod.xhtml#a56791989dcae6008c0aa8579554b35bb">k2</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">,               ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">,              ONLY</span>: jprb, jpim</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacefr__mccaul__mod.xhtml#a78f4b7e75a8d896fe17be93df10b15f7">fr_mccaul</a>(storm_field, t, w, qgraup, gwp, tiwp, flash, fr1_mc,      &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                     fr2_mc )</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="namespacefr__mccaul__mod.xhtml#a78f4b7e75a8d896fe17be93df10b15f7">   25</a></span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: storm_field( qdims%i_start : qdims%i_end,               &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                                    qdims%j_start : qdims%j_end )</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: w(              wdims_s%i_start : wdims_s%i_end,           &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                                    wdims_s%j_start : wdims_s%j_end,           &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                    wdims_s%k_start : wdims_s%k_end )</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: t(              tdims%i_start : tdims%i_end,               &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                                    tdims%j_start : tdims%j_end,               &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                                                1 : tdims%k_end )</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qgraup(         qdims%i_start : qdims%i_end,               &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                    qdims%j_start : qdims%j_end,               &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                                                1 : qdims%k_end )</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: gwp(            qdims%i_start : qdims%i_end,               &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                    qdims%j_start : qdims%j_end)   <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: tiwp(           qdims%i_start : qdims%i_end,               &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                    qdims%j_start : qdims%j_end)  <span class="comment">! Graupel and total ice water paths (kg m-2)</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: flash( qdims%i_start : qdims%i_end,                     &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                              qdims%j_start : qdims%j_end )</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: fr1_mc(  qdims%i_start : qdims%i_end,                   &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                              qdims%j_start : qdims%j_end )</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: fr2_mc(  qdims%i_start : qdims%i_end,                   &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                              qdims%j_start : qdims%j_end )</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">INTEGER</span> :: m15l, upper_limit, lower_limit</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">REAL</span> :: flash1</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordtype">REAL</span> :: flash2</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;FR_MCCAUL&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;upper_limit = qdims%k_end   - 2</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;lower_limit = qdims%k_start + 1</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordflow">DO</span> <a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a> = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keywordflow">DO</span> <a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a> = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    flash1 = 0.0</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    flash2 = 0.0</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">IF</span> (storm_field(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a> = qdims%k_end, 1, -1</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">IF</span> (t(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>) &gt; <a class="code" href="namespaceelectric__constants__mod.xhtml#a1b55f7e57f0d151a12e9a7281d0f9108" title="McCaul et al (2009) parameters. ">minus15</a>) <span class="keywordflow">THEN</span>           m15l = <a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>+1 <span class="comment">! define minus 15 level</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;          <span class="keywordflow">EXIT</span> <span class="comment">! leave the loop early to avoid overwriting</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">! Determine flash rates</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordflow">IF</span> (m15l &gt; upper_limit .OR. m15l &lt; lower_limit) <span class="keywordflow">THEN</span>        <span class="comment">! Set flash1 to be zero if you cannot define the</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="comment">! -15C level in the model.</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        flash1 = 0.0</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      <span class="keywordflow">ELSE</span> <span class="comment">! m15l</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        flash1 = <a class="code" href="namespaceelectric__inputs__mod.xhtml#ace438d7a89b38125de10f724bc13a240" title="=========================================================================== Real options for the elec...">k1</a> * w(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>, m15l) * qgraup(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>, m15l)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! m15l</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      flash2 = <a class="code" href="namespaceelectric__inputs__mod.xhtml#a56791989dcae6008c0aa8579554b35bb">k2</a> * ( gwp(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>) + tiwp(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>) )</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      flash(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>) = <a class="code" href="namespaceelectric__constants__mod.xhtml#a94a3d2cdf5a27c75e30e4765b70ce7a2" title="Conversion terms. ">min2sec</a> * ( (<a class="code" href="namespaceelectric__constants__mod.xhtml#a55d686bd96d49c5fb0f587f8d91e4a52">mccaul_r1</a> * flash1) + (mccaul_r2 * flash2) )</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">! Determine the value of each component for diagnostics</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">! (these will have been initialised to zero in electric_init).</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      fr1_mc(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>) = <a class="code" href="namespaceelectric__constants__mod.xhtml#a94a3d2cdf5a27c75e30e4765b70ce7a2" title="Conversion terms. ">min2sec</a> * flash1</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      fr2_mc(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>) = <a class="code" href="namespaceelectric__constants__mod.xhtml#a94a3d2cdf5a27c75e30e4765b70ce7a2" title="Conversion terms. ">min2sec</a> * flash2</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! storm_field</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordflow">END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;FR_MCCAUL&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespacefr__mccaul__mod.xhtml#a78f4b7e75a8d896fe17be93df10b15f7">fr_mccaul</a></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacefr__mccaul__mod.xhtml">fr_mccaul_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
