<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/coupling/oasis3_grid.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_ae9187a779f8f5f7681b102cffaf7bb8.xhtml">coupling</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">oasis3_grid.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="oasis3__grid_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#if defined(OASIS3)</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="oasis3__grid_8f90.xhtml#a9cb92f20d2202b66a1f814dd04eaed88" title="*****************************COPYRIGHT**************************************** For further details pl...">oasis3_grid</a>(l_fullset)</div><div class="line"><a name="l00007"></a><span class="lineno"><a class="line" href="oasis3__grid_8f90.xhtml#a9cb92f20d2202b66a1f814dd04eaed88">    7</a></span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">! Description: This routine sets up the grid and transient</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <span class="comment">! Obtain OASIS3 or OASIS3-MCT PSMILe subroutines followed by    ! essential control variables#if defined(MCT)</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespaceoasis3__atmos__init__mod.xhtml" title="For further details please refer to the file COPYRIGHT.txt which you should have received as part of ...">oasis3_atmos_init_mod</a><span class="keywordtype">, ONLY</span>: prism_def_partition_proto, &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                                     prism_def_var_proto, &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                                     prism_enddef_proto, &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                                     prism_out,       &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                                     prism_real,      &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                                     prism_in</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">USE </span><a class="code" href="namespaceoasis3__atmos__init__mod.xhtml" title="For further details please refer to the file COPYRIGHT.txt which you should have received as part of ...">oasis3_atmos_init_mod</a><span class="keywordtype">, ONLY</span>: prism_def_partition_proto, &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                                     prism_out,       &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                                     prism_real,      &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                                     prism_in</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;   <span class="keywordtype">USE </span><a class="code" href="namespaceoasis__atm__data__mod.xhtml" title="*****************************COPYRIGHT**************************************** **********************...">oasis_atm_data_mod</a><span class="keywordtype">, ONLY</span>:     <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a3eae142144ce0d62a29aea61de36cda1">icpl</a>,            &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                                     <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a3aaa0ef9facf40325f8cd4e37830dd39">icpl_atm</a>,        &amp;                                     <a class="code" href="namespaceoasis__atm__data__mod.xhtml#afed0fe4dbb8bd76f71f8cfd0e589ea8b">max_transients</a>,  &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                                     <a class="code" href="namespaceoasis__atm__data__mod.xhtml#abccef1c9d8c3958c8320cd04e44a80f5">partitionbox</a>,    &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                                     partitionserial, &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                                     fld_type_u,      &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                                     fld_type_p,      &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                     fld_type_v,      &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                                     <a class="code" href="namespaceoasis__atm__data__mod.xhtml#aa506f78aa5fd97756cdc67ae49b70228">prism_nsec</a>,      &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                                     <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a084b6db2ee3e70a619fa9645cb494873">oasis_cntlpe</a>,    &amp;                                     <a class="code" href="namespaceoasis__atm__data__mod.xhtml#ad88c76fd228221ec7e048e2dff96211d">transient_out</a>,   &amp;                                      <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a9aa4fcdc5b711279057e6903f8aaaa4c">transient_in</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespaceum__types.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">um_types</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespaceum__input__control__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">um_input_control_mod</a><span class="keywordtype">,  ONLY</span>: <a class="code" href="namespaceum__input__control__mod.xhtml#a3a5ea566ad03c675af2a2b7b2d1e366b">l_couple_master</a></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#include &quot;typsize.h&quot;</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_fullset <span class="comment">! Indicates whether to perform</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                            <span class="comment">! a null set of calls for processes which are</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                            <span class="comment">! ultimately not involved in coupling, or the                            ! full range of oasis set-up for processes</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                            <span class="comment">! which are involved in coupling.                            ! TRUE gives you the full set.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">! Local variables...</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer32)</span> :: ierror <span class="comment">! Return code for OASIS3 calls</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="comment">! This module expects to define an Arakawa C grid:</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="comment">!   - this is an instance of PRISM_reglonlatvrt</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="comment">!   - 3D grid</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="comment">!   - points are created for the first time here</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="comment">!   - each grid cell is a cube w/ 8 vertices</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="comment">!   - C grid has t, u, v points</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer64)</span>, <span class="keywordtype">PARAMETER</span> :: nGridDims = 3</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer32)</span> :: valid_shape(2,ngriddims,nfld_max)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer32)</span> :: var_nodims(2)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer32)</span> :: var_shape(4)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer32)</span> :: i, istatus, tc, info</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer32)</span> :: nc_file_id</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer32)</span> :: nc_var_id</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer32)</span> :: grid_file_flag</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer32)</span> :: ist(4), icnt(4)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer32)</span>, <span class="keywordtype">ALLOCATABLE</span> :: il_paral(:)    <span class="comment">! Decomposition for each proc</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">INTEGER</span> :: ig_parsize    <span class="comment">! Size of array decomposition</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer32)</span>:: partition_id_tu <span class="comment">! Local T/U partition ID</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer32)</span>:: partition_id_v  <span class="comment">! Local V partition ID    INTEGER (KIND=integer32):: partition_id_null  ! Local null partition ID                                                INTEGER (KIND=integer32):: partition</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer64)</span>:: icode</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">CHARACTER(LEN=80)</span> :: Cmessage</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">CHARACTER(LEN=*)</span> :: RoutineName</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordtype">INTEGER (KIND=integer32)</span>:: type_index  <span class="comment">! Index to grid point type</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="namespaceukca__radaer__struct__mod.xhtml#a7b11899c3ce190bb3d00d3a633af780e">parameter</a>(routinename=<span class="stringliteral">&#39;OASIS3_grid&#39;</span>)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;OASIS3_GRID&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">IF</span> (l_fullset) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="comment">! Initialise all valid shape components to 1 for all      ! dimensions and grid point types.</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      valid_shape(:,:,:) = 1</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      <span class="keywordflow">DO</span> type_index = 1, nfld_max</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a3a5ea566ad03c675af2a2b7b2d1e366b">l_couple_master</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;          <span class="comment">! Valid shapes are the global dimsions for OASIS3</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;          valid_shape(2,1,type_index) = glsize(1,type_index)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;          valid_shape(2,2,type_index) = glsize(2,type_index)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;          valid_shape(2,3,type_index) = 1</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;          <span class="comment">! Valid shapes are the local dimsions for OASIS3</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;          valid_shape(2,1,type_index) = lasize(1,type_index,<a class="code" href="namespaceum__parparams.xhtml#a68c927ba74941b266080d8e2affaa431">halo_type_no_halo</a>)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;          valid_shape(2,2,type_index) = lasize(2,type_index,<a class="code" href="namespaceum__parparams.xhtml#a68c927ba74941b266080d8e2affaa431">halo_type_no_halo</a>)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;          valid_shape(2,3,type_index) = 1</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      ierror = 0  <span class="comment">! Initialise error flag to zero because some OASIS</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                  <span class="comment">! routines do not do this explicitily which</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                  <span class="comment">! can cause us problems.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <span class="keywordflow">IF</span> ((mype.EQ.<a class="code" href="namespaceoasis__atm__data__mod.xhtml#a084b6db2ee3e70a619fa9645cb494873">oasis_cntlpe</a>).OR.(.NOT.<a class="code" href="namespaceum__input__control__mod.xhtml#a3a5ea566ad03c675af2a2b7b2d1e366b">l_couple_master</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="comment">! If we&#39;re not coupling through the master, then each PE</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="comment">! couples in parallel, hence they all need to call this.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="comment">! Otherwise only the master calls this code.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        ig_parsize = 5</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keyword">ALLOCATE</span>(il_paral(ig_parsize))</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="comment">!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="comment">! NOTE: In the following we only define two different        ! OASIS partitions, despite the fact that the rest of our code</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="comment">! caters for the possibility of there being three</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="comment">! separate grid point types (T, U and V.)        ! The underlying assumption is that T and U points always use        ! the same partition regardless of dynamical core choice.        ! That&#39;s true for ND and Endgame but may not be always thus.</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="comment">! However, this is assumed at this point because of the extra</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="comment">! complexity a third separate grid would bring to the OASIS</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="comment">! control files (e.g. namcouple contents, grids and rmp files etc.)</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="comment">!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a3a5ea566ad03c675af2a2b7b2d1e366b">l_couple_master</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;          <span class="comment">! Set up partitions in TWO dimensions NOT 1 as in the</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;          <span class="comment">! standard OASIS3 toy models which makes visualisation</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;          <span class="comment">! awkward.</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;          <span class="comment">! We couple through master - no decomposition necessary</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;          il_paral(1) = <a class="code" href="namespaceoasis__atm__data__mod.xhtml#abccef1c9d8c3958c8320cd04e44a80f5">partitionbox</a></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;          il_paral(2) = 0</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;          il_paral(3) = valid_shape(2,1,fld_type_p)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;          il_paral(4) = valid_shape(2,2,fld_type_p)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;          il_paral(5) = valid_shape(2,1,fld_type_p)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;          <span class="comment">! We have to define two separate partitions           ! The first one for the T and U points, the second one for</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;          <span class="comment">! the V points which has one row fewer.</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;          <span class="keyword">CALL </span>prism_def_partition_proto (partition_id_tu, il_paral, &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;           ierror)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;          il_paral(4) = valid_shape(2,2,fld_type_v)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;          <span class="keyword">CALL </span>prism_def_partition_proto (partition_id_v, il_paral, &amp;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;           ierror)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;          <span class="comment">! Set up partitions in TWO dimensions NOT 1 as in the</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;          <span class="comment">! standard OASIS3 toy models, to allow visualisation.</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;          <span class="comment">! See OASIS user guide for the meanings of the following</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;          <span class="comment">! array components and possible alternatives.</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;          <span class="comment">! 1 = partition type (we use box)</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;          <span class="comment">! 2 = data offset</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;          <span class="comment">! 3 = local x dimension</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;          <span class="comment">! 4 = local y dimension</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;          <span class="comment">! 5 = global x dimension</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;          il_paral(1) = <a class="code" href="namespaceoasis__atm__data__mod.xhtml#abccef1c9d8c3958c8320cd04e44a80f5">partitionbox</a></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;          il_paral(2) = (datastart(2)-1)*glsize(1,fld_type_p)+datastart(1)-1          il_paral(3) = valid_shape(2,1,fld_type_p)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;          il_paral(4) = valid_shape(2,2,fld_type_p)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;          il_paral(5) = glsize(1,fld_type_p)        </div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;          <span class="comment">! We have to define two separate partitions           ! The first one for the T and U points, the second one for</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;          <span class="comment">! the V points which has one row fewer.</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;          <span class="keyword">CALL </span>prism_def_partition_proto (partition_id_tu, il_paral, ierror)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;          il_paral(4) = valid_shape(2,2,fld_type_v)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;          <span class="keyword">CALL </span>prism_def_partition_proto (partition_id_v, il_paral, ierror)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keyword">DEALLOCATE</span>(il_paral)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="comment">! Now we define outgoing fields:</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        var_nodims(1) = 2</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        var_nodims(2) = 1</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        var_shape(1) = 1</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        var_shape(3) = 1</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordflow">DO</span> tc = 1, <a class="code" href="namespaceoasis__atm__data__mod.xhtml#afed0fe4dbb8bd76f71f8cfd0e589ea8b">max_transients</a></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceoasis__atm__data__mod.xhtml#ad88c76fd228221ec7e048e2dff96211d">transient_out</a>(tc)%indx &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                        <span class="keywordflow">IF</span> (<a class="code" href="namespaceoasis__atm__data__mod.xhtml#ad88c76fd228221ec7e048e2dff96211d">transient_out</a>(tc)%grid == <span class="stringliteral">&quot;U&quot;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;              var_shape(2) = valid_shape(2,1,fld_type_u)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;              var_shape(4) = valid_shape(2,2,fld_type_u)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;              partition = partition_id_tu</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keywordflow">ELSE</span>              <span class="keywordflow">IF</span> (<a class="code" href="namespaceoasis__atm__data__mod.xhtml#ad88c76fd228221ec7e048e2dff96211d">transient_out</a>(tc)%grid == <span class="stringliteral">&quot;V&quot;</span>) <span class="keywordflow">THEN</span>                var_shape(2) = valid_shape(2,1,fld_type_v)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                var_shape(4) = valid_shape(2,2,fld_type_v)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                partition = partition_id_v</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                var_shape(2) = valid_shape(2,1,fld_type_p)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                var_shape(4) = valid_shape(2,2,fld_type_p)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                partition = partition_id_tu</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keywordflow">              END IF</span><span class="keywordflow">              END IF</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="comment">! Don&#39;t declare multi-cat latent heat fields if not using cats            ! Define output field.                     WRITE(umMessage,&#39;(A,1X,I4,1X,A,1X,A,1X,I6)&#39;) &#39;Define &#39;,tc,         &amp;</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <a class="code" href="namespaceoasis__atm__data__mod.xhtml#ad88c76fd228221ec7e048e2dff96211d">transient_out</a>(tc)%name,<span class="stringliteral">&#39; for &#39;</span>,prism_out</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;oasis3_grid&#39;</span>)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            <span class="keyword">CALL </span>prism_def_var_proto(<a class="code" href="namespaceoasis__atm__data__mod.xhtml#ad88c76fd228221ec7e048e2dff96211d">transient_out</a>(tc)%oasis_id,    &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                      <a class="code" href="namespaceoasis__atm__data__mod.xhtml#ad88c76fd228221ec7e048e2dff96211d">transient_out</a>(tc)%name, partition,          &amp;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                      var_nodims, prism_out,  var_shape,          &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                      prism_real, ierror )</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordflow">        END DO</span>  <span class="comment">! Over tc</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="comment">! Now we can define incoming fields:</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        var_nodims(1) = 2</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        var_nodims(2) = 1</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        var_shape(1) = 1</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        var_shape(3) = 1</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keywordflow">DO</span> tc = 1, <a class="code" href="namespaceoasis__atm__data__mod.xhtml#afed0fe4dbb8bd76f71f8cfd0e589ea8b">max_transients</a></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                 <span class="keywordflow">IF</span> (<a class="code" href="namespaceoasis__atm__data__mod.xhtml#a9aa4fcdc5b711279057e6903f8aaaa4c">transient_in</a>(tc)%indx &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespaceoasis__atm__data__mod.xhtml#a9aa4fcdc5b711279057e6903f8aaaa4c">transient_in</a>(tc)%grid == <span class="stringliteral">&quot;U&quot;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;              var_shape(2) = valid_shape(2,1,fld_type_u)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;              var_shape(4) = valid_shape(2,2,fld_type_u)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;              partition = partition_id_tu</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <span class="keywordflow">ELSE</span>              <span class="keywordflow">IF</span> (<a class="code" href="namespaceoasis__atm__data__mod.xhtml#a9aa4fcdc5b711279057e6903f8aaaa4c">transient_in</a>(tc)%grid == <span class="stringliteral">&quot;V&quot;</span>) <span class="keywordflow">THEN</span>                var_shape(2) = valid_shape(2,1,fld_type_v)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                var_shape(4) = valid_shape(2,2,fld_type_v)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                partition = partition_id_v</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                var_shape(2) = valid_shape(2,1,fld_type_p)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                var_shape(4) = valid_shape(2,2,fld_type_p)</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                partition = partition_id_tu</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keywordflow">              END IF</span><span class="keywordflow">              END IF</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,1X,I4,1X,A,1X,A,1X,I6)&#39;</span>) <span class="stringliteral">&#39;Define &#39;</span>,tc,         &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a9aa4fcdc5b711279057e6903f8aaaa4c">transient_in</a>(tc)%name,<span class="stringliteral">&#39; for &#39;</span>,prism_in</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;oasis3_grid&#39;</span>)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <span class="keyword">CALL </span>prism_def_var_proto (<a class="code" href="namespaceoasis__atm__data__mod.xhtml#a9aa4fcdc5b711279057e6903f8aaaa4c">transient_in</a>(tc)%oasis_id,     &amp;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                    <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a9aa4fcdc5b711279057e6903f8aaaa4c">transient_in</a>(tc)%name, partition,              &amp;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                    var_nodims, prism_in, var_shape,               &amp;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                    prism_real, ierror )</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordflow">        END DO</span>  <span class="comment">! Over tc</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <span class="comment">!=================================================================</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="comment">! NOTE: OASIS3 will issue warnings about transients with</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="comment">! names longer  than 8 characters and actually ignores them</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="comment">! because it seems to truncate everything to 8 characters</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="comment">! which means the names then don&#39;t correspond to anything</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="comment">! in the namcouple file!        ! If your name here doesn&#39;t correspond with the name in namcouple</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="comment">! it will not necessarily tell you, or crash. Quite often it will run</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="comment">! apparently OK even to the extent that a receiving component will</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="comment">! get data (apparently zeros) from somewhere (who knows where?)</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="comment">! and proceed OK. That&#39;s a nightmare to spot so be VERY</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="comment">! careful about spelling transient field names.         !=================================================================</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="comment">! Finish the PRISM definition phase and perform inter component</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="comment">! integrity checking.</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keyword">CALL </span>prism_enddef_proto(ierror)</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! coupling through master only or</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;              <span class="comment">! in parallel without explicit gather/scatter.</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      <span class="comment">! If coupling through master, then at this point only master PE knows      ! which transients are needed. So here we broadcast that info to everyone,</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;      <span class="comment">! since it will be useful later on for all PE to know which fields      ! to populate. We also ensure all grid types are consistent.</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a3a5ea566ad03c675af2a2b7b2d1e366b">l_couple_master</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;         <span class="keywordflow">DO</span> tc = 1, <a class="code" href="namespaceoasis__atm__data__mod.xhtml#afed0fe4dbb8bd76f71f8cfd0e589ea8b">max_transients</a></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            <span class="keyword">CALL </span>gc_ibcast(700,1,0,nproc,info,<a class="code" href="namespaceoasis__atm__data__mod.xhtml#a9aa4fcdc5b711279057e6903f8aaaa4c">transient_in</a>(tc)%indx)</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <span class="keyword">CALL </span>gc_ibcast(701,1,0,nproc,info,<a class="code" href="namespaceoasis__atm__data__mod.xhtml#ad88c76fd228221ec7e048e2dff96211d">transient_out</a>(tc)%indx)</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <span class="keyword">CALL </span>gc_cbcast(702,1,0,nproc,info,<a class="code" href="namespaceoasis__atm__data__mod.xhtml#a9aa4fcdc5b711279057e6903f8aaaa4c">transient_in</a>(tc)%grid)</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="keyword">CALL </span>gc_cbcast(703,1,0,nproc,info,<a class="code" href="namespaceoasis__atm__data__mod.xhtml#ad88c76fd228221ec7e048e2dff96211d">transient_out</a>(tc)%grid)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;      <span class="comment">! Set the start time. For OASIS3 this is simply based on the</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;      <span class="comment">! number of seconds this run, so at the start of the</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;      <span class="comment">! run it will be zero regardless of the true model date</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;      <span class="comment">! It may be that we need to do some cross checking with other</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;      <span class="comment">! components in a coupled model system, in which case this</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;      <span class="comment">! is one suitable point to employ such a test.       PRISM_nsec = 0</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keywordflow">ELSE</span>   <span class="comment">! l_fullset = FALSE</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;      <span class="comment">! We need all the non-atmos processes to perform a limited set of</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;      <span class="comment">! prism routines for initialisation purposes. The positioning of these</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;      <span class="comment">! calls is critical to avoid deadlock.        IF ( icpl /= icpl_atm ) THEN</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        ierror = 0  <span class="comment">! Initialise error flag to zero because some OASIS</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                    <span class="comment">! routines do not do this explicitly which</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                    <span class="comment">! can cause us problems.</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        ig_parsize = 3</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <span class="keyword">ALLOCATE</span>(il_paral(ig_parsize))</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="comment">! OASIS3-MCT documentation asserts that we should set</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="comment">! il_paral(:) = 0, which is all well and good, but it fails        ! to tell us what size this array needs to be for the null case!</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <span class="comment">! Here we assume serial is OK, despite the fact that for        ! processes actually involved in coupling (see above)</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="comment">! we use a Box partition.</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        il_paral(1) = partitionserial</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;           <span class="comment">! All the partition dimensions are zero</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        il_paral(2:3) = 0</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="comment">! Although we have to define two separate partitions in the main code</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="comment">! for our null subset case we can use the same partition for all        ! def_var calls.        CALL PRISM_def_partition_proto (partition_id_null, il_paral, ierror)</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;         <span class="keyword">DEALLOCATE</span>(il_paral)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="comment">! Now we define outgoing fields:</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        var_nodims(1) = 2</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        var_nodims(2) = 1</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        <span class="comment">! All field dimensions are zero.        var_shape(1:4) = 0</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="comment">! Null def_var calls actually don&#39;t need the names to correspond        ! to the main calls, but since we have them avaialable to us, we</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="comment">! do things &quot;properly&quot; anyway in that respect. We don&#39;t need to        ! distinguish between fields on U, T and V grids so we can just</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="comment">! use our null partition for everything</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        partition = partition_id_null</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="comment">! Now we define outgoing fields:</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <span class="keywordflow">DO</span> tc = 1, <a class="code" href="namespaceoasis__atm__data__mod.xhtml#afed0fe4dbb8bd76f71f8cfd0e589ea8b">max_transients</a></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;           <span class="keywordflow">IF</span> (<a class="code" href="namespaceoasis__atm__data__mod.xhtml#ad88c76fd228221ec7e048e2dff96211d">transient_out</a>(tc)%indx &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            <span class="comment">! Define output field.                     WRITE(umMessage,&#39;(A,1X,I4,1X,A,1X,A,1X,I6)&#39;) &#39;Define Null &#39;,tc,   &amp;</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                <a class="code" href="namespaceoasis__atm__data__mod.xhtml#ad88c76fd228221ec7e048e2dff96211d">transient_out</a>(tc)%name, <span class="stringliteral">&#39; for &#39;</span>,prism_out</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;oasis3_grid&#39;</span>)</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            <span class="keyword">CALL </span>prism_def_var_proto(<a class="code" href="namespaceoasis__atm__data__mod.xhtml#ad88c76fd228221ec7e048e2dff96211d">transient_out</a>(tc)%oasis_id,   &amp;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                      <a class="code" href="namespaceoasis__atm__data__mod.xhtml#ad88c76fd228221ec7e048e2dff96211d">transient_out</a>(tc)%name, partition,          &amp;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                      var_nodims, prism_out,  var_shape,          &amp;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                      prism_real, ierror )</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="keywordflow">        END DO</span>  <span class="comment">! Over tc</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <span class="comment">! Now we define incoming fields:</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <span class="keywordflow">DO</span> tc = 1, <a class="code" href="namespaceoasis__atm__data__mod.xhtml#afed0fe4dbb8bd76f71f8cfd0e589ea8b">max_transients</a></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                 <span class="keywordflow">IF</span> (<a class="code" href="namespaceoasis__atm__data__mod.xhtml#a9aa4fcdc5b711279057e6903f8aaaa4c">transient_in</a>(tc)%indx &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,1X,I4,1X,A,1X,A,1X,I6)&#39;</span>) <span class="stringliteral">&#39;Define Null &#39;</span>,tc,  &amp;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a9aa4fcdc5b711279057e6903f8aaaa4c">transient_in</a>(tc)%name,<span class="stringliteral">&#39; for &#39;</span>,prism_in</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;oasis3_grid&#39;</span>)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            <span class="keyword">CALL </span>prism_def_var_proto (<a class="code" href="namespaceoasis__atm__data__mod.xhtml#a9aa4fcdc5b711279057e6903f8aaaa4c">transient_in</a>(tc)%oasis_id,    &amp;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                    <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a9aa4fcdc5b711279057e6903f8aaaa4c">transient_in</a>(tc)%name, partition,              &amp;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                    var_nodims, prism_in, var_shape,               &amp;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                    prism_real, ierror )</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keywordflow">        END DO</span>  <span class="comment">! Over tc</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="comment">! Finish the PRISM definition phase and perform inter component</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <span class="comment">! integrity checking.</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="keyword">CALL </span>prism_enddef_proto(ierror)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! IOS procs only.</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! Null case for non-coupling procs.</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;OASIS3_GRID&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="oasis3__grid_8f90.xhtml#a9cb92f20d2202b66a1f814dd04eaed88" title="*****************************COPYRIGHT**************************************** For further details pl...">oasis3_grid</a></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="preprocessor">#endif</span></div><span class="preprocessor"></span></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
