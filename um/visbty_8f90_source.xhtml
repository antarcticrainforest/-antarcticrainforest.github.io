<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/atmosphere_service/visbty.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_5c2e8f2e27239adafd95ffb78406576b.xhtml">atmosphere_service</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">visbty.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="visbty_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="visbty_8f90.xhtml#aac944f627549fcfff96fe5b93304c025" title="Calculate visibility (in metres) from temperature, specific humidity,. ">visbty</a>(                                                      &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;             p_layer,t,q,qcl,qcf,                                       &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                                                      !INPUT</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            aerosol, prob, rhcrit, l_murk,                              &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                                                      !INPUT</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            p_field,                                                    &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                                                      !INPUT</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            visibility)</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="visbty_8f90.xhtml#aac944f627549fcfff96fe5b93304c025">   33</a></span>&#160;                                                      <span class="comment">!OUTPUT</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: rho_water</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacevisbty__constants__mod.xhtml" title="A module containing constants used in visibility diagnosis. ">visbty_constants_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacevisbty__constants__mod.xhtml#ab717376adc35d09bccec8d6bbf1526a1">m0</a>, <a class="code" href="namespacevisbty__constants__mod.xhtml#adf600d58b19b4393a16914fbd86e7efa">aero0</a>, <a class="code" href="namespacevisbty__constants__mod.xhtml#a864366a34d92e4fb6f96777d4b58fd90" title="Microphysical parameters used in visibility calculations. ">n0</a>, <a class="code" href="namespacevisbty__constants__mod.xhtml#a27a487349096ad54f954bb7d088cc872">power</a>, <a class="code" href="namespacevisbty__constants__mod.xhtml#a1e29f429c768ce9ebb84e5160437bc85">radius0</a>, <a class="code" href="namespacevisbty__constants__mod.xhtml#ae33ccbe18a5aef90febacd8f6c9f1908">a0</a>, <a class="code" href="namespacevisbty__constants__mod.xhtml#a25092325a8aa76248d59e2b1c3fd638c">b0</a>,&amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                  <a class="code" href="namespacevisbty__constants__mod.xhtml#a21716f0b5666270c17d3da26ac451763" title="General constants (these should be promoted to a more general module) ">onethird</a>, <a class="code" href="namespacevisbty__constants__mod.xhtml#a3c4b071e26325c22ab7a9fb0049e50b0">fourthirds</a>, <a class="code" href="namespacevisbty__constants__mod.xhtml#a43a02bf2d136393d684a90df33321686">visfactor</a>,      &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                                  <a class="code" href="namespacevisbty__constants__mod.xhtml#a45ef17152d0b29d0cfc698449837a122">recipvisair</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keywordtype">USE </span>conversions_mod<span class="keywordtype">, ONLY</span>: pi</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;          p_field                   <span class="comment">! IN NO. points in field.</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    p_layer(p_field),                                                   &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;          t(p_field),                                                   &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                        <span class="comment">! IN Temperature</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;          q(p_field),                                                   &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                        <span class="comment">! IN Qt</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;          qcl(p_field),                                                 &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                        <span class="comment">! IN cloud water array.</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;          qcf(p_field),                                                 &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                        <span class="comment">! IN cloud ice array.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;          aerosol(p_field),                                             &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                        <span class="comment">! IN Aerosol mixing ratio(ug/kg)</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;          rhcrit                  <span class="comment">! IN Critical RH (determines</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                      <span class="comment">!    width of distribiution)</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;     l_murk                        <span class="comment">! IN : Aerosol present</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;          prob                     <span class="comment">! INOUT Probability level ( e.g 0.5</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                   <span class="comment">!    corresponds to median).</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        visibility(p_field)         <span class="comment">! OUT visibility array.</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;         qt(p_field),                                                   &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                      <span class="comment">! total of cloud water and vapour</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;         p(p_field),                                                    &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                      <span class="comment">! pressure of level</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;         qs(p_field)              <span class="comment">! saturation vapour pressure</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: rhmax = 0.99</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                        <span class="comment">! Maximum value of relative humidity</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                        <span class="comment">!  which is allowed to feed into the</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                        <span class="comment">!  calculation of the &#39;fog&#39; droplet radius</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: rhmin = 0.001</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                        <span class="comment">! Minimum value of relative humidity which</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                        <span class="comment">!  is allowed to feed into the calculation</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                        <span class="comment">!   of the &#39;fog&#39; droplet radius</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: weight = 0.75</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                        <span class="comment">! Weighting on new value for iterative</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                        <span class="comment">!  solution of droplet radius</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: delta_radius_star = 0.001</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                         <span class="comment">! Convergence required for iterative</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                        <span class="comment">!  solution of droplet radius</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: qt_limit = 0.0001</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                        <span class="comment">! Smallest Qt value allowed</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: radius_star_min = 1.0</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: radius_star_max = 1000.0</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: radius_star_factor = 4.0</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: niterations = 20</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                        <span class="comment">!  Maximum number of iteration used to</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                        <span class="comment">!   estimate the water droplet radius</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordtype">REAL</span> :: n             <span class="comment">! Local number density</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;   point,                                                               &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                         <span class="comment">!  Loop variable for points</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;   iteration        <span class="comment">!  Loop variable iterations used to estimate</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                         <span class="comment">!   the water droplet radius</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    m_over_m0,                                                          &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                         <span class="comment">!  Ratio of  aerosol mass mixing ratio and</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                         <span class="comment">!   the standard aerosol mass mixing ratio</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    recipvis,                                                           &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                         <span class="comment">!  Recipirical of the visibility</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    radius_dry,                                                         &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                         <span class="comment">!  Radius of dry aerosol particle (m)</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    radius,                                                             &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                         <span class="comment">!  Radius of fog droplets (m)</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    radius_star1,                                                       &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                         <span class="comment">!  Previous estimate of water droplet radius</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                         <span class="comment">!   divided by the dry radius</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    radius_star2,                                                       &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                         <span class="comment">!  Current best estimate of water droplet</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                         <span class="comment">!   radius divided by the dry radius</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    radius_act,                                                         &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                         <span class="comment">!  Activation droplet radius</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    radius_star_act,                                                    &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                         <span class="comment">!  Activation droplet rad divided by dry rad</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    a,                                                                  &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                         <span class="comment">!  A0 divided by the dry radius</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    rh_lim,                                                             &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                         <span class="comment">!  Limited RH value (fractional)</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    fn,                                                                 &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                         <span class="comment">!  Value of droplet radius function</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    deriv,                                                              &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                         <span class="comment">!  Derivative of droplet radius function</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    radius_star_diff,                                                   &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                         <span class="comment">!  Absolute value of radius_star1 minus</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                         <span class="comment">!    radius_star2</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    rhterm,                                                             &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                         <span class="comment">!  Relative humidity term in function to be</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                         <span class="comment">!   minimised to find the droplet radius</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    qlterm,                                                             &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                         <span class="comment">!  Liquid water term in function to be</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                         <span class="comment">!   minimised to find the droplet radius</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    rhderiv,                                                            &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                         <span class="comment">!  Derivative of relative humidity term</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    qlderiv,                                                            &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                         <span class="comment">!  Derivative of liquid water term</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    bs,                                                                 &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                         <span class="comment">!  Width of distribution in total water</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                         <span class="comment">!   mixing ratio space (kg/kg)</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    qt_mod,                                                             &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                         <span class="comment">!  Modified total water value based on the</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                         <span class="comment">!   probability of the value occurring</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                         <span class="comment">!   assuming a triangular distriubtion</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                         <span class="comment">!   of width bs.</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    qt_mod_factor    <span class="comment">!  Factor to multiply bs to modify qt</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">!     Check Prob is legal</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;VISBTY&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keywordflow">IF</span> ( prob  &lt;   0.0 .OR.  prob  &gt;   1.0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,E10.5)&#39;</span>)<span class="stringliteral">&quot;INVALID PROBABILITY VALUE in VISBTY :&quot;</span>,prob</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    prob=min(max(prob,0.0),1.0)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">!     Create factor to multiply bs by to modify qt</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keywordflow">IF</span> ( prob  ==  0.5 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    qt_mod_factor = 0.0</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( prob  &gt;=  0.0 .AND. prob  &lt;   0.5 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    qt_mod_factor = ( 1.0 - sqrt( 2.0 * prob ) )</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( prob  &gt;=  0.5 .AND. prob  &lt;=  1.0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    qt_mod_factor = - ( 1.0 - sqrt( 2.0 * (1.0-prob) ) )</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">! ! For the new cloud and precipitation scheme only use the liquid content</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">! 1. Calculate total of water vapour and liquid water contents, P and</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">! limit aerosol</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">!   DO point = 1, p_field</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    qt(point) = q(point)+qcl(point)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">!     Calculate pressure</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="keywordflow">DO</span> point = 1, p_field</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    p(point)=p_layer(point)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">! DEPENDS ON: qsat_wat</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keyword">CALL </span><a class="code" href="qsat__wat_8f90.xhtml#a0c0fb3b560128ff260172760c051f507" title="Saturation Specific Humidity Scheme (Qsat_Wat): Vapour to Liquid. ">qsat_wat</a> (qs,t,p,p_field)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keywordflow">DO</span> point = 1, p_field</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;-<span class="comment">!* 2. Calculate the ratio of the aerosol mass mixing ratio to the</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">!*    standard mass mixing ratio, m_over_m0, and the aerosol number</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">!*    density, N, the dry radius, radius_dry:</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">!*                      p</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">!*                  (m )</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">!*           r = r0 (--)</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">!*            d     (m0)</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">!*    And the activation radius:</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">!*                             1/2</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">!*                  (       3 )</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">!*                  ( 3 B0 r  )</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">!*           r    = ( d-)</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">!*            act   (   A0    )</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">!*    and A (A0 divided by the dry radius).</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">! N.B. AEROSOL is in ug/kg, m in kg/kg</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">! If not available, use 10 ug/kg</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;-</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">IF</span> (l_murk) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">! Ensure that assumed aerosol conc. is at least Aero0:</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      m_over_m0 = max(aerosol(point)/<a class="code" href="namespacevisbty__constants__mod.xhtml#ab717376adc35d09bccec8d6bbf1526a1">m0</a>*1.0e-9,                         &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                               <a class="code" href="namespacevisbty__constants__mod.xhtml#adf600d58b19b4393a16914fbd86e7efa">aero0</a>/<a class="code" href="namespacevisbty__constants__mod.xhtml#ab717376adc35d09bccec8d6bbf1526a1">m0</a>*1.0e-9, 0.0001)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;      m_over_m0 = max(10.0/<a class="code" href="namespacevisbty__constants__mod.xhtml#ab717376adc35d09bccec8d6bbf1526a1">m0</a>*1.0e-9, 0.0001)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    n = <a class="code" href="namespacevisbty__constants__mod.xhtml#a864366a34d92e4fb6f96777d4b58fd90" title="Microphysical parameters used in visibility calculations. ">n0</a> * m_over_m0**(1.0-3*<a class="code" href="namespacevisbty__constants__mod.xhtml#a27a487349096ad54f954bb7d088cc872">power</a>)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    radius_dry = <a class="code" href="namespacevisbty__constants__mod.xhtml#a1e29f429c768ce9ebb84e5160437bc85">radius0</a> * (m_over_m0)**<a class="code" href="namespacevisbty__constants__mod.xhtml#a27a487349096ad54f954bb7d088cc872">power</a></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    a = <a class="code" href="namespacevisbty__constants__mod.xhtml#ae33ccbe18a5aef90febacd8f6c9f1908">a0</a> / radius_dry</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    radius_act = sqrt( (3 * <a class="code" href="namespacevisbty__constants__mod.xhtml#a25092325a8aa76248d59e2b1c3fd638c">b0</a> * radius_dry**3) / <a class="code" href="namespacevisbty__constants__mod.xhtml#ae33ccbe18a5aef90febacd8f6c9f1908">a0</a> )</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    radius_star_act =  radius_act/radius_dry</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;-<span class="comment">!* 3. Calculate the width of the total water</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">!*    distribution and a modified value of total water, based</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">!*    on a probability.</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;-</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    bs = (1.0-rhcrit) * qs(point)</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    qt_mod = max( qt_limit, qt(point)+ qt_mod_factor* bs)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">!====================================================================</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">!* 4.  Use Newton-Raphson to iteratively improve on a first-guess</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">!*     droplet radius, using the droplet growth equation and the</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">!*     geometric relation between liquid water and droplet radius.</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">!====================================================================</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">!* 4.1 Calculate a first guess relative humidity, qt/qs, but limit it</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">!*     to be in the range 0.001 -&gt; 0.999.</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">!*     From this calculate a first-guess normalised radius using a</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">!*     simplified version of the droplet growth equation:</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">!*                              1/3</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">!*                (       B0   )</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">!*           r  = ( 1 -  )</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">!*            *   (     ln(RH) )</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;-</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    rh_lim = min( max( qt_mod/qs(point), rhmin ) , rhmax )</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    radius_star2 = (1.0-<a class="code" href="namespacevisbty__constants__mod.xhtml#a25092325a8aa76248d59e2b1c3fd638c">b0</a>/log(rh_lim))**<a class="code" href="namespacevisbty__constants__mod.xhtml#a21716f0b5666270c17d3da26ac451763" title="General constants (these should be promoted to a more general module) ">onethird</a></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;-<span class="comment">!* 4.2 Initialise the iteration counter, the normalised radius</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">!*     difference, and the updated normalised radius value.</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;-</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    iteration = 0</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    radius_star_diff = 1.0</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    radius_star1 = radius_star2</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keywordflow">DO</span> <span class="keywordflow">WHILE</span> ( iteration  &lt;   niterations .AND.                         &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                 radius_star_diff  &gt;   delta_radius_star )</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;-<span class="comment">!* 4.3 Update the iteration counter and the normalised radius value.</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;-</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      iteration = iteration + 1</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;      radius_star1 = weight * radius_star2                              &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                   + ( 1.0 - weight ) * radius_star1</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;-<span class="comment">!* 4.4 Calculate the relative humidity term:</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">!*                      ( A        B0   )</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">!*          RHterm = exp( --  -   )</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">!*                      ( r       3     )</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">!*                      (  *     r  - 1 )</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">!*                      (         *     )</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">!*      and its derivative with respect to the normalised radius:</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">!*                    (                 2    )</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">!*                    (   A       3 B0 r     )</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">!*          RHderiv = ( - --  +  -*- 2 ) * RHterm</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">!*                    (    2     (  3     )  )</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">!*                    (   r      ( r  - 1 )  )</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">!*                    (    *     (  *     )  )</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;-</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;      <span class="keywordflow">IF</span> ( radius_star1  &lt;   radius_star_act ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        rhterm  = exp( a/radius_star1                                   &amp;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                       - <a class="code" href="namespacevisbty__constants__mod.xhtml#a25092325a8aa76248d59e2b1c3fd638c">b0</a>/(radius_star1**3-1.0) )* qs(point)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        rhderiv = - rhterm * ( -a/(radius_star1**2)                     &amp;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                  + (3.0*<a class="code" href="namespacevisbty__constants__mod.xhtml#a25092325a8aa76248d59e2b1c3fd638c">b0</a>*radius_star1**2)                            &amp;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                  /(radius_star1**3-1.0)**2 )</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        rhterm  = exp( a/radius_star_act                                &amp;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                       - <a class="code" href="namespacevisbty__constants__mod.xhtml#a25092325a8aa76248d59e2b1c3fd638c">b0</a>/(radius_star_act**3-1.0) ) * qs(point)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        rhderiv = 0.0</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;-<span class="comment">!* 4.5 Calculate the liquid water mixing ratio term:</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">!*                   4             3 (  3     )</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">!*          qLterm = - Pi rho_w N r  ( r  - 1 )</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">!*                   3             d (  *     )</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">!*      and its derivative with respect to the normalised radius:</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">!*                                  3  2</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">!*          qLderiv = 4 Pi rho_w N r  r</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">!*                                  d  *</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;-</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;      qlterm  = n * <a class="code" href="namespacevisbty__constants__mod.xhtml#a3c4b071e26325c22ab7a9fb0049e50b0">fourthirds</a> * pi * rho_water * radius_dry**3         &amp;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                  * ( radius_star1**3 - 1.0 )</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;      qlderiv  = - n * 4.0 * pi * rho_water                             &amp;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                  * radius_dry**3 * radius_star1**2</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;-<span class="comment">!* 4.6 Calculate the function, Fn, and its derivative, Deriv, and</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">!*     an improved estimate of the normalised radius,</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">!*     using Newton Raphson:</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">!*          Fn = qt - RHterm - qLterm</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">!*          Deriv = RHderiv + qLderiv</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">!*                          Fn</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">!*          r      = r  -  -!*           * new    *    Deriv</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment">!*     The new estimate of the normalised radius is limited lie between</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">!*     prescribed maximum and minimum values and within a factor of the</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">!*     previous value to ensure that the soultion does not diverge.</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;-</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;      fn    = qt_mod - rhterm - qlterm</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;      deriv = rhderiv + qlderiv</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;      radius_star2 = radius_star1 - fn/deriv</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;      <span class="keywordflow">IF</span> ( radius_star2  &lt;   radius_star_min )                          &amp;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;          radius_star2 = radius_star_min</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;      <span class="keywordflow">IF</span> ( radius_star2  &gt;   radius_star_max )                          &amp;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;          radius_star2 = radius_star_max</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;      <span class="keywordflow">IF</span> ( radius_star2  &gt;   radius_star_factor * radius_star1 )        &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;          radius_star2 = radius_star_factor * radius_star1</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      <span class="keywordflow">IF</span> ( radius_star2  &lt;   radius_star1 / radius_star_factor )        &amp;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;          radius_star2 = radius_star1 / radius_star_factor</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">!* 4.7 Calculate difference between the old and the new values of the</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">!*     normalised radius.</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;      radius_star_diff = abs( radius_star1 - radius_star2 )</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">!* 5.  Calculate the radius from the final normalised radius.</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    radius = radius_star2 * radius_dry</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">!* 6. Calculate the visibility, Vis, using the equation:</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">!*                 ln(liminal contrast)</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">!*           Vis = -2</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment">!*                     Beta0 N r</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">!*    (An extra term RecipVisAir is included in the recipical of</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">!*     visibility to limit visibilities to 100km in clean air).</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    recipvis = (n * radius**2) / <a class="code" href="namespacevisbty__constants__mod.xhtml#a43a02bf2d136393d684a90df33321686">visfactor</a> + <a class="code" href="namespacevisbty__constants__mod.xhtml#a45ef17152d0b29d0cfc698449837a122">recipvisair</a></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    visibility(point) = 1/recipvis</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;VISBTY&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="visbty_8f90.xhtml#aac944f627549fcfff96fe5b93304c025" title="Calculate visibility (in metres) from temperature, specific humidity,. ">visbty</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
