<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/UKCA/ukca_light_ctl.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_3b087d695daa154bfcb7242bcfd0fbd3.xhtml">UKCA</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ukca_light_ctl.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ukca__light__ctl_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">!                                                                      !                                                                      ! Code description:                                                    !   Language: FORTRAN 90                                               !   This code is written to UMDP3 v6 programming standards.            !                                                                      !         SUBROUTINE UKCA_LIGHT_CTL(                                     &amp;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;              rows, row_length, delta_lambda, delta_phi,               &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;              p_levels, conv_base_lev,                                 &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;              conv_top_lev, <a class="code" href="atm__lsm_8h.xhtml#a553a9f22845d6a8028979bc57d16c4ed">mask</a>, lat, area,                           &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;              <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>, r_rho_levels,                            &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;              p_centres, p_boundaries,                                 &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;              n_gridbox, no2_to_air)</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;        <span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">,   ONLY</span>: g, earth_radius</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;        <span class="keywordtype">USE </span>ukca_constants<span class="keywordtype">,        ONLY</span>: c_no2, c_n</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,               ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,              ONLY</span>: jprb, jpim</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        <span class="keywordtype">USE </span><a class="code" href="namespaceasad__chem__flux__diags.xhtml" title="(c) [University of Cambridge] [2008]. All rights reserved. ">asad_chem_flux_diags</a></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        <span class="keywordtype">IMPLICIT NONE</span>                                                  </div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: rows                          <span class="comment">! No of latitudes</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: row_length                    <span class="comment">! No of longtitudes</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: p_levels                      <span class="comment">! No of levels</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: conv_base_lev(row_length,rows)<span class="comment">! Level of convective base</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: conv_top_lev(row_length,rows) <span class="comment">! Level of convective top</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: <a class="code" href="atm__lsm_8h.xhtml#a553a9f22845d6a8028979bc57d16c4ed">mask</a>(row_length, rows)        <span class="comment">! Land/sea mask (1/0)</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                                                                               <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: delta_lambda</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: delta_phi</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: lat(row_length, rows)                              <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: area(row_length, rows)</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(row_length, rows, 0:p_levels)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: r_rho_levels(row_length, rows, p_levels)           <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: p_centres(row_length, rows, p_levels)              <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: p_boundaries(row_length, rows, 0:p_levels)                                                                                <span class="comment">! Arrays of NOx lightning emiss with different units:</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="comment">! kg(N)/gridbox/s and kg(NO2)/kg(air)/s</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: n_gridbox  (row_length, rows, p_levels)</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: no2_to_air (row_length, rows, p_levels)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                                                                       <span class="comment">! Local variables                                                      </span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordtype">INTEGER</span> :: i                                     <span class="comment">! Loop variable</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keywordtype">INTEGER</span> :: <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>                                     <span class="comment">! Loop variable</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordtype">INTEGER</span> :: <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>                                     <span class="comment">! Loop variable</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordtype">INTEGER</span> :: klc                                   <span class="comment">! Cloud base</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keywordtype">INTEGER</span> :: klt                                   <span class="comment">! Cloud top</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordtype">INTEGER</span> :: asurf                                 <span class="comment">! Land/sea mask  </span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordtype">REAL</span> :: model_half_ht(row_length, rows, 0:p_levels)                   <span class="keywordtype">REAL</span> :: height(row_length, rows, p_levels)                             <span class="keywordtype">REAL</span> :: cloud_base(row_length, rows)                                   <span class="keywordtype">REAL</span> :: cloud_top(row_length, rows)                                    <span class="keywordtype">REAL</span> :: delp_p(row_length, rows)                                       <span class="keywordtype">REAL</span> :: <a class="code" href="typptra_8h.xhtml#a4ac6ab524823770b751a91f9f3cd54c4">mass</a>(row_length, rows)                                         <span class="keywordtype">REAL</span> :: anox(p_levels)                                                 <span class="keywordtype">REAL</span> :: press(p_levels)                                                <span class="keywordtype">REAL</span> :: hkmb                                                           <span class="keywordtype">REAL</span> :: hkmt                                                           <span class="keywordtype">REAL</span> :: asfaera                                                        <span class="keywordtype">REAL</span> :: adlat                                                  </div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordtype">INTEGER</span> ::errcode, ierr</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;       <span class="comment">!       ...number of flashes per gridcell cloud to ground in flashes/gridcell/s</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordtype">REAL</span> :: cloud2ground_flash_rate_cell</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;       <span class="comment">!       ...number of flashes per gridcell cloud to cloud in flashes/gridcell/s</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordtype">REAL</span> :: cloud2cloud_flash_rate_cell</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;       <span class="comment">!       ...total L-NOX  column flux dendity (kg(N)/m^2/s)</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordtype">REAL</span> :: total_n_cell</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;       <span class="comment">!       ...number of flashes cloud to ground /s               REAL :: cloud2ground_flash_rate(row_length, rows)       !       ...number of flashes cloud to cloud /s               REAL :: cloud2cloud_flash_rate(row_length, rows)</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;       <span class="comment">!       ...total N (kg(N)/m^2/s) produced per cell               REAL :: total_N(row_length, rows)</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                                                       <span class="comment">!       ...Initialize variables and arrays</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        total_flash_rate = 0.0</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        cloud2ground_flash_rate = 0.0</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        cloud2cloud_flash_rate = 0.0</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        total_n_cell = 0.0</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        n_gridbox(:,:,:) = 0.0</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        no2_to_air(:,:,:) = 0.0</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        total_flash_rate(:,:) = 0.0</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        cloud2ground_flash_rate(:,:) = 0.0</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        cloud2cloud_flash_rate(:,:)  = 0.0</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        total_n(:,:)  = 0.0</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                                                       <span class="comment">! Find heights of model half levels                                                                                                                   IF (lhook) CALL dr_hook(&#39;UKCA_LIGHT_CTL&#39;,zhook_in,zhook_handle)</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 0,p_levels                                                        model_half_ht(:,:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(:,:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                 &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                               - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(:,:,0)<span class="keywordflow">                         END DO</span>                                                                                                                                 <span class="comment">! Find heights of model levels                                                                                                                        DO k = 1,p_levels                                                        height(:,:,k) = r_rho_levels(:,:,k) - r_theta_levels(:,:,0)</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keywordflow">        END DO</span>                                                                                                                                 <span class="comment">! Convective cloud base and top height in km                                                                                                          cloud_base = 0.0                                                       cloud_top  = 0.0                                                                                                                              DO i = 1,rows                                                            DO j = 1,row_length                                                      IF (conv_base_lev(j,i) &gt; 0) THEN                                         cloud_base(j,i) = height(j,i,conv_base_lev(j,i))/1000.0              END IF                                                                  IF (conv_top_lev(j,i) &gt; 0) THEN                                          cloud_top(j,i) = height(j,i,conv_top_lev(j,i))/1000.0</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordflow">            END IF</span><span class="keywordflow">                                                                END DO</span><span class="keywordflow">                                                                END DO</span>                                                                                                                                         <span class="keywordflow">DO</span> i = 1,rows                                                            <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a> = 1,row_length                                                      hkmb      = cloud_base(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,i)                                            hkmt      = cloud_top(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,i)                                             adlat     = lat(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,i)                                                   asurf     = <a class="code" href="atm__lsm_8h.xhtml#a553a9f22845d6a8028979bc57d16c4ed">mask</a>(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,i)                                                  klc       = conv_base_lev(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,i)                                         klt       = conv_top_lev(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,i)                                          asfaera   = area(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,i)                        anox      = 0.0                                                        press     = p_centres(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,i,:)                                           <span class="keywordflow">IF</span> (klc &gt; 1 .AND. klt &lt; p_levels) <span class="keywordflow">THEN</span>  <span class="comment">!             Call UKCA_LIGHT to calculate NOx emissions (kg N/grid box/s)</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;              <span class="keyword">CALL </span>ukca_light(delta_lambda,delta_phi,press,p_levels, &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                              hkmb,hkmt,klc,klt,adlat,               &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                              asfaera,asurf,anox,                    &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                              total_flash_rate_cell,                 &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                              cloud2ground_flash_rate_cell,          &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                              cloud2cloud_flash_rate_cell,           &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                              total_n_cell)                                </div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;              n_gridbox(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,i,:)  = anox</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;              total_flash_rate(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,i) = total_flash_rate_cell</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;              cloud2ground_flash_rate(<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,i) = cloud2ground_flash_rate_cell</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;             <span class="comment">!             ...cld2cld flash rate in flashes/gridcell/min                           cloud2cloud_flash_rate(j,i)  = cloud2cloud_flash_rate_cell</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;             <span class="comment">!             ...L-NOx column flux density in kg(N)/m^2/s                           total_N(j,i) = total_N_cell</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordflow">                         END IF</span><span class="keywordflow">                                                                END DO</span><span class="keywordflow">                                                                END DO</span>                                                          </div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;             <span class="keyword">CALL </span><a class="code" href="namespaceasad__chem__flux__diags.xhtml#a8671550dac8ce02d6d635acb9a7212f4">asad_lightning_diagnostics</a>( &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;             row_length, &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;             rows, &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;             <a class="code" href="namespaceasad__chem__flux__diags.xhtml#a4a15fe8fa0c04ba5b54522b689f02918">total_lightning_flashes</a>, &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;             total_flash_rate, &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;             ierr)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;       <span class="comment">!       ...goes to STASH item 50082               IF (L_asad_use_chem_diags .AND. L_asad_use_light_diags_c2g) &amp;</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;             <span class="keyword">CALL </span><a class="code" href="namespaceasad__chem__flux__diags.xhtml#a8671550dac8ce02d6d635acb9a7212f4">asad_lightning_diagnostics</a>( &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;             row_length, &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;             rows, &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;             <a class="code" href="namespaceasad__chem__flux__diags.xhtml#acf8f03d07ebe774b7b737b6605f55dfe">lightning_flashes_cloud2ground</a>, &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;             cloud2ground_flash_rate, &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;             ierr)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;       <span class="comment">!       ...goes to STASH item 50083               IF (L_asad_use_chem_diags .AND. L_asad_use_light_diags_c2c) &amp;</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;             <span class="keyword">CALL </span><a class="code" href="namespaceasad__chem__flux__diags.xhtml#a8671550dac8ce02d6d635acb9a7212f4">asad_lightning_diagnostics</a>( &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;             row_length, &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;             rows, &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;             <a class="code" href="namespaceasad__chem__flux__diags.xhtml#ae769e3a0434636d98b707f46488ccb47">lightning_flashes_cloud2cloud</a>, &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;             cloud2cloud_flash_rate, &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;             ierr)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;       <span class="comment">!       ...goes to STASH item 50084               IF (L_asad_use_chem_diags .AND. L_asad_use_light_diags_N) &amp;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;             <span class="keyword">CALL </span><a class="code" href="namespaceasad__chem__flux__diags.xhtml#a8671550dac8ce02d6d635acb9a7212f4">asad_lightning_diagnostics</a>( &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;             row_length, &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;             rows, &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;             <a class="code" href="namespaceasad__chem__flux__diags.xhtml#a2c82be18176a6b1a5869b5a494aa5d70">total_n_2d</a>, &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;             total_n, &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;             ierr)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                                                                        <span class="comment">! Convert NOx emissions to fluxes in mass mixing ratio, i.e., kg(NO2)/kg(air)/s</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                                                                               <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1,p_levels                                                        delp_p = p_boundaries(:,:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1) - p_boundaries(:,:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)         </div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">!         Calculate mass of each grid box                                        mass = area*delp_p/g               </span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">!         convert L-NOx emissions from kg(N)/gridcell/s to kg(NO2)/kg(air)/s</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;          no2_to_air(:,:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = n_gridbox(:,:,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)*c_no2/c_n/<a class="code" href="typptra_8h.xhtml#a4ac6ab524823770b751a91f9f3cd54c4">mass</a></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordflow">        END DO</span>                                                                                                                                        <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_LIGHT_CTL&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">        END SUBROUTINE </span>UKCA_LIGHT_CTL                                  </div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
