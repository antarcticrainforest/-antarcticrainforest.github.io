<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/UKCA/ukca_wdeprt.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_3b087d695daa154bfcb7242bcfd0fbd3.xhtml">UKCA</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ukca_wdeprt.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ukca__wdeprt_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">!                                                                      !                                                                      ! Code description:                                                    !   Language: FORTRAN 90                                               !   This code is written to UMDP3 v6 programming standards.            !                                                                      ! !                                                                              SUBROUTINE UKCA_WDEPRT(drain,crain,p_fieldda,q_levelsda,t,     &amp;                                 sinlat,tstep,                            &amp;                                 first_point,last_point,wetrt)            </span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;        <span class="keywordtype">USE </span>asad_mod<span class="keywordtype">,         ONLY</span>: ddhr, dhr, kd298, k298</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;        <span class="keywordtype">USE </span>ukca_constants<span class="keywordtype">,   ONLY</span>: h_plus, pi, recip_pi_over_180</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;        <span class="keywordtype">USE </span>ukca_option_mod<span class="keywordtype">,  ONLY</span>: jpdw</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;        <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;        <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;        <span class="keywordtype">IMPLICIT NONE</span>                                                                                                                                 <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: p_fieldda            <span class="comment">! No of spatial pts</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: q_levelsda           <span class="comment">! No of vertical levs</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: first_point          <span class="comment">! First spatial pt</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: last_point           <span class="comment">! Last spatial pt</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                                                                               <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: drain(p_fieldda,q_levelsda)                        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: crain(p_fieldda,q_levelsda)                        <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: t(p_fieldda,q_levelsda)   <span class="comment">! Temperature            REAL, INTENT(IN) :: sinlat(p_fieldda)         ! Sine(latitude)         REAL, INTENT(IN) :: tstep                     ! Timestep                                                                                      REAL, INTENT(OUT) :: wetrt(p_fieldda,q_levelsda,jpdw)                                                                                 !       Local variables                                                                                                                               INTEGER :: i                    ! Loop variable                        INTEGER :: k                    ! Loop variable                        INTEGER :: ns                   ! Loop variable                                                                                              REAL, PARAMETER :: fac   = 0.1          ! Factors to convert rainfall rate</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: fcc   = 86400.e6     <span class="comment">! to cm/s                      REAL, PARAMETER :: fc    = 0.3          ! Fraction of gridbox with conv rain</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: csca  = 4.7          <span class="comment">! Conv rain scavenging rate</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: dsca  = 2.4          <span class="comment">! Dyn rain scavenging rate</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: clw   = 1.0e-6       <span class="comment">! Cloud liquid water concn</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: rgas  = 0.08314      <span class="comment">! Ideal gas constant         REAL, PARAMETER :: Nlat  = 65.0         ! Northern limit for scavenging</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: slat  = -65.0        <span class="comment">! Southern limit for scavenging</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: tmax  = 273.15       <span class="comment">! Max temp used to limit scav</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: tmin  = 253.15       <span class="comment">! Min temp used to limit scav</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                                                                               <span class="keywordtype">REAL</span> :: tmp1                              <span class="comment">! Temporary Variable        REAL :: tmp2                              ! Temporary Variable        REAL :: kaq                               ! Variable used to calculate faq        REAL :: rcw                               ! Conv scav rate        REAL :: rdw                               ! Dyn scav rate        REAL :: flim                              ! Limit to dyn scav        REAL :: rwcon(p_fieldda,q_levelsda,jpdw)  ! Gridbox conv scav rate</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <span class="keywordtype">REAL</span> :: rwdyn(p_fieldda,q_levelsda,jpdw)  <span class="comment">! Gridbox dyn scav rate</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keywordtype">REAL</span> :: hcoef(p_fieldda,q_levelsda,jpdw)  <span class="comment">! Effective Henry&#39;s coeff</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keywordtype">REAL</span> :: faq(p_fieldda,q_levelsda,jpdw)    <span class="comment">! Fraction of species in aq phase</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keywordtype">REAL</span> :: lat(p_fieldda)                    <span class="comment">! Latitudes                  REAL :: ddrain(p_fieldda,q_levelsda)      ! Accumulated dynamic rain</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keywordtype">REAL</span> :: ccrain(p_fieldda,q_levelsda)      <span class="comment">! Accumulated convective rain</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_WDEPRT&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        ddrain = drain                                                         ccrain = crain                                                        </div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordflow">DO</span> ns = 1,jpdw                                                           <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1,q_levelsda                                                      <span class="keywordflow">DO</span> i = first_point,last_point                                                                                                     <span class="comment">!             Calculate effective Henry&#39;s law coefficient taking into account</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                                                                     tmp2 = clw*hcoef(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>,ns)*rgas*t(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                                   faq(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>,ns) = tmp2/(1.0 + tmp2)                                                                                                 <span class="comment">!             Calculate convective scavenging rate                                                                                                          rcw = ccrain(i,k)*fac*csca*faq(i,k,ns)                                                                                          !             Compute new scavenging rates                                                                                                                  rcw = rcw / fc                                                                                                                  !             Find effective scavenging rate for convective rain (sec-1)</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                                                                     rwcon(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>,ns) = (-alog(1-fc+fc*exp(-tstep*rcw)))/tstep<span class="keywordflow">                                                                                      ENDDO</span><span class="keywordflow">                                                                ENDDO</span><span class="keywordflow">                                                                ENDDO</span>                                                                                                                                 <span class="comment">!       Latitude in degrees                                                                                                                           DO i = first_point,last_point                                            lat(i) = asin(sinlat(i))*Recip_Pi_Over_180                           ENDDO                                                                                                                                         DO ns = 1,jpdw                                                           DO k = 1,q_levelsda                                                      DO i = first_point,last_point                                                                                                     !             For dynamic cloud assume cloud cover=1                   !             Calculate dynamical scavenging rate                                                                                                           rdw = ddrain(i,k)*fac*dsca*faq(i,k,ns)                                                                                          !             Place limit to scavenging in polar regions                                                                                                    IF(lat(i) &gt;= Nlat .OR. lat(i) &lt;= Slat) THEN                                                                                                     IF (t(i,k) &gt;= Tmax) THEN                                                 flim = 1.0                                                           ELSE IF(t(i,k) &lt; Tmin) THEN                                              flim = 0.0                 ELSE                    flim = 1.0 + 0.05*(t(i,k)-Tmax)                                                                            END IF                                                                                                                                        rdw = rdw * flim                                                     ENDIF                                                                                                                           !             Wet deposition rate for dynamical rain only(sec-1)                                                                                            rwdyn(i,k,ns) = rdw                                                                                                                         ENDDO                                                                ENDDO                                                                ENDDO                                                                                                                                 !       Wet deposition rate : first-order loss by                      !       dynamic rain + convective rain                                                                                                                DO ns = 1,jpdw                                                           DO k = 1,q_levelsda                                                      DO i = first_point,last_point                                            wetrt(i,k,ns) = rwcon(i,k,ns) + rwdyn(i,k,ns)                        ENDDO                                                                ENDDO                                                                ENDDO                                                          </span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_WDEPRT&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">        END SUBROUTINE </span>UKCA_WDEPRT                                                                                                                                                                                   </div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
