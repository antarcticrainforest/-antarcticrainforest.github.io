<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/large_scale_cloud/ls_cld.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_4a718005dcd2cc89f5e703eb62b98c3c.xhtml">large_scale_cloud</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ls_cld.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ls__cld_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="ls__cld_8f90.xhtml#a2244f8b9237d1f3076b62c25fff15580" title="Large-scale Cloud Scheme. ">ls_cld</a>(                                                      &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;!&gt;      Pressure related fields</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; p_theta_levels, rhcrit,                                                &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;!&gt;      Array dimensions</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; levels, bl_levels,                                                     &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; rhc_row_length,rhc_rows,                                               &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;!&gt;      From convection diagnosis (only used if A05_4A)</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; ntml, cumulus, l_mixing_ratio,                                         &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; t, cf, q, qcf, qcl,                                                    &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; cfl, cff,                                                              &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; error)</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="ls__cld_8f90.xhtml#a2244f8b9237d1f3076b62c25fff15580">   18</a></span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecv__run__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_run_mod</a><span class="keywordtype">,            ONLY</span>: <a class="code" href="namespacecv__run__mod.xhtml#abdfbcfb71ab17ae16f0dee72f99813d8">l_param_conv</a></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacevectlib__mod.xhtml">vectlib_mod</a><span class="keywordtype">,           ONLY</span>: <a class="code" href="namespacevectlib__mod.xhtml#ae619493e9e4d10fb153e38fc3413a371">powr_v</a></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keywordtype">USE </span>conversions_mod<span class="keywordtype">,       ONLY</span>: pi</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,               ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,              ONLY</span>: jprb, jpim</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">, ONLY</span>: pdims, qdims, tdims</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecloud__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cloud_inputs_mod</a><span class="keywordtype">,      ONLY</span>: cloud_fraction_method,               &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;   <a class="code" href="namespacecloud__inputs__mod.xhtml#a88d75b5271296497a47a74b001bdf5ac" title="======================================================================= Constants, removed from RUN_CLOUD namelist ">ice_fraction_method</a>, <a class="code" href="namespacecloud__inputs__mod.xhtml#a836cd13b0b65284b74383c21d6a26e5f" title="=========================================================================== LOGICAL options set from ...">l_eacf</a>, <a class="code" href="namespacecloud__inputs__mod.xhtml#aba8af87c668be2522de8b898ff879e3b">overlap_ice_liquid</a>, <a class="code" href="namespacecloud__inputs__mod.xhtml#af4e22384917fd8da0da525cc2f559edc">ctt_weight</a>,         &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;   <a class="code" href="namespacecloud__inputs__mod.xhtml#a5f9008aded3ca06863c199bacef45d67">t_weight</a>, <a class="code" href="namespacecloud__inputs__mod.xhtml#a7c5f47958ef55415d9377b4a7c79f32a">qsat_fixed</a>, <a class="code" href="namespacecloud__inputs__mod.xhtml#aabe62c8e9ec63108388e4ab2d9349ef4">sub_cld</a></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacec__cldsgs__mod.xhtml" title="This file belongs in section: Large Scale Cloud This file belongs in section: Large Scale Cloud...">c_cldsgs_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacec__cldsgs__mod.xhtml#adce7b4f775978c59364356911cfa2e9c" title="Minimum ice content to perform calculations. ">qcfmin</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">! Description of Code:</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                        <span class="comment">!, INTENT(IN)</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;   <a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>,                                                              &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;   bl_levels,                                                           &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;   rhc_row_length,rhc_rows</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                        <span class="comment">!, INTENT(IN)</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;   qcf(           qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>),                    &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;   <a class="code" href="varcld_8h.xhtml#acd7a57e90bb1e737ecae71f1c1830ad6">p_theta_levels</a>(pdims%i_start:pdims%i_end,                            &amp;                  pdims%j_start:pdims%j_end,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>),                    &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;   rhcrit(rhc_row_length,rhc_rows,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;   ntml(          qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end)    <span class="comment">!       IN Height of diagnosed BL top</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordtype">LOGICAL</span> ::                                                            &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;   l_mixing_ratio <span class="comment">!       IN true if using mixing ratios</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keywordtype">LOGICAL</span> ::                                                            &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;   cumulus(       qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end) <span class="comment">!       IN Logical indicator of convection</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                        <span class="comment">!, INTENT(INOUT)</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;   q(             qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>),                    &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;   t(             tdims%i_start:tdims%i_end,                            &amp;                  tdims%j_start:tdims%j_end,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                        <span class="comment">!, INTENT(OUT)</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;   cf(            qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>),                    &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;   qcl(           qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>),                    &amp;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;   cfl(           qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>),                    &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;   cff(           qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordtype">INTEGER</span> :: error     <span class="comment">!, INTENT(OUT)  0 if OK; 1 if bad arguments.</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">!  Local parameters and other physical constants</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordtype">REAL</span> :: rootwo       <span class="comment">! Sqrt(2.)</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordtype">REAL</span> :: subgrid      <span class="comment">! Subgrid parameter in ice cloud calculation</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">!  Local scalars-</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">!  (a) Scalars effectively expanded to workspace by the Cray (using</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">!      vector registers).</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;   phiqcf,                                                              &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                        <span class="comment">! Arc-cosine term in Cloud ice fraction calc.</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;   cosqcf,                                                              &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                        <span class="comment">! Cosine term in Cloud ice fraction calc.</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;   overlap_max,                                                         &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                        <span class="comment">! Maximum possible overlap</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;   overlap_min,                                                         &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                        <span class="comment">! Minimum possible overlap</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;   overlap_random,                                                      &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                        <span class="comment">! Random overlap</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;   temp0,                                                               &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;   temp1,                                                               &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;   temp2,                                                               &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                        <span class="comment">! Temporaries for combinations of the</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;   qn_imp,                                                              &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;   qn_adj</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">!                       ! overlap parameters</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">!  (b) Others.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keywordtype">INTEGER</span> :: k,i,j       <span class="comment">! Loop counters: K - vertical level index.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">!                                        I,J - horizontal field indices.</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keywordtype">INTEGER</span> :: qc_points,                                                 &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                        <span class="comment">! No. points with non-zero cloud</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;          multrhc   <span class="comment">! Zero if (rhc_row_length*rhc_rows) le 1, else 1</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">!  Local dynamic arrays!    6 blocks of real workspace are required.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;   qcfrbs(        qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end),                           &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">!       qCF / bs</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;   qsl(           qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end),                           &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">!       Saturated specific humidity for temp TL or T.</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;   qsl_ctt(       qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end),                           &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">!       Saturated specific humidity wrt liquid at cloud top temperature</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;   qn(            qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end),                           &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!       Cloud water normalised with BS.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;   grid_qc(       qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>),                    &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">!       Gridbox mean saturation excess at processed levels</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">!        (kg per kg air). Set to RMDI when cloud is absent.</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;   bs(            qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>),                    &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">!       Maximum moisture fluctuation /6*sigma at processed levels</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">!        (kg per kg air). Set to RMDI when cloud is absent.</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;   ctt(           qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">!       Ice cloud top temperature (K) - as coded it is really TL</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordtype">LOGICAL</span> ::                                                            &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;   lqc(           qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end)     <span class="comment">!       True for points with non-zero cloud</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;   index((1+qdims%j_end-qdims%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>)*(1+qdims%i_end-qdims%i_start),2),&amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">!       Index for points with non-zero cloud</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;   llwic(         qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">!       Last Level With Ice Cloud</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keywordtype">REAL</span> :: rhcritx             <span class="comment">!       Scalar copy of RHCRIT(I,J,K)</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">!       Variables for cache-blocking</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keywordtype">INTEGER</span>            :: jj             <span class="comment">!Block index</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keywordtype">INTEGER</span>            :: kk</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">!       jblock is not a parameter. Value needs to be flexible at runtime.</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keywordtype">INTEGER</span>            :: jblock</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: kblock=4       <span class="comment">!Block size</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">!- End of Header</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">!Set value of blocking factor, jblock. May need to be changed on other! platforms or for OMP threads &gt; 4</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  jblock = 4</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">! !  Check input arguments for potential over-writing problems.</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">!   error=0</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keywordflow">IF</span> ( (rhc_row_length * rhc_rows)  &gt;   1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    multrhc = 1</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    multrhc = 0</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">! ==Main Block==-! Subroutine structure :</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">! Loop round levels to be processed.</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">!  IF (lhook) CALL dr_hook(&#39;LS_CLD&#39;,zhook_in,zhook_handle)</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">! Initialize cloud-top-temperature and last-level-with-ice-cloud arrays</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">! Levels_do1:</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">!Parameters used: kblock</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">!$OMP  PARALLEL DEFAULT(NONE)                                                   &amp;</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">!$OMP&amp; SHARED(llwic, ctt, levels, qcl, cfl, grid_qc, bs, p_theta_levels,        &amp;</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">!$OMP&amp; l_mixing_ratio, qcf, ice_fraction_method, ctt_weight, l_eacf,            &amp;</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">!$OMP&amp; rhc_row_length, rhc_rows, bl_levels, cloud_fraction_method, cf,          &amp;</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">!$OMP&amp; overlap_ice_liquid, cff, t_weight, sub_cld, q, t, jblock,                &amp;</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">!$OMP&amp; qsat_fixed, multrhc, cumulus, ntml, rhcrit, l_param_conv, qdims)             &amp;</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">!$OMP&amp; PRIVATE(k, j, i, rhcritx, qc_points, rootwo, subgrid, qsl, qsl_ctt,      &amp;</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">!$OMP&amp; phiqcf, cosqcf, qn_imp, qn_adj, overlap_max, overlap_min, overlap_random,&amp;</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">!$OMP&amp; temp0, temp1, temp2, qn, lqc, index, qcfrbs, kk, jj)</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">!Cache-blocking applied to loop over j. It is used here to allow</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">!OpenMP parallelism to be over j (looping over k is order-dependent),</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">!but still have j and k in the correct order for good cache use.</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">!If jblock=rows=(1+qdims%j_end-qdims%j_start),!then the inner &quot;do j&quot; loop does the most work, hence</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">!the loops over j and k are still the correct way around.</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">!$OMP DO SCHEDULE(DYNAMIC)</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keywordflow">DO</span> jj = qdims%j_start, qdims%j_end, jblock</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">DO</span> j = jj, min((jj+jblock)-1,(1+qdims%j_end-qdims%j_start))</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        llwic(i,j)=0</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keywordflow">DO</span> k = <a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>, 1, -1</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;      <span class="keywordflow">DO</span> j = jj, min((jj+jblock)-1,(1+qdims%j_end-qdims%j_start))</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;          <span class="keywordflow">IF</span> (llwic(i,j)  /=  k+1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            ctt(i,j,k)=t(i,j,k)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            ctt(i,j,k)=ctt(i,j,k+1)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;          <span class="keywordflow">IF</span> (qcf(i,j,k)  &gt;   <a class="code" href="namespacec__cldsgs__mod.xhtml#adce7b4f775978c59364356911cfa2e9c" title="Minimum ice content to perform calculations. ">qcfmin</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            llwic(i,j)=k</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">!Cache-blocking applied to loop over k.</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">!$OMP DO SCHEDULE(DYNAMIC)</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  <span class="keywordflow">DO</span> kk = <a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>, 1, -kblock</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordflow">DO</span> k = kk, max((kk-kblock)+1,1), -1</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">! ! 1. Calculate QSAT at liquid/ice water temperature, TL, and initialize</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">!    cloud water, sub-grid distribution and fraction arrays.</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">!    This requires a preliminary calculation of the pressure.</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">!    NB: On entry to the subroutine &#39;T&#39; is TL and &#39;Q&#39; is QW.</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">! !</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">!CDIR COLLAPSE</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;      <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;          qcl(i,j,k) = 0.0</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;          cfl(i,j,k) = 0.0</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;          grid_qc(i,j,k) = <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;          bs(i,j,k) = <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">! DEPENDS ON: qsat_wat_mix</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      <span class="keyword">CALL </span><a class="code" href="qsat__wat__mix_8f90.xhtml#a2c76d0fec243d54bbf3512ebc16d81dc" title="Saturation Specific Humidity Scheme (Qsat_Wat): Vapour to Liquid. ">qsat_wat_mix</a>(qsl,t(1,1,k),<a class="code" href="varcld_8h.xhtml#acd7a57e90bb1e737ecae71f1c1830ad6">p_theta_levels</a>(1,1,k),             &amp;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;           (1+qdims%i_end-qdims%i_start)*(1+qdims%j_end-qdims%j_start), &amp;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;           l_mixing_ratio)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;          <span class="keywordflow">IF</span> (multrhc==1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            rhcritx = rhcrit(i,j,k)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            rhcritx = rhcrit(1,1,k)</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">! Omit CUMULUS points below (and including) NTML+1</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;          <span class="keywordflow">IF</span> ( .NOT. <a class="code" href="namespacecv__run__mod.xhtml#abdfbcfb71ab17ae16f0dee72f99813d8">l_param_conv</a> .OR. (<a class="code" href="namespacecv__run__mod.xhtml#abdfbcfb71ab17ae16f0dee72f99813d8">l_param_conv</a> .AND.                      &amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;             (.NOT. cumulus(i,j) .OR. ( cumulus(i,j)                    &amp;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;             .AND. (k  &gt;   ntml(i,j)+1) ))) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">! Rhcrit_if:</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <span class="keywordflow">IF</span> (rhcritx  &lt;   1.) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">! ! 2. Calculate the quantity QN = QC/BS = (QW/QSL-1)/(1-RHcrit)</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">!    if RHcrit is less than 1</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">!              qn(i,j) = (q(i,j,k) / qsl(i,j) - 1.) /                    &amp;</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                        (1. - rhcritx)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">! ! 3. Set logical variable for cloud, LQC, for the case RHcrit &lt; 1;</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">!    where QN &gt; -1, i.e. qW/qSAT(TL,P) &gt; RHcrit, there is cloud</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">!              lqc(i,j) = (qn(i,j)  &gt;   -1.)</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">! ! 2.a Calculate QN = QW - QSL if RHcrit equals 1</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">!              qn(i,j) = q(i,j,k) - qsl(i,j)</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">! ! 3.a Set logical variable for cloud, LQC, for the case RHcrit = 1;</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">!     where QN &gt; 0, i.e. qW &gt; qSAT(TL,P), there is cloud</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">!              lqc(i,j) = (qn(i,j)  &gt;   0.)</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keywordflow">            END IF</span> <span class="comment">! Rhcrit_if</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;          <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#abdfbcfb71ab17ae16f0dee72f99813d8">l_param_conv</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            lqc(i,j) = .false.</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keywordflow">          END IF</span>  <span class="comment">! Test on CUMULUS and NTML for A05_4A only</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">! ! 4. Form index of points where non-zero liquid cloud fraction</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">!      qc_points=0</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;      <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;          <span class="keywordflow">IF</span> (lqc(i,j)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            qc_points = qc_points + 1</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            index(qc_points,1) = i</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            index(qc_points,2) = j</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">! ! 5. Call LS_CLD_C to calculate cloud water content, specific humidity,</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">!                  water cloud fraction and determine temperature.</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">! ! Qc_points_if:</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;      <span class="keywordflow">IF</span> (qc_points  &gt;   0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">! DEPENDS ON: ls_cld_c</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="keyword">CALL </span><a class="code" href="ls__cld__c_8f90.xhtml#a5dd4dbd3dc8b89925c2887b6cc0ed299" title="Large-scale Cloud Scheme. ">ls_cld_c</a>(<a class="code" href="varcld_8h.xhtml#acd7a57e90bb1e737ecae71f1c1830ad6">p_theta_levels</a>(1,1,k),rhcrit(1,1,k),qsl,qn,       &amp;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        q(1,1,k),t(1,1,k),                                              &amp;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                    qcl(1,1,k),cfl(1,1,k),grid_qc(1,1,k),bs(1,1,k),     &amp;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        index,qc_points,rhc_row_length,rhc_rows,                        &amp;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        bl_levels,k, l_mixing_ratio)</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! Qc_points_if</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">! ! 6. Calculate cloud fractions for ice clouds.</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">!    THIS IS STILL HIGHLY EXPERIMENTAL.</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">!    Begin by calculating Qsat_wat(T,P), at Temp. T, for estimate of bs.</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">! DEPENDS ON: qsat_wat_mix</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;      <span class="keyword">CALL </span><a class="code" href="qsat__wat__mix_8f90.xhtml#a2c76d0fec243d54bbf3512ebc16d81dc" title="Saturation Specific Humidity Scheme (Qsat_Wat): Vapour to Liquid. ">qsat_wat_mix</a>(qsl,t(1,1,k),<a class="code" href="varcld_8h.xhtml#acd7a57e90bb1e737ecae71f1c1830ad6">p_theta_levels</a>(1,1,k),             &amp;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;           (1+qdims%i_end-qdims%i_start)*(1+qdims%j_end-qdims%j_start), &amp;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;           l_mixing_ratio)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;      rootwo = sqrt(2.)</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a88d75b5271296497a47a74b001bdf5ac" title="======================================================================= Constants, removed from RUN_CLOUD namelist ">ice_fraction_method</a>  ==  2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">! Use cloud top temperature and a fixed qsat to give QCFRBS</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">! DEPENDS ON: qsat_wat_mix</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        <span class="keyword">CALL </span><a class="code" href="qsat__wat__mix_8f90.xhtml#a2c76d0fec243d54bbf3512ebc16d81dc" title="Saturation Specific Humidity Scheme (Qsat_Wat): Vapour to Liquid. ">qsat_wat_mix</a>(qsl_ctt,ctt(1,1,k),<a class="code" href="varcld_8h.xhtml#acd7a57e90bb1e737ecae71f1c1830ad6">p_theta_levels</a>(1,1,k),     &amp;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;           (1+qdims%i_end-qdims%i_start)*(1+qdims%j_end-qdims%j_start), &amp;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;           l_mixing_ratio)</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacevectlib__mod.xhtml#ae619493e9e4d10fb153e38fc3413a371">powr_v</a>(                                                    &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;           (1+qdims%i_end-qdims%i_start)*(1+qdims%j_end-qdims%j_start), &amp;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;           qsl_ctt,<a class="code" href="namespacecloud__inputs__mod.xhtml#af4e22384917fd8da0da525cc2f559edc">ctt_weight</a>,qsl_ctt )</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacevectlib__mod.xhtml#ae619493e9e4d10fb153e38fc3413a371">powr_v</a>(                                                    &amp;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;           (1+qdims%i_end-qdims%i_start)*(1+qdims%j_end-qdims%j_start), &amp;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;           qsl,<a class="code" href="namespacecloud__inputs__mod.xhtml#a5f9008aded3ca06863c199bacef45d67">t_weight</a>,qsl )</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        subgrid = <a class="code" href="namespacecloud__inputs__mod.xhtml#aabe62c8e9ec63108388e4ab2d9349ef4">sub_cld</a> ** (1.0-<a class="code" href="namespacecloud__inputs__mod.xhtml#a5f9008aded3ca06863c199bacef45d67">t_weight</a>)                             &amp;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                  / <a class="code" href="namespacecloud__inputs__mod.xhtml#a7c5f47958ef55415d9377b4a7c79f32a">qsat_fixed</a> ** (1.0-<a class="code" href="namespacecloud__inputs__mod.xhtml#a5f9008aded3ca06863c199bacef45d67">t_weight</a>-<a class="code" href="namespacecloud__inputs__mod.xhtml#af4e22384917fd8da0da525cc2f559edc">ctt_weight</a>)</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! ice_fraction_method eq 2</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;      <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;          <span class="keywordflow">IF</span> ( multrhc== 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            rhcritx = rhcrit(i,j,k)</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            rhcritx = rhcrit(1,1,k)</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">! ! 6a Calculate qCF/bs.</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">! ! Rhcrit_if2:</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;          <span class="keywordflow">IF</span> (rhcritx  &lt;   1.) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a88d75b5271296497a47a74b001bdf5ac" title="======================================================================= Constants, removed from RUN_CLOUD namelist ">ice_fraction_method</a>  ==  1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;              qcfrbs(i,j)=  qcf(i,j,k) / ((1.-rhcritx) * qsl(i,j))</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a88d75b5271296497a47a74b001bdf5ac" title="======================================================================= Constants, removed from RUN_CLOUD namelist ">ice_fraction_method</a>  ==  2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;              qcfrbs(i,j) = subgrid * qcf(i,j,k) / ((1.-rhcritx)        &amp;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                       * qsl_ctt(i,j)*qsl(i,j))</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">! No ice cloud fraction method defined</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="keywordflow">            END IF</span> <span class="comment">! ice_fraction_method</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">! ! 6b Calculate frozen cloud fraction from frozen cloud water content.</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">!             IF (qcfrbs(i,j)  &lt;=  0.) THEN</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;              cff(i,j,k) = 0.0</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (0.0&lt;qcfrbs(i,j) .AND. (6.0*qcfrbs(i,j)) &lt;= 1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;              cff(i,j,k) = 0.5 * ((6. * qcfrbs(i,j))**(2./3.))</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (1.0&lt;(6.*qcfrbs(i,j)) .AND. qcfrbs(i,j) &lt; 1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;              phiqcf = acos(rootwo * 0.75 * (1. - qcfrbs(i,j)))</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;              cosqcf = cos((phiqcf + (4. * pi)) / 3.)</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;              cff(i,j,k) = 1. - (4. * cosqcf * cosqcf)</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (qcfrbs(i,j)  &gt;=  1.) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;              cff(i,j,k) = 1.</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a836cd13b0b65284b74383c21d6a26e5f" title="=========================================================================== LOGICAL options set from ...">l_eacf</a>) <span class="keywordflow">THEN</span>  <span class="comment">! Empirically adjusted cloud fraction</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            <span class="comment">! Back out QN</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;              <span class="keywordflow">IF</span> (0.0&lt; qcfrbs(i,j) .AND. (6.0*qcfrbs(i,j)) &lt;=  1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                qn_imp=sqrt(2.*cff(i,j,k))-1.</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;              <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (1.0&lt;(6.0*qcfrbs(i,j)) .AND. qcfrbs(i,j)&lt;1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                qn_imp=1.-sqrt((1.-cff(i,j,k))*2.)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                qn_imp = 1.</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            <span class="comment">! Modify QN with EACF relationship</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;              <span class="keywordflow">IF</span> (k &gt;  bl_levels) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                qn_adj=(qn_imp+0.0955)/(1.-0.0955)</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                qn_adj=(qn_imp+0.184)/(1.-0.184)</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            <span class="comment">! Recalculate ice cloud fraction with modified QN</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;              <span class="keywordflow">IF</span> (qcfrbs(i,j)  &lt;=  0.) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                cff(i,j,k) = 0.0</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;              <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (qn_adj  &lt;=  0.) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                cff(i,j,k) = 0.5 * (1. + qn_adj) * (1. + qn_adj)</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;              <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (qn_adj  &lt;   1.) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                cff(i,j,k) = 1. - 0.5 * (1.-qn_adj) * (1.-qn_adj)</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                cff(i,j,k) = 1.</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="keywordflow">            END IF</span>  <span class="comment">! L_eacf</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;          <span class="keywordflow">ELSE</span> <span class="comment">! RHcrit = 1, set cloud fraction to 1 or 0</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;            <span class="keywordflow">IF</span> (qcf(i,j,k)  &gt;   0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;              cff(i,j,k) = 1.0</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;              cff(i,j,k) = 0.0</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">! ! 6c Calculate combined cloud fraction.</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment">!      IF (cloud_fraction_method  ==  1) THEN</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">!             Use minimum overlap condition</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            cf(i,j,k) = min(cfl(i,j,k)+cff(i,j,k), 1.0)</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (cloud_fraction_method  ==  2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;          <span class="comment">!Hand-unrolled loop</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, (1+qdims%j_end-qdims%j_start) -           &amp;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                  mod((1+qdims%j_end-qdims%j_start),2), 2</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment">! Calculate possible overlaps between ice and liquid in THIS layer</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            overlap_max=min(cfl(i,j,k),cff(i,j,k))</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            overlap_min=max(cfl(i,j,k)+cff(i,j,k)-1.0,0.0)</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            overlap_random=cfl(i,j,k)*cff(i,j,k)</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">! Now use the specified degree of overlap to calculate the total</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">! cloud fraction (= cfice + cfliq - overlap)</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            temp0=overlap_random</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            temp1=0.5*(overlap_max-overlap_min)</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            temp2=0.5*(overlap_max+overlap_min)-overlap_random</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            cf(i,j,k)=cfl(i,j,k)+cff(i,j,k)                             &amp;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                    -(temp0+temp1*<a class="code" href="namespacecloud__inputs__mod.xhtml#aba8af87c668be2522de8b898ff879e3b">overlap_ice_liquid</a>                    &amp;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                    +temp2*<a class="code" href="namespacecloud__inputs__mod.xhtml#aba8af87c668be2522de8b898ff879e3b">overlap_ice_liquid</a>*<a class="code" href="namespacecloud__inputs__mod.xhtml#aba8af87c668be2522de8b898ff879e3b">overlap_ice_liquid</a>)</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">! Check that the overlap wasnt negative</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;            cf(i,j,k)=min(cf(i,j,k),cfl(i,j,k)+cff(i,j,k))</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">! Calculate possible overlaps between ice and liquid in THIS layer</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;            overlap_max=min(cfl(i,j+1,k),cff(i,j+1,k))</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            overlap_min=max(cfl(i,j+1,k)+cff(i,j+1,k)-1.0,0.0)</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            overlap_random=cfl(i,j+1,k)*cff(i,j+1,k)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="comment">! Now use the specified degree of overlap to calculate the total</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment">! cloud fraction (= cfice + cfliq - overlap)</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;            temp0=overlap_random</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;            temp1=0.5*(overlap_max-overlap_min)</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;            temp2=0.5*(overlap_max+overlap_min)-overlap_random</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            cf(i,j+1,k)=cfl(i,j+1,k)+cff(i,j+1,k)                       &amp;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                    -(temp0+temp1*<a class="code" href="namespacecloud__inputs__mod.xhtml#aba8af87c668be2522de8b898ff879e3b">overlap_ice_liquid</a>                    &amp;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                    +temp2*<a class="code" href="namespacecloud__inputs__mod.xhtml#aba8af87c668be2522de8b898ff879e3b">overlap_ice_liquid</a>*<a class="code" href="namespacecloud__inputs__mod.xhtml#aba8af87c668be2522de8b898ff879e3b">overlap_ice_liquid</a>)</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="comment">! Check that the overlap wasnt negative</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            cf(i,j+1,k)=min(cf(i,j+1,k),cfl(i,j+1,k)+cff(i,j+1,k))</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;          <span class="comment">!Post-conditioning</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        <span class="keywordflow">IF</span> (mod((1+qdims%j_end-qdims%j_start),2) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="comment">! Calculate possible overlaps between ice and liquid in THIS layer</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            overlap_max=min( cfl(i,(1+qdims%j_end-qdims%j_start),k),    &amp;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                             cff(i,(1+qdims%j_end-qdims%j_start),k) )</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            overlap_min=max( cfl(i,(1+qdims%j_end-qdims%j_start),k) +   &amp;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                             cff(i,(1+qdims%j_end-qdims%j_start),k)-1.0,&amp;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                             0.0 )</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            overlap_random=  cfl(i,(1+qdims%j_end-qdims%j_start),k) *   &amp;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                             cff(i,(1+qdims%j_end-qdims%j_start),k)</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment">! Now use the specified degree of overlap to calculate the total</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment">! cloud fraction (= cfice + cfliq - overlap)</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            temp0=overlap_random</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            temp1=0.5*(overlap_max-overlap_min)</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            temp2=0.5*(overlap_max+overlap_min)-overlap_random</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            cf(i,(1+qdims%j_end-qdims%j_start),k)=                      &amp;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;              cfl(i,(1+qdims%j_end-qdims%j_start),k) +                  &amp;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;              cff(i,(1+qdims%j_end-qdims%j_start),k) -                  &amp;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;              (temp0+temp1*<a class="code" href="namespacecloud__inputs__mod.xhtml#aba8af87c668be2522de8b898ff879e3b">overlap_ice_liquid</a> +                         &amp;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;              temp2*<a class="code" href="namespacecloud__inputs__mod.xhtml#aba8af87c668be2522de8b898ff879e3b">overlap_ice_liquid</a>*<a class="code" href="namespacecloud__inputs__mod.xhtml#aba8af87c668be2522de8b898ff879e3b">overlap_ice_liquid</a>)</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment">! Check that the overlap wasnt negative</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            cf(i,(1+qdims%j_end-qdims%j_start),k)=                      &amp;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;              min(cf(i,(1+qdims%j_end-qdims%j_start),k),                &amp;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                 cfl(i,(1+qdims%j_end-qdims%j_start),k) +               &amp;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                 cff(i,(1+qdims%j_end-qdims%j_start),k))</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">!Post-conditioning</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="comment">! CFF + CFL &gt;= 1 implies CF = 1.</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="comment">! Deal with this case separately to avoid roundoff issues:</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;          <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            <span class="keywordflow">IF</span> (cfl(i,j,k)+cff(i,j,k) &gt;= 1.0) cf(i,j,k) = 1.0</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment">! No total cloud fraction method defined</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! cloud_fraction_method</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">! Levels_do</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="comment">!$OMP END PARALLEL</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;9999 <span class="keywordflow">CONTINUE</span> <span class="comment">! Error exit</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LS_CLD&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="ls__cld_8f90.xhtml#a2244f8b9237d1f3076b62c25fff15580" title="Large-scale Cloud Scheme. ">ls_cld</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
