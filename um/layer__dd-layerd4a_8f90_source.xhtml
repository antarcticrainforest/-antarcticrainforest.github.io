<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/layer_dd-layerd4a.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">layer_dd-layerd4a.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="layer__dd-layerd4a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="layer__dd-layerd4a_8f90.xhtml#afeb7bca72d17946e9bbf69f65f4de64c" title="Calculates layer dependent constants for layer k, downdraught code. ">layer_dd_4a5a</a>(npnts,k,kct,the_k,the_km1,flx_strt,           &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;                    p_layer_centres,                              &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;                    p_layer_boundaries,                           &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;                    exner_layer_centres,                          &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                    exner_km12,                                   &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                    exner_kp12,exner_km32,pstar,pk,pkm1,delpk,    &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                    delpkm1,exk,exkm1,amdetk,ekm14,ekm34,kmin,    &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                    bddi, recip_pstar )</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="layer__dd-layerd4a_8f90.xhtml#afeb7bca72d17946e9bbf69f65f4de64c">   13</a></span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__run__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_run_mod</a><span class="keywordtype">, ONLY</span>:                                             &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#a5f4be5897ea147beb1bdb5023683a863">dd_opt</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__param__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_param_mod</a><span class="keywordtype">, ONLY</span>:                                             &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    ae2, <a class="code" href="namespacecv__param__mod.xhtml#a64c6394038fe8729e1be74521338572c">ddcoef1</a>, <a class="code" href="namespacecv__param__mod.xhtml#a3fe37e6a0fbc89ac164582ec268da3fa">ddcoef2</a>, <a class="code" href="namespacecv__param__mod.xhtml#a23d39b9456eafb4576d091ce759cedcd">det_lyr</a></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: tm</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  npnts                &amp; <span class="comment">! Number of points</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; ,k                    &amp; <span class="comment">! present model layer</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; ,kct                    <span class="comment">! convective cloud top layer      </span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::  &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  bddi(npnts)             <span class="comment">! Mask for points where downdraught may initiate</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                      &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  p_layer_centres(npnts,0:kct+2)         &amp; <span class="comment">! Pressure (Pa)</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; ,p_layer_boundaries(npnts,0:kct+1)      &amp; <span class="comment">! Pressure at half level above</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                           <span class="comment">! p_layer_centres (Pa)</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; ,exner_layer_centres(npnts,0:kct+1)       <span class="comment">! exner pressure</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::  &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  pstar(npnts)       &amp; <span class="comment">! Surface pressure (Pa)</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; ,exner_km12(npnts)  &amp; <span class="comment">! Exner function at layer k-1/2</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; ,exner_kp12(npnts)  &amp; <span class="comment">! Exner function at layer k+1/2</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; ,exner_km32(npnts)  &amp; <span class="comment">! Exner function at layer k-3/2</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; ,flx_strt(npnts)    &amp; <span class="comment">! Updraught mas flux at level where downdraught starts</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                       <span class="comment">!  (Pa/s)</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; ,the_k(npnts)       &amp; <span class="comment">! Pontential temperature of environment                       ! in layer k (K)</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; ,the_km1(npnts)     &amp; <span class="comment">! Pontential temperature of environment                       ! in layer k-1 (K)</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; ,recip_pstar(npnts)   <span class="comment">! 1/pstar (Pa)</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">INTEGER</span> , <span class="keywordtype">INTENT(OUT)</span> :: &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  kmin(npnts)              <span class="comment">! freezing level</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::   &amp;   pk(npnts)            &amp; <span class="comment">! Pressure of layer k (Pa)</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; ,delpkm1(npnts)       &amp; <span class="comment">! Pressure difference across layer k-1 (Pa)</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; ,amdetk(npnts)        &amp; <span class="comment">! Mixing detrainment at level k multiplied by                         ! appropriate layer thickness</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; ,ekm14(npnts)         &amp; <span class="comment">! exner ratio at layer k-1/4</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; ,ekm34(npnts)         &amp; <span class="comment">! exner ratio at layer k-3/4</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; ,exkm1(npnts)           <span class="comment">! Exner ratio at for layer k-1</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::   &amp;     pkm1(npnts)          &amp; <span class="comment">! Pressure of layer k-1 (Pa)</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;   ,delpk(npnts)         &amp; <span class="comment">! Pressure difference across layer k   (Pa)</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;   ,exk(npnts)             <span class="comment">! Exner ratio at for layer k</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  -<span class="comment">! Local variables</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">INTEGER</span> ::        &amp;  i                 <span class="comment">! loop counter</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">REAL</span>  ::     &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  ttk        &amp; <span class="comment">! Temperature store at layer k</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; ,ttkm1      &amp; <span class="comment">! Temperature store at layer k-1</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; ,thkm12     &amp; <span class="comment">! Potential temperature store at layer k-1/2</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; ,ttkm12     &amp; <span class="comment">! Temperature store at layer k-1/2</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; ,incr_fac   &amp; <span class="comment">! Increment factor for entrainment rates at freezing level</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; ,pu         &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; ,pl         &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; ,ddcoef2a     <span class="comment">! coefficient used in calculation of downdraught</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;               <span class="comment">! entrainment rates</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;-</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LAYER_DD_4A5A&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;-<span class="comment">! Set kmin to initial value</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">!  values for previous pass through routine at (k-1)+1 are taken.</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;-</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordflow">IF</span> (k == kct+1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    kmin(i) = kct+2</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    pk(i) = p_layer_centres(i,k)</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    delpk(i) =  -(p_layer_boundaries(i,k) - p_layer_boundaries(i,k-1))</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    exk(i) = exner_layer_centres(i,k)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    pk(i) = pkm1(i)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    delpk(i) = delpkm1(i)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    exk(i) = exkm1(i)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">!  Calculate PKM1, DELPKM1</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">!  Calculate EXNER functions at mid-layer k and k-1, and</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">!  difference of exner function across layer k</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  pkm1(i) = p_layer_centres(i,k-1)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  delpkm1(i) =  -(p_layer_boundaries(i,k-1)                       &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                - p_layer_boundaries(i,k-2))</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  exkm1(i) = exner_layer_centres(i,k-1)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">! Set DDCOEF2A depending upon which revision of the DD code is used.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a5f4be5897ea147beb1bdb5023683a863">dd_opt</a> == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  ddcoef2a=2.0</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  ddcoef2a=<a class="code" href="namespacecv__param__mod.xhtml#a3fe37e6a0fbc89ac164582ec268da3fa">ddcoef2</a></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">!  Calculate freezing level : Check if freezing level in this layer</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordflow">IF</span> (kmin(i) == kct+2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    ttk = the_k(i)*exk(i)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    ttkm1 = the_km1(i)*exkm1(i)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    thkm12 = (the_km1(i)+the_k(i))*0.5</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    ttkm12 = thkm12*exner_km12(i)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">IF</span> (ttkm12  &gt;=  tm .AND. ttk  &lt;   tm) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      kmin(i) = k</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (ttkm1  &gt;=  tm .AND. ttkm12  &lt;   tm) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      kmin(i) = k-1</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">!  Calculate entrainment coefficients multiplied by</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">!  appropriate layer thickness</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">!  Calculate mixing detrainment coefficient multiplied by</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">!  appropriate layer thickness</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">!  UM DOCUMENTATION PAPER 27</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">!  Section (2C), Equation(14)</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keywordflow">IF</span> (pk(i) &lt;  pstar(i)-<a class="code" href="namespacecv__param__mod.xhtml#a23d39b9456eafb4576d091ce759cedcd">det_lyr</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    ekm14(i) = ae2 * (p_layer_boundaries(i,k-1)-pk(i)) * recip_pstar(i)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    ekm34(i) = ae2 * (pkm1(i)-p_layer_boundaries(i,k-1)) * recip_pstar(i)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    amdetk(i) = (ekm14(i)+ekm34(i)) * (1.0-1.0/ae2)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    ekm14(i) = 0.0</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    ekm34(i) = 0.0</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    amdetk(i) = delpk(i) /(pstar(i)- p_layer_boundaries(i,k))</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keywordflow">IF</span> (bddi(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordflow">IF</span> (k == kmin(i) .AND. pk(i) &lt;  pstar(i)-<a class="code" href="namespacecv__param__mod.xhtml#a23d39b9456eafb4576d091ce759cedcd">det_lyr</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      incr_fac = flx_strt(i)*<a class="code" href="namespacecv__param__mod.xhtml#a64c6394038fe8729e1be74521338572c">ddcoef1</a>*recip_pstar(i)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="keywordflow">IF</span> (incr_fac &gt;  6.0) incr_fac=6.0</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      ekm14(i) = ekm14(i)*incr_fac</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      ekm34(i) = ekm34(i)*incr_fac</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      ekm14(i) = ekm14(i)*ddcoef2a</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      ekm34(i) = ekm34(i)*ddcoef2a</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      <span class="keywordflow">IF</span> ((<a class="code" href="namespacecv__run__mod.xhtml#a5f4be5897ea147beb1bdb5023683a863">dd_opt</a> == 1) .OR. (kmin(i) /= kct+2 .AND. k &lt;  kmin(i)            &amp;               .AND. pk(i) &lt; pstar(i)-<a class="code" href="namespacecv__param__mod.xhtml#a23d39b9456eafb4576d091ce759cedcd">det_lyr</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        amdetk(i) = amdetk(i)*ddcoef2a</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordflow">  END IF</span>     <span class="comment">! bddi</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordflow">END DO</span>       <span class="comment">! i</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LAYER_DD_4A5A&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="layer__dd-layerd4a_8f90.xhtml#afeb7bca72d17946e9bbf69f65f4de64c" title="Calculates layer dependent constants for layer k, downdraught code. ">layer_dd_4a5a</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
