<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/gravity_wave_drag/gw_setup.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_bd6e9da100754755f60bb7a1c27ae704.xhtml">gravity_wave_drag</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">gw_setup.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="gw__setup_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="gw__setup_8f90.xhtml#ae05401be6e31b69b1f4b1055c2bd7b91" title="subroutine gw_setup to set up variables for gravity wave and!&gt; flow blocking schemes ...">gw_setup</a>(levels,points,u,v,rho,theta,                 &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;                    nsq,ulow,vlow,rholow,nlow,psilow,psi1,modu,  &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;                    rho_levels,theta_levels,                     &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;                    sd_orog,grad_xx,grad_xy,grad_yy,mt_high,     &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                    slope,anis,banis,canis,mtdir,ktop,l_drag,    &amp;!diagnostics</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                    u_s_d,u_s_d_on,points_u_s_d,                 &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                    v_s_d,v_s_d_on,points_v_s_d,                 &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                    nsq_s_d,nsq_s_d_on,points_nsq_s_d)</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="gw__setup_8f90.xhtml#ae05401be6e31b69b1f4b1055c2bd7b91">   13</a></span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacec__gwave__mod.xhtml" title="This file belongs in section: Gravity Wave Drag This file belongs in section: Gravity Wave Drag...">c_gwave_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacec__gwave__mod.xhtml#a4cfbc458c56292cadb48e61cc3a827bb" title="versions of the orographic gravity wave drag scheme. These are tuneable parameters but are unlikely t...">nsigma</a>, <a class="code" href="namespacec__gwave__mod.xhtml#ad30ad32eea70ba4a860b471c32fb6128" title="4A scheme only ">amplitude_saturation</a>, <a class="code" href="namespacec__gwave__mod.xhtml#ad1df043a2e214bcbf1604b392eb1c217">stress_saturation</a>,  &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                         <a class="code" href="namespacec__gwave__mod.xhtml#ada9cf3399e73ecd963abf51cb4387e27" title="5A scheme only ">beta_fix</a>, frac_wl, lambdaz_min, lambdaz_max,      &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                         <a class="code" href="namespacec__gwave__mod.xhtml#a77973449c01c4117d79cc5d8a8b0bcac">nsq_neutral</a>, <a class="code" href="namespacec__gwave__mod.xhtml#abea9ed94eb2cac855129f225b0074f91">zav_converge</a>, <a class="code" href="namespacec__gwave__mod.xhtml#af789db5bedb316015c4578585da21b90">zav_iterate</a></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceum__types.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">um_types</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceum__types.xhtml#a9470dbfbe40a87f88b6cde47783187d1">real32</a></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span>     <span class="comment">! Description:</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;-<span class="comment">! Intent(in) variables</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;--       <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;<span class="comment">!block for intent(in)</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    levels,              &amp;<span class="comment">!num of vertical levels    points                !num of land points</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::  &amp;<span class="comment">!intent(in)</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    points_nsq_s_d,       &amp;                                                points_u_s_d,         &amp;                                                   points_v_s_d        </div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::           &amp;<span class="comment">!block for intent(in)</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    u(points,levels),           &amp;<span class="comment">!zonal wind</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    v(points,levels),           &amp;<span class="comment">!meridional wind</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    rho(points,levels),         &amp;<span class="comment">!density</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    theta(points,levels),       &amp;<span class="comment">!potential temperature</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    theta_levels(points,levels),&amp;<span class="comment">!height(theta_levels)</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    rho_levels(points,levels),  &amp;<span class="comment">!height (rho_levels)</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    sd_orog(points),            &amp;<span class="comment">!standard deviation of orography (m)</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    grad_xx(points),            &amp;<span class="comment">!dh/dx squared gradient orography</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    grad_xy(points),            &amp;<span class="comment">!(dh/dx)(dh/dy) gradient orography</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    grad_yy(points)              <span class="comment">!dh/dy squared gradient orography</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::  &amp;<span class="comment">!intent(in)</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    u_s_d_on,             &amp;                                                     v_s_d_on,             &amp;                                                      nsq_s_d_on                                           -<span class="comment">! Intent(out) variables</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;--        <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> ::  &amp;<span class="comment">!block for intent(out)</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;     ktop(points)            <span class="comment">!First model level above mountain top</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;   <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::  &amp;<span class="comment">!block for intent(out)</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;     mt_high(points),    &amp;<span class="comment">!sso height (n_sigma*sd_orog)</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;     slope(points),      &amp;<span class="comment">!sso params - slope</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;     anis(points),       &amp;<span class="comment">!sso params - anisotropy</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;     mtdir(points),      &amp;<span class="comment">!sso params - angle of major axis     banis(points),      &amp;!const (function of anisotropy)</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;     canis(points),      &amp;<span class="comment">!const (function of anisotropy)</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;     nsq(points,levels), &amp;<span class="comment">!brunt-vaisala freq squared</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;     ulow(points),       &amp;<span class="comment">!u averaged from z=0.5mt_high to z=mt_high      vlow(points),       &amp;!v averaged from z=0.5mt_high to z=mt_high</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;     modu(points),       &amp;<span class="comment">!modulus of horizontal wind (i.e. sqrt(u^2+v^2)</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;     nlow(points),       &amp;<span class="comment">!N bulk averaged from z=0.5mt_high to z=mt_high</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;     psilow(points),     &amp;<span class="comment">!psi averaged from z=0.5mt_high to z=mt_high</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;     rholow(points),     &amp;<span class="comment">!rho averaged from z=0.5mt_high to z=mt_high</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;     psi1(points)         <span class="comment">!atan(vlow/ulow)</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>  ::         &amp;<span class="comment">!intent(out) diags    u_s_d(points_u_s_d),        &amp;!0.5mt_high-mt_high av u (ulow) diag</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    v_s_d(points_v_s_d),        &amp;<span class="comment">!0.5mt_high-mt_high av v (vlow) diag</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    nsq_s_d(points_nsq_s_d)      <span class="comment">!0.5mt_high-mt_high av n (nlow) diag</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(OUT)</span>  ::  &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;     l_drag(points)          <span class="comment">!whether point has a non-zero stress or not</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;--        <span class="keywordtype">INTEGER</span> :: i,k</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;   <span class="keywordtype">INTEGER</span> :: kbot(points)</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;   <span class="keywordtype">REAL</span>    :: smallp <span class="comment">!Small positive number</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;   <span class="keywordtype">REAL(KIND=real32)</span>  :: real4  <span class="comment">!dummy variable real*4</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;   <span class="keywordtype">REAL</span>    :: lmk,lml,lmm,&amp;<span class="comment">!Used to calculate the sso params</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;              plm,mlm      <span class="comment">!Used to calculate the sso params</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;   <span class="keywordtype">REAL</span>    ::       &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        dzt,&amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        dzb,&amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        dzu</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;   <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;   <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;   <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;   smallp = epsilon(real4) / 100.0</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;   <span class="keywordflow">DO</span> k = 1, levels</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;     <span class="keywordflow">DO</span> i =1, points</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        nsq(i,k)=0.0</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordflow">     END DO</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordflow">   END DO</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;   <span class="keywordflow">IF</span> (u_s_d_on) <span class="keywordflow">THEN</span>     <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;       u_s_d(i)   = 0.0</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordflow">     END DO</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordflow">   END IF</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;   <span class="keywordflow">IF</span> (v_s_d_on) <span class="keywordflow">THEN</span>     <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;       v_s_d(i)   = 0.0</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordflow">     END DO</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keywordflow">   END IF</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;   <span class="keywordflow">IF</span> (nsq_s_d_on) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;     <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;       nsq_s_d(i) = 0.0</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keywordflow">     END DO</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keywordflow">   END IF</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;   <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;     ulow(i)    = 0.0</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;     vlow(i)    = 0.0</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;     rholow(i)  = 0.0     psilow(i)  = 0.0</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;     psi1(i)    = 0.0</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;     nlow(i)    = 0.0</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;     anis(i)    = 1.0</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;     banis(i)   = 0.0</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;     canis(i)   = 0.0</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;     slope(i)   = 0.0</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;     mtdir(i)   = 0.0</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;     ktop(i)    = 2</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;     kbot(i)    = 1</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;     mt_high(i) = <a class="code" href="namespacec__gwave__mod.xhtml#a4cfbc458c56292cadb48e61cc3a827bb" title="versions of the orographic gravity wave drag scheme. These are tuneable parameters but are unlikely t...">nsigma</a>*sd_orog(i)     l_drag(i)  = .true.</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">!u(i,1)=0 implies at north/south pole in global model</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;     <span class="keywordflow">IF</span> ((mt_high(i) &lt;= 0.) .OR. (u(i,1) == 0.)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;       l_drag(i) = .false.<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordflow">   END DO</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">! !  calculate sso parameters and constants</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">!    DO i=1,points</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;     <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span>       lmk          = 0.5*(grad_xx(i)+grad_yy(i))</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;       lml          = 0.5*(grad_xx(i)-grad_yy(i))</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;       lmm          = grad_xy(i)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">!Denominator of equation (1) in technical documentation</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;       plm          = lmk + sqrt(lml**2+lmm**2)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!Numerator of equation (1) in technical documentation</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;       mlm          = abs(lmk - sqrt(lml**2+lmm**2))</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">!Note do not take ATAN(slope) as slope is always used as TAN(slope)!in scheme (i.e. keep slope as non-dim number rather than convert!to angle</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">!Equation (3) in technical documentation</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;       slope(i)     = sqrt(plm)</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;       <span class="keywordflow">IF</span> ((slope(i) == 0.) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;         l_drag(i) = .false.<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;       <span class="keywordflow">IF</span> ((abs(lmm) &lt;= smallp) .AND. (abs(lml) &lt;= smallp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;         mtdir(i) = 0.0</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;       <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">!Use ATAN2 to give correct range, as need mtdir to be in range![-pi/2,pi/2] (using ATAN would give range [-pi/4,pi/4]</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">!Equation (2) in technical documentation</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;         mtdir(i) = 0.5*atan2(lmm,lml)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;             <span class="keywordflow">IF</span> (plm &lt;= smallp) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;         anis(i) = 1.0</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;       else<span class="comment">!Equation (1) in technical documentation</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;         anis(i) = sqrt(mlm/plm)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;       banis(i)    = 1-0.18*anis(i) - 0.04*anis(i)**2</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;       canis(i)    =   0.48*anis(i) + 0.3 *anis(i)**2</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordflow">     END IF</span> <span class="comment">!(l_drag(i)).</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordflow">   END DO</span> <span class="comment">! i=1 ,points </span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;     <span class="keywordflow">DO</span> k = 2, levels-1</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;       <span class="keywordflow">DO</span> i = 1, points         <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span>           nsq(i,k) = 2.*g*  ( theta(i,k) - theta(i,k-1) )                 &amp;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                          /( ( theta(i,k) + theta(i,k-1) )                 &amp;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                            *( theta_levels(i,k) - theta_levels(i,k-1) ) )</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keyword">         END </span>if<span class="comment">!(l_drag(i)).</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keywordflow">       END DO</span> <span class="comment">!i = 1, points     END DO !k= 2, levels-1</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;     <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">!Set nsq(1)=nsq(2) as nsq is undefined on level 1</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;       nsq(i,1)       = nsq(i,2)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">!Set nsq(levels)=nsq(levels-1) as nsq is undefined on top level</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;       nsq(i,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>)  = nsq(i,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>-1)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keywordflow">     END DO</span> <span class="comment">!i = 1, points</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;     <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>       <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;         <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span>           <span class="keywordflow">IF</span> (theta_levels(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &lt;= 0.5*mt_high(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;             kbot(i) = <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordflow">           END IF</span>            <span class="keywordflow">IF</span> (theta_levels(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &lt; mt_high(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;             ktop(i) = <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordflow">           END IF</span><span class="keywordflow">           END IF</span> <span class="comment">!(l_drag(i)).</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordflow">       END DO</span> <span class="comment">!i = 1, points</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordflow">     END DO</span> <span class="comment">!k = 1,levels         DO k = 2, levels-1</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;       <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;         <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span>           <span class="keywordflow">IF</span> ((<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> &gt; kbot(i)) .AND. (<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> &lt;= ktop(i))) <span class="keywordflow">THEN</span>             dzt = theta_levels(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)   -  0.5 * mt_high(i)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;             dzb = theta_levels(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)   -  theta_levels(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;             <span class="keywordflow">IF</span> (<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>  ==  kbot(i)+1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;               dzu = 0</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;               dzb = dzt</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;             <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;               dzu = theta_levels(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1) - 0.5 * mt_high(i)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keywordflow">             END IF</span> <span class="comment">! (k == bot(i)+1)</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;             <span class="keywordflow">IF</span> (<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> == ktop(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;               <span class="keywordflow">IF</span> (<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>  ==  kbot(i)+1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                 dzb = dzt</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;               <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                 dzt = mt_high(i) -  0.5 * mt_high(i)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                 dzb = mt_high(i) -  theta_levels(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>-1)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keywordflow">               END IF</span> <span class="comment">!(k  ==  kbot(i)+1)</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keywordflow">             END IF</span> <span class="comment">! (k == ktop(i))</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">! average u,v and rho from z = 0.5h to current level</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;             ulow(i)  = (ulow(i)   * dzu  + u(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  *dzb)/dzt</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;             vlow(i)  = (vlow(i)   * dzu  + v(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  *dzb)/dzt</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;             rholow(i)= (rholow(i) * dzu  + rho(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)*dzb)/dzt</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">! bulk average N from z = 0.5mt_high tO z = mt_high</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;             nlow(i)  = (nlow(i)   * dzu  + nsq(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)*dzb)/dzt</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordflow">           END IF</span> <span class="comment">! (k &gt; kbot(i) .AND k &lt;= ktop(i))</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordflow">         END IF</span> <span class="comment">!(l_drag(i))</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordflow">       END DO</span> <span class="comment">!i = 1, points</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordflow">     END DO</span>  <span class="comment">! k = 2, levels-1</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;     <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;       <span class="keywordflow">IF</span> (l_drag(i)) <span class="keywordflow">THEN</span>         modu(i)    = sqrt(ulow(i)**2 + vlow(i)**2)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;         psi1(i)    = atan2(vlow(i),ulow(i))</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;         psilow(i)  = mtdir(i) - psi1(i)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;         <span class="keywordflow">IF</span> (nlow(i) &gt; 0.) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;           nlow(i) = sqrt(nlow(i))</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;         <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;           nlow(i)   = 0.0</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;           l_drag(i) = .false.<span class="keywordflow">          END IF</span> <span class="comment">!(nlow(i) &gt; 0.)</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keywordflow">       END IF</span> <span class="comment">!(l_drag(i)).</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keywordflow">     END DO</span> <span class="comment">!i=1,points</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">! 4 diagnostics</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;   <span class="keywordflow">IF</span> ( u_s_d_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;     <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;       u_s_d(i) = ulow(i)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordflow">     END DO</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keywordflow">   END IF</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;   <span class="keywordflow">IF</span> ( v_s_d_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;     <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;       v_s_d(i) = vlow(i)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keywordflow">     END DO</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keywordflow">   END IF</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;   <span class="keywordflow">IF</span> ( nsq_s_d_on ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;     <span class="keywordflow">DO</span> i=1,points</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;       nsq_s_d(i) = nlow(i)</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordflow">     END DO</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keywordflow">   END IF</span> </div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;   <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;GW_SETUP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="gw__setup_8f90.xhtml#ae05401be6e31b69b1f4b1055c2bd7b91" title="subroutine gw_setup to set up variables for gravity wave and!&gt; flow blocking schemes ...">gw_setup</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
