<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/fluxproc/read_lsms.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_def911949590700bb7220b937e069fda.xhtml">fluxproc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">read_lsms.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="read__lsms_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;-<span class="comment">! deck: RDLSMS</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;-<span class="comment">!</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">      subroutine </span><a class="code" href="read__lsms_8f90.xhtml#adb662539b53540078ee72b2bc3b33a4d" title="Programming standard: Unified Model Documentation Paper No 3. ">read_lsms</a>(                                             &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;#include &quot;afields.h&quot;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="read__lsms_8f90.xhtml#adb662539b53540078ee72b2bc3b33a4d">   18</a></span>&#160;     &amp;           icode)</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecmess__mod.xhtml" title="This file belongs in section: Small Execs This file belongs in section: Small Execs. ">cmess_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecmess__mod.xhtml#a0f5058f8826769d0ed08b5259f1adbce" title="Purpose: declares and stores values used for warning, error and standard log messages. ">outunitdbg</a>, <a class="code" href="namespacecmess__mod.xhtml#a0167fac1e752d47aff56c68d7e60bc91">unwarn</a>, <a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>, <a class="code" href="namespacecmess__mod.xhtml#aac6fe5554102835f716d1bec91316850">unstd</a>, <a class="code" href="namespacecmess__mod.xhtml#a59e4fa4ffb3e3016f9b5f98322872dce" title="parameters for start of message ">cwarn</a>,     &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                           <a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>, <a class="code" href="namespacecmess__mod.xhtml#a2414f6cb1356a3fa3821454aea8f35e4">cstd</a>, <a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceplookups__mod.xhtml" title="This file belongs in section: AC assimilation This file belongs in section: AC assimilation. ">plookups_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceplookups__mod.xhtml#a1f53e00cc1a708c48c61a3236b8aedbc" title="Purpose: declares parameters used to declare lookup tables, Int_Head and Real_Head. *CALLed by CLOOKUPS. ">len_fixhd</a>, <a class="code" href="namespaceplookups__mod.xhtml#a5815bb9924907adb4567cff16bc96276">len1_lookup</a>, <a class="code" href="namespaceplookups__mod.xhtml#a147d0e031fc514b1c5843fb0e5fc0f05">len_inthd</a>,        &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                             <a class="code" href="namespaceplookups__mod.xhtml#aac86258a012896143abb45a6d25e23b7">len_realhd</a>, <a class="code" href="namespaceplookups__mod.xhtml#aa81ccc183e9bf18bb146713bb1e17ed3">itgrid</a>, <a class="code" href="namespaceplookups__mod.xhtml#aed28bb8d20b10ad4baea5797558d00c6">iugrid</a>,                &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                             <a class="code" href="namespaceplookups__mod.xhtml#a1901872786b344887d16ca55439dd25f" title="values used to construct the max. number of lookup tables ">max_num_fc_times</a>, <a class="code" href="namespaceplookups__mod.xhtml#ae34c35151fd2d6423b01fe6578a9c245">max_num_clim_times</a>,      &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                             <a class="code" href="namespaceplookups__mod.xhtml#a22f26380203155850a700ca6e13003b2">max_num_in_flux</a>, <a class="code" href="namespaceplookups__mod.xhtml#a1aeb7eceb0318262502a411b5bb71d24">len2_lookuppreferred</a>,     &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                             <a class="code" href="namespaceplookups__mod.xhtml#aa76496c826957c763daeb8e0bdc10727">len2_lookupprevious</a>, <a class="code" href="namespaceplookups__mod.xhtml#afdbdbeff0a32b53a11f5104fbba0f209">len2_lookupclimate</a></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecoast__aj__mod.xhtml" title="SUBROUTINE COAST_AJ-!&gt; SUBROUTINE COAST_AJ-!&gt; ">coast_aj_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecoast__aj__mod.xhtml#aa34f6fb0c6d8a2986b54a823ca20f58c">coast_aj</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceeqtoll__mod.xhtml" title="Subroutine EQTOLL!&gt; Subroutine EQTOLL!&gt; Purpose: Calculates latitude and longitude on standard grid f...">eqtoll_mod</a><span class="keywordtype">,   ONLY</span>: <a class="code" href="namespaceeqtoll__mod.xhtml#aa7e9a170440dd6cdf13b810ef4e407dd">eqtoll</a></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceh__int__co__mod.xhtml" title="SUBROUTINE H_INT_CO!&gt; SUBROUTINE H_INT_CO!&gt; Purpose: Calculates bi-linear horizontal interpolation co...">h_int_co_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceh__int__co__mod.xhtml#a202c0d37507b205533cda630b03f3e02">h_int_co</a></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacelltoeq__mod.xhtml" title="Subroutine LLTOEQ!&gt; Subroutine LLTOEQ!&gt; Purpose: Calculates latitude and longitude on equatorial lati...">lltoeq_mod</a><span class="keywordtype">,   ONLY</span>: <a class="code" href="namespacelltoeq__mod.xhtml#a3c9637ba83181ca868444be33867cdaa">lltoeq</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacew__coeff__mod.xhtml" title="Subroutine W_COEFF Subroutine W_COEFF. ">w_coeff_mod</a><span class="keywordtype">,  ONLY</span>: <a class="code" href="namespacew__coeff__mod.xhtml#a136b5a27ce2a0c71171743cf053a164d">w_coeff</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;cfields.h&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordtype">integer</span> icode  <span class="comment">! IN/OUT error code ; &gt; 0 =&gt; fatal error detected</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;cunitnos.h&quot;</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;clookups.h&quot;</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;       <span class="keywordtype">real</span> phi_full(ncolso*nrowsto)      <span class="comment">! { allocated with largest</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;       <span class="keywordtype">real</span> lambda_full(ncolso*nrowsto)   <span class="comment">! { row dimension</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;       <span class="keywordtype">real</span> lambda_eqA(<a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>*<a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a>) <span class="comment">! Longitude on atmos  ==  grid</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;       <span class="keywordtype">real</span> phi_eqA(<a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>*<a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a>)    <span class="comment">! Latitude on atmos  ==  grid</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;       <span class="keywordtype">real</span> lambda_tmp1(<a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>*<a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a>) <span class="comment">! Long. on reg. lat-long grid</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;       <span class="keywordtype">real</span> phi_tmp1(<a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>*<a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a>)    <span class="comment">! Latitude on reg. lat-long grid</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;       <span class="keywordtype">real</span> lambda_tmp2(<a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>*<a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a>) <span class="comment">! Longitude on ocean eq. grid</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;       <span class="keywordtype">real</span> phi_tmp2(<a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>*<a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a>)    <span class="comment">! Latitude on ocean eq. grid</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;       <span class="keywordtype">real</span> phi_eq(ncolso*nrowsto)      <span class="comment">! {</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;       <span class="keywordtype">real</span> lambda_eq(ncolso*nrowsto)   <span class="comment">! { allocated with largest</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;       <span class="keywordtype">real</span> phi_ll(ncolso*nrowsto)      <span class="comment">! { row dimension</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;       <span class="keywordtype">real</span> lambda_ll(ncolso*nrowsto)   <span class="comment">! {</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;       <span class="keywordtype">integer</span> index_targ(ncolso*nrowsto)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;       <span class="keywordtype">integer</span> index_srce(<a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>*<a class="code" href="aflddima_8h.xhtml#a89315556dd69f3a6a0dbf2ec39ad07a1">nrowst</a>)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;       <span class="keywordtype">integer</span> coastal_points</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;       <span class="keywordtype">integer</span> index_land_unres(ncolso*nrowsto)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;       <span class="keywordtype">logical</span> mask    <span class="comment">! T =&gt; land sea mask is provided</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;       <span class="keywordtype">integer</span> i       <span class="comment">! loop index for columns</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;       <span class="keywordtype">integer</span> j       <span class="comment">! loop index for rows</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;       <span class="keywordtype">integer</span> ij      <span class="comment">! loop index for points in 2D field</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;       <span class="keywordtype">integer</span> n_pts_unres_land   <span class="comment">! number of unresolved land points</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;-</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a> = <span class="stringliteral">&#39;read_lsms&#39;</span>  <span class="comment">! subroutine name for error messages</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;-<span class="comment">! 1. Read land / sea masks</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;-</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      <span class="keyword">call </span><a class="code" href="read__lsm__anc_8f90.xhtml#a0648e40353efa562dd323202cc34a5d4" title="Programming standard: Unified Model Documentation Paper No 3. ">read_lsm_anc</a>(unitnwplsmt, <a class="code" href="namespaceplookups__mod.xhtml#a1f53e00cc1a708c48c61a3236b8aedbc" title="Purpose: declares parameters used to declare lookup tables, Int_Head and Real_Head. *CALLed by CLOOKUPS. ">len_fixhd</a>, <a class="code" href="namespaceplookups__mod.xhtml#a5815bb9924907adb4567cff16bc96276">len1_lookup</a>, fixhdlsmt, &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;     &amp;       lookuplsmt, <a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>, <a class="code" href="aflddima_8h.xhtml#a89315556dd69f3a6a0dbf2ec39ad07a1">nrowst</a>, lsmt, <a class="code" href="acoords_8h.xhtml#a52ccaac956b3b2d54d3723ddf201d2c4">lambda_t</a>, <a class="code" href="acoords_8h.xhtml#a888128576dbcca720fb6024cbb47071f">phi_t</a>,          &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;     &amp;       icode)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keywordflow">if</span> (icode  &gt;   0)<span class="keywordflow">then</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                        &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;     &amp;       <span class="stringliteral">&#39; step 1.1 failed reading NWP tracer land / sea mask&#39;</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">!     mask and calculate grid coordinates</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">! DEPENDS ON: set_lsmu</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keyword">call </span><a class="code" href="set__lsmu_8f90.xhtml#a48811a26bf1dd049869e24b26b48e8ae" title="Programming standard: Unified Model Documentation Paper No 3. ">set_lsmu</a> (  <a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>, <a class="code" href="aflddima_8h.xhtml#a89315556dd69f3a6a0dbf2ec39ad07a1">nrowst</a>, <a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a>, lcyclic,                 &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;     &amp;                 <a class="code" href="acoords_8h.xhtml#a52ccaac956b3b2d54d3723ddf201d2c4">lambda_t</a>, <a class="code" href="acoords_8h.xhtml#a888128576dbcca720fb6024cbb47071f">phi_t</a>, lsmt, ilandpt,                  &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;     &amp;                 <a class="code" href="alsms_8h.xhtml#a83b46e1208938575fd02ca30c0c31c00">lsmu</a>, <a class="code" href="acoords_8h.xhtml#a79b30275bcc7e8cca42cce5f2f76aea9">lambda_u</a>, <a class="code" href="acoords_8h.xhtml#a54f0c5c23f93a14601b052b885a12ec3">phi_u</a> )</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! 1.3 read ocean tracer land / sea mask and calculate</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">!    grid coordinates</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">! DEPENDS ON: read_lsm_anc</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="keyword">call </span><a class="code" href="read__lsm__anc_8f90.xhtml#a0648e40353efa562dd323202cc34a5d4" title="Programming standard: Unified Model Documentation Paper No 3. ">read_lsm_anc</a>(unitfoamlsmt, <a class="code" href="namespaceplookups__mod.xhtml#a1f53e00cc1a708c48c61a3236b8aedbc" title="Purpose: declares parameters used to declare lookup tables, Int_Head and Real_Head. *CALLed by CLOOKUPS. ">len_fixhd</a>, <a class="code" href="namespaceplookups__mod.xhtml#a5815bb9924907adb4567cff16bc96276">len1_lookup</a>,           &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;     &amp;       fixhdlsmto, lookuplsmto, ncolso, nrowsto, lsmto,           &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;     &amp;       lambda_to, phi_to,                                         &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;     &amp;       icode)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">! check icode</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <span class="keywordflow">if</span> (icode  &gt;   0)<span class="keywordflow">then</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                        &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;     &amp;       <span class="stringliteral">&#39; step 1.3 failed reading ocean tracer land / sea mask&#39;</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        icode = icode + 2000</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">! 1.4 read ocean velocity land / sea mask and calculate</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">!    grid coordinates</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">! DEPENDS ON: read_lsm_anc</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keyword">call </span><a class="code" href="read__lsm__anc_8f90.xhtml#a0648e40353efa562dd323202cc34a5d4" title="Programming standard: Unified Model Documentation Paper No 3. ">read_lsm_anc</a>(unitfoamlsmu, <a class="code" href="namespaceplookups__mod.xhtml#a1f53e00cc1a708c48c61a3236b8aedbc" title="Purpose: declares parameters used to declare lookup tables, Int_Head and Real_Head. *CALLed by CLOOKUPS. ">len_fixhd</a>, <a class="code" href="namespaceplookups__mod.xhtml#a5815bb9924907adb4567cff16bc96276">len1_lookup</a>,           &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;     &amp;       fixhdlsmuo, lookuplsmuo, ncolso, nrowsuo, lsmuo,           &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;     &amp;       lambda_uo, phi_uo,                                         &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;     &amp;       icode)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">! check icode</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <span class="keywordflow">if</span> (icode  &gt;   0)<span class="keywordflow">then</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                        &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;     &amp;       <span class="stringliteral">&#39; step 1.4 failed reading ocean velocity land / sea mask&#39;</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        icode = icode + 2000</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;-<span class="comment">! 2. Find if the atmosphere grid is rotated</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">! 2.1 Get the position of the poles from the</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!     atmosphere lsm header</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">! DEPENDS ON: copy_to_real</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      <span class="keyword">call </span><a class="code" href="copy__to__real_8f90.xhtml#af72b814ac8f58588360653c571efd9c9" title="Programming standard: Unified Model Documentation Paper No 3. ">copy_to_real</a> ( lookuplsmt(<a class="code" href="namespacelookup__addresses.xhtml#a37b86bf363f51de106121c055f5d0da8">bplat</a>), <a class="code" href="arotgrd_8h.xhtml#a4e0f84e927c152ae29eada0b27b71901">pole_lat</a> )</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">! DEPENDS ON: copy_to_real</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keyword">call </span><a class="code" href="copy__to__real_8f90.xhtml#af72b814ac8f58588360653c571efd9c9" title="Programming standard: Unified Model Documentation Paper No 3. ">copy_to_real</a> ( lookuplsmt(<a class="code" href="namespacelookup__addresses.xhtml#a7c6007db4af6802ac568477e9a110ab6">bplon</a>), <a class="code" href="arotgrd_8h.xhtml#aef64ff66970438c947e1a2c958029ebb">pole_lon</a> )</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">! 2.2 Find if a rotated grid is being used</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      rotg=.true.</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <span class="keywordflow">if</span> ( <a class="code" href="arotgrd_8h.xhtml#a4e0f84e927c152ae29eada0b27b71901">pole_lat</a>  &gt;   89.99 .and. <a class="code" href="arotgrd_8h.xhtml#a4e0f84e927c152ae29eada0b27b71901">pole_lat</a>  &lt;   90.01) <span class="keywordflow">then</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        rotg=.false.</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="arotgrd_8h.xhtml#a4e0f84e927c152ae29eada0b27b71901">pole_lat</a>  &lt;   -1.0e5) <span class="keywordflow">then</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        rotg=.false.</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">! 2.3 Do error checking on the positions of the poles</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordflow">if</span> (rotg) <span class="keywordflow">then</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="arotgrd_8h.xhtml#a4e0f84e927c152ae29eada0b27b71901">pole_lat</a>  &gt;   90.0 .or. <a class="code" href="arotgrd_8h.xhtml#a4e0f84e927c152ae29eada0b27b71901">pole_lat</a>  &lt;   -90.0 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;          <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                      &amp;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;     &amp;       <span class="stringliteral">&#39; step 2.3 incorrect latitude of pole in atmos lsm header&#39;</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;          icode = icode + 2000</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;          <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="arotgrd_8h.xhtml#aef64ff66970438c947e1a2c958029ebb">pole_lon</a>  &gt;   360.0 .or. <a class="code" href="arotgrd_8h.xhtml#aef64ff66970438c947e1a2c958029ebb">pole_lon</a>  &lt;   -360.0 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;          <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                      &amp;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;     &amp;       <span class="stringliteral">&#39; step 2.3 incorrect longitude of pole in atmos lsm header&#39;</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;          icode = icode + 2000</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;          <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">! 2.4 Write out details of the type of grid</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <span class="keywordflow">if</span> (rotg) <span class="keywordflow">then</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#aac6fe5554102835f716d1bec91316850">unstd</a>,*)<a class="code" href="namespacecmess__mod.xhtml#a2414f6cb1356a3fa3821454aea8f35e4">cstd</a>//<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>//<span class="stringliteral">&#39;Atmosphere on a rotated grid;&#39;</span>,      &amp;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;     &amp;    <span class="stringliteral">&#39; BPLAT = &#39;</span>, <a class="code" href="arotgrd_8h.xhtml#a4e0f84e927c152ae29eada0b27b71901">pole_lat</a>, <span class="stringliteral">&#39;; BPLON = &#39;</span>, <a class="code" href="arotgrd_8h.xhtml#aef64ff66970438c947e1a2c958029ebb">pole_lon</a></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#aac6fe5554102835f716d1bec91316850">unstd</a>,*)<a class="code" href="namespacecmess__mod.xhtml#a2414f6cb1356a3fa3821454aea8f35e4">cstd</a>//<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>//<span class="stringliteral">&#39;Atmosphere on a non-rotated grid&#39;</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;-<span class="comment">! 3. Find if the ocean grid is rotated</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">! 3.1 Get the position of the poles from the</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">!     ocean tracer grid lsm header</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">! DEPENDS ON: copy_to_real</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <span class="keyword">call </span><a class="code" href="copy__to__real_8f90.xhtml#af72b814ac8f58588360653c571efd9c9" title="Programming standard: Unified Model Documentation Paper No 3. ">copy_to_real</a> ( lookuplsmto(<a class="code" href="namespacelookup__addresses.xhtml#a37b86bf363f51de106121c055f5d0da8">bplat</a>), poleo_lat )</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">! DEPENDS ON: copy_to_real</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      <span class="keyword">call </span><a class="code" href="copy__to__real_8f90.xhtml#af72b814ac8f58588360653c571efd9c9" title="Programming standard: Unified Model Documentation Paper No 3. ">copy_to_real</a> ( lookuplsmto(<a class="code" href="namespacelookup__addresses.xhtml#a7c6007db4af6802ac568477e9a110ab6">bplon</a>), poleo_lon )</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">! 3.2 Find if a rotated grid is being used</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      rotgo=.true.</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      <span class="keywordflow">if</span> ( poleo_lat  &gt;   89.99 .and. poleo_lat  &lt;   90.01) <span class="keywordflow">then</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        rotgo=.false.</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;      <span class="keywordflow">if</span> (poleo_lat  &lt;   -1.0e5) <span class="keywordflow">then</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        rotgo=.false.</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">! 3.3 Do error checking on the positions of the poles</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      <span class="keywordflow">if</span> (rotgo) <span class="keywordflow">then</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keywordflow">if</span> ( poleo_lat  &gt;   90.0 .or. poleo_lat  &lt;   -90.0 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;          <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                      &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;     &amp;       <span class="stringliteral">&#39; step 3.3 incorrect latitude of pole in ocean lsm header&#39;</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;          icode = icode + 2000</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">if</span> ( poleo_lon  &gt;   360.0 .or. poleo_lon  &lt;   -360.0 ) <span class="keywordflow">then</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;          <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                      &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;     &amp;       <span class="stringliteral">&#39; step 3.3 incorrect longitude of pole in ocean lsm header&#39;</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;          icode = icode + 2000</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;          <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keywordflow">        end if</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">! 3.4 Write out details of the type of grid</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      <span class="keywordflow">if</span> (rotgo) <span class="keywordflow">then</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#aac6fe5554102835f716d1bec91316850">unstd</a>,*)<a class="code" href="namespacecmess__mod.xhtml#a2414f6cb1356a3fa3821454aea8f35e4">cstd</a>//<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>//<span class="stringliteral">&#39;Ocean on a rotated grid;&#39;</span>,           &amp;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;     &amp;    <span class="stringliteral">&#39; BPLAT = &#39;</span>, poleo_lat, <span class="stringliteral">&#39;; BPLON = &#39;</span>, poleo_lon</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#aac6fe5554102835f716d1bec91316850">unstd</a>,*)<a class="code" href="namespacecmess__mod.xhtml#a2414f6cb1356a3fa3821454aea8f35e4">cstd</a>//<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>//<span class="stringliteral">&#39;Ocean on a non-rotated grid&#39;</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;-<span class="comment">! 4. Calculate interpolation coefficients for interpolation</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">!    from atmosphere to ocean tracer grids</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;-</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">! 4.1 prepare target grid coordinates required</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">!     by h_int_co for tracer grid</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      <span class="keywordflow">do</span> j = 1, nrowsto</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">do</span> i = 1, ncolso</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;          ij = i + (j-1) * ncolso</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;          phi_eq( ij ) = phi_to( j )</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;          lambda_eq( ij ) =  lambda_to( i )</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keywordflow">       end do</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordflow">      end do</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">! 4.2 If the ocean uses a rotated grid, convert the ocean lat-long</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">!     vector to a standard lat-long grid</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      <span class="keywordflow">if</span> (rotgo) <span class="keywordflow">then</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="keyword">call </span><a class="code" href="namespaceeqtoll__mod.xhtml#aa7e9a170440dd6cdf13b810ef4e407dd">eqtoll</a>(phi_eq, lambda_eq, phi_ll, lambda_ll,               &amp;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;     &amp;                      poleo_lat, poleo_lon, ncolso*nrowsto)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keywordflow">do</span> i = 1, ncolso*nrowsto</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;          phi_ll( i ) = phi_eq( i )</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;          lambda_ll( i ) =  lambda_eq( i )</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keywordflow">        end do</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">! 4.3 If the atmosphere uses a rotated grid, convert the ocean standard</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">!     lat-long to the atmosphere rotated grid</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      <span class="keywordflow">if</span> (rotg) <span class="keywordflow">then</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="keyword">call </span><a class="code" href="namespacelltoeq__mod.xhtml#a3c9637ba83181ca868444be33867cdaa">lltoeq</a>(phi_ll, lambda_ll, phi_full, lambda_full,           &amp;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;     &amp;                      <a class="code" href="arotgrd_8h.xhtml#a4e0f84e927c152ae29eada0b27b71901">pole_lat</a>, <a class="code" href="arotgrd_8h.xhtml#aef64ff66970438c947e1a2c958029ebb">pole_lon</a>, ncolso*nrowsto)</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keywordflow">do</span> i = 1, ncolso*nrowsto</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;          phi_full( i ) = phi_ll( i )</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;          lambda_full( i ) =  lambda_ll( i )</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keywordflow">        end do</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">! 4.4 Convert target longitude to correct range</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;      <span class="keywordflow">do</span> i = 1, ncolso*nrowsto</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        lambda_full(i)=mod(lambda_full(i)-<a class="code" href="acoords_8h.xhtml#a52ccaac956b3b2d54d3723ddf201d2c4">lambda_t</a>(1)+720.,360.)        &amp;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;     &amp;                         +<a class="code" href="acoords_8h.xhtml#a52ccaac956b3b2d54d3723ddf201d2c4">lambda_t</a>(1)</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">      end do</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">! 4.5 Calculate interpolation coefficients for tracer grids</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;      <span class="keyword">call </span><a class="code" href="namespaceh__int__co__mod.xhtml#a202c0d37507b205533cda630b03f3e02">h_int_co</a>(index_bl_t,<a class="code" href="ainterp_8h.xhtml#aafbd2ba9d3c67fc4df09fcf052036108">index_br_t</a>,                              &amp;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;     &amp; <a class="code" href="ainterp_8h.xhtml#ab66864ca7fc5cff19dc4ba850282bf84">weight_tr_t</a>,<a class="code" href="ainterp_8h.xhtml#a7e2417a664d528aaaedbaba4ad760551">weight_br_t</a>,<a class="code" href="ainterp_8h.xhtml#a682121a17f767f0fc1609af542c3b517">weight_tl_t</a>,<a class="code" href="ainterp_8h.xhtml#a313d2021a5dceb460eac1f0761c6898c">weight_bl_t</a>,                 &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;     &amp; <a class="code" href="acoords_8h.xhtml#a52ccaac956b3b2d54d3723ddf201d2c4">lambda_t</a>, <a class="code" href="acoords_8h.xhtml#a888128576dbcca720fb6024cbb47071f">phi_t</a>, lambda_full, phi_full,                          &amp;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;     &amp; <a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>,<a class="code" href="aflddima_8h.xhtml#a89315556dd69f3a6a0dbf2ec39ad07a1">nrowst</a>,ncolso*nrowsto,lcyclic)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;-<span class="comment">! 5. Calculate interpolation coefficients for interpolation</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">!    from atmosphere to ocean velocity grids. Atmosphere velocity</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">!    components must be defined at coincident points.</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;-</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">! 5.1 prepare target grid coordinates required</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">!     by h_int_co for velocity grid</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;      <span class="keywordflow">do</span> j = 1, nrowsuo</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keywordflow">do</span> i = 1, ncolso</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;          ij = i + (j-1) * ncolso</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;          phi_eq( ij ) = phi_uo( j )</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;          lambda_eq(ij ) =  lambda_uo( i )</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordflow">       end do</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="keywordflow">      end do</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">! 5.2 If the ocean uses a rotated grid, convert the ocean lat-long</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">!     vector to a standard lat-long grid</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;      <span class="keywordflow">if</span> (rotgo) <span class="keywordflow">then</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keyword">call </span><a class="code" href="namespaceeqtoll__mod.xhtml#aa7e9a170440dd6cdf13b810ef4e407dd">eqtoll</a>(phi_eq, lambda_eq, phi_ll, lambda_ll,               &amp;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;     &amp;                      poleo_lat, poleo_lon, ncolso*nrowsuo)</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="keywordflow">do</span> i = 1, ncolso*nrowsuo</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;          phi_ll( i ) = phi_eq( i )</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;          lambda_ll( i ) =  lambda_eq( i )</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keywordflow">        end do</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">! 5.3 If the atmosphere uses a rotated grid, convert the ocean standard</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">!     lat-long to the atmosphere rotated grid</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;      <span class="keywordflow">if</span> (rotg) <span class="keywordflow">then</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <span class="keyword">call </span><a class="code" href="namespacelltoeq__mod.xhtml#a3c9637ba83181ca868444be33867cdaa">lltoeq</a>(phi_ll, lambda_ll, phi_full, lambda_full,           &amp;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;     &amp;                      <a class="code" href="arotgrd_8h.xhtml#a4e0f84e927c152ae29eada0b27b71901">pole_lat</a>, <a class="code" href="arotgrd_8h.xhtml#aef64ff66970438c947e1a2c958029ebb">pole_lon</a>, ncolso*nrowsuo)</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keywordflow">do</span> i = 1, ncolso*nrowsuo</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;          phi_full( i ) = phi_ll( i )</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;          lambda_full( i ) =  lambda_ll( i )</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keywordflow">        end do</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">! 5.4 Convert target longitude to correct range</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;      <span class="keywordflow">do</span> i = 1, ncolso*nrowsuo</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        lambda_full(i)=mod(lambda_full(i)-<a class="code" href="acoords_8h.xhtml#a79b30275bcc7e8cca42cce5f2f76aea9">lambda_u</a>(1)+720.,360.)        &amp;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;     &amp;                         +<a class="code" href="acoords_8h.xhtml#a79b30275bcc7e8cca42cce5f2f76aea9">lambda_u</a>(1)</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="keywordflow">      end do</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">! 5.5 Calculate interpolation coefficients for velocity grids</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;      <span class="keyword">call </span><a class="code" href="namespaceh__int__co__mod.xhtml#a202c0d37507b205533cda630b03f3e02">h_int_co</a>(<a class="code" href="ainterp_8h.xhtml#a8e4e519adbd8c7ddf108967133f40de5">index_bl_u</a>,<a class="code" href="ainterp_8h.xhtml#aa180d318d8d70473932d9e01907f3300">index_br_u</a>,                              &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;     &amp; <a class="code" href="ainterp_8h.xhtml#ae8c8a932d99e077564f35c96f448a15c">weight_tr_u</a>,<a class="code" href="ainterp_8h.xhtml#a805e6d2fd8584b389f884d9dde56d3d6">weight_br_u</a>,<a class="code" href="ainterp_8h.xhtml#a98ced2a381e12f70bd4b0e988d50273d">weight_tl_u</a>,<a class="code" href="ainterp_8h.xhtml#a4e61e8935d587141148d315166cb74ee">weight_bl_u</a>,                 &amp;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;     &amp; <a class="code" href="acoords_8h.xhtml#a79b30275bcc7e8cca42cce5f2f76aea9">lambda_u</a>, <a class="code" href="acoords_8h.xhtml#a54f0c5c23f93a14601b052b885a12ec3">phi_u</a>, lambda_full, phi_full,                          &amp;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;     &amp; <a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>,<a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a>,ncolso*nrowsuo,lcyclic)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;-<span class="comment">! 6. Calculate the coefficients for rotating wind vectors to align</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">!    with the ocean grid</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;-</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">! 6.1 Set up the coefficients for atmosphere to reg. lat-long</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;      <span class="keywordflow">do</span> j = 1, <a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <span class="keywordflow">do</span> i = 1, <a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;          ij = i + (j-1) * <a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;          phi_eqa( ij ) = <a class="code" href="acoords_8h.xhtml#a54f0c5c23f93a14601b052b885a12ec3">phi_u</a>( j )</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;          lambda_eqa( ij ) =  <a class="code" href="acoords_8h.xhtml#a79b30275bcc7e8cca42cce5f2f76aea9">lambda_u</a>( i )</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="keywordflow">       end do</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keywordflow">      end do</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;      <span class="keywordflow">if</span> (rotg) <span class="keywordflow">then</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="keyword">call </span><a class="code" href="namespaceeqtoll__mod.xhtml#aa7e9a170440dd6cdf13b810ef4e407dd">eqtoll</a>(phi_eqa, lambda_eqa, phi_tmp1, lambda_tmp1,         &amp;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;     &amp;                      <a class="code" href="arotgrd_8h.xhtml#a4e0f84e927c152ae29eada0b27b71901">pole_lat</a>, <a class="code" href="arotgrd_8h.xhtml#aef64ff66970438c947e1a2c958029ebb">pole_lon</a>, <a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>*<a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a>)</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="keyword">call </span><a class="code" href="namespacew__coeff__mod.xhtml#a136b5a27ce2a0c71171743cf053a164d">w_coeff</a>(<a class="code" href="arotgrd_8h.xhtml#a0c81f7a13f089397b4e3d3f8ce3e38c5">coef_angle1</a>, <a class="code" href="arotgrd_8h.xhtml#a3dca39ba67394ccad998dbe2597488d3">coef_angle2</a>, lambda_tmp1,             &amp;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;     &amp;             lambda_eqa, <a class="code" href="arotgrd_8h.xhtml#a4e0f84e927c152ae29eada0b27b71901">pole_lat</a>, <a class="code" href="arotgrd_8h.xhtml#aef64ff66970438c947e1a2c958029ebb">pole_lon</a>, <a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>*<a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a>)</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <span class="keywordflow">do</span> ij = 1, <a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>*<a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;          lambda_tmp1(ij)=lambda_eqa(ij)</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;          phi_tmp1(ij)=phi_eqa(ij)</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keywordflow">        enddo</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">! 6.2 Set up the coefficients for reg. lat-long to ocean</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;      <span class="keywordflow">if</span> (rotgo) <span class="keywordflow">then</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="keyword">call </span><a class="code" href="namespacelltoeq__mod.xhtml#a3c9637ba83181ca868444be33867cdaa">lltoeq</a>(phi_tmp1, lambda_tmp1, phi_tmp2, lambda_tmp2,       &amp;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;     &amp;                      poleo_lat, poleo_lon, <a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>*<a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a>)</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        <span class="keyword">call </span><a class="code" href="namespacew__coeff__mod.xhtml#a136b5a27ce2a0c71171743cf053a164d">w_coeff</a>(<a class="code" href="arotgrd_8h.xhtml#a25d45fa270f807f8c9f4bd71579947c7">coef_angle3</a>, <a class="code" href="arotgrd_8h.xhtml#abbe89a073e67bbcb84fd28cba33eb9ee">coef_angle4</a>, lambda_tmp1,             &amp;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;     &amp;             lambda_tmp2, poleo_lat, poleo_lon, <a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>*<a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a>)</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;-<span class="comment">! 7. Calculate indices for unresolved points i.e. seapoints on ocean</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">!    grid which are not surrounded by seapoints on the atmosphere grid</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;-</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">! 7.1 Calculate indices for unresolved points for tracer grids</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;      mask = .true.  <span class="comment">! land / sea mask for target grid is to be used</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;      <span class="keyword">call </span><a class="code" href="namespacecoast__aj__mod.xhtml#aa34f6fb0c6d8a2986b54a823ca20f58c">coast_aj</a> (index_bl_t,<a class="code" href="ainterp_8h.xhtml#aafbd2ba9d3c67fc4df09fcf052036108">index_br_t</a>,                             &amp;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;     &amp; <a class="code" href="ainterp_8h.xhtml#ab66864ca7fc5cff19dc4ba850282bf84">weight_tr_t</a>,<a class="code" href="ainterp_8h.xhtml#a7e2417a664d528aaaedbaba4ad760551">weight_br_t</a>,<a class="code" href="ainterp_8h.xhtml#a682121a17f767f0fc1609af542c3b517">weight_tl_t</a>,<a class="code" href="ainterp_8h.xhtml#a313d2021a5dceb460eac1f0761c6898c">weight_bl_t</a>,                 &amp;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;     &amp; <a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>,<a class="code" href="aflddima_8h.xhtml#a89315556dd69f3a6a0dbf2ec39ad07a1">nrowst</a>,ncolso*nrowsto,                                     &amp;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;     &amp; lsmt,lsmto,                                                      &amp;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;     &amp; index_targ,index_srce,coastal_points,mask,                       &amp;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;     &amp; <a class="code" href="afillin_8h.xhtml#aab661f728e9b705a0e3078a3a6826c71">index_unres_t</a>,n_pts_unres_t,                                     &amp;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;     &amp; index_land_unres,n_pts_unres_land)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">! 7.2 Calculate indices for unresolved points for velocity grids</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;      <span class="keyword">call </span><a class="code" href="namespacecoast__aj__mod.xhtml#aa34f6fb0c6d8a2986b54a823ca20f58c">coast_aj</a> (<a class="code" href="ainterp_8h.xhtml#a8e4e519adbd8c7ddf108967133f40de5">index_bl_u</a>,<a class="code" href="ainterp_8h.xhtml#aa180d318d8d70473932d9e01907f3300">index_br_u</a>,                             &amp;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;     &amp; <a class="code" href="ainterp_8h.xhtml#ae8c8a932d99e077564f35c96f448a15c">weight_tr_u</a>,<a class="code" href="ainterp_8h.xhtml#a805e6d2fd8584b389f884d9dde56d3d6">weight_br_u</a>,<a class="code" href="ainterp_8h.xhtml#a98ced2a381e12f70bd4b0e988d50273d">weight_tl_u</a>,<a class="code" href="ainterp_8h.xhtml#a4e61e8935d587141148d315166cb74ee">weight_bl_u</a>,                 &amp;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;     &amp; <a class="code" href="aflddima_8h.xhtml#a9b67803737a34a62ca32894ca567dd94">ncols</a>,<a class="code" href="aflddima_8h.xhtml#a280d1bf8836ce06c99218c76922ff33f">nrowsuv</a>,ncolso*nrowsuo,                                    &amp;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;     &amp; <a class="code" href="alsms_8h.xhtml#a83b46e1208938575fd02ca30c0c31c00">lsmu</a>,lsmuo,                                                      &amp;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;     &amp; index_targ,index_srce,coastal_points,mask,                       &amp;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;     &amp; <a class="code" href="afillin_8h.xhtml#a2827c01127191d84c2271767b69752ef">index_unres_u</a>,<a class="code" href="afillin_8h.xhtml#a7e475cc65176b8415dafda82ddfb4f68">n_pts_unres_u</a>,                                     &amp;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;     &amp; index_land_unres,n_pts_unres_land)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;-<span class="comment">! 8. Determine number of searchs needed to fill in unresolved points</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;-</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">! 8.1 on tracer grid</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">! DEPENDS ON: set_searches</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;      <span class="keyword">call </span><a class="code" href="set__searches_8f90.xhtml#a7d7995cd47ec3d6259365fd48b0c5b8d" title="Programming standard: Unified Model Documentation Paper No 3. ">set_searches</a> ( ncolso, nrowsto, lcyclico, iseapt,            &amp;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;     &amp;     lsmto, n_pts_unres_t, <a class="code" href="afillin_8h.xhtml#aab661f728e9b705a0e3078a3a6826c71">index_unres_t</a>, max_no_searches,        &amp;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;     &amp;     <a class="code" href="afillin_8h.xhtml#a9c743b57fa5f42a1885ec920759ea005">n_calls_spiral_t</a>, <a class="code" href="afillin_8h.xhtml#ac736e7c213baeee4a06ea2138956ec4d">n_pts_spiral_t</a>, icode)</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;      <span class="keywordflow">if</span> (icode  &gt;   0)<span class="keywordflow">then</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                        &amp;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;     &amp;       <span class="stringliteral">&#39; step 4.1 unable to fill in all unresolved points &#39;</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        icode = icode + 2000</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment">! 8.2 on velocity grid</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment">! DEPENDS ON: set_searches</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;      <span class="keyword">call </span><a class="code" href="set__searches_8f90.xhtml#a7d7995cd47ec3d6259365fd48b0c5b8d" title="Programming standard: Unified Model Documentation Paper No 3. ">set_searches</a> ( ncolso, nrowsuo, lcyclico, iseapt,            &amp;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;     &amp;     lsmuo, <a class="code" href="afillin_8h.xhtml#a7e475cc65176b8415dafda82ddfb4f68">n_pts_unres_u</a>, <a class="code" href="afillin_8h.xhtml#a2827c01127191d84c2271767b69752ef">index_unres_u</a>, max_no_searches,        &amp;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;     &amp;     <a class="code" href="afillin_8h.xhtml#a020a511c5f4f5427500410a9286792c9">n_calls_spiral_u</a>, <a class="code" href="afillin_8h.xhtml#abed30648aa98b89efd37bcdf3acfa3eb">n_pts_spiral_u</a>, icode)</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;      <span class="keywordflow">if</span> (icode  &gt;   0)<span class="keywordflow">then</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        <span class="keyword">write</span>(<a class="code" href="namespacecmess__mod.xhtml#a55c8ac3379e6ff4ef18a7a373e2e4a1e">unerr</a>,*)<a class="code" href="namespacecmess__mod.xhtml#aee2ebf8f9fcabde0ba5baecd860eea62">cerr</a>,<a class="code" href="namespacecmess__mod.xhtml#ac8747e133ce6438055819056c47de5f0" title="local character variable for subroutine name ">csub</a>,                                        &amp;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;     &amp;       <span class="stringliteral">&#39; step 4.2 unable to fill in all unresolved points &#39;</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        icode = icode + 2000</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <span class="keywordflow">go to</span> 9999</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keywordflow">      end if</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;9999  <span class="keywordflow">continue</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;      <span class="keywordflow">return</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="read__lsms_8f90.xhtml#adb662539b53540078ee72b2bc3b33a4d" title="Programming standard: Unified Model Documentation Paper No 3. ">read_lsms</a></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;-</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
