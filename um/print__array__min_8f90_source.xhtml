<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/dynamics_diagnostics/print_array_min.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_3666b73330ba64adb9a0af9ad7b9e0b6.xhtml">dynamics_diagnostics</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">print_array_min.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="print__array__min_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="print__array__min_8f90.xhtml#a9d73a6a1a402c433393d68a0f55d4d55" title="*****************************COPYRIGHT****************************** *****************************COP...">print_array_min</a>(                                       &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;                                 field,                                 &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                                 row_length, rows, levels,              &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                                 halo_i, halo_j,                        &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                                 start_level, end_level )</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="print__array__min_8f90.xhtml#a9d73a6a1a402c433393d68a0f55d4d55">   12</a></span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceproc__info__mod.xhtml" title="Processor parallel properties and pointers. Processor parallel properties and pointers. ">proc_info_mod</a></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;          <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;          <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;     </div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordtype">INTEGER</span> , <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        row_length,                                                     &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                       <span class="comment">! number of point on a row.</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        rows,                                                           &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                       <span class="comment">! number of rows.</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>,                                                         &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                       <span class="comment">! number of levels in field</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        start_leve,l                                                    &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                       <span class="comment">! start level for finding min</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">        end</span>_level,                                                      &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                       <span class="comment">! end level for finding min</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        halo_i,                                                         &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    <span class="comment">! Size of halo in i direction.</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        halo_j,     <span class="comment">! Size of halo in j direction.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      <span class="keywordtype">REAL</span> , <span class="keywordtype">INTENT(IN)</span> ::                                              &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;             field (1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,   &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                    levels)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        k, ki, kr,                                                      &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                  <span class="comment">! Loop counters</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        num_levels,                                                     &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        gi, gj,                                                         &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                  <span class="comment">! global pointers</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        pe,                                                             &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                  <span class="comment">! processor identifier</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        info</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        sumr(2,levels),                                                 &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                            <span class="comment">! array  for summing integers over pe&#39;s</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        min_pe(levels),                                                 &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                            <span class="comment">! min wind each level on this pe</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        min_all(levels)       <span class="comment">! array  for finding min over pe&#39;s</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        sumi(3,levels),                                                 &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                          <span class="comment">! array  for summing integers over pe&#39;s</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        i_min(levels),                                                  &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                          <span class="comment">! i pointers for prints</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        j_min(levels)       <span class="comment">! j pointers for prints</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        recip_row_length,                                               &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        recip_rows,                                                     &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        lambda,                                                         &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        phi</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keywordtype">INTEGER</span> :: min_indices(2)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">CHARACTER(LEN=8)</span>  l_string, p_string</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      parameter(l_string =<span class="stringliteral">&#39;% East&#39;</span>)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      parameter(p_string =<span class="stringliteral">&#39;% North&#39;</span>)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      recip_row_length = 1.0 / <span class="keywordtype">real</span>(global_row_length)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      recip_rows = 1.0 / <span class="keywordtype">real</span>(global_rows)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      num_levels = end_level - start_level + 1</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <span class="keywordflow">DO</span> k = 1, num_levels</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        min_indices = minloc(field(1:row_length,1:rows,k))</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        i_min(k) = min_indices(1)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        j_min(k) = min_indices(2)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        min_pe(k) = field(min_indices(1),min_indices(2),k)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        min_all(k) = min_pe(k)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">!  k = 1, num_levels</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keyword">CALL </span>gc_rmin(num_levels, n_proc, info, min_all)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      sumi = 0</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      sumr = 0.0</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      ki = 0</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      kr = 0</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <span class="keywordflow">DO</span> k = 1, num_levels</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        ki = ki + 3</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        kr = kr + 2</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">IF</span> ( min_pe(k) &lt;= min_all(k) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;          sumi(1,k) = me <span class="comment">! min is on this processor for this level</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;          gi = datastart(1) + i_min(k) - 1</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;          gj = datastart(2) + j_min(k) - 1</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;          sumi(2,k) = gi</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;          sumi(3,k) = gj</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;          sumr(1,k) = (gi-1) * recip_row_length * 100.0</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;          sumr(2,k) = (gj-1) * recip_rows * 100.0</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! min_pe(k) &lt;= min_all(k)</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">!  k = 1, num_levels</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      <span class="keyword">CALL </span>gc_isum(ki, n_proc, info, sumi)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="keyword">CALL </span>gc_rsumr(kr, n_proc, info, sumr)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;                         global position&#39;</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;print_array_min&#39;</span>)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;level   min    proc   i   ,  j &#39;</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;print_array_min&#39;</span>)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      <span class="keywordflow">DO</span>   k = 1, num_levels</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        pe = sumi(1,k)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        gi = sumi(2,k)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        gj = sumi(3,k)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        lambda = sumr(1,k)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        phi    = sumr(2,k)</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(I4, E12.4, 3I5, F6.1, A7, F6.1, A7)&#39;</span>)                 &amp;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                          k, min_all(k), pe, gi, gj,                    &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                          lambda, l_string, phi, p_string</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;print_array_min&#39;</span>)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keywordflow">      END DO</span>   <span class="comment">!  k = 1, num_levels</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;PRINT_ARRAY_MIN&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="print__array__min_8f90.xhtml#a9d73a6a1a402c433393d68a0f55d4d55" title="*****************************COPYRIGHT****************************** *****************************COP...">print_array_min</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
