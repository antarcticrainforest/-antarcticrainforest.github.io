<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/dynamics_advection/calc_index.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_cd31b8e5b091f70cb512ede7e9775b9c.xhtml">dynamics_advection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">calc_index.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="calc__index_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">      Subroutine </span><a class="code" href="calc__index_8f90.xhtml#ac7167f221933104ba2e6ac19a0b50df7" title="Subroutine Calc_Index. ">calc_index</a>(                                            &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;     &amp;                      dim_i_out, dim_j_out, dim_k_out,            &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;     &amp;                      delta_lambda_in, delta_phi_in,              &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;     &amp;                      base_lambda, base_phi,                      &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;     &amp;                      glambda_p, phi_p, grecip_dlamp, recip_dphip,&amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;     &amp;                      recip_dlam, recip_dphi, max_look,           &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;     &amp;                      look_lam, look_phi, halo_lam, halo_phi,     &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;     &amp;                      L_regular, lambda_out, phi_out,             &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;     &amp;                      halo_i, halo_j,                             &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;     &amp;                      g_row_length, row_length, rows, datastart,  &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;     &amp;                      i_out, j_out,                               &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;     &amp;                      weight_lambda, weight_phi)</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="calc__index_8f90.xhtml#ac7167f221933104ba2e6ac19a0b50df7">   18</a></span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">Implicit None</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;     &amp;  dim_i_out                                                       &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                    <span class="comment">! Dimension of Data_out in i direction.</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;     &amp;, dim_j_out                                                       &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                    <span class="comment">! Dimension of Data_out in j direction.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;     &amp;, dim_k_out                                                       &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                    <span class="comment">! Dimension of Data_out in k direction.</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;     &amp;, halo_i                                                          &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                    <span class="comment">! Size of halo in i direction.</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;     &amp;, halo_j                                                          &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                    <span class="comment">! Size of halo in j direction.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;     &amp;, <a class="code" href="namespacevar__look__mod.xhtml#ada6743fb1efd4f021e9f2177665439e4">max_look</a>                                                        &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                        <span class="comment">! max size of look-up arrays for searches</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;     &amp;, row_length                                                      &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                        <span class="comment">! row_length for dynamic arrays</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;     &amp;, rows                                                            &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                        <span class="comment">! rows for p-field dynamic arrays</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;     &amp;, g_row_length                                                    &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                        <span class="comment">! global number of points on a row</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;     &amp;, datastart(3)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                     <span class="comment">! First gridpoints held by this processor.</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      <span class="keywordtype">Logical</span>, <span class="keywordtype">Intent(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;     &amp;  L_regular      <span class="comment">! False if variable resolution</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordtype">Real</span>, <span class="keywordtype">Intent(IN)</span> ::                                               &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;     &amp;  delta_lambda_in                                                 &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                         <span class="comment">! holds spacing between points in the i</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                         <span class="comment">! direction for the input data field.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;     &amp;, delta_phi_in                                                    &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                         <span class="comment">! holds spacing between points in the j</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                         <span class="comment">! direction for the input data field.</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;     &amp;, <a class="code" href="namespacevar__look__mod.xhtml#af3a9ac9f088c383feefcaa9b52da729b">recip_dlam</a>                                                      &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;     &amp;, <a class="code" href="namespacevar__look__mod.xhtml#a9355d47023c235da9d2d021d4c0c3e46">recip_dphi</a>                                                      &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;     &amp;, base_lambda                                                     &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;     &amp;, base_phi</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;       <span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;     &amp;  halo_lam                                                        &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;     &amp;, halo_phi</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;       <span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;     &amp;  look_lam(1-halo_lam:max_look-halo_lam)                          &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;     &amp;, look_phi(1-halo_phi:max_look-halo_phi)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;       <span class="keywordtype">Real</span>, <span class="keywordtype">Intent(IN)</span> ::                                              &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;     &amp;  glambda_p(1-halo_i : g_row_length + halo_i)                     &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;     &amp;, phi_p( 1-halo_i : row_length + halo_i                           &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;     &amp;,        1-halo_j : rows + halo_j )                               &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;     &amp;, grecip_dlamp(1-halo_i : g_row_length + halo_i)                  &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;     &amp;, recip_dphip( 1-halo_i : row_length + halo_i                     &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;     &amp;,              1-halo_j : rows + halo_j )</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordtype">Real</span>, <span class="keywordtype">Intent(IN)</span> ::                                               &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;     &amp;  lambda_out (dim_i_out, dim_j_out, dim_k_out)                    &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                                      <span class="comment">! Lambda</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                                      <span class="comment">! co-ordinate of</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                                      <span class="comment">! output data on</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                                                      <span class="comment">! input.</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;     &amp;, phi_out(dim_i_out, dim_j_out, dim_k_out)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                                      <span class="comment">! Phi Co-ordinate</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                                                      <span class="comment">! of output data</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                                      <span class="comment">! on input.</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(Out)</span> ::                                           &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;     &amp;  i_out (dim_i_out, dim_j_out, dim_k_out)                         &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;     &amp;, j_out (dim_i_out, dim_j_out, dim_k_out)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keywordtype">Real</span>, <span class="keywordtype">Intent(Out)</span> ::                                              &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;     &amp;  weight_lambda (dim_i_out, dim_j_out, dim_k_out)                 &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;     &amp;, weight_phi    (dim_i_out, dim_j_out, dim_k_out)</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">! Local Variables.</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! scalars</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      <span class="keywordtype">Integer</span>                                                           &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;     &amp;  i, j, k                                                         &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                   <span class="comment">! Loop indices</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;     &amp;, dsm1y                                                           &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;     &amp;, index</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      <span class="keywordtype">Real</span>                                                              &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;     &amp;  Recip_delta_lambda_in                                           &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;     &amp;, Recip_delta_phi_in                                              &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;     &amp;, temp</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <span class="keywordtype">Real</span> :: out_p</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      <span class="keywordtype">Real</span> :: out_l</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">! Statement function for optimising floor</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">! Can only be used when the result is cast into an integer</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      <span class="keywordtype">REAL</span> :: real_temp_var</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keywordtype">REAL</span> :: my_floor</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      my_floor(real_temp_var) = real_temp_var - 0.5 + sign(0.5,real_temp_var)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">! !  Section 1.   Find i and j point indices</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">!      IF (lhook) CALL dr_hook(&#39;CALC_INDEX&#39;,zhook_in,zhook_handle)</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="keywordflow">If</span> ( l_regular ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        recip_delta_lambda_in = 1./delta_lambda_in</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        recip_delta_phi_in = 1./delta_phi_in</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        dsm1y = datastart(2)-1</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">!$OMP PARALLEL DO SCHEDULE(STATIC) DEFAULT(NONE) PRIVATE(k,j,i,         &amp;</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">!$OMP&amp; out_l,out_p) SHARED(dim_k_out,dim_j_out,dim_i_out,               &amp;</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">!$OMP&amp; lambda_out,recip_delta_lambda_in,i_out,weight_lambda,            &amp;</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">!$OMP&amp; phi_out, base_phi ,recip_delta_phi_in, dsm1y,j_out,weight_phi)        Do k = 1, dim_k_out</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;          <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a> = 1, dim_j_out</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="keywordflow">Do</span> i = 1, dim_i_out</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;              out_l = lambda_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * recip_delta_lambda_in</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;              i_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = my_floor(1.0 + out_l)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;              weight_lambda(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = out_l - ( i_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - 1.0 )</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;              out_p = (phi_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - base_phi) * recip_delta_phi_in</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;              j_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = my_floor(1.0 + out_p)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;              weight_phi(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = out_p - ( j_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - 1.0)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;              j_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = j_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - dsm1y</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keywordflow">            End Do</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keywordflow">          End Do</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">!$OMP END PARALLEL DO</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="keywordflow">Else</span>  <span class="comment">! variable resolution</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        dsm1y = datastart(2)-1</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">!$OMP PARALLEL DO SCHEDULE(STATIC) DEFAULT(NONE) PRIVATE(k,j,i,index)   &amp;</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">!$OMP&amp; SHARED(dim_k_out,dim_j_out,dim_i_out,                            &amp;</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">!$OMP&amp; lambda_out,recip_dlam,i_out,look_lam,weight_lambda,base_lambda,  &amp;</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">!$OMP&amp; glambda_p,phi_p,grecip_dlamp,weight_phi,recip_dphip,             &amp;</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">!$OMP&amp; phi_out,base_phi,recip_dphi,dsm1y,j_out,look_phi)        Do k = 1, dim_k_out</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;          <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a> = 1, dim_j_out</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="keywordflow">Do</span> i = 1, dim_i_out</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            index = 1 + my_floor(lambda_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * <a class="code" href="namespacevar__look__mod.xhtml#af3a9ac9f088c383feefcaa9b52da729b">recip_dlam</a>)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            i_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = <a class="code" href="namespacevar__look__mod.xhtml#a5b02349af0a201bc07a8f2de5ca8454b" title="Method: These are calculated in set_var_grid via setcona.!&gt; !&gt; This file belongs in section: Top Leve...">look_lam</a>(index)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="keywordflow">If</span> ( lambda_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + base_lambda                        &amp;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;     &amp;                &gt;= glambda_p(i_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)+1) )                    &amp;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;     &amp;                i_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = i_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + 1</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            weight_lambda(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = ( lambda_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + base_lambda -  &amp;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;     &amp;                                     glambda_p(i_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)) ) *  &amp;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;     &amp;                                  grecip_dlamp(i_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) )</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            index = 1 + my_floor((phi_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)-base_phi) * <a class="code" href="namespacevar__look__mod.xhtml#a9355d47023c235da9d2d021d4c0c3e46">recip_dphi</a>)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            j_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = <a class="code" href="namespacevar__look__mod.xhtml#a9e8e58cf266e641afd934012d963a771">look_phi</a>(index) - dsm1y</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">If</span> ( phi_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &gt;= phi_p(i, j_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)+1) )           &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;     &amp;                     j_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = j_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + 1</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            weight_phi(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = ( phi_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) -                      &amp;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;     &amp;                             phi_p(i, j_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)) ) *           &amp;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;     &amp;                       recip_dphip(i, j_out(i,<a class="code" href="arg__atm__fields_8h.xhtml#a00a9fc8d0f901f46d72445df9f6f4127">j</a>,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordflow">            End Do</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordflow">          End Do</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keywordflow">        End Do</span>  <span class="comment">!  k = 1, dim_k_out</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">!$OMP END PARALLEL DO</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordflow">      End If</span> <span class="comment">! L_regular</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CALC_INDEX&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="calc__index_8f90.xhtml#ac7167f221933104ba2e6ac19a0b50df7" title="Subroutine Calc_Index. ">calc_index</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
