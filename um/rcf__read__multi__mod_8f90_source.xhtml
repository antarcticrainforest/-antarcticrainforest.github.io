<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/qxreconf/rcf_read_multi_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_448e69cd1e368218ef2123538d498dc2.xhtml">qxreconf</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">rcf_read_multi_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="rcf__read__multi__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespacercf__read__multi__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacercf__read__multi__mod.xhtml" title="This file belongs in section: Reconfiguration. ">rcf_read_multi_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">  SUBROUTINE </span><a class="code" href="namespacercf__read__multi__mod.xhtml#a19d2812796d231425ed6cd8e96e19ede" title="Subroutine Rcf_Read_Multi - parallel interface to buffin. ">rcf_read_multi</a>(  NFT, D1, ISIZE, EXPAND_SIZE, LEN_IO,  &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      LOCAL_LEN, IOSTAT, LOOKUP, FIXHD12,                           &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      Stash_Record )</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="namespacercf__read__multi__mod.xhtml#a19d2812796d231425ed6cd8e96e19ede">   29</a></span>&#160;       <span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a><span class="keywordtype">, ONLY</span> :            &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        buffin,               &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <a class="code" href="namespaceio.xhtml#a031f4e4a5342a8fe5fbbd7dab85c5e6e">set_unit_bcast_flag</a>,  &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <a class="code" href="namespaceio.xhtml#a23feb5500a95fb68781f48561c43becc">clear_unit_bcast_flag</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordtype">USE </span>um_parvars<span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>,           &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        nproc,          &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        glsizep</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :          &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                    &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,                  &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>,                &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__average__polar__mod.xhtml" title="performs polar row averaging for theta fields performs polar row averaging for theta fields ...">rcf_average_polar_mod</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        rcf_average_polar</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__general__scatter__field__mod.xhtml">rcf_general_scatter_field_mod</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <a class="code" href="namespacercf__general__scatter__field__mod.xhtml#a65db0326df7d3219c3f3dffe9c6c2567" title="Subroutine Rcf_General_Scatter_Field. ">rcf_general_scatter_field</a></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__ppx__info__mod.xhtml" title="Defines the STASHmaster record Defines the STASHmaster record. ">rcf_ppx_info_mod</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <a class="code" href="structrcf__ppx__info__mod_1_1stm__record__type.xhtml" title="Define STMrecord type - to hold STASHmaster records Note that as these are in a sequence and are inte...">stm_record_type</a></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="comment">! Subroutine Arguments:</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>   :: nft        <span class="comment">! Fortain unit number</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>   :: isize      <span class="comment">! no. of words to read (glob)</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>   :: expand_size<span class="comment">! size of expanded field</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>   :: Fixhd12    <span class="comment">! 12th element of fixed header</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>   :: Lookup(64) <span class="comment">! lookup table</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span>  :: Len_IO     <span class="comment">! no. of words read in (glob)</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span>  :: Local_Len  <span class="comment">! no. of local field words</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(OUT)</span>  :: IOstat     <span class="comment">! Return Code</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(OUT)</span>  :: D1(*)      <span class="comment">! Array to read data into</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">TYPE</span>( <a class="code" href="structrcf__ppx__info__mod_1_1stm__record__type.xhtml" title="Define STMrecord type - to hold STASHmaster records Note that as these are in a sequence and are inte...">stm_record_type</a> ), <span class="keywordtype">INTENT(IN)</span> :: Stash_Record</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="comment">! Local variables</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">INTEGER</span>      :: info            <span class="comment">! GCOM return code</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordtype">INTEGER</span>      :: dimx            <span class="comment">! x dimension returned from COEX</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">INTEGER</span>      :: dimy            <span class="comment">! y dimension returned from COEX</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordtype">INTEGER</span>      :: idum            <span class="comment">! dummy for COEX</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">INTEGER</span>      :: ErrorStatus     <span class="comment">! Error code returned from COEX</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">LOGICAL</span>      :: averaged        <span class="comment">! Have polar rows been averaged?</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">REAL</span>         :: buf( expand_size ) <span class="comment">! Buffer for reading data into</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">REAL</span>         :: buf2( expand_size) <span class="comment">! Temp. buffer for unpacking.</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">CHARACTER (Len=80)</span> :: Cmessage</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span>           :: len_full_word = 64 <span class="comment">! Output word size</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                                       <span class="comment">! for COEX</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">PARAMETER</span> :: RoutineName = <span class="stringliteral">&#39;Rcf_Read_Multi&#39;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    iostat      = -1.0</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    len_io      = isize</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    local_len   = 0</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    errorstatus = 0</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="comment">! First thing to do is to read the field in to PE 0</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a031f4e4a5342a8fe5fbbd7dab85c5e6e">set_unit_bcast_flag</a>(nft) <span class="comment">! Switch off IO broadcasting</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="comment">! Check for 32-bit packed data and call the correct buffin version</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="comment">! accordingly.  This should also handle 32-bit packed lateral boundary</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="comment">! data.</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keywordflow">IF</span> (mod((lookup(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>)),10) == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="comment">! Data is packed using CRAY 32 bit method</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">IF</span> (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a1a73e7452b09315ded35e3b6ef082e6b">lbhem</a>) == 99) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;          <span class="comment">! For packed lateral boundary data ISIZE is the          ! number of 32-bit words to be read</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;          len_io = isize</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! DEPENDS ON : buffin32_f77</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;          <span class="keyword">CALL </span><a class="code" href="buffin32__f77_8f90.xhtml#aea6da9e73456e731b71767f2bb9cdeae" title="Code Owner: See Unified Model Code owners HTML page. ">buffin32_f77</a>(nft,buf,isize,len_io,iostat)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;          <span class="comment">! For other packed fields we need to read in 2*ISIZE 32 bit words</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;          <span class="comment">! using BUFFIN32</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">! DEPENDS ON : buffin32_f77</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;          <span class="keyword">CALL </span><a class="code" href="buffin32__f77_8f90.xhtml#aea6da9e73456e731b71767f2bb9cdeae" title="Code Owner: See Unified Model Code owners HTML page. ">buffin32_f77</a>(nft,buf,2*isize,len_io,iostat)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;          <span class="comment">! And then halve len_io to satisfy tests against ISIZE</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;          len_io = len_io/2</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="comment">! For non-packed data</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keyword">CALL </span>buffin(nft,buf,isize,len_io,iostat)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;           <span class="comment">! We must check to see if it is a 32 bit field on disk, and if</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="comment">! so, expand it before doing anything with it.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <span class="keywordflow">IF</span> (mod((lookup(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>)),10) == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">IF</span> (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;          <span class="comment">! For special case of lateral boundary data, the length</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;          <span class="comment">! is given by ISIZE.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;          <span class="keywordflow">IF</span> (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a1a73e7452b09315ded35e3b6ef082e6b">lbhem</a>) == 99) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">! DEPENDS ON: expand32b</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keyword">CALL </span><a class="code" href="expand32b_8f90.xhtml#a4aed0593daf78b34069982f040043a6f" title="SUBROUTINE EXPAND32B-!&gt; Purpose: Expands from 32 to 64 bit for dump reading routines. ">expand32b</a>( isize , buf, fixhd12 )</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">! DEPENDS ON: expand32b</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keyword">CALL </span><a class="code" href="expand32b_8f90.xhtml#a4aed0593daf78b34069982f040043a6f" title="SUBROUTINE EXPAND32B-!&gt; Purpose: Expands from 32 to 64 bit for dump reading routines. ">expand32b</a>( lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>) , buf, fixhd12 )</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;          iostat=100</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="comment">! What about WGDOS packing?</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (mod((lookup(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>)),10) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="comment">! temporary copy</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        buf2(:) = buf(:)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">! DEPENDS ON: coex</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keyword">CALL </span><a class="code" href="coex_8f90.xhtml#a10c39971fd4f9c6cb48ce993c34b53ee" title="SUBROUTINE COEX. ">coex</a>( buf, expand_size, buf2, isize, dimx, dimy,  &amp;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            idum, idum, .false., rmdi, len_full_word,   &amp;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            errorstatus, cmessage )</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">IF</span> ( errorstatus /= 0 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="comment">! Lets do a polar row check/averaging (on p-grids) for read data only</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="keywordflow">IF</span> (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a1a73e7452b09315ded35e3b6ef082e6b">lbhem</a>) == 0 .AND. lookup(<a class="code" href="namespacelookup__addresses.xhtml#afbf7195b85d47a8f92d0769c84f846a4">lbegin</a>) == 1 .AND.  &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;          stash_record % grid_type &lt;= 3 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keyword">CALL </span>rcf_average_polar( buf, glsizep(2), glsizep(1), .true., averaged)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="comment">!  Print a warning if we&#39;ve done averaging</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">IF</span> (averaged .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Field had had polar rows averaged in Rcf_Read_Multi&#39;</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_read_multi_mod&#39;</span>)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordflow">    END IF</span>  <span class="comment">! (mype == 0)</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a23feb5500a95fb68781f48561c43becc">clear_unit_bcast_flag</a>(nft)<span class="comment">! Restore broadcast behaviour</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="comment">! Now we can distribute it out to the other processes</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacercf__general__scatter__field__mod.xhtml#a65db0326df7d3219c3f3dffe9c6c2567" title="Subroutine Rcf_General_Scatter_Field. ">rcf_general_scatter_field</a>( d1, buf, &amp;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        local_len, lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>), stash_record, 0 )</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keyword">  END SUBROUTINE </span><a class="code" href="namespacercf__read__multi__mod.xhtml#a19d2812796d231425ed6cd8e96e19ede" title="Subroutine Rcf_Read_Multi - parallel interface to buffin. ">rcf_read_multi</a></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacercf__read__multi__mod.xhtml" title="This file belongs in section: Reconfiguration. ">rcf_read_multi_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
