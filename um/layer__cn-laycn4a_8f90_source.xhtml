<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/layer_cn-laycn4a.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">layer_cn-laycn4a.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="layer__cn-laycn4a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="layer__cn-laycn4a_8f90.xhtml#a65f4fe8bd496a46d6c787e8a33780649" title="SUBROUTINE layer_cn_4a. ">layer_cn_4a</a>(K,NP_FIELD,NPNTS,NLEV,                        &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                            EXNER_LAYER_BOUNDARIES,                       &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                            EXNER_LAYER_CENTRES,                          &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                            P_LAYER_BOUNDARIES,                           &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                            P_LAYER_CENTRES,                              &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                            PSTAR,PK,PKP1,DELPK,DELPKP1,                  &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                            DELPKP12,EKP14,EKP34,AMDETK,EXK,EXKP1,        &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                            DELEXKP1,DELP_UV_K, DELP_UV_KP1,recip_PSTAR,  &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                            RHUM,L_SHALLOW,NTML,NTPAR                     &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                            ,CUMULUS,MDET_ON, ENT_ON, BCONV               &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                            ,THEK, QEK,QSEK, THEKP1,QEKP1,QSEKP1          &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                            ,THPK,QPK                                     &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                            ,BWK, BWKP1,EKM14                             &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                            ,ZK, ZKP12, ZKP1                              &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                            )</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="layer__cn-laycn4a_8f90.xhtml#a65f4fe8bd496a46d6c787e8a33780649">   35</a></span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: cp</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordtype">Use </span><a class="code" href="namespacecv__run__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_run_mod</a><span class="keywordtype">, Only</span>:                                             &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;       <a class="code" href="namespacecv__run__mod.xhtml#a482c40f1cae99ec5ad6e4735bf7d09e6">ent_fac</a>,<a class="code" href="namespacecv__run__mod.xhtml#a37da6c276c5e0c1be49f68daf550887d">amdet_fac</a>      </div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecv__param__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_param_mod</a><span class="keywordtype">, ONLY</span>:                                           &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        ae2</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      <span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;           <span class="keywordtype">USE </span><a class="code" href="namespaceentcoef__mod.xhtml">entcoef_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: lc, lf</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;-<span class="comment">! VECTOR LENGTHS AND LOOP COUNTER</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;-<span class="comment">!</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      <span class="keywordtype">INTEGER</span> NP_FIELD          <span class="comment">! IN FULL LENGTH OF DATA</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      <span class="keywordtype">INTEGER</span> NPNTS             <span class="comment">! IN VECTOR LENGTH</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordtype">INTEGER</span> NLEV              <span class="comment">! IN NUMBER OF MODEL LEVELS</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      <span class="keywordtype">INTEGER</span> K                 <span class="comment">! IN PRESENT MODEL LAYER</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      <span class="keywordtype">INTEGER</span> I                 <span class="comment">! COUNTER FOR DO LOOPS</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;-<span class="comment">! VARIABLES WHICH ARE INPUT</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;-<span class="comment">!</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordtype">REAL</span> EXNER_LAYER_BOUNDARIES(np_field,0:nlev)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                  <span class="comment">! IN EXNER FUNCTION AT LAYER</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      <span class="keywordtype">REAL</span> EXNER_LAYER_CENTRES(np_field,0:nlev)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                  <span class="comment">! IN EXNER FUNCTION AT LAYER</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                  <span class="comment">! BOUNDARIES STARTING AT LEVEL K-1/2</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordtype">REAL</span> P_LAYER_CENTRES(np_field,0:nlev)     <span class="comment">! IN PRESSURE.</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="keywordtype">REAL</span> P_LAYER_BOUNDARIES(np_field,0:nlev)  <span class="comment">! IN PRESSURE.</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="keywordtype">REAL</span> PSTAR(np_field)      <span class="comment">! IN SURFACE PRESSURE (PA)</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keywordtype">REAL</span> RHUM(npnts)         <span class="comment">! IN Relative humidity at level K</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">INTEGER</span> NTML(npnts)      <span class="comment">! IN Number of levels in the surface-base</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="keywordtype">INTEGER</span> NTPAR(npnts)     <span class="comment">! IN Top level of initial parcel</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordtype">LOGICAL</span> L_SHALLOW(npnts) <span class="comment">! IN logical for shallow convection</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: CUMULUS(npnts)   <span class="comment">!logical for cumulus</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: MDET_ON          <span class="comment">!flag for adaptive</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                                              <span class="comment">!mixing detrainment</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                                              <span class="comment">!  on = 1, off = 0</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ENT_ON           <span class="comment">!flag for adaptive</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                              <span class="comment">!entrainment</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: BCONV(npnts)     <span class="comment">!mask for points at</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                              <span class="comment">!which</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                                              <span class="comment">!convection takes place</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: THEK(npnts)         <span class="comment">!theta for environment</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                              <span class="comment">!on k</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: QEK(npnts)          <span class="comment">!q for environment on k</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: QSEK(npnts)         <span class="comment">!q sat for environment</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                              <span class="comment">!on k</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: THEKP1(npnts)       <span class="comment">!theta for environment</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                              <span class="comment">!on k+1</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: QEKP1(npnts)        <span class="comment">!q for environment on k+1</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: QSEKP1(npnts)       <span class="comment">!q sat for environment</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                              <span class="comment">!on k+1</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: THPK(npnts)         <span class="comment">!parcel theta on k</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: QPK(npnts)          <span class="comment">!parcel q on k</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: BWK(npnts)       <span class="comment">!mask for points where</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                                              <span class="comment">!condensate is liquid</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: BWKP1(npnts)     <span class="comment">!mask for points where</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                                              <span class="comment">! condensate is liquid</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: EKM14(npnts)        <span class="comment">!ek14 from previous</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                              <span class="comment">! pass i.e.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                              <span class="comment">!ek for  k - 1 + 1/4</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: ZK(npnts)           <span class="comment">!height on k</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: ZKP12(npnts)        <span class="comment">!height on k+ 1/2</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: ZKP1(npnts)         <span class="comment">!height on k+1</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;-<span class="comment">! VARIABLES WHICH ARE OUTPUT</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;-<span class="comment">!</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="keywordtype">REAL</span> PK(npnts)            <span class="comment">! OUT PRESSURE AT LAYER K (PA)</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      <span class="keywordtype">REAL</span> PKP1(npnts)          <span class="comment">! OUT PRESSURE AT LAYER K+1 (PA)</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      <span class="keywordtype">REAL</span> DELPK(npnts)         <span class="comment">! OUT THICKNESS OF LAYER K (PA)</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      <span class="keywordtype">REAL</span> DELPKP1(npnts)       <span class="comment">! OUT THICHNESS OF LAYER K+1 (PA)</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keywordtype">REAL</span> DELPKP12(npnts)      <span class="comment">! OUT THICKNESS BETWEEN LAYER K AND K+1</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                <span class="comment">!     (PA)</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="keywordtype">REAL</span> DELP_UV_K(npnts)      <span class="comment">! OUT THICKNESS OF UV LAYER K (PA)</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="keywordtype">REAL</span> DELP_UV_KP1(npnts)   <span class="comment">! OUT THICKNESS OF UV LAYER K + 1(PA)</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="keywordtype">REAL</span> EKP14(npnts)         <span class="comment">! OUT ENTRAINMENT COEFFICIENT AT</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                                <span class="comment">!     LEVEL K+1/4 MULTIPLIED BY</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                <span class="comment">!     APPROPRIATE LAYER THICKNESS</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordtype">REAL</span> EKP34(npnts)         <span class="comment">! OUT ENTRAINMENT COEFFICIENT AT</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                <span class="comment">!     LEVEL K+3/4 MULTIPLIED BY</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                                <span class="comment">!     APPROPRIATE LAYER THICKNESS</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordtype">REAL</span> AMDETK(npnts)        <span class="comment">! OUT MIXING DETRAINMENT COEFFICIENT</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                                <span class="comment">!     AT LEVEL K MULTIPLIED BY</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                                <span class="comment">!     APPROPRIATE LAYER THICKNESS</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="keywordtype">REAL</span> EXK(npnts)           <span class="comment">! EXNER FUNCTION AT LEVEL K</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      <span class="keywordtype">REAL</span> EXKP1(npnts)         <span class="comment">! EXNER FUNCTION AT LEVEL K+1</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="keywordtype">REAL</span> DELEXKP1(npnts)      <span class="comment">! DIFFERENCE IN EXNER FUNCTION</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                <span class="comment">! BETWEEN K+3/2 AND K+1/2</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;-<span class="comment">! VARIABLES WHICH ARE DEFINED LOCALLY</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;-<span class="comment">!</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      <span class="keywordtype">REAL</span> AEKP14,AEKP34        <span class="comment">! USED IN CALCULATION OF ENTRAINMENT</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                <span class="comment">! RATE</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;     &amp;    PU,PL</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <span class="keywordtype">REAL</span> recip_PSTAR(npnts)   <span class="comment">! Reciprocal of pstar array</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      <span class="keywordtype">REAL</span> HSAT_EK(npnts)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <span class="keywordtype">REAL</span> HSAT_EKP1(npnts)     <span class="comment">!saturated moist static energies</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      <span class="keywordtype">REAL</span> HSAT_EKP12(npnts)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      <span class="keywordtype">REAL</span> H_PK(npnts)          <span class="comment">!moist static energy</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      <span class="keywordtype">REAL</span> H_PKP12(npnts)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      <span class="keywordtype">REAL</span> H_EK(npnts)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      <span class="keywordtype">REAL</span> H_EKP1(npnts)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      <span class="keywordtype">REAL</span> H_EKP12(npnts)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      <span class="keywordtype">REAL</span> DELTA_HSAT_ENV(npnts)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                <span class="comment">!HSAT_EKP1 - HSAT_EK</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      <span class="keywordtype">REAL</span> DHPBYDP(npnts)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="keywordtype">REAL</span> DHEBYDP(npnts)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <span class="keywordtype">REAL</span> RENT                 <span class="comment">!parameter controlling fractional</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                <span class="comment">!entrainment</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      <span class="keywordtype">REAL</span> EL                   <span class="comment">!latent heat of condensation</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                <span class="comment">!(/freezing)</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      <span class="keywordtype">REAL</span> EPSILONP14(npnts)    <span class="comment">!fractional entrainment coef calc from</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                <span class="comment">!hsat</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      <span class="keywordtype">REAL</span> EPSILONP34(npnts)    <span class="comment">!fractional entrainment coef calc from</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                <span class="comment">!hsat</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      <span class="keywordtype">REAL</span> EKP14_AD(npnts)      <span class="comment">!EPS * LAYER THICKNESS FOR 1/4 LAYER</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      <span class="keywordtype">REAL</span> EKP34_AD(npnts)      <span class="comment">!EPS * LAYER THICKNESS FOR 3/4 LAYER</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;-<span class="comment">! SET CONSTANT AE USED IN CALCULATION OF ENTARINMENT AND</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">! DETRAINMENT RATES DEPENDING UPON LEVEL</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;-<span class="comment">!</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LAYER_CN_4A&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        aekp14 = <a class="code" href="namespacecv__run__mod.xhtml#a482c40f1cae99ec5ad6e4735bf7d09e6">ent_fac</a>*ae2</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        aekp34 = <a class="code" href="namespacecv__run__mod.xhtml#a482c40f1cae99ec5ad6e4735bf7d09e6">ent_fac</a>*ae2</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;       <span class="keywordflow">IF</span> (ent_on  ==  1 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;       rent=0.5</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">!bit compare -possible fix, initialise everything in sight!</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">!except ekm14, obviously</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      <span class="keywordflow">DO</span> i=1, npnts</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        hsat_ek(i)=0.0</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        hsat_ekp1(i)=0.0</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        hsat_ekp12(i)=0.0</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        h_pk(i)=0.0</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        h_pkp12(i)=0.0</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        h_ek(i)=0.0</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        h_ekp1(i)=0.0</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        h_ekp12(i)=0.0</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        delta_hsat_env(i)=0.0</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        dhpbydp(i)=0.0</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        dhebydp(i)=0.0</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        epsilonp14(i)=0.0</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        epsilonp34(i)=0.0</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        ekp14_ad(i)=0.0</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        ekp34_ad(i)=0.0</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;         <span class="keywordflow">DO</span>  i=1,npnts</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">!  CALCULATE PK AND DELPK - IF K = 1 (LOWEST MODEL LAYER) THEN</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">!  VALUES FOR PREVIOUS PASS THROUGH ROUTINE AT (K-1)+1 ARE TAKEN</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;           <span class="keywordflow">IF</span>(k == 2)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;              pk(i) = p_layer_centres(i,k)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">! note minus sign so be careful using it in discretizing</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">!derivatives</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;              delpk(i) = - (p_layer_boundaries(i,k) -                   &amp;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;     &amp;                     p_layer_boundaries(i,k-1))</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;           <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;             pk(i) =  pkp1(i)</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;             delpk(i) = delpkp1(i)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">!  CALCULATE PKP1, DELPKP1 AND DELPK+1/2</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">!           PKP1(I) = P_LAYER_CENTRES(I,K+1)</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">!note minus sign so be careful using it in discretizing</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">!derivatives</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;              delpkp1(i) = - (p_layer_boundaries(i,k+1) -               &amp;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;     &amp;                     p_layer_boundaries(i,k))</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">!note opposite sign convention to other DELPetc</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;           delpkp12(i) = pk(i) - pkp1(i)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">!Calculate hsat in case where adaptive entrainment is switched on</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">!Already inside loop over I</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;             <span class="keywordflow">IF</span>(bwk(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;               el = lc</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;             <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;               el = lc+lf</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keywordflow">             ENDIF</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;             hsat_ek(i)=cp * exner_layer_centres(i,k) * thek(i)         &amp;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;     &amp;                   + el * qsek(i) + g*zk(i)</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;             h_ek(i)=cp * exner_layer_centres(i,k) * thek(i)            &amp;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;     &amp;                   + el * qek(i) + g*zk(i)</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;             h_pk(i)=cp * exner_layer_centres(i,k) * thpk(i)            &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;     &amp;                   + el * qpk(i) + g*zk(i)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;             <span class="keywordflow">IF</span>(bwkp1(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;               el = lc</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;             <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;               el = lc+lf</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="keywordflow">             ENDIF</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;             hsat_ekp1(i)=cp * exner_layer_centres(i,k+1) * thekp1(i)   &amp;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;     &amp;                   + el * qsekp1(i) + g*zkp1(i)</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;             h_ekp1(i)=cp * exner_layer_centres(i,k+1) * thekp1(i)      &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;     &amp;                + el * qekp1(i) + g*zkp1(i)</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;             delta_hsat_env(i)=(hsat_ekp1(i)-hsat_ek(i))</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment">!version below has stability criterion, but doesn&#39;t really help</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">!          DELTA_HSAT_ENV(I)=MIN((HSAT_EKP1(I)-HSAT_EK(I)), 0.0)</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">!Not sure precisely what to do with this- if DELTA_HSAT_ENV</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">!before correction was positive, convection shouldn&#39;t be taking</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">!place at all, never mind the value of the entrainment coefficient.</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;               hsat_ekp12(i) = hsat_ek(i)+                              &amp;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;     &amp;                  (p_layer_boundaries(i,k)- p_layer_centres(i,k))/&amp;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;     &amp;                  (p_layer_centres(i,k+1)- p_layer_centres(i,k)) *&amp;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;     &amp;             delta_hsat_env(i)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;       <span class="comment">!NB already inside loop over NPNTS</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;          dhpbydp(i) = (1- rent) * delta_hsat_env(i)/                   &amp;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;     &amp;               (p_layer_centres(i,k+1)- p_layer_centres(i,k))</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;          h_pkp12(i) = h_pk(i) + (p_layer_boundaries(i,k) -             &amp;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;     &amp;                p_layer_centres(i,k)) * dhpbydp(i)</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;          dhebydp(i) = (h_ekp1(i) - h_ek(i))/                           &amp;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;     &amp;                 (p_layer_centres(i,k+1)- p_layer_centres(i,k))</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;          h_ekp12(i) = h_ek(i) + (p_layer_boundaries(i,k) -             &amp;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;     &amp;                p_layer_centres(i,k)) * dhebydp(i)</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">!  CALCULATE DELP_UV_K and DELP_UV_KP1</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">!  NB: Ensure positive by taking - of difference</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;           delp_uv_k(i) = p_layer_centres(i,k-1) - p_layer_centres(i,k)</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;           delp_uv_kp1(i) = p_layer_centres(i,k) -                      &amp;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;     &amp;                                   p_layer_centres(i,k+1)</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">!  CALCULATE EXNER FUNCTIONS AT MID-LAYES K AND K+1, AND</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">!  DIFFERENCE OF EXNER FUNCTION ACROSS LAYER K</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;           <span class="keywordflow">IF</span>(k == 2)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;              exk(i) = exner_layer_centres(i,k)</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;           <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;             exk(i) = exkp1(i)</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;             exkp1(i) = exner_layer_centres(i,k+1)</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;           delexkp1(i) = exner_layer_boundaries(i,k)-                   &amp;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;     &amp;                   exner_layer_boundaries(i,k+1)</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">!  CALCULATE ENTRAINMENT AND MIXING DETRAINMENT COEFFICIENTS</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">!  CALCULATE ENTRAINMENT COEFFICIENTS MULTIPLIED BY</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">!  APPROPRIATE LAYER THICKNESS</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">!  UM DOCUMENTATION PAPER 27</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">!  SECTION (2C), EQUATION(14)</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;           <span class="keywordflow">IF</span> (l_shallow(i) .AND. k  &gt;   ntml(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;              ekp14(i) = (pk(i) - p_layer_boundaries(i,k))              &amp;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;     &amp;            * 0.03 * exp( -1.0*( p_layer_boundaries(i,ntml(i))    &amp;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;     &amp;                            - pk(i) )                             &amp;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;     &amp;          / ( p_layer_boundaries(i,ntml(i))                       &amp;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;     &amp;            - p_layer_boundaries(i,ntpar(i)) ) )                  &amp;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;     &amp;            / ( p_layer_boundaries(i,ntml(i))                     &amp;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;     &amp;              - p_layer_boundaries(i,ntpar(i)) )</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;           <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            ekp14(i) = <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp14 * pk(i) *                       &amp;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;     &amp;                (pk(i) - p_layer_boundaries(i,k))*                &amp;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;     &amp;                recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keywordflow">           ENDIF</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;           <span class="keywordflow">IF</span> (l_shallow(i) .AND. k  ==  ntml(i)                        &amp;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;     &amp;                          ) ekp14(i) = 0.0</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;           <span class="keywordflow">IF</span> (l_shallow(i) .AND. k  &gt;=  ntml(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;              ekp34(i) = (p_layer_boundaries(i,k) - pkp1(i))            &amp;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;     &amp;             * 0.03 * exp( -1.0*( p_layer_boundaries(i,ntml(i))   &amp;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;     &amp;              - p_layer_boundaries(i,k) )                         &amp;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;     &amp;          / ( p_layer_boundaries(i,ntml(i))                       &amp;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;     &amp;            - p_layer_boundaries(i,ntpar(i)) ) )                  &amp;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;     &amp;            / ( p_layer_boundaries(i,ntml(i))                     &amp;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;     &amp;              - p_layer_boundaries(i,ntpar(i)) )</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;           <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;         ekp34(i) = <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp34 * (p_layer_boundaries(i,k)) *      &amp;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;     &amp;                (p_layer_boundaries(i,k)  - pkp1(i)) *            &amp;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;     &amp;                recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="keywordflow">           ENDIF</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        -        <span class="comment">!calculate epsilon14 and epsilon 34</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        -           <span class="keywordflow">IF</span>(bconv(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;             <span class="keywordflow">IF</span>((h_pk(i) - h_ek(i))  &gt;   0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;               epsilonp14(i)=  dhpbydp(i)/                              &amp;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;     &amp;            max((h_pk(i) - h_ek(i)),500.0)</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;          <span class="comment">!500 chosen with view to not letting buoyancy drop too much</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;         <span class="comment">!approx 0.2 cp + 0.2/1000 L</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;             <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;               epsilonp14(i)= 0.0</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="keywordflow">             END IF</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;             <span class="keywordflow">IF</span>((h_pkp12(i) - h_ekp12(i))  &gt;   0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;               epsilonp34(i)=   dhpbydp(i)/                             &amp;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;     &amp;            max((h_pkp12(i) - h_ekp12(i)),500.0)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;             <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;               epsilonp34(i)= 0.0</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="keywordflow">             END IF</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;           <span class="keywordflow">IF</span>(((h_pk(i) - h_ek(i))  &gt;   500)                            &amp;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;     &amp;       .AND.(dhpbydp(i)  &gt;   0.000000001)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;              ekp14_ad(i) = min((epsilonp14(i) *                        &amp;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;     &amp;                (pk(i) - p_layer_boundaries(i,k))),1.0)</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;           <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;             ekp14_ad(i) = 0.0</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;           <span class="keywordflow">IF</span>(((h_pkp12(i) - h_ekp12(i))  &gt;   0.0000000001)             &amp;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;     &amp;       .AND. (dhpbydp(i)  &gt;   0.0000000001)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;             ekp34_ad(i) = min((epsilonp34(i) *                         &amp;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;     &amp;                (p_layer_boundaries(i,k)  - pkp1(i))),1.0)</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment">!Check on sign of difference</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;             <span class="keywordflow">IF</span>((((ekp14_ad(i) - ekm14(i)) &lt;   0.0) .AND.               &amp;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;     &amp;           ((ekp34_ad(i) - ekp14_ad(i)) &gt;   0.0))                 &amp;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;     &amp;          .OR.                                                    &amp;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;     &amp;          (((ekp14_ad(i) - ekm14(i)) &gt;   0.0) .AND.               &amp;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;     &amp;           ((ekp34_ad(i) - ekp14_ad(i)) &lt;   0.0))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;               ekp34_ad(i) = ekp14_ad(i)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keywordflow">             END IF</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;           <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;             ekp34_ad(i) = 0.0</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="comment">!       reset values of entrainment coefficients to adaptive versions</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment">!        EKP14(I)=MAX(EKP14_AD(I),0.0)</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">!        EKP34(I)=MAX(EKP34_AD(I),0.0)</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment">!Try an average of the adaptive and original versions</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment">!but using GR as minimum value below which  entrainment doesn&#39;t fall</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;           <span class="keywordflow">IF</span>(ekp14_ad(i)  &gt;   0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;             ekp14(i)=0.5*(ekp14_ad(i)+ekp14(i))</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="keywordflow">           ENDIF</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;           <span class="keywordflow">IF</span>(ekp34(i)  &gt;   0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;             ekp34(i)=0.5*(ekp34_ad(i)+ekp34(i))</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="keywordflow">           ENDIF</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">!  CALCULATE MIXING DETRAINMENT COEFFICIENT MULTIPLIED BY</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">!  APPROPRIATE LAYER THICKNESS</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">!  UM DOCUMENTATION PAPER 27</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment">!  SECTION (2C), EQUATION(15)</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;           <span class="keywordflow">IF</span>(k == 1)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;             amdetk(i) = 0.0</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;           <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (l_shallow(i) .AND. k  &gt;=  ntml(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;              <span class="keywordflow">IF</span> (rhum(i)  &lt;=  0.85) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                amdetk(i) = (1.0 + 0.3)*(ekp14(i) + ekp34(i))</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                amdetk(i) = (1.0 + (0.3/0.15)*(1.0-rhum(i)))            &amp;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;     &amp;                                    *(ekp14(i) + ekp34(i))</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                <span class="keywordflow">IF</span> (rhum(i)  &gt;   1.0)                                   &amp;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;     &amp;                   amdetk(i) = 1.0*(ekp14(i) + ekp34(i))</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;           <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ((.NOT. l_shallow(i)) .AND. cumulus(i)               &amp;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;     &amp;            .AND. k  &gt;=  ntml(i) .AND. mdet_on  ==  1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;             <span class="keywordflow">IF</span> (rhum(i)  &lt;=  1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;               amdetk(i) = <a class="code" href="namespacecv__run__mod.xhtml#a37da6c276c5e0c1be49f68daf550887d">amdet_fac</a>* (ekp14(i) + ekp34(i))*            &amp;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;     &amp;                         (1.0-rhum(i))</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;             <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                  amdetk(i) = 0</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="keywordflow">             ENDIF</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;           <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;             amdetk(i) = (ekp14(i) + ekp34(i)) * (1.0-1.0/aekp34)</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="keywordflow">           ENDIF</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="keywordflow">         END DO</span> <span class="comment">!npnts</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;       <span class="keywordflow">ELSE</span>     <span class="comment">! end of adaptive entrainment calculation</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="comment">! calculate coefficients without adaptive entrainment</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;       <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="comment">!CALCULATE PK AND DELPK - IF K = 1 (LOWEST MODEL LAYER) THEN</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="comment">!VALUES FOR PREVIOUS PASS THROUGH ROUTINE AT (K-1)+1 ARE TAKEN</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="keywordflow">IF</span>(k == 2)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;           pk(i) = p_layer_centres(i,k)</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;           delpk(i) = - (p_layer_boundaries(i,k) -                      &amp;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;     &amp;                  p_layer_boundaries(i,k-1))</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;          pk(i) =  pkp1(i)</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;          delpk(i) = delpkp1(i)</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="comment">!CALCULATE PKP1, DELPKP1 AND DELPK+1/2</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        pkp1(i) = p_layer_centres(i,k+1)</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;           delpkp1(i) = - (p_layer_boundaries(i,k+1) -                  &amp;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;     &amp;                  p_layer_boundaries(i,k))</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        delpkp12(i) = pk(i) - pkp1(i)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="comment">!CALCULATE DELP_UV_K and DELP_UV_KP1</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="comment">!NB: Ensure positive by taking - of difference</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        delp_uv_k(i) = p_layer_centres(i,k-1) - p_layer_centres(i,k)</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        delp_uv_kp1(i) = p_layer_centres(i,k) - p_layer_centres(i,k+1)</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment">!CALCULATE EXNER FUNCTIONS AT MID-LAYES K AND K+1, AND</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="comment">!DIFFERENCE OF EXNER FUNCTION ACROSS LAYER K</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        <span class="keywordflow">IF</span>(k == 2)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;          exk(i) = exner_layer_centres(i,k)</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;          exk(i) = exkp1(i)</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;          exkp1(i) = exner_layer_centres(i,k+1)</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        delexkp1(i) = exner_layer_boundaries(i,k)-                      &amp;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;     &amp;                exner_layer_boundaries(i,k+1)</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="comment">!CALCULATE ENTRAINMENT AND MIXING DETRAINMENT COEFFICIENTS</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="comment">!CALCULATE ENTRAINMENT COEFFICIENTS MULTIPLIED BY</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment">!APPROPRIATE LAYER THICKNESS</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="comment">!UM DOCUMENTATION PAPER 27</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="comment">!SECTION (2C), EQUATION(14)</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        <span class="keywordflow">IF</span> (l_shallow(i) .AND. k  &gt;   ntml(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;           ekp14(i) = (pk(i) - p_layer_boundaries(i,k))                 &amp;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;     &amp;         * 0.03 * exp( -1.0*( p_layer_boundaries(i,ntml(i))       &amp;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;     &amp;                         - pk(i) )                                &amp;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;     &amp;       / ( p_layer_boundaries(i,ntml(i))                          &amp;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;     &amp;         - p_layer_boundaries(i,ntpar(i)) ) )                     &amp;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;     &amp;         / ( p_layer_boundaries(i,ntml(i))                        &amp;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;     &amp;           - p_layer_boundaries(i,ntpar(i)) )</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;         ekp14(i) = <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp14 * pk(i) *                          &amp;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;     &amp;             (pk(i) - p_layer_boundaries(i,k))*                   &amp;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;     &amp;             recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        <span class="keywordflow">IF</span> (l_shallow(i) .AND. k  ==  ntml(i)                           &amp;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;     &amp;                       ) ekp14(i) = 0.0</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        <span class="keywordflow">IF</span> (l_shallow(i) .AND. k  &gt;=  ntml(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;           ekp34(i) = (p_layer_boundaries(i,k) - pkp1(i))               &amp;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;     &amp;          * 0.03 * exp( -1.0*( p_layer_boundaries(i,ntml(i))      &amp;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;     &amp;           - p_layer_boundaries(i,k) )                            &amp;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;     &amp;       / ( p_layer_boundaries(i,ntml(i))                          &amp;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;     &amp;         - p_layer_boundaries(i,ntpar(i)) ) )                     &amp;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;     &amp;         / ( p_layer_boundaries(i,ntml(i))                        &amp;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;     &amp;           - p_layer_boundaries(i,ntpar(i)) )</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;      ekp34(i) = <a class="code" href="namespaceentcoef__mod.xhtml#ae2db9ef3efff2870bee2bfee9a63775c" title="Code Owner: See Unified Model Code Owners HTML page This file belongs in section: Stochastic Physics...">entcoef</a> * aekp34 * (p_layer_boundaries(i,k)) *         &amp;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;     &amp;             (p_layer_boundaries(i,k)  - pkp1(i)) *               &amp;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;     &amp;             recip_pstar(i) * recip_pstar(i)</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="comment">!CALCULATE MIXING DETRAINMENT COEFFICIENT MULTIPLIED BY</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="comment">!APPROPRIATE LAYER THICKNESS</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="comment">!UM DOCUMENTATION PAPER 27</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="comment">!SECTION (2C), EQUATION(15)</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        <span class="keywordflow">IF</span>(k == 1)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;          amdetk(i) = 0.0</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (l_shallow(i) .AND. k  &gt;=  ntml(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;           <span class="keywordflow">IF</span> (rhum(i)  &lt;=  0.85) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;             amdetk(i) = (1.0 + 0.3)*(ekp14(i) + ekp34(i))</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;           <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;             amdetk(i) = (1.0 + (0.3/0.15)*(1.0-rhum(i)))               &amp;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;     &amp;                                 *(ekp14(i) + ekp34(i))</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;             <span class="keywordflow">IF</span> (rhum(i)  &gt;   1.0)                                      &amp;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;     &amp;                amdetk(i) = 1.0*(ekp14(i) + ekp34(i))</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="keywordflow">           ENDIF</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ((.NOT. l_shallow(i)) .AND. cumulus(i)                  &amp;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;     &amp;         .AND. k  &gt;=  ntml(i) .AND. mdet_on  ==  1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;          <span class="keywordflow">IF</span> (rhum(i)  &lt;=  1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            amdetk(i) =  <a class="code" href="namespacecv__run__mod.xhtml#a37da6c276c5e0c1be49f68daf550887d">amdet_fac</a>*(ekp14(i) + ekp34(i))*               &amp;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                            (1.0-rhum(i))</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;               amdetk(i) = 0</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;          amdetk(i) = (ekp14(i) + ekp34(i)) * (1.0-1.0/aekp34)</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="keywordflow">       END DO</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="keywordflow">       END IF</span> <span class="comment">! entrainment off condition</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LAYER_CN_4A&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="layer__cn-laycn4a_8f90.xhtml#a65f4fe8bd496a46d6c787e8a33780649" title="SUBROUTINE layer_cn_4a. ">layer_cn_4a</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
