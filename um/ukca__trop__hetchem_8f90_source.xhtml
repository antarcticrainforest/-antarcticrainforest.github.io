<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/UKCA/ukca_trop_hetchem.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_3b087d695daa154bfcb7242bcfd0fbd3.xhtml">UKCA</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ukca_trop_hetchem.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ukca__trop__hetchem_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!  Description:</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">!  Code Description:</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="ukca__trop__hetchem_8f90.xhtml#a37466c7916b7addcf57eb5777c919195" title="(c) [University of Leeds] [2008]. All rights reserved.!&gt; This routine has been licensed to the Met Of...">ukca_trop_hetchem</a>(nbox, nhet, temp, rh, aird, pvol,    &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                                   wetdp, sarea, het_rates)</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="ukca__trop__hetchem_8f90.xhtml#a37466c7916b7addcf57eb5777c919195">   23</a></span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;      <span class="keywordtype">USE </span>ukca_constants<span class="keywordtype">,       ONLY</span>: avc, rmol, m_ho2, m_n2o5,         &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                                      m_air</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;      <span class="keywordtype">USE </span>ukca_mode_setup<span class="keywordtype">,      ONLY</span>: nmodes, ncp, mode, component,     &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                                      cp_su, cp_bc, cp_oc, cp_cl,       &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                                      cp_du, cp_so</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <span class="keywordtype">USE </span>conversions_mod<span class="keywordtype">,      ONLY</span>: pi</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,              ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,             ONLY</span>: jprb, jpim</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">,          ONLY</span>: <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a>          implicit none</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: nbox                 <span class="comment">! No of points</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: nhet                 <span class="comment">! No het. chem. rates</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: temp(nbox)           <span class="comment">! temperature [K]</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: rh(nbox)             <span class="comment">! Relative humidity [fraction]</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: aird(nbox)           <span class="comment">! Total number density [molecules/cm^3]</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: pvol(nbox,nmodes,ncp)<span class="comment">! .. Partial volume of soluble components as fraction of</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: wetdp(nbox,nmodes)   <span class="comment">! Mean wet radius for the mode [m]</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: sarea(nbox,nmodes)   <span class="comment">! Surface area concentn. [cm^2/cm^3]</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>   :: het_rates(nbox,nhet) <span class="comment">! rate coefficients</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      <span class="keywordtype">INTEGER</span> :: i, j, k, l                   <span class="comment">! Loop variables</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <span class="keywordtype">INTEGER</span> :: imode                        <span class="comment">! mode loop counter</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <span class="keywordtype">INTEGER</span> :: icp                          <span class="comment">! component loop counter</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      <span class="keywordtype">REAL</span>    :: molec_weight(nhet)           <span class="comment">! Molecular weights of species</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      <span class="keywordtype">REAL</span>    :: sticking_cf(nbox,nhet,ncp)   <span class="comment">! Gamma as calculated by CAL_* [unitless]</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      <span class="keywordtype">REAL</span>    :: total_vol(nbox,nmodes)       <span class="comment">! Total volume of each mode</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <span class="keywordtype">REAL</span>    :: frac_vol(nbox,nmodes,ncp)    <span class="comment">! pvol/total_vol for each mode [unitless]</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordtype">REAL</span>    :: mode_gamma(nbox,nhet,nmodes) <span class="comment">! Weighted gammas for each mode</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordtype">REAL</span>    :: mode_rate(nbox,nhet,nmodes)  <span class="comment">! First order loss rate coefficient</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      <span class="keywordtype">REAL</span>    :: total_sa(nbox)               <span class="comment">! Total aerosol surface area</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      <span class="keywordtype">INTEGER</span>           :: errcode            <span class="comment">! Error code</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      <span class="keywordtype">CHARACTER(LEN=72)</span> :: cmessage           <span class="comment">! Error message</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_TROP_HETCHEM&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span>        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;UKCA_TROP_HETCHEM Routine:&#39;</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;nbox: &#39;</span>,nbox</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;temp: &#39;</span>,maxval(temp),minval(temp),<a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(temp)/        &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                    <span class="keyword">size</span>(temp)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;rh  : &#39;</span>,maxval(rh),minval(rh),<a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(rh)/<span class="keyword">size</span>(rh)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;aird: &#39;</span>,maxval(aird),minval(aird),<a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(aird)/        &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    <span class="keyword">size</span>(aird)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">DO</span> imode=1,nmodes</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;          <span class="keywordflow">IF</span> (mode(imode)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;sarea: &#39;</span>,imode,maxval(sarea(:,imode)),          &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                        minval(sarea(:,imode)),                         &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                        <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(sarea(:,imode))/<span class="keyword">size</span>(sarea(:,1))</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;wetdp: &#39;</span>,imode,maxval(wetdp(:,imode)),          &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                        minval(wetdp(:,imode)),                         &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                        <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(wetdp(:,imode))/<span class="keyword">size</span>(wetdp(:,1))</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">DO</span> imode=1,nmodes</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;          <span class="keywordflow">IF</span> (mode(imode)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;              <span class="keywordflow">IF</span> (component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;               <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;pvol: &#39;</span>,imode,icp,maxval(pvol(:,imode,icp)), &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                           minval(pvol(:,imode,icp)),                   &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                           <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(pvol(:,imode,icp))/<span class="keyword">size</span>(pvol(:,1,1))</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;               <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      molec_weight(:) = 9e5</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      molec_weight(1) = m_n2o5</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      molec_weight(2) = m_ho2</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <span class="keywordflow">IF</span> (any(molec_weight &gt; 1e5)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        cmessage = <span class="stringliteral">&#39; Molecular weights not defined for all cases&#39;</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        errcode = 1</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_TROP_HETCHEM&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">! ========================================================</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">!  1. Calculate gamma on each aerosol type for 1,nhet</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">! ========================================================</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! Get &lt;gamma&gt; for N2O5 or HO2 reaction, which is a function of aerosol type,</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">! temperature, and RH.</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>)  <span class="keywordflow">THEN</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Sticking_cf:&#39;</span>)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      sticking_cf(:,:,:) = 0.0e0</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      <span class="keywordflow">DO</span> i=1,nhet</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">IF</span> ( i == 1 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;          <span class="keywordflow">DO</span> icp=1,ncp      <span class="comment">! No of components</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            sticking_cf(:,i,icp) = <a class="code" href="ukca__trop__hetchem_8f90.xhtml#a3d1217488f3fce60ef46b2228484012d">cal_n2o5</a>(icp, temp(:), rh(:))</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) i,icp,maxval(sticking_cf(:,i,icp)),              &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                  minval(sticking_cf(:,i,icp)),              &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                  <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(sticking_cf(:,i,icp))/<span class="keyword">size</span>(sticking_cf(:,i,icp))</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( i == 2 ) <span class="keywordflow">THEN</span>          <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            sticking_cf(:,i,icp) = <a class="code" href="ukca__trop__hetchem_8f90.xhtml#a8b99fe8fbe2ed8339cd2188a9b88e6e5">cal_ho2</a>(icp, temp(:), rh(:))</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) i,icp,maxval(sticking_cf(:,i,icp))</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;          cmessage = <span class="stringliteral">&#39; Error in calculating sticking_cf&#39;</span>          errcode = 1</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_TROP_HETCHEM&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keywordflow">      END DO</span>   <span class="comment">! end of loop over nhet</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">! So now we have an array sticking_cf(nbox,nhet,aerotypes)</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">!  with gamma for n2o5 and ho2 for each aerosol type.</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">! =================================================================</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">!  2. Calculate mean gamma for each modes based on partial volumes</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">! =================================================================</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="comment">! Calc fractional volumes</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      total_vol(:,:) = 0.0e0</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keywordflow">DO</span> imode=1,nmodes</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">IF</span> (mode(imode)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;          <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">IF</span> (component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;               total_vol(:,imode) = total_vol(:,imode) +                &amp;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                                   pvol(:,imode,icp)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordflow">          END DO</span>  <span class="comment">! end of loop over components</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keywordflow">      END DO</span>  <span class="comment">! end of loop over modes</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>)  <span class="keywordflow">THEN</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;frac_vol:&#39;</span> )</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      frac_vol(:,:,:) = 0.0e0</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="keywordflow">DO</span> imode=1,nmodes</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="keywordflow">IF</span> (mode(imode)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;          <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keywordflow">IF</span> (component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;              frac_vol(:,imode,icp) = pvol(:,imode,icp) /               &amp;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                                           total_vol(:,imode)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;              <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) imode,icp,maxval(frac_vol(:,imode,icp)),       &amp;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                    minval(frac_vol(:,imode,icp)),       &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                    <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(frac_vol(:,imode,icp))/<span class="keyword">size</span>(frac_vol(:,imode,icp))</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordflow">          END DO</span>  <span class="comment">! end of loop over components</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keywordflow">      END DO</span>  <span class="comment">! end of loop over modes</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">! Calculate mode_gamma by weighting according to frac_vols,</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">!   e.g. gammaSO4*frac_volSO4, for each component, then sum up over each mode.</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      mode_gamma(:,:,:) = 0.0</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <span class="keywordflow">DO</span> i=1,nhet</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">DO</span> imode=1,nmodes</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;          <span class="keywordflow">IF</span> (mode(imode)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;              <span class="keywordflow">IF</span> (component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                mode_gamma(:,i,imode) = mode_gamma(:,i,imode) +         &amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                    (frac_vol(:,imode,icp) * sticking_cf(:,i,icp))</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keywordflow">            END DO</span> <span class="comment">! end loop over ncp</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! end loop over nmodes</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keywordflow">      END DO</span>  <span class="comment">! end loop over nhet</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">! So now we have mode_gamma(nbox,nhet,nmodes)</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">! ===========================================================</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">! 3. Calculate first order rate coefficients for each mode</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">! ===========================================================</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>)  <span class="keywordflow">THEN</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Mode_rate:&#39;</span>)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      mode_rate(:,:,:) = 0.0e0</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      <span class="keywordflow">DO</span> i=1,nhet</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">DO</span> imode=1,nmodes</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;          <span class="keywordflow">IF</span> (mode(imode)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            mode_rate(:,i,imode) = <a class="code" href="ukca__trop__hetchem_8f90.xhtml#a51a0ca072f340f325a974135249e0b10">cal_loss1k</a>(sarea(:,imode),           &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                   wetdp(:,imode), aird(:),             &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                   mode_gamma(:,i,imode), temp(:),      &amp;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                                   molec_weight(i))</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) imode,maxval(mode_rate(:,i,imode)),            &amp;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                  minval(mode_rate(:,i,imode)),          &amp;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                  <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(mode_rate(:,i,imode))/<span class="keyword">size</span>(mode_rate(:,i,imode))</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">! =====================================================</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">! 4. Calc average rate for the box by adding mode rates</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">! =====================================================</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;      total_sa(:) = 0.0e0</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      <span class="keywordflow">DO</span> imode=1,nmodes</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keywordflow">IF</span> (mode(imode)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;          total_sa(:) = total_sa(:) + sarea(:,imode)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;      het_rates(:,:)=0.0e0</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      <span class="keywordflow">DO</span> i=1,nhet</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">DO</span> imode=1,nmodes</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;          <span class="keywordflow">IF</span> (mode(imode)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            <span class="keywordflow">WHERE</span> (total_sa &gt; 1e-30)</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;              het_rates(:,i) = het_rates(:,i) + mode_rate(:,i,imode)</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keywordflow">            ENDWHERE</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;rc_n2o5: &#39;</span>,maxval(het_rates(:,1)),                  &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                             minval(het_rates(:,1)),                    &amp;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                             <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(het_rates(:,1))/<span class="keyword">size</span>(het_rates(:,1))</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;rc_ho2:  &#39;</span>,maxval(het_rates(:,2)),                  &amp;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                             minval(het_rates(:,2)),                    &amp;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                             <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(het_rates(:,2))/<span class="keyword">size</span>(het_rates(:,2))</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_TROP_HETCHEM&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">! ######################################################################</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">!                       INTERNAL SUBROUTINES      CONTAINS</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">! ===============================================================</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">!                N 2 O 5   F U N C T I O N</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">! ===============================================================</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;      <span class="comment">!==============================================================</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;      <span class="comment">! Function N2O5 computes the GAMMA sticking factor</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;      <span class="comment">! for N2O5 hydrolysis.</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;      <span class="comment">!</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;      <span class="comment">! NOTES:</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;      <span class="comment">!==============================================================</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keyword">      FUNCTION </span><a class="code" href="ukca__trop__hetchem_8f90.xhtml#a3d1217488f3fce60ef46b2228484012d">cal_n2o5</a>(aerotype, temp, rh)</div><div class="line"><a name="l00294"></a><span class="lineno"><a class="line" href="ukca__trop__hetchem_8f90.xhtml#a3d1217488f3fce60ef46b2228484012d">  294</a></span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;      <span class="comment">!==============================================================</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;      <span class="comment">! Internal function CAL_N2O5 computes the GAMMA sticking factor</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;      <span class="comment">! for N2O5 hydrolysis.</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;      <span class="comment">!==============================================================</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;           <span class="comment">! Arguments</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: aerotype     <span class="comment">! # denoting aerosol cpt</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: temp(nbox)   <span class="comment">! Temperature [K]</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: rh(nbox)     <span class="comment">! Relative Humidity [fraction]</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;      <span class="comment">! Function return value</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;      <span class="keywordtype">REAL</span> :: cal_n2o5(nbox)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;      <span class="comment">! Local variables</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;      <span class="keywordtype">REAL</span>                :: ttemp(nbox)   <span class="comment">! dummy array for temp</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;      <span class="keywordtype">REAL</span>                :: rh_p(nbox)    <span class="comment">! RH as a percent</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;      <span class="keywordtype">REAL</span>                :: maxtemp       <span class="comment">! maximum</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;      <span class="comment">!==============================================================</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;      <span class="comment">! N2O5 begins here!</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;      <span class="comment">!==============================================================</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_TROP_HETCHEM:CAL_N2O5&#39;</span>,zhook_in,  &amp;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                              zhook_handle)</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;      <span class="comment">! Convert RH to % (max = 100%)</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">! Values already limited to &lt;= 1.0 - see rel_humid_frac in UKCA_MAIN1</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;      rh_p(:)  = rh(:) * 100.0</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;      <span class="comment">! Special handling for various aerosols</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;      <span class="keywordflow">SELECT CASE</span> ( aerotype )</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;         -         <span class="comment">! Dust</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;         -         <span class="keywordflow">CASE</span> ( cp_du )                            <span class="comment">!======================================================</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            <span class="comment">! Based on unpublished Crowley work, was 0.01E0</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                        <span class="comment">! Now gamma=0.03-0.15 (Mogili et al 2006) so use</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            <span class="comment">! a value of 0.1.</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            <span class="comment">! Also 0.2 on saharan test dust (Karagulian et al 2006)</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;            <span class="comment">! though this is now thought to be too high (method)</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            <span class="comment">! (hlm 2008)</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            <span class="comment">!======================================================</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            cal_n2o5(:) = 0.1</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;         -         <span class="comment">! Sulfate</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;         -         <span class="keywordflow">CASE</span> ( cp_su )     </div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            <span class="comment">!========================================================</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            <span class="comment">! RH dependence from Kane et al., Heterogeneous uptake of            ! gaseous N2O5 by (NH4)2SO4, NH4HSO4 and H2SO4 aerosols</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="comment">! J. Phys. Chem. A , 2001, 105, 6465-6470            !========================================================</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            cal_n2o5(:) = 2.79e-4 + rh_p(:)*(  1.30e-4 +                &amp;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                                 rh_p(:)*( -3.43e-6 +                   &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                                 rh_p(:)*(  7.52e-8 ) ) )</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            <span class="comment">!========================================================</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            <span class="comment">! Temperature dependence factor (Cox et al, Cambridge UK)            ! is of the form:</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            <span class="comment">!</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            <span class="comment">!          10^( LOG10( G294 ) - 0.04 * ( ttemp - 294 ) )</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            <span class="comment">! fact =            !                     10^( LOG10( G294 ) )</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            <span class="comment">!</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="comment">! Where G294 = 1e-2 and ttemp is MAX( temp, 282 ).</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            <span class="comment">!            ! For computational speed, replace LOG10( 1e-2 ) with -2</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="comment">! and replace 10^( LOG10( G294 ) ) with G294            !========================================================</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">!            ttemp(:) = MAX( temp(:), 282E0 ) - 294.0  [MAX isn&#39;t array valued]</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            maxtemp = 282.0 - 294.0</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            <span class="keywordflow">WHERE</span> (temp &lt; 282e0)</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;             ttemp = maxtemp</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;             ttemp = temp - 294.0</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keywordflow">            ENDWHERE</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            <span class="comment">! Apply temperature dependence</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            cal_n2o5(:) = cal_n2o5(:)*10.0**(-2.0-4e-2*ttemp(:))/1e-2</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                                        -         <span class="comment">! Black Carbon</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;         -         <span class="keywordflow">CASE</span> ( cp_bc )</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            <span class="comment">!======================================================</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            <span class="comment">! From IUPAC</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <span class="comment">!======================================================</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            cal_n2o5(:) = 0.005e0</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;         -         <span class="comment">! Organic Carbon</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;         -         <span class="keywordflow">CASE</span> ( cp_oc , cp_so ) </div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            <span class="comment">!========================================================</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            <span class="comment">! Based on Thornton, Braban and Abbatt, 2003</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            <span class="comment">! N2O5 hydrolysis on sub-micron organic aerosol: the effect</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <span class="comment">! of relative humidity, particle phase and particle size</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            <span class="comment">!========================================================</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            <span class="keywordflow">WHERE</span> ( rh_p &gt;= 57e0 )</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;               cal_n2o5(:) = 0.03e0</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;               cal_n2o5(:) = rh_p(:) * 5.2e-4</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="keywordflow">            ENDWHERE</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;         -         <span class="comment">! Sea salt</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;         <span class="comment">! accum &amp; coarse</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;         --                   <span class="keywordflow">CASE</span> ( cp_cl )         </div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            <span class="comment">!=======================================================</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <span class="comment">! Based on IUPAC recommendation</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            -            <span class="comment">! May&#39;07 lechlm Now ELSE is changed from G=0.005E0 to            ! gamma = rh_p * 0.0005E0 with a study by Thornton and</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            <span class="comment">! Abbatt 2005, JOURNAL.</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            <span class="comment">!=======================================================</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            <span class="keywordflow">WHERE</span> ( rh_p &gt;= 62 )</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;               cal_n2o5(:) = 0.03e0</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;               cal_n2o5(:) = rh_p(:) * 0.0005e0</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="keywordflow">            ENDWHERE</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;         --                 <span class="comment">! Default</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;         -<span class="keywordflow">         CASE DEFAULT</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            cmessage=<span class="stringliteral">&#39; Unknown aerosol surface for N2O5 hydrolysis&#39;</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) cmessage</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;AEROSOL TYPE =&#39;</span>,aerotype</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_TROP_HETCHEM:CAL_N2O5&#39;</span>,aerotype,cmessage)</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="keywordflow">      END SELECT</span>                <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_TROP_HETCHEM:CAL_N2O5&#39;</span>,zhook_out,   &amp;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                              zhook_handle)</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="keyword">      END FUNCTION </span><a class="code" href="ukca__trop__hetchem_8f90.xhtml#a3d1217488f3fce60ef46b2228484012d">cal_n2o5</a></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">! ======================================================================</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">!                  H O 2   F U N C T I O N</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">! ======================================================================</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="keyword">      FUNCTION </span><a class="code" href="ukca__trop__hetchem_8f90.xhtml#a8b99fe8fbe2ed8339cd2188a9b88e6e5">cal_ho2</a>(aerotype, temp, rh)</div><div class="line"><a name="l00425"></a><span class="lineno"><a class="line" href="ukca__trop__hetchem_8f90.xhtml#a8b99fe8fbe2ed8339cd2188a9b88e6e5">  425</a></span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;      <span class="comment">!================================================================</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;      <span class="comment">! Function HO2 computes the gamma sticking factor</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;      <span class="comment">! for HO2 self reaction.</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;      <span class="comment">!      ! NOTES:</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;      <span class="comment">! (1 ) Dust values for RH&lt;50% are needed.</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;      <span class="comment">! (2 ) Data for organics is from a conference poster that was not</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;      <span class="comment">!        published. Replace with data as it becomes available.</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;      <span class="comment">! (3 ) Temperature dependence on salt seems fairly good (N.B. this      !        is only for SOLID NaCl, not aq). Fits available data      !        (though this data was not published to our knowledge).</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;      <span class="comment">!        This temperature dependence fits well for sulphate data,</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;      <span class="comment">!        so has been used here due to lack of data.      !        Update when available.</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;      <span class="comment">! (4 ) Data for various relative humidities available now (04/08)</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;      <span class="comment">!        from Taketani et al 2008 on sulfate aerosol.</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;      <span class="comment">! (5 ) It should be noted that it may be possible for gamma to      !        reach very high values if TMIs are present. However,</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;      <span class="comment">!        it is unclear if there are any observations of this.</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;      <span class="comment">!        See notes on dust in the code further down.</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;      <span class="comment">! (hlm 3/3/09)</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;      <span class="comment">!================================================================</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;           <span class="comment">! Arguments</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: aerotype         <span class="comment">! # denoting aerosol cpt</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: temp(nbox)     <span class="comment">! Temperature [K]</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: rh(nbox)       <span class="comment">! Relative Humidity [fraction]</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      <span class="comment">! Function return value</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      <span class="keywordtype">REAL</span> :: cal_ho2(nbox)</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;      <span class="comment">! Local variables</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;      <span class="keywordtype">REAL</span>                :: rh_p(nbox)     <span class="comment">! dummy array for RH</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;      <span class="keywordtype">REAL</span>                :: factt(nbox)    <span class="comment">! for calc temp dependence</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;      <span class="keywordtype">REAL</span>                :: facth(nbox)    <span class="comment">! for calc rh dependence</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">!==============================================================</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">! HO2 begins here!</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">!==============================================================</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_TROP_HETCHEM:CAL_HO2&#39;</span>,zhook_in,  &amp;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                               zhook_handle)</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;      <span class="comment">! Convert rh to % (max = 100%)  ! RH is already &lt;= 1.0</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;      rh_p(:)  = rh(:) * 100.0</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;      <span class="comment">! Special handling for various aerosols</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;      <span class="keywordflow">SELECT CASE</span> ( aerotype )</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;         -         <span class="comment">! Dust</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;         -         <span class="keywordflow">CASE</span> ( cp_du )</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            <span class="comment">!=========================================================</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            <span class="comment">! Hanel &#39;76 (reported in Dentener etal &#39;96). If rh&gt;50%,</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;            <span class="comment">! then dust has enough water to allow gamma=0.1.</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            -            <span class="comment">! N.B. this should be updated as more information becomes</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            <span class="comment">! available. Note that if TMIs (such as Cu and Fe) are</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            <span class="comment">! present in high enough concentrations, then large uptake</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            <span class="comment">! may be seen (gamma~0.8). See Thornton et al, 2008, JGR.</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;            <span class="comment">!=========================================================</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            <span class="keywordflow">WHERE</span> ( rh_p &gt;= 50 )</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;               cal_ho2(:) = 0.1e0</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;               <span class="comment">!update when data available</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;               cal_ho2(:) = 0.05e0</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="keywordflow">            ENDWHERE</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;         -         <span class="comment">! Sulfate</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;         -         <span class="keywordflow">CASE</span> ( cp_su )</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                                           <span class="comment">!===========================================================</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            <span class="comment">! Applying the temperature dependence for NaCl, it seems to            ! fit the data very well, so use this.</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;            <span class="comment">!            ! Data from Cooper &amp; Abbatt &#39;96 (Strat conditions) and</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            <span class="comment">! Thornton &amp; Abbatt &#39;05.</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            <span class="comment">!</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            <span class="comment">! Now data from Taketani et al 2008.</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            <span class="comment">! Measurements on (NH4)2SO4 at 296K, tentatively recommend            ! gamma = 0.15, though there is dependence with rh.</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            <span class="comment">!===========================================================</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            <span class="comment">! rh_p factor doesn&#39;t work below 35%rh</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            <span class="keywordflow">WHERE</span> ( rh_p &lt;= 35 )</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;               cal_ho2(:) = 0.01e0</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;              <span class="comment">! Calculate temperature factor. Fix rel to 0.11               factt(:) = (5.66E-5 * EXP( 1560 / temp(:) ) ) / 0.11</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;              <span class="comment">! Calc rh_p factor from Taketani et al 2008</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;               facth(:) = (-2.86 * exp(-0.078*rh_p(:)) + 0.192 ) / 0.11</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;              <span class="comment">! Calc gamma</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;               cal_ho2(:) = 0.11 * factt(:) * facth(:)</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="keywordflow">            ENDWHERE</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            <span class="comment">!Test with recommendations by Thornton and Abbatt 2008</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            <span class="comment">! cal_ho2(:) = 0.15</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;         -         <span class="comment">! Black Carbon</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;         -         <span class="keywordflow">CASE</span> ( cp_bc )</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            <span class="comment">!===========================================================</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            <span class="comment">! Saathoff et al 2001. gamma=&lt;0.01 on soot.</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            -            <span class="comment">! Ivanov (ref as dust) has measurements on soot, but can&#39;t</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            <span class="comment">! find available anywhere.</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            <span class="comment">!===========================================================</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            cal_ho2(:) = 0.01e0</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;         -         <span class="comment">! Organic Carbon</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;         -         <span class="keywordflow">CASE</span> ( cp_oc , cp_so )</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;            <span class="comment">!===========================================================</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            <span class="comment">! Ivanov et al. Conference poster. Range of organic surfaces</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;            <span class="comment">! gamma=1d-4 to 5d-2 @ room temp.</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            <span class="comment">!===========================================================</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            <span class="comment">! mid-value of available data</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            cal_ho2(:) = 2.5e-2</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;         -         <span class="comment">! Sea salt</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;         <span class="comment">! accum &amp; coarse</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;         -         <span class="keywordflow">CASE</span> ( cp_cl )</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                     <span class="comment">!===========================================================</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;            <span class="comment">! Taketani etal ?. For NaCl, gamma&lt;0.01 @ 20%rh solid</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;            <span class="comment">! (at room temp)                   0.05 @ 45%rh aq</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                        <span class="comment">! Remorov etal 2002. Study on solid NaCl</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;            <span class="comment">! gamma=(5.66 pm 3.62)d-5 exp((1560 pm 140)/temp)</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;            <span class="comment">!===========================================================</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;            <span class="comment">! Temperature dependence (for solid NaCl)</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            <span class="keywordflow">WHERE</span> ( rh_p &gt;= 62 )</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;               cal_ho2(:) = 0.05e0</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;            <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;               cal_ho2(:) = 5.66e-5 * exp( 1560 / temp(:) )</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="keywordflow">            ENDWHERE</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;         --                 <span class="comment">! Default</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;         -<span class="keywordflow">         CASE DEFAULT</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;            cmessage=<span class="stringliteral">&#39;Unknown aerosol surface for HO2 self reaction&#39;</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) cmessage,<span class="stringliteral">&#39; aerotype=&#39;</span>,aerotype</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;AEROSOL TYPE =&#39;</span>,aerotype</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;CAL_HO2.UKCA_TROP_HETCHEM&#39;</span>,aerotype,cmessage)</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="keywordflow">      END SELECT</span>                <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_TROP_HETCHEM:CAL_HO2&#39;</span>,zhook_out,  &amp;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                               zhook_handle)</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="keyword">      END FUNCTION </span><a class="code" href="ukca__trop__hetchem_8f90.xhtml#a8b99fe8fbe2ed8339cd2188a9b88e6e5">cal_ho2</a></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="comment">! =========================================================================</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="comment">!                F I R S T   O R D E R   L O S S! =========================================================================</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="keyword">      FUNCTION </span><a class="code" href="ukca__trop__hetchem_8f90.xhtml#a51a0ca072f340f325a974135249e0b10">cal_loss1k</a>( sarea, wetdp, aird, mode_gamma,              &amp;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                           temp, molec_wt_s)</div><div class="line"><a name="l00574"></a><span class="lineno"><a class="line" href="ukca__trop__hetchem_8f90.xhtml#a51a0ca072f340f325a974135249e0b10">  574</a></span>&#160;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="comment">! =================================================================</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="comment">!  Subroutine CAL_LOSS1K calculates the 1st-order loss rate of</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment">!  species on wet aerosol surface. (Adapted from lwh, jyl, gmg, djj,</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="comment">!  7/1/94; bmy, 4/1/03, 4/7/04)</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="comment">! =================================================================</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="comment">! The 1st-order loss rate on wet aerosol (Dentener&#39;s Thesis, p. 14)</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment">! is computed as:</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="comment">!      K [1/s] = sarea / [ wetdp/dfkg + 4./(gamma * xmms) ]       ! where XMMS = Mean molecular speed [cm/s] = sqrt(8R*T/pi*M) for Maxwell!              [Formulae gives [m/s] if R in J/(mol.K) and M in kg/mol]</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment">!       DFKG = Gas phase diffusion coeff [cm2/s] (order of 0.1)</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="comment">! NOTES:</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="comment">! (1 ) Return a default value if RADIUS is zero (i.e. is smaller</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="comment">!       than a very small number) (bmy, 4/7/04)</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="comment">!********************************************************************</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="comment">! Arguments</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: sarea(nbox)         <span class="comment">! surface area of wet</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                                              <span class="comment">!  aerosol/vol of air [cm2/cm3]</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: wetdp(nbox)         <span class="comment">! radius of wet aerosol [cm],</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                                              <span class="comment">! order of 0.01-10 um</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: aird(nbox)          <span class="comment">! density of air [#/cm3]</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: mode_gamma(nbox)    <span class="comment">! Uptake coefficient [unitless] ~ 0.1</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: temp(nbox)          <span class="comment">! temperature [K]</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: molec_wt_s          <span class="comment">! molecular weight of species [g/mole]</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="comment">! Input from module</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment">!      rmol                ! gas constant [J/(mol.K)]</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="comment">!      avc                 ! avogadros number</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment">!      m_air               ! Molec Wt. of air kg/mol</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="comment">! Function return value</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;      <span class="keywordtype">REAL</span> :: cal_loss1k(nbox)                <span class="comment">! Reaction coefficient on aerosol</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;      <span class="keywordtype">REAL</span>     :: dfkg(nbox)                  <span class="comment">! Gas phase diffusion coefficient</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;      <span class="keywordtype">REAL</span>     :: rho_a(nbox)                 <span class="comment">! Air density in [kg/m^3]</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;      <span class="keywordtype">REAL</span>     :: mw_s                        <span class="comment">! molec_weight of species [kg/mol]</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: cf=1e-2              <span class="comment">! conversion factor 1/(m/s) to 1/(cm/s)</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: dq=4.5e-10           <span class="comment">! Diameter of air molecule [m]</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;      <span class="comment">!=============================================================</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;      <span class="comment">! CAL_LOSS1K begins here!</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;      <span class="comment">!=============================================================</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_TROP_HETCHEM:CAL_LOSS1K&#39;</span>,zhook_in,  &amp;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                               zhook_handle)</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;      mw_s = molec_wt_s/1e3</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;      rho_a(:) = aird(:)*m_air*1e6/avc</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;RHO_A: &#39;</span>,maxval(rho_a),minval(rho_a)</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;      dfkg(:)=0.0  <span class="comment">! for debug only</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;      <span class="keywordflow">WHERE</span> (sarea &lt; 0.0 .OR. wetdp &lt; 1e-30 .OR. mode_gamma &lt; 1e-30)</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;         <span class="comment">! Use default value if AREA is negative</span></div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;         <span class="comment">! or if RADIUS is either zero or negative</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;         cal_loss1k = 1.0e-3</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;      <span class="keywordflow">ELSEWHERE</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;<span class="comment">! dfkg = Gas phase diffusion coeff [cm2/s] (order of 0.1)</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="comment">! see  Bauer et al., 2004, JGR 109, D02304 (eqn 7), with factor of 1e4 =&gt; [cm^2/s]</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;         dfkg(:) = (3e4/(8.0 * avc * dq**2 * rho_a(:))) *               &amp;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;              sqrt((rmol*temp(:)*m_air/(2.0*pi))*(mw_s + m_air)/mw_s)</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;         cal_loss1k(:) = sarea(:)/( wetdp(:)/dfkg(:) +                  &amp;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                 (cf/mode_gamma(:))*sqrt(2.0*pi*mw_s/(rmol*temp(:))))</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="keywordflow">      ENDWHERE</span></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#af03b710c9e538edb8c1e1b272939a657">prstatus_diag</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;dfkg: &#39;</span>,maxval(dfkg),minval(dfkg)</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_trop_hetchem&#39;</span>)</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_TROP_HETCHEM:CAL_LOSS1K&#39;</span>,zhook_out, &amp;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                              zhook_handle)</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="keyword">      END FUNCTION </span><a class="code" href="ukca__trop__hetchem_8f90.xhtml#a51a0ca072f340f325a974135249e0b10">cal_loss1k</a></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="ukca__trop__hetchem_8f90.xhtml#a37466c7916b7addcf57eb5777c919195" title="(c) [University of Leeds] [2008]. All rights reserved.!&gt; This routine has been licensed to the Met Of...">ukca_trop_hetchem</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
