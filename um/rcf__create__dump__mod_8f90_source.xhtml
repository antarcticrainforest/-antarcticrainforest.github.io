<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/qxreconf/rcf_create_dump_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_448e69cd1e368218ef2123538d498dc2.xhtml">qxreconf</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">rcf_create_dump_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="rcf__create__dump__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno"><a class="line" href="namespacercf__create__dump__mod.xhtml">    4</a></span>&#160;<span class="keyword">Module</span> <a class="code" href="namespacercf__create__dump__mod.xhtml" title="Dump creation `main loop&#39; Dump creation `main loop&#39;. ">rcf_create_dump_mod</a></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">Contains</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">Subroutine </span><a class="code" href="namespacercf__create__dump__mod.xhtml#a2f1f869ea648718c07cc083ce73c40c9" title="Subroutine Rcf_Create_Dump - main dump creation loop. ">rcf_create_dump</a>( Hdr_In, Hdr_Out, fields_in, fields_out, &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                            field_count_in, field_count_out, data_source )</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="namespacercf__create__dump__mod.xhtml#a2f1f869ea648718c07cc083ce73c40c9">   28</a></span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__set__orography__mod.xhtml" title="Sets up the orography for the reconfiguration Sets up the orography for the reconfiguration. ">rcf_set_orography_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="namespacercf__set__orography__mod.xhtml#ace5213d13ad442d40e62715689e6cd99" title="Subroutine Rcf_Set_Orography - sets the orographies. ">rcf_set_orography</a></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__pre__interp__transform__mod.xhtml" title="Perform transformations etc before a field is interpolated Perform transformations etc before a field...">rcf_pre_interp_transform_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="namespacercf__pre__interp__transform__mod.xhtml#a20d33c2705b41c9046ce97c6a6b97e61" title="Subroutine Rcf_Pre_Interp_Transform. ">rcf_pre_interp_transform</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__post__interp__transform__mod.xhtml" title="Performs transforms after a field has been interpolated. Performs transforms after a field has been i...">rcf_post_interp_transform_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="namespacercf__post__interp__transform__mod.xhtml#a0a9f729565f4986f12c2ef79546742ea">rcf_post_interp_transform</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__post__process__mod.xhtml" title="Post `main loop&#39; processing of data Post `main loop&#39; processing of data. ">rcf_post_process_mod</a><span class="keywordtype">, Only</span> :&amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="namespacercf__post__process__mod.xhtml#abd81a99947cd0c226d25842ec46e1e95" title="Subroutine Rcf_Post_Process - process fields after `main loop&#39;. ">rcf_post_process_atmos</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__recon__mod.xhtml" title="data module defining RECON namelist data module defining RECON namelist ">rcf_recon_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="namespacercf__recon__mod.xhtml#a7892b8cd7cd03d9efeeda1f6318b6739" title="Transplating of data. ">l_trans</a>,              &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="namespacercf__recon__mod.xhtml#a24414ae5f1b674f8b5f3d91ef7dcff89" title="Switch for uars data. ">uars</a>,                 &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="namespacercf__recon__mod.xhtml#a19af8a2b6550fb052727a0c368b6d445" title="Perform canopy snow throughfallLOGICAL :: l_canopy_snow_throughfall = .FALSE. ">l_interp_input_only</a></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__fortranio__mod.xhtml" title="Module for dynamic allocation of Fortran Unit Number Module for dynamic allocation of Fortran Unit Nu...">rcf_fortranio_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    rcf_get_unit,             &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="namespacercf__fortranio__mod.xhtml#ae5e8f33a0b6098e34400d263dd0a2005">rcf_free_unit</a></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__freeumhdr__mod.xhtml" title="Clears space from UM_header_type Clears space from UM_header_type. ">rcf_freeumhdr_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="namespacercf__freeumhdr__mod.xhtml#a7202a2f34d2097eecff1ff2d965dd87a" title="Subroutine Rcf_FreeUMhdr - frees up used arrays etc. ">rcf_freeumhdr</a></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__umhead__mod.xhtml" title="Data module defining um_header_type Data module defining um_header_type. ">rcf_umhead_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="structrcf__umhead__mod_1_1um__header__type.xhtml" title="Global Type Definitions: ">um_header_type</a></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__data__source__mod.xhtml" title="Definitions for data-type defining source of a field Definitions for data-type defining source of a f...">rcf_data_source_mod</a>    <span class="comment">! All of it...</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__read__field__mod.xhtml" title="Wrapper for the READFLDS routine. Wrapper for the READFLDS routine. ">rcf_read_field_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="namespacercf__read__field__mod.xhtml#a31084c176946b7db5991b2cb66973198" title="Subroutine Rcf_Read_Field - read in a field. ">rcf_read_field</a></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__write__field__mod.xhtml" title="Wrapper for WRITFLDS Wrapper for WRITFLDS. ">rcf_write_field_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="namespacercf__write__field__mod.xhtml#a45aefec8543b2ff3e794f75dcf866138" title="Subroutine Rcf_Write_Field. ">rcf_write_field</a></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,              &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>,            &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacedecomp__params.xhtml" title="Magic numbers defining decompositions Magic numbers defining decompositions. ">decomp_params</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="namespacedecomp__params.xhtml#a3104711097ad4d38e5ccd648d10bcc6b" title="decomps for rcf ">decomp_rcf_input</a>,    &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__grid__type__mod.xhtml" title="Module to define a grid data type. Module to define a grid data type. ">rcf_grid_type_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a>,           &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__field__type__mod.xhtml" title="Defines the field_type data-type Defines the field_type data-type. ">rcf_field_type_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__alloc__field__mod.xhtml" title="Module to allocate and deallocate space for field data Module to allocate and deallocate space for fi...">rcf_alloc_field_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a>,            &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__locate__mod.xhtml" title="Find a field in a field list by stash item number Find a field in a field list by stash item number...">rcf_locate_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">USE </span>um_parvars<span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__field__equals__mod.xhtml" title="Copy one field into another - IGNORING THE DATA Copy one field into another - IGNORING THE DATA ...">rcf_field_equals_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="interfacercf__field__equals__mod_1_1rcf__field__equals.xhtml" title="No data is copied or data pointers set. ">rcf_field_equals</a></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__interp__weights__mod.xhtml" title="Defines interpolation weight variables Defines interpolation weight variables. ">rcf_interp_weights_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="namespacercf__interp__weights__mod.xhtml#a7805f50ef3aafe3d1b66d1ef581eca57" title="Read in via namelist. ">h_int_method</a>,        &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="namespacercf__interp__weights__mod.xhtml#a5ffe101726819be4c66ae26c898368e1">nearest_neighbour</a>,   &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="namespacercf__interp__weights__mod.xhtml#acbe250e83e0b0c75c419a45d96b2318b">h_int_active</a>,        &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="namespacercf__interp__weights__mod.xhtml#a9b2150be0910e9b55b10edb0a1a728a5">h_int_active_u</a>,      &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="namespacercf__interp__weights__mod.xhtml#a36b858835378dbec7cf79ce5e2ed8c9b">h_int_active_v</a>,      &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="namespacercf__interp__weights__mod.xhtml#a3c828ea7bee085a84fdb3f0113da9a6f">l_same_rotation</a></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__v__int__ctl__mod.xhtml" title="Data module containing vertical interpolation control variables Data module containing vertical inter...">rcf_v_int_ctl_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="namespacercf__v__int__ctl__mod.xhtml#a456ae80e5e11f90269e18bd5281dfbe5">v_int_active</a>,         &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="namespacercf__v__int__ctl__mod.xhtml#a33f3453eb44c30035ad14ac673a04aab">v_int_active_soil</a></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__interpolate__mod.xhtml" title="top level wrapper for interpolation top level wrapper for interpolation ">rcf_interpolate_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="namespacercf__interpolate__mod.xhtml#a69c11fea979d74b2dc45c3929395fdb8" title="Subroutine Rcf_Interpolate - top level interpolation wrapper. ">rcf_interpolate</a></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__lsm__mod.xhtml" title="Land-Sea mask data Land-Sea mask data. ">rcf_lsm_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="namespacercf__lsm__mod.xhtml#ab522187082e89e62fee2ff81186100ab">local_lsm_out</a></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__aux__file__mod.xhtml" title="Reads in auxillary data into dump Reads in auxillary data into dump. ">rcf_aux_file_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="s__dims_8h.xhtml#a71336cb4db3764ce46c12aa7d8a9b39b">tracers</a>,                  <a class="code" href="namespacercf__aux__file__mod.xhtml#afa0e6dd5045608973b28e44107d1fb27">uars_data</a>,      &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="namespacercf__aux__file__mod.xhtml#aa0587b9c6a946b90353b475b79e782af">user_prog</a>,                <a class="code" href="namespacercf__aux__file__mod.xhtml#a3f075e62ac874768e47bfd1c1ff27ef5">transplant</a>,     &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="namespacercf__aux__file__mod.xhtml#ab7550f624f6519921a65463ab44e11bd">rcf_aux_file</a></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__field__calcs__mod.xhtml" title="Performs Source=8 field initialisation calculations Performs Source=8 field initialisation calculatio...">rcf_field_calcs_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="namespacercf__field__calcs__mod.xhtml#aaf83a6a3cfce239d92cf41c835842415" title="Subroutine Rcf_Field_Calcs - field initialisation calculations. ">rcf_field_calcs</a></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__pre__process__calcs__mod.xhtml" title="Performs Source=8 field initialisation calculations Performs Source=8 field initialisation calculatio...">rcf_pre_process_calcs_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="namespacercf__pre__process__calcs__mod.xhtml#a2b4ee2cfc6f07ba98dbfa478507df0c9" title="Subroutine Rcf_Pre_Process_Calcs - field initialisation calculations. ">rcf_pre_process_calcs</a></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__set__interp__flags__mod.xhtml" title="magic numbers and code for setting up field interpolation flags magic numbers and code for setting up...">rcf_set_interp_flags_mod</a><span class="keywordtype">, Only</span> :               &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aaa6f3901228330eb9e9a6c1a2f94883f" title="Subroutine to set interp flags for intput fields based on h_int_active, v_int_active and internal rul...">rcf_set_interp_flags</a>,                          &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aa8a03f4c94ab04462c6211248ae790d8">interp_v_only</a>,            <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aa5ed5cb60468d360e1c017004d4361ab">interp_h_only</a>,       &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#ab8c449c23320631e8a2b31d316e3dc08" title="Subroutine Rcf_Set_Interp_Flags - set field interpolation flags. ">interp_all</a>,               <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aba4f06e5e66d621574a202a2dcdb6cc9">interp_no_op</a>,        &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#a786d446b7a29f5ff9ee529ee93c5a797">interp_copy</a>,              <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#a850845a708fdb6496b10a52ee6fbe2b2">interp_done</a></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__rotate__mod.xhtml" title="Rotates winds for LAM dumps Rotates winds for LAM dumps. ">rcf_rotate_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="namespacercf__rotate__mod.xhtml#ae2f64c6dfdd518835294ea66469228b2">rcf_rotate</a>,            &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="namespacercf__rotate__mod.xhtml#aa8c3108db43bfd1d2b47941f3bdd314b" title="magic numbers ">tostandard</a>,            &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="namespacercf__rotate__mod.xhtml#a93405e3c2ccb06fb9b5b02d55b784e1c">fromstandard</a></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__stashcodes__mod.xhtml" title="List of stashcode magic numbers List of stashcode magic numbers. ">rcf_stashcodes_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#a2780b8e8f969c4b385a4c204d458958d" title="Stashcodes used in the reconfiguration. ">stashcode_u</a>,               &amp;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#a579fb1c9540fa85b4aad572d531bec83">stashcode_v</a>,               &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#a33e0e3878c03ea7915281c010370ddcf">stashcode_lsm</a>,             &amp;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#a29a39e580382b422b6620cce1413f04c">stashcode_orog</a>,            &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#ab0255e1f0a1e4e69dcc04b1a4b3c5faf">stashcode_icefrac</a>,         &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#a2768f011e48e40edc66ebe27c5605203">stashcode_tstar</a>,           &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#acd7878927ff724929261196cd3f4f6dd">stashcode_tstar_land</a>,      &amp;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#a98f6d80ebb8365cc8957dc4e717d4772">stashcode_tstar_sea</a>,       &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#aa97f03956abda517115d34b03ca4cc01">stashcode_tstar_sice</a>,      &amp;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__grib__interp__tnpstar__mod.xhtml" title="Horizontally interpolates T and Pstar for Height generation Horizontally interpolates T and Pstar for...">rcf_grib_interp_tnpstar_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="namespacercf__grib__interp__tnpstar__mod.xhtml#addcfe6a3157fa516fe9136e6a043323b" title="Subroutine Rcf_GRIB_Interp_TnPstar. ">rcf_grib_interp_tnpstar</a></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__generate__heights__mod.xhtml" title="Generate SI dynamics height field Generate SI dynamics height field. ">rcf_generate_heights_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="namespacercf__generate__heights__mod.xhtml#a0de538a470a954f98a8735bc2a5cbfbd">height_gen_ecmwf_hybrd</a>,          &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="namespacercf__generate__heights__mod.xhtml#a1b0340c4dad1ededde2e1841e5cbcfae">height_gen_ecmwf_press</a></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__locate__alt__field__mod.xhtml" title="Sets the data_source array corresponding to the fields array. Sets the data_source array correspondin...">rcf_locate_alt_field_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="namespacercf__locate__alt__field__mod.xhtml#aac85930abee835d42d48628a47c31dc4" title="Subroutine rcf_locate_alt_field - sets field to use alternative. ">rcf_locate_alt_field</a></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecppxref__mod.xhtml" title="Code Owner: See Unified Model Code Owners HTML page. ">cppxref_mod</a><span class="keywordtype">, ONLY</span>: &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    ppx_type_real,     &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#ac7a51e48487fc3f069d300616a516903">ppx_type_int</a>,      &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#a38e46a579ddd1f4c199d507e0ca92476">ppx_type_log</a></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__polar__wind__mod.xhtml" title="Averaging of Polar wind rows Averaging of Polar wind rows. ">rcf_polar_wind_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="namespacercf__polar__wind__mod.xhtml#adbf818f1c9cbddfeadbd8ba65a8fba35" title="Subroutine Rcf_Polar_Wind - Averaging of Polar wind rows. ">rcf_polar_wind</a></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__headaddress__mod.xhtml" title="Magic numbers for header components Magic numbers for header components. ">rcf_headaddress_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="namespacercf__headaddress__mod.xhtml#a3defdaa78e10cba8d75ac5c4dc9ac454">rc_longspacing</a>,             &amp;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="namespacercf__headaddress__mod.xhtml#a6388c19d76913de952b36571eec60513">fh_gridstagger</a>,             &amp;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="namespacercf__headaddress__mod.xhtml#aac45c7fceea7edb3c45819734466bffd">fh_gridstagger_endgame</a></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacemodel__file.xhtml" title="A simple data module containing variables related to STASH buffering. ">model_file</a><span class="keywordtype">, Only</span> : <a class="code" href="namespacemodel__file.xhtml#a07b515dfc8147e86355cd71196399c5d">model_file_open</a>, model_file_close</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">! Arguments</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>                       :: field_count_in</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>                       :: field_count_out</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;type(<a class="code" href="structrcf__umhead__mod_1_1um__header__type.xhtml" title="Global Type Definitions: ">um_header_type</a>), <span class="keywordtype">Intent(InOut)</span>      :: hdr_in</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;type(<a class="code" href="structrcf__umhead__mod_1_1um__header__type.xhtml" title="Global Type Definitions: ">um_header_type</a>), <span class="keywordtype">Intent(InOut)</span>      :: hdr_out</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>                :: fields_in(:)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span>                :: fields_out(:)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;type(<a class="code" href="structrcf__data__source__mod_1_1data__source__type.xhtml">data_source_type</a>), <span class="keywordtype">Pointer</span> :: data_source(:)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">! Comdecks</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">! Local vars</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordtype">Integer</span>                          :: pos      <span class="comment">! position in fields array</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordtype">Integer</span>                          :: i        <span class="comment">! looper</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordtype">Integer</span>                          :: err      <span class="comment">! for file open/close</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordtype">Integer</span>                          :: IOStatus</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordtype">Integer</span>                          :: ErrorStatus</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keywordtype">Integer</span>                          :: stashcode_onpole</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keywordtype">Integer</span>                          :: stashcode_offpole</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keywordtype">Logical</span>                          :: l_exist</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordtype">Character (Len=80)</span>               :: Cmessage</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordtype">Character (Len=Max_Filename_Len)</span> :: TracerFileName</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordtype">Character (Len=*)</span>, <span class="keywordtype">Parameter</span>     :: RoutineName=<span class="stringliteral">&#39;Rcf_Create_Dump&#39;</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Target</span>  :: interp_orog    <span class="comment">! interpolated input orog</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span> :: orog_out       <span class="comment">! ptr to output orog</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span> :: orog_in        <span class="comment">! ptr to intput orog</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span> :: input_field    <span class="comment">! ptr to input field</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span> :: output_field   <span class="comment">! ptr to output field</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span> :: polar_wind     <span class="comment">! ptr to polar wind</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;type(<a class="code" href="structrcf__field__type__mod_1_1field__type.xhtml">field_type</a>), <span class="keywordtype">Pointer</span> :: non_polar_wind <span class="comment">! ptr to non-polar wind</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;type(<a class="code" href="structrcf__umhead__mod_1_1um__header__type.xhtml" title="Global Type Definitions: ">um_header_type</a>)      :: hdr_aux        <span class="comment">! auxillary file header</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">! Formatting</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keywordtype">Character (Len=*)</span>, <span class="keywordtype">Parameter</span> :: &amp;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    form=<span class="stringliteral">&quot;(a20,1x,i3, &#39; ( Section&#39;, i4, &#39; )&#39;, &quot;</span>//&amp;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="stringliteral">&quot;&#39; ( Stashcode&#39;, i4, &#39; )&#39;, &#39; &#39;, a36)&quot;</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">! Set up the input, output and interpolated orography fields</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keyword">Call </span><a class="code" href="namespacercf__set__orography__mod.xhtml#ace5213d13ad442d40e62715689e6cd99" title="Subroutine Rcf_Set_Orography - sets the orographies. ">rcf_set_orography</a>( fields_in, fields_out, field_count_in,      &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                        field_count_out, hdr_in, hdr_out,           &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                        data_source, orog_in, orog_out, interp_orog )</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">! If recon from GRIB T &amp; Pstar need to interp&#39;d horizontally</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">! for height generation</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordflow">If</span> ( <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a> % height_gen_method == <a class="code" href="namespacercf__generate__heights__mod.xhtml#a0de538a470a954f98a8735bc2a5cbfbd">height_gen_ecmwf_hybrd</a> .OR.  &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;     <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a> % height_gen_method == <a class="code" href="namespacercf__generate__heights__mod.xhtml#a1b0340c4dad1ededde2e1841e5cbcfae">height_gen_ecmwf_press</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__grib__interp__tnpstar__mod.xhtml#addcfe6a3157fa516fe9136e6a043323b" title="Subroutine Rcf_GRIB_Interp_TnPstar. ">rcf_grib_interp_tnpstar</a>( fields_in, fields_out, hdr_in,      &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                field_count_in, field_count_out)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordflow">End If</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;-<span class="comment">! Setup interpolation flags</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;-<span class="keyword">Call </span><a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aaa6f3901228330eb9e9a6c1a2f94883f" title="Subroutine to set interp flags for intput fields based on h_int_active, v_int_active and internal rul...">rcf_set_interp_flags</a>( fields_in, fields_out, field_count_in, &amp;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                           field_count_out, data_source )</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">! Rotate input winds if so required</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordflow">If</span> ((<a class="code" href="namespacercf__interp__weights__mod.xhtml#a9b2150be0910e9b55b10edb0a1a728a5">h_int_active_u</a> .OR. <a class="code" href="namespacercf__interp__weights__mod.xhtml#a36b858835378dbec7cf79ce5e2ed8c9b">h_int_active_v</a>) .AND. <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a> % Rotated .AND. &amp;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;     .NOT. <a class="code" href="namespacercf__interp__weights__mod.xhtml#a3c828ea7bee085a84fdb3f0113da9a6f">l_same_rotation</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  <span class="keywordflow">If</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Rotating input winds&#39;</span>, &amp;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__rotate__mod.xhtml#ae2f64c6dfdd518835294ea66469228b2">rcf_rotate</a>( fields_in, field_count_in, <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a>, hdr_in,  &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                   <a class="code" href="namespacedecomp__params.xhtml#a3104711097ad4d38e5ccd648d10bcc6b" title="decomps for rcf ">decomp_rcf_input</a>, <a class="code" href="namespacercf__rotate__mod.xhtml#aa8c3108db43bfd1d2b47941f3bdd314b" title="magic numbers ">tostandard</a>)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keywordflow">End If</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">! Main loop</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordflow">Do</span> i = 1, field_count_out <span class="comment">! run through the output fields</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;   <span class="comment">! Which fields have we already dealt with? For example.</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  <span class="comment">! Orography</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  <span class="comment">! LSM</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  <span class="comment">! Fields in rcf_ancil_atmos which have be treated specially. (e.g. tstar)</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;   <span class="keywordflow">IF</span>( data_source( i ) % source == <a class="code" href="namespacercf__data__source__mod.xhtml#ae232e0306e2491cd51a5132ed7f2a544" title="magic number for internal use only ">already_processed</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">If</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,form) <span class="stringliteral">&#39;Already processed&#39;</span>, i,                        &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                      fields_out( i ) % stashmaster % section,      &amp;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                      fields_out( i ) % stashmaster % item,         &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                      fields_out( i ) % stashmaster % name</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keywordflow">    End If</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    cycle    <span class="comment">! just skip this iteration of the loop.</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  <span class="comment">! To simplify the specification of fields to process we need to make sure we</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <span class="comment">! dont revisit ancillary files since the orography will be rewritten if</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <span class="comment">! orograhy is read in via ancillary.</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  output_field =&gt; fields_out( i )</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  <span class="keywordflow">IF</span> ( data_source( i ) % Source /= <a class="code" href="namespacercf__data__source__mod.xhtml#aed20a99b437b95600fdeec4087c0ebe6">ancillary_file</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a>( output_field )</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  <span class="keywordflow">Select Case</span>( data_source( i ) % Source )</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">! Data interpolated (or copied) from input dump</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keywordflow">Case</span>( <a class="code" href="namespacercf__data__source__mod.xhtml#aea2d2e152c06c6c89dff95655f8d6f05" title="magic numbers for a source of a field etc ">input_dump</a>, <a class="code" href="namespacercf__data__source__mod.xhtml#ad355f0af7d666885f45494fa6e96f9ad">other_field</a> )</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;      <span class="comment">! set up input fields</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a>( fields_out( i ) % stashmaster % section,    &amp;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                       fields_out( i ) % stashmaster % item,       &amp;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                       fields_in, field_count_in, pos, .true. )</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;      <span class="keywordflow">IF</span> (pos == 0 .AND. data_source( i ) % Source == <a class="code" href="namespacercf__data__source__mod.xhtml#ad355f0af7d666885f45494fa6e96f9ad">other_field</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="comment">! Lets try finding another field we can use.</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keyword">Call </span><a class="code" href="namespacercf__locate__alt__field__mod.xhtml#aac85930abee835d42d48628a47c31dc4" title="Subroutine rcf_locate_alt_field - sets field to use alternative. ">rcf_locate_alt_field</a>(fields_out( i ), fields_in,      &amp;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                                  field_count_in, pos)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;      <span class="comment">! Read in field</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;      input_field =&gt; fields_in( pos )</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a>( input_field )</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__read__field__mod.xhtml#a31084c176946b7db5991b2cb66973198" title="Subroutine Rcf_Read_Field - read in a field. ">rcf_read_field</a>( input_field, hdr_in, <a class="code" href="namespacedecomp__params.xhtml#a3104711097ad4d38e5ccd648d10bcc6b" title="decomps for rcf ">decomp_rcf_input</a> )</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;      <span class="comment">! Write out appropriate message</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      <span class="keywordflow">Select Case</span>( input_field % interp )</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keywordflow">Case</span>( <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aa5ed5cb60468d360e1c017004d4361ab">interp_h_only</a>, <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aa8a03f4c94ab04462c6211248ae790d8">interp_v_only</a>, <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#ab8c449c23320631e8a2b31d316e3dc08" title="Subroutine Rcf_Set_Interp_Flags - set field interpolation flags. ">interp_all</a>)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;          <span class="keywordflow">If</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,form) <span class="stringliteral">&#39;Interpolating Field&#39;</span>, i,                &amp;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                           input_field % stashmaster % section,     &amp;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                           input_field % stashmaster % item,        &amp;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                           input_field % stashmaster % name</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="keywordflow">          End If</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">Case</span>( <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#a786d446b7a29f5ff9ee529ee93c5a797">interp_copy</a> )</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;          <span class="keywordflow">If</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,form) <span class="stringliteral">&#39;Copying Field&#39;</span>, i,                      &amp;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                           input_field % stashmaster % section,     &amp;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                           input_field % stashmaster % item,        &amp;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                           input_field % stashmaster % name</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keywordflow">          End If</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="keywordflow">Case</span>( <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#aba4f06e5e66d621574a202a2dcdb6cc9">interp_no_op</a> )</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;          <span class="keywordflow">If</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,form) <span class="stringliteral">&#39;Skipping Field&#39;</span>, i,                     &amp;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                           input_field % stashmaster % section,     &amp;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                           input_field % stashmaster % item,        &amp;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                           input_field % stashmaster % name</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="keywordflow">          End If</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;          <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a>( input_field )</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;          <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a>( output_field )</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;          cycle</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="keywordflow">      End Select</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;     <span class="comment">! If using nearest neighbour we dont really care about transforming data.</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespacercf__interp__weights__mod.xhtml#a7805f50ef3aafe3d1b66d1ef581eca57" title="Read in via namelist. ">h_int_method</a> /= <a class="code" href="namespacercf__interp__weights__mod.xhtml#a5ffe101726819be4c66ae26c898368e1">nearest_neighbour</a> .AND. &amp;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;          .NOT. <a class="code" href="namespacercf__recon__mod.xhtml#a19af8a2b6550fb052727a0c368b6d445" title="Perform canopy snow throughfallLOGICAL :: l_canopy_snow_throughfall = .FALSE. ">l_interp_input_only</a>) <span class="keywordflow">THEN</span>             <span class="comment">! convert fields approriately for interpolation</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacercf__pre__interp__transform__mod.xhtml#a20d33c2705b41c9046ce97c6a6b97e61" title="Subroutine Rcf_Pre_Interp_Transform. ">rcf_pre_interp_transform</a>( input_field, fields_in,     &amp;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                                       field_count_in, hdr_in, orog_in )</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__interpolate__mod.xhtml#a69c11fea979d74b2dc45c3929395fdb8" title="Subroutine Rcf_Interpolate - top level interpolation wrapper. ">rcf_interpolate</a>( input_field, output_field, <a class="code" href="namespacercf__grid__type__mod.xhtml#abe624fec93aeb18fd3e67d36e389dcdf">input_grid</a>, &amp;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                              <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a>, interp_orog, orog_out )</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">! If using nearest neighbour we dont really care about transforming data.</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespacercf__interp__weights__mod.xhtml#a7805f50ef3aafe3d1b66d1ef581eca57" title="Read in via namelist. ">h_int_method</a> /= <a class="code" href="namespacercf__interp__weights__mod.xhtml#a5ffe101726819be4c66ae26c898368e1">nearest_neighbour</a> .AND. &amp;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;          .NOT. <a class="code" href="namespacercf__recon__mod.xhtml#a19af8a2b6550fb052727a0c368b6d445" title="Perform canopy snow throughfallLOGICAL :: l_canopy_snow_throughfall = .FALSE. ">l_interp_input_only</a>) <span class="keywordflow">THEN</span>             <span class="comment">! Convert fields back to original form (if possible) and</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="comment">! perform any simple post-processing required</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacercf__post__interp__transform__mod.xhtml#a0a9f729565f4986f12c2ef79546742ea">rcf_post_interp_transform</a>( output_field, fields_out,  &amp;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                                        field_count_out )</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a>( input_field )</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">! Data from Ancillary File</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keywordflow">Case</span>( <a class="code" href="namespacercf__data__source__mod.xhtml#aed20a99b437b95600fdeec4087c0ebe6">ancillary_file</a> )</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;      <span class="keywordflow">If</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,form) <span class="stringliteral">&#39;Ancillary field&#39;</span>, i,                       &amp;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                    fields_out( i ) % stashmaster % section,       &amp;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                    fields_out( i ) % stashmaster % item,          &amp;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                    fields_out( i ) % stashmaster % name</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">! Data to be set to zero</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="keywordflow">Case</span>( <a class="code" href="namespacercf__data__source__mod.xhtml#aa4d0c4977edb0ad1ac63a7e10c1522ec">set_to_zero</a> )</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;      <span class="keywordflow">If</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,form) <span class="stringliteral">&#39;Set to Zero, field&#39;</span>, i,                    &amp;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                    output_field % stashmaster % section,          &amp;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                    output_field % stashmaster % item,             &amp;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                    output_field % stashmaster % name</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;      <span class="keywordflow">Select Case</span> ( output_field % stashmaster % data_type )</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordflow">Case</span> ( ppx_type_real )</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;          output_field % Data( :, : ) = 0.0</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="keywordflow">Case</span> ( <a class="code" href="namespacecppxref__mod.xhtml#ac7a51e48487fc3f069d300616a516903">ppx_type_int</a> )</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;          output_field % Data_Int( : , : ) = 0</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="keywordflow">Case</span> ( <a class="code" href="namespacecppxref__mod.xhtml#a38e46a579ddd1f4c199d507e0ca92476">ppx_type_log</a> )</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;          output_field % Data_Log( : , : ) = .false.</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;          <span class="keywordflow">If</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Assuming zero means FALSE for logicals&#39;</span>, &amp;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="keywordflow">          End If</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="keywordflow">        Case Default</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Cannot set fields of this type to zero!&#39;</span>, &amp;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;              src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I7)&#39;</span>) <span class="stringliteral">&#39;ppx_type_? =&#39;</span>,&amp;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            output_field % stashmaster % data_type</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="keywordflow">      End Select</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">! Data to be set as missing</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keywordflow">Case</span>( <a class="code" href="namespacercf__data__source__mod.xhtml#acfff0540399f888342ce0ebffade811c">set_to_mdi</a> )</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;      <span class="keywordflow">If</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,form) <span class="stringliteral">&#39;Set to MDI &#39;</span>, i,                          &amp;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                    output_field % stashmaster % section,         &amp;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                    output_field % stashmaster % item,            &amp;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                    output_field % stashmaster % name</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;      <span class="keywordflow">Select Case</span> ( output_field % stashmaster % data_type )</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <span class="keywordflow">Case</span> ( ppx_type_real )</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;          output_field % Data( :, : ) = rmdi</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <span class="keywordflow">Case</span> ( <a class="code" href="namespacecppxref__mod.xhtml#ac7a51e48487fc3f069d300616a516903">ppx_type_int</a> )</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;          output_field % Data_Int( : , : ) = imdi</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="keywordflow">        Case Default</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Cannot set fields of this type to MDI!&#39;</span>, &amp;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;              src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="keywordflow">      End Select</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;-<span class="comment">! Tracer data</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;-    <span class="keywordflow">Case</span>( <a class="code" href="namespacercf__data__source__mod.xhtml#a9b2903eecaab5cb1e260e2706731daec">tracer_file</a> )</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;      <span class="keywordflow">If</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,form) <span class="stringliteral">&#39;Tracer file data &#39;</span>, i,                   &amp;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                    output_field % stashmaster % section,        &amp;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                    output_field % stashmaster % item,           &amp;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                    output_field % stashmaster % name</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;      <span class="comment">! Get Tracer File name from env var ATRACER</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;      <span class="keyword">Call </span>fort_get_env( <span class="stringliteral">&#39;ATRACER&#39;</span>, 7, tracerfilename, &amp;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                         max_filename_len, err )</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;      <span class="keywordflow">If</span> ( err /= 0 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Cannot get Tracer File name from Env Var ATRACER &#39;</span>, &amp;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        cmessage = <span class="stringliteral">&#39;Cannot get Tracer File name from Env Var ATRACER&#39;</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> ( routinename, err, cmessage)</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="keywordflow">      Endif</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">!     Check that Tracer File exists</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;      <span class="keyword">Inquire</span> ( <a class="code" href="parlbcs_8h.xhtml#a9bdcf7736b544227cbd66a99e5332d4d">file</a>=tracerfilename, exist=l_exist, iostat=iostatus )</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;      <span class="keywordflow">If</span> ( .not. l_exist ) <span class="keywordflow">then</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Tracer File does not exist.&#39;</span>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(2A)&#39;</span>) <span class="stringliteral">&#39;File : &#39;</span>,trim(tracerfilename)</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        errorstatus=10</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        cmessage = <span class="stringliteral">&#39;Tracer File does not exist.&#39;</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> ( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;      <span class="keyword">Call </span>rcf_get_unit( hdr_aux % UnitNum )</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacemodel__file.xhtml#a07b515dfc8147e86355cd71196399c5d">model_file_open</a>( hdr_aux % UnitNum, <span class="stringliteral">&#39;ATRACER&#39;</span>,7 ,0 ,0 ,err )</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__aux__file__mod.xhtml#ab7550f624f6519921a65463ab44e11bd">rcf_aux_file</a>( hdr_aux, hdr_out, fields_out, field_count_out,&amp;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                         <a class="code" href="s__dims_8h.xhtml#a71336cb4db3764ce46c12aa7d8a9b39b">tracers</a>, output_field % stashmaster % section,&amp;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                         output_field % stashmaster % item, imdi, imdi)</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;      <span class="keyword">Call </span>model_file_close( hdr_aux % UnitNum, <span class="stringliteral">&#39;ATRACER&#39;</span>,7 ,0 ,0 ,err )</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__fortranio__mod.xhtml#ae5e8f33a0b6098e34400d263dd0a2005">rcf_free_unit</a>( hdr_aux % UnitNum)</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__freeumhdr__mod.xhtml#a7202a2f34d2097eecff1ff2d965dd87a" title="Subroutine Rcf_FreeUMhdr - frees up used arrays etc. ">rcf_freeumhdr</a>( hdr_aux )</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;-<span class="comment">! Data to be set to constant from the namelist</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;-    <span class="keywordflow">Case</span>( <a class="code" href="namespacercf__data__source__mod.xhtml#a4331579b34b084d9f3058de84adfb609">set_to_const</a> )</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;      <span class="keywordflow">If</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,form) <span class="stringliteral">&#39;Set to user const&#39;</span>, i,                    &amp;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                    output_field % stashmaster % section,         &amp;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                    output_field % stashmaster % item,            &amp;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                    output_field % stashmaster % name</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;      <span class="keywordflow">Select Case</span> ( fields_out( i ) % stashmaster % data_type )</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        <span class="keywordflow">Case</span> ( ppx_type_real )</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;          output_field % Data( :, : ) = data_source( i ) % RConst</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        <span class="keywordflow">Case</span> ( <a class="code" href="namespacecppxref__mod.xhtml#ac7a51e48487fc3f069d300616a516903">ppx_type_int</a> )</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;          output_field % Data_Int( : , : ) =                         &amp;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                                     nint( data_source( i ) % RConst )</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keywordflow">Case</span> ( <a class="code" href="namespacecppxref__mod.xhtml#a38e46a579ddd1f4c199d507e0ca92476">ppx_type_log</a> )</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;          <span class="keywordflow">If</span> ( data_source( i ) % Rconst &gt; 0.5 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            output_field % Data_Log( : ,: ) = .true.</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;          <span class="keywordflow">Else</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            output_field % Data_Log( :, : ) = .false.</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="keywordflow">          End If</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="keywordflow">      End Select</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;-<span class="comment">! User prognostics from external dump</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;-    <span class="keywordflow">Case</span>( <a class="code" href="namespacercf__data__source__mod.xhtml#a14bebda0b1a056f50efaa872b8353cea">external_dump</a> )</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;      <span class="keywordflow">If</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,form) <span class="stringliteral">&#39;User Prognostic&#39;</span>, i,                     &amp;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                    output_field % stashmaster % section,        &amp;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                    output_field % stashmaster % item,           &amp;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                    output_field % stashmaster % name</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment">!     Check that ancillary file exists</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;      <span class="keyword">Inquire</span> ( <a class="code" href="parlbcs_8h.xhtml#a9bdcf7736b544227cbd66a99e5332d4d">file</a>=data_source( i ) % Ancil_File, &amp;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;               exist=l_exist, iostat=iostatus )</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;      <span class="keywordflow">If</span> ( .not. l_exist ) <span class="keywordflow">then</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(  <span class="stringliteral">&#39;User Prognostic File does not exist.&#39;</span>, &amp;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(2A)&#39;</span>) <span class="stringliteral">&#39;File : &#39;</span>,trim(data_source( i ) % Ancil_File)</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        errorstatus=10</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        cmessage = <span class="stringliteral">&#39;User Prognostic File does not exist.&#39;</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> ( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;      <span class="keyword">Call </span>rcf_get_unit( hdr_aux % UnitNum )</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacemodel__file.xhtml#a07b515dfc8147e86355cd71196399c5d">model_file_open</a>( hdr_aux % UnitNum, data_source( i ) % Ancil_File,&amp;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                        max_filename_len ,0 ,1 ,err )</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__aux__file__mod.xhtml#ab7550f624f6519921a65463ab44e11bd">rcf_aux_file</a>( hdr_aux, hdr_out, fields_out, field_count_out,&amp;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                     <a class="code" href="namespacercf__aux__file__mod.xhtml#aa0587b9c6a946b90353b475b79e782af">user_prog</a>, data_source( i ) % Ancil_SctnC,        &amp;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                     data_source( i ) % Ancil_ItemC,                   &amp;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                     output_field % stashmaster % section,             &amp;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                     output_field % stashmaster % item)</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;      <span class="keyword">Call </span>model_file_close(hdr_aux % UnitNum, data_source( i ) % Ancil_File,&amp;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                        max_filename_len ,1 ,0 ,err )</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__fortranio__mod.xhtml#ae5e8f33a0b6098e34400d263dd0a2005">rcf_free_unit</a>( hdr_aux % UnitNum)</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__freeumhdr__mod.xhtml#a7202a2f34d2097eecff1ff2d965dd87a" title="Subroutine Rcf_FreeUMhdr - frees up used arrays etc. ">rcf_freeumhdr</a>( hdr_aux )</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="comment">! Calculations for fields that are missing in the input dump.</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="comment">! These are skipped now and done in a later loop</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <span class="keywordflow">Case</span>( <a class="code" href="namespacercf__data__source__mod.xhtml#acd570385fd31f648cfdfe712005f5bce">field_calcs</a>)</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;      <span class="keywordflow">If</span> ( <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,form) <span class="stringliteral">&#39;Calcs. needed, skip&#39;</span>, i,                 &amp;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                    output_field % stashmaster % section,        &amp;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                    output_field % stashmaster % item,           &amp;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                    output_field % stashmaster % name</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="comment">! Unrecognised source for data - set it to missing</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="keywordflow">    Case Default</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;      errorstatus = -10</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;      cmessage = <span class="stringliteral">&#39;Source code not recognised - will set field to MDI&#39;</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;      <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;      <span class="keywordflow">If</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,form) <span class="stringliteral">&#39;Unknown source&#39;</span>, i,               &amp;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            output_field % stashmaster % section,         &amp;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            output_field % stashmaster % item, <span class="stringliteral">&#39;Set to MDI!&#39;</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;      <span class="keywordflow">Select Case</span> ( fields_out(i) % stashmaster % data_type )</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        <span class="keywordflow">Case</span> ( ppx_type_real )</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;          output_field % Data( :, : ) = rmdi</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;        <span class="keywordflow">Case</span> ( <a class="code" href="namespacecppxref__mod.xhtml#ac7a51e48487fc3f069d300616a516903">ppx_type_int</a> )</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;          output_field % Data_Int( : , : ) = imdi</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <span class="keywordflow">Case</span> ( <a class="code" href="namespacecppxref__mod.xhtml#a38e46a579ddd1f4c199d507e0ca92476">ppx_type_log</a> )</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;          output_field % Data_Log( :, : ) = .false.</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="keywordflow">      End Select</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="keywordflow">  End Select</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;-<span class="comment">! Write out data if required</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;-  <span class="keywordflow">If</span> ( data_source( i ) % Source /= <a class="code" href="namespacercf__data__source__mod.xhtml#a14bebda0b1a056f50efaa872b8353cea">external_dump</a>  .AND.  &amp;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;       data_source( i ) % Source /= <a class="code" href="namespacercf__data__source__mod.xhtml#a9b2903eecaab5cb1e260e2706731daec">tracer_file</a>    .AND.  &amp;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;       data_source( i ) % Source /= <a class="code" href="namespacercf__data__source__mod.xhtml#acd570385fd31f648cfdfe712005f5bce">field_calcs</a>    .AND.  &amp;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;       data_source( i ) % Source /= <a class="code" href="namespacercf__data__source__mod.xhtml#aed20a99b437b95600fdeec4087c0ebe6">ancillary_file</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacercf__write__field__mod.xhtml#a45aefec8543b2ff3e794f75dcf866138" title="Subroutine Rcf_Write_Field. ">rcf_write_field</a>( output_field, hdr_out, <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a> )</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;  <span class="keywordflow">IF</span> ( data_source( i ) % Source /= <a class="code" href="namespacercf__data__source__mod.xhtml#aed20a99b437b95600fdeec4087c0ebe6">ancillary_file</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a>( output_field )</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="keywordflow">End Do</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="comment">! If using nearest neighbour we dont really care about fixing data.</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacercf__interp__weights__mod.xhtml#a7805f50ef3aafe3d1b66d1ef581eca57" title="Read in via namelist. ">h_int_method</a> /= <a class="code" href="namespacercf__interp__weights__mod.xhtml#a5ffe101726819be4c66ae26c898368e1">nearest_neighbour</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="comment">! We need to always fix the winds even if we are just interpolating so lets do</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="comment">! that now.</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;  <span class="keywordflow">IF</span> ( <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % global ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <span class="comment">! Find the polar and non-polar winds.  Depends on staggering.</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    <span class="keywordflow">If</span> (hdr_out % Fixhd( <a class="code" href="namespacercf__headaddress__mod.xhtml#a6388c19d76913de952b36571eec60513">fh_gridstagger</a> ) == <a class="code" href="namespacercf__headaddress__mod.xhtml#aac45c7fceea7edb3c45819734466bffd">fh_gridstagger_endgame</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;      stashcode_onpole  = <a class="code" href="namespacercf__stashcodes__mod.xhtml#a579fb1c9540fa85b4aad572d531bec83">stashcode_v</a></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;      stashcode_offpole = <a class="code" href="namespacercf__stashcodes__mod.xhtml#a2780b8e8f969c4b385a4c204d458958d" title="Stashcodes used in the reconfiguration. ">stashcode_u</a></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    <span class="keywordflow">Else</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;      stashcode_onpole  = <a class="code" href="namespacercf__stashcodes__mod.xhtml#a2780b8e8f969c4b385a4c204d458958d" title="Stashcodes used in the reconfiguration. ">stashcode_u</a></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;      stashcode_offpole = <a class="code" href="namespacercf__stashcodes__mod.xhtml#a579fb1c9540fa85b4aad572d531bec83">stashcode_v</a></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="keywordflow">    End if</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;     <span class="comment">! Locate polar wind.</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    <span class="keyword">Call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a>( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, stashcode_onpole,                     &amp;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                     fields_out, field_count_out, pos)</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    polar_wind =&gt; fields_out(pos)</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;     <span class="comment">! Only need to perform average of polar wind if we are interpolating</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    <span class="keywordflow">If</span> ( polar_wind % interp == <a class="code" href="namespacercf__set__interp__flags__mod.xhtml#a850845a708fdb6496b10a52ee6fbe2b2">interp_done</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;      <span class="comment">! Allocate and read polar wind.</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a>( polar_wind )</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__read__field__mod.xhtml#a31084c176946b7db5991b2cb66973198" title="Subroutine Rcf_Read_Field - read in a field. ">rcf_read_field</a>( polar_wind, hdr_out, <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a> )</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;           <span class="comment">! Locate, allocate and read non-polar wind.</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__locate__mod.xhtml#a985682ce12dc3e8ce5c19ee7f9839d81" title="Subroutine Rcf_Locate - locates a field in a field array. ">rcf_locate</a>( <a class="code" href="namespacercf__stashcodes__mod.xhtml#a09c7b58f0b34584ef03611891c71de27" title="Magic numbers for stashcodes used in the reconfiguration. ">stashcode_prog_sec</a>, stashcode_offpole,                  &amp;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                       fields_out, field_count_out, pos )</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;      non_polar_wind =&gt; fields_out(pos)</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#a534438d79b0ac0ce00bb3c7a3c4d14f1" title="Subroutine Rcf_Alloc_Field - allocates space Subroutine Rcf_Dealloc_Field - frees up space...">rcf_alloc_field</a>( non_polar_wind )</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__read__field__mod.xhtml#a31084c176946b7db5991b2cb66973198" title="Subroutine Rcf_Read_Field - read in a field. ">rcf_read_field</a>( non_polar_wind, hdr_out, <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a> )</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;       <span class="comment">! Perform calculation of polar wind.</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacercf__polar__wind__mod.xhtml#adbf818f1c9cbddfeadbd8ba65a8fba35" title="Subroutine Rcf_Polar_Wind - Averaging of Polar wind rows. ">rcf_polar_wind</a>( polar_wind, non_polar_wind,                         &amp;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                           hdr_out % RealC( <a class="code" href="namespacercf__headaddress__mod.xhtml#a3defdaa78e10cba8d75ac5c4dc9ac454">rc_longspacing</a>) )</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;       <span class="comment">! Write out field.</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__write__field__mod.xhtml#a45aefec8543b2ff3e794f75dcf866138" title="Subroutine Rcf_Write_Field. ">rcf_write_field</a>( polar_wind, hdr_out, <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a> )</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;       <span class="comment">! Deallocate.</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a>( polar_wind )</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;      <span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a>( non_polar_wind )</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="keywordflow">     END IF</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="comment">! Need to perform some field_calcs (8) before Post-Processing</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__pre__process__calcs__mod.xhtml#a2b4ee2cfc6f07ba98dbfa478507df0c9" title="Subroutine Rcf_Pre_Process_Calcs - field initialisation calculations. ">rcf_pre_process_calcs</a>( fields_in, fields_out, field_count_in,  &amp;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                              field_count_out, data_source, hdr_in, hdr_out )</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;  <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacercf__recon__mod.xhtml#a19af8a2b6550fb052727a0c368b6d445" title="Perform canopy snow throughfallLOGICAL :: l_canopy_snow_throughfall = .FALSE. ">l_interp_input_only</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="comment">! Perform post-processing</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacercf__post__process__mod.xhtml#abd81a99947cd0c226d25842ec46e1e95" title="Subroutine Rcf_Post_Process - process fields after `main loop&#39;. ">rcf_post_process_atmos</a>( fields_in, field_count_in, orog_in,    &amp;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                                 fields_out, field_count_out, orog_out, &amp;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                                 hdr_in, hdr_out, data_source)</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="comment">! Tidy up orography fields</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;<span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a>( orog_in )</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a>( orog_out )</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;<span class="keyword">Call </span><a class="code" href="namespacercf__alloc__field__mod.xhtml#ac402578df5f55f08bc742eef36bd403c" title="Dealloc_field frees up any allocated data. ">rcf_dealloc_field</a>( interp_orog )</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;<span class="comment">! If using nearest neighbour we dont really care about transforming data.</span></div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="comment">! We make sure field calcs is not performed in rcf_set_data_source for</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="comment">! nearest_neighbour interpolation.</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="comment">! Need to revisit the source = field_calcs (8) fields</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="keyword">Call </span><a class="code" href="namespacercf__field__calcs__mod.xhtml#aaf83a6a3cfce239d92cf41c835842415" title="Subroutine Rcf_Field_Calcs - field initialisation calculations. ">rcf_field_calcs</a>( fields_in, fields_out, field_count_in, &amp;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                      field_count_out, data_source, hdr_in, hdr_out )</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;-<span class="comment">! Rotate the winds if so required</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;-<span class="keywordflow">If</span> ((<a class="code" href="namespacercf__interp__weights__mod.xhtml#a9b2150be0910e9b55b10edb0a1a728a5">h_int_active_u</a> .OR. <a class="code" href="namespacercf__interp__weights__mod.xhtml#a36b858835378dbec7cf79ce5e2ed8c9b">h_int_active_v</a>) .AND. <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> % Rotated .AND. &amp;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    .NOT. <a class="code" href="namespacercf__interp__weights__mod.xhtml#a3c828ea7bee085a84fdb3f0113da9a6f">l_same_rotation</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;  <span class="keywordflow">If</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0 .AND. <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Rotating Output Winds&#39;</span>,src=<span class="stringliteral">&#39;rcf_create_dump_mod&#39;</span>)</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__rotate__mod.xhtml#ae2f64c6dfdd518835294ea66469228b2">rcf_rotate</a>( fields_out, field_count_out, <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a>, hdr_out, &amp;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;                   <a class="code" href="namespacedecomp__params.xhtml#a197e853bde7274df4b87ac6a3940a602">decomp_rcf_output</a>, <a class="code" href="namespacercf__rotate__mod.xhtml#a93405e3c2ccb06fb9b5b02d55b784e1c">fromstandard</a>)</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="keywordflow">End If</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;-<span class="comment">! Transplant Data</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;-<span class="keywordflow">If</span> ( <a class="code" href="namespacercf__recon__mod.xhtml#a7892b8cd7cd03d9efeeda1f6318b6739" title="Transplating of data. ">l_trans</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;  <span class="keyword">Call </span>rcf_get_unit( hdr_aux % UnitNum )</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacemodel__file.xhtml#a07b515dfc8147e86355cd71196399c5d">model_file_open</a>( hdr_aux % UnitNum, <span class="stringliteral">&#39;TRANSP&#39;</span>,6 ,0 ,0 ,err )</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__aux__file__mod.xhtml#ab7550f624f6519921a65463ab44e11bd">rcf_aux_file</a>( hdr_aux, hdr_out, fields_out, field_count_out,&amp;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                     <a class="code" href="namespacercf__aux__file__mod.xhtml#a3f075e62ac874768e47bfd1c1ff27ef5">transplant</a>, imdi, imdi, imdi, imdi)</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;  <span class="keyword">Call </span>model_file_close( hdr_aux % UnitNum, <span class="stringliteral">&#39;TRANSP&#39;</span>,6 ,0 ,0 ,err )</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__fortranio__mod.xhtml#ae5e8f33a0b6098e34400d263dd0a2005">rcf_free_unit</a>( hdr_aux % UnitNum)</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__freeumhdr__mod.xhtml#a7202a2f34d2097eecff1ff2d965dd87a" title="Subroutine Rcf_FreeUMhdr - frees up used arrays etc. ">rcf_freeumhdr</a>( hdr_aux )</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="keywordflow">End If</span></div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;-<span class="comment">! UARS Data</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;-<span class="keywordflow">If</span> ( <a class="code" href="namespacercf__recon__mod.xhtml#a24414ae5f1b674f8b5f3d91ef7dcff89" title="Switch for uars data. ">uars</a> ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;  <span class="keyword">Call </span>rcf_get_unit( hdr_aux % UnitNum )</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacemodel__file.xhtml#a07b515dfc8147e86355cd71196399c5d">model_file_open</a>( hdr_aux % UnitNum, <span class="stringliteral">&#39;SSU&#39;</span>,3 ,0 ,0 ,err )</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__aux__file__mod.xhtml#ab7550f624f6519921a65463ab44e11bd">rcf_aux_file</a>( hdr_aux, hdr_out, fields_out, field_count_out,&amp;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;                     <a class="code" href="namespacercf__aux__file__mod.xhtml#afa0e6dd5045608973b28e44107d1fb27">uars_data</a>, imdi, imdi, imdi, imdi)</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;  <span class="keyword">Call </span>model_file_close( hdr_aux % UnitNum, <span class="stringliteral">&#39;SSU&#39;</span>,3 ,0 ,0 ,err )</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__fortranio__mod.xhtml#ae5e8f33a0b6098e34400d263dd0a2005">rcf_free_unit</a>( hdr_aux % UnitNum)</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;  <span class="keyword">Call </span><a class="code" href="namespacercf__freeumhdr__mod.xhtml#a7202a2f34d2097eecff1ff2d965dd87a" title="Subroutine Rcf_FreeUMhdr - frees up used arrays etc. ">rcf_freeumhdr</a>( hdr_aux )</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;<span class="keywordflow">End If</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="keyword">End Subroutine </span><a class="code" href="namespacercf__create__dump__mod.xhtml#a2f1f869ea648718c07cc083ce73c40c9" title="Subroutine Rcf_Create_Dump - main dump creation loop. ">rcf_create_dump</a></div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="keyword">End Module </span><a class="code" href="namespacercf__create__dump__mod.xhtml" title="Dump creation `main loop&#39; Dump creation `main loop&#39;. ">rcf_create_dump_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
