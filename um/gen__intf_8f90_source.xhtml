<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/makebc/gen_intf.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_388401e7888a3285414e3f2ae76eb1e8.xhtml">makebc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">gen_intf.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="gen__intf_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="gen__intf_8f90.xhtml#a3a5d75b85aaab77921b7fcfe01845006" title="LL – SUBROUTINE GEN_INTF -!&gt;LL. ">gen_intf</a> (                                             &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;#include &quot;argd1.h&quot;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="gen__intf_8f90.xhtml#a3a5d75b85aaab77921b7fcfe01845006">   21</a></span>&#160;#include &quot;argduma.h&quot;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;#include &quot;argsts.h&quot;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;#include &quot;argptra.h&quot;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;#include &quot;arginfa.h&quot;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;     &amp;                     internal_model,ndustbin_in,ndustbin_out,     &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;     &amp;                     ICODE,CMESSAGE)</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacetypstsz__mod.xhtml" title="This file belongs in section: Top_level This file belongs in section: Top_level. ">typstsz_mod</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a><span class="keywordtype">, ONLY</span>:                                                     &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;          <a class="code" href="namespaceio.xhtml#a697a0c6022f3650289b1150987fad504">iodisksynchronise</a>,                                            &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;          <a class="code" href="namespaceio.xhtml#ade07b9db8d4954fd605a7212d5f46e2a">file_close</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <span class="keywordtype">USE </span>atm_fields_bounds_mod</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecontrol__max__sizes.xhtml" title="This file belongs in section: Misc. ">control_max_sizes</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;          max_intf_lbcrow_length,   &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;          <a class="code" href="namespacecontrol__max__sizes.xhtml#ae97a91129945b678aadb05fb880c1ca1">max_intf_lbcrows</a>,         &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;          <a class="code" href="namespacecontrol__max__sizes.xhtml#a9079fbafe9f8e66a79e2f70833ea85d0">max_intf_levels</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceintfcnsta__mod.xhtml" title="A module containing variables used to generate LBCs. ">intfcnsta_mod</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceum__input__control__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">um_input_control_mod</a><span class="keywordtype">,  ONLY</span>: model_domain</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacenlstgen__mod.xhtml" title="Control variables Control variables. ">nlstgen_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacenlstgen__mod.xhtml#a0983fa420ea4b5d3b150698b8d63d18d">llboutim</a></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacenlstcall__mod.xhtml" title="Control variables Control variables. ">nlstcall_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacenlstcall__mod.xhtml#af1bbffacd66a28fbf2aaa5e2a6f2c16e">ft_steps</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacechsunits__mod.xhtml" title="copied from include file chsunits.h ">chsunits_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacechsunits__mod.xhtml#af6e26d3a6a1fedf0b44203712a772f8e">nunits</a></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;          <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;          <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a> </div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumflush__mod.xhtml" title="– SUBROUTINE umFlush!&gt; Purpose: A wrapper script for the flush intrinsic ">umflush_mod</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacefile__units__mod.xhtml">file_units_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacefile__units__mod.xhtml#a21ad99eade3c51380f41db5679ab7ed5">ft_environ</a>, <a class="code" href="namespacefile__units__mod.xhtml#a347ca6d6a8fb4c82d7fa2743f5115418">len_ft_envir</a></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#include &quot;cintfa.h&quot;</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typsize.h&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typd1.h&quot;</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typduma.h&quot;</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typsts.h&quot;</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typptra.h&quot;</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typinfa.h&quot;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;     &amp;     internal_model,                                              &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                           <span class="comment">! Sub-model indicator</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;     &amp;       icode         <span class="comment">! Return code : =0 Normal exit</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ndustbin_in, ndustbin_out</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span> CMESSAGE   <span class="comment">! Error message if ICODE &gt; 0</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;ctime.h&quot;</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;chistory.h&quot;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;lbc_coup.h&quot;</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor"></span>      <span class="keywordtype">integer</span> lbc_ntimes     <span class="comment">! No of times BC&#39;s have been generated.</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      <span class="keywordtype">integer</span> ierr           <span class="comment">! Error code</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keywordtype">integer</span> info           <span class="comment">! Return code from GCOM routine.</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <span class="keywordtype">CHARACTER(LEN=8)</span> ch_date2   <span class="comment">! Date returned from date_and_time.</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">CHARACTER(LEN=10)</span> ch_time2  <span class="comment">! Time returned from date_and_time.</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordtype">INTEGER</span> NFTOUT</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordtype">INTEGER</span>      JINTF            <span class="comment">! Interface area index</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="keywordtype">INTEGER</span>      IM_IDENT   <span class="comment">! internal model identifier</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordtype">INTEGER</span>      IM_INDEX   <span class="comment">! internal model index for STASH arrays</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <span class="keywordtype">INTEGER</span>      JSH   <span class="comment">! pointer for ocean surface height field.</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      <span class="keywordtype">INTEGER</span>      STASHMACRO_TAG <span class="comment">! tag for ocean surface height in D1.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="keywordtype">Integer</span> :: lasize_p, lasize_u, lasize_v</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;GEN_INTF&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      im_ident = internal_model</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      im_index = <a class="code" href="namespacesubmodel__mod.xhtml#a5a10dac97f579ecbf0c1c1879901e2e0" title="Sequence number of internal model indexed by internal model identifier required to map from id to STA...">internal_model_index</a>(im_ident)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;       icode=0</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;       cmessage=<span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespacenlstgen__mod.xhtml#a0983fa420ea4b5d3b150698b8d63d18d">llboutim</a>(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! Atmosphere Interface</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">! 1.0 Loop over all areas</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">DO</span> jintf=1,n_intf_a</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">!     Determine if interface data required this timestep</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;          <span class="keywordflow">IF</span> (interface_stepsim(jintf,<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">IF</span> ( mod(stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)-interface_fstepim(jintf,<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>),        &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;     &amp;      interface_stepsim(jintf,<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)) == 0                         &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;     &amp;      .AND. stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) &gt;= interface_fstepim(jintf,<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)         &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;     &amp;      .AND. stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) &lt;= interface_lstepim(jintf,<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;               <span class="comment">! Always print out this information to make sure LBCs are</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;               <span class="comment">! generated at the correct time.</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;               <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I9,A,I2)&#39;</span>) <span class="stringliteral">&#39;Gen_Intf: Timestep &#39;</span>,stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>), &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;     &amp;         <span class="stringliteral">&#39; : Generate Atmos LBCs for Area &#39;</span>,<a class="code" href="namespaceintfcnsta__mod.xhtml#a0846920231b7e6d14be3d09d0f3e09bc">lbc_stream_a</a>(jintf)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;               <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">! DEPENDS ON: intf_unit</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;               <span class="keyword">call </span><a class="code" href="intf__unit_8f90.xhtml#ac540c9a2b1bbfa7bf5cee27f15a6172f" title="This file belongs in section: MakeBC. ">intf_unit</a> (1,jintf,nftout)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;               <span class="keywordflow">If</span> (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) == 0 .and.                              &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;     &amp;             model_domain  ==  mt_lam) <span class="keywordflow">Then</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">!                U and V are not set in the halos. Fill with sensible</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">!                data. Required to un-rotate U &amp; V in Gen_Intf if</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">!                generating LBCs from a LAM run.</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">! DEPENDS ON: fill_external_halos</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                 <span class="keyword">Call </span><a class="code" href="fill__external__halos_8f90.xhtml#a9f4e1e061e136821fb9a51281a5e69c2" title="Routine for filling in External Halos. ">fill_external_halos</a> (d1(ju(1)),                   &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;     &amp;                row_length, rows, model_levels, offx, offy)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">! DEPENDS ON: fill_external_halos</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                 <span class="keyword">Call </span><a class="code" href="fill__external__halos_8f90.xhtml#a9f4e1e061e136821fb9a51281a5e69c2" title="Routine for filling in External Halos. ">fill_external_halos</a> (d1(jv(1)),                   &amp;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;     &amp;                row_length, n_rows, model_levels, offx, offy)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">! DEPENDS ON: fill_external_halos</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                 <span class="keyword">Call </span><a class="code" href="fill__external__halos_8f90.xhtml#a9f4e1e061e136821fb9a51281a5e69c2" title="Routine for filling in External Halos. ">fill_external_halos</a> (d1(ju_adv(1)),               &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;     &amp;                row_length, rows, model_levels, halo_i, halo_j)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">! DEPENDS ON: fill_external_halos</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                 <span class="keyword">Call </span><a class="code" href="fill__external__halos_8f90.xhtml#a9f4e1e061e136821fb9a51281a5e69c2" title="Routine for filling in External Halos. ">fill_external_halos</a> (d1(jv_adv(1)),               &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;     &amp;                row_length, n_rows, model_levels, halo_i, halo_j)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordflow">               End If</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;               <span class="keywordflow">If</span> (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) &gt; 0 .and.                               &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;     &amp;             model_domain == mt_lam) <span class="keywordflow">Then</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">! DEPENDS ON: swap_bounds</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                 <span class="keyword">Call </span><a class="code" href="swap__bounds-swpbnd2a_8f90.xhtml#aa0269e41062e156c437596022ea9ccd0" title="Portable GCOM based version SWAP_BOUNDS. ">swap_bounds</a> (d1(ju(1)),                           &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;     &amp;                row_length, rows, model_levels, offx, offy,       &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;     &amp;                fld_type_u,.true.)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">! DEPENDS ON: swap_bounds</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                 <span class="keyword">Call </span><a class="code" href="swap__bounds-swpbnd2a_8f90.xhtml#aa0269e41062e156c437596022ea9ccd0" title="Portable GCOM based version SWAP_BOUNDS. ">swap_bounds</a> (d1(jv(1)),                           &amp;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;     &amp;                row_length, n_rows, model_levels, offx, offy,     &amp;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;     &amp;                fld_type_v,.true.)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">! DEPENDS ON: swap_bounds</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                 <span class="keyword">Call </span><a class="code" href="swap__bounds-swpbnd2a_8f90.xhtml#aa0269e41062e156c437596022ea9ccd0" title="Portable GCOM based version SWAP_BOUNDS. ">swap_bounds</a> (d1(ju_adv(1)),                       &amp;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;     &amp;                row_length, rows, model_levels, halo_i, halo_j,   &amp;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;     &amp;                fld_type_u,.true.)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">! DEPENDS ON: swap_bounds</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                 <span class="keyword">Call </span><a class="code" href="swap__bounds-swpbnd2a_8f90.xhtml#aa0269e41062e156c437596022ea9ccd0" title="Portable GCOM based version SWAP_BOUNDS. ">swap_bounds</a> (d1(jv_adv(1)),                       &amp;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;     &amp;                row_length, n_rows, model_levels, halo_i, halo_j, &amp;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;     &amp;                fld_type_v,.true.)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keywordflow">               End If</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">!     Call GEN_INTF_A to generate Atmosphere LBCs for this area.</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">! DEPENDS ON: gen_intf_a</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;               <span class="keyword">call </span><a class="code" href="gen__intf__a_8f90.xhtml#aec7632da735c06fb84a6060004da4550" title="Generates Atmosphere Lateral Boundary Conditions. ">gen_intf_a</a> (                                        &amp;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="preprocessor">#include &quot;argduma.h&quot;</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;arginfa.h&quot;</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;argptra.h&quot;</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;argsts.h&quot;</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor"></span>     &amp;              jintf                                               &amp;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;     &amp;,             nftout                                              &amp;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;     &amp;,             d1                                                  &amp;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;     &amp;,             <a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a>                                            &amp;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;     &amp;,             ndustbin_in                                         &amp;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;     &amp;,             ndustbin_out                                        &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;     &amp; )</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                <span class="keywordflow">IF</span> (icode /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                  <span class="keywordflow">GO TO</span> 9999   <span class="comment">!  Return</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordflow">                ENDIF</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;          <span class="keywordflow">if</span> (l_lbc_coup .and.                                          &amp;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;     &amp;        <a class="code" href="namespaceintfcnsta__mod.xhtml#a0846920231b7e6d14be3d09d0f3e09bc">lbc_stream_a</a>(jintf) == <a class="code" href="lbc__coup_8h.xhtml#a4bef7fe6a46f32353ab55c6cea9fd43e">um_lbc_stream</a>) <span class="keywordflow">then</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">!           Flush buffer to send latest BC&#39;s to file.</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                            <span class="comment">! Flush out all boundary data from buffer.</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a697a0c6022f3650289b1150987fad504">iodisksynchronise</a>(nftout)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keywordflow">            endif</span>  <span class="comment">!  if mype=0</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">!           Broadcast ICODE to all PE&#39;s</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            ierr=icode</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keyword">call </span>gc_ibcast(450,1,0,nproc,info,ierr)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            icode = ierr</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">!           Check ICODE before proceeding.</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keywordflow">if</span> (icode /= 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; GENINTF - Error detected&#39;</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; CMESSAGE : &#39;</span>,cmessage</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; ICODE : &#39;</span>,icode</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;              <span class="keywordflow">go to</span> 9999  <span class="comment">!  Return</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordflow">            endif</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">!           Get the number of times BC&#39;s have been generated.</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            lbc_ntimes = ft_lastfield(nftout)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; gl : after gen_intf - lbc_ntimes &#39;</span>,           &amp;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;     &amp;      lbc_ntimes</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">!             Send message to communication file that next lot of</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">!             BC&#39;s have been generated.</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;              <span class="keyword">write</span> (190,*) lbc_ntimes</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">!             Flush message out.</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;              <span class="keyword">call </span><a class="code" href="namespaceumflush__mod.xhtml#a3a003ab59990bdcb712b443dd5e0d1cd">umflush</a> (190,icode)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;              <span class="keywordflow">if</span> (icode /= 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Return Code from FLUSH &#39;</span>,icode</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                icode = 503</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <span class="keyword">write</span> (cmessage,*) <span class="stringliteral">&#39;GENINTF : Error flushing out &#39;</span>//    &amp;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;     &amp;          <span class="stringliteral">&#39;contents for Unit 190.&#39;</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                <span class="keywordflow">go to</span> 150</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordflow">              endif</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">!             Write a text message that next lot of BC&#39;s have</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">!             been generated.</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;              <span class="keyword">call </span>date_and_time(ch_date2, ch_time2)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;              <span class="keywordflow">if</span> (<a class="code" href="lbc__coup_8h.xhtml#a693d7b511046573a5c3475611fa00156">lbc_fc_hrs</a> &gt;= 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                <span class="keyword">write</span> (191,*)                                           &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;     &amp;          ch_time2(1:2),<span class="stringliteral">&#39;:&#39;</span>,ch_time2(3:4),<span class="stringliteral">&#39;:&#39;</span>,ch_time2(5:6),      &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;     &amp;          <span class="stringliteral">&#39; Boundary data has been generated for T+&#39;</span>,<a class="code" href="lbc__coup_8h.xhtml#a693d7b511046573a5c3475611fa00156">lbc_fc_hrs</a></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;              <span class="keywordflow">else</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                <span class="keyword">write</span> (191,*)                                           &amp;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;     &amp;          ch_time2(1:2),<span class="stringliteral">&#39;:&#39;</span>,ch_time2(3:4),<span class="stringliteral">&#39;:&#39;</span>,ch_time2(5:6),      &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;     &amp;          <span class="stringliteral">&#39; Boundary data has been generated for T&#39;</span>,<a class="code" href="lbc__coup_8h.xhtml#a693d7b511046573a5c3475611fa00156">lbc_fc_hrs</a></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keywordflow">              endif</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">!             Flush message out.</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;              <span class="keyword">call </span><a class="code" href="namespaceumflush__mod.xhtml#a3a003ab59990bdcb712b443dd5e0d1cd">umflush</a> (191,icode)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;              <span class="keywordflow">if</span> (icode /= 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Return Code from FLUSH &#39;</span>,icode</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                icode = 504</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                <span class="keyword">write</span> (cmessage,*) <span class="stringliteral">&#39;GENINTF : Error flushing out &#39;</span>//    &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;     &amp;          <span class="stringliteral">&#39;contents for Unit 191.&#39;</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                <span class="keywordflow">go to</span> 150</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keywordflow">              endif</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keywordflow">            endif</span>  <span class="comment">!  if mype=0</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            <span class="keyword">call </span>date_and_time(ch_date2, ch_time2)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;LBC_COUP: &#39;</span>,                                    &amp;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;     &amp;      ch_time2(1:2),<span class="stringliteral">&#39;:&#39;</span>,ch_time2(3:4),<span class="stringliteral">&#39;:&#39;</span>,ch_time2(5:6),<span class="stringliteral">&#39; on &#39;</span>,          &amp;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;     &amp;      ch_date2(7:8),<span class="stringliteral">&#39;/&#39;</span>,ch_date2(5:6),<span class="stringliteral">&#39;/&#39;</span>,ch_date2(1:4),                 &amp;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;     &amp;      <span class="stringliteral">&#39; Timestep &#39;</span>,stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>),                                         &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;     &amp;      <span class="stringliteral">&#39; Boundary conditions generated.&#39;</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">!           If all boundary conditions have been generated, add</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">!           value 7777 to end of file.</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <span class="keywordflow">if</span> (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)  ==  interface_lstepim(jintf,<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)) <span class="keywordflow">then</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;              lbc_ntimes = 7777</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; gl : after gen_intf - lbc_ntimes &#39;</span>,         &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;     &amp;        lbc_ntimes</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;              <span class="keywordflow">if</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">!               Write to communication file and flush.</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                <span class="keyword">write</span> (190,*) lbc_ntimes</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                <span class="keyword">call </span><a class="code" href="namespaceumflush__mod.xhtml#a3a003ab59990bdcb712b443dd5e0d1cd">umflush</a> (190,icode)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                <span class="keywordflow">if</span> (icode /= 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Return Code from FLUSH &#39;</span>,icode</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                  icode = 506</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                  <span class="keyword">write</span> (cmessage,*) <span class="stringliteral">&#39;GENINTF : Error flushing out &#39;</span>//  &amp;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;     &amp;            <span class="stringliteral">&#39;contents for Unit 190.&#39;</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                  <span class="keywordflow">go to</span> 150</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordflow">                endif</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">!               Write text message and flush.</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                <span class="keyword">write</span> (191,*) <span class="stringliteral">&#39; All Boundary data has been generated.&#39;</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                <span class="keyword">call </span><a class="code" href="namespaceumflush__mod.xhtml#a3a003ab59990bdcb712b443dd5e0d1cd">umflush</a> (191,icode)</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                <span class="keywordflow">if</span> (icode /= 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;Return Code from FLUSH &#39;</span>,icode</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                  icode = 507</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                  <span class="keyword">write</span> (cmessage,*) <span class="stringliteral">&#39;GENINTF : Error flushing out &#39;</span>//  &amp;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;     &amp;            <span class="stringliteral">&#39;contents for Unit 191.&#39;</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                  <span class="keywordflow">go to</span> 150</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keywordflow">                endif</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="keywordflow">              endif</span>  <span class="comment">!  if mype=0</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)                                               &amp;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;     &amp;        <span class="stringliteral">&#39;LBC_COUP: GEN_INTF - All Boundary Conditions generated &#39;</span>,       &amp;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;     &amp;        <span class="stringliteral">&#39;for stream &#39;</span>,jintf</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="keywordflow">            endif</span>   <span class="comment">!  if stepim(a_im)</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160; 150        <span class="keywordflow">continue</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">!           Broadcast ICODE to all PEs.</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;            ierr=icode</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            <span class="keyword">call </span>gc_ibcast(450,1,0,nproc,info,ierr)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            icode = ierr</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">!           Check ICODE before proceeding.</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <span class="keywordflow">if</span> (icode /= 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; GENINTF - Error detected&#39;</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; ICODE : &#39;</span>,icode</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39; CMESSAGE : &#39;</span>,cmessage</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;              <span class="keywordflow">go to</span> 9999  <span class="comment">!  Return</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keywordflow">            endif</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="keywordflow">          endif</span>  <span class="comment">!  if l_lbc_coup</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">!         Close file if no more LBCs</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">!         Reinitialised files are closed in Gen_Intf</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;          <span class="keywordflow">if</span> (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) == interface_lstepim(jintf,<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) .and.       &amp;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;     &amp;        <a class="code" href="namespacenlstcall__mod.xhtml#af1bbffacd66a28fbf2aaa5e2a6f2c16e">ft_steps</a>(nftout) == 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            <span class="keyword">call </span><a class="code" href="namespaceio.xhtml#ade07b9db8d4954fd605a7212d5f46e2a">file_close</a> (nftout,<a class="code" href="namespacefile__units__mod.xhtml#a21ad99eade3c51380f41db5679ab7ed5">ft_environ</a>(nftout),                 &amp;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;     &amp;                       <a class="code" href="namespacefile__units__mod.xhtml#a347ca6d6a8fb4c82d7fa2743f5115418">len_ft_envir</a>(nftout),1,0,icode)</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <span class="keywordflow">If</span> (printstatus &gt;= prstatus_normal) <span class="keywordflow">Then</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I9,A,I2)&#39;</span>) <span class="stringliteral">&#39;Gen_Intf: Timestep &#39;</span>,stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>),&amp;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;     &amp;        <span class="stringliteral">&#39; : LBC file closed for Area &#39;</span>,<a class="code" href="namespaceintfcnsta__mod.xhtml#a0846920231b7e6d14be3d09d0f3e09bc">lbc_stream_a</a>(jintf)</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keywordflow">            End If</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="keywordflow">          End If</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="keywordflow">          ENDIF</span>  <span class="comment">!  if (mod(step...</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="keywordflow">        ENDIF</span>    <span class="comment">!  if (interface_steps...</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="keywordflow">      ENDDO</span>      <span class="comment">!  Loop over JINTF</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! llboutim(A_IM)</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160; 9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;GEN_INTF&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="gen__intf_8f90.xhtml#a3a5d75b85aaab77921b7fcfe01845006" title="LL – SUBROUTINE GEN_INTF -!&gt;LL. ">gen_intf</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
