<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/qxreconf/rcf_address_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_448e69cd1e368218ef2123538d498dc2.xhtml">qxreconf</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">rcf_address_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="rcf__address__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno"><a class="line" href="namespacercf__address__mod.xhtml">    4</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacercf__address__mod.xhtml" title="Calculates addressing of the output dump Calculates addressing of the output dump. ">rcf_address_mod</a></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__ppx__info__mod.xhtml" title="Defines the STASHmaster record Defines the STASHmaster record. ">rcf_ppx_info_mod</a><span class="keywordtype">, Only</span> :    &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <a class="code" href="structrcf__ppx__info__mod_1_1stm__record__type.xhtml" title="Define STMrecord type - to hold STASHmaster records Note that as these are in a sequence and are inte...">stm_record_type</a>,            &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="namespacercf__ppx__info__mod.xhtml#ae3c0e08f09c502ebef775d5dff34b4dd" title="Referencing for the above. ">ppxptr</a>,                     &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    ppxref_sections,            &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    ppxref_items,               &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="namespacercf__ppx__info__mod.xhtml#a34dfc46102ce01ab3da2d1e6c1a3ebaa" title="Length of Option and Version Codes. ">stm_optcodelen</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__address__vars__mod.xhtml" title="Storage of Addressing variables Storage of Addressing variables. ">rcf_address_vars_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a>,                &amp; <span class="comment">! Space code</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    igp,                   &amp; <span class="comment">! Grid of data code</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    ilev,                  &amp; <span class="comment">! Level type code</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    ibot,                  &amp; <span class="comment">! First level code</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    itop,                  &amp; <span class="comment">! Last level code</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    iflag,                 &amp; <span class="comment">! Level compression flag</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    iopn,                  &amp; <span class="comment">! Sectional option code</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    vmsk,                  &amp; <span class="comment">! Integer equiv of bin vers mask</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    ipseudo,               &amp; <span class="comment">! Pseudo dimension type</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    ipfirst,               &amp; <span class="comment">! First pseudo dim code</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    iplast,                &amp; <span class="comment">! Last pseudo dim code</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    halo                     <span class="comment">! Halo type code</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">Contains</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;-<span class="comment">! This routine determines the Addressing of the output dump for</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacercf__address__mod.xhtml#a570cd49fe16b950c48ee2e6567445bfd" title="reconfiguration - includes calls to primary etc to determine which fields are included. ">rcf_address</a>(input_lookup)</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="namespacercf__address__mod.xhtml#a570cd49fe16b950c48ee2e6567445bfd">   65</a></span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__exppx__mod.xhtml" title="Extract a STASHmaster record Extract a STASHmaster record. ">rcf_exppx_mod</a><span class="keywordtype">, Only</span> :      &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="namespacercf__exppx__mod.xhtml#a88789ab4ab32d603dfdd4b9b0c492604" title="Subroutine Rcf_Exppx - extract a STASHmaster record. ">rcf_exppx</a></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a><span class="keywordtype">, Only</span> :       &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="namespacesubmodel__mod.xhtml#a632aec067eb5d42141b256110bc535e6">n_internal_model</a>,          &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="namespacesubmodel__mod.xhtml#a40aa2802d4c1bc907a09b61125bbf6aa">submodel_ident</a>,            &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="namespacesubmodel__mod.xhtml#a5092dbc1d61f993dd48179eebb392464" title="Submodel identifier for each internal model in list. ">submodel_for_im</a>,           &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="namespacesubmodel__mod.xhtml#ac58c30a98e5710630a465e3c2c4e79a6">internal_model_list</a>,       &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="namespacesubmodel__mod.xhtml#ac45178c91889287297973792440451fc" title="Max no. of subm. dump parts (1 more for expansion according to csubmmax.h) ">n_submodel_partition_max</a></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__model__mod.xhtml" title="Data module defining STSHCOMP namelist Data module defining STSHCOMP namelist. ">rcf_model_mod</a><span class="keywordtype">, Only</span> :      &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="namespacercf__model__mod.xhtml#a2d24a6d74b4d8c75d12343b4a1e35d15" title="Total length of extra space for each submod. data part. ">lextra</a></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__nrecon__mod.xhtml" title="Output dump addressing arrays Output dump addressing arrays. ">rcf_nrecon_mod</a>             <span class="comment">! Use all of this...</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__recon__mod.xhtml" title="data module defining RECON namelist data module defining RECON namelist ">rcf_recon_mod</a><span class="keywordtype">, Only</span> :      &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    var_recon</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacelookup__addresses.xhtml#a4f2a173b22a48250d86265493664e6ad">item_code</a></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">OPTIONAL</span>, <span class="keywordtype">INTENT(IN)</span> :: input_lookup(:,:)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordtype">Integer</span>    :: Im_ident  <span class="comment">!Internal model identifier (absolute - CSMID)</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keywordtype">Integer</span>    :: Im_index  <span class="comment">!Internal model index (expt. dependent)</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordtype">Integer</span>    :: Sm_ident  <span class="comment">!Submodel identifier (absolute)</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordtype">Integer</span>    :: ISEC</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keywordtype">Integer</span>    :: IITM</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">Integer</span>    :: RLEVS</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keywordtype">Integer</span>    :: RADDRESS</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keywordtype">Integer</span>    :: PIrow</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keywordtype">Integer</span>    :: I</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordtype">Integer</span>    :: ErrorStatus</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keywordtype">Integer</span>    :: item_code_val</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keywordtype">Logical</span>    :: LADDR</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keywordtype">Logical</span>    :: LMASK</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keywordtype">Logical</span>    :: input_only</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordtype">Character (Len=80)</span> :: Cmessage</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">! Local arrays:</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">!    Submodel definitions array: stores list of Im_index&#39;s</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">!     for each submodel partition</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordtype">Integer</span> SM_def(<a class="code" href="namespacesubmodel__mod.xhtml#ac45178c91889287297973792440451fc" title="Max no. of subm. dump parts (1 more for expansion according to csubmmax.h) ">n_submodel_partition_max</a>,n_internal_model_max)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! Local structures</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;type(<a class="code" href="structrcf__ppx__info__mod_1_1stm__record__type.xhtml" title="Define STMrecord type - to hold STASHmaster records Note that as these are in a sequence and are inte...">stm_record_type</a>) :: stm_rec</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">! 1.  Set STASHIN addresses and input lengths for primary fields</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">!   The address loop for primary fields is performed for each</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">!   internal model in turn. Hence, each internal model&#39;s primary</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">!   data occupies a contiguous block in D1. The order of these blocks</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">!   is the same as the order of the internal models given in the</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">!   array INTERNAL_MODEL_LIST.</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">!   User-defined prognostics are included in this primary addressing</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">!   routine, since they are incorporated into the ppxref lookup</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">!   arrays PPXI, PPXC in routine GETPPX.</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">!   Initialisation</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<a class="code" href="namespacercf__nrecon__mod.xhtml#ae2e40eebe1421a154bc0b63f7ed149eb">primdatalen</a>(:)   = 0</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;sm_def( :, : )   = 0</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keywordflow">IF</span> (<span class="keyword">PRESENT</span>(input_lookup)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  input_only = .true.</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  input_only = .false.</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">!   Obtain submodel definitions and store in SMdef array</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordflow">Do</span> im_index = 1,<a class="code" href="namespacesubmodel__mod.xhtml#a632aec067eb5d42141b256110bc535e6">n_internal_model</a></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;   <span class="comment">!   Submodel ident.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;   sm_ident =   <a class="code" href="namespacesubmodel__mod.xhtml#a5092dbc1d61f993dd48179eebb392464" title="Submodel identifier for each internal model in list. ">submodel_for_im</a>(im_index)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;   <span class="comment">!   Internal model index</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;   sm_def(sm_ident,im_index) = im_index</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keywordflow">End Do</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">!   Primary address loop</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">!     Loop over submodel partitions</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keywordflow">Do</span>  sm_ident = 1,<a class="code" href="namespacesubmodel__mod.xhtml#ac45178c91889287297973792440451fc" title="Max no. of subm. dump parts (1 more for expansion according to csubmmax.h) ">n_submodel_partition_max</a></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="comment">!       Initialise LEXTRA</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <a class="code" href="namespacercf__model__mod.xhtml#a2d24a6d74b4d8c75d12343b4a1e35d15" title="Total length of extra space for each submod. data part. ">lextra</a>(sm_ident)=0</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="comment">!     Initialise address for reconfiguration</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  raddress = 1</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="comment">!      Loop over internal models for each SM partition</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keywordflow">Do</span> im_index = 1,<a class="code" href="namespacesubmodel__mod.xhtml#a632aec067eb5d42141b256110bc535e6">n_internal_model</a></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;       <span class="comment">!       Test whether current SM contains this IM</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">If</span> (sm_def(sm_ident,im_index) &gt; 0) <span class="keywordflow">Then</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="comment">!        Obtain internal model identifier</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      im_ident   = <a class="code" href="namespacesubmodel__mod.xhtml#ac58c30a98e5710630a465e3c2c4e79a6">internal_model_list</a>(im_index)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      <span class="keywordflow">If</span>(im_ident == <a class="code" href="namespacesubmodel__mod.xhtml#a40aa2802d4c1bc907a09b61125bbf6aa">submodel_ident</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        pirow  = 0</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="comment">! Now that reconfiguration can take place over any section for VAR loop</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="comment">! over all sections</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">Do</span> isec = 0,ppxref_sections</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;          <span class="keywordflow">If</span> (isec == 0  .OR.    &amp; <span class="comment">! Prognostic variables</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;              isec == 33 .OR.    &amp; <span class="comment">! Free tracers</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;              isec == 34 .OR.    &amp; <span class="comment">! UKCA tracers</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;              var_recon  .OR.    &amp; <span class="comment">! VAR reconfiguration</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;              input_only) <span class="keywordflow">Then</span>     <span class="comment">! Input fields only.</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="comment">!       Loop over wanted section items</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <a class="code" href="namespacercf__nrecon__mod.xhtml#a04a64d39dd90cc3f564fdd80b2c51cd0">recondat_node</a> =&gt; <a class="code" href="namespacercf__nrecon__mod.xhtml#a279e920abfd9ebe512fcf8c3a2e0e030">recondatlist</a>( im_index, isec )            <span class="keywordflow">Do</span> iitm   = 1,ppxref_items</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;              <span class="comment">!   Check whether there is a primary field corresponding</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;              <span class="comment">!   to this item number</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;              <span class="keywordflow">If</span> ( <a class="code" href="namespacercf__ppx__info__mod.xhtml#ae3c0e08f09c502ebef775d5dff34b4dd" title="Referencing for the above. ">ppxptr</a>( im_ident, isec, iitm) /= 0) <span class="keywordflow">Then</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                stm_rec = <a class="code" href="namespacercf__exppx__mod.xhtml#a88789ab4ab32d603dfdd4b9b0c492604" title="Subroutine Rcf_Exppx - extract a STASHmaster record. ">rcf_exppx</a>( im_ident, isec, iitm )</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                vmsk    = stm_rec % version_mask</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                <a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a>  = stm_rec % space_code</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                igp     = stm_rec % grid_type</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                ilev    = stm_rec % lv_code</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                ibot    = stm_rec % lb_code</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                itop    = stm_rec % lt_code</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                halo    = stm_rec % halo_type</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                <span class="keywordflow">Do</span> i = 1, <a class="code" href="namespacercf__ppx__info__mod.xhtml#a34dfc46102ce01ab3da2d1e6c1a3ebaa" title="Length of Option and Version Codes. ">stm_optcodelen</a> / 5</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                  iopn(i) = stm_rec % opt_code(i)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordflow">                End Do</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                iflag   = stm_rec % lev_flag</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                ipseudo = stm_rec % pt_code</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                ipfirst = stm_rec % pf_code</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                iplast  = stm_rec % pl_code</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                <span class="keywordflow">IF</span> (input_only) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                  <span class="keywordflow">DO</span> i = lbound(input_lookup,2), ubound(input_lookup,2)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                    item_code_val = input_lookup(<a class="code" href="namespacelookup__addresses.xhtml#a4f2a173b22a48250d86265493664e6ad">item_code</a>,i)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                    <span class="keywordflow">IF</span> (isec == item_code_val/1000 .AND.  &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                        iitm == mod(item_code_val,1000)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                      <span class="keyword">CALL </span><a class="code" href="namespacercf__address__mod.xhtml#abb1565cd11dfee748eee0c86a405b4bb">rcf_primary</a>(isec,iitm,im_index,im_ident, &amp;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                       sm_ident,raddress,pirow)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                      <span class="comment">! Now exit loop.</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                      <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordflow">                    END IF</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordflow">                  END DO</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                  <span class="keywordflow">If</span> ( (<a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> == 2) .OR. (<a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> == 3) .OR. (<a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> == 9) &amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                      .OR.(<a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> == 5)  .OR.(<a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> == 10) &amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                      .OR.(<a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> == 8) .OR. var_recon) <span class="keywordflow">Then</span> <span class="comment">!Primary variable</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">! VAR reconfiguration in 4D-VAR needs to include any section in the</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">! reconfiguation if specified by option code.! Find out whether the primary is included for this version</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">! DEPENDS ON: tstmsk</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                    <span class="keyword">CALL </span><a class="code" href="tstmsk_8f90.xhtml#afe820e8749755f88a0823f3fc0fa8843" title="Checks version mask and option code in a ppx record. ">tstmsk</a>(im_ident,isec,lmask,laddr,errorstatus,cmessage)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                    <span class="keywordflow">IF</span> (laddr) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                      <span class="keyword">CALL </span><a class="code" href="namespacercf__address__mod.xhtml#abb1565cd11dfee748eee0c86a405b4bb">rcf_primary</a>( isec, iitm, im_index, im_ident, &amp;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                                        sm_ident, raddress, pirow )</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordflow">                    END IF</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordflow">                  END IF</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordflow">                End If</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordflow">              End If</span>    <span class="comment">!  PPXPTR(m,s,i) .ne. 0</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordflow">            End Do</span>    <span class="comment">!  Loop over items</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            <a class="code" href="namespacercf__nrecon__mod.xhtml#a04a64d39dd90cc3f564fdd80b2c51cd0">recondat_node</a> =&gt; null()</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordflow">          End If</span> <span class="comment">! ISEC or VAR</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="keywordflow">        End Do</span>    <span class="comment">!  Loop over &#39;primary&#39; sections</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordflow">    End If</span>    <span class="comment">!  test whether SM contains IM</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordflow">  End Do</span>     <span class="comment">!  Loop over Im_index</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="keywordflow">End Do</span>      <span class="comment">!  Loop over SM partitions</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordflow">Return</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keyword">End Subroutine </span><a class="code" href="namespacercf__address__mod.xhtml#a570cd49fe16b950c48ee2e6567445bfd" title="reconfiguration - includes calls to primary etc to determine which fields are included. ">rcf_address</a></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">!===================================================================</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">!+Compute data lengths and addresses for primary fields</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">! Subroutine Interface:</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacercf__address__mod.xhtml#abb1565cd11dfee748eee0c86a405b4bb">rcf_primary</a>( ISEC, IITM, Im_index, Im_ident, &amp;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                        Sm_ident, RADDRESS, PIrow )</div><div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="namespacercf__address__mod.xhtml#abb1565cd11dfee748eee0c86a405b4bb">  240</a></span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__nrecon__mod.xhtml" title="Output dump addressing arrays Output dump addressing arrays. ">rcf_nrecon_mod</a><span class="keywordtype">, Only</span> :  &amp;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <a class="code" href="namespacercf__nrecon__mod.xhtml#a04a64d39dd90cc3f564fdd80b2c51cd0">recondat_node</a>,           &amp;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <a class="code" href="namespacercf__nrecon__mod.xhtml#a279e920abfd9ebe512fcf8c3a2e0e030">recondatlist</a>,           &amp;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <a class="code" href="namespacercf__nrecon__mod.xhtml#ac71f9349dd9bd4e9273538b82d67032b">dumpproglevs</a>,       &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <a class="code" href="namespacercf__nrecon__mod.xhtml#ae2e40eebe1421a154bc0b63f7ed149eb">primdatalen</a></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__recon__mod.xhtml" title="data module defining RECON namelist data module defining RECON namelist ">rcf_recon_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    var_recon,            &amp;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <a class="code" href="namespacercf__recon__mod.xhtml#a19af8a2b6550fb052727a0c368b6d445" title="Perform canopy snow throughfallLOGICAL :: l_canopy_snow_throughfall = .FALSE. ">l_interp_input_only</a></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacenlsizes__namelist__mod.xhtml" title="Sizes for many of the UM&#39;s main, dynamic data arrays. ">nlsizes_namelist_mod</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="namespacenlsizes__namelist__mod.xhtml#ac57d36e1f48b5d7403730081125a4b9e">ntiles</a>,             &amp;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <a class="code" href="namespacenlsizes__namelist__mod.xhtml#a6e897f312c1cf99af2e4e8a8479bcff8">nice</a>,               &amp;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <a class="code" href="namespacenlsizes__namelist__mod.xhtml#ad0156bedd3a678265aadb3713d22c335">tr_vars</a></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__level__code__mod.xhtml" title="Decode the STASH level code Decode the STASH level code. ">rcf_level_code_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <a class="code" href="namespacercf__level__code__mod.xhtml#ab662837c0414874b83675887f890c6ab" title="Sets ILOUT to an appropriate level size according to the value of ILIN. ">rcf_level_code</a></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__grid__type__mod.xhtml" title="Module to define a grid data type. Module to define a grid data type. ">rcf_grid_type_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespacercf__address__length__mod.xhtml" title="Determine STASH input length per vertical level for prog var Determine STASH input length per vertica...">rcf_address_length_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <a class="code" href="namespacercf__address__length__mod.xhtml#ac762ac17a67256a8b206cedfe7ace7e3" title="Subroutine Rcf_Address_Length - determines field size. ">rcf_address_length</a></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">! Subroutine arguments:</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">!   Scalar arguments with intent(in):</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>    :: ISEC     <span class="comment">! Current section number</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>    :: IITM     <span class="comment">! Current section 0 item number</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>    :: Im_ident <span class="comment">! Current internal model number</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>    :: Im_index <span class="comment">! pos&#39;n in internal model list</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>    :: Sm_ident <span class="comment">! Submodel identifier (absolute)</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(InOut)</span> :: RADDRESS   <span class="comment">! Address for reconfiguration</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(InOut)</span> :: PIrow    <span class="comment">! Counter for ProgItems array</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keywordtype">Logical</span>            :: MODEL_LEV</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keywordtype">Integer</span>            :: RLEVS      <span class="comment">! No. of levels for reconfiguration</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keywordtype">Integer</span>            :: RPLEVS     <span class="comment">! no. of pseudo-levels</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keywordtype">Integer</span>            :: IL1,IL2</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keywordtype">Integer</span>            :: IPL1,IPL2</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keywordtype">Integer</span>            :: LEN        <span class="comment">! Data length for primary field</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordtype">Integer</span>            :: ErrorStatus</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordtype">Character (Len=80)</span> :: Cmessage</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">!- End of Header</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  <span class="keywordflow">If</span> (<a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> /= 10) <span class="keywordflow">Then</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="comment">! Find address length per level</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacercf__address__length__mod.xhtml#ac762ac17a67256a8b206cedfe7ace7e3" title="Subroutine Rcf_Address_Length - determines field size. ">rcf_address_length</a>( igp, halo, len )</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">! If tracer, multiply length by number of tracer vars for</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">! LBC calculation</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keywordflow">IF</span> ( ( igp .EQ. 26 ) .AND. ( itop .EQ. 11 ) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;      len = len * <a class="code" href="namespacenlsizes__namelist__mod.xhtml#ad0156bedd3a678265aadb3713d22c335">tr_vars</a></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment">! If level type is 0, is LBC so multiply size by levels</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordflow">IF</span> ( ilev .EQ. 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacercf__level__code__mod.xhtml#ab662837c0414874b83675887f890c6ab" title="Sets ILOUT to an appropriate level size according to the value of ILIN. ">rcf_level_code</a>( ibot, il1, <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> )</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacercf__level__code__mod.xhtml#ab662837c0414874b83675887f890c6ab" title="Sets ILOUT to an appropriate level size according to the value of ILIN. ">rcf_level_code</a>( itop, il2, <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> )</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;      len = len * (il2 - il1 + 1)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    model_lev = <a class="code" href="namespacercf__address__mod.xhtml#a482cb29e33dd70f015f39255e484a910">rcf_disct_lev</a>( ilev )</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">If</span> (model_lev .OR.(ilev == 5 .AND. ipseudo /= 0)) <span class="keywordflow">Then</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;      <span class="comment">! Field has model levels - decode level codes</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;      <span class="keywordflow">If</span> (ilev  /=  5) <span class="keywordflow">Then</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacercf__level__code__mod.xhtml#ab662837c0414874b83675887f890c6ab" title="Sets ILOUT to an appropriate level size according to the value of ILIN. ">rcf_level_code</a>( ibot, il1, <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> )</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacercf__level__code__mod.xhtml#ab662837c0414874b83675887f890c6ab" title="Sets ILOUT to an appropriate level size according to the value of ILIN. ">rcf_level_code</a>( itop, il2, <a class="code" href="namespacercf__grid__type__mod.xhtml#a6fec52ad6879010f1543ab647101a5c4">output_grid</a> )</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;      <span class="keywordflow">Else</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        il1=1</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        il2=1</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      <span class="comment">! No. of model levels (for reconfiguration)</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;      rlevs=il2-il1+1</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;      <span class="comment">! Initialise first &amp; last pseudo level indices</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;      ipl1 =0</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;      ipl2 =0</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;      <span class="keywordflow">If</span> (iflag == 0 .AND. ipseudo /= 0) <span class="keywordflow">Then</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="comment">! Primary with input on all available pseudo levels         !   decode pseudo level codes</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacercf__address__mod.xhtml#aeff0587da81274a87d73a92b8ed783ea">rcf_pslevcod</a>( ipfirst, <a class="code" href="namespacenlsizes__namelist__mod.xhtml#ac57d36e1f48b5d7403730081125a4b9e">ntiles</a>, <a class="code" href="namespacenlsizes__namelist__mod.xhtml#a6e897f312c1cf99af2e4e8a8479bcff8">nice</a>, ipl1, <span class="stringliteral">&#39;F&#39;</span> )</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacercf__address__mod.xhtml#aeff0587da81274a87d73a92b8ed783ea">rcf_pslevcod</a>( iplast , <a class="code" href="namespacenlsizes__namelist__mod.xhtml#ac57d36e1f48b5d7403730081125a4b9e">ntiles</a>, <a class="code" href="namespacenlsizes__namelist__mod.xhtml#a6e897f312c1cf99af2e4e8a8479bcff8">nice</a>, ipl2, <span class="stringliteral">&#39;L&#39;</span> )</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;      rplevs=ipl2-ipl1+1</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      <span class="comment">! Multiply length per level by no. of levels</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;      len=len*(il2-il1+1)*(ipl2-ipl1+1)</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;      <span class="keywordflow">If</span> (<a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> /= 4 .AND. <a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> /= 9) <span class="keywordflow">Then</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="comment">! Increment no. of headers</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <a class="code" href="namespacercf__nrecon__mod.xhtml#ac71f9349dd9bd4e9273538b82d67032b">dumpproglevs</a>(im_ident)=   <a class="code" href="namespacercf__nrecon__mod.xhtml#ac71f9349dd9bd4e9273538b82d67032b">dumpproglevs</a>(im_ident) &amp;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                                      +(il2-il1+1)*(ipl2-ipl1+1)</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keywordflow">Else</span>  <span class="comment">! Not model levels</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;      rlevs=1</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;      rplevs=1</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;      <span class="keywordflow">If</span> (<a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> /= 4 .AND. <a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> /= 9) <span class="keywordflow">Then</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <a class="code" href="namespacercf__nrecon__mod.xhtml#ac71f9349dd9bd4e9273538b82d67032b">dumpproglevs</a>(im_ident)=<a class="code" href="namespacercf__nrecon__mod.xhtml#ac71f9349dd9bd4e9273538b82d67032b">dumpproglevs</a>(im_ident)+1</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keywordflow">    End If</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="comment">! Addresses are set relative to the beginning of the primary data,</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="comment">!  since the primary data starts at the beginning of D1.</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keywordflow">If</span> (<a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> /= 9) <span class="keywordflow">Then</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;      <span class="comment">! Start address for this primary field</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;      <span class="comment">! Increment LPRIM by LEN (=data length for this primary field)</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;      <a class="code" href="namespacercf__nrecon__mod.xhtml#ae2e40eebe1421a154bc0b63f7ed149eb">primdatalen</a>(im_ident)      =<a class="code" href="namespacercf__nrecon__mod.xhtml#ae2e40eebe1421a154bc0b63f7ed149eb">primdatalen</a>(im_ident)+len</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordflow">    EndIf</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="comment">! Store levels, lengths and addresses required for reconfiguration</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="comment">!                                                in array Recondat</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keywordflow">If</span> (<a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> /= 4 .AND. <a class="code" href="namespacercf__address__vars__mod.xhtml#a06228a04f2af69d3363d03253a6b05e9">ispace</a> /= 9) <span class="keywordflow">Then</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;      <span class="keywordflow">If</span> (isec == 0 .OR. isec == 33 .OR. isec == 34 .OR. &amp;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;          var_recon .OR. <a class="code" href="namespacercf__recon__mod.xhtml#a19af8a2b6550fb052727a0c368b6d445" title="Perform canopy snow throughfallLOGICAL :: l_canopy_snow_throughfall = .FALSE. ">l_interp_input_only</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="keyword">Allocate</span>(<a class="code" href="namespacercf__nrecon__mod.xhtml#a04a64d39dd90cc3f564fdd80b2c51cd0">recondat_node</a> % recondat_info)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        <a class="code" href="namespacercf__nrecon__mod.xhtml#a04a64d39dd90cc3f564fdd80b2c51cd0">recondat_node</a> % recondat_info % sec_item=iitm + 1000*isec</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <a class="code" href="namespacercf__nrecon__mod.xhtml#a04a64d39dd90cc3f564fdd80b2c51cd0">recondat_node</a> % recondat_info % rlevs=rlevs</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <a class="code" href="namespacercf__nrecon__mod.xhtml#a04a64d39dd90cc3f564fdd80b2c51cd0">recondat_node</a> % recondat_info % len=len</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <a class="code" href="namespacercf__nrecon__mod.xhtml#a04a64d39dd90cc3f564fdd80b2c51cd0">recondat_node</a> % recondat_info % raddress=raddress</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <a class="code" href="namespacercf__nrecon__mod.xhtml#a04a64d39dd90cc3f564fdd80b2c51cd0">recondat_node</a> % recondat_info % rplevs=rplevs</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;               <span class="keyword">Allocate</span>(<a class="code" href="namespacercf__nrecon__mod.xhtml#a04a64d39dd90cc3f564fdd80b2c51cd0">recondat_node</a> % next)</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <a class="code" href="namespacercf__nrecon__mod.xhtml#a04a64d39dd90cc3f564fdd80b2c51cd0">recondat_node</a> =&gt; <a class="code" href="namespacercf__nrecon__mod.xhtml#a04a64d39dd90cc3f564fdd80b2c51cd0">recondat_node</a> % next</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;      <span class="keywordflow">Else</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        errorstatus=1</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        cmessage=<span class="stringliteral">&#39;Rcf_Primary : Invalid value for ISEC, section no.&#39;</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( <span class="stringliteral">&#39;Rcf_Primary&#39;</span>, errorstatus, cmessage )</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keywordflow">      End If</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;      raddress = raddress+len</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="keywordflow">    End If</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="keywordflow">  End If</span>  <span class="comment">! ISPACE .ne. 10</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="keywordflow">Return</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="keyword">End Subroutine </span><a class="code" href="namespacercf__address__mod.xhtml#abb1565cd11dfee748eee0c86a405b4bb">rcf_primary</a></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment">!====================================================================</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment">!+Test whether level type is discrete (model) or continuous (non-model)</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">! Function Interface:</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="keyword">Logical </span><span class="keyword">FUNCTION </span><a class="code" href="namespacercf__address__mod.xhtml#a482cb29e33dd70f015f39255e484a910">rcf_disct_lev</a>( LEV_CODE )</div><div class="line"><a name="l00389"></a><span class="lineno"><a class="line" href="namespacercf__address__mod.xhtml#a482cb29e33dd70f015f39255e484a910">  389</a></span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">! Function arguments:</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>          :: LEV_CODE <span class="comment">!Level code from STASHmaster</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">! ErrorStatus</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="keywordtype">Character (Len=*)</span>, <span class="keywordtype">Parameter</span> :: RoutineName = <span class="stringliteral">&#39;Disct_Lev&#39;</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="keywordtype">Integer</span>                      :: ErrorStatus</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="keywordtype">Character (Len=80)</span>           :: CMESSAGE</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment">!- End of HeaderIf (LEV_CODE == 1 .OR. LEV_CODE == 2 .OR. LEV_CODE == 6 .OR. &amp;</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                       lev_code == 10) <span class="keywordflow">Then</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  <a class="code" href="namespacercf__address__mod.xhtml#a482cb29e33dd70f015f39255e484a910">rcf_disct_lev</a>=.true.</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="keywordflow">Else</span> <span class="keywordflow">If</span> (lev_code .GE. 0 .AND. lev_code .LE. 10) <span class="keywordflow">Then</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  <a class="code" href="namespacercf__address__mod.xhtml#a482cb29e33dd70f015f39255e484a910">rcf_disct_lev</a>=.false.</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="keywordflow">Else</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  <a class="code" href="namespacercf__address__mod.xhtml#a482cb29e33dd70f015f39255e484a910">rcf_disct_lev</a>=.false.</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;  errorstatus=1</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;  cmessage=<span class="stringliteral">&#39;Rcf_DISCT_LEV : Invalid level type in STASHmaster&#39;</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;  <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="keywordflow">End If</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="keyword">End Function </span><a class="code" href="namespacercf__address__mod.xhtml#a482cb29e33dd70f015f39255e484a910">rcf_disct_lev</a></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment">!===================================================================</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">!+Decode the STASH pseudo level code</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">! Subroutine Interface:</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacercf__address__mod.xhtml#aeff0587da81274a87d73a92b8ed783ea">rcf_pslevcod</a>( ILIN, NTILES, NICE, ILOUT, SWTCH )</div><div class="line"><a name="l00424"></a><span class="lineno"><a class="line" href="namespacercf__address__mod.xhtml#aeff0587da81274a87d73a92b8ed783ea">  424</a></span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="keywordtype">Use </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, Only</span> : &amp;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacerad__input__mod.xhtml" title="Input control for radiation. Input control for radiation. ">rad_input_mod</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    h_swbands,            &amp;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <a class="code" href="namespacerad__input__mod.xhtml#adf17332578b322aa357c856bbb44574b" title="INTEGER :: h_swbands = imdi !&gt; Number of shortwave radiation bands. ">h_lwbands</a></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment">! JULES</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="keywordtype">USE </span>ancil_info<span class="keywordtype">, ONLY</span>: nsmax</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;  <span class="keywordtype">USE </span>nstypes</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceclmchfcg__scenario__mod.xhtml" title="A module containing tunable parameters used for histories/scenarios!&gt; of climate change forcings (clm...">clmchfcg_scenario_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceclmchfcg__scenario__mod.xhtml#a2a903fd53415a6328e54615365c56246">nsulpat</a></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160; <span class="comment">! Description:</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">!   Sets ILOUT to an appropriate pseudo level size according</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment">!   to the value of IL</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment">! Subroutine arguments:</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>           :: ILIN    <span class="comment">! Model pseudo level code</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>           :: NTILES  <span class="comment">! Number of surface tiles</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(In)</span>           :: NICE    <span class="comment">! Number of seaice catagories</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="keywordtype">Character (Len=1)</span>, <span class="keywordtype">Intent(In)</span> :: SWTCH</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="keywordtype">Integer</span>, <span class="keywordtype">Intent(Out)</span>          :: ILOUT   <span class="comment">! An actual pseudo level</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="keywordtype">Integer</span>              :: ErrorStatus</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="keywordtype">Character (Len=80)</span>   :: Cmessage</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="keywordtype">Character (Len=*)</span>, <span class="keywordtype">Parameter</span> :: RoutineName=<span class="stringliteral">&#39;Rcf_PSLevCod&#39;</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">!- End of Header -</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="keywordflow">If</span> (swtch == <span class="stringliteral">&#39;F&#39;</span>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;  <span class="keywordflow">If</span> (ilin == 1) <span class="keywordflow">Then</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    ilout=1</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment">! Ocean assimilation groups - removed</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;  <span class="keywordflow">Else</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) &amp;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;     &amp;   <span class="stringliteral">&#39;MSG FROM RCF_PSLEVCOD: &#39;</span>, &amp;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;     &amp;   <span class="stringliteral">&#39;INAPPROPRIATE FIRST PSEUDO LEVEL CODE FOUND &#39;</span>,ilin</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_address_mod&#39;</span>)</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    errorstatus=2</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    cmessage = <span class="stringliteral">&#39;Error from PSLevCod!&#39;</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="keywordflow">Else</span> <span class="keywordflow">If</span> (swtch == <span class="stringliteral">&#39;L&#39;</span>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;  <span class="keywordflow">If</span> (ilin == 1) <span class="keywordflow">Then</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    ilout=h_swbands</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;  <span class="keywordflow">Else</span> <span class="keywordflow">If</span> (ilin == 2) <span class="keywordflow">Then</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    ilout=<a class="code" href="namespacerad__input__mod.xhtml#adf17332578b322aa357c856bbb44574b" title="INTEGER :: h_swbands = imdi !&gt; Number of shortwave radiation bands. ">h_lwbands</a></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;  <span class="keywordflow">Else</span> <span class="keywordflow">If</span> (ilin == 4) <span class="keywordflow">Then</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <span class="comment">! Last frequency (wave model)</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment">! Wave model not used in RCF</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment">!    ILOUT=NFRE</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;     ilout=0</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;  <span class="keywordflow">Else</span> <span class="keywordflow">If</span> (ilin == 5) <span class="keywordflow">Then</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="comment">! Last wave train (wave model)</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="comment">!   ILOUT=NWTRAIN</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    ilout=0</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;  <span class="keywordflow">Else</span> <span class="keywordflow">If</span> ( ilin  ==  6 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <span class="comment">! Last index for HadCM2 sulphate loading patterns.</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    ilout = <a class="code" href="namespaceclmchfcg__scenario__mod.xhtml#a2a903fd53415a6328e54615365c56246">nsulpat</a></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;  <span class="keywordflow">Else</span> <span class="keywordflow">If</span> ( ilin  ==  7 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <span class="comment">! All surface types</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    ilout = ntype</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;  <span class="keywordflow">Else</span> <span class="keywordflow">If</span> ( ilin  ==  8 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="comment">! Plant functional types only</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    ilout = npft</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;  <span class="keywordflow">Else</span> <span class="keywordflow">If</span> ( ilin  ==  9 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    <span class="comment">! All tiles</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    ilout = ntiles</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;  <span class="keywordflow">Else</span> <span class="keywordflow">If</span> ( ilin  ==  10 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="comment">! All seaice catagories</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    ilout = nice</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;  <span class="keywordflow">Else</span> <span class="keywordflow">If</span> ( ilin  ==  11 ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="comment">!New snow scheme: all tiles &lt;times&gt; max no. of snow levels</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    ilout = ntiles*nsmax</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;  <span class="keywordflow">Else</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) &amp;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;     &amp;   <span class="stringliteral">&#39;MSG FROM RCF_PSLEVCOD: &#39;</span>, &amp;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;     &amp;   <span class="stringliteral">&#39;INAPPROPRIATE LAST PSEUDO LEVEL CODE FOUND &#39;</span>,ilin</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;rcf_address_mod&#39;</span>)</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    errorstatus=2</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    cmessage = <span class="stringliteral">&#39;Error from PSLevCod&#39;</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, cmessage )</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="keywordflow">End If</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="keywordflow">Return</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="keyword">End Subroutine </span><a class="code" href="namespacercf__address__mod.xhtml#aeff0587da81274a87d73a92b8ed783ea">rcf_pslevcod</a></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="keyword">End Module </span><a class="code" href="namespacercf__address__mod.xhtml" title="Calculates addressing of the output dump Calculates addressing of the output dump. ">rcf_address_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
