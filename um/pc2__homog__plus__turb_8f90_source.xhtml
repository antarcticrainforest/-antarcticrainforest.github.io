<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/large_scale_cloud/pc2_homog_plus_turb.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_4a718005dcd2cc89f5e703eb62b98c3c.xhtml">large_scale_cloud</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">pc2_homog_plus_turb.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pc2__homog__plus__turb_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="pc2__homog__plus__turb_8f90.xhtml#a27d11b32aa53e74ca3ee11e357c040ff" title="PC2 Cloud Scheme: Homogeneous forcing and Turbulence. ">pc2_homog_plus_turb</a>(                                         &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;!&gt;   Pressure related fields</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; p_theta_levels,                                                        &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;!&gt;   Array dimensions</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; nlevels,                                                               &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;!&gt;   Timestep</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; timestep,                                                              &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;!&gt;   Prognostic Fields</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; t, cf, cfl, cff, q, qcl,                                               &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;!&gt;   Forcing quantities for driving the homogeneous forcing</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; dtdt, dqdt, dldt, dpdt,                                                &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;!&gt;   Other quantities for the turbulence</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; dbsdtbs0, dbsdtbs1,                                                    &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;!&gt;   Model switches</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; l_mixing_ratio)</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="pc2__homog__plus__turb_8f90.xhtml#a27d11b32aa53e74ca3ee11e357c040ff">   20</a></span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">,   ONLY</span>: lc</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacepc2__constants__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">pc2_constants_mod</a><span class="keywordtype">,     ONLY</span>: <a class="code" href="namespacepc2__constants__mod.xhtml#ae7b0a4ece1bca69bb8e1b8af489cbc3d">cloud_rounding_tol</a></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">,   ONLY</span>: cp, r, repsilon</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,               ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,              ONLY</span>: jprb, jpim</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">, ONLY</span>: pdims, qdims, tdims</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacepc2__constants__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">pc2_constants_mod</a><span class="keywordtype">,     ONLY</span>: <a class="code" href="namespacepc2__constants__mod.xhtml#a27b925d1b1c25d678f61253aa53b5f96">dbsdtbs_exp</a>, <a class="code" href="namespacepc2__constants__mod.xhtml#ad2e116520c99b141a71962877ae23956">pdf_power</a>,              &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                                   <a class="code" href="namespacepc2__constants__mod.xhtml#a39237214fa62bcd91fd953adf97b9257">pdf_merge_power</a></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecloud__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cloud_inputs_mod</a><span class="keywordtype">,      ONLY</span>: l_fixbug_pc2_qcl_incr,<a class="code" href="namespacecloud__inputs__mod.xhtml#a8d957eb7dd8afa520bd3a74c21609daa">l_fixbug_pc2_mixph</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">! Description of Code:</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                        <span class="comment">!, INTENT(IN)</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;   nlevels</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                        <span class="comment">!, INTENT(IN)</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;   timestep,                                                            &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;   <a class="code" href="varcld_8h.xhtml#acd7a57e90bb1e737ecae71f1c1830ad6">p_theta_levels</a>(pdims%i_start:pdims%i_end,                            &amp;                  pdims%j_start:pdims%j_end,                            &amp;                   nlevels),                                             &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;   cff(           qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end,                            &amp;                   nlevels),                                             &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;   dtdt(          tdims%i_start:tdims%i_end,                            &amp;                  tdims%j_start:tdims%j_end,                            &amp;                   nlevels),                                             &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;   dqdt(          qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end,                            &amp;                   nlevels),                                             &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;   dldt(          qdims%i_start:qdims%i_end,                            &amp;                  qdims%j_start:qdims%j_end,                            &amp;                   nlevels),                                             &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;   dpdt(          pdims%i_start:pdims%i_end,                            &amp;                  pdims%j_start:pdims%j_end,                            &amp;                   nlevels),                                             &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;   dbsdtbs0,                                                            &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;   dbsdtbs1</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keywordtype">LOGICAL</span> ::                                                            &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                         <span class="comment">!, INTENT(IN)</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;   l_mixing_ratio        <span class="comment">! Use mixing ratio formulation</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                        <span class="comment">!, INTENT(INOUT)</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;   t(  tdims%i_start:tdims%i_end,                                       &amp;       tdims%j_start:tdims%j_end,                                       &amp;        nlevels),                                                        &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;   cf( qdims%i_start:qdims%i_end,                                       &amp;       qdims%j_start:qdims%j_end,                                       &amp;        nlevels),                                                        &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;   cfl(qdims%i_start:qdims%i_end,                                       &amp;       qdims%j_start:qdims%j_end,                                       &amp;        nlevels),                                                        &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;   q(  qdims%i_start:qdims%i_end,                                       &amp;       qdims%j_start:qdims%j_end,                                       &amp;        nlevels),                                                        &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;   qcl(qdims%i_start:qdims%i_end,                                       &amp;       qdims%j_start:qdims%j_end,                                       &amp;        nlevels)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">!    Latent heat of condensation divided by heat capacity of air.</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: b_factor=(<a class="code" href="namespacepc2__constants__mod.xhtml#ad2e116520c99b141a71962877ae23956">pdf_power</a>+1.0)/(<a class="code" href="namespacepc2__constants__mod.xhtml#ad2e116520c99b141a71962877ae23956">pdf_power</a>+2.0)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">!    Premultiplier to calculate the amplitude of the probability</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">!    density function at the saturation boundary (G).</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: smallp=1.0e-10</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">!    Small positive value for use in if tests</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">!  Local scalars-  REAL ::                                                               &amp;</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;   alpha,                                                               &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                  <span class="comment">! Rate of change of saturation specific humidity with</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                  <span class="comment">! temperature calculated at dry-bulb temperature</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                  <span class="comment">! (kg kg-1 K-1)</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;   alpha_p,                                                             &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                  <span class="comment">! Rate of change of saturation specific humidity with</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                  <span class="comment">! pressure calculated at dry-bulb temperature (Pa K-1)</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;   al,                                                                  &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                  <span class="comment">! 1 / (1 + alpha L/cp)  (no units)</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;   c_1,                                                                 &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                  <span class="comment">! Mid-timestep liquid cloud fraction (no units)</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;   dbsdtbs,                                                             &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                  <span class="comment">! Relative rate of change of distribution width (s-1)</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;   dqcdt,                                                               &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                  <span class="comment">! Forcing of QC (kg kg-1 s-1)</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;   deltal,                                                              &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                  <span class="comment">! Change in liquid content (kg kg-1)</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;   g,                                                                   &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                  <span class="comment">! Amplitude of the probability density function at</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                  <span class="comment">! the saturation boundary (kg kg-1)-1</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;   qc,                                                                  &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                  <span class="comment">! aL (q + l - qsat(TL) )  (kg kg-1)</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;   sd             <span class="comment">! Saturation deficit (= aL (q - qsat(T)) )  (kg kg-1)</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">!  (b) Others.</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordtype">INTEGER</span> :: k,i,j,                                                     &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                  <span class="comment">! Loop counters: K - vertical level index</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                  <span class="comment">! I,J - horizontal position index</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;             npt  <span class="comment">! Number of point on which to perform calculations</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">!  Local arrays</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;   qsl_t(     (1+qdims%i_end-qdims%i_start)*                            &amp;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;              (1+qdims%j_end-qdims%<a class="code" href="typ__atm__fields_8h.xhtml#a6d85a200859105ba485b3629e45bf3f1">j_start</a>) ),                          &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">!    Saturated specific humidity for dry bulb temperature T</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;   qsl_tl(    (1+qdims%i_end-qdims%i_start)*                            &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;              (1+qdims%j_end-qdims%j_start) ),                          &amp;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">!    Saturated specific humidity for liquid temperature TL</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;   tl_c(      (1+qdims%i_end-qdims%i_start)*                            &amp;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;              (1+qdims%j_end-qdims%j_start) ),                          &amp;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">!    Liquid temperature (= T - L/cp QCL)  (K)</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;   t_c(       (1+qdims%i_end-qdims%i_start)*                            &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;              (1+qdims%j_end-qdims%j_start) ),                          &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;   p_c(       (1+qdims%i_end-qdims%i_start)*                            &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;              (1+qdims%j_end-qdims%j_start) ),                          &amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">!    Temperature and pressure on compressed points for qsat call</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;   cf_c(      (1+qdims%i_end-qdims%i_start)*                            &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;              (1+qdims%j_end-qdims%j_start) ),                          &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">!    Total cloud fraction on compressed points</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;   cfl_c(     (1+qdims%i_end-qdims%i_start)*                            &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;              (1+qdims%j_end-qdims%j_start) ),                          &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">!    Liquid cloud fraction on compressed points</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;   cff_c(     (1+qdims%i_end-qdims%i_start)*                            &amp;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;              (1+qdims%j_end-qdims%j_start) ),                          &amp;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">!    Ice cloud fraction on compressed points</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;   deltac_c(  (1+qdims%i_end-qdims%i_start)*                            &amp;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;              (1+qdims%j_end-qdims%j_start) ),                          &amp;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">!    Change in total cloud fraction (no units)</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;   deltacl_c( (1+qdims%i_end-qdims%i_start)*                            &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;              (1+qdims%j_end-qdims%j_start) ),                          &amp;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">!    Change in liquid cloud fraction (no units)</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;   deltacf_c( (1+qdims%i_end-qdims%i_start)*                            &amp;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;              (1+qdims%j_end-qdims%j_start) )</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">!    Change in ice cloud fraction (no units)</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;   index_npt(qdims%i_start:qdims%i_end,                                 &amp;             qdims%j_start:qdims%j_end)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="keywordtype">REAL   (KIND=jprb)</span>            :: zhook_handle</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">!- End of Header</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;PC2_HOMOG_PLUS_TURB&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">! ==Main Block==-</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">! Loop round levels to be processed</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">!$OMP  PARALLEL DO DEFAULT(SHARED) SCHEDULE(STATIC) PRIVATE(cfl_c,      &amp;</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">!$OMP&amp; index_npt, npt, cf_c, cff_c, t_c, tl_c, p_c, deltacf_c, qsl_t,   &amp;</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">!$OMP&amp; qsl_tl, alpha, al, alpha_p, sd, g, dqcdt, dbsdtbs, qc, deltal, i,&amp;</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">!$OMP&amp; j, k, c_1, deltacl_c)</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keywordflow">DO</span> k = 1, nlevels</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">! Initialisation of change in frozen cloud fraction, which is always</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">! zero from this routine.</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    deltacf_c(:) = 0.0</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">! Copy points into compressed arrays</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    npt = 0</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;      <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">IF</span> (cfl(i,j,k) &gt; cloud_rounding_tol ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;          npt = npt + 1</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;          index_npt(i,j) = npt</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;          cfl_c(npt) = cfl(i,j,k)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;          cf_c(npt)  = cf(i,j,k)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;          cff_c(npt) = cff(i,j,k)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;          t_c(npt) = t(i,j,k)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;          tl_c(npt) = t(i,j,k)-lcrcp*qcl(i,j,k)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;          p_c(npt) = <a class="code" href="varcld_8h.xhtml#acd7a57e90bb1e737ecae71f1c1830ad6">p_theta_levels</a>(i,j,k)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">! ! 2. Calculate Saturated Specific Humidity with respect to liquid water</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">!    for both dry bulb and wet bulb temperatures.</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">!     IF (npt &gt; 0) THEN</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">! DEPENDS ON: qsat_wat_mix</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      <span class="keyword">CALL </span><a class="code" href="qsat__wat__mix_8f90.xhtml#a2c76d0fec243d54bbf3512ebc16d81dc" title="Saturation Specific Humidity Scheme (Qsat_Wat): Vapour to Liquid. ">qsat_wat_mix</a>(qsl_t, t_c, p_c, npt, l_mixing_ratio)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">! DEPENDS ON: qsat_wat_mix</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      <span class="keyword">CALL </span><a class="code" href="qsat__wat__mix_8f90.xhtml#a2c76d0fec243d54bbf3512ebc16d81dc" title="Saturation Specific Humidity Scheme (Qsat_Wat): Vapour to Liquid. ">qsat_wat_mix</a>(qsl_tl, tl_c, p_c, npt, l_mixing_ratio)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">! There is no need to perform the total cloud fraction calculation in</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">! this subroutine if there is no, or full, liquid cloud cover.</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="keywordflow">IF</span> (cfl(i,j,k) &gt;        cloud_rounding_tol .AND.                &amp;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            cfl(i,j,k) &lt; (1.0 - cloud_rounding_tol)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">! ! 3. Calculate the parameters relating to the probability density func.</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">! Need to estimate the rate of change of saturated specific humidity</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">! with respect to temperature (alpha) first, then use this to calculate</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">! factor aL. Also estimate the rate of change of qsat with pressure.</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;          alpha=repsilon*lc*qsl_t(index_npt(i,j))/(r*t_c(index_npt(i,j))**2)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;          al=1.0/(1.0+lcrcp*alpha)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;          alpha_p = -qsl_t(index_npt(i,j))/p_c(index_npt(i,j))</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">! Calculate the saturation deficit SD</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;          sd=al*(qsl_t(index_npt(i,j))-q(i,j,k))</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">! Calculate the amplitude of the probability density function at the</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">! saturation boundary.</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;          <span class="keywordflow">IF</span> (qcl(i,j,k) &gt; smallp .AND. sd &gt; smallp) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            g=b_factor*(   cfl(i,j,k)**<a class="code" href="namespacepc2__constants__mod.xhtml#a39237214fa62bcd91fd953adf97b9257">pdf_merge_power</a>                  &amp;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;             *(1.0-cfl(i,j,k))**2/sd                                    &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;             +         (1.0-cfl(i,j,k))**<a class="code" href="namespacepc2__constants__mod.xhtml#a39237214fa62bcd91fd953adf97b9257">pdf_merge_power</a>                &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;             *cfl(i,j,k)**2/qcl(i,j,k)  )                               &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;             /(   cfl(i,j,k)**<a class="code" href="namespacepc2__constants__mod.xhtml#a39237214fa62bcd91fd953adf97b9257">pdf_merge_power</a>+(1.0-cfl(i,j,k))          &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;             **<a class="code" href="namespacepc2__constants__mod.xhtml#a39237214fa62bcd91fd953adf97b9257">pdf_merge_power</a>   )</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            g=0.0</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">! Calculate the rate of change of Qc due to the forcing</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;          dqcdt=al * ( dqdt(i,j,k)-alpha*dtdt(i,j,k)                    &amp;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                      -alpha_p*dpdt(i,j,k) ) + dldt(i,j,k)</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">! Calculate Qc</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;          qc = al * (q(i,j,k) + qcl(i,j,k) - qsl_tl(index_npt(i,j)))</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">! Calculate the relative rate of change of width of the distribution</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">! dbsdtbs from the forcing rate</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;          <span class="keywordflow">IF</span> (dbsdtbs0 /= 0.0 .or. dbsdtbs1 /= 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            dbsdtbs = (dbsdtbs0 * timestep + dqcdt * dbsdtbs1) *        &amp;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;               exp(-<a class="code" href="namespacepc2__constants__mod.xhtml#a27b925d1b1c25d678f61253aa53b5f96">dbsdtbs_exp</a> * qc / (al * qsl_tl(index_npt(i,j))))</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            dbsdtbs = 0.0</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">! ! 4. Calculate the change of liquid cloud fraction. This uses the</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">! arrival value of QC for better behaved numerics.</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">! DQCDT is the homogeneous forcing part, (QC+DQCDT)*DBSDTBS is the</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">! width narrowing part</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;          deltacl_c(index_npt(i,j)) = g * ( dqcdt - (qc + dqcdt) * dbsdtbs)</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">! Calculate the condensation amount DELTAL. This uses a mid value</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">! of cloud fraction for better numerical behaviour.</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;          c_1 = cfl(i,j,k) + deltacl_c(index_npt(i,j))</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;          <span class="keywordflow">IF</span> (c_1  &gt;   1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            deltacl_c(index_npt(i,j)) = 1.0 - cfl(i,j,k)</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            c_1=1.0</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;          <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (c_1  &lt;   0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            c_1=0.0</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            deltacl_c(index_npt(i,j)) = (- cfl(i,j,k) )</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;          c_1 = 0.5 * (c_1 + cfl(i,j,k))</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;          deltal = c_1 * dqcdt + (qcl(i,j,k) - qc * c_1) * dbsdtbs</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">! If we have removed all fraction, remove all liquid</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;          <span class="keywordflow">IF</span> (l_fixbug_pc2_qcl_incr) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;             <span class="keywordflow">IF</span> (cfl(i,j,k)+deltacl_c(index_npt(i,j)) == 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                deltal = -qcl(i,j,k)</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keywordflow">             END IF</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( ( cfl(i,j,k)  &gt;=  (1.0 - cloud_rounding_tol) .AND.     &amp;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                    cfl(i,j,k)  &lt;=  (1.0 + cloud_rounding_tol) ) .OR.    &amp;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">! this if test is wrong, it should be cfl &gt;= 1</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">! add fix on a switch to preserve bit-comparison</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                  ( cfl(i,j,k)  &gt;=  (1.0 - cloud_rounding_tol) .AND.     &amp;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                  <a class="code" href="namespacecloud__inputs__mod.xhtml#a8d957eb7dd8afa520bd3a74c21609daa">l_fixbug_pc2_mixph</a> ) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">! Cloud fraction is 1</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;          alpha=repsilon*lc*qsl_t(index_npt(i,j))/(r*t_c(index_npt(i,j))**2)</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;          al=1.0/(1.0+lcrcp*alpha)</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;          alpha_p = -qsl_t(index_npt(i,j))/p_c(index_npt(i,j))</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;          deltal=al * (dqdt(i,j,k)-alpha*dtdt(i,j,k)                    &amp;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                       -alpha_p*dpdt(i,j,k)) + dldt(i,j,k)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;          deltacl_c(index_npt(i,j)) = 0.0</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">! Cloud fraction is 0 (actually CFL &lt; cloud_rounding_tol)</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;          deltal = 0.0</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">! Update water contents</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <span class="keywordflow">IF</span> (l_fixbug_pc2_qcl_incr) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">! Don&#39;t allow more water to be removed than was there to start with.</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;          <span class="keywordflow">IF</span> (qcl(i,j,k) + deltal &lt; 0.0) <span class="keywordflow">THEN</span>             deltal = -qcl(i,j,k)</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">! Set qcl to be exactly zero in this case.             qcl(i,j,k) = 0.0</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            qcl(i,j,k) = qcl(i,j,k) + deltal</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;          qcl(i,j,k) = qcl(i,j,k) + deltal</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">! Update vapour content</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">! Q = input Q + Forcing - Condensation</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        q(i,j,k)   = q(i,j,k)   + dqdt(i,j,k)                           &amp;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                    - (deltal - dldt(i,j,k))</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">! Update temperature due to latent heating</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        t(i,j,k)   = t(i,j,k)   + dtdt(i,j,k)                           &amp;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                      + lcrcp * (deltal - dldt(i,j,k))</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">!i</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">!j</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">! ! 5. Now update cloud fractions.</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">! Calculate change in total cloud fraction.</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordflow">IF</span> (npt &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">! DEPENDS ON: pc2_total_cf</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;      <span class="keyword">CALL </span><a class="code" href="pc2__total__cf_8f90.xhtml#a6cfc404c090262a8e6f1024311863a5e" title="PC2 Cloud Scheme: Change in total cloud fraction. ">pc2_total_cf</a>(                                                &amp;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            npt,cfl_c,cff_c,deltacl_c,deltacf_c,cf_c)</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;      <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <span class="keywordflow">IF</span> (cfl(i,j,k) &gt;        cloud_rounding_tol .AND.                &amp;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            cfl(i,j,k) &lt; (1.0 - cloud_rounding_tol)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">! Update cloud fractions</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;          cf(i,j,k)  = cf_c(index_npt(i,j))</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;          cfl(i,j,k) = cfl(i,j,k) + deltacl_c(index_npt(i,j))</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! End if for CFL gt 0 and CFL lt 1</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">!i</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">!j</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">!$OMP END PARALLEL DO</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">! End of the subroutine</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;PC2_HOMOG_PLUS_TURB&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="pc2__homog__plus__turb_8f90.xhtml#a27d11b32aa53e74ca3ee11e357c040ff" title="PC2 Cloud Scheme: Homogeneous forcing and Turbulence. ">pc2_homog_plus_turb</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
