<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/large_scale_preciptation/lsp_fall.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_e9ad03cb5a25088942c5c2b981810778.xhtml">large_scale_preciptation</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">lsp_fall.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="lsp__fall_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespacelsp__fall__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacelsp__fall__mod.xhtml" title="Large-scale precipitation scheme. Advection through falling of ice Large-scale precipitation scheme...">lsp_fall_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacelsp__fall__mod.xhtml#a3a628438b8bfd7cda24a39bea9285408">lsp_fall</a>(                                                    &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  points, timestep,                                                     &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;                                          ! Number of points and tstep</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  qcf_cry_0, qcf_agg_0, frac_agg,                                       &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;                                          ! Ice contents</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  qrain_0,qgraup_0, t,                                                  &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                                          ! Rain and graupel contents</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  snow_agg,snow_cry,rainrate,grauprate,                                 &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                                             ! Sedimentation into layer</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  snowt_agg,snowt_cry,rainratet,graupratet,                             &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                                                 ! Sedim. out of layer</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  vf_agg, vf_cry, vf_rain, vf_graup,                                    &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                                          ! Fall speeds of hydrometeors</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  area_clear,area_ice,cfice,cficei,                                     &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                                          ! Cloud fraction information</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  frac_ice_above,                                                       &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                                            ! at start of microphy. ts</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  cf, cfl, cff,                                                         &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                                          ! Current cloud fractions for</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                                          ! updating</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  rho, rhor, tcgi, tcgci,                                               &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                                          ! Parametrization information</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  corr, dhi, dhir, rainfrac,                                            &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                          ! Parametrization information</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  d_qcf_cry_dt,d_qcf_agg_dt,                                            &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                                          ! Mass transfer diagnostics</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  d_qrain_dt,d_qgraup_dt,                                               &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                                          ! Mass transfer diagnostics</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  iterations, one_over_tsi,                                             &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                                          ! 1/(timestep*iterations)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  cftransfer,cfftransfer,                                               &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                          <span class="comment">! Cloud transfer diagnostics</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  uk, vk, ukp1, vkp1,                                                   &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                                          <span class="comment">! Winds for calc of wind-shear</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  r_theta_levels_c, fv_cos_theta_latitude_c,                            &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                          <span class="comment">! Grid info</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  l_use_agg_vt,                                                         &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                          <span class="comment">! Vt-D branch to use</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  vm_used                                                            &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  )</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="namespacelsp__fall__mod.xhtml#a3a628438b8bfd7cda24a39bea9285408">   51</a></span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="comment">! Microphysics and Clouds modules</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemphys__ice__mod.xhtml">mphys_ice_mod</a><span class="keywordtype">,        ONLY</span>: <a class="code" href="namespacemphys__ice__mod.xhtml#aa631527d598893b86a9a1c3c3c966c5e" title="Holds Ice constants required by the large-scale precipitation scheme. ">m0</a></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemphys__constants__mod.xhtml">mphys_constants_mod</a><span class="keywordtype">,  ONLY</span>: <a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>, <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemphys__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">mphys_inputs_mod</a><span class="keywordtype">,     ONLY</span>: <a class="code" href="namespacemphys__inputs__mod.xhtml#a8a0e33ee4b9133e8e8204f85ee911d27" title="Use Abel &amp; Shipway rain fall speeds. ">l_rainfall_as</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#aacd85de8a9929005765528abb1bd50c2" title="Use generic ice psd. ">l_psd</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#a92240689885adf9ac77eaf71b5171465" title="Use improved warm rain microphysics scheme. ">l_warm_new</a>,     &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                  <a class="code" href="namespacemphys__inputs__mod.xhtml#a3d970e6ae2e572f69c0d3cea5b5247ce">l_mcr_qgraup</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#a1e977cd2bfc88d00f67153d185e877f8">l_mcr_qcf2</a>,             &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                  <a class="code" href="namespacemphys__inputs__mod.xhtml#ad580b93fb6223c38181f3f05d1b82c62">l_mcr_qrain</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#aea3e0bc5d046f886642a9900eec11e5b">l_diff_icevt</a>  use <a class="code" href="namespacecloud__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cloud_inputs_mod</a>,     only: pc2_falliceshear_method,              &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                  cff_spread_rate</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemphys__bypass__mod.xhtml" title="Global bypass module for switches concerned with microphysics. ">mphys_bypass_mod</a><span class="keywordtype">,     ONLY</span>: <a class="code" href="namespacemphys__bypass__mod.xhtml#a38222b2b3a80d849c922730e370acf0a" title="Module containing logical switches used by the microphysics code that are not part of the run_precip ...">l_crystals</a>, <a class="code" href="namespacemphys__bypass__mod.xhtml#aa3d77eebd1bc1821d0e42bba7e9db5be">mp_dell</a>, <a class="code" href="namespacemphys__bypass__mod.xhtml#af15e86f1314d21b0f6adcf7073a840bf">mp_delp</a></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacepc2__constants__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">pc2_constants_mod</a><span class="keywordtype">,    ONLY</span>: wind_shear_factor,                    &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                  original_but_wrong, ignore_shear,     &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                  real_shear</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="comment">! Dr Hook Modules</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,              ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,             ONLY</span>: jprb, jpim</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="comment">! Large scale precip modules</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacelsp__moments__mod.xhtml" title="Large-scale precipitation scheme. Conversion between moments of PSD Large-scale precipitation scheme...">lsp_moments_mod</a><span class="keywordtype">,      ONLY</span>: <a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacelsp__sedim__eulexp__mod.xhtml" title="Microphysics hydrometeor Eulerian sedimentation scheme Microphysics hydrometeor Eulerian sedimentatio...">lsp_sedim_eulexp_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacelsp__sedim__eulexp__mod.xhtml#a002676b410597224bb86fd5c04c02655">lsp_sedim_eulexp</a></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">! Description of Code:</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    points,                                                             &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                          <span class="comment">! Number of points to calculate</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    iterations</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                          <span class="comment">! Number of microphysics iterations</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                          <span class="comment">! (for rate diagnostic)</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    timestep,                                                           &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                          <span class="comment">! Timestep / s</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    frac_agg(points),                                                   &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                          <span class="comment">! Fraction of ice mass that is aggregates</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    snow_cry(points),                                                   &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                          <span class="comment">! Crystal flux into layer / kg m-2 s-1</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    snow_agg(points),                                                   &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                          <span class="comment">! Aggregate flux into layer / kg m-2 s-1</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    rainrate(points),                                                   &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                          <span class="comment">! Rain flux into layer / kg m-2 s-1</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    grauprate(points),                                                  &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                          <span class="comment">! Graupel flux into layer / kg m-2 s-1</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    area_clear(points),                                                 &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                          <span class="comment">! Fraction of gridbox with clear sky</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    area_ice(points),                                                   &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                          <span class="comment">! Frac of gridbox with ice but not liquid</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    cfice(points),                                                      &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                          <span class="comment">! Fraction of gridbox with ice cloud</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    cficei(points),                                                     &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                          <span class="comment">! 1/Fraction of gridbox with ice cloud</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    rainfrac(points),                                                   &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                          <span class="comment">! Rain fraction in grid-box</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    frac_ice_above(points),                                             &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                               <span class="comment">! Ice cloud fraction in layer above</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    rho(points),                                                        &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                          <span class="comment">! Air density / kg m-3</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    rhor(points),                                                       &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                          <span class="comment">! 1 / Air density / m3 kg-1</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    dhi(points),                                                        &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                          <span class="comment">! Timestep / thickness of model layer / s m-1</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    dhir(points),                                                       &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                          <span class="comment">! 1/dhi / m s-1</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    tcgi(points),                                                       &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                          <span class="comment">! 1/tcg (no units)</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    tcgci(points),                                                      &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                          <span class="comment">! 1/tcgc (no units)</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    corr(points),                                                       &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                          <span class="comment">! Air density fall speed correction (no units)</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    uk(points),                                                         &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                          <span class="comment">! U wind on level k</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    vk(points),                                                         &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                          <span class="comment">! V wind on level k</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    ukp1(points),                                                       &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                          <span class="comment">! U wind on level k+1</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    vkp1(points),                                                       &amp;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                          <span class="comment">! V wind on level k+1</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    r_theta_levels_c(points),                                           &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                          <span class="comment">! Distance from centre of Earth and ...    fv_cos_theta_latitude_c(points),                                    &amp;</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                          <span class="comment">! ... grid info for working out gridbox size.</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    one_over_tsi                                   <span class="comment">! 1/timestep(*iterations)</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    l_use_agg_vt(points)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                          <span class="comment">! Determines which vt-D parameters to use</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    qcf_cry_0(points),                                                  &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                          <span class="comment">! Ice crystal mixing ratio / kg kg-1</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    qcf_agg_0(points),                                                  &amp;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                          <span class="comment">! Ice aggregate mixing ratio / kg kg-1</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    qrain_0(points),                                                    &amp;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                          <span class="comment">! Rain mixing ratio / kg kg-1</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    qgraup_0(points),                                                   &amp;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                          <span class="comment">! Graupel mixing ratio / kg kg-1</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    t(points),                                                          &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                          <span class="comment">! Temperature / K</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    snowt_cry(points),                                                  &amp;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                          <span class="comment">! Snowfall rate out of this layer / kg m-2 s-1</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    snowt_agg(points),                                                  &amp;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                            <span class="comment">! for crystals and aggregates</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    rainratet(points),                                                  &amp;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                          <span class="comment">! Rain rate out of this layer / kg m-2 s-1</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    graupratet(points),                                                 &amp;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                          <span class="comment">! Graupel rate out of this layer / kg m-2 s-1</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    vf_cry(points),                                                     &amp;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                          <span class="comment">! On input: Fall speed of hydrometeors</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    vf_agg(points),                                                     &amp;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                    <span class="comment">! entering the current layer / m s-1</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    vf_rain(points),                                                    &amp;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                          <span class="comment">! On output: Fall speed of hydrometeors</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    vf_graup(points),                                                   &amp;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                                    <span class="comment">! leaving the current layer / m s-1</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    cf(points),                                                         &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                          <span class="comment">! Current cloud fraction</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    cfl(points),                                                        &amp;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                          <span class="comment">! Current liquid cloud fraction</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    cff(points)       <span class="comment">! Current ice cloud fraction</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    d_qcf_cry_dt(points),                                               &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                             <span class="comment">! Rate of change of crystal, aggregate,</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    d_qcf_agg_dt(points),                                               &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                               <span class="comment">! rain and graupel mixing ratios due</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    d_qrain_dt(points),                                                 &amp;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                               <span class="comment">! to sedimentation / kg kg-1 s-1</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    d_qgraup_dt(points),                                                &amp;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    cftransfer(points),                                                 &amp;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                           <span class="comment">! Cloud fraction increment this tstep</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    cfftransfer(points)<span class="comment">! Ice cloud fraction inc this tstep</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                   &amp;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    vm_used(points)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                          <span class="comment">! Split fallspeed variables</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">! Local Variables</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    i                 <span class="comment">! Loop counter for points</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    qcf_cry(points),                                                    &amp;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                          <span class="comment">! Working copy of qcf_cry_0 / kg kg-1</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    qcf_agg(points),                                                    &amp;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                          <span class="comment">! Working copy of qcf_agg_0 / kg kg-1</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    qrain(points),                                                      &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                          <span class="comment">! Working copy of q_rain / kg kg-1</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    qgraup(points),                                                     &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                          <span class="comment">! Working copy of q_graup / kg kg-1</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    fqi_agg(points),                                                    &amp;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                          <span class="comment">! Fall speed of aggregates out of the</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                          <span class="comment">! current layer / m s-1</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    fqi_cry(points),                                                    &amp;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                          <span class="comment">! Fall speed of crystals out of the</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                          <span class="comment">! current layer / m s-1</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    fqirqi2_agg(points),                                                &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                            <span class="comment">! Fraction of aggregate and crystal mass</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    fqirqi2_cry(points),                                                &amp;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                              <span class="comment">! that remains in the current layer</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                              <span class="comment">! after sedimentation</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    fqirqi_agg,                                                         &amp;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                          <span class="comment">! Flux of aggregates out of layer / m s-1</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    fqirqi_cry,                                                         &amp;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                          <span class="comment">! Flux of crystals out of layer / m s-1</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    fqi_rain(points),                                                   &amp;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                          <span class="comment">! Bulk fall speed of rain and graupel</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    fqi_graup(points),                                                  &amp;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                            <span class="comment">! out of the current layer / m s-1</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    mixratio_fromabove(points),                                         &amp;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                   <span class="comment">! Estimate of the mixing ratio</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                          <span class="comment">! of ice in the layer above / kg kg-1</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    temp3(points),                                                      &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                          <span class="comment">! Fraction of layer ice falls through</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    overhang,                                                           &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                          <span class="comment">! Ice cloud fraction that overhangs</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                          <span class="comment">! the current layer from above</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    deltacf(points),                                                    &amp;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                          <span class="comment">! Change in cloud fraction across timestep</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    deltacff(points),                                                   &amp;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                          <span class="comment">! Change in ice cloud fraction across tstep</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    m_bi_di(points),                                                    &amp;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                          <span class="comment">! bi+di&#39;th moment of the ice particle dist.</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                          <span class="comment">! Change in ice cloud fraction across tstep</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    m_bic_dic(points),                                                  &amp;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                          <span class="comment">! bic+dic&#39;th moment of the ice particle dist.</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    lamr(points),                                                       &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                          <span class="comment">! Lambda for rain.</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    lamrh1(points),                                                     &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                          <span class="comment">! Lambda for rain + h1r</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    lamrh2(points),                                                     &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                          <span class="comment">! Lambda for rain + h2r</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    save_vf_agg(points),                                                &amp;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    save_vf_cry(points),                                                &amp;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="comment">! For calculating lateral displacement of falling ice due to shear.</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    -    mwfv, dudz, dvdz, shear, horiz_scale, lateral_disp, cff_perimeter</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LSP_FALL&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;           <span class="comment">! Calculate moment of size distribution if appropriate</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;     </div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#aacd85de8a9929005765528abb1bd50c2" title="Use generic ice psd. ">l_psd</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;      <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacemphys__inputs__mod.xhtml#aea3e0bc5d046f886642a9900eec11e5b">l_diff_icevt</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="comment">! Use only one vt-D relation</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="comment">! Calculate the bi+di (cx(82)) moment of the</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="comment">! ice particle size distribution</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;         <span class="keyword">CALL </span><a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a>(points,rho,t,qcf_agg_0,cficei,<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(82),m_bi_di)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;         <span class="comment">! The vt-D relation which gives the</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;         <span class="comment">! least mass weighted mean fallspeed will be used so</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;         <span class="comment">! calculate both required moments</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a>(points,rho,t,qcf_agg_0,cficei,<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(182),      &amp;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                            m_bic_dic)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;             <span class="comment">! ice mass flux moment with crystal parameters</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a>(points,rho,t,qcf_agg_0,cficei,<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(82),      &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                             m_bi_di)</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;             <span class="comment">! ice mass flux moment with aggregate parameters</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! l_diff_icevt</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! l_psd</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;               <span class="comment">! Copy input water contents (allows sequential updates)</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;           qcf_cry(i) = qcf_cry_0(i)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    qcf_agg(i) = qcf_agg_0(i)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    qrain(i)   = qrain_0(i)</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    qgraup(i)  = qgraup_0(i)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="comment">! Save the fall speeds coming in from layer above before    ! they get overwritten with fall speed passed to layer below.</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="comment">! Will be used in updating falling ice cloud fraction</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    save_vf_agg(i)=vf_agg(i)</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    save_vf_cry(i)=vf_cry(i)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordflow">IF</span> (qcf_agg(i) &gt;  <a class="code" href="namespacemphys__ice__mod.xhtml#aa631527d598893b86a9a1c3c3c966c5e" title="Holds Ice constants required by the large-scale precipitation scheme. ">m0</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                   <span class="comment">! Estimate fall speed out of this layer</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;               <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#aacd85de8a9929005765528abb1bd50c2" title="Use generic ice psd. ">l_psd</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <span class="comment">! Use the generic PSD</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;         <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacemphys__inputs__mod.xhtml#aea3e0bc5d046f886642a9900eec11e5b">l_diff_icevt</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="comment">! Only one set of vt-D parameters</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            <span class="comment">! constp(82) = ci*ai</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            fqi_agg(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(82) * corr(i) * m_bi_di(i)                  &amp;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                   / (rho(i) * qcf_agg(i) * cficei(i))</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;         <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            <span class="keywordflow">IF</span> (l_use_agg_vt(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;               <span class="comment">! Use aggregate parameters</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;               fqi_agg(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(82) * corr(i) * m_bi_di(i)               &amp;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                   / (rho(i) * qcf_agg(i) * cficei(i))</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;               <span class="comment">! Use crystal parameters</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;               fqi_agg(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(182) * corr(i) * m_bic_dic(i)            &amp;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                   / (rho(i) * qcf_agg(i) * cficei(i))</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="keywordflow">         END IF</span> <span class="comment">! l_diff_icevt</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        fqi_agg(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(24) * corr(i) *                             &amp;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        (rho(i)*qcf_agg(i)*<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(25)*tcgi(i)*cficei(i))**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(23)</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! l_psd</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                   <span class="comment">! Ice content is small so it is numerically best to</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;          <span class="comment">! assume there is no ice here, so the fall speed is zero.</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;               fqi_agg(i)=0.0</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="keywordflow">    END IF</span>  <span class="comment">! qcf_agg gt 0</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="comment">! Store the selected mean fallspeed</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    vm_used(i) = fqi_agg(i)</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keywordflow">IF</span> (qcf_cry(i) &gt;  <a class="code" href="namespacemphys__ice__mod.xhtml#aa631527d598893b86a9a1c3c3c966c5e" title="Holds Ice constants required by the large-scale precipitation scheme. ">m0</a> .AND. <a class="code" href="namespacemphys__bypass__mod.xhtml#a38222b2b3a80d849c922730e370acf0a" title="Module containing logical switches used by the microphysics code that are not part of the run_precip ...">l_crystals</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                 <span class="comment">! Estimate fall speed out of this layer</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;              fqi_cry(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(4) * corr(i)*                                 &amp;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;      (rho(i)*qcf_cry(i)*<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(5)*tcgci(i)*cficei(i))**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(3)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                   <span class="comment">! Ice content is small so it is numerically best to</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;          <span class="comment">! assume there is no ice here, so the fall speed is zero.</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;               fqi_cry(i)=0.0</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordflow">    END IF</span>  <span class="comment">! qcf_cry gt 0</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keywordflow">  END DO</span>  <span class="comment">! Points</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;  <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacemphys__inputs__mod.xhtml#a1e977cd2bfc88d00f67153d185e877f8">l_mcr_qcf2</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                   <span class="comment">! Calculate fall speed from above as an average of the</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;          <span class="comment">! crystal and aggregate fall speeds.</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;               mixratio_fromabove(i) = (snow_agg(i) + snow_cry(i))               &amp;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                               * dhi(i)*rhor(i)</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;      <span class="keywordflow">IF</span> ((qcf_cry(i)+qcf_agg(i)+mixratio_fromabove(i)) &gt;  <a class="code" href="namespacemphys__ice__mod.xhtml#aa631527d598893b86a9a1c3c3c966c5e" title="Holds Ice constants required by the large-scale precipitation scheme. ">m0</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                       <span class="comment">! Make a linear combination of fall speeds between this</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            <span class="comment">! layer and the layer above to aid numerical solution</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                   fqi_cry(i)= ( fqi_cry(i)*(qcf_cry(i)+qcf_agg(i))                &amp;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                      + vf_agg(i)*mixratio_fromabove(i) )               &amp;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                    / (qcf_cry(i)+qcf_agg(i)+mixratio_fromabove(i))</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        fqi_agg(i)= ( fqi_agg(i)*(qcf_cry(i)+qcf_agg(i))                &amp;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                      + vf_agg(i)*mixratio_fromabove(i) )               &amp;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                    / (qcf_cry(i)+qcf_agg(i)+mixratio_fromabove(i))</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                       <span class="comment">! Fall speed of ice to pass to layer below</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                   vf_agg(i) = fqi_cry(i) * (1.0-frac_agg(i))                      &amp;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                  + fqi_agg(i) *      frac_agg(i)</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;      <span class="keywordflow">ELSE</span>  <span class="comment">! qcf gt m0</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <span class="comment">! Little ice so set fall speed to zero</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        vf_agg(i)=0.0</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! qcf gt m0</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                   <span class="comment">! Solve for fraction of ice that remains in the same layer</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;               fqirqi2_agg(i) = exp(-fqi_agg(i)*dhi(i))</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;      fqirqi2_cry(i) = exp(-fqi_cry(i)*dhi(i))</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;      <span class="keywordflow">IF</span> (fqi_agg(i)  &gt;   0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                       <span class="comment">! Advect aggregates</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                   fqirqi_agg = snow_agg(i) + dhir(i) *                            &amp;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                    (rho(i)*qcf_agg(i)-snow_agg(i)/fqi_agg(i))          &amp;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                    * (1.0-fqirqi2_agg(i))</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        qcf_agg(i) = snow_agg(i) * rhor(i) / fqi_agg(i)                 &amp;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                    * (1.0-fqirqi2_agg(i))                              &amp;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                    + qcf_agg(i)*fqirqi2_agg(i)</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                       <span class="comment">! No fall of ice out of the layer</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                   fqirqi_agg = 0.0</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        qcf_agg(i) = snow_agg(i)*rhor(i)*dhi(i)</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! fqi_agg gt 0</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;      <span class="keywordflow">IF</span> (fqi_cry(i)  &gt;   0.0 .AND. <a class="code" href="namespacemphys__bypass__mod.xhtml#a38222b2b3a80d849c922730e370acf0a" title="Module containing logical switches used by the microphysics code that are not part of the run_precip ...">l_crystals</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                       <span class="comment">! Advect crystals</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                   fqirqi_cry = snow_cry(i) + dhir(i) *                            &amp;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                    (rho(i)*qcf_cry(i)-snow_cry(i)/fqi_cry(i))          &amp;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                    * (1.0-fqirqi2_cry(i))</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        qcf_cry(i) = snow_cry(i) * rhor(i) / fqi_cry(i)                 &amp;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                    * (1.0-fqirqi2_cry(i))                              &amp;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                    + qcf_cry(i)*fqirqi2_cry(i)</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                       <span class="comment">! No fall of ice out of the layer</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                   fqirqi_cry = 0.0</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        qcf_cry(i) = snow_cry(i)*rhor(i)*dhi(i)</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! fqi_cry gt 0</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;          <span class="comment">! -          ! Snow is used to save flux out of layer</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;          <span class="comment">! -      snowt_cry(i) = snowt_cry(i) + fqirqi_cry/iterations</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;      snowt_agg(i) = snowt_agg(i) + fqirqi_agg/iterations</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="keywordflow">    END DO</span>  <span class="comment">! Points</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;  <span class="keywordflow">ELSE</span>  <span class="comment">! l_mcr_qcf2</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;               <span class="comment">! Prognostic Ice Crystal and Snow Aggregate Sedimentation</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;               <span class="comment">! Ice Crystals</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__bypass__mod.xhtml#a38222b2b3a80d849c922730e370acf0a" title="Module containing logical switches used by the microphysics code that are not part of the run_precip ...">l_crystals</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacelsp__sedim__eulexp__mod.xhtml#a002676b410597224bb86fd5c04c02655">lsp_sedim_eulexp</a>(                                            &amp;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        iterations, points, <a class="code" href="namespacemphys__ice__mod.xhtml#aa631527d598893b86a9a1c3c3c966c5e" title="Holds Ice constants required by the large-scale precipitation scheme. ">m0</a>, dhi, dhir, rho, rhor,                   &amp;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        snow_cry, fqi_cry, qcf_cry, vf_cry,                             &amp;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        snowt_cry)</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="keywordflow">    END IF</span>  <span class="comment">! l_crystals</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        <span class="comment">! Aggregates</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacelsp__sedim__eulexp__mod.xhtml#a002676b410597224bb86fd5c04c02655">lsp_sedim_eulexp</a>(                                              &amp;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;      iterations, points, <a class="code" href="namespacemphys__ice__mod.xhtml#aa631527d598893b86a9a1c3c3c966c5e" title="Holds Ice constants required by the large-scale precipitation scheme. ">m0</a>, dhi, dhir, rho, rhor,                     &amp;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;      snow_agg, fqi_agg, qcf_agg, vf_agg,                               &amp;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;      snowt_agg)</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="keywordflow">  END IF</span> <span class="comment">! l_mcr_qcf2</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;           <span class="comment">! Rain Sedimentation</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;       <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#ad580b93fb6223c38181f3f05d1b82c62">l_mcr_qrain</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;      <span class="keywordflow">IF</span> (qrain(i)  &gt;   <a class="code" href="namespacemphys__ice__mod.xhtml#aa631527d598893b86a9a1c3c3c966c5e" title="Holds Ice constants required by the large-scale precipitation scheme. ">m0</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                       <span class="comment">! Estimate fall speed out of this layer (FQI_RAIN)</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;           </div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            <span class="comment">!Calculate lambda for rain:</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            <span class="comment">! assuming rain is a mixing ratio (kg kg-1)</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a8a0e33ee4b9133e8e8204f85ee911d27" title="Use Abel &amp; Shipway rain fall speeds. ">l_rainfall_as</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a92240689885adf9ac77eaf71b5171465" title="Use improved warm rain microphysics scheme. ">l_warm_new</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            <span class="comment">! flux should be scaled by rain fraction</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            lamr(i) = (1.0/(qrain(i)*rho(i)*<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(50)/rainfrac(i)))    &amp;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                                                             **<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(52)</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            <span class="comment">! original (wrong) method which ignored rain fraction</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            lamr(i) = (1.0/(qrain(i)*rho(i)*<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(50)))**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(52)</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;              <span class="comment">!Calculate additional properties</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;              <span class="comment">! lamda +h1r</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;          lamrh1(i) = lamr(i)+<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(56)</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;              <span class="comment">! lamda +h2r</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;          lamrh2(i) = lamr(i)+<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(57)</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;          fqi_rain(i) = ((lamr(i)**(<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(45)))/<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(53))*corr(i)*       &amp;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;             ( (<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(54) / lamrh1(i)**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(59) ) +                      &amp;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;               (<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(55) / lamrh2(i)**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(60) ) )</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a92240689885adf9ac77eaf71b5171465" title="Use improved warm rain microphysics scheme. ">l_warm_new</a> .AND. fqi_rain(i) &lt; 0.001) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            <span class="comment">! minimum fall speed allowed for rain</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            fqi_rain(i) = 0.001</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a92240689885adf9ac77eaf71b5171465" title="Use improved warm rain microphysics scheme. ">l_warm_new</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;            <span class="comment">! flux should be scaled by rain fraction</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            fqi_rain(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(41) * corr(i) / 6.0 *                  &amp;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;            (rho(i) * qrain(i) * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(50)/rainfrac(i)) ** <a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(51)</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            <span class="comment">! original (wrong) method which ignored rain fraction</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            fqi_rain(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(41) * corr(i) / 6.0 *                  &amp;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            (rho(i) * qrain(i) * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(50)) ** <a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(51)</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">!L_rainfall_as</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;            <span class="comment">! Fall speed is set to zero</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        fqi_rain(i) = 0.0</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! qrain gt m0</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="keywordflow">    END DO</span>  <span class="comment">! Points</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacelsp__sedim__eulexp__mod.xhtml#a002676b410597224bb86fd5c04c02655">lsp_sedim_eulexp</a>(                                              &amp;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;      iterations, points, <a class="code" href="namespacemphys__ice__mod.xhtml#aa631527d598893b86a9a1c3c3c966c5e" title="Holds Ice constants required by the large-scale precipitation scheme. ">m0</a>, dhi, dhir, rho, rhor,                     &amp;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;      rainrate, fqi_rain, qrain, vf_rain,                               &amp;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;      rainratet)</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="keywordflow">  END IF</span>  <span class="comment">! l_mcr_qrain</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;           <span class="comment">! Graupel Sedimentation</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;       <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a3d970e6ae2e572f69c0d3cea5b5247ce">l_mcr_qgraup</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;      <span class="keywordflow">IF</span> (qgraup(i)  &gt;   <a class="code" href="namespacemphys__ice__mod.xhtml#aa631527d598893b86a9a1c3c3c966c5e" title="Holds Ice constants required by the large-scale precipitation scheme. ">m0</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                       <span class="comment">! Estimate fall speed out of this layer (FQI_GRAUP)</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                   fqi_graup(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(64) * corr(i) *                           &amp;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;          (rho(i) * qgraup(i) * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(65)) ** <a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(63)</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            <span class="comment">! Fall speed is set to zero</span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        fqi_graup(i) = 0.0</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! qgraup gt m0</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="keywordflow">    END DO</span>  <span class="comment">! Points</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacelsp__sedim__eulexp__mod.xhtml#a002676b410597224bb86fd5c04c02655">lsp_sedim_eulexp</a>(                                              &amp;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;       iterations, points, <a class="code" href="namespacemphys__ice__mod.xhtml#aa631527d598893b86a9a1c3c3c966c5e" title="Holds Ice constants required by the large-scale precipitation scheme. ">m0</a>, dhi, dhir, rho, rhor,                    &amp;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;       grauprate, fqi_graup, qgraup, vf_graup,                          &amp;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;       graupratet)</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="keywordflow">  END IF</span>  <span class="comment">!  l_mcr_qgraup</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;  <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;           <span class="comment">! Update cloud fractions</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;     </div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;      <span class="keywordflow">IF</span> ((qcf_cry(i)+qcf_agg(i))  &gt;   0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        <span class="keywordflow">IF</span> (pc2_falliceshear_method == original_but_wrong) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;          -          <span class="comment">! Calculate fraction of a layer the ice has fallen</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;          -          <span class="comment">! This incorrectly uses the fall velocities in THIS layer</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;          <span class="comment">! rather than those from the layer ABOVE.</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;          -          <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a1e977cd2bfc88d00f67153d185e877f8">l_mcr_qcf2</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;            temp3(i) = dhi(i) * (vf_agg(i)*qcf_agg(i)                   &amp;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                       + vf_cry(i)*qcf_cry(i))/(qcf_cry(i)+qcf_agg(i))</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;            temp3(i) = dhi(i) * vf_agg(i)</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;          -          <span class="comment">! Calculate the amount of cloud overhang between levels</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;          -          overhang = max(frac_ice_above(i)-cff(i),0.0)</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;          <span class="keywordflow">IF</span> (temp3(i)  &gt;   0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;            overhang = overhang + wind_shear_factor / temp3(i)          &amp;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                       * timestep</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;          -          <span class="comment">! Physially limit the amount of overhang. Note there is</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;          <span class="comment">! no limit on the fraction of ice in the layer above</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;          -          overhang = min(overhang,1.0-cff(i))</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;          <span class="comment">! Now limit the fall out quantity</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;          temp3(i) = min(max(temp3(i),0.0),1.0)</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;          -          <span class="comment">! Calculate change in ice cloud fraction</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;          -                     temp3(i) = temp3(i) * overhang</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;          deltacff(i) = temp3(i)</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;          <span class="keywordflow">IF</span> (temp3(i)  &lt;=  0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                       <span class="comment">! Total cloud fraction will be reduced</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                       deltacf(i) = temp3(i)*area_ice(i)*cficei(i) <span class="comment">!Random o&#39;lap</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;          <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (cfice(i)  &lt;   1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                       <span class="comment">! Total cloud fraction will be increased</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;           <span class="comment">!           deltacf(i) = temp3(i)*area_clear(i) /(1.0-cfice(i))</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="comment">!                                                      !Random o&#39;lap</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            deltacf(i) = (min(temp3(i),area_clear(i))) <span class="comment">!Minimum o&#39;lap</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        <span class="keywordflow">ELSE</span> <span class="comment">! (pc2_falliceshear_method /= original_but_wrong)</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                   <span class="comment">! Calculate temp3 or &quot;fraction ice fallen&quot;:           ! fraction of depth of this layer the ice from the layer           ! above has fallen. Using fall speed INTO layer.         </span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a1e977cd2bfc88d00f67153d185e877f8">l_mcr_qcf2</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;            <span class="comment">! Find mass-weighted fall velocity (mwfv) for combined            ! ice categories.</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;            mwfv = (save_vf_agg(i)*qcf_agg(i)+save_vf_cry(i)*qcf_cry(i))&amp;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                 / (qcf_cry(i)+qcf_agg(i))</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;            <span class="comment">! Using single ice category</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            mwfv = save_vf_agg(i)</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;          temp3(i) = mwfv * dhi(i)</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;          <span class="comment">! Ensure temp3 is positive</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;          <span class="comment">! but allow &quot;fraction fallen&quot; to be &gt; 1.          temp3(i)            = MAX(temp3(i),0.0)</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                    <span class="comment">! Calculate the amount of cloud overhang between levels</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                    overhang = max(frac_ice_above(i)-cff(i),0.0)</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;          <span class="keywordflow">IF</span> (pc2_falliceshear_method == real_shear) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            <span class="comment">! Increase the overhang depending on the vertical</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            <span class="comment">! shear of the model wind.</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;            <span class="comment">! Magnitude of vertical shear of the horizontal wind.</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;            <span class="comment">! |dU/dz| = SQRT( dudz^2 + dvdz^2 )</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;            dudz = ( ukp1(i) - uk(i) )</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;            dvdz = ( vkp1(i) - vk(i) )</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;            shear = sqrt( (dudz*dudz) + (dvdz*dvdz) )</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;            <span class="comment">! The horizontal scale is taken as the square root            ! of the area of the grid box.</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;            horiz_scale = sqrt(   r_theta_levels_c(i) * <a class="code" href="namespacemphys__bypass__mod.xhtml#aa3d77eebd1bc1821d0e42bba7e9db5be">mp_dell</a>         &amp;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                                 * r_theta_levels_c(i) * <a class="code" href="namespacemphys__bypass__mod.xhtml#af15e86f1314d21b0f6adcf7073a840bf">mp_delp</a>         &amp;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                                 * fv_cos_theta_latitude_c(i)     )</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;            <span class="comment">! Calculate the horizontal distance (in metres) the ice</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;            <span class="comment">! has moved across</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;            lateral_disp = shear * timestep</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            <span class="comment">! Convert the lateral displacement of the falling ice</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;            <span class="comment">! cloud fraction to an increase in ice cloud fraction</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;            <span class="comment">! overhang by considering the size of the grid-box.</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;            overhang = overhang + ( lateral_disp / horiz_scale )</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">! pc2_falliceshear_method == real shear</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                   <span class="comment">! Calculate change in ice cloud fraction</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                   <span class="comment">! The overhanging cloud gets advected down a          ! certain fraction of the depth of the layer. Now assume the          ! cloud fills the whole depth of the layer and</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;          <span class="comment">! reduce the lateral extent while conserving cloud volume.</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;          deltacff(i)=min(temp3(i) * overhang, 1.0-cff(i))</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;          <span class="comment">! Augment the change in ice cloud fraction to account</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;          <span class="comment">! for the lateral spreading out of ice cloud (e.g. cirrus).</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;          <span class="comment">! This will increase CFF while keeping IWC the same.</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;          <span class="comment">!</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;          <span class="comment">! Cloud can only spread out from its edges, so work out the          ! perimeter of the cloud edge as a function of cloud fraction.</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;          cff_perimeter=-(2.0*cff(i)*cff(i))+(2.0*cff(i))</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;          deltacff(i)=deltacff(i)+(cff_spread_rate*cff_perimeter*timestep)</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;          deltacff(i)=min(deltacff(i), 1.0-cff(i))</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;          <span class="keywordflow">IF</span> (cfice(i) &lt; 1.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                       <span class="comment">! Total cloud fraction will be increased</span></div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                       deltacf(i) = (min(deltacff(i),area_clear(i))) <span class="comment">!Minimum o&#39;lap</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;          <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (cfice(i) == 1.0) <span class="keywordflow">THEN</span>            deltacf(i) = 0.0</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! pc2_falliceshear_method</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;      <span class="keywordflow">ELSE</span>  <span class="comment">! qcf gt 0</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;        <span class="comment">! Set ice cloud fraction to zero and total cloud</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;        <span class="comment">! fraction to the liquid cloud fraction</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        deltacff(i) = -cff(i)</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        deltacf(i)  = (cfl(i) - cf(i))</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! qcf gt 0</span></div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;               <span class="comment">! Form transfer diagnostics</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;       </div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    d_qcf_cry_dt(i) = d_qcf_cry_dt(i) +                                 &amp;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;      (qcf_cry(i) - qcf_cry_0(i)) * one_over_tsi</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    d_qcf_agg_dt(i) = d_qcf_agg_dt(i) +                                 &amp;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;      (qcf_agg(i) - qcf_agg_0(i)) * one_over_tsi</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    d_qrain_dt(i) = d_qrain_dt(i) +                                     &amp;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;      (qrain(i) - qrain_0(i)) * one_over_tsi</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    d_qgraup_dt(i) = d_qgraup_dt(i) +                                   &amp;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;      (qgraup(i) - qgraup_0(i)) * one_over_tsi</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;               <span class="comment">! Update water contents</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;       </div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;      qcf_cry_0(i) = qcf_cry(i)</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;      qcf_agg_0(i) = qcf_agg(i)</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;      qrain_0(i)   = qrain(i)</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;      qgraup_0(i)  = qgraup(i)</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;               <span class="comment">! Update cloud fractions</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;       </div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;      cf(i)  = cf(i)  + deltacf(i)</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;      cff(i) = cff(i) + deltacff(i)</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;      cftransfer(i)  = cftransfer(i)  + deltacf(i)  * one_over_tsi</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;      cfftransfer(i) = cfftransfer(i) + deltacff(i) * one_over_tsi</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;<span class="keywordflow">  END DO</span>  <span class="comment">! Points</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LSP_FALL&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespacelsp__fall__mod.xhtml#a3a628438b8bfd7cda24a39bea9285408">lsp_fall</a></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacelsp__fall__mod.xhtml" title="Large-scale precipitation scheme. Advection through falling of ice Large-scale precipitation scheme...">lsp_fall_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
