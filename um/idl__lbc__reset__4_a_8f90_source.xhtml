<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/dynamics_advection/idl_lbc_reset_4A.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_cd31b8e5b091f70cb512ede7e9775b9c.xhtml">dynamics_advection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">idl_lbc_reset_4A.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="idl__lbc__reset__4_a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="idl__lbc__reset__4_a_8f90.xhtml#a1c8527bb0352f0ec8952e4b52c33bf24" title="Subroutine eg_IDL_LBC_Reset. ">eg_idl_lbc_reset</a>(                                      &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;                   Lbc_size_g, model_levels,                            &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;                   timestep, timestep_number,                           &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                   max_model_levels, max_num_force_times,               &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                   num_force_times, force_time_interval,                &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                   force_data_modlev, fld)</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="idl__lbc__reset__4_a_8f90.xhtml#a1c8527bb0352f0ec8952e4b52c33bf24">   12</a></span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        Lbc_size_g                                                      &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                            <span class="comment">! Number of points</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      , model_levels                                                    &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                            <span class="comment">! Number of model levels</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      , num_force_times                                                 &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                            <span class="comment">! Number of times in forcing array</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      , timestep_number                                                 &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                            <span class="comment">! Timestep number in run</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      , max_model_levels                                                &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                            <span class="comment">! Maximum number of model levels</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      , max_num_force_times <span class="comment">! Maximum number of forcing times</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                               &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        timestep                                                        &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                               <span class="comment">! Timestep interval (secs)</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      , force_time_interval    <span class="comment">! Interval between forcing data</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <span class="comment">! Forcing data on model levels</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                               &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;       force_data_modlev(max_model_levels, max_num_force_times)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                            &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;       fld(lbc_size_g, model_levels)     <span class="comment">! Field increment</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        i,k                                                             &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                   <span class="comment">! Loop counters</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      , t_before                                                        &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                   <span class="comment">! Time index in forcing array before current time</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      , t_after    <span class="comment">! Time index in forcing array after current time</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        fld_avg                                                         &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                              <span class="comment">! Global average of field on a level</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      , current_time                                                    &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                              <span class="comment">! Time since start of run in seconds</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      , weight                                                          &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                              <span class="comment">! Weight for linear time interpolation</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      , force_data_modlev_int <span class="comment">! Time interpolated forcing data</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EG_IDL_LBC_RESET&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="comment">! Setup time interpolation variables</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="comment">! IF (lhook) CALL dr_hook(&#39;IDL_LBC_RESET&#39;,zhook_in,zhook_handle)</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      current_time = timestep*timestep_number</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      t_before     = int(current_time/force_time_interval) + 1</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      t_after      = t_before + 1</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="comment">! Set t_after appropriately if end of forcing dataset</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="comment">! coincides with end of model run</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keywordflow">IF</span> (t_after  ==  num_force_times+1) t_after = t_before</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      <span class="comment">! Set linear interpolation weights</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      weight   = 1.0 - mod(current_time,force_time_interval)            &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                              / force_time_interval</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="keywordflow">DO</span> k = 1, model_levels</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        -        <span class="comment">! Interpolate forcing data to current time</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        -</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        force_data_modlev_int = force_data_modlev(k,t_before)*weight    &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            + force_data_modlev(k,t_after)*(1-weight)</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        -        <span class="comment">! Set term to forcing data</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        -</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">DO</span> i = 1, lbc_size_g</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;          fld(i,k) = force_data_modlev_int</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keywordflow">      END DO</span>  <span class="comment">! loop over levels</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">! End of routine.</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EG_IDL_LBC_RESET&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="idl__lbc__reset__4_a_8f90.xhtml#a1c8527bb0352f0ec8952e4b52c33bf24" title="Subroutine eg_IDL_LBC_Reset. ">eg_idl_lbc_reset</a></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
