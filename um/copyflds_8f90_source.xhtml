<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/fieldcalc/copyflds.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_925d6107435631a137c191c3b43797c1.xhtml">fieldcalc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">copyflds.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="copyflds_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="copyflds_8f90.xhtml#af05e4524743d3a4d462efd3cd4141a31" title="Routines for copying fields from one UM fieldsfile to another. ">copyflds</a>( NumFlds_In,  &amp;  ! in</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;                     MaxFlds,     &amp;  ! in</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;                     STCode,      &amp;  ! in</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;                     MO8Level,    &amp;  ! in</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                     MO8LevelLwr, &amp;  ! in</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                     MO8LevelUpr, &amp;  ! in</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                     FCTime,      &amp;  ! in</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                     FCTimeStart, &amp;  ! in</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;                     FCTimeFreq,  &amp;  ! in</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;                     FCTimeEnd,   &amp;  ! in</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;                     LBProc,      &amp;  ! in</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                     MinsPastHr,  &amp;  ! in</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                     MinsDif,     &amp;  ! in</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                     Factor,      &amp;  ! in</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                     Store,       &amp;  ! in</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                     PPHdrMod,    &amp;  ! in</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                     UMHdr_in,    &amp;  ! in</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                     UMHdr_out,   &amp;  ! inout</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                     Fields,      &amp;  ! inout</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                     ErrorStatus )   <span class="comment">! inout</span></div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="copyflds_8f90.xhtml#af05e4524743d3a4d462efd3cd4141a31">   25</a></span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceio__mod.xhtml" title="Module containing derived types used for IO in Fieldcalc. ">io_mod</a><span class="keywordtype">, ONLY</span>:         &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>,          &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <a class="code" href="structio__mod_1_1pp__header__type.xhtml" title="Global Type Definitions: ">pp_header_type</a>,         &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <a class="code" href="structio__mod_1_1um__header__type.xhtml">um_header_type</a>,         &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <a class="code" href="namespaceio__mod.xhtml#a00c316d0e956ece7ec75edd79516401e">lsmfield</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceerr__mod.xhtml" title="Module containing error codes for Fieldcalc. ">err_mod</a><span class="keywordtype">, ONLY</span>:        &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a>,               &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <a class="code" href="namespaceerr__mod.xhtml#abef63b1aad05f1f96cfa12dbf6091abc">statuswarning</a></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: NumFlds_In</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: MaxFlds</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: STCode     (maxflds)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> :: MO8Level    (maxflds)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>    :: MO8LevelLwr (maxflds)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>    :: MO8LevelUpr (maxflds)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> :: FCTime      (maxflds)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>    :: FCTimeStart (maxflds)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>    :: FCTimeFreq  (maxflds)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>    :: FCTimeEnd   (maxflds)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: LBProc     (maxflds)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: Store      (maxflds)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: MinsPastHr (maxflds)</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: MinsDif    (maxflds)</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: Factor     (maxflds)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: PPHdrMod</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1um__header__type.xhtml">um_header_type</a>), <span class="keywordtype">INTENT(IN)</span> :: UMHdr_in</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1um__header__type.xhtml">um_header_type</a>), <span class="keywordtype">INTENT(INOUT)</span> :: UMHdr_out</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>), <span class="keywordtype">INTENT(INOUT)</span> :: Fields(maxflds)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> :: ErrorStatus</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keywordtype">CHARACTER(LEN=*)</span>, <span class="keywordtype">PARAMETER</span> :: RoutineName = <span class="stringliteral">&quot;CopyFlds&quot;</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: VSmall = 1.e-9</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">CHARACTER(LEN=*)</span>, <span class="keywordtype">PARAMETER</span> :: CPackType = <span class="stringliteral">&quot;WGDOS&quot;</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keywordtype">INTEGER</span> :: NumLookups</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordtype">INTEGER</span> :: MaxFldSize</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordtype">INTEGER</span> :: i</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">INTEGER</span> :: ihdr</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">INTEGER</span> :: NumScl</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">INTEGER</span> :: CFldCount</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keywordtype">INTEGER</span> :: WFldCount</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keywordtype">INTEGER</span> :: SFldCount</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordtype">INTEGER</span> :: NumFlds</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keywordtype">INTEGER</span> :: dt_days, dt_secs</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">INTEGER</span> :: vt_days, vt_secs</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">INTEGER</span> :: LocMinsDif</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordtype">REAL</span>    :: PackAcc</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keywordtype">CHARACTER(LEN=80)</span> :: ErrMessage</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordtype">LOGICAL</span> :: LDecode</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordtype">LOGICAL</span> :: LCopyall <span class="comment">! True if we are really copying all fields.</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>) :: TempField</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>) :: XpndField</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>) :: CompField</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: FoundField(:)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keywordtype">LOGICAL</span>              :: l_return_warn</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">CALL </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a>( routinename, 3 )</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordflow">IF</span> ( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="comment">! Previous error - do not proceed</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">! Default return a warning to false</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;l_return_warn = .false.</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">! Default specifying Numflds to be the input.</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;lcopyall = .false.</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;numflds = numflds_in</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;numlookups = umhdr_in % NumFlds</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">! Deal with whether we are being called by Copyall.  Numflds could be 0 so we</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">! have added passed down numflds + maxflds + 1 to signify copyall.</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keywordflow">IF</span> ( numflds_in &gt; maxflds ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="comment">! This signals to copy all fields</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  lcopyall = .true.</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  numflds = numflds_in - maxflds - 1</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">! Allocate array to store whether field is found.</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keyword">ALLOCATE</span>(foundfield(numflds))</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;foundfield(:) = .false.</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">! Allocate temporary field</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;maxfldsize = maxval( umhdr_in % Lookup(1:numlookups) % NumCols ) * &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;             maxval( umhdr_in % Lookup(1:numlookups) % NumRows )</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">ALLOCATE</span>( tempfield % RData( maxfldsize, 1) )</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;numscl    = 0</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;cfldcount = 0</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;sfldcount = 0</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">! Lets store all the fields requested in store array.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword">CALL </span><a class="code" href="getflds_8f90.xhtml#aa82204be4b90c52bd9a6374449c7ce01" title="Routines to read requested fields from a UM fieldsfile. ">getflds</a>(numflds,maxflds,stcode,mo8level,fctime,lbproc,minspasthr,  &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;             minsdif, store,pphdrmod,umhdr_in,fields,errorstatus)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">! Add check here... if problem</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keywordflow">IF</span> (errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  errmessage = <span class="stringliteral">&#39;Problem storing field.  Trying to continue copying.&#39;</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename, errorstatus, errmessage)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">! Temporarily remove error but set it again at the end.</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  errorstatus = <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  l_return_warn = .true.</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">! Loop through list</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordflow">DO</span> ihdr = 1,numlookups</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">! If we are copying all we can read the field here.</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordflow">IF</span> (lcopyall) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    cfldcount = cfldcount + 1</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="comment">! Found matching field.  Retrieve data</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="comment">!CFldCount = CFldCount + 1</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="comment">! We may have already retrieved data in getflds above.</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    tempfield % LookupPos = ihdr</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    tempfield % Hdr = umhdr_in % Lookup( tempfield % LookupPos )</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">! Read field into temporary space.</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    ldecode = .false.</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">! DEPENDS ON: readfld</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keyword">CALL </span><a class="code" href="readfld_8f90.xhtml#adeada5bf622a22f3c995fe6fd0b7272a" title="Routines to read requested fields from a UM fieldsfile. ">readfld</a>( umhdr_in, ldecode, pphdrmod, tempfield,   &amp;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                    errorstatus )</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordflow">IF</span> ( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="keyword">WRITE</span>( errmessage, <span class="stringliteral">&#39;(A36,I4)&#39;</span> ) &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;             <span class="stringliteral">&quot;Could not read input field position &quot;</span>, ihdr</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      errorstatus = <a class="code" href="namespaceerr__mod.xhtml#abef63b1aad05f1f96cfa12dbf6091abc">statuswarning</a></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, errmessage )</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      l_return_warn = .true.</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      cycle</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  -  <span class="comment">!  Search lookup for the required FIELD</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  -  <span class="comment">! -1 is a wildcard for MO8Level and FCRange. STCode must be fixed.</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="comment">! There is a similar check in getflds.</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <span class="keywordflow">DO</span> i = 1, numflds</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">! See if we are using range and set MO8Level to correct value</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">IF</span> ( umhdr_in % Lookup(ihdr) % MO8Level &gt;= mo8levellwr(i) .AND. &amp;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;         umhdr_in % Lookup(ihdr) % MO8Level &lt;= mo8levelupr(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      mo8level(i) = umhdr_in % Lookup(ihdr) % MO8Level</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">! See if we are using range to specify time, set FCTime to correct value.</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">! If MinsPastHr is required specify each MinsPastHr separately in namelist.</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordflow">IF</span> ( umhdr_in % Lookup(ihdr) % FCRange &gt;= fctimestart(i) .AND. &amp;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;         umhdr_in % Lookup(ihdr) % FCRange &lt;= fctimeend(i)   .AND. &amp;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;         modulo(umhdr_in % Lookup(ihdr) % FCRange - fctimestart(i),&amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                fctimefreq(i)) == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      fctime(i) = umhdr_in % Lookup(ihdr) % FCRange</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordflow">IF</span> ( stcode(i)      == umhdr_in % Lookup(ihdr) % STCode       .AND. &amp;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;         (mo8level(i)   == umhdr_in % Lookup(ihdr) % MO8Level     .OR.  &amp;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;          mo8level(i)   == -1                                 )   .AND. &amp;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;         (fctime(i)     == umhdr_in % Lookup(ihdr) % FCRange      .OR.  &amp;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;          fctime(i)     == -1                                 )   .AND. &amp;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;         (minspasthr(i) == umhdr_in % Lookup(ihdr) % ValidMin     .OR.  &amp;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;          minspasthr(i) == -1                                 )   .AND. &amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;         (lbproc(i)     == umhdr_in % Lookup(ihdr) % LBProc       .OR.  &amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;          lbproc(i)     == -1                                 ) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      <span class="comment">! If we have a valid minsdif value then check it.</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;      <span class="keywordflow">IF</span> ( minsdif(i)    /= -1 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="comment">! Calculate data time as reference time.</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">! DEPENDS ON: time2sec</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keyword">CALL </span>time2sec(umhdr_in % Lookup(ihdr) % DataYear,  &amp;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                      umhdr_in % Lookup(ihdr) % DataMonth, &amp;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                      umhdr_in % Lookup(ihdr) % DataDate,  &amp;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                      umhdr_in % Lookup(ihdr) % DataHour,  &amp;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                      umhdr_in % Lookup(ihdr) % DataMin,   &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                      0,                                   &amp;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                      0, 0,                                &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                      dt_days, dt_secs,                    &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                      mod(umhdr_in % Lookup(ihdr) % LBTIM,10) == 2)</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="comment">! Calculate validity time using data time as basis.</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">! DEPENDS ON: time2sec</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keyword">CALL </span>time2sec(umhdr_in % Lookup(ihdr) % ValidYear,  &amp;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                      umhdr_in % Lookup(ihdr) % ValidMonth, &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                      umhdr_in % Lookup(ihdr) % ValidDate,  &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                      umhdr_in % Lookup(ihdr) % ValidHour,  &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                      umhdr_in % Lookup(ihdr) % ValidMin,   &amp;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                      0,                                    &amp;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                      0, 0,                                 &amp;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                      vt_days, vt_secs,                     &amp;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                      mod(umhdr_in % Lookup(ihdr) % LBTIM,10) == 2)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="comment">! Calculate difference in minutes between data time and validity time.</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">IF</span> (umhdr_in % Lookup(ihdr) % LBTim /= 11) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;          locminsdif = ((dt_days-vt_days)*24*60) + ((dt_secs-vt_secs)/60)</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;          locminsdif = ((vt_days-dt_days)*24*60) + ((vt_secs-dt_secs)/60)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        locminsdif = -1</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="comment">! Check to see if time difference is the correct one</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      <span class="keywordflow">IF</span> ( minsdif(i) /= locminsdif ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="comment">! Move to next field since this isnt the correct field</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;          cycle</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                <span class="keywordflow">IF</span> ( abs(factor(i)) &gt; vsmall ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        numscl = numscl + 1</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="comment">! Found matching field.  Retrieve data</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            foundfield(i) = .true.</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      <span class="keywordflow">IF</span> (.NOT. lcopyall) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        cfldcount = cfldcount + 1</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        tempfield % LookupPos = ihdr</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        tempfield % Hdr = umhdr_in % Lookup( tempfield % LookupPos )</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="comment">! Read field into temporary space.</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        ldecode = .false.</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">! DEPENDS ON: readfld</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="keyword">CALL </span><a class="code" href="readfld_8f90.xhtml#adeada5bf622a22f3c995fe6fd0b7272a" title="Routines to read requested fields from a UM fieldsfile. ">readfld</a>( umhdr_in, ldecode, pphdrmod, tempfield,   &amp;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                      errorstatus )</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keywordflow">IF</span> ( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;          <span class="keyword">WRITE</span>( errmessage, <span class="stringliteral">&#39;(A36,I4)&#39;</span> ) &amp;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                 <span class="stringliteral">&quot;Could not read input field position &quot;</span>, ihdr</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;          errorstatus = <a class="code" href="namespaceerr__mod.xhtml#abef63b1aad05f1f96cfa12dbf6091abc">statuswarning</a></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, errmessage )</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;          l_return_warn = .true.</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;          cycle</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      <span class="keywordflow">IF</span> ( abs(factor(i)) &gt; vsmall ) <span class="keywordflow">THEN</span> <span class="comment">! Unpack</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="comment">! Could be improved since we might already have this stored.</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        packacc = tempfield % Hdr % BAcc</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keyword">CALL </span><a class="code" href="getflds_8f90.xhtml#aa82204be4b90c52bd9a6374449c7ce01" title="Routines to read requested fields from a UM fieldsfile. ">getflds</a>(1,1, &amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                     tempfield % Hdr % STCode,       &amp;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                     tempfield % Hdr % MO8Level,     &amp;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                     tempfield % Hdr % FCRange,      &amp;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                     tempfield % Hdr % LBProc,       &amp;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                     tempfield % Hdr % ValidMin,     &amp;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                     locminsdif,                     &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                     1,pphdrmod,umhdr_in,xpndfield,errorstatus)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="comment">! Scaling of output required</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        sfldcount = sfldcount + 1</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        xpndfield % RData = factor(i) * xpndfield % RData</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">! DEPENDS ON: pack_single</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keyword">CALL </span><a class="code" href="pack__single_8f90.xhtml#abbe919811f1c1a769b2d2e4ec60697e9" title="Routines for packing and unpacking. ">pack_single</a>( packacc, cpacktype, xpndfield, &amp;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                          compfield, errorstatus )</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        tempfield % Hdr = compfield % Hdr</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        tempfield % RData( 1:<span class="keyword">SIZE</span>(compfield % RData), :) = &amp;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                                                compfield % RData</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keyword">DEALLOCATE</span>( compfield % RData )</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keyword">NULLIFY</span>( compfield % RData )</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keyword">DEALLOCATE</span>( xpndfield % RData )</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="keyword">NULLIFY</span>( xpndfield % RData )</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">! Write it out if we are just copying what is specified in NumFlds.</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;      <span class="keywordflow">IF</span> (.NOT. lcopyall) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">! DEPENDS ON: fldout</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keyword">CALL </span><a class="code" href="fldout_8f90.xhtml#a7fe4d4af810d25502ce6e9274cccd9bb" title="Routines to write fields to a UM fieldsfile. ">fldout</a>( tempfield, umhdr_out, errorstatus )</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;      <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  <span class="comment">! Write every field out.</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  <span class="keywordflow">IF</span> (lcopyall) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keyword">CALL </span><a class="code" href="fldout_8f90.xhtml#a7fe4d4af810d25502ce6e9274cccd9bb" title="Routines to write fields to a UM fieldsfile. ">fldout</a>( tempfield, umhdr_out, errorstatus )</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">! Now print out diagnostic info if we didnt find it.  For entries with</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">! Store(i) &gt; 0 we should have reported error in getflds instead.</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keywordflow">DO</span> i = 1, numflds</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;  <span class="keywordflow">IF</span> ( (.NOT. foundfield(i)) .AND. store(i) &lt; 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="keyword">WRITE</span>( errmessage, <span class="stringliteral">&#39;(A46,4I5)&#39;</span> )                         &amp;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <span class="stringliteral">&quot;Field not found for STCode, MO8Level, FCRange, MinsPastHr: &quot;</span>,   &amp;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        stcode(i), mo8level(i), fctime(i), minspasthr(i)</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) errmessage</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;copyflds&#39;</span>)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) cfldcount, <span class="stringliteral">&quot; fields copied.&quot;</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;copyflds&#39;</span>)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) sfldcount, <span class="stringliteral">&quot; scaled, out of &quot;</span>, numscl, <span class="stringliteral">&quot; requested.&quot;</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;copyflds&#39;</span>)</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keywordflow">IF</span>(<span class="keyword">ALLOCATED</span>(foundfield)) <span class="keyword">DEALLOCATE</span>( foundfield )</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="keywordflow">IF</span>(<span class="keyword">ASSOCIATED</span>(tempfield % Rdata)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;  <span class="keyword">DEALLOCATE</span>( tempfield % RData )</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;  <span class="keyword">NULLIFY</span>( tempfield % Rdata )</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">! If error with storing fields then we at least try and complete action but</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">! return an error so further actions require intervention of a error clearing</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">! command.</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keywordflow">IF</span> (l_return_warn) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;  errorstatus = <a class="code" href="namespaceerr__mod.xhtml#abef63b1aad05f1f96cfa12dbf6091abc">statuswarning</a></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">! DEPENDS ON: timer</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="keyword">CALL </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a>( routinename, 4 )</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="copyflds_8f90.xhtml#af05e4524743d3a4d462efd3cd4141a31" title="Routines for copying fields from one UM fieldsfile to another. ">copyflds</a></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
