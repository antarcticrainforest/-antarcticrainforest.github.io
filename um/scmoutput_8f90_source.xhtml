<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/scm/diagnostic/scmoutput.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b97be95e70c2cb49b099ac39ba4801c2.xhtml">scm</a></li><li class="navelem"><a class="el" href="dir_f974de0797e0b116e79416c6884e1ea9.xhtml">diagnostic</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">scmoutput.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="scmoutput_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>                                                          &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  ( <a class="code" href="namespaceregrid__types.xhtml#a7ca70352d6d7a250eb1f293e3801d767">x</a>, sname, lname, units, timprof, domprof, streams, sname2                 &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  , calling_routine )</div><div class="line"><a name="l00008"></a><span class="lineno"><a class="line" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78">    8</a></span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceglobal__scmop.xhtml" title="SCM module for making SCMop accessible to SCMoutput from SCM_main. SCM module for making SCMop access...">global_scmop</a></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <span class="keywordtype">USE </span>scm_utils<span class="keywordtype">, ONLY</span>: scm_trap_nan</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaces__scmop__mod.xhtml">s_scmop_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>, <a class="code" href="namespaces__scmop__mod.xhtml#ab61b1909fcdb9b3f9552d14f2f8839fe">t_const</a></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keywordtype">INTEGER</span> :: domprof  <span class="comment">! In Domain profile for the diagnostic</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keywordtype">REAL</span> :: x  &amp;        <span class="comment">! In Variable from which diagnostic will be constructed</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      ((<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%d_rowa2(domprof)-<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%d_rowa1(domprof)+1)*           &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;       (<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%d_rowb2(domprof)-<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%d_rowb1(domprof)+1)*           &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;       (<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%d_lev2 (domprof)-<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%d_lev1 (domprof)+1))</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keywordtype">CHARACTER(LEN=*)</span> :: &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    sname             &amp;<span class="comment">! In Short name for the diagnostic,</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                       <span class="comment">!    this should be unique</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  , lname             &amp;<span class="comment">! In Long name for the diagnostic</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  , units             &amp;<span class="comment">! In Units of the diagnostic</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  , sname2             <span class="comment">! In Short name of another, previously</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                       <span class="comment">!    defined diagnostic which will be used</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                       <span class="comment">!    in the construction of this one</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                       <span class="comment">!    according to the time profile</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordtype">CHARACTER(LEN=*)</span> :: &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    calling_routine    <span class="comment">! In Routine that has called scmoutput</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keywordtype">INTEGER</span> ::          &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    timprof           &amp;<span class="comment">! In The time profile for the diagnostic</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  , streams            <span class="comment">! In An encoded integer specifying</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                       <span class="comment">!    which output streams the diagnostic</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                       <span class="comment">!    is to go to</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordtype">INTEGER</span> :: d,i,j     <span class="comment">! General use</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordtype">CHARACTER(LEN=30)</span> :: sdum0</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">LOGICAL</span> ::          &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    startperiod       &amp;<span class="comment">! Will be used to flag if we are at</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  , endperiod          <span class="comment">! the start or end of a dumping period</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordtype">INTEGER</span> ::                     &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    ndistinct_diags              &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  , distinct_diags(maxnstreams)  &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  , nThroughPeriod               &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  , ntrad                        &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  , ntrad1</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordtype">LOGICAL</span> ::       &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    call_add2dump  &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  , order_changing</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="comment">! Will hold the contents of SCMop%diag_mem while being</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="comment">! re-allocated</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">ALLOCATABLE</span> :: itemp(:,:)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="comment">! Perform no action if SCMop is not turned on, except in the</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="comment">! case of a constant diagnostic</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%on .AND. timprof /= <a class="code" href="namespaces__scmop__mod.xhtml#ab61b1909fcdb9b3f9552d14f2f8839fe">t_const</a>) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="comment">! Enforce a rule that sname must be at least one character long</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keywordflow">IF</span> (len(sname) == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%first_pass) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;SCMoutput ERROR: sname is a null string, this &#39;</span>//   &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;           <span class="stringliteral">&#39;is not allowed, diagnostic ignored: &#39;</span>,                &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;           lname(1:len(lname))</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;scmoutput&#39;</span>)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="comment">! Increment recorded no. of calls to this routine this timestep</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%on) <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%nSCMoutput = <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%nSCMoutput+1</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="comment">! If the requested list of streams span a range of dumping</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="comment">! periods then the given inputs will correspond to more than one</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="comment">! diagnostic entry in SCMop. Thus we need to get</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="comment">! distinct_diags(1:ndistinct_diags) - the indices of those</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="comment">! entries. The routine getdistinctdiags can do this but, if this</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="comment">! is not the first timestep, and assuming the order of the calls</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="comment">! to this routine doesn&#39;t change between timesteps, we can just</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="comment">! use our memory of a previous timestep instead.</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  order_changing = .false.</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordflow">IF</span> (.NOT.<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%first_pass) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="comment">! Use memory of previous timesteps to know which diagnostic</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">! entries this call pertains to.</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    ndistinct_diags = <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%diag_mem(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%nSCMoutput,1)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">DO</span> i=1, ndistinct_diags</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      distinct_diags(i) = <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%diag_mem(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%nSCMoutput,2)+i-1</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      <span class="comment">! Check we&#39;re right...</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="keywordflow">IF</span> (trim(sname(1:min(lsname,len(sname)))) /=                  &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;          trim(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%sname(distinct_diags(i)))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;*******************************************&#39;</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;scmoutput&#39;</span>)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;SCMoutput warning: the order of the calls&#39;</span>//    &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                   <span class="stringliteral">&#39; to SCMoutput seems to be changing:&#39;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;scmoutput&#39;</span>)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I4,A)&#39;</span>) <span class="stringliteral">&#39;  On step &#39;</span>,<a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>),           &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                  <span class="stringliteral">&#39; expected &#39;</span>//                                    &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        trim(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%sname(distinct_diags(i)))//                      &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                  <span class="stringliteral">&#39;, but encountered &#39;</span>//sname(1:min(lsname,len(sname)))</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;scmoutput&#39;</span>)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;*******************************************&#39;</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;scmoutput&#39;</span>)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        order_changing = .true.</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%substep_number /=                              &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;               <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%substep(distinct_diags(i))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;*******************************************&#39;</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;scmoutput&#39;</span>)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39; SCMoutput error: the order of the &#39;</span>  //    &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                       <span class="stringliteral">&#39;sub-steps seems to be changing.&#39;</span>)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I5,A,I3,A,I3)&#39;</span>)                                 &amp;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                <span class="stringliteral">&#39; On step &#39;</span>,<a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>),<span class="stringliteral">&#39; diagnostic &#39;</span>    //    &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                  sname(1:min(lsname,len(sname)))             //    &amp;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <span class="stringliteral">&#39; expected sub-step &#39;</span>,                              &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                  <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%substep(distinct_diags(i)),                 &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                <span class="stringliteral">&#39; but got sub-step &#39;</span>,<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%substep_number</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;scmoutput&#39;</span>)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39; This does not make sense and is a &#39;</span>  //    &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                          <span class="stringliteral">&#39;sign of a potentially serious problem.&#39;</span>)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;*******************************************&#39;</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;scmoutput&#39;</span>)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        order_changing = .true.</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%first_pass.OR.order_changing) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="comment">! Either this is the first timestep or the order of the calls</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment">! to SCMoutput is changing</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">! DEPENDS ON: getdistinctdiags</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keyword">CALL </span><a class="code" href="getdistinctdiags_8f90.xhtml#ae19d30f8fc794efdb49886f1952c090f" title="Obtain indices of diagnostic entries in SCMop given SCMoutput inputs. ">getdistinctdiags</a>                                       &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      ( sname, lname, units, timprof, domprof, streams, sname2  &amp;<span class="comment">! In</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      , ndistinct_diags, distinct_diags, <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a> )      <span class="comment">! Out,Out,InOut</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">! Don&#39;t want to do this next bit for constant diagnostics</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">! (which should be declared when the system is off)</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%on) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="comment">! Store the values of ndistinct_diags and distinct_diags(1)</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="comment">! for future reference (to avoid unnecessary calls to</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="comment">! getdistinctdiags). But is there enough space in the</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="comment">! SCMop%diag_mem array?</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="keywordflow">IF</span> (<span class="keyword">SIZE</span>(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%diag_mem,1) == <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%nSCMoutput-1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="comment">! No. Make the array bigger...</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="comment">! Allocate a temporary array with the same size and</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="comment">! shape as diag_mem</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keyword">ALLOCATE</span>(itemp(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%nSCMoutput-1,2))</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="comment">! Copy the contents of diag_mem into it</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        itemp = <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%diag_mem</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="comment">! Re-allocate diag_mem with a larger size</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keyword">DEALLOCATE</span>(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%diag_mem)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keyword">ALLOCATE</span>(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%diag_mem(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%nSCMoutput+49,2))</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="comment">! Copy the original contents back in</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%diag_mem(1:<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%nSCMoutput-1,1:2) = itemp</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%diag_mem(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%nSCMoutput,1) = ndistinct_diags</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%diag_mem(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%nSCMoutput,2) = distinct_diags(1)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="comment">! From here on in, none of the input parameters are</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="comment">! referred to at all, they have been distilled to</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="comment">! distinct_diags(1:ndistinct_diags) and information</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="comment">! in SCMop</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  ntrad  = <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%ntrad       <span class="comment">! No. of timesteps between calls to rad&#39;n</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  ntrad1 = <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%ntrad1      <span class="comment">! Timestep containing 1st call to rad&#39;n</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keywordflow">DO</span> i=1, ndistinct_diags</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    d = distinct_diags(i)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="comment">! If this is not the first time we&#39;ve seen this diagnostic,</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="comment">! check the last time was the previous timestep</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%lastencounter(d) &gt;= 0.AND.                            &amp;        <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%lastencounter(d) /= <a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>)-1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;SCMoutput ERROR: last encounter with this &#39;</span>//         &amp;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;             <span class="stringliteral">&#39;diagnostic was not last timestep: &#39;</span>,sname,            &amp;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;             <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%lastencounter(d),<a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>),                &amp;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;             (<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%daycount-1),<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%full_daysteps,                &amp;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;             <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%stepcount</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;scmoutput&#39;</span>)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="comment">! Record the fact that this diagnostic was seen by</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="comment">! this routine on this timestep.</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%lastencounter(d) = <a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="comment">! Calculate how many timesteps we are through the current</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="comment">! dumping period. 1=first time step, dump_step=last timestep</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="comment">! (and so a dump will occur this timestep).</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    nthroughperiod = mod(<a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>(<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>)-1,<a class="code" href="namespaceglobal__scmop.xhtml#afcfbe71543aeb7e0ed0336c229a30909" title="All the SCM diagnostic information is stored in a single structure, SCMop, first declared in SCM_main...">scmop</a>%dump_step(d))+1</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="comment">! Decide whether we are at the start of a dumping period, at</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="comment">! the end of of a dumping period, and whether we need to call</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="comment">! add2dump (using nThroughPeriod this is trivial for most</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="comment">! diagnostics, but has added complications in the case of</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="comment">! diagnostics only calculated on radiation timesteps)</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    startperiod   = .false.</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keyword">    end</span>period     = .FALSE.</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    call_add2dump = .true.</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keywordflow">IF</span> (.NOT.scmop%only_radsteps(d)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      <span class="comment">! Diagnostic d is a normal diagnostic, valid at every timestep</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      <span class="keywordflow">IF</span> (nthroughperiod == 1) startperiod = .true.</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      <span class="keywordflow">IF</span> (nthroughperiod == scmop%dump_step(d)) endperiod = .true.</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      <span class="comment">! Diagnostic d is based on a variable which only has</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      <span class="comment">! valid values on radiation timesteps.</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;      <span class="keywordflow">IF</span> (mod(scmop%stepcount-ntrad1,ntrad) /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="comment">! This is not a radiation timestep, assume input</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="comment">! array x contains nonsense information - do not</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="comment">! call add2dump.</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        call_add2dump = .false.</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="comment">! The criteria for startperiod and endperiod are now</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="comment">! altered slightly, since startperiod must be true if</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="comment">! this is the first radiation time step during this</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="comment">! dumping period, and endperiod must be true if this is</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="comment">! the last radiation time step during this dumping</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="comment">! period.</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordflow">IF</span> (nthroughperiod-1 &lt;  ntrad) startperiod = .true.</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <span class="keywordflow">IF</span> (scmop%dump_step(d)-nthroughperiod &lt;  ntrad) endperiod = .true.</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="comment">! This is a radiation timestep and so we can call</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="comment">! add2dump, but the no. of timesteps by which to divide</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="comment">! in order to calculate the average (or whatever) is</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="comment">! not dump_step, but the no. of times this part of the</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="comment">! code has been reached during this dumping period,</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="comment">! stored in SCMop%nadd2dump(d) (which for normal</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="comment">! diagnostics is set to dump_step in newdiag)</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;          <span class="keywordflow">IF</span> (startperiod) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;          scmop%nadd2dump(d) = 1</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;          scmop%nadd2dump(d) = scmop%nadd2dump(d)+1</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keywordflow">      END IF</span>            <span class="comment">! (mod(SCMop%stepcount-ntrad1,ntrad) /= 0)</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keywordflow">    END IF</span>             <span class="comment">! (.not.SCMop%only_radsteps(d))</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">IF</span> (call_add2dump) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">! DEPENDS ON: add2dump</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      <span class="keyword">CALL </span><a class="code" href="add2dump_8f90.xhtml#a9ef6bd2348ed8547ea4a98403bc63c63" title="Update the dump array of a SCM diagnostic entry in SCMop. ">add2dump</a> (<a class="code" href="namespaceregrid__types.xhtml#a7ca70352d6d7a250eb1f293e3801d767">x</a>, scmop%nelements(d), d, scmop, startperiod, endperiod)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;      <span class="keywordflow">DO</span> j=1, scmop%nelements(d)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keyword">WRITE</span>(sdum0,*) <a class="code" href="namespaceregrid__types.xhtml#a7ca70352d6d7a250eb1f293e3801d767">x</a>(j)</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="keywordflow">IF</span> (index(sdum0, <span class="stringliteral">&#39;NaN&#39;</span>) /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;          <span class="keyword">CALL </span>scm_trap_nan (sname, calling_routine)</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;          <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">IF</span> (index(sdum0, <span class="stringliteral">&#39;nan&#39;</span>) /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;          <span class="keyword">CALL </span>scm_trap_nan (sname, calling_routine)</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;          <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keywordflow">IF</span> (index(sdum0, <span class="stringliteral">&#39;NAN&#39;</span>) /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;          <span class="keyword">CALL </span>scm_trap_nan (sname, calling_routine)</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;          <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
