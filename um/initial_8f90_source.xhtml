<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/top_level/initial.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_b65d766d7948d607099cfdc8ce198b76.xhtml">top_level</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">initial.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="initial_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">      SUBROUTINE </span>initial(                                               &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;#include &quot;argszsp.h&quot;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;#include &quot;argszspa.h&quot;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;#include &quot;argszspc.h&quot;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;          ,                                                             &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;#include &quot;argsp.h&quot;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;#include &quot;argspa.h&quot;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;#include &quot;argspc.h&quot;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;           ngrgas,grgas_addr,                                           &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;           internal_model,submodel,ngroup,meanlev)</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">use </span><a class="code" href="namespaceatm__fields__mod.xhtml" title="DECLARE_ATM_FIELDS_MOD DECLARE_ATM_FIELDS_MOD. ">atm_fields_mod</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keywordtype">Use </span>atm_fields_bounds_mod</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">USE </span>switches<span class="keywordtype">, ONLY</span> : l_aggregate,   &amp; <span class="comment">! JULES tile-aggregation switch</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                     l_snow_albedo</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacefilenamelength__mod.xhtml" title="Module for allocation of Filename length. Module for allocation of Filename length. ">filenamelength_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacefilenamelength__mod.xhtml#a1f0ba129cfb2cc488313a144ac04a0e8" title="The module sets the max length of a filename in the UM. ">filenamelength</a></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;         <span class="keywordtype">USE </span><a class="code" href="namespacedynamics__input__mod.xhtml" title="Input control for dynamics. Input control for dynamics. ">dynamics_input_mod</a><span class="keywordtype">, ONLY</span>:    <a class="code" href="namespacedynamics__input__mod.xhtml#a664f3f3c828311db96d332abc6450aac">intrand_seed</a></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacedynamics__testing__mod.xhtml" title="Input control for dynamics. Input control for dynamics. ">dynamics_testing_mod</a><span class="keywordtype">, ONLY</span>:  <a class="code" href="namespacedynamics__testing__mod.xhtml#ad8c7d83e4cfe930670636aa5bc1f7b70" title="the following general users need not alter. power users may like to alter these via the namelist run_...">l_physics</a>,<a class="code" href="namespacedynamics__testing__mod.xhtml#a2c7af634fbfb9ee1ab39cd7b581b2f94">l_perturb_ic_theta</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacelbc__read__data__mod.xhtml" title="Input control for LBC reading Input control for LBC reading. ">lbc_read_data_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacelbc__read__data__mod.xhtml#a2622155097222cb0037b59b37d105774">albc_num</a>, <a class="code" href="namespacelbc__read__data__mod.xhtml#aaad0f93bd0c41249f7d0aa9549e010a9">albc2_starttime_steps</a>, <a class="code" href="namespacelbc__read__data__mod.xhtml#afd1123b50bf611cc17a221dad3f63c3d">albc_swapstep</a></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#if defined(OASIS3)</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor"></span><span class="keywordtype">USE </span><a class="code" href="namespaceoasis__atm__data__mod.xhtml" title="*****************************COPYRIGHT**************************************** **********************...">oasis_atm_data_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a5461d177d6866899f63187b02002f59f">oasis_couple_ts</a>, <a class="code" href="namespaceoasis__atm__data__mod.xhtml#ada4f403caf4b73c818aa40784d5bfee5">prism_timestep</a></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceiau__mod.xhtml" title="Parameters and variables for Incremental Analysis Update (IAU) scheme. ">iau_mod</a><span class="keywordtype">, ONLY</span> :    &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="namespaceiau__mod.xhtml#a9217785542f77daf4b9fabafc7382ee7">l_iau</a>,             &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="namespaceiau__mod.xhtml#a0ef284d3c21282505719b3ffc401dcdf">iau_firstcallts</a>,   &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="namespaceiau__mod.xhtml#a729dc7a6e534b486ccc765e7eeffbd1c">iau_lastcallts</a>,    &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="namespaceiau__mod.xhtml#a083a612b1755f21eb400974120ce96c5">l_iau_dumpts0state</a></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacesetup__iau__mod.xhtml" title="IAU set-up routine. ">setup_iau_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacesetup__iau__mod.xhtml#a084cf38b7d7329a6ebeb5aaf7fc4f83f">setup_iau</a></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordtype">USE </span>jules_mod<span class="keywordtype">, ONLY</span> :  clapp_levs                                     &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                     , sathh_levs                                     &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                     ,  hcap_levs                                     &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                     ,  hcon_levs                                     &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                     ,satcon_levs                                     &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                     ,smvccl_levs                                     &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                     ,smvcwt_levs                                     &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                     ,smvcst_levs</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceum__types.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">um_types</a></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a>          use um_parvars</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecontrol__max__sizes.xhtml" title="This file belongs in section: Misc. ">control_max_sizes</a></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacedecomp__db.xhtml" title="This file belongs in section: MPP. ">decomp_db</a></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="comment">! Make sure um_sleep is picked up from portio.</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceio__dependencies.xhtml" title="A module to contain downstream data dependencies. ">io_dependencies</a></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceum__input__control__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">um_input_control_mod</a><span class="keywordtype">,  ONLY</span>:                                  &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;           model_domain,        <a class="code" href="namespaceum__input__control__mod.xhtml#a62ceaf089fed3e4873157d8c3ad12b60">l_oasis</a>,         <a class="code" href="namespaceum__input__control__mod.xhtml#abbd5e50f1272fd8f94fce074dd59b03d">oasis_couple_freq</a>,     &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;           <a class="code" href="namespaceum__input__control__mod.xhtml#a2de11def18a66a82fea4394219af6c0a" title="MOSES II and Triffid logicals-. ">l_veg_fracs</a></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacemphys__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">mphys_inputs_mod</a><span class="keywordtype">, ONLY</span>:                                       &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;           <a class="code" href="namespacemphys__inputs__mod.xhtml#a1e977cd2bfc88d00f67153d185e877f8">l_mcr_qcf2</a>,          <a class="code" href="namespacemphys__inputs__mod.xhtml#ad580b93fb6223c38181f3f05d1b82c62">l_mcr_qrain</a>,     <a class="code" href="namespacemphys__inputs__mod.xhtml#a3d970e6ae2e572f69c0d3cea5b5247ce">l_mcr_qgraup</a>,          &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;           <a class="code" href="namespacemphys__inputs__mod.xhtml#ad7a185633b19aced8c7ee7a44a2026cb">l_mcr_qcf2_lbc</a>,      <a class="code" href="namespacemphys__inputs__mod.xhtml#aa35a37d47ad08e8b5cc1390e7a5b4eb0">l_mcr_qrain_lbc</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#a6cc9d6c615bc5b63edba595a217f3ee8">l_mcr_qgraup_lbc</a></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceriver__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">river_inputs_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceriver__inputs__mod.xhtml#aade21f15b58407090f05e8be23a0506e" title="=========================================================================== LOGICAL options set from ...">l_rivers</a></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceeng__corr__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">eng_corr_inputs_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceeng__corr__inputs__mod.xhtml#afa85786376e90acd7e63aafb5fda1028" title="=========================================================================== LOGICAL options set from ...">l_emcorr</a></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;          </div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keywordtype">USE </span>ukca_option_mod<span class="keywordtype">, ONLY</span>: l_ukca</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacenlstgen__mod.xhtml" title="Control variables Control variables. ">nlstgen_mod</a><span class="keywordtype">,  ONLY</span>: <a class="code" href="namespacenlstgen__mod.xhtml#a4a6ed31ef0d09bdc976baf277d1acbe7">secs_per_periodim</a>, <a class="code" href="namespacenlstgen__mod.xhtml#aded406ffa8d50a7c4a6325c5b75eb03d">steps_per_periodim</a></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacenlstcall__mod.xhtml" title="Control variables Control variables. ">nlstcall_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacenlstcall__mod.xhtml#ae2c24278ba9ef86425eb4b46e028750c">ncpu</a>, &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                               <a class="code" href="namespacenlstcall__mod.xhtml#a88acd7561aab078131bb8e9e33721582">num_albcs</a>, &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                               <a class="code" href="namespacenlstcall__mod.xhtml#a0808799eee686721023cd857144280ee">albc2_starttime_mins</a>, &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                               <a class="code" href="namespacenlstcall__mod.xhtml#ab4f74e5820852a02850463f38b181c64">ltimer</a>, &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                               <a class="code" href="namespacenlstcall__mod.xhtml#ac8bee74e99550307aa6d2a184b0860ad" title="!&gt; used for networking ">model_status</a>, &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                               <a class="code" href="namespacenlstcall__mod.xhtml#a1fedc7c6f932cbd1a35925dce954eb35">model_assim_mode</a>, &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                               <a class="code" href="namespacenlstcall__mod.xhtml#a7551b0ffe03a007cda4c5d094c854d3b">run_assim_mode</a></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacechsunits__mod.xhtml" title="copied from include file chsunits.h ">chsunits_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacechsunits__mod.xhtml#af6e26d3a6a1fedf0b44203712a772f8e">nunits</a></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacefile__units__mod.xhtml">file_units_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacefile__units__mod.xhtml#a09a773661cce4e91355df0f35c046abc" title="Main history file unit. ">xhist_unit</a></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">! Common blocks:</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">!CL Super array lengths</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">#include &quot;typszsp.h&quot;</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typszspa.h&quot;</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typszspc.h&quot;</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor"></span><span class="comment">!CL Super arrays</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">#include &quot;typspd1.h&quot;</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typspdua.h&quot;</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typspst.h&quot;</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typsppta.h&quot;</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typspcoa.h&quot;</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typspina.h&quot;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typspana.h&quot;</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typspbo.h&quot;</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typspboa.h&quot;</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typspcpl.h&quot;</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor"></span><span class="comment">!L       Model sizes</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#include &quot;typsize.h&quot;</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor"></span><span class="comment">!L       Addresses of arrays within super arrays</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">#include &quot;spindex.h&quot;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">#include &quot;chistory.h&quot;</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;cruntimc.h&quot;</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;ctime.h&quot;</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor">#include &quot;c_global.h&quot;</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;c_writd.h&quot;</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;lbc_coup.h&quot;</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">! Subroutine arguments:</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      <span class="keywordtype">INTEGER</span> internal_model <span class="comment">! OUT internal model identifier:</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">!                            !   1:Atmos; 2:Ocean; 3:Slab ; etc</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      <span class="keywordtype">INTEGER</span> submodel       <span class="comment">! OUT submodel partition (dump) identifier:</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">!                            !   1:Atmos; 2:Ocean; etc</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="keywordtype">INTEGER</span> ngroup         <span class="comment">! OUT   - No of steps in &quot;group&quot;n</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      <span class="keywordtype">INTEGER</span> meanlev        <span class="comment">! OUT - Mean level indicator</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">! 3-D fields of species to be passed down to radiation</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ngrgas</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: grgas_addr(ngrgas)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">! Local variables:</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      <span class="keywordtype">INTEGER</span>  imean      <span class="comment">! Loop index over mean periods</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="keywordtype">INTEGER</span>  i          <span class="comment">! Loop index</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      <span class="keywordtype">INTEGER</span>  ism        <span class="comment">! Loop index over submodels</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="keywordtype">INTEGER</span> ll        <span class="comment">! Counter</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <span class="keywordtype">INTEGER</span> len_filename <span class="comment">! Length of FILENAME array</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="keywordtype">INTEGER</span> dummyarg  <span class="comment">! Not used, needed to end arg list</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="keywordtype">INTEGER</span> secs_per_stepa <span class="comment">! Atmos timestep length in seconds</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="keywordtype">CHARACTER(LEN=filenamelength)</span> :: filename</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="keywordtype">CHARACTER(LEN=2)</span> envalue</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordtype">integer</span> len_wait_tot     <span class="comment">! Total wait time for boundary data</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keywordtype">CHARACTER(LEN=8)</span> ch_date2     <span class="comment">! Date from date_and_time</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="keywordtype">CHARACTER(LEN=10)</span> ch_time2    <span class="comment">! Time from date_and_time</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="keywordtype">integer</span> info             <span class="comment">! Return Code from GCOM routine.</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordtype">integer</span> lbc_ntimes       <span class="comment">! No of BC&#39;s in communication file</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="keywordtype">integer</span> ms_ntimes        <span class="comment">! No of BC&#39;s required in mesoscale</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="keywordtype">INTEGER</span> um_lbc_wait_usec <span class="comment">! No of microseconds to wait</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="keywordtype">LOGICAL</span>                                                           &amp;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;         not_enough_lbcs,                                                 &amp;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                          <span class="comment">! True if more LBCs are required</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;         read_more_values  <span class="comment">! True if we are to read more values in</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">! Number of dust bins in LBC generation, disabled if not using MakeBC</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      <span class="keywordtype">INTEGER</span> :: ndustbin_in, ndustbin_out</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">! Error reporting</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="keywordtype">INTEGER</span>       icode       <span class="comment">! =0 normal exit; &gt;0 error exit</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="keywordtype">CHARACTER(LEN=256)</span> cmessage    <span class="comment">! Error message</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      <span class="keywordtype">CHARACTER(LEN=*)</span> routinename</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      <a class="code" href="namespaceukca__radaer__struct__mod.xhtml#a7b11899c3ce190bb3d00d3a633af780e">parameter</a>(   routinename=<span class="stringliteral">&#39;INITIAL&#39;</span>)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">! Mixing ratio code</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      <span class="keywordtype">Logical</span>, <span class="keywordtype">Parameter</span> ::                                             &amp;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;         l_mr_iau = .false.  <span class="comment">! Use mixing ratio code (if available)</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">!- End of header</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INITIAL&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      icode=0</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      cmessage=<span class="stringliteral">&#39;&#39;</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">!L!L</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">!L 1.2 Set FT units as inactive on first step of the integration</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">!L     and set last field written/read to zero for each unit</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="ihistg_8h.xhtml#a2dc33634d19eb85af552b5099e51fd7c">h_stepim</a>(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">DO</span> i=20,<a class="code" href="namespacechsunits__mod.xhtml#af6e26d3a6a1fedf0b44203712a772f8e">nunits</a></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;          ft_active(i)=<span class="stringliteral">&#39;N&#39;</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;          ft_lastfield(i)=0</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keywordflow">        ENDDO</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">!L 1.3 Option to write RADINCS array to file cache2 on unit 16 removed</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>  &gt;=  <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Fast i/o of radincs directly to core memory&#39;</span>, &amp;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">!L Number of CPUs attached to program (ncpu) is hard-wired to 1.</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <a class="code" href="namespacenlstcall__mod.xhtml#ae2c24278ba9ef86425eb4b46e028750c">ncpu</a> = 1</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">!L 2. Initialise STASH control arrays from STASH control file.</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">! Note that NSECTS=NSECTP, NITEMS=NITEMP : set in WSTLST</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">! DEPENDS ON: initctl</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      <span class="keyword">CALL </span><a class="code" href="initctl_8f90.xhtml#adac1d8efd154eba08646440e1fb8c89b" title="LL SUBROUTINE INITCTL!&gt;LL. ">initctl</a>(                                                     &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">#include &quot;artsts.h&quot;</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="preprocessor"></span>         icode,cmessage )</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to INITCTL&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">!L!L 3. Read appropriate submodel partition dump to memory.  If coupled,</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">!L    page out the D1 part of each dump to its &#39;swap&#39; file and read the</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">!L    other dump(s) into memory.  Write temporary history file if dumps</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">!L    read successfully on timestep 0.</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">!L 3.1  Loop over submodel partition dumps</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      <span class="keywordflow">DO</span> ism=1,<a class="code" href="namespacesubmodel__mod.xhtml#a02a7a17a14c3392a30220b29e8b9ad93">n_submodel_partition</a></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        submodel=<a class="code" href="namespacesubmodel__mod.xhtml#ac8778eab8bc843ee8774845569ded524" title="List of submodel partition identifiers. ">submodel_partition_list</a>(ism)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">! DEPENDS ON: initdump</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keyword">CALL </span><a class="code" href="initdump_8f90.xhtml#a47bdadaf5815d019b41dd85404127d12" title="LL Subroutine INITDUMP !&gt;LL. ">initdump</a>(                                                  &amp;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artsts.h&quot;</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artlndm.h&quot;</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="preprocessor"></span>     &amp;               submodel,icode,cmessage)</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to INITDUMP&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keywordflow">      ENDDO</span>  <span class="comment">! ISM over submodel partitions</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">! SET_ATM_FIELDS points the fields in atm_fields_mod to the correct parts of D1</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">! It should be called after INITDUMP (which calls SET_ATM_POINTERS)</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">! and before INITDIAG (which calls ST_DIAG&lt;n&gt;).</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">! DEPENDS ON: set_atm_fields</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;      <span class="keyword">CALL </span>set_atm_fields(                                              &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artsts.h&quot;</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="preprocessor"></span>         spd1(ixd1(2)), spd1(ixd1(2)), spd1(ixd1(2)))</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">!L      Set RUN indicator in atmosphere dump header</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">! DEPENDS ON: set_run_indic_op</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      <span class="keyword">CALL </span><a class="code" href="set__run__indic__op_8f90.xhtml#ab7a540b98f6e18a4da6467b2a964154d" title="LL Subroutine: SET_RUN_INDIC_OP-!&gt;LL. ">set_run_indic_op</a>(                                            &amp;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="preprocessor"></span>         icode,cmessage)</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;      <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to SET_RUN_INDIC_OP&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">!L 3.3  On NRUN initialise dump LOOKUP headers associated with</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">!L      diagnostic fields with the bare essentials needed to read and</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">!L      write dumps - the rest to be filled in by STASH during the run.</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="ihistg_8h.xhtml#a2dc33634d19eb85af552b5099e51fd7c">h_stepim</a>(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)  == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">! DEPENDS ON: inithdrs</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="keyword">CALL </span><a class="code" href="inithdrs_8f90.xhtml#a3c31bab5dc025c6dbd5ff986a353f77e" title="SUBROUTINE INITHDRS -!&gt; ">inithdrs</a>(                                                  &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artsts.h&quot;</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="preprocessor"></span>     &amp;                icode,cmessage)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to INITHDRS&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="keywordflow">      END IF</span>    <span class="comment">! End test for NRUN</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;      <span class="keywordflow">if</span>(<a class="code" href="namespacedynamics__testing__mod.xhtml#a2c7af634fbfb9ee1ab39cd7b581b2f94">l_perturb_ic_theta</a> .AND. <a class="code" href="ihistg_8h.xhtml#a2dc33634d19eb85af552b5099e51fd7c">h_stepim</a>(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) == 0) <span class="keywordflow">then</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">! DEPENDS ON: perturb_theta_ctl</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;       <span class="keyword">call </span><a class="code" href="perturb__theta__ctl_8f90.xhtml#aa895308c2a888e8d9f8ffe22ad6e1067" title="subroutine perturb_theta_ctl ">perturb_theta_ctl</a>(                                          &amp;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="preprocessor"></span>          row_length, rows, model_levels,          &amp;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;          global_row_length, global_rows,          &amp;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;          model_domain, at_extremity,              &amp;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;          offx, offy, <a class="code" href="namespacedynamics__input__mod.xhtml#a664f3f3c828311db96d332abc6450aac">intrand_seed</a>,   datastart    &amp;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;          )</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keywordflow">     endif</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">!L 3.4 Write out temporary copy of D1 for current submodel</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;      icode=0</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;      <span class="keywordflow">IF</span> (l_writ_init) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keywordflow">DO</span> ism=1,<a class="code" href="namespacesubmodel__mod.xhtml#a02a7a17a14c3392a30220b29e8b9ad93">n_submodel_partition</a></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;          submodel=<a class="code" href="namespacesubmodel__mod.xhtml#ac8778eab8bc843ee8774845569ded524" title="List of submodel partition identifiers. ">submodel_partition_list</a>(ism)</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keywordflow">if</span> (submodel  ==  <a class="code" href="namespacesubmodel__mod.xhtml#a35421488a2f90015da0e1069913da490" title="Atmos SM partition in Long and Short form. ">atmos_sm</a>) <span class="keywordflow">then</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">! DEPENDS ON: dumpctl</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;           <span class="keyword">CALL </span><a class="code" href="dumpctl_8f90.xhtml#a3d8f404cc09e60a4e2702620d55a783d" title="Routine: DUMPCTL -!&gt;!&gt; Purpose: Controls the production and naming of output dump files...">dumpctl</a> (                                               &amp;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artlndm.h&quot;</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artsts.h&quot;</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="preprocessor"></span>     &amp;          <a class="code" href="namespacesubmodel__mod.xhtml#a35421488a2f90015da0e1069913da490" title="Atmos SM partition in Long and Short form. ">atmos_sm</a>,0,.true.,<span class="stringliteral">&#39;atminitial&#39;</span>,0,                       &amp;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;     &amp;          icode,cmessage)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;          <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to DUMPCTL (Atmos)&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="keywordflow">        endif</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="keywordflow">        ENDDO</span> <span class="comment">! ISM</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">!L!L 6.  Initialise means program control block</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      <span class="keywordflow">DO</span> ism=1,<a class="code" href="namespacesubmodel__mod.xhtml#a02a7a17a14c3392a30220b29e8b9ad93">n_submodel_partition</a></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        submodel=<a class="code" href="namespacesubmodel__mod.xhtml#ac8778eab8bc843ee8774845569ded524" title="List of submodel partition identifiers. ">submodel_partition_list</a>(ism)</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">! DEPENDS ON: initmean</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        <span class="keyword">CALL </span><a class="code" href="initmean_8f90.xhtml#a7a289b641a0966f9a3432fc1bdea7b90">initmean</a>(                                                  &amp;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="preprocessor"></span>           submodel,icode,cmessage)</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to INITMEAN for submodel &#39;</span>,       &amp;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;             ism,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keywordflow">      ENDDO</span> <span class="comment">! ISM over submodel partition dumps</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">!L!L 4. Set up other control blocks and physical constants</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">!L 4.1  Initialise the model time and check that history file data time</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment">!L      matches dump(s); set derived time/step information</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">! DEPENDS ON: inittime</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;      <span class="keyword">CALL </span>inittime(                                                    &amp;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="preprocessor"></span>         submodel,icode,cmessage)</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to INITTIME&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">!L 4.2  Write up history file after successfully reading</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">!L      initial dumps on timestep 0 and setting model_data_time if</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">!L      assimilation run, to allow CRUN from initial dumps.</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>  ==  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="ihistg_8h.xhtml#a2dc33634d19eb85af552b5099e51fd7c">h_stepim</a>(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment">! DEPENDS ON: temphist</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;          <span class="keyword">CALL </span><a class="code" href="temphist_8f90.xhtml#a4bcbe6438654eaf785414c7294a25c75" title="Routine : TEMPHIST !&gt; ">temphist</a>(<a class="code" href="namespacefile__units__mod.xhtml#a09a773661cce4e91355df0f35c046abc" title="Main history file unit. ">xhist_unit</a>,icode,cmessage)</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;          <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to TEMPHIST&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">!L 4.3  Set up control block for updating ancillary fields</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">! DEPENDS ON: inancctl</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;      <span class="keyword">CALL </span><a class="code" href="inancctl_8f90.xhtml#ad2db733ab55803dc05daa75f15879a07" title="LL Subroutine INANCCTL. ">inancctl</a>(                                                    &amp;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artsts.h&quot;</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artanc.h&quot;</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="preprocessor"></span>     &amp;           icode,cmessage)</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to INANCCTL&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">!L 4.4  Set up control block for updating boundary fields</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;      <span class="keywordflow">IF</span> (model_domain /= mt_global) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;      <a class="code" href="namespacelbc__read__data__mod.xhtml#a2622155097222cb0037b59b37d105774">albc_num</a> = 1</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;      <span class="comment">! Setup for use of two atmos boundary files:</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespacenlstcall__mod.xhtml#a88acd7561aab078131bb8e9e33721582">num_albcs</a> == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        <span class="comment">! Check namelist variable ALBC2_StartTime_mins:</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        secs_per_stepa = nint(secs_per_stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>))</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <span class="keywordflow">IF</span> (mod(<a class="code" href="namespacenlstcall__mod.xhtml#a0808799eee686721023cd857144280ee">albc2_starttime_mins</a>*60, secs_per_stepa) /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;          icode = 1</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;          <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A,I10,A)&#39;</span>)                                     &amp;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;             <span class="stringliteral">&#39;ALBC2_StartTime_mins (&#39;</span>, <a class="code" href="namespacenlstcall__mod.xhtml#a0808799eee686721023cd857144280ee">albc2_starttime_mins</a>,             &amp;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;             <span class="stringliteral">&#39;) does not coincide with the start of a timestep&#39;</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (routinename, icode, cmessage)</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;          <span class="comment">! Convert into steps:</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;          <a class="code" href="namespacelbc__read__data__mod.xhtml#aaad0f93bd0c41249f7d0aa9549e010a9">albc2_starttime_steps</a> = <a class="code" href="namespacenlstcall__mod.xhtml#a0808799eee686721023cd857144280ee">albc2_starttime_mins</a>*60/secs_per_stepa</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        <span class="comment">! If on a continuation run, we may be able to go straight to</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="comment">! the second boundary file:</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        <span class="keywordflow">IF</span> (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) &gt;= <a class="code" href="namespacelbc__read__data__mod.xhtml#aaad0f93bd0c41249f7d0aa9549e010a9">albc2_starttime_steps</a>) <a class="code" href="namespacelbc__read__data__mod.xhtml#a2622155097222cb0037b59b37d105774">albc_num</a> = 2</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;      <span class="comment">! NOTE: If using two boundary files, coupling is only activated</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;      <span class="comment">!       for the second.</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;      <span class="keywordflow">IF</span> (l_lbc_coup .AND.                                              &amp;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;         .NOT.(<a class="code" href="namespacenlstcall__mod.xhtml#a88acd7561aab078131bb8e9e33721582">num_albcs</a> == 2 .AND. <a class="code" href="namespacelbc__read__data__mod.xhtml#a2622155097222cb0037b59b37d105774">albc_num</a> == 1)) <span class="keywordflow">THEN</span> <span class="comment">! Global/Mes</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                                                          <span class="comment">! coupling</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        ms_ntimes=2  <span class="comment">! For now we assume the minimum requirement                      ! two sets of boundary conditions are required.</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                     <span class="comment">! Once INBOUND has been called we may find that</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                     <span class="comment">! we need more than this, in which case we will</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                     <span class="comment">! jump back to line 100</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="keywordflow">           END IF</span> <span class="comment">! not global</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160; 100  <span class="keywordflow">CONTINUE</span>  <span class="comment">! Return here if IN_BOUND has been called and there</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                <span class="comment">! are insufficient boundary conditions to proceed.</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                <span class="comment">! This condition may arise in CRUNS</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;      <span class="keywordflow">IF</span> (model_domain /= mt_global) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;      <span class="keywordflow">IF</span> (l_lbc_coup .AND.                                              &amp;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;         .NOT.(<a class="code" href="namespacenlstcall__mod.xhtml#a88acd7561aab078131bb8e9e33721582">num_albcs</a> == 2 .AND. <a class="code" href="namespacelbc__read__data__mod.xhtml#a2622155097222cb0037b59b37d105774">albc_num</a> == 1)) <span class="keywordflow">THEN</span> <span class="comment">! Global/Mes</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                                                          <span class="comment">! coupling</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        <span class="keyword">CALL </span>date_and_time(ch_date2, ch_time2)</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>  &gt;=  <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A,A,A,A,A,A,A,A,A,A,A)&#39;</span>) <span class="stringliteral">&#39;LBC_COUP: &#39;</span>,           &amp;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;             ch_time2(1:2),<span class="stringliteral">&#39;:&#39;</span>,ch_time2(3:4),<span class="stringliteral">&#39;:&#39;</span>,ch_time2(5:6),<span class="stringliteral">&#39; on &#39;</span>,         &amp;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;             ch_date2(7:8),<span class="stringliteral">&#39;/&#39;</span>,ch_date2(5:6),<span class="stringliteral">&#39;/&#39;</span>,ch_date2(1:4),                &amp;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;             <span class="stringliteral">&#39; Wait to call INBOUND in INITIAL.&#39;</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! (PrintStatus  &gt;=  PrStatus_Normal)</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment">! DEPENDS ON: timer</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        <span class="keyword">Call </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a> (<span class="stringliteral">&#39;LBC_WAIT&#39;</span>,3)</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>  ==  0) <span class="keywordflow">THEN</span>  <span class="comment">! Only do the check on the communication</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                               <span class="comment">! file on PE 0</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I10)&#39;</span>) <span class="stringliteral">&#39;ms_ntimes in INITIAL &#39;</span>,ms_ntimes</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;          not_enough_lbcs=.true.</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;          len_wait_tot=0</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;          <span class="keywordflow">DO</span> <span class="keywordflow">WHILE</span> (not_enough_lbcs) <span class="comment">! loop until the communication</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                                     <span class="comment">! file indicates we have enough</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                                     <span class="comment">! lbcs to start running with</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            read_more_values=.true.</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            <span class="keyword">CLOSE</span> (190) <span class="comment">! We need to close and reopen the communication</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                        <span class="comment">! file to ensure we see its latest state</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            <span class="keyword">OPEN</span> (190,<a class="code" href="parlbcs_8h.xhtml#a9bdcf7736b544227cbd66a99e5332d4d">file</a>=lbc_filename,action=<span class="stringliteral">&quot;read&quot;</span>,iostat=icode)</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span> <span class="comment">! Something went wrong with the OPEN</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I10)&#39;</span>)                                       &amp;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                 <span class="stringliteral">&#39;Return code from OPEN of communication file &#39;</span>,               &amp;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                 <span class="stringliteral">&#39;in INITIAL: &#39;</span>,icode</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;              icode=401</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;              <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>) <span class="stringliteral">&#39;INITIAL : OPEN failed for Unit 190&#39;</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;              read_more_values=.false. <span class="comment">! Jump out of the loops</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;              not_enough_lbcs=.false.  <span class="comment">! and call Ereport</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="keywordflow">            END IF</span> <span class="comment">! IF (ICODE  /=  0)</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            <span class="keywordflow">DO</span> <span class="keywordflow">WHILE</span> (read_more_values) <span class="comment">! loop while we need to read</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                                        <span class="comment">! more values from the</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                                        <span class="comment">! communication file</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;              <span class="keyword">READ</span> (190,*,iostat=icode) lbc_ntimes <span class="comment">! read the next value</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;              <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span> <span class="comment">! Problem with the READ...</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I10)&#39;</span>) <span class="stringliteral">&#39;ms : Return code from READ &#39;</span>,icode</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                <span class="keywordflow">IF</span> (len_wait_tot  &gt;=  <a class="code" href="lbc__coup_8h.xhtml#a2bb6a1a9ed567b27202f2cab35b341a9">um_lbc_wait_max</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                  <span class="comment">! Maximum wait time has been exceeded.</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                  <span class="comment">! Insufficient Boundary Conditions to proceed.</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                  <span class="comment">! Likely cause is delay in job generating the BC&#39;s.</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A,I10,A)&#39;</span>)  &amp;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                      <span class="stringliteral">&#39;ms: Maximum wait time reached &#39;</span>, &amp;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                     <span class="stringliteral">&#39;after &#39;</span>,<a class="code" href="lbc__coup_8h.xhtml#a2bb6a1a9ed567b27202f2cab35b341a9">um_lbc_wait_max</a>,<span class="stringliteral">&#39; seconds.&#39;</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                  icode=402</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                  <span class="keyword">WRITE</span>(cmessage,*) <span class="stringliteral">&#39;INITIAL : Failed to find &#39;</span>,        &amp;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                     <span class="stringliteral">&#39;required value in LBC_FILE.&#39;</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                  read_more_values=.false. <span class="comment">! Jump out of the loops</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                  not_enough_lbcs=.false.  <span class="comment">! and call Ereport</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                <span class="keywordflow">ELSE</span> <span class="comment">! We&#39;ve not exceeded the time limit</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                  <span class="comment">! Insufficient BCs to proceed.</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                  <span class="comment">! Wait for um_lbc_wait seconds before another</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                  <span class="comment">! attempt to read the file to see if more BCs</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                  <span class="comment">! have been written.</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I10,A)&#39;</span>) <span class="stringliteral">&#39;ms: Wait for &#39;</span>,<a class="code" href="lbc__coup_8h.xhtml#aeb440150f400a86f9b51d55668a0602d">um_lbc_wait</a>,    &amp;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                     <span class="stringliteral">&#39; seconds and retry.&#39;</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                                   <span class="comment">! Calculate microseconds from seconds.</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                  um_lbc_wait_usec = 1000000*<a class="code" href="lbc__coup_8h.xhtml#aeb440150f400a86f9b51d55668a0602d">um_lbc_wait</a></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                  <span class="keyword">CALL </span>um_sleep(um_lbc_wait_usec)</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                  len_wait_tot=len_wait_tot+<a class="code" href="lbc__coup_8h.xhtml#aeb440150f400a86f9b51d55668a0602d">um_lbc_wait</a></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I10,A)&#39;</span>) &amp;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                      <span class="stringliteral">&#39;ms : Total wait so far &#39;</span>,len_wait_tot, &amp;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                     <span class="stringliteral">&#39; seconds.&#39;</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                  read_more_values=.false.</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                  <span class="comment">! No more values in the file as it stands, so this</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                  <span class="comment">! forces us to close and reopen the file and read</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                  <span class="comment">! again to see if any new values have arrived.</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="keywordflow">                END IF</span> <span class="comment">! IF (len_wait_tot  &gt;=  um_lbc_wait_max)</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;              <span class="keywordflow">ELSE</span> <span class="comment">! the READ(190) was successful - now we must</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                   <span class="comment">! interpret the value pulled from the file</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                <span class="keywordflow">IF</span> (lbc_ntimes  &gt;   1000) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                  <span class="comment">! First value in the file is always &gt;1000</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                  read_more_values=.true. <span class="comment">! Go round and read next value</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                <span class="keywordflow">ELSEIF</span> (lbc_ntimes  &lt;   ms_ntimes) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                  <span class="comment">! Value is not required. Proceed to read next value</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I10,A,I10,A)&#39;</span>) &amp;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                      <span class="stringliteral">&#39;ms : lbc_ntimes = &#39;</span>,lbc_ntimes, &amp;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                     <span class="stringliteral">&#39; read in.&#39;</span>//                                             &amp;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                     <span class="stringliteral">&#39; lbc_ntimes &gt;= &#39;</span>,ms_ntimes,                              &amp;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                     <span class="stringliteral">&#39; is required. Read next value.&#39;</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                  read_more_values=.true.</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                <span class="keywordflow">ELSEIF</span> (lbc_ntimes  &gt;=  ms_ntimes) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                  <span class="comment">! Required value read in. Sufficient BCs to proceed</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I10,A,I10,A)&#39;</span>) &amp;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                      <span class="stringliteral">&#39;ms : lbc_ntimes = &#39;</span>,lbc_ntimes, &amp;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                     <span class="stringliteral">&#39; read in.&#39;</span>//                                             &amp;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                     <span class="stringliteral">&#39; lbc_ntimes &gt;= &#39;</span>,ms_ntimes,                              &amp;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                     <span class="stringliteral">&#39; is required. Proceed.&#39;</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                  <span class="keyword">CALL </span>date_and_time (ch_date2, ch_time2)</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                  <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>  &gt;=  <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A,A,A,A,A,A,A,A,A,A,A)&#39;</span>) <span class="stringliteral">&#39;LBC_COUP: &#39;</span>, &amp;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                       ch_time2(1:2),<span class="stringliteral">&#39;:&#39;</span>,ch_time2(3:4),<span class="stringliteral">&#39;:&#39;</span>,ch_time2(5:6),      &amp;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                       <span class="stringliteral">&#39; on &#39;</span>,                                                 &amp;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                       ch_date2(7:8),<span class="stringliteral">&#39;/&#39;</span>,ch_date2(5:6),<span class="stringliteral">&#39;/&#39;</span>,ch_date2(1:4),      &amp;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                       <span class="stringliteral">&#39; Proceed to call INBOUND in INITIAL.&#39;</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="keywordflow">                  END IF</span> <span class="comment">! (PrintStatus  &gt;=  PrStatus_Normal)</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                  read_more_values=.false. <span class="comment">! Don&#39;t read any more values</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                  not_enough_lbcs=.false.  <span class="comment">! Don&#39;t re-examine the file</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="keywordflow">                END IF</span> <span class="comment">! Test for value of lbc_ntimes</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="keywordflow">              END IF</span> <span class="comment">! IF (ICODE  /=  0)</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="keywordflow">            ENDDO</span> <span class="comment">! DO WHILE (read_more_values)</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="keywordflow">          ENDDO</span> <span class="comment">! DO WHILE (not_enough_lbcs)</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! IF (mype  ==  0)</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="comment">! DEPENDS ON: timer</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        <span class="keyword">Call </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a> (<span class="stringliteral">&#39;LBC_WAIT&#39;</span>,4)</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        <span class="keyword">CALL </span>gc_ibcast(100,1,0,nproc,info,icode) <span class="comment">! PE 0 broadcasts ICODE</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                                                 <span class="comment">! to all processors</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;INITIAL - Error detected in LBC coupling.&#39;</span>, &amp;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;              src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I10)&#39;</span>) <span class="stringliteral">&#39;ICODE: &#39;</span>,icode</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I10)&#39;</span>) <span class="stringliteral">&#39;CMESSAGE : &#39;</span>,cmessage</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! IF (ICODE  /=  0)</span></div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        <span class="keyword">CALL </span>gc_ibcast(100,1,0,nproc,info,lbc_ntimes) <span class="comment">! PE 0 broadcasts</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                                                      <span class="comment">! lbc_ntimes to</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                                                      <span class="comment">! all processors</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! (l_lbc_coup .AND.</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;            <span class="comment">!  .NOT.(Num_ALBCs == 2 .AND. ALBC_num == 1))</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="comment">! DEPENDS ON: in_bound</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;      <span class="keyword">CALL </span><a class="code" href="in__bound_8f90.xhtml#af54e61050e727b57af878bf1897b2f8c" title="LL Subroutine IN_BOUND. ">in_bound</a>(                                                    &amp;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artsts.h&quot;</span></div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artbnd.h&quot;</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="preprocessor"></span>         a_len1_levdepc,a_len2_levdepc,                                 &amp;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;         a_len1_rowdepc,a_len2_rowdepc,                                 &amp;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;         a_len1_coldepc,a_len2_coldepc,                                 &amp;</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                                          <span class="comment">! for dynamic array</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;     &amp;                   icode,cmessage)</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to IN_BOUND&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;      <span class="keywordflow">IF</span> (l_lbc_coup .AND.                                              &amp;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;         .NOT.(<a class="code" href="namespacenlstcall__mod.xhtml#a88acd7561aab078131bb8e9e33721582">num_albcs</a> == 2 .AND. <a class="code" href="namespacelbc__read__data__mod.xhtml#a2622155097222cb0037b59b37d105774">albc_num</a> == 1)) <span class="keywordflow">THEN</span> <span class="comment">! Global/Mes</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                                                          <span class="comment">! coupling</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="comment">!       Now that IN_BOUND has been called for the first time</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="comment">!       double check that there are sufficient BCs to proceed.</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="comment">!       Determine which boundary data is required to proceed</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="comment">!       the next period.</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        <span class="keywordflow">if</span> (boundary_stepsim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) &gt;  0) <span class="keywordflow">then</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacelbc__read__data__mod.xhtml#a2622155097222cb0037b59b37d105774">albc_num</a> == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;            ms_ntimes = 1 + ( (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)-<a class="code" href="namespacelbc__read__data__mod.xhtml#afd1123b50bf611cc17a221dad3f63c3d">albc_swapstep</a>)              &amp;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;               / boundary_stepsim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) )</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;            ms_ntimes = 2 + (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)/boundary_stepsim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>))</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="keywordflow">        endif</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;        <span class="keywordflow">if</span> (lbc_ntimes &lt;  ms_ntimes) <span class="keywordflow">then</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="comment">!         There are insufficient BCs to proceed. Go back and wait</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;<span class="comment">!         for sufficient BCs to proceed.</span></div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I10,A,I10,A)&#39;</span>) <span class="stringliteral">&#39;ms : lbc_ntimes = &#39;</span>,lbc_ntimes,  &amp;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;             <span class="stringliteral">&#39; lbc_ntimes &gt;= &#39;</span>,ms_ntimes,<span class="stringliteral">&#39; is required. &#39;</span>//                    &amp;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;             <span class="stringliteral">&#39;Insufficient BCs to proceed. Wait.&#39;</span></div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;          <span class="keywordflow">GOTO</span> 100</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;<span class="keywordflow">        endif</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="keywordflow">      endif</span>  <span class="comment">! (l_lbc_coup .AND.</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;             <span class="comment">! .NOT.(Num_ALBCs == 2 .AND. ALBC_num == 1))</span></div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="comment">!    4.4.1  Update atmosphere boundary fields at step zero</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;      <span class="keywordflow">IF</span> (boundary_stepsim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)  /=  0) <span class="keywordflow">THEN</span> <span class="comment">! If there are BCs</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        <span class="keywordflow">IF</span> (l_lbc_coup .AND.                                            &amp;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;           .NOT.(<a class="code" href="namespacenlstcall__mod.xhtml#a88acd7561aab078131bb8e9e33721582">num_albcs</a> == 2 .AND. <a class="code" href="namespacelbc__read__data__mod.xhtml#a2622155097222cb0037b59b37d105774">albc_num</a> == 1)) <span class="keywordflow">THEN</span> <span class="comment">! Global/Mes</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                                                            <span class="comment">! coupling</span></div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>  &gt;=  <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A,A,A,A,A,A,A,A,A,A,A)&#39;</span>) <span class="stringliteral">&#39;LBC_COUP: &#39;</span>,         &amp;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;               ch_time2(1:2),<span class="stringliteral">&#39;:&#39;</span>,ch_time2(3:4),<span class="stringliteral">&#39;:&#39;</span>,ch_time2(5:6),              &amp;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;               <span class="stringliteral">&#39; on &#39;</span>,                                                         &amp;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;               ch_date2(7:8),<span class="stringliteral">&#39;/&#39;</span>,ch_date2(5:6),<span class="stringliteral">&#39;/&#39;</span>,ch_date2(1:4),              &amp;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;               <span class="stringliteral">&#39; Proceed to call UPBOUND in INITIAL.&#39;</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">! (PrintStatus  &gt;=  PrStatus_Normal)</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="keywordflow">                 END IF</span></div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="comment">! DEPENDS ON: up_bound</span></div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        <span class="keyword">CALL </span><a class="code" href="up__bound_8f90.xhtml#ac2e7fd43b80882c18f785e2218f8adb3" title="Subroutine UP_BOUND. ">up_bound</a>(submodel,                                         &amp;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artbnd.h&quot;</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="preprocessor"></span>     &amp;              icode,cmessage)</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;INITIAL: Failure in call to atmosphere UP_BOUND&#39;</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacenlstcall__mod.xhtml#a88acd7561aab078131bb8e9e33721582">num_albcs</a> == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;          <span class="comment">! If the data for the start and end of the current boundary</span></div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;          <span class="comment">! data interval is to come from different boundary files, we</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;          <span class="comment">! need to make additional calls to INBOUNDA/UP_BOUND:</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacelbc__read__data__mod.xhtml#a2622155097222cb0037b59b37d105774">albc_num</a> == 1 .AND. stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) &gt;= <a class="code" href="namespacelbc__read__data__mod.xhtml#afd1123b50bf611cc17a221dad3f63c3d">albc_swapstep</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;INITIAL: Swapping to 2nd atmos boundary file&#39;</span>, &amp;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                  src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;            <a class="code" href="namespacelbc__read__data__mod.xhtml#a2622155097222cb0037b59b37d105774">albc_num</a> = 2</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;            <span class="keywordflow">IF</span> (l_lbc_coup) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;              ms_ntimes = 1</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;              <span class="keywordflow">GOTO</span> 100</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="comment">! DEPENDS ON: inbounda</span></div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;              <span class="keyword">CALL </span><a class="code" href="inbounda_8f90.xhtml#a03113c1df1b59dfb5e6cd09be4785dba" title="Subroutine INBOUNDA. ">inbounda</a>(                                            &amp;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;<span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artsts.h&quot;</span></div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artbnd.h&quot;</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;<span class="preprocessor"></span>     &amp;          a_len1_levdepc,a_len2_levdepc,                          &amp;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;     &amp;          a_len1_rowdepc,a_len2_rowdepc,                          &amp;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;     &amp;          a_len1_coldepc,a_len2_coldepc)</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;<span class="comment">! DEPENDS ON: up_bound</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;              <span class="keyword">CALL </span><a class="code" href="up__bound_8f90.xhtml#ac2e7fd43b80882c18f785e2218f8adb3" title="Subroutine UP_BOUND. ">up_bound</a>(submodel,                                   &amp;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artbnd.h&quot;</span></div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;<span class="preprocessor"></span>     &amp;          icode,cmessage)</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;              <span class="keywordflow">IF</span> (icode /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;INITIAL: Failure in call to atmosphere UP_BOUND&#39;</span>,&amp;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                   src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;                <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (routinename, icode, cmessage)</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;<span class="keywordflow">            END IF</span> <span class="comment">! (l_lbc_coup)</span></div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">! (ALBC_num == 1 .AND. STEPim(a_im) &gt;= ALBC_SwapStep)</span></div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! (Num_ALBCs == 2)</span></div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! IF (BOUNDARY_STEPSim(a_im)  /=  0)</span></div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! .NOT. GLOBAL</span></div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;<span class="comment">!    4.4.2  Call SETCONA</span></div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;<span class="comment">! DEPENDS ON: setcona_ctl</span></div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;      <span class="keyword">CALL </span><a class="code" href="setcona__ctl_8f90.xhtml#a0a2ef213293e6f9a8f60060fc26ed5df" title="Subroutine SETCONA_CTL. ">setcona_ctl</a>(                                                 &amp;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artlndm.h&quot;</span></div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;<span class="preprocessor"></span>        icode,cmessage)</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;      <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;INITIAL: Failure in call to SETCONA&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;<span class="comment">! 7.4 LBC generation from the UM removed, please use MakeBC</span></div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;<span class="comment">!L 4.6  Initialise physical constants used in main physics</span></div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;<span class="comment">!L      packages - includes radiation lookup tables</span></div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespacedynamics__testing__mod.xhtml#ad8c7d83e4cfe930670636aa5bc1f7b70" title="the following general users need not alter. power users may like to alter these via the namelist run_...">l_physics</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;<span class="comment">! DEPENDS ON: initphys</span></div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;      <span class="keyword">CALL </span>initphys(icode,cmessage)</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to INITPHYS&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! on L_Physics</span></div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceeng__corr__inputs__mod.xhtml#afa85786376e90acd7e63aafb5fda1028" title="=========================================================================== LOGICAL options set from ...">l_emcorr</a>) <span class="keywordflow">THEN</span> <span class="comment">! Energy correction enabled</span></div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;<span class="comment">!L-!L 4.7  Initialise total atmospheric energy &amp; energy correction</span></div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;<span class="comment">!L-!L  Only done for a new run and then only if the header values in the</span></div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;<span class="comment">!L  dump are set to missing data. If the arrays were set at the</span></div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;<span class="comment">!L  beginning of all NRUNS (new runs) then bit reproducibility</span></div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;<span class="comment">!L  would be lost for short reruns.</span></div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;<span class="comment">!L  The energy correction applied in any day comes from the</span></div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;<span class="comment">!L  change calculated for the previous day. Initialisation for a NRUN</span></div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;<span class="comment">!L  sets the energy correction to zero for the first day.</span></div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;<span class="comment">!L    A_REALHD(18) - total energy flux into the atmosphere</span></div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;<span class="comment">!L                   (used to accumulate change in energy throughout</span></div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;<span class="comment">!L                   a day from physics). Value at start of run zero</span></div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="comment">!L    A_REALHD(19) - total mass of the atmosphere (wet + dry)</span></div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;<span class="comment">!L                   Note this is not conserved by the dynamics</span></div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;<span class="comment">!L                   The model from UM 5.0 only conserves dry mass.</span></div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;<span class="comment">!L    A_REALHD(20) - total energy of the atmosphere calculated from</span></div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;<span class="comment">!L                   fields in dump.</span></div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;<span class="comment">!L    A_REALHD(21) - energy correction evaluated from previous day of</span></div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;<span class="comment">!L                   run (ie previous run or needs setting to zero).</span></div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;      <span class="keywordflow">IF</span> (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) == 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;<span class="comment">! DEPENDS ON: init_emcorr</span></div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;         <span class="keyword">CALL </span><a class="code" href="init__emcorr-inemcr1a_8f90.xhtml#a1f235415b9f46f85b2d94d1ab70a5b86" title="Subroutine: INIT_EMCORR. ">init_emcorr</a>(                                              &amp;</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artlndm.h&quot;</span></div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;<span class="preprocessor"></span>            icode,cmessage)</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to INIT_EMCORR&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;<span class="keywordflow">        END IF</span>      <span class="comment">! end test on T+0</span></div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;<span class="keywordflow">      END IF</span>    <span class="comment">!    LEMCORR</span></div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;<span class="comment">!  Section 4.8 - Initialise external halos</span></div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;<span class="comment">!                Some T+0 diagnostics and IAU calculations require</span></div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;<span class="comment">!                initialised values of external halos. LBCs will not</span></div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;<span class="comment">!                have been applied yet, so a simple fill of the appropriate</span></div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;<span class="comment">!                variables will suffice to ensure these calculations!                use sensible values at the boundaries</span></div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;      <span class="keywordflow">IF</span> (model_domain == mt_lam) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;        <span class="keyword">CALL </span><a class="code" href="fill__external__halos_8f90.xhtml#a9f4e1e061e136821fb9a51281a5e69c2" title="Routine for filling in External Halos. ">fill_external_halos</a>(<a class="code" href="namespaceatm__fields__mod.xhtml#a90bf02e2eb413e36b7b2d184afdc358c">u</a>, row_length, rows, model_levels,       &amp;</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;                                 offx, offy)</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;        <span class="keyword">CALL </span><a class="code" href="fill__external__halos_8f90.xhtml#a9f4e1e061e136821fb9a51281a5e69c2" title="Routine for filling in External Halos. ">fill_external_halos</a>(<a class="code" href="namespaceatm__fields__mod.xhtml#a5a8e0b1064f95a137dd6d8a457d95e84">v</a>, row_length, n_rows, model_levels,     &amp;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                                 offx, offy)</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;        <span class="keyword">CALL </span><a class="code" href="fill__external__halos_8f90.xhtml#a9f4e1e061e136821fb9a51281a5e69c2" title="Routine for filling in External Halos. ">fill_external_halos</a>(<a class="code" href="namespaceatm__fields__mod.xhtml#a5266b43e7a320754457a16f000fbe827">theta</a>, row_length, rows, model_levels,   &amp;</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                                 offx, offy)</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;        <span class="keyword">CALL </span><a class="code" href="fill__external__halos_8f90.xhtml#a9f4e1e061e136821fb9a51281a5e69c2" title="Routine for filling in External Halos. ">fill_external_halos</a>(<a class="code" href="namespaceatm__fields__mod.xhtml#ad7360afd0495379879f618ed740f631d">rho</a>, row_length, rows, model_levels,     &amp;</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                                 offx, offy)</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;<span class="comment">!  Section 4.9 - Initialise external halos</span></div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;<span class="comment">!                In LAM&#39;s there is the possibility that the extra moisture</span></div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;<span class="comment">!                fields are used but the LBC files do not hold values for!                them.</span></div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;<span class="comment">!                This code will initialise the fields to sensible values</span></div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;<span class="comment">!                on the external halos in this case.</span></div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;      <span class="keywordflow">IF</span> (model_domain == mt_lam) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#ad580b93fb6223c38181f3f05d1b82c62">l_mcr_qrain</a> .AND. .NOT. <a class="code" href="namespacemphys__inputs__mod.xhtml#aa35a37d47ad08e8b5cc1390e7a5b4eb0">l_mcr_qrain_lbc</a>)                     &amp;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;        <span class="keyword">CALL </span><a class="code" href="set__external__halos_8f90.xhtml#a22e69285a24b545cbba3a6fc32f714b7" title="Routine for setting the External Halos to a provided. ">set_external_halos</a>(<a class="code" href="namespaceatm__fields__mod.xhtml#aa267dc8a8bfc6e373adbc5491098f404">qrain</a>, row_length, rows, wet_levels,     &amp;</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;                                halo_i, halo_j, 0.0)        <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a3d970e6ae2e572f69c0d3cea5b5247ce">l_mcr_qgraup</a> .AND. .NOT. <a class="code" href="namespacemphys__inputs__mod.xhtml#a6cc9d6c615bc5b63edba595a217f3ee8">l_mcr_qgraup_lbc</a>)                   &amp;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;        <span class="keyword">CALL </span><a class="code" href="set__external__halos_8f90.xhtml#a22e69285a24b545cbba3a6fc32f714b7" title="Routine for setting the External Halos to a provided. ">set_external_halos</a>(<a class="code" href="namespaceatm__fields__mod.xhtml#ac3e9822aaa066ca051d9e822bd6ddc85">qgraup</a>, row_length, rows, wet_levels,    &amp;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                                halo_i, halo_j, 0.0)        <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a1e977cd2bfc88d00f67153d185e877f8">l_mcr_qcf2</a> .AND. .NOT. <a class="code" href="namespacemphys__inputs__mod.xhtml#ad7a185633b19aced8c7ee7a44a2026cb">l_mcr_qcf2_lbc</a>)                       &amp;</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;        <span class="keyword">CALL </span><a class="code" href="set__external__halos_8f90.xhtml#a22e69285a24b545cbba3a6fc32f714b7" title="Routine for setting the External Halos to a provided. ">set_external_halos</a>(<a class="code" href="namespaceatm__fields__mod.xhtml#a210e340781563a14ca4076e05a803203">qcf2</a> ,row_length, rows, wet_levels,      &amp;</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;                                halo_i, halo_j, 0.0)<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;<span class="comment">!L!L 5. Set timestep group control switches for initial step</span></div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;<span class="comment">!L 5.1 Set timestep control switches for initial step</span></div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;<span class="comment">! DEPENDS ON: settsctl</span></div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;      <span class="keyword">CALL </span>settsctl (                                                   &amp;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;<span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artsts.h&quot;</span></div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artinfa.h&quot;</span></div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="preprocessor"></span>                   internal_model,.true.,meanlev,icode,cmessage)</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to SETTSCTL&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;<span class="preprocessor">#if defined(OASIS3)</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;<span class="preprocessor"></span><span class="comment">!L</span></div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;<span class="comment">!L 5.1.1  Initialise coupling info for OASIS3 or OASIS3-MCT couplers</span></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;<span class="comment">! Work out the frequency of coupling timesteps</span></div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;    <a class="code" href="namespaceoasis__atm__data__mod.xhtml#a5461d177d6866899f63187b02002f59f">oasis_couple_ts</a> = <a class="code" href="namespacenlstgen__mod.xhtml#aded406ffa8d50a7c4a6325c5b75eb03d">steps_per_periodim</a>(1) *             &amp;</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;          (<a class="code" href="namespaceum__input__control__mod.xhtml#abbd5e50f1272fd8f94fce074dd59b03d">oasis_couple_freq</a>*3600)/<a class="code" href="namespacenlstgen__mod.xhtml#a4a6ed31ef0d09bdc976baf277d1acbe7">secs_per_periodim</a>(1)</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;<span class="comment">! Set timestep for use in OASIS calls to be</span></div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;<span class="comment">! real version of the standard atmos timestep</span></div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;    <a class="code" href="namespaceoasis__atm__data__mod.xhtml#ada4f403caf4b73c818aa40784d5bfee5">prism_timestep</a> = 1.0*secs_per_stepim(<a class="code" href="namespacesubmodel__mod.xhtml#a35421488a2f90015da0e1069913da490" title="Atmos SM partition in Long and Short form. ">atmos_sm</a>)</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;<span class="comment">! DEPENDS ON: OASIS3_GRID</span></div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;    <span class="keyword">CALL </span><a class="code" href="oasis3__grid_8f90.xhtml#a9cb92f20d2202b66a1f814dd04eaed88" title="*****************************COPYRIGHT**************************************** For further details pl...">oasis3_grid</a>(.true.)</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;<span class="comment">!L 5.2 Initialise PP files at step 0</span></div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;<span class="comment">! DEPENDS ON: ppctl_init</span></div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;      <span class="keyword">CALL </span><a class="code" href="ppctl__init_8f90.xhtml#acca79a126c751c10e82c63e13469d2e1" title="This file belongs in section: Top Level. ">ppctl_init</a>(                            &amp;</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;<span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artinfa.h&quot;</span></div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;<span class="preprocessor"></span>         submodel,icode,cmessage)</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;        <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to PPCTL&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;<span class="comment">!L 5.3  Initialise assimilation package (not if assimilation completed)</span></div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;    <span class="keywordflow">IF</span> ( (assim_stepsim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)+assim_extrastepsim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) &gt;  0  .AND.    &amp;</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;         <a class="code" href="namespacenlstcall__mod.xhtml#a1fedc7c6f932cbd1a35925dce954eb35">model_assim_mode</a> == <span class="stringliteral">&quot;Atmosphere&quot;</span>       .OR.                 &amp;</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;         <a class="code" href="namespacenlstcall__mod.xhtml#a7551b0ffe03a007cda4c5d094c854d3b">run_assim_mode</a>   == <span class="stringliteral">&quot;Atmosphere&quot;</span>      .AND.                  &amp;</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;         stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)  &lt;   assim_firststepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) +                   &amp;</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;         assim_stepsim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) + assim_extrastepsim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>))     &amp;</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;         ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;<span class="comment">! DEPENDS ON: IN_ACCTL</span></div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;      <span class="keyword">CALL </span><a class="code" href="in__acctl-inacctl1_8f90.xhtml#a1a337ec73e7a185b388eae65b465eb82" title="SUBROUTINE IN_ACCTL -!&gt; ">in_acctl</a>(                                                    &amp;</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;<span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;<span class="preprocessor"></span>         icode,cmessage)</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;      <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to IN_ACCTL&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;               <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;-<span class="comment">! [6.1]: Incremental Analysis Update (IAU).</span></div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;-</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceiau__mod.xhtml#a9217785542f77daf4b9fabafc7382ee7">l_iau</a>) <span class="keyword">CALL </span><a class="code" href="namespacesetup__iau__mod.xhtml#a084cf38b7d7329a6ebeb5aaf7fc4f83f">setup_iau</a></div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceiau__mod.xhtml#a9217785542f77daf4b9fabafc7382ee7">l_iau</a> .AND. stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) &gt;= <a class="code" href="namespaceiau__mod.xhtml#a0ef284d3c21282505719b3ffc401dcdf">iau_firstcallts</a> .AND. &amp;</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;                      stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) &lt;= <a class="code" href="namespaceiau__mod.xhtml#a729dc7a6e534b486ccc765e7eeffbd1c">iau_lastcallts</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;<span class="comment">! DEPENDS ON: timer</span></div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacenlstcall__mod.xhtml#ab4f74e5820852a02850463f38b181c64">ltimer</a>) <span class="keyword">CALL </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a>(<span class="stringliteral">&#39;IAU&#39;</span>,3)</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;<span class="comment">! DEPENDS ON: IAU</span></div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;        <span class="keyword">CALL </span><a class="code" href="iau_8f90.xhtml#a0f8a69ad9f632c479e55cb582efcb452" title="Main routine for IAU scheme. ">iau</a> (                                      &amp;</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;<span class="preprocessor">#include &quot;artlndm.h&quot;</span></div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;<span class="preprocessor"></span>                   l_mr_iau,                            &amp; <span class="comment">! in</span></div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#a90bf02e2eb413e36b7b2d184afdc358c">u</a>,      <a class="code" href="namespaceatm__fields__mod.xhtml#a5a8e0b1064f95a137dd6d8a457d95e84">v</a>,          <a class="code" href="namespaceatm__fields__mod.xhtml#a513be0fa88bd2aaafd27e55e564e425c">w</a>,               &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#a41eeac3876143d8d5caba30708ff7298">u_adv</a>,  <a class="code" href="namespaceatm__fields__mod.xhtml#a4a217b13fe5e69802e68f1c1f6d11786">v_adv</a>,      <a class="code" href="namespaceatm__fields__mod.xhtml#ab448ef1a6fde5779a83f9ce3a97cc95f">w_adv</a>,           &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#a5266b43e7a320754457a16f000fbe827">theta</a>,  <a class="code" href="namespaceatm__fields__mod.xhtml#ad7360afd0495379879f618ed740f631d">rho</a>,        <a class="code" href="namespaceatm__fields__mod.xhtml#a60f5ebc204ab10e7953adff0f66fca3b">murk</a>,            &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#a4e8b386017a191ba3aa7343ff05e17e4">q</a>,      <a class="code" href="namespaceatm__fields__mod.xhtml#a8d447f68b3b56a731f542958db2f0f77">qcl</a>,        <a class="code" href="namespaceatm__fields__mod.xhtml#ad6768da810001a976c676ec9098761d3">qcf</a>,             &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#afb42d5a6d9ddfe3c72eccdf5d5dc3223">tstar</a>,  <a class="code" href="namespaceatm__fields__mod.xhtml#ab3d503a2052afc58bc3092d66eb86dec">tstar_tile</a>, <a class="code" href="namespaceatm__fields__mod.xhtml#a0934f07a8dd22230dba8e02ce01b0a72">deep_soil_temp</a>,  &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#a4a970d3ad791a01a361e25558635b8b8">smcl</a>,   <a class="code" href="namespaceatm__fields__mod.xhtml#a70d733ed64d86d1b0abfb85c77095113">tstar_anom</a>,                  &amp; <span class="comment">! inout                   Pstar,  p,                           &amp; ! inout</span></div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#a783f281d0e1ede05a20a283f2ebde285">p_theta_levels</a>,                      &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#a7aeeb97e1cda8524fa7f11584da06d7a">exner_rho_levels</a>,                    &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#a9205c628c6901ba3308de68c5d67161b">exner_theta_levels</a>,                  &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#a69b79b96b0181bdf7a64ecb7e69ec01b">snodep</a>,                              &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#a2a79eeb540aadec21859b332bba306b1">cf_area</a>,                             &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#adda06928033f249a27fb6c7814a5a415">cf_bulk</a>,                             &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#a28806e88cda972303f3ef8e022d2ed07">cf_liquid</a>,                           &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#af0cfea66966f0361d62e4d1b37b1f52b">cf_frozen</a>,                           &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#a8a842eaae18543509e130a484b97b01a">dust_div1</a>, <a class="code" href="namespaceatm__fields__mod.xhtml#a7053b4e83ff0204c138d0e21d0e33a1a">dust_div2</a>, <a class="code" href="namespaceatm__fields__mod.xhtml#a6bf998e5e5c5809f3643ab8768519e25">dust_div3</a>,     &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#aba573fd74d8973f03b41390329e493d5">dust_div4</a>, <a class="code" href="namespaceatm__fields__mod.xhtml#a5c6e0a378bd8c62285f906446d7e1295">dust_div5</a>, <a class="code" href="namespaceatm__fields__mod.xhtml#ac22676830dc5105a1f63c1b096199261">dust_div6</a>,     &amp; <span class="comment">! inout</span></div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;                   <a class="code" href="namespaceatm__fields__mod.xhtml#ad6a8177684b6ef5acd3fc71073ce6dbd" title="Add a specific pointer for ozone tracer and cariolle parameters. ">ozone_tracer</a> )                         <span class="comment">! inout</span></div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;<span class="comment">! DEPENDS ON: timer</span></div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacenlstcall__mod.xhtml#ab4f74e5820852a02850463f38b181c64">ltimer</a>) <span class="keyword">CALL </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a>(<span class="stringliteral">&#39;IAU&#39;</span>,4)</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;        <span class="comment">! If required, write out TS0 dump, including any IAU increments</span></div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;        <span class="comment">!  which may have just been added:</span></div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;        <span class="keywordflow">IF</span> (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) == 0 .AND. <a class="code" href="namespaceiau__mod.xhtml#a083a612b1755f21eb400974120ce96c5">l_iau_dumpts0state</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;<span class="comment">! DEPENDS ON: dumpctl</span></div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;          <span class="keyword">CALL </span><a class="code" href="dumpctl_8f90.xhtml#a3d8f404cc09e60a4e2702620d55a783d" title="Routine: DUMPCTL -!&gt;!&gt; Purpose: Controls the production and naming of output dump files...">dumpctl</a> (                                                &amp;</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artlndm.h&quot;</span></div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artsts.h&quot;</span></div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;<span class="preprocessor"></span>     &amp;                   <a class="code" href="namespacesubmodel__mod.xhtml#a35421488a2f90015da0e1069913da490" title="Atmos SM partition in Long and Short form. ">atmos_sm</a>, meanlev, .false., <span class="stringliteral">&#39;           &#39;</span>, 0,  &amp;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;     &amp;                   icode, cmessage)</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;          <span class="keywordflow">IF</span> (icode /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to DUMPCTL (Atmos)&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename, icode, cmessage)</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;<span class="comment">!L!L</span></div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;<span class="comment">!L 7.1  Get derived diagnostics from start fields (atmosphere)</span></div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;      <span class="keywordflow">IF</span> (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;<span class="comment">! DEPENDS ON: initdiag</span></div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;        <span class="keyword">CALL </span><a class="code" href="initdiag_8f90.xhtml#a95a853661b4e10339418e4a8c29b8c9c" title="Calculate diagnostic quantities from the initial atmosphere dump Calculate diagnostic quantities from...">initdiag</a>(                                                  &amp;</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artsts.h&quot;</span></div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;arg_atm_fields.h&quot;</span></div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artlndm.h&quot;</span></div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;<span class="preprocessor"></span>     &amp; dummyarg)</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;          <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to INITDIAG&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;<span class="comment">! 7.2 Code to update the boundaries now moved forwards to 4.4.1</span></div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;<span class="comment">!L 7.3 Update ancillary fields in dump if start time corresponds to</span></div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;<span class="comment">!L     an ancillary field update time. Also done at T+0 with values</span></div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;<span class="comment">!L     updated to half a period back from first standard update time</span></div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;<span class="comment">!L     to ensure reproducibility between long runs and new runs</span></div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;<span class="comment">!L     started from dump at any time.</span></div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;      <span class="keywordflow">IF</span> (ancillary_stepsim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;        <span class="keywordflow">IF</span> (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) == 0 .OR.                                      &amp;</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;           mod(stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>),ancillary_stepsim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)) == 0)             &amp;</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;<span class="comment">! DEPENDS ON: up_ancil</span></div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;           <span class="keyword">CALL </span><a class="code" href="up__ancil_8f90.xhtml#a987d9b1130325cdeed6a849c8383b5d6" title="LL Subroutine UP_ANCIL. ">up_ancil</a> (                                                &amp;</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artanc.h&quot;</span></div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;<span class="preprocessor"></span>     &amp;                  submodel,                                       &amp;</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;     &amp;                  icode,cmessage)</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;          <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to UP_ANCIL&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;<span class="comment">!L 7.3.1 Initialize tiled prognostics, gridbox mean vegetation</span></div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;<span class="comment">!L       parameters and TRIFFID accumulation prognostics.</span></div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;<span class="comment">! Set l_aggregate appropriately. REVIEW FOR FLEXIBLE TILES?</span></div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;      <span class="keywordflow">IF</span>(ntiles==1)<span class="keywordflow">THEN</span></div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;        l_aggregate=.true.</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;        l_aggregate=.false.</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a2de11def18a66a82fea4394219af6c0a" title="MOSES II and Triffid logicals-. ">l_veg_fracs</a> .AND. stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) == 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;<span class="comment">!  Skip INIT_VEG if LAND_FIELD=0 for this PE.</span></div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;        <span class="keywordflow">IF</span> (land_field  &gt;   0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;<span class="comment">! DEPENDS ON: init_veg</span></div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;          <span class="keyword">CALL </span><a class="code" href="init__veg-initveg1b_8f90.xhtml#a6ab32cded8b0f2ee384d86ecc539bd48" title="Calls routines to initialize veg parameters and accumulated C fluxes Calls routines to initialize veg...">init_veg</a>(stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>),                                   &amp;</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;<span class="preprocessor"></span>             icode,cmessage)</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;          <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to INIT_VEG&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;INITIAL; skip INIT_VEG, LAND_FIELD=0 for this PE&#39;</span> , &amp;</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;              src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;<span class="comment">!L 7.3.3 Ensure that convective cloud cover and liquid water path</span></div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;<span class="comment">!L       are consistent with convective cloud base &amp; top. (Corrects</span></div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;<span class="comment">!L       for occasional problems caused by reconfiguration.)</span></div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;      <span class="keywordflow">IF</span> (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;<span class="comment">! DEPENDS ON: init_cnv</span></div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;         <span class="keyword">CALL </span><a class="code" href="init__cnv_8f90.xhtml#a493dcc328990463c640193a27fd7b935" title="Ensure conv.cloud cover &amp; liquid water path zero if no conv.cloud. ">init_cnv</a>(                                                 &amp;</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;<span class="preprocessor"></span>            icode,cmessage)</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;          <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Failure in call to INIT_CNV&#39;</span>,src=<span class="stringliteral">&#39;initial&#39;</span>)</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;<span class="comment">! River routing</span></div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;       <span class="keywordflow">IF</span>(<a class="code" href="namespaceriver__inputs__mod.xhtml#aade21f15b58407090f05e8be23a0506e" title="=========================================================================== LOGICAL options set from ...">l_rivers</a>)<span class="keywordflow">THEN</span></div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;<span class="comment">! Initialise the step counter for river routing.</span></div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;        <span class="keywordflow">IF</span> (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;<span class="comment">! DEPENDS ON: init_riv</span></div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;         <span class="keyword">CALL </span><a class="code" href="init__riv_8f90.xhtml#a71199ca5b7dcfbe9d7dd065514e557aa" title="This file belongs in section: river routing. ">init_riv</a>(                                                 &amp;</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;<span class="preprocessor"></span>            icode,cmessage)</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;          <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;</div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;<span class="keywordflow">      END IF</span>                   <span class="comment">! L_RIVERS</span></div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;<span class="comment">!L 7.3.4 ! initialization of radiative feedback</span></div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;<span class="comment">!L  Initialise and check address array to feed chemical tracers from</span></div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;<span class="comment">!L  UKCA into radiation scheme.  This needs to be done even for a CRUN</span></div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;<span class="comment">!L  so no need to check for STEPim(a_im) == 0.</span></div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;      grgas_addr = -1</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;      <span class="keywordflow">IF</span> (l_ukca) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;<span class="comment">! DEPENDS ON: init_radukca</span></div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;        <span class="keyword">CALL </span><a class="code" href="init__radukca_8f90.xhtml#a4513176392e06e00ba0e2c5e049ada47" title="initialization of radiative feedback ">init_radukca</a>(                                             &amp;</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;<span class="preprocessor"></span>           ngrgas,grgas_addr)</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;<span class="comment">! 7.4 LBC generation from the UM removed, please use MakeBC</span></div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;<span class="comment">! 7.5 Initialise JULES variables</span></div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;<span class="comment">! Check if land-surface fields are required.</span></div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;      <span class="keywordflow">IF</span>(land_field &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;<span class="comment">! DEPENDS ON: jules_init</span></div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;        <span class="keyword">CALL </span>jules_init( &amp;</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;<span class="preprocessor">#include &quot;artlndm.h&quot;</span></div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;<span class="preprocessor"></span>                         land_field,ntiles,sm_levels                  &amp;</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;                        ,nice,nice_use,<a class="code" href="namespaceatm__fields__mod.xhtml#aa954922ff9b13ea0adb91e8829fc4f1f">frac_typ</a>                       &amp;</div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;                        ,l_snow_albedo                                &amp;</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;                        ,<a class="code" href="namespaceatm__fields__mod.xhtml#a7ec8c004f9dbda85e6d4e96a61ef8cc6">rgrain_tile</a>,<a class="code" href="namespaceatm__fields__mod.xhtml#a715ee156a34ce2f06dcae13670656940">snodep_tile</a>,<a class="code" href="namespaceatm__fields__mod.xhtml#a0934f07a8dd22230dba8e02ce01b0a72">deep_soil_temp</a>       &amp;</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;                        ,<a class="code" href="namespaceatm__fields__mod.xhtml#a7e70ed14715159490a90eb1bbdbe00b6">snow_grnd</a>,<a class="code" href="namespaceatm__fields__mod.xhtml#aaf1c75b798491559aab50c419d03e7cc">nsnow</a>,<a class="code" href="namespaceatm__fields__mod.xhtml#ae6a1826bdbd481203df5bf7442861418">rgrainl</a>,<a class="code" href="namespaceatm__fields__mod.xhtml#a42bb46b39df8d6b86501fff374cbf3b9">rho_snow_grnd</a>        &amp;</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;                        ,<a class="code" href="namespaceatm__fields__mod.xhtml#a06cc571c77b600c453cbc060d4424d4c">sice</a>,<a class="code" href="namespaceatm__fields__mod.xhtml#a05d6c0cc4219ff623b1bfc574f5a798d">sliq</a>,<a class="code" href="namespaceatm__fields__mod.xhtml#a3427b7e4df7c73713fc1f8f7ebcc9058">snowdepth</a>,<a class="code" href="namespaceatm__fields__mod.xhtml#a1393a191251947a853f386356544241c">ds</a>,<a class="code" href="namespaceatm__fields__mod.xhtml#a46cbff1da1236db118e4f8ff4197cf90">tsnowlayer</a> )</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;<span class="comment">! No land field but we should still allocate these.  Better if we had split the</span></div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;<span class="comment">! routine to allocate arrays from initialising them but will do for now.</span></div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;         <span class="keyword">ALLOCATE</span>( clapp_levs(1,1))</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;         <span class="keyword">ALLOCATE</span>( sathh_levs(1,1))</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;         <span class="keyword">ALLOCATE</span>(  hcap_levs(1,1))</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;         <span class="keyword">ALLOCATE</span>(  hcon_levs(1,1))</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;         <span class="keyword">ALLOCATE</span>(satcon_levs(1,1))</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;         <span class="keyword">ALLOCATE</span>(smvccl_levs(1,1))</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;         <span class="keyword">ALLOCATE</span>(smvcwt_levs(1,1))</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;         <span class="keyword">ALLOCATE</span>(smvcst_levs(1,1))</div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! land-surface fields required</span></div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;<span class="comment">!L!L 8. If coupled model, initialise addresses of coupling fields.</span></div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a62ceaf089fed3e4873157d8c3ad12b60">l_oasis</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;      <span class="comment">! If Running with OASIS3 or OASIS3-MCT we need to set up      ! pointers to relevant coupling fields.</span></div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;<span class="comment">! DEPENDS ON: oasis_inita2o</span></div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;      <span class="keyword">Call </span><a class="code" href="oasis__inita2o_8f90.xhtml#a61960fdde97ab3cf2ce7af63f6de3ff5" title="For further details please refer to the file COPYRIGHT.txt which you should have received as part of ...">oasis_inita2o</a>(                                               &amp;</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artsts.h&quot;</span></div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;<span class="preprocessor"></span>         icode,                                            &amp;</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;         cmessage)</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;      <span class="keywordflow">If</span> (icode/=0) <span class="keywordflow">Then</span></div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;        <span class="keyword">Call </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;<span class="keywordflow">      Endif</span></div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;<span class="comment">! Set up the ATMOS grid lat./long.coords for regridding to river</span></div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;<span class="comment">! routing grid</span></div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;      <span class="keywordflow">IF</span>(<a class="code" href="namespaceriver__inputs__mod.xhtml#aade21f15b58407090f05e8be23a0506e" title="=========================================================================== LOGICAL options set from ...">l_rivers</a>)<span class="keywordflow">THEN</span></div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;<span class="comment">! DEPENDS ON: init_a2t</span></div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;        <span class="keyword">CALL </span>init_a2t(                                                  &amp;</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;<span class="preprocessor">#include &quot;artd1.h&quot;</span></div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artsts.h&quot;</span></div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artduma.h&quot;</span></div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artptra.h&quot;</span></div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;artatcpl.h&quot;</span></div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;<span class="preprocessor"></span>           icode,cmessage)</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;          <span class="keywordflow">IF</span> (icode  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,icode,cmessage)</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;<span class="comment">!L!L 9. Print formatted diagnostics from initial dump</span></div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;<span class="comment">! Printctl: printing of climate global and zonal diagnostics is no</span></div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;<span class="comment">!           longer supported</span></div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;<span class="comment">!L!L 10. Initialisation complete - return to master routine</span></div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;<span class="comment">! Check that operational model running has finished</span></div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;<span class="comment">! initialisation and write a message to the operator</span></div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;      <span class="keywordflow">IF</span>(<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;         <span class="keywordflow">IF</span>(<a class="code" href="namespacenlstcall__mod.xhtml#ac8bee74e99550307aa6d2a184b0860ad" title="!&gt; used for networking ">model_status</a>  ==  <span class="stringliteral">&#39;Operational&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;<span class="comment">! DEPENDS ON: operatormessage</span></div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;            <span class="keyword">CALL </span><a class="code" href="operatormessage_8f90.xhtml#a57f8eb57c166c9767ee07ef1c6f4b5c4" title="Write a message to the operator for operational runs. ">operatormessage</a>(nproc)</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160; 999  <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INITIAL&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;<span class="comment">!L      END SUBROUTINE INITIAL</span></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
