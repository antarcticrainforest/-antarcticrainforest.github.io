<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/boundary_layer/mym_solve_simeq_bcgstab.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_632ae183c4312d9574c0a0e7d49b8023.xhtml">boundary_layer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">mym_solve_simeq_bcgstab.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="mym__solve__simeq__bcgstab_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="mym__solve__simeq__bcgstab_8f90.xhtml#a069143f3a709dfeaeec819a9f24557b2" title="SUBROUTINE mym_solve_simeq_bcgstab SUBROUTINE mym_solve_simeq_bcgstab. ">mym_solve_simeq_bcgstab</a>(                                     &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;   max_itr, eps,                                                        &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;   qq_tsq_k, qq_qsq_k, qq_cov_k,                                        &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;   aa_tsq_k, bb_tsq_k, cc_tsq_k, pp_tc_k,                               &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;   aa_qsq_k, bb_qsq_k, cc_qsq_k, pp_qc_k,                               &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;   aa_cov_k, bb_cov_k, cc_cov_k, pp_ct_k, pp_cq_k,                      &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;   tsq_k, qsq_k, cov_k, endflag)</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="mym__solve__simeq__bcgstab_8f90.xhtml#a069143f3a709dfeaeec819a9f24557b2">   17</a></span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemym__option__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">mym_option_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;     max_itr</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;               <span class="comment">! the maximum number of iterations</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;     eps</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;               <span class="comment">! convergence condition</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;     qq_tsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;     qq_qsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;     qq_cov_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;     aa_tsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;     bb_tsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;     cc_tsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;     pp_tc_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                               &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;     aa_qsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;     bb_qsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;     cc_qsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;     pp_qc_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                               &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;     aa_cov_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;     bb_cov_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;     cc_cov_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;     pp_ct_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                               &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;     pp_cq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;             <span class="comment">! matrix elements</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                                  &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;     tsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                                 &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;     qsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                                 &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;     cov_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;             <span class="comment">! solved tsq, qsq and cov</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                               &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;     endflag</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;             <span class="comment">! to indicate if converged</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;             <span class="comment">! positive means proper solution is obtains.</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;             <span class="comment">! 0: converged</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;             <span class="comment">! 1: obtained an exact solution (residual = 0)</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;             <span class="comment">! -1: max_itr iterations were done, but not converged</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;             <span class="comment">! -2: solution in iterations becomes unexpectedly large,</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;             <span class="comment">!     so gave up</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;     k, m,                                                              &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;             <span class="comment">! loop indexes</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;     nitr</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;             <span class="comment">! a number of iterations</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;     norm,                                                              &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;             <span class="comment">! residual norm</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;     r_qq_norm,                                                         &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;             <span class="comment">! reciprocal of the inirial residual norm</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;     err,                                                               &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;             <span class="comment">! norm * r_qq_norm</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;     bet_num,                                                           &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;             <span class="comment">! numerator of beta</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;     bet_den,                                                           &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;             <span class="comment">! denominator of beta</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;     bet,                                                               &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;             <span class="comment">! beta</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;     alp_num,                                                           &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;             <span class="comment">! numerator of alpha</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;     alp_den,                                                           &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;             <span class="comment">! denominator of alpha</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;     alp,                                                               &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;             <span class="comment">! alpha</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;     omg_num,                                                           &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;             <span class="comment">! numerator of omega</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;     omg_den,                                                           &amp;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;             <span class="comment">! denominator of omega</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;     omg,                                                               &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;             <span class="comment">! omega</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;     max_val</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;             <span class="comment">! maximum value of solutions</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;     rvec_tsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;     rvec_qsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;     rvec_cov(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;     r0vec_tsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;     r0vec_qsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;     r0vec_cov(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;     pvec_tsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;     pvec_qsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;     pvec_cov(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;     ppvec_tsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;     ppvec_qsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;     ppvec_cov(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;     vvec_tsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;     vvec_qsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;     vvec_cov(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;     svec_tsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;     svec_qsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;     svec_cov(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;     ssvec_tsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;     ssvec_qsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;     ssvec_cov(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;     tvec_tsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;     tvec_qsq(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;     tvec_cov(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                              &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;             <span class="comment">! Vectors used in the BCG algorithm.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;             <span class="comment">! See the document</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;     aap_tsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;     r_bbp_tsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                           &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;     ccp_tsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;     aap_qsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;     r_bbp_qsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                           &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;     ccp_qsq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;     aap_cov_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;     r_bbp_cov_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                           &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;     ccp_cov_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>),                                             &amp;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;     ppp_tc_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>, 0:2),                                         &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;     ppp_qc_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>, 0:2),                                         &amp;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;     ppp_ct_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>, 0:2),                                         &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;     ppp_cq_k(<a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a>, 0:2)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="comment">! elements of ILU(2)</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="comment">! the second dimension corresponds to the fill-in level</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;MYM_SOLVE_SIMEQ_BCGSTAB&#39;</span>,                    &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                           zhook_in,zhook_handle)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">!DEPENDS ON: mym_simeq_ilud2_decmp</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keyword">CALL </span><a class="code" href="mym__simeq__ilud2__decmp_8f90.xhtml#aa2c07acb0a8829955192b24755986033" title="SUBROUTINE mym_simeq_ilud2_decmp- SUBROUTINE mym_simeq_ilud2_decmp- Purpose: To perform the incomplet...">mym_simeq_ilud2_decmp</a>(                                           &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;     aa_tsq_k, bb_tsq_k, cc_tsq_k, pp_tc_k,                             &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;     aa_qsq_k, bb_qsq_k, cc_qsq_k, pp_qc_k,                             &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;     aa_cov_k, bb_cov_k, cc_cov_k, pp_ct_k, pp_cq_k,                    &amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;     aap_tsq_k, r_bbp_tsq_k, ccp_tsq_k,                                 &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;     ppp_tc_k(1, 0), ppp_tc_k(1, 1), ppp_tc_k(1, 2),                    &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;     aap_qsq_k, r_bbp_qsq_k, ccp_qsq_k,                                 &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;     ppp_qc_k(1, 0), ppp_qc_k(1, 1), ppp_qc_k(1, 2),                    &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;     aap_cov_k, r_bbp_cov_k, ccp_cov_k,                                 &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;     ppp_ct_k(1, 0), ppp_cq_k(1, 0),                                    &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;     ppp_ct_k(1, 1), ppp_cq_k(1, 1),                                    &amp;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;     ppp_ct_k(1, 2), ppp_cq_k(1, 2))</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  r_qq_norm = 0.0</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  alp_num = 0.0</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keywordflow">DO</span> k = 1, <a class="code" href="namespacemym__option__mod.xhtml#a8aa711406f319f2ee6ffe91d4dd59f21">tke_levels</a></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="comment">! set the initial values</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    tsq_k(k) = 0.0</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    qsq_k(k) = 0.0</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    cov_k(k) = 0.0</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment">! rvec is a residual vector</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    rvec_tsq(k) = qq_tsq_k(k)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    rvec_qsq(k) = qq_qsq_k(k)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    rvec_cov(k) = qq_cov_k(k)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    r0vec_tsq(k) = rvec_tsq(k)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    r0vec_qsq(k) = rvec_qsq(k)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    r0vec_cov(k) = rvec_cov(k)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    pvec_tsq(k) = rvec_tsq(k)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    pvec_qsq(k) = rvec_qsq(k)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    pvec_cov(k) = rvec_cov(k)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    alp_num = alp_num + r0vec_tsq(k) * rvec_tsq(k)                      &amp;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                      + r0vec_qsq(k) * rvec_qsq(k)                      &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                      + r0vec_cov(k) * rvec_cov(k)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    r_qq_norm = r_qq_norm +  qq_tsq_k(k) * qq_tsq_k(k)                  &amp;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                          +  qq_qsq_k(k) * qq_qsq_k(k)                  &amp;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                          +  qq_cov_k(k) * qq_cov_k(k)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keywordflow">IF</span> (r_qq_norm == 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    r_qq_norm = 0.0</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keyword">    end</span>flag = 2</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    nitr = 0</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    r_qq_norm = 1.0 / r_qq_norm</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keyword">    end</span>flag = -1</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    nitr = max_itr</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keywordflow">DO</span> m = 1, nitr</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">! DEPENDS ON: mym_solve_simeq_ilud2</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keyword">CALL </span><a class="code" href="mym__solve__simeq__ilud2_8f90.xhtml#a5b75a18194bce765a09f6364b2f16cd4" title="SUBROUTINE mym_solve_simeq_ilud2- SUBROUTINE mym_solve_simeq_ilud2- Purpose: To solve simultaneous eq...">mym_solve_simeq_ilud2</a>(                                         &amp;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;       0,                                                               &amp;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;       pvec_tsq, pvec_qsq, pvec_cov,                                    &amp;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;       aap_tsq_k, r_bbp_tsq_k, ccp_tsq_k,                               &amp;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;       ppp_tc_k(1, 0), ppp_tc_k(1, 1), ppp_tc_k(1, 2),                  &amp;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;       aap_qsq_k, r_bbp_qsq_k, ccp_qsq_k,                               &amp;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;       ppp_qc_k(1, 0), ppp_qc_k(1, 1), ppp_qc_k(1, 2),                  &amp;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;       aap_cov_k, r_bbp_cov_k, ccp_cov_k,                               &amp;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;       ppp_ct_k(1, 0), ppp_cq_k(1, 0),                                  &amp;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;       ppp_ct_k(1, 1), ppp_cq_k(1, 1),                                  &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;       ppp_ct_k(1, 2), ppp_cq_k(1, 2),                                  &amp;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;       ppvec_tsq, ppvec_qsq, ppvec_cov)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">! v = A pp</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">! DEPENDS ON: mym_simeq_matrix_prod</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keyword">CALL </span><a class="code" href="mym__simeq__matrix__prod_8f90.xhtml#adfd88d8d55bae35165e3b32b5f93595e" title="SUBROUTINE mym_simeq_matrix_prod- SUBROUTINE mym_simeq_matrix_prod- Purpose: To calculate products of...">mym_simeq_matrix_prod</a>(                                         &amp;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;       aa_tsq_k, bb_tsq_k, cc_tsq_k, pp_tc_k,                           &amp;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;       aa_qsq_k, bb_qsq_k, cc_qsq_k, pp_qc_k,                           &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;       aa_cov_k, bb_cov_k, cc_cov_k, pp_ct_k, pp_cq_k,                  &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;       ppvec_tsq, ppvec_qsq, ppvec_cov,                                 &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;       vvec_tsq, vvec_qsq, vvec_cov)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    alp_den = 0.0</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, tke_levels</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      alp_den = alp_den + r0vec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * vvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                    &amp;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;         + r0vec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * vvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                                   &amp;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;         + r0vec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * vvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordflow">IF</span> (alp_den == 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keyword">      end</span>flag = 1</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      alp = alp_num / alp_den</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, tke_levels</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        svec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = rvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - alp * vvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        svec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = rvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - alp * vvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        svec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = rvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - alp * vvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">! DEPENDS ON: mym_solve_simeq_ilud2</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;      <span class="keyword">CALL </span><a class="code" href="mym__solve__simeq__ilud2_8f90.xhtml#a5b75a18194bce765a09f6364b2f16cd4" title="SUBROUTINE mym_solve_simeq_ilud2- SUBROUTINE mym_solve_simeq_ilud2- Purpose: To solve simultaneous eq...">mym_solve_simeq_ilud2</a>(                                       &amp;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;         0,                                                             &amp;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;         svec_tsq, svec_qsq, svec_cov,                                  &amp;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;         aap_tsq_k, r_bbp_tsq_k, ccp_tsq_k,                             &amp;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;         ppp_tc_k(1, 0), ppp_tc_k(1, 1), ppp_tc_k(1, 2),                &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;         aap_qsq_k, r_bbp_qsq_k, ccp_qsq_k,                             &amp;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;         ppp_qc_k(1, 0), ppp_qc_k(1, 1), ppp_qc_k(1, 2),                &amp;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;         aap_cov_k, r_bbp_cov_k, ccp_cov_k,                             &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;         ppp_ct_k(1, 0), ppp_cq_k(1, 0),                                &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;         ppp_ct_k(1, 1), ppp_cq_k(1, 1),                                &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;         ppp_ct_k(1, 2), ppp_cq_k(1, 2),                                &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;         ssvec_tsq, ssvec_qsq, ssvec_cov)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">! t = A ss</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">! DEPENDS ON: mym_simeq_matrix_prod</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      <span class="keyword">CALL </span><a class="code" href="mym__simeq__matrix__prod_8f90.xhtml#adfd88d8d55bae35165e3b32b5f93595e" title="SUBROUTINE mym_simeq_matrix_prod- SUBROUTINE mym_simeq_matrix_prod- Purpose: To calculate products of...">mym_simeq_matrix_prod</a>(                                       &amp;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;         aa_tsq_k, bb_tsq_k, cc_tsq_k, pp_tc_k,                         &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;         aa_qsq_k, bb_qsq_k, cc_qsq_k, pp_qc_k,                         &amp;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;         aa_cov_k, bb_cov_k, cc_cov_k, pp_ct_k, pp_cq_k,                &amp;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;         ssvec_tsq, ssvec_qsq, ssvec_cov,                               &amp;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;         tvec_tsq, tvec_qsq, tvec_cov)</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;      omg_num = 0.0</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;      omg_den = 0.0</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, tke_levels</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        omg_num = omg_num + tvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * svec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                   &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                          + tvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * svec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                   &amp;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                          + tvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * svec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        omg_den = omg_den + tvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * tvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                   &amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                          + tvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * tvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                   &amp;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                          + tvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * tvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;      omg = omg_num / omg_den</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;      alp_den = alp_num</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;      alp_num = 0.0</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;      norm = 0.0</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;      max_val = 0.0</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, tke_levels</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        tsq_k(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = tsq_k(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + alp * ppvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + omg * ssvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        qsq_k(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = qsq_k(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + alp * ppvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + omg * ssvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        cov_k(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = cov_k(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + alp * ppvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) + omg * ssvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        rvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = svec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - omg * tvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        rvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = svec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - omg * tvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        rvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = svec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - omg * tvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        alp_num = alp_num + r0vec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * rvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                  &amp;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                          + r0vec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * rvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                  &amp;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                          + r0vec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * rvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        norm = norm + rvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * rvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                         &amp;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                    + rvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * rvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                         &amp;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                    + rvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) * rvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        max_val = max(max_val, abs(tsq_k(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)),                           &amp;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                               abs(qsq_k(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)),                           &amp;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                               abs(cov_k(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)))</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;      err = sqrt(norm * r_qq_norm)</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;      <span class="keywordflow">IF</span> (err &gt;= <a class="code" href="eps_8f90.xhtml#a607b0ae2f37e1479804bcce0b85f4125">eps</a> .AND. m &lt; 30 .AND. max_val &lt; 1.0e10) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;       <span class="comment">! continue to the next step</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (max_val &gt; 100.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;       <span class="comment">! Unexpectedly huge</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keyword">        end</span>flag = -2</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (err &lt; <a class="code" href="eps_8f90.xhtml#a607b0ae2f37e1479804bcce0b85f4125">eps</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;       <span class="comment">! Converged</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keyword">        end</span>flag = 0</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="keywordflow">IF</span> (endflag /= -1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;      <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;      bet = alp_num * alp / (alp_den * omg)</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> = 1, tke_levels</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        pvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = rvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                                       &amp;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                             + bet * (pvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - omg * vvec_tsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        pvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = rvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                                       &amp;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                             + bet * (pvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - omg * vvec_qsq(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        pvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = rvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)                                       &amp;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                             + bet * (pvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - omg * vvec_cov(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>))</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="keywordflow">  END DO</span>    <span class="comment">! loop m = 1, max_itr</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;MYM_SOLVE_SIMEQ_BCGSTAB&#39;</span>,                    &amp;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                                           zhook_out,zhook_handle)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="mym__solve__simeq__bcgstab_8f90.xhtml#a069143f3a709dfeaeec819a9f24557b2" title="SUBROUTINE mym_solve_simeq_bcgstab SUBROUTINE mym_solve_simeq_bcgstab. ">mym_solve_simeq_bcgstab</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
