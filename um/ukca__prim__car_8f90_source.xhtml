<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/UKCA/ukca_prim_car.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_3b087d695daa154bfcb7242bcfd0fbd3.xhtml">UKCA</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ukca_prim_car.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ukca__prim__car_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">!  Description:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">!  Code Description:</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="ukca__prim__car_8f90.xhtml#ac5b7b677048ab6adb5551e6ecac0cf2b" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_prim_car</a>(row_length, rows, model_levels,          &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                          emc, emcbm, iso2ems, aer_mas_primbc,          &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                          aer_mas_primoc, aer_num_primcar)</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="ukca__prim__car_8f90.xhtml#ac5b7b677048ab6adb5551e6ecac0cf2b">   34</a></span>&#160;-<span class="comment">!</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordtype">USE </span>ukca_constants<span class="keywordtype">,      ONLY</span>: ppi, avc, ra, zboltz, mm_da</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keywordtype">USE </span>ukca_mode_setup<span class="keywordtype">,     ONLY</span>: nmodes, mode, cp_bc, cp_oc, mm,    &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                                     fracbcem, fracocem, ncp,           &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                     component, rhocomp</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">,         ONLY</span>: <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,             ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,            ONLY</span>: jprb, jpim</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">! Subroutine interface</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: row_length                         <span class="comment">! No of columns</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: rows                               <span class="comment">! No of rows</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: model_levels                       <span class="comment">! No of model levels</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: iso2ems                            <span class="comment">! Switch for SO2 emissions</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: emc(row_length,rows,4)             <span class="comment">! Surface carbon emiss kgC/m2/s</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: emcbm(row_length,rows,model_levels,2)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                                                                <span class="comment">! Biomass burn emiss kgC/m2/s</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>   :: aer_mas_primbc(row_length,rows,            &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                             model_levels,nmodes)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                                                <span class="comment">! Mass fluxes for BC emissions</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>   :: aer_mas_primoc(row_length,rows,            &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                             model_levels,nmodes)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                                                                <span class="comment">! Mass fluxes for BC emissions</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>   :: aer_num_primcar(row_length,rows,           &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                                             model_levels,nmodes)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span>  :: ocfact = 1.4    <span class="comment">! to convert from C to POM</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      <span class="keywordtype">INTEGER</span> :: imode                                 <span class="comment">! Loop index for modes</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      <span class="keywordtype">INTEGER</span> :: icp                                   <span class="comment">! Loop index for components</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      <span class="keywordtype">INTEGER</span> :: l                                     <span class="comment">! Loop index for sources</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <span class="keywordtype">INTEGER</span> :: nsources                              <span class="comment">! Number of sources</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="keywordtype">INTEGER</span> :: errcode                               <span class="comment">! Error code</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      <span class="keywordtype">REAL</span>    :: emcvol(row_length,rows)               <span class="comment">! Total (BC+OC) emitted particle volume (nm3/m2/s)</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      <span class="keywordtype">REAL</span>    :: emcvol3d(row_length,rows,model_levels)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">! Total (BC+OC) emitted particle volume (nm3/m2/s) (3d)</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      <span class="keywordtype">REAL</span>    :: factor                                <span class="comment">!  converts from molecules or particles per m2/s to kg/m2/s</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      <span class="keywordtype">REAL</span>    :: emcbc(row_length,rows)                <span class="comment">! BC emissn rate into mode (kg/m2/s)</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="keywordtype">REAL</span>    :: emcbc3d(row_length,rows,model_levels) <span class="comment">! 3D  &quot;      REAL    :: emcoc(row_length,rows)                ! OC emissn rate into mode (kg/m2/s)</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      <span class="keywordtype">REAL</span>    :: emcoc3d(row_length,rows,model_levels) <span class="comment">! 3D  &quot;      REAL    :: deln(row_length,rows)                 ! Change in particle no conc (equivalent dry air kg/m2/s)</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      <span class="keywordtype">REAL</span>    :: deln3d(row_length,rows,model_levels)  <span class="comment">! Change in particle no conc (equiv-kg/m2/s)</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <span class="keywordtype">REAL</span>    :: mode_diam(2)                          <span class="comment">! Geometric mean diameter of modes</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      <span class="keywordtype">REAL</span>    :: stdev(2)                              <span class="comment">! Geom. std dev. of modes</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <span class="keywordtype">REAL</span>    :: lstdev(2)                             <span class="comment">! Log(stdev)</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      <span class="keywordtype">CHARACTER(LEN=72)</span> :: cmessage                    <span class="comment">! Error message</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_PRIM_CAR&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="keywordflow">IF</span>(iso2ems &gt;= 1 .AND. iso2ems &lt;= 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">! If ISO2EMS 1 or 2 then use AEROCOM ACB recommendations for BC/OC size</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        mode_diam=(/80.0,30.0/)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        stdev=(/1.8,1.8/)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        nsources=2</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ((iso2ems &gt;= 3).OR.(iso2ems &lt;= 6)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">! If ISO2EMS == 3,4,5,6 use AEROCOM ACB recommendations for BC/OC size</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">!                       as modified by Stier et al (2005)</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        mode_diam=(/150.0,60.0/)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        stdev=(/1.59,1.59/)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        nsources=2</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (iso2ems == 7) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">! If ISO2EMS == 7 then use AEROCOM ACB recommendations for BC/OC size</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">!                          as modified by Stier et al (2005)</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">! first value is used for wildfires, second value for all anthro emissions</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        mode_diam=(/150.0,60.0/)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        stdev=(/1.59,1.59/)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        nsources=2</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        cmessage = <span class="stringliteral">&#39; ISO2EMS is out of range&#39;</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        errcode = 1</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&#39;UKCA_PRIM_CAR&#39;</span>,errcode,cmessage)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      factor=mm_da/avc   <span class="comment">! converts from molecls or partcls per m2/s to kg/m2/s</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      <span class="keywordflow">DO</span> imode=1,nmodes</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">IF</span> (mode(imode)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">! If some BC/OC is emitted into this mode</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;          <span class="keywordflow">IF</span> ((fracbcem(imode)+fracocem(imode)) &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="keywordflow">DO</span> l=1,nsources <span class="comment">! loop over bio-fuel/fires(1) and fossil-fuel(2)</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">! For ISO2EMS&lt;7</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">! l=1 accesses EMC(1) and EMC(3) (BC and OC) for bio-fuel &amp; wildfires</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">! l=2 accesses EMC(2) and EMC(4) (BC and OC) for fossil-fuel</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">! For ISO2EMS=7</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">! l=1 accesses EMC(1) and EMC(3) (BC and OC) for wildfires</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">! l=2 accesses EMC(2) and EMC(4) (BC and OC) for biofuel &amp; fossil-fuel</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">! .. This section updates due to bio-fuel and fossil-fuel emissions</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;              lstdev(l) = log(stdev(l))</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">! .. Inject surface emissions (bio &amp; fossil fuel) in kg/m2/s</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;              emcbc(:,:) = emc(:,:,l)*fracbcem(imode)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;              emcoc(:,:) = emc(:,:,l+2)*fracocem(imode)*ocfact</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">! *ocfact to convert from C to POM</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;              deln(:,:) = 0.0</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">! .. Calculate emitted volume in nm3/m2/s</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;              emcvol(:,:) = 1e27*(emcbc(:,:)/                           &amp;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                              rhocomp(cp_bc)+emcoc(:,:)/rhocomp(cp_oc))</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">! .. Then divide by mean particle volume and multiply by factor</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">! ..   to give equivalent (dry air) kg/m2/s              deln(:,:) = factor*emcvol(:,:)/((ppi/6.0)*                &amp;</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                              ((mode_diam(l))**3)*                    &amp;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                              exp(4.5*lstdev(l)*lstdev(l)) )</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;              <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">! .. Update BC component mass</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                  <span class="keywordflow">IF</span> (icp == cp_bc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                    aer_mas_primbc(:,:,1,imode) =                       &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                        aer_mas_primbc(:,:,1,imode) +                   &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                           (factor*avc/mm(icp))*emcbc(:,:)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keywordflow">                  END IF</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">! .. Update OC component mass</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                  <span class="keywordflow">IF</span> (icp == cp_oc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                    aer_mas_primoc(:,:,1,imode) =                       &amp;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                        aer_mas_primoc(:,:,1,imode) +                   &amp;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                           (factor*avc/mm(icp))*emcoc(:,:)</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordflow">                  END IF</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordflow">                END IF</span>    <span class="comment">! if component(imode,icp)</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keywordflow">              END DO</span>    <span class="comment">! loop over cpts</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">! .. Sum up each emitted number into mode via budget term (per equiv-kg/m2/s)</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;              aer_num_primcar(:,:,1,imode) =                            &amp;                  aer_num_primcar(:,:,1,imode) + deln(:,:)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">! .. This section updates due to biomass burning BC/OC emissions</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;              <span class="keywordflow">IF</span>(l == 1) <span class="keywordflow">THEN</span>          <span class="comment">! If l=1, then do biomass burning</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">! .. Calculate BC emission rate into mode (kg/m2/s)</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                emcbc3d(:,:,:) = emcbm(:,:,:,1)*fracbcem(imode)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">! .. Calculate OC emission rate into mode (kg/m2/s) as POM</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                emcoc3d(:,:,:) = emcbm(:,:,:,2)*fracocem(imode)*ocfact</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                deln3d(:,:,:) = 0.0</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">! .. Calculate emitted particle volume (nm3/m2/s)</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                emcvol3d(:,:,:) = 1e27*(emcbc3d(:,:,:)/rhocomp(cp_bc)   &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                                        + emcoc3d(:,:,:)/rhocomp(cp_oc))</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">! .. Divide by mean particle volume and multiply by factor to give</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">! ..  equivalent (as dry air) kg/m2/s</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                deln3d(:,:,:) = factor*emcvol3d(:,:,:)/((ppi/6.0)*      &amp;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                                  ((mode_diam(l))**3)*                &amp;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                                  exp(4.5*lstdev(l)*lstdev(l)) )</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                                 <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                  <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">! .. Update BC component mass</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                    <span class="keywordflow">IF</span> (icp == cp_bc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">! .. sum up each emitted mass into mode</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">! ..   emcbc3d is in kg-cpt/m2/s</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                      aer_mas_primbc(:,:,:,imode)=                      &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                        aer_mas_primbc(:,:,:,imode)+                    &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                          (factor*avc/mm(icp))*emcbc3d(:,:,:)      <span class="comment">! kg/m2/s</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keywordflow">                    END IF</span>      <span class="comment">! if icp=cp_bc</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">! .. Update OC component mass</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                    <span class="keywordflow">IF</span> (icp == cp_oc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">! .. sum up each emitted mass into mode</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                      aer_mas_primoc(:,:,:,imode)=                      &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                        aer_mas_primoc(:,:,:,imode)+                    &amp;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                          (factor*avc/mm(icp))*emcoc3d(:,:,:)      <span class="comment">! kg/m2/s</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">! .. emcbc3d is in kg-cpt/m2/s</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">! .. delmdndcp is in kg-air/m2/s (mass-fraction--&gt;mole-fraction)</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">                    END IF</span>      <span class="comment">! if icp=cp_oc</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="keywordflow">                  END IF</span>     <span class="comment">! component</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keywordflow">                END DO</span>     <span class="comment">! imode</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">! .. sum up each emitted number into mode via new budget term equiv-kg/m2/s</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                aer_num_primcar(:,:,:,imode) =                          &amp;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                     aer_num_primcar(:,:,:,imode) + deln3d(:,:,:)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keywordflow">              END IF</span>    <span class="comment">! l=1</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keywordflow">            END DO</span>    <span class="comment">! l=1,nsources</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="keywordflow">          END IF</span>   <span class="comment">! BC/OC emitted into this mode</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! if mode is defined</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! loop over nmodes</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_PRIM_CAR&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="ukca__prim__car_8f90.xhtml#ac5b7b677048ab6adb5551e6ecac0cf2b" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_prim_car</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
