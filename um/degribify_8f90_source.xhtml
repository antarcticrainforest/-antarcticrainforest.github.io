<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/fieldcalc/degribify.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_925d6107435631a137c191c3b43797c1.xhtml">fieldcalc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">degribify.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="degribify_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#if defined(GRIB_API)</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor"></span><span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#af83e6bde65cc2f47da36cddae7e9a38f" title="Routines for converting fields from fieldsfile to GRIB. ">degribify</a>(  UMHdr_out,   &amp;  ! in</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;                       MaxFldsOut,  &amp;  ! in</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                       Gribfile,    &amp;  ! in</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                       PackType,    &amp;  ! in</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                       ErrorStatus )   <span class="comment">! inout</span></div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="degribify_8f90.xhtml#af83e6bde65cc2f47da36cddae7e9a38f">   12</a></span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceio__mod.xhtml" title="Module containing derived types used for IO in Fieldcalc. ">io_mod</a><span class="keywordtype">, ONLY</span>:         &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>,          &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <a class="code" href="structio__mod_1_1pp__header__type.xhtml" title="Global Type Definitions: ">pp_header_type</a>,         &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <a class="code" href="structio__mod_1_1um__header__type.xhtml">um_header_type</a></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceerr__mod.xhtml" title="Module containing error codes for Fieldcalc. ">err_mod</a><span class="keywordtype">, ONLY</span>:        &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a>,               &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <a class="code" href="namespaceerr__mod.xhtml#abef63b1aad05f1f96cfa12dbf6091abc">statuswarning</a>,          &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <a class="code" href="namespaceerr__mod.xhtml#af3378d99a6a222835d2678b8336251c8">statusfatal</a></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacercf__headaddress__mod.xhtml" title="Magic numbers for header components Magic numbers for header components. ">rcf_headaddress_mod</a> <span class="comment">! Most of this.</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceio__mod.xhtml" title="Module containing derived types used for IO in Fieldcalc. ">io_mod</a><span class="keywordtype">, ONLY</span>: &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <a class="code" href="namespaceio__mod.xhtml#a3d023e0499687b513b267a53e94fafb1" title="Global Constants: ">lenfixhd</a></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceff__to__grib2__mod.xhtml" title="Module to translate stash codes to GRIB codes. ">ff_to_grib2_mod</a></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keywordtype">USE </span>grib_api</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,           &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keywordtype">IMPLICIT None</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1um__header__type.xhtml">um_header_type</a>), <span class="keywordtype">INTENT(INOUT)</span> :: UMHdr_out</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>              :: MaxFldsOut</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">CHARACTER(LEN=*)</span>, <span class="keywordtype">INTENT(IN)</span>      :: gribfile</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keywordtype">CHARACTER(LEN=*)</span>, <span class="keywordtype">INTENT(IN)</span>      :: packType</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span>              :: ErrorStatus</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">CHARACTER(LEN=*)</span>, <span class="keywordtype">PARAMETER</span> :: RoutineName = <span class="stringliteral">&quot;DEGRIBIFY&quot;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">PARAMETER</span>          :: PPHdrMod = .false.</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>) :: TempField</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordtype">CHARACTER(LEN=80)</span> :: errmessage</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: nb_pv_1</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: nb_pv_2</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">TARGET</span>, <span class="keywordtype">ALLOCATABLE</span> :: pv_1(:)</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">TARGET</span>, <span class="keywordtype">ALLOCATABLE</span> :: pv_2(:)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">TARGET</span>, <span class="keywordtype">ALLOCATABLE</span> :: valid_levels_1(:)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">TARGET</span>, <span class="keywordtype">ALLOCATABLE</span> :: valid_levels_2(:)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: valid_soil_levels(:)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keywordtype">INTEGER</span> :: max_levels</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keywordtype">INTEGER</span> :: max_levels_1</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keywordtype">INTEGER</span> :: max_levels_2</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keywordtype">INTEGER</span> :: max_soil_levels</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordtype">LOGICAL</span> :: typePL</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordtype">LOGICAL</span> :: typeML</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordtype">INTEGER</span> :: len_io</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordtype">REAL</span>    :: err_io</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordtype">INTEGER</span> :: i,j,k,l</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">! Grib specific variables</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: igrib</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: iret</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: grib_count_in, grib_count_out</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keywordtype">integer(KIND=KindOfInt)</span>,<span class="keywordtype">allocatable</span> :: paramId(:),step(:),level(:)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keywordtype">CHARACTER(LEN=32)</span>, <span class="keywordtype">ALLOCATABLE</span> :: typeOfLevel(:)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordtype">CHARACTER(LEN=1)</span>,<span class="keywordtype">allocatable</span> :: std_mess(:)</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keywordtype">integer(KIND=KindOfInt)</span> :: paramIdSize,levelSize,stepSize,typeOfLevelSize</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keywordtype">integer(KIND=KindOfInt)</span> :: idx_main</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keywordtype">CHARACTER(LEN=256)</span>      :: centre</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordtype">REAL</span> :: packingError</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keywordtype">REAL</span> :: packAcc</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">! Dr Hook</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">! End of header -</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(routinename,zhook_in,zhook_handle)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">! DEPENDS ON: timer</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">CALL </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a>( routinename, 3 )</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordflow">IF</span> ( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="comment">! Previous error - do not proceed</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;max_levels = 0</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;max_levels_1 = 0</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;max_levels_2 = 0</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;max_soil_levels   = 1</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;grib_count_in = 0</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;grib_count_out = 0</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;nb_pv_1 = 0</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;nb_pv_2 = 0</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">! Lets try setting up the translation table...</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceff__to__grib2__mod.xhtml#a05462f8fb30cd50eb13b0b7bf848fb02">read_st_to_grib2</a>(errorstatus)</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">call </span><a class="code" href="degribify_8f90.xhtml#a5553b51e64e5fca143b6f319784787d1">find_level_info</a></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keyword">call </span><a class="code" href="degribify_8f90.xhtml#a8d0fde8168348217fd7fa676e3855bb6">init_umhdr</a></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">! Lets read back the message we saved and use it to setup headers</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">call </span>grib_new_from_message(igrib, std_mess)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">! Get centre - this should really be constant for the whole file.</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;centre&#39;</span>,centre)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A)&#39;</span>) <span class="stringliteral">&quot;INFO: Centre is &quot;</span>, trim(centre)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;degribify&#39;</span>)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keyword">Call </span><a class="code" href="degribify_8f90.xhtml#a3cb9d94899af43c2a7ff572b13504c54">setup_fixhd</a></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword">call </span><a class="code" href="degribify_8f90.xhtml#a41809e63166fd30c93e21544b82c2f4d">setup_inthd</a></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keyword">call </span><a class="code" href="degribify_8f90.xhtml#ac164cf744e932c4ee045dbca590437f7">setup_realhd</a></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keyword">call </span><a class="code" href="degribify_8f90.xhtml#ab831e6d70c91df751af7ae1946cb6c04">setup_levdephd</a></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keyword">call </span>grib_release(igrib)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">! let use an index to intelligently go through the file in parameter order.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keyword">call </span><a class="code" href="degribify_8f90.xhtml#a42e87a08af39d3df3ba1b48394f12fd3">setup_index</a></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">! If an error has occurred at this point lets just goto the end of routine.</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordflow">IF</span> (errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keywordflow">DO</span> i=1,stepsize <span class="comment">! loop on step</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">! select step=step(i)</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keyword">call </span>grib_index_select(idx_main,<span class="stringliteral">&#39;step&#39;</span>,step(i))</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  <span class="keywordflow">DO</span> j=1,paramidsize <span class="comment">! loop on paramId</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">! select paramId=paramId(j)</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keyword">call </span>grib_index_select(idx_main,<span class="stringliteral">&#39;paramId&#39;</span>,paramid(j))</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">DO</span> k = 1, typeoflevelsize</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      <span class="keyword">Call </span>grib_index_select(idx_main,<span class="stringliteral">&#39;typeOfLevel&#39;</span>,typeoflevel(k))</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      <span class="keywordflow">DO</span> l=1,levelsize <span class="comment">! loop on level</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">! select level=level(k)</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">IF</span> (trim(centre) == <span class="stringliteral">&#39;ecmf&#39;</span> .AND.                                 &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            index(typeoflevel(k),<span class="stringliteral">&quot;hybrid&quot;</span>) &gt; 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">! Reverse levels since we need to store away from surface.</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;          <span class="keyword">CALL </span>grib_index_select(idx_main,<span class="stringliteral">&#39;level&#39;</span>,level(levelsize-l+1))</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;          <span class="keyword">CALL </span>grib_index_select(idx_main,<span class="stringliteral">&#39;level&#39;</span>,level(l))</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keyword">CALL </span>grib_new_from_index(idx_main,igrib, iret)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">DO</span> <span class="keywordflow">WHILE</span> (iret /= grib_end_of_index)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;          grib_count_in = grib_count_in + 1</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">! Reset status so we can try and convert as many fields as possible.</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;          errorstatus = <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;          <span class="keyword">CALL </span><a class="code" href="degribify_8f90.xhtml#ae89082daf6090f8c4a410526c40997b0">setup_lookup</a></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;          <span class="keyword">CALL </span><a class="code" href="degribify_8f90.xhtml#a1c124c0d306245f2a430498b5a9e28f8">setup_data</a></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;          <span class="keywordflow">IF</span> (errorstatus == <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            grib_count_out = grib_count_out + 1</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="comment">! Packing error is orig val = packed value +- error</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="comment">! If we at least wgdos pack to twice the error we should be okay.</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            <span class="keyword">CALL </span>grib_get(igrib, <span class="stringliteral">&#39;packingError&#39;</span>, packingerror)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            packacc = floor(log(2*packingerror)/log(2.))</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keyword">CALL </span><a class="code" href="writeflds_8f90.xhtml#a52f16668c80a0b40b1091541075d9396" title="Routines to write fields to a UM fieldsfile. ">writeflds</a>(1,1,1,packtype,(/ 1 /),(/ packacc /), &amp;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                           (/ tempfield /),umhdr_out,errorstatus)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          <span class="keyword">call </span>grib_release(igrib)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;          <span class="keyword">call </span>grib_new_from_index(idx_main,igrib, iret)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordflow">        end do</span> <span class="comment">! loop on iret</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="keywordflow">      end do</span> <span class="comment">! loop on level</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keywordflow">    end do</span> <span class="comment">! loop on typeOfLevel</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordflow">  end do</span> <span class="comment">! loop on paramid</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keywordflow">end do</span> <span class="comment">! loop on step</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I7,A,I7,A)&#39;</span>) <span class="stringliteral">&#39;Converted &#39;</span>,grib_count_out,<span class="stringliteral">&#39; out of &#39;</span>, &amp;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                         grib_count_in, <span class="stringliteral">&#39;GRIB records&#39;</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;degribify&#39;</span>)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keyword">call </span>grib_index_release(idx_main)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(pv_1))              <span class="keyword">DEALLOCATE</span>(pv_1)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(pv_2))              <span class="keyword">DEALLOCATE</span>(pv_2)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(valid_levels_1))    <span class="keyword">DEALLOCATE</span>(valid_levels_1)</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(valid_levels_2))    <span class="keyword">DEALLOCATE</span>(valid_levels_2)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(valid_soil_levels)) <span class="keyword">DEALLOCATE</span>(valid_soil_levels)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(paramid))           <span class="keyword">DEALLOCATE</span>(paramid)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(step))              <span class="keyword">DEALLOCATE</span>(step)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(level))             <span class="keyword">DEALLOCATE</span>(level)</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(std_mess))          <span class="keyword">DEALLOCATE</span>(std_mess)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keyword">CALL </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a>( routinename, 4 )</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(routinename,zhook_out,zhook_handle)</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">! Subroutine: setup_index</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">! Setups up main index to use to loop through the GRIB file.</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#a42e87a08af39d3df3ba1b48394f12fd3">setup_index</a></div><div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="degribify_8f90.xhtml#a42e87a08af39d3df3ba1b48394f12fd3">  263</a></span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keyword">call </span>grib_index_create(idx_main,gribfile,<span class="stringliteral">&#39;step,paramId,typeOfLevel,level&#39;</span>)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">! get the number of distinct values of step in the index</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keyword">call </span>grib_index_get_size(idx_main,<span class="stringliteral">&#39;step&#39;</span>,stepsize)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">! allocate the array to contain the list of distinct steps</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keyword">allocate</span>(step(stepsize))</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">! get the list of distinct steps from the index</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keyword">call </span>grib_index_get(idx_main,<span class="stringliteral">&#39;step&#39;</span>,step)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">! get the number of distinct values of paramId in the index</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keyword">call </span>grib_index_get_size(idx_main,<span class="stringliteral">&#39;paramId&#39;</span>,paramidsize)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">! allocate the array to contain the list of distinct paramId</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keyword">allocate</span>(paramid(paramidsize))</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">! get the list of distinct paramId from the index</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keyword">call </span>grib_index_get(idx_main,<span class="stringliteral">&#39;paramId&#39;</span>,paramid)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">! get the number of distinct types of level in the index</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keyword">call </span>grib_index_get_size(idx_main,<span class="stringliteral">&#39;typeOfLevel&#39;</span>,typeoflevelsize)</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">! allocate the array to contain the list of distinct level types</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keyword">allocate</span>(typeoflevel(typeoflevelsize))</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">! get the list of distinct level types from the index</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keyword">call </span>grib_index_get(idx_main,<span class="stringliteral">&#39;typeOfLevel&#39;</span>,typeoflevel)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">! get the number of distinct values of level in the index</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keyword">call </span>grib_index_get_size(idx_main,<span class="stringliteral">&#39;level&#39;</span>,levelsize)</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">! allocate the array to contain the list of distinct level</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keyword">allocate</span>(level(levelsize))</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">! get the list of distinct level from the index</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="keyword">call </span>grib_index_get(idx_main,<span class="stringliteral">&#39;level&#39;</span>,level)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#a42e87a08af39d3df3ba1b48394f12fd3">setup_index</a></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">! Subroutine: init_umhdr</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">! Initialises the UM headers to sensible values which were calculated from</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">! searching through the GRIB file earlier.</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#a8d0fde8168348217fd7fa676e3855bb6">init_umhdr</a></div><div class="line"><a name="l00302"></a><span class="lineno"><a class="line" href="degribify_8f90.xhtml#a8d0fde8168348217fd7fa676e3855bb6">  302</a></span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keywordtype">INTEGER</span>          :: ipos</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">POINTER</span> :: fixhd_out(:)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">! Functions</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keywordtype">INTEGER</span> :: get_um_version</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordflow">IF</span>( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;  <span class="comment">! Previous error - do not proceed</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keyword">NULLIFY</span>(fixhd_out)</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="keyword">ALLOCATE</span>(umhdr_out % Fixhd(<a class="code" href="namespaceio__mod.xhtml#a3d023e0499687b513b267a53e94fafb1" title="Global Constants: ">lenfixhd</a>))</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">! Initialise all values.</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;umhdr_out % Fixhd(:)        = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;umhdr_out % LenData         = 0</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;umhdr_out % NumFlds         = 0</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">! Set a pointer to make it easier to use.</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;fixhd_out =&gt; umhdr_out % Fixhd</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">! Setup version</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#a8e1fbf025693144f1d27193188350d97" title="Magic numbers for Fixed, Integer, Real, etc header components. ">fh_version</a>) = 20</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">! C routine to set data and time.</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="keyword">Call </span>date_time(fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a66ff84e465fc0e3c851fcff3e464fcf9">fh_ctyear</a>  ), fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a43bb735d2e41c3b68b39894221b1762f">fh_ctmonth</a> ), &amp;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;               fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a4becfdfd1a330ee28f1e102d017062b8">fh_ctday</a>   ), fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#adbe3ac141d8a5a435058adb3c1a1cbca">fh_cthour</a>  ), &amp;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;               fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a88a67891993c0434663c04cf5725ee2c">fh_ctminute</a>), fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a59773c9d0c26d753ae3bf37ca8147ac4">fh_ctsecond</a>) )</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment">! Validity Time - need from GRIB</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#abf7e73dc6846ebdec7e657c64f0dbb1a">fh_vtyear</a> : <a class="code" href="namespacercf__headaddress__mod.xhtml#a710800d038ce6bb5e503a1ca47053d37">fh_vtdayno</a> ) = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a56ed9e141a0e017e0ffd8e7b6be68334">fh_vtsecond</a> )            = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">! Data time - need from GRIB</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#ae6cb6247f5d5de89b0fad9e7cdb9c717">fh_dtyear</a> : <a class="code" href="namespacercf__headaddress__mod.xhtml#a3e9979a933a1e74b39ae0752466b86a7">fh_dtdayno</a> ) = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#abcd0fd6044a6a5b3deea8f9492fe4ad3">fh_submodel</a> )  = 1</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">! Vertical type - need from GRIB.</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="keywordflow">IF</span> ( typepl ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;  fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a9dbaae01a789fc2dd08a338e35bdabe7">fh_vertcoord</a> ) = <a class="code" href="namespacercf__headaddress__mod.xhtml#a8e1243c3587783a7660aec234ac8d18c">fh_vertcoord_pressure</a></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;  <span class="comment">! Does this matter?</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;  fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a9dbaae01a789fc2dd08a338e35bdabe7">fh_vertcoord</a> ) = <a class="code" href="namespacercf__headaddress__mod.xhtml#a2b46123219517fd951820ee43a142629">fh_vertcoord_cp</a></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">! Horizontal grib - need from GRIB (assume global for now)</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a51f8b4f1d51b1c0b75e151ded0b30fbe">fh_horizgrid</a> ) = <a class="code" href="namespacercf__headaddress__mod.xhtml#aeae0436928e26548629593789c806c6c">fh_horizgrid_global</a></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">! Fieldsfile</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#ad803ee6b79cd5b75fccd7a9cc2159a8d">fh_dataset</a>      ) = <a class="code" href="namespacercf__headaddress__mod.xhtml#a1a9aad62bc700fae60a6ee9c4156f7b2">fh_dataset_ff</a></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">! Optional? - no need to be validFixHd_Out( FH_RunId        ) = 0</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#ab2ec9e4d37c4f8e55b4abb42f3b6f3e7">fh_exptno</a>       ) = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">! Need from GRIB - set to standard gregorian for now.</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a123ec50d12e83babb2d7a9e3872efd01">fh_calendartype</a> ) = 1</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">! Need from GRIB - set to C for now</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a6388c19d76913de952b36571eec60513">fh_gridstagger</a> ) = <a class="code" href="namespacercf__headaddress__mod.xhtml#a5c7f0a16de6c520d6a3dc59f3076efab">fh_gridstagger_c</a></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment">! Does this need to be set?</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a49eaa44ce78ae1ea1ca25c92162be259">fh_ancildataid</a> ) = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">! Again does this need to be set?</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#af15d6e3cccb70a0cf32343174afa4add">fh_projno</a> )      = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment">! Hopefully this works.</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment">! DEPENDS ON: get_um_version</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#ac31b0ed52c3aa9c41f43a1f5323a4e65">fh_modelversion</a> ) = get_um_version()</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">! Int constants</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;ipos                      = <a class="code" href="namespaceio__mod.xhtml#a3d023e0499687b513b267a53e94fafb1" title="Global Constants: ">lenfixhd</a>+1</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#aa93f27e42eba77e14d9fe1b2d76e0abd">fh_intcstart</a> ) = ipos</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a18af3c9b908f2d81015e610da107bc1f">fh_intcsize</a>  ) = 46</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">! Real constants</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;ipos                       = ipos + fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a18af3c9b908f2d81015e610da107bc1f">fh_intcsize</a> )</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a6abff550638479bfbf1fb8c6b42a6742">fh_realcstart</a> ) = ipos</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a47742d900f4b97e5ad8fcbbc7cad1b71">fh_realcsize</a>  ) = 38</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">! Level dependent constants</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">! We have to do something rather different here since we need to read the whole</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">! file.  The good thing is that GRIB_API has an index functionality which we</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">! can use.</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;ipos                         = ipos + fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a47742d900f4b97e5ad8fcbbc7cad1b71">fh_realcsize</a> )</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a7be7f67bcfd2edf1a871e442bbd775c1">fh_levdepcstart</a> ) = ipos</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">! If pv_2 is allocated then we are probably using rho/theta levels</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(pv_2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a> ) = (max(nb_pv_1,nb_pv_2)/2)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;  fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a> ) = max(nb_pv_1/2,max_levels)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#abbafe0dce2dae289a1838ef996f05d91">fh_levdepcsize2</a> ) = 8</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">! Everything else IMDI except the lookup, place temporarily at 2048.</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;ipos = ipos + fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a> )*fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#abbafe0dce2dae289a1838ef996f05d91">fh_levdepcsize2</a> )</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment">!ipos                        = ipos + FixHd_Out( FH_RealCSize  )FixHd_Out( FH_LookupStart ) = ipos</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#aecaf5513ab0b26abe9e5a043ece5a6aa">fh_lookupsize1</a> ) = 64</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">! Set to maximum write.</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#aa53dcabed88c2b4debc83388304318c7">fh_lookupsize2</a> ) = maxfldsout</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;ipos = ipos + fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#aecaf5513ab0b26abe9e5a043ece5a6aa">fh_lookupsize1</a> )*fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#aa53dcabed88c2b4debc83388304318c7">fh_lookupsize2</a> )</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a69aa0dfc1521867696520a32a04f0e20">fh_datastart</a> ) = ipos</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="comment">! Not used here in a fieldsfile.</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a51315986ca64385b4d8e9c99d6482e5d">fh_numprogfields</a> ) = 0</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">! Now setup the header information using information above.</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">! DEPENDS ON: setup_umhdr</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="keyword">CALL </span><a class="code" href="setup__umhdr_8f90.xhtml#a212add01e900696aa35cd32f22e6690a" title="Routine to allocate space for a UM header. ">setup_umhdr</a>(umhdr_out)</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">! Allocate space for lookup.</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="keyword">ALLOCATE</span>(umhdr_out % Lookup(umhdr_out % Len2Lookup))</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">! Now write out data.</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#ab946b14dae999144008cbe9c82d50a21">file_open</a> ( umhdr_out % UnitNum,                     &amp;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                 umhdr_out % FileNameEnv,                 &amp;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                 len_trim(umhdr_out % FileNameEnv),       &amp;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                 1, 0, errorstatus)</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="keywordflow">IF</span> ( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, &amp;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                <span class="stringliteral">&quot;Failed to open output file&quot;</span> )</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;  errorstatus = <a class="code" href="namespaceerr__mod.xhtml#af3378d99a6a222835d2678b8336251c8">statusfatal</a></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#a8d0fde8168348217fd7fa676e3855bb6">init_umhdr</a></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">! Subroutine: init_umhdr</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment">! Attempts to set the fieldsfile header to something sensible depending on the</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">! GRIB file.  We have to assume certain things about GRIB data from centres</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment">! such as ECMWF which use an A grid.  The UM uses C grid.  This is trying to</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">! recreate a sensible model which the data may have come from.</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#a3cb9d94899af43c2a7ff572b13504c54">setup_fixhd</a></div><div class="line"><a name="l00447"></a><span class="lineno"><a class="line" href="degribify_8f90.xhtml#a3cb9d94899af43c2a7ff572b13504c54">  447</a></span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="keywordtype">INTEGER</span>          :: wordaddress</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">POINTER</span> :: fixhd_out(:)</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment">! GRIB info</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: dataDate</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: dataTime</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: validityDate</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: validityTime</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: Ni</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: Nj</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: jDirectionIncrementInDegrees</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: iDirectionIncrementInDegrees</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="keywordtype">CHARACTER(LEN=32)</span>       :: gridType</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="keywordflow">IF</span>( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;  <span class="comment">! Previous error - do not proceed</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment">! Set a pointer to make it easier to use.</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;fixhd_out =&gt; umhdr_out % Fixhd</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="comment">! Now setup fix header with GRIB info.</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;dataDate&#39;</span>,datadate)</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;dataTime&#39;</span>,datatime)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;validityDate&#39;</span>,validitydate)</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;validityTime&#39;</span>,validitytime)</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="comment">! Data time</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#ae6cb6247f5d5de89b0fad9e7cdb9c717">fh_dtyear</a>)   = datadate/10000</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#a45c4a1be8773c71f1985cd36e4ee6a68">fh_dtmonth</a>)  = mod(int(datadate)/100,100)</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#ab7b3d2b98a99e939f82235614ea7e58b">fh_dtday</a>)    = mod(int(datadate),100)</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#a3b84a045a690da2bce028f727a6dcda7">fh_dthour</a>)   = mod(int(datatime)/100,100)</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#a0433e6addf7dcea9ef195f4768f5fd67">fh_dtminute</a>) = mod(int(datatime),100)</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#abce53caacf9595d9f0ead40cb49e5a88">fh_dtsecond</a>) = 0</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#a3e9979a933a1e74b39ae0752466b86a7">fh_dtdayno</a>)  = 0</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">! Validity time</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#abf7e73dc6846ebdec7e657c64f0dbb1a">fh_vtyear</a>)   = validitydate/10000</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#a9376778fea50064bc044464cb3d34af4">fh_vtmonth</a>)  = mod(int(validitydate)/100,100)</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#aaf40228e7bbdbd1d159e7374649ae23e">fh_vtday</a>)    = mod(int(validitydate),100)</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#a3620052a34ce34e43a6f35570bf464df">fh_vthour</a>)   = mod(int(validitytime)/100,100)</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#ab50e9e06b71d907f796d7312dfae2cb0">fh_vtminute</a>) = mod(int(validitytime),100)</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#a56ed9e141a0e017e0ffd8e7b6be68334">fh_vtsecond</a>) = 0</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;fixhd_out(<a class="code" href="namespacercf__headaddress__mod.xhtml#a710800d038ce6bb5e503a1ca47053d37">fh_vtdayno</a>)  = 0</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">! Set grid info.</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;gridType&#39;</span>, gridtype)</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;Ni&#39;</span>,ni)</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;Nj&#39;</span>,nj)</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;jDirectionIncrementInDegrees&#39;</span>, &amp;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;              jdirectionincrementindegrees)</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;iDirectionIncrementInDegrees&#39;</span>, &amp;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;              idirectionincrementindegrees)</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment">! Centre specific values.</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="keywordflow">IF</span> ( trim(centre) == <span class="stringliteral">&#39;ecmf&#39;</span> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;  <span class="comment">! Set hybrid for ECMWF data on model levels.</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;  <span class="keywordflow">IF</span> (typeml) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a9dbaae01a789fc2dd08a338e35bdabe7">fh_vertcoord</a> ) = <a class="code" href="namespacercf__headaddress__mod.xhtml#a31f33664c7660edf6639633352512b09">fh_vertcoord_hybrid</a></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;  fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a6388c19d76913de952b36571eec60513">fh_gridstagger</a> ) = <a class="code" href="namespacercf__headaddress__mod.xhtml#af12467e5da35d1a6e73404602611759b">fh_gridstagger_a</a></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="keywordflow">IF</span> (ni*idirectionincrementindegrees &gt; 359.999 .AND. &amp;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    nj*jdirectionincrementindegrees &gt; 179.999 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;  fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a51f8b4f1d51b1c0b75e151ded0b30fbe">fh_horizgrid</a> ) = <a class="code" href="namespacercf__headaddress__mod.xhtml#aeae0436928e26548629593789c806c6c">fh_horizgrid_global</a></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (ni*idirectionincrementindegrees &gt; 359.999 .OR. &amp;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;         nj*jdirectionincrementindegrees &gt; 179.999 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;  fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a51f8b4f1d51b1c0b75e151ded0b30fbe">fh_horizgrid</a> ) = <a class="code" href="namespacercf__headaddress__mod.xhtml#a02924d2795b82651d1136352588e5b70">fh_horizgrid_lamwrap</a></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;  fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a51f8b4f1d51b1c0b75e151ded0b30fbe">fh_horizgrid</a> ) = <a class="code" href="namespacercf__headaddress__mod.xhtml#a011806856a8afe195e1793b085ebc0c5">fh_horizgrid_lamnowrap</a></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment">! If rotated we need to add 100 to the HorizGrid value</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="keywordflow">IF</span> ( trim(gridtype) == <span class="stringliteral">&#39;rotated_ll&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;  fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a51f8b4f1d51b1c0b75e151ded0b30fbe">fh_horizgrid</a> ) = fixhd_out( <a class="code" href="namespacercf__headaddress__mod.xhtml#a51f8b4f1d51b1c0b75e151ded0b30fbe">fh_horizgrid</a> ) + 100</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="comment">! Now write it out.</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;wordaddress = 0   <span class="comment">! Start of file</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a> ( umhdr_out % UnitNum, wordaddress, errorstatus )</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="keywordflow">IF</span> ( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, <span class="stringliteral">&quot;Failure in SETPOS&quot;</span> )</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;  errorstatus = <a class="code" href="namespaceerr__mod.xhtml#af3378d99a6a222835d2678b8336251c8">statusfatal</a></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="keyword">CALL </span>buffout( umhdr_out % UnitNum, umhdr_out % Fixhd,               &amp;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;              <a class="code" href="namespaceio__mod.xhtml#a3d023e0499687b513b267a53e94fafb1" title="Global Constants: ">lenfixhd</a>, len_io, err_io )</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#a3cb9d94899af43c2a7ff572b13504c54">setup_fixhd</a></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="comment">! Subroutine: setup_inthd</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="comment">! The integer header is mainly where grid information is stored.  For example</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment">! the number of levels and rows.</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#a41809e63166fd30c93e21544b82c2f4d">setup_inthd</a></div><div class="line"><a name="l00549"></a><span class="lineno"><a class="line" href="degribify_8f90.xhtml#a41809e63166fd30c93e21544b82c2f4d">  549</a></span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="keywordtype">INTEGER</span> :: wordaddress</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: Ni</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: Nj</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">POINTER</span> :: Intc(:)</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="keywordflow">IF</span>( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;  <span class="comment">! Previous error - do not proceed</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;intc =&gt; umhdr_out % IntC(:)</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="comment">! Setup grid info</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;Ni&#39;</span>,ni)</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;Nj&#39;</span>,nj)</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;intc(:)          = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a51c39c573d62fd172876f24575ee5c3e">ic_xlen</a>)    = ni</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aa5e58ea15b775f7f0a0631d6c48aa6b1">ic_ylen</a>)    = nj</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="keywordflow">IF</span> (typepl) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;  intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aabb81b1dcfd6c9838f92729aa8501233">ic_plevels</a>) = max_levels</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="comment">! If we have two different types of levels then assume we are rho/theta</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;  <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(pv_2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aabb81b1dcfd6c9838f92729aa8501233">ic_plevels</a>) = (max(nb_pv_1,nb_pv_2)/2)-1</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="comment">! For other types of model levels we have ECMWF ak and bk so half the number</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment">! (and we want half levels).</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    <span class="keywordflow">IF</span> (trim(centre) == <span class="stringliteral">&#39;ecmf&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;      intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aabb81b1dcfd6c9838f92729aa8501233">ic_plevels</a>) = (nb_pv_1/2) - 1</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;      intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aabb81b1dcfd6c9838f92729aa8501233">ic_plevels</a>) = nb_pv_1</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a507426e44e3c8636b8c249887bf1dab3">ic_wetlevels</a>)       = intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aabb81b1dcfd6c9838f92729aa8501233">ic_plevels</a>)</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="comment">! Need to set these from GRIB (but how?)</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="comment">! Could use vertical type depthBelowLand search in find_level_info</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="keywordflow">IF</span> (max_soil_levels /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;  intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a19764c321c7748391dc3d18da62e255a">ic_soiltlevels</a>)     = max_soil_levels</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;  intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#afca04332d6482a8035db5cc4734d51d8">ic_soilmoistlevs</a>)   = max_soil_levels</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;  intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a19764c321c7748391dc3d18da62e255a">ic_soiltlevels</a>)     = 4</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;  intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#afca04332d6482a8035db5cc4734d51d8">ic_soilmoistlevs</a>)   = 4</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a476ce5ee4667132309537ae46fb6da92">ic_blevels</a>)         = intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aabb81b1dcfd6c9838f92729aa8501233">ic_plevels</a>)</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a30a4b607ed86900f896d17c7425f2d57">ic_mdi</a>)             = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;<span class="keywordflow">IF</span> (typepl) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;  intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#adbd2ce695233f85c7351d96a66f849bc">ic_heightmethod</a>) = 10 <span class="comment">! pressure</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;  <span class="keywordflow">IF</span> (trim(centre) == <span class="stringliteral">&#39;ecmf&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#adbd2ce695233f85c7351d96a66f849bc">ic_heightmethod</a>) = 11 <span class="comment">! hybrid</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <span class="comment">! Probably us</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#adbd2ce695233f85c7351d96a66f849bc">ic_heightmethod</a>) = 2  <span class="comment">! Original method</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(pv_2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="comment">! We are probably dealing with eta/theta values (we dont know which holds which</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="comment">! at this point.</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;  <span class="keywordflow">IF</span> (pv_1(1) &lt; pv_2(1)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    <span class="comment">! pv_2 is rho</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a1d9636d816733d4a2bf5c0d81a153ac2">ic_1stconstrho</a>) = minval(minloc(pv_2(nb_pv_2/2+1:),pv_2/=<a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a>))</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <span class="comment">! pv_1 is rho</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a1d9636d816733d4a2bf5c0d81a153ac2">ic_1stconstrho</a>) = minval(minloc(pv_1(nb_pv_1/2+1:),pv_1/=<a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a>))</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I7)&#39;</span>) <span class="stringliteral">&quot;INFO: Setting first constant rho level to &quot;</span>, &amp;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;                    intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a1d9636d816733d4a2bf5c0d81a153ac2">ic_1stconstrho</a>)</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;degribify&#39;</span>)</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="comment">! Now write it out.</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;wordaddress = umhdr_out % Fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#aa93f27e42eba77e14d9fe1b2d76e0abd">fh_intcstart</a>) - 1  <span class="comment">! Start of file</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a> ( umhdr_out % UnitNum, wordaddress, errorstatus )</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="keywordflow">IF</span> ( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, <span class="stringliteral">&quot;Failure in SETPOS&quot;</span> )</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;  errorstatus = <a class="code" href="namespaceerr__mod.xhtml#af3378d99a6a222835d2678b8336251c8">statusfatal</a></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="keyword">CALL </span>buffout( umhdr_out % UnitNum, umhdr_out % IntC,               &amp;</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;              umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a18af3c9b908f2d81015e610da107bc1f">fh_intcsize</a>), len_io, err_io )</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#a41809e63166fd30c93e21544b82c2f4d">setup_inthd</a></div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="comment">! Subroutine: setup_realhd</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;<span class="comment">! This is where grid coordinates are stored.</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#ac164cf744e932c4ee045dbca590437f7">setup_realhd</a></div><div class="line"><a name="l00647"></a><span class="lineno"><a class="line" href="degribify_8f90.xhtml#ac164cf744e932c4ee045dbca590437f7">  647</a></span>&#160;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: iScansNegatively</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: jScansPositively</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: latOfLastGridPointInDegrees</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: longOfLastGridPointInDegrees</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: latOfFirstGridPointInDegrees</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: longOfFirstGridPointInDegrees</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: jDirectionIncrementInDegrees</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: iDirectionIncrementInDegrees</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: latOfSouthernPoleInDegreesREAL(kind=kindofdouble) :: longofsouthernpoleindegrees</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="keywordtype">CHARACTER(LEN=32)</span>       :: gridtype</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="keywordtype">INTEGER</span> :: wordaddress</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">POINTER</span> :: Realc(:)</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="keywordflow">IF</span>( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;  <span class="comment">! Previous error - do not proceed</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;realc =&gt; umhdr_out % RealC(:)</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;realc = <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;gridType&#39;</span>, gridtype)</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;iScansNegatively&#39;</span>,iscansnegatively)</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;jScansPositively&#39;</span>,jscanspositively)</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;latitudeOfFirstGridPointInDegrees&#39;</span> , &amp;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                     latoffirstgridpointindegrees)</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;longitudeOfFirstGridPointInDegrees&#39;</span>, &amp;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                     longoffirstgridpointindegrees)</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;latitudeOfLastGridPointInDegrees&#39;</span> , &amp;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                     latoflastgridpointindegrees)</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;longitudeOfLastGridPointInDegrees&#39;</span>, &amp;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                     longoflastgridpointindegrees)</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;jDirectionIncrementInDegrees&#39;</span>, &amp;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;                     jdirectionincrementindegrees)</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;iDirectionIncrementInDegrees&#39;</span>, &amp;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                     idirectionincrementindegrees)</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="keywordflow">IF</span> ( trim(gridtype) == <span class="stringliteral">&#39;rotated_ll&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;  <span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;latitudeOfSouthernPoleInDegrees&#39;</span>   , &amp;                       latofsouthernpoleindegrees )</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;  <span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;longitudeOfSouthernPoleInDegrees&#39;</span>  , &amp;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;                       longofsouthernpoleindegrees)</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;<span class="keywordflow">ELSE</span>  latofsouthernpoleindegrees  = -90.0</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;  longofsouthernpoleindegrees = 180.0</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="keywordflow">IF</span> (jscanspositively == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;  realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a01b0e58626227484674fb47f8348a373">rc_firstlat</a>)    = latoffirstgridpointindegrees</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;  realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a01b0e58626227484674fb47f8348a373">rc_firstlat</a>)    = latoflastgridpointindegrees</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;<span class="comment">! If we are scanning negatively then first Longitude is on wrong end of row.</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="comment">! Make sure it is in the range 0-&gt;360.</span></div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;<span class="keywordflow">IF</span> (iscansnegatively == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;  realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a026ceeb0283a4a3522f6c235b0b59210">rc_firstlong</a>)   = modulo(longoffirstgridpointindegrees,360.)</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;  realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a026ceeb0283a4a3522f6c235b0b59210">rc_firstlong</a>)   = modulo(longoflastgridpointindegrees,360.)</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a6f62b781782b7df5a99593da0de9a5ed">rc_latspacing</a>)  = jdirectionincrementindegrees</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a3defdaa78e10cba8d75ac5c4dc9ac454">rc_longspacing</a>) = idirectionincrementindegrees</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="comment">! Need to convert southern pole to north pole.</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#ab3bcf79897b2f38575d7b4959cb592b9">rc_polelat</a>)     = -latofsouthernpoleindegrees</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#ad2c45b2978bdca431ec48b99c2a527eb">rc_polelong</a>)    = modulo(longofsouthernpoleindegrees-180.0,360.)</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;<span class="comment">! Use the pv array</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;<span class="keywordflow">IF</span> (typeml) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;  <span class="comment">! Remembering we increased pv_1 by 1</span></div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;  realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aab379171de5cc84c67883cfde9282631">rc_modeltop</a>) = maxval(pv_1(:))</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;  <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(pv_2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aab379171de5cc84c67883cfde9282631">rc_modeltop</a>) = max(realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aab379171de5cc84c67883cfde9282631">rc_modeltop</a>),maxval(pv_2(:)))</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="comment">! Now write it out.</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;wordaddress = umhdr_out % Fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a6abff550638479bfbf1fb8c6b42a6742">fh_realcstart</a>) - 1 <span class="comment">! Start of file</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a> ( umhdr_out % UnitNum, wordaddress, errorstatus )</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;<span class="keywordflow">IF</span> ( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, <span class="stringliteral">&quot;Failure in SETPOS&quot;</span> )</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;  errorstatus = <a class="code" href="namespaceerr__mod.xhtml#af3378d99a6a222835d2678b8336251c8">statusfatal</a></div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;<span class="keyword">CALL </span>buffout( umhdr_out % UnitNum, umhdr_out % RealC,               &amp;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;              umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a47742d900f4b97e5ad8fcbbc7cad1b71">fh_realcsize</a>), len_io, err_io )</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#ac164cf744e932c4ee045dbca590437f7">setup_realhd</a></div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;<span class="comment">! Subroutine: setup_levdephd</span></div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;<span class="comment">! This is where the PV array data is stored which contains the ak and bk (or</span></div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;<span class="comment">! eta/theta) coordinates.  We also store the original ECMWF level number here.</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#ab831e6d70c91df751af7ae1946cb6c04">setup_levdephd</a></div><div class="line"><a name="l00747"></a><span class="lineno"><a class="line" href="degribify_8f90.xhtml#ab831e6d70c91df751af7ae1946cb6c04">  747</a></span>&#160;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;<span class="keywordtype">INTEGER</span> :: wordaddress</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;<span class="keywordtype">INTEGER</span> :: levdepcsize</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">POINTER</span> :: Levdepc(:)</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">POINTER</span> :: pv_theta(:)</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">POINTER</span> :: pv_rho(:)</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">POINTER</span> :: valid_levels(:)</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">POINTER</span> :: valid_rho_levels(:)</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">POINTER</span> :: valid_theta_levels(:)</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;<span class="keywordtype">INTEGER</span>       :: nb_pv_theta</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;<span class="keywordtype">INTEGER</span>       :: nb_pv_rho</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="keywordtype">INTEGER</span>       :: max_theta_levels</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;<span class="keywordtype">INTEGER</span>       :: max_rho_levels</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;<span class="keywordtype">INTEGER</span> :: zerolev</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;<span class="keywordtype">INTEGER</span> :: ipos</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;<span class="keywordtype">INTEGER</span> :: ii</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;<span class="keywordflow">IF</span>( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;  <span class="comment">! Previous error - do not proceed</span></div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;<span class="keyword">NULLIFY</span>(valid_levels)</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;<span class="keyword">NULLIFY</span>(valid_rho_levels)</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;<span class="keyword">NULLIFY</span>(valid_theta_levels)</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;levdepc =&gt; umhdr_out % levdepC(:)</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;levdepc = <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;<span class="keywordflow">IF</span> (typepl) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;  valid_levels =&gt; valid_levels_1</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;  <span class="comment">! Is this really true - could we store the reference pressure levels instead?</span></div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;  ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#a4ee38e9e1599e241becbdf2db9252023">ldc_pressure</a>-1)+1</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;  levdepc(ipos:ipos+max_levels-1) = valid_levels(1:max_levels)</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;<span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (typeml) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;  <span class="comment">! Default to valid_levels_1</span></div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;  valid_levels =&gt; valid_levels_1</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;  <span class="comment">! Check for different level types.</span></div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;  <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(pv_2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;    <span class="comment">! pv will have all levels including zeroth level.</span></div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;    <span class="keywordflow">IF</span> (pv_1(1) &lt; pv_2(1)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;      <span class="comment">! pv_1 contains theta levels.</span></div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;      valid_theta_levels =&gt; valid_levels_1</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;      pv_theta =&gt; pv_1</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;      nb_pv_theta = nb_pv_1</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;      <span class="comment">! Add 1 since we have manually added the 1st theta level which isnt</span></div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;      <span class="comment">! usually outputted (can we check this?)</span></div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;      max_theta_levels = nb_pv_theta/2</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;      valid_rho_levels =&gt; valid_levels_2</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;      pv_rho =&gt; pv_2</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;      nb_pv_rho = nb_pv_2</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;      max_rho_levels = nb_pv_rho/2</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;      <span class="comment">! pv_2 contains theta levels</span></div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;      valid_theta_levels =&gt; valid_levels_2</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;      pv_theta =&gt; pv_2</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;      nb_pv_theta = nb_pv_2</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;      <span class="comment">! Add 1 since we have manually added the 1st theta level which isnt</span></div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;      <span class="comment">! usually outputted (can we check this?)</span></div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;      max_theta_levels = nb_pv_theta/2</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;      valid_rho_levels =&gt; valid_levels_1</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;      pv_rho =&gt; pv_1</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;      nb_pv_rho = nb_pv_1</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;      max_rho_levels = nb_pv_rho/2</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;    ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#a156726f4aaf38de6d9b2d94e4f12dd14">ldc_etatheta</a>-1)+1</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;    levdepc(ipos:ipos+max_theta_levels-1) = &amp;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;                      pv_theta(1:nb_pv_theta/2)/umhdr_out % realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aab379171de5cc84c67883cfde9282631">rc_modeltop</a>)</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;<span class="comment">! Rho has one less level at the top so we dont want to use it</span></div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#aad34ec719c1cf51af1c08e9e42544cc3">ldc_etarho</a>-1)+1</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;    levdepc(ipos:ipos+max_rho_levels-2) = &amp;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;                         pv_rho(1:nb_pv_rho/2)/umhdr_out % realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aab379171de5cc84c67883cfde9282631">rc_modeltop</a>)</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;         ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#ab5e61efe5331813b29ab89ab101fee71">ldc_zseatheta</a>-1)+1</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    levdepc(ipos:ipos+max_theta_levels-1) = &amp;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;                         pv_theta(1:nb_pv_theta/2)</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;<span class="comment">!                         pv_theta(NINT(valid_theta_levels(1:max_theta_levels)))</span></div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;       ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#a2c9ff83319c1e76eb4ba97144d81b4a9">ldc_cktheta</a>-1)+1</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    levdepc(ipos:ipos+max_theta_levels-1) = &amp;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;        pv_theta((nb_pv_theta/2)+1:nb_pv_theta)</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;<span class="comment">!                                 NINT(valid_theta_levels(1:max_theta_levels)))</span></div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;       ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#ab6954a375abb485370d889410d8c97c5">ldc_zsearho</a>-1)+1</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;    levdepc(ipos:ipos+max_rho_levels-1) = &amp;</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;                            pv_rho(1:nb_pv_rho/2)</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#a13060d3fb78f7bc99597837dcf5cb33f">ldc_ckrho</a>-1)+1</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    levdepc(ipos:ipos+max_rho_levels-1) = pv_rho((nb_pv_rho/2)+1:nb_pv_rho)</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    <span class="keywordflow">IF</span> (trim(centre) == <span class="stringliteral">&#39;ecmf&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;      <span class="keywordflow">DO</span> ii = 0, nb_pv_1/2-1</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;        ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#a6395e44879a26d64ace0845b64df2f01">ldc_ak_hybrid</a>-1)+1</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;        levdepc(ipos+ii) = pv_1(nb_pv_1/2-ii)</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;        ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#aaa8dbab4c541db982da66f46d81dfdef">ldc_bk_hybrid</a>-1)+1</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;        levdepc(ipos+ii) = pv_1((nb_pv_1)-ii)</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;        <span class="comment">! Since we have reversed we should also print what levels we have used.</span></div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;        <span class="comment">! Strictly half levels run from 0 to NLEV and full levels run from 1 to</span></div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;        <span class="comment">! NLEV.  We store the full levels in the levdepc.</span></div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;        <span class="comment">! Should really only need to store levels which we have in GRIB rather</span></div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;        <span class="comment">! than assuming we have all the levels.</span></div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;        ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#afc1c17d2ec8dbae73212a797e35d1932">ldc_mlindex</a>-1)+1</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;        levdepc(ipos+ii) = ii+1</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;      ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#a6395e44879a26d64ace0845b64df2f01">ldc_ak_hybrid</a>-1)+1</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;      levdepc(ipos:ipos+nb_pv_1/2-1) = pv_1(1:nb_pv_1/2)</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;      ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#aaa8dbab4c541db982da66f46d81dfdef">ldc_bk_hybrid</a>-1)+1</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;      levdepc(ipos:ipos+nb_pv_1/2-1) = pv_1((nb_pv_1/2)+1:nb_pv_1)</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;      ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#afc1c17d2ec8dbae73212a797e35d1932">ldc_mlindex</a>-1)+1</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;      levdepc(ipos:ipos+nb_pv_1/2-1) = (/ (i, i=nb_pv_1/2,1,-1) /)</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;<span class="keywordflow">                                      END IF</span></div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;  <span class="comment">! For now lets just assume pv contains all the model levels we need.</span></div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;<span class="comment">! Now do soil levels (if any) - might need to treat this specially for EC.</span></div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;<span class="keywordflow">IF</span> (max_soil_levels &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;  ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#ae22a0da454c599008aeb657298562882">soildepths</a>-1)+1</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;  levdepc(ipos:ipos+max_soil_levels) = &amp;</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                           valid_soil_levels(1:max_soil_levels)</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;  <span class="comment">! Standard for UM</span></div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;  ipos = umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)*(<a class="code" href="namespacercf__headaddress__mod.xhtml#ae22a0da454c599008aeb657298562882">soildepths</a>-1)+1</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;  levdepc(ipos:ipos+3) = (/ 0.1, 0.25, 0.65, 2.0 /)</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;<span class="comment">! Now write it out.</span></div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;wordaddress = umhdr_out % Fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a7be7f67bcfd2edf1a871e442bbd775c1">fh_levdepcstart</a>) - 1 <span class="comment">! Start of file</span></div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a> ( umhdr_out % UnitNum, wordaddress, errorstatus )</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;<span class="keywordflow">IF</span> ( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, <span class="stringliteral">&quot;Failure in SETPOS&quot;</span> )</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;  errorstatus = <a class="code" href="namespaceerr__mod.xhtml#af3378d99a6a222835d2678b8336251c8">statusfatal</a></div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;levdepcsize =  umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a559b541bf35737e7e2af701483180262">fh_levdepcsize1</a>)* &amp;</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;               umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#abbafe0dce2dae289a1838ef996f05d91">fh_levdepcsize2</a>)</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;<span class="keyword">CALL </span>buffout( umhdr_out % UnitNum, umhdr_out % LevdepC,               &amp;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;              levdepcsize, len_io, err_io )</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#ab831e6d70c91df751af7ae1946cb6c04">setup_levdephd</a></div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="comment">! Subroutine: setup_lookup</span></div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;<span class="comment">! This is where the lookup for each field is created.  This is mainly a reverse</span></div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;<span class="comment">! of the gribify routine.  This could have reused pp_head routine - however</span></div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;<span class="comment">! that depends on STASHmaster values, wanted to avoid using that but we seem to</span></div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;<span class="comment">! depend on STASHmaster settings for much of the UM.</span></div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#ae89082daf6090f8c4a410526c40997b0">setup_lookup</a></div><div class="line"><a name="l00904"></a><span class="lineno"><a class="line" href="degribify_8f90.xhtml#ae89082daf6090f8c4a410526c40997b0">  904</a></span>&#160;</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacefldcodes__mod.xhtml" title="Module containing field header codes for Fieldcalc. ">fldcodes_mod</a></div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecppxref__mod.xhtml" title="Code Owner: See Unified Model Code Owners HTML page. ">cppxref_mod</a><span class="keywordtype">, ONLY</span>:                                        &amp;</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#ac6ab1a93674c0f6fefd819f69996928f">ppx_lbvc_height</a>,<a class="code" href="namespacecppxref__mod.xhtml#a5ed1127ad24ac11029bacda70eb1c6f0">ppx_lbvc_pressure</a>,<a class="code" href="namespacecppxref__mod.xhtml#a847c3a687ab69ae7330dff4c46b7dc9a">ppx_lbvc_surface</a>,       &amp;</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;    <a class="code" href="namespacecppxref__mod.xhtml#ac07b3a766997c2e00ec2a3a51b746e9b">ppx_lbvc_msl</a>,<a class="code" href="namespacecppxref__mod.xhtml#ac484b0e7744aa1c9de7a03ebc2f60660">ppx_lbvc_hyb_pres</a>,<a class="code" href="namespacecppxref__mod.xhtml#a25971a5c3569cf1dc039354b87e8dcea">ppx_lbvc_hybrid</a></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;<span class="keywordtype">INTEGER</span> :: superstash</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;<span class="keywordtype">INTEGER</span> :: stcode</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;<span class="keywordtype">CHARACTER(LEN=32)</span> :: typeOfLevel</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: level</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: validityDate</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: validityTime</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: dataDate</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: dataTime</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: jScansPositively</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: iScansNegatively</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: latOfFirstGridPointInDegrees</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: longOfFirstGridPointInDegrees</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: latOfLastGridPointInDegrees</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: longOfLastGridPointInDegrees</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: jDirectionIncrementInDegrees</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span> :: iDirectionIncrementInDegrees</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;<span class="keywordtype">CHARACTER(LEN=32)</span>       :: gridType</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: PvPresent</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: nb_pv</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span>, <span class="keywordtype">ALLOCATABLE</span> :: pv(:)</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;<span class="keywordtype">INTEGER</span> :: level_adj</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;<span class="keywordflow">IF</span>( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;  <span class="comment">! Previous error - do not proceed</span></div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;superstash = <a class="code" href="namespaceff__to__grib2__mod.xhtml#aa10de53fda78ff8951d01f484d19814b">find_paramid_to_stcode</a>(paramid(j))</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;<span class="keywordflow">IF</span> (superstash == -1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;  errorstatus = <a class="code" href="namespaceerr__mod.xhtml#abef63b1aad05f1f96cfa12dbf6091abc">statuswarning</a></div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;  <span class="keyword">WRITE</span>(errmessage,<span class="stringliteral">&#39;(A,I8,A)&#39;</span>) <span class="stringliteral">&#39;Cannot convert paramID for &#39;</span>, &amp;</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;                                paramid(j), <span class="stringliteral">&#39; - skipping&#39;</span></div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, errmessage)</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;  errorstatus = <a class="code" href="namespaceerr__mod.xhtml#abef63b1aad05f1f96cfa12dbf6091abc">statuswarning</a></div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;  <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;  stcode = mod(superstash,100000)</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;typeOfLevel&#39;</span>,typeoflevel)</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;level&#39;</span>, level)</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;<span class="comment">! Always use Pascals due to fractional values.</span></div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;<span class="keywordflow">IF</span> (index(typeoflevel,<span class="stringliteral">&#39;isobaricInhPa&#39;</span>) &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;  level = 100*level</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;  typeoflevel=<span class="stringliteral">&#39;isobaricInPa&#39;</span></div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;<span class="comment">! Get vertical information.</span></div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;<span class="keyword">call </span>grib_get(igrib,<span class="stringliteral">&#39;PVPresent&#39;</span>,pvpresent)</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;<span class="keywordflow">IF</span> (pvpresent == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;  <span class="keyword">call </span>grib_get_size(igrib,<span class="stringliteral">&#39;pv&#39;</span>,nb_pv)</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;  <span class="keyword">ALLOCATE</span>(pv(nb_pv))</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;  <span class="keyword">call </span>grib_get(igrib,<span class="stringliteral">&#39;pv&#39;</span>,pv)</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;validityDate&#39;</span>,validitydate)</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;validityTime&#39;</span>,validitytime)</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;dataDate&#39;</span>,datadate)</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;dataTime&#39;</span>,datatime)</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;jScansPositively&#39;</span>,jscanspositively)</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;iScansNegatively&#39;</span>,iscansnegatively)</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;latitudeOfFirstGridPointInDegrees&#39;</span> , &amp;</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;                     latoffirstgridpointindegrees)</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;longitudeOfFirstGridPointInDegrees&#39;</span>, &amp;</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;                     longoffirstgridpointindegrees)</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;latitudeOfLastGridPointInDegrees&#39;</span> , &amp;</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;                     latoflastgridpointindegrees)</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;longitudeOfLastGridPointInDegrees&#39;</span>, &amp;</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;                     longoflastgridpointindegrees)</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;jDirectionIncrementInDegrees&#39;</span>, &amp;</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;                     jdirectionincrementindegrees)</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;iDirectionIncrementInDegrees&#39;</span>, &amp;</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;                     idirectionincrementindegrees)</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;gridType&#39;</span>,gridtype)</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;<span class="comment">! Integer part</span></div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;tempfield % Hdr % Validyear  = validitydate/10000</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;tempfield % Hdr % ValidMonth = mod(int(validitydate)/100,100)</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;tempfield % Hdr % ValidDate  = mod(int(validitydate),100)</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;tempfield % Hdr % ValidHour  = mod(int(validitytime)/100,100)</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;tempfield % Hdr % ValidMin   = mod(int(validitytime),100)</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;tempfield % Hdr % ValidSec   = 0</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;tempfield % Hdr % Datayear   = datadate/10000</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;tempfield % Hdr % DataMonth  = mod(int(datadate)/100,100)</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;tempfield % Hdr % DataDate   = mod(int(datadate),100)</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;tempfield % Hdr % DataHour   = mod(int(datatime)/100,100)</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;tempfield % Hdr % DataMin    = mod(int(datatime),100)</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;tempfield % Hdr % DataSec    = 0</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;<span class="comment">! Set to valid time - data time (in pp documentation)</span></div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;tempfield % Hdr % LBTim = 11</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;<span class="comment">! Need to calculate?</span></div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;tempfield % Hdr % FCRange = step(i)</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;<span class="comment">! Set this to number of points - no packing yet.</span></div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;tempfield % Hdr % LBLRec = umhdr_out % intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a51c39c573d62fd172876f24575ee5c3e">ic_xlen</a>)*umhdr_out % intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aa5e58ea15b775f7f0a0631d6c48aa6b1">ic_ylen</a>)</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;tempfield % Hdr % LBCode = 1 <span class="comment">! Regular lat/long grid</span></div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;<span class="comment">! Add 100 if rotated.</span></div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;<span class="keywordflow">IF</span> ( trim(gridtype) == <span class="stringliteral">&#39;rotated_ll&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;  tempfield % Hdr % LBCode = tempfield % Hdr % LBCode + 100</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;tempfield % Hdr % LBHem  = mod(umhdr_out % fixhd(<a class="code" href="namespacercf__headaddress__mod.xhtml#a51f8b4f1d51b1c0b75e151ded0b30fbe">fh_horizgrid</a>),100)</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;tempfield % Hdr % NumRows = umhdr_out % intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#aa5e58ea15b775f7f0a0631d6c48aa6b1">ic_ylen</a>)</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;tempfield % Hdr % NumCols = umhdr_out % intc(<a class="code" href="namespacercf__headaddress__mod.xhtml#a51c39c573d62fd172876f24575ee5c3e">ic_xlen</a>)</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;tempfield % Hdr % LBExt   = 0 <span class="comment">! No extra data    Tempfield % Hdr % LBPack  = 0 ! No packing    Tempfield % Hdr % LBRel   = 2 ! Version in document</span></div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;tempfield % Hdr % PPCode  = <a class="code" href="namespaceff__to__grib2__mod.xhtml#aa364a90c9dd69fb94a52cd1352f535a0">find_stcode_to_ppcode</a>(superstash) <span class="comment">! From table.</span></div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;tempfield % Hdr % LBCFC   = 0 <span class="comment">! Do we know this?</span></div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;tempfield % Hdr % LBProc  = 0    <span class="comment">! We should use the GRIB processing number.</span></div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;tempfield % Hdr % LBVC    = <a class="code" href="namespaceff__to__grib2__mod.xhtml#a652c1bf5175492f7a4c53cd216e95250">find_stcode_to_lbvc</a>(superstash) <span class="comment">! First try this.</span></div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;<span class="comment">! See whether it is missing or not</span></div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;<span class="keywordflow">IF</span> (tempfield % Hdr % LBVC == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;  <span class="keywordflow">SELECT CASE</span>(trim(typeoflevel))</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;  <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;heightAboveGround&#39;</span>)</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;    tempfield % Hdr % LBVC    = <a class="code" href="namespacecppxref__mod.xhtml#ac6ab1a93674c0f6fefd819f69996928f">ppx_lbvc_height</a> <span class="comment">! Need to check this.</span></div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;  <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;isobaricInPa&#39;</span>)</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;    tempfield % Hdr % LBVC    = <a class="code" href="namespacecppxref__mod.xhtml#a5ed1127ad24ac11029bacda70eb1c6f0">ppx_lbvc_pressure</a> <span class="comment">! Need to check this.</span></div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;  <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;surface&#39;</span>)</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;    tempfield % Hdr % LBVC    = <a class="code" href="namespacecppxref__mod.xhtml#a847c3a687ab69ae7330dff4c46b7dc9a">ppx_lbvc_surface</a> <span class="comment">! Need to check this.</span></div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;  <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;meanSea&#39;</span>)</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;    tempfield % Hdr % LBVC    = <a class="code" href="namespacecppxref__mod.xhtml#ac07b3a766997c2e00ec2a3a51b746e9b">ppx_lbvc_msl</a> <span class="comment">! Need to check this.</span></div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;  <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;hybridHeight&#39;</span>,<span class="stringliteral">&#39;hybrid&#39;</span>,<span class="stringliteral">&#39;hybridPressure&#39;</span>)</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;    <span class="keywordflow">IF</span> (trim(centre) == <span class="stringliteral">&#39;ecmf&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;      tempfield % Hdr % LBVC    = <a class="code" href="namespacecppxref__mod.xhtml#ac484b0e7744aa1c9de7a03ebc2f60660">ppx_lbvc_hyb_pres</a> <span class="comment">! Need to check this.</span></div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;      tempfield % Hdr % LBVC    = <a class="code" href="namespacecppxref__mod.xhtml#a25971a5c3569cf1dc039354b87e8dcea">ppx_lbvc_hybrid</a>   <span class="comment">! Need to check this.</span></div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;<span class="keywordflow">  END SELECT</span></div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160; tempfield % Hdr % LBRVC   = 0 <span class="comment">! Need to check this.</span></div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;tempfield % Hdr % LBExp   = 0 <span class="comment">! None</span></div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;tempfield % Hdr % DataPos = -99 <span class="comment">! Gets set later.</span></div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;tempfield % Hdr % LBNRec  = -99 <span class="comment">! Gets set later.</span></div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;tempfield % Hdr % MO8Proj = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a> <span class="comment">! Dont really need this.</span></div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;tempfield % Hdr % MO8Type = -99 <span class="comment">! Dont really need this.</span></div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="keywordflow">SELECT CASE</span>(trim(typeoflevel))</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;<span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;heightAboveGround&#39;</span>)</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;  tempfield % Hdr % MO8Level = int(level)</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;<span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;isobaricInPa&#39;</span>)</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;  tempfield % Hdr % MO8Level = int(level/100)</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;<span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;surface&#39;</span>)</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;  tempfield % Hdr % MO8Level = <a class="code" href="namespacefldcodes__mod.xhtml#a7e3d3f875e197313890476d3db53fa69">lv_surface</a></div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;<span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;meanSea&#39;</span>)</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;  tempfield % Hdr % MO8Level = <a class="code" href="namespacefldcodes__mod.xhtml#abe398e87ea80d0c3ed041eb104f60d84">lv_special</a></div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;<span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;hybridHeight&#39;</span>,<span class="stringliteral">&#39;hybrid&#39;</span>,<span class="stringliteral">&#39;hybridPressure&#39;</span>)</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;  tempfield % Hdr % MO8Level = int(level)</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;<span class="keywordflow">END SELECT</span></div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;                                  <span class="comment">! required.</span></div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;tempfield % Hdr % LBRsvd(:) = 0 <span class="comment">! Not used  Tempfield % Hdr % LBSrce    = 1111*10000 + &amp;</span></div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;                              umhdr_out % Fixhd( <a class="code" href="namespacercf__headaddress__mod.xhtml#ac31b0ed52c3aa9c41f43a1f5323a4e65">fh_modelversion</a> ) <span class="comment">! Ident</span></div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;tempfield % Hdr % LBUser1   = 1   <span class="comment">! Always real (except a few fields).</span></div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;tempfield % Hdr % LBUser2   = -99  <span class="comment">! Start address in data (is it used?)</span></div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;tempfield % Hdr % LBUser3   = 0 <span class="comment">! Not used.  Tempfield % Hdr % STCode    = stcode ! Should be what was found in table.</span></div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;<span class="comment">! Set the following to zero since if there is no pseudo-dimension it should be</span></div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;<span class="comment">! 0.</span></div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;tempfield % Hdr % LBUser5   = 0 <span class="comment">! Pseudo dimension - shouldnt be needed.</span></div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;tempfield % Hdr % LBUser6   = 0 <span class="comment">! Free space.</span></div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;tempfield % Hdr % LBUser7   = 1 <span class="comment">! Atmosphere model but could depend on GRIB  ! Real part</span></div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;tempfield % Hdr %BULev     = 0. <span class="comment">! Upper layer boundary constant 1 Tempfield % Hdr %BHULev    = 0. ! Upper layer boundary constant 2  Tempfield % Hdr %BRsvd(2)  = 0. ! None  Tempfield % Hdr %BDatum    = 0. ! Datum value  Tempfield % Hdr %BAcc      = 0.  ! Packing accuracy</span></div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;<span class="comment">! The following is defined in pp_head and uses STASHmaster entries.  We have to</span></div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;<span class="comment">! fill in without STASHmaster for now.</span></div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;<span class="keywordflow">SELECT CASE</span>(tempfield % Hdr % LBVC)</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;<span class="keywordflow">CASE</span>(<a class="code" href="namespacecppxref__mod.xhtml#ac6ab1a93674c0f6fefd819f69996928f">ppx_lbvc_height</a>)</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;  tempfield % Hdr %RLevel = level <span class="comment">! Level value 1  Tempfield % Hdr %BHLev  = 0.    ! Level value 2  CASE( ppx_lbvc_pressure)</span></div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;  tempfield % Hdr %RLevel = level/100. <span class="comment">! Level value 1</span></div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;  tempfield % Hdr %BHLev  = 0.         <span class="comment">! Level value 2  CASE(ppx_lbvc_hyb_pres, ppx_lbvc_hybrid)</span></div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;  <span class="keywordflow">IF</span> (pvpresent == 1 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;    tempfield % Hdr %RLevel = pv(level)             <span class="comment">! Level value 1    Tempfield % Hdr %BHLev  = pv((nb_pv/2)+level)   ! Level value 2</span></div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;    <span class="comment">! Missing data.</span></div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;    tempfield % Hdr %RLevel = 0. <span class="comment">! Level value 1</span></div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;    tempfield % Hdr %BHLev  = 0. <span class="comment">! Level value 2</span></div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;<span class="keywordflow">CASE DEFAULT</span></div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;  <span class="comment">! The following condition is in pp_head</span></div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;  <span class="keywordflow">IF</span> (tempfield % Hdr % LBVC &gt;= 126 .AND. &amp;</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;      tempfield % Hdr % LBVC &lt;= 139) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;    tempfield % Hdr %RLevel = 0.   <span class="comment">! Level value 1</span></div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;    tempfield % Hdr %BHLev  = 0.   <span class="comment">! Level value 2</span></div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;    tempfield % Hdr %RLevel = -1.</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;    tempfield % Hdr %BHLev  = -1.   <span class="comment">! Level value 2</span></div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;<span class="keywordflow">END SELECT</span></div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;tempfield % Hdr %RefLevel  = 0.   <span class="comment">! Lower layer boundary constant 1</span></div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;tempfield % Hdr %BHRLev    = 0.   <span class="comment">! Lower layer boundary constant 2</span></div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;tempfield % Hdr %PseudoLat = umhdr_out % realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#ab3bcf79897b2f38575d7b4959cb592b9">rc_polelat</a>)   <span class="comment">! Pole lat</span></div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;tempfield % Hdr %PseudoLon = umhdr_out % realc(<a class="code" href="namespacercf__headaddress__mod.xhtml#ad2c45b2978bdca431ec48b99c2a527eb">rc_polelong</a>)  <span class="comment">! Pole longTempfield % Hdr %BGOR      = 0 ! Grid orientation</span></div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;<span class="comment">! These are needed to calculate point 0.</span></div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;tempfield % Hdr %LatInt    = jdirectionincrementindegrees</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;tempfield % Hdr %LonInt    = idirectionincrementindegrees</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;<span class="keywordflow">IF</span> (jscanspositively == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;  tempfield % Hdr %ZerothLat =      &amp;</div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;    latoffirstgridpointindegrees -  &amp;</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;    tempfield % Hdr %LatInt</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;  tempfield % Hdr %ZerothLat =      &amp;</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;    latoflastgridpointindegrees -   &amp;</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;    tempfield % Hdr %LatInt</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;<span class="comment">! We use MODULO here to make sure the first point is in range 0-&gt;360.  Point 0</span></div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;<span class="comment">! can be less than 0.</span></div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;<span class="keywordflow">IF</span> (iscansnegatively == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;  tempfield % Hdr %ZerothLon =                        &amp;</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;    modulo(longoffirstgridpointindegrees,360.) - &amp;</div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;    tempfield % Hdr %LonInt</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;  tempfield % Hdr %ZerothLon =                       &amp;</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;    modulo(longoflastgridpointindegrees,360.) - &amp;</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;    tempfield % Hdr %LonInt</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;tempfield % Hdr %BMDI      = <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;tempfield % Hdr %BMKS      = 1.0  </div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;<span class="comment">! Some default special handling.</span></div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;<span class="keywordflow">SELECT CASE</span>(tempfield % Hdr % STCode)</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;<span class="keywordflow">CASE</span>(<a class="code" href="namespacefldcodes__mod.xhtml#a8c0aa4a288cba8905d731f46fb0fac66">st_lsm</a>)</div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;  <span class="comment">! Set Logical - this should be read from STASHmaster which can be added at a</span></div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;  <span class="comment">! later date.</span></div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;  tempfield % Hdr % LBUser1 = 3</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;<span class="keywordflow">END SELECT</span></div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#ae89082daf6090f8c4a410526c40997b0">setup_lookup</a></div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;<span class="comment">! Subroutine: setup_data</span></div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;<span class="comment">! This is where we read the data and assume full field for now.</span></div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#a1c124c0d306245f2a430498b5a9e28f8">setup_data</a></div><div class="line"><a name="l01155"></a><span class="lineno"><a class="line" href="degribify_8f90.xhtml#a1c124c0d306245f2a430498b5a9e28f8"> 1155</a></span>&#160;</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: iScansNegatively</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: jScansPositively</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: numberOfValues</div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: bitmapPresent</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;<span class="keywordtype">REAL(KIND=KindOfDouble)</span>, <span class="keywordtype">ALLOCATABLE</span> :: values(:)</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;<span class="keywordtype">INTEGER</span> :: ii,jj</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;<span class="keywordtype">INTEGER</span> :: cols</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;<span class="keywordtype">INTEGER</span> :: row_start, col_start</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;<span class="keywordtype">INTEGER</span> :: row_scan, col_scan</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;<span class="keywordflow">IF</span>( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;  <span class="comment">! Previous error - do not proceed</span></div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;<span class="comment">! Need to find out whether to reverse field.</span></div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;iScansNegatively&#39;</span>,iscansnegatively)</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;jScansPositively&#39;</span>,jscanspositively)</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;<span class="comment">! We need to set the missingValue to be RMDI to match lookup (hopefully not</span></div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;<span class="comment">! conflicting with valid values).</span></div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;<span class="comment">! Find out whether we have a missingvalue.</span></div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&quot;bitmapPresent&quot;</span>,bitmappresent)</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;<span class="keywordflow">IF</span> (bitmappresent == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;  <span class="keyword">CALL </span>grib_set(igrib,<span class="stringliteral">&#39;missingValue&#39;</span>,tempfield % Hdr %BMDI)</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;<span class="keyword">CALL </span>grib_get_size(igrib,<span class="stringliteral">&#39;values&#39;</span>,numberofvalues)</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;<span class="keywordflow">IF</span> (numberofvalues /= tempfield % Hdr % NumRows * &amp;</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;                      tempfield % Hdr % NumCols) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;  <span class="keyword">WRITE</span>(errmessage,<span class="stringliteral">&#39;(A,I6)&#39;</span>) <span class="stringliteral">&#39;Data size mismatch with grid for STASH:&#39;</span>, &amp;</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;                             tempfield % Hdr % STCode</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, errmessage)</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;  errorstatus = <a class="code" href="namespaceerr__mod.xhtml#abef63b1aad05f1f96cfa12dbf6091abc">statuswarning</a></div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;  <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;<span class="keyword">ALLOCATE</span>(values(numberofvalues))</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;<span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;values&#39;</span>,values)</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;<span class="keywordflow">IF</span> (<span class="keyword">ASSOCIATED</span>(tempfield % Rdata)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;  <span class="keyword">DEALLOCATE</span>(tempfield % Rdata)</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;<span class="keyword">NULLIFY</span>(tempfield % Rdata)</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;tempfield % Hdr % LBLRec = numberofvalues</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;<span class="keyword">ALLOCATE</span>(tempfield % Rdata(numberofvalues,1))</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;<span class="comment">! Start row</span></div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;row_start = 1</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;row_scan  = 1</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;<span class="keywordflow">IF</span> (jscanspositively == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;  row_start = tempfield % Hdr % NumRows</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;  row_scan  = -1</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;</div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;<span class="comment">! Start col</span></div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;col_start = 1</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;col_scan  = 1</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;<span class="keywordflow">IF</span> (iscansnegatively == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;  col_start = tempfield % Hdr % NumCols</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;  col_scan  = -1</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;</div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;<span class="keywordflow">DO</span> jj = 1, tempfield % Hdr % NumRows</div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;  <span class="keywordflow">DO</span>  ii = 1, tempfield % Hdr % NumCols</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;    tempfield % Rdata((jj-1)*tempfield % Hdr % NumCols+ii,1) = &amp;</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;    values(((row_start-1)+row_scan*(jj-1))*tempfield % Hdr % NumCols + &amp;</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;           (col_start-1)+col_scan*ii)</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;</div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;<span class="comment">! Default transformations</span></div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;<span class="comment">! Logical fields.</span></div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;<span class="keywordflow">IF</span> (tempfield % Hdr % LBUser1 == 3) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;  tempfield % Rdata(:,1) = transfer(tempfield % RData(:,1) &gt;= 0.5, &amp;</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;                                    tempfield % Rdata(:,1))</div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;<span class="comment">! Perform any data manipulation</span></div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;<span class="keyword">CALL </span>grib_to_ff_data_manip(int(paramid(j)),tempfield % Rdata)</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;<span class="keyword">DEALLOCATE</span>(values)</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#a1c124c0d306245f2a430498b5a9e28f8">setup_data</a></div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;</div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;<span class="comment">! Subroutine: find_level_info</span></div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;<span class="comment">! This is where we try and gather all the information from the GRIB file.  We</span></div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;<span class="comment">! loop through using an index so we approach it with some order.  We store any</span></div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;<span class="comment">! hybrid coordinates here for later use.</span></div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;<span class="comment">! *****************************************************************************</span></div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#a5553b51e64e5fca143b6f319784787d1">find_level_info</a></div><div class="line"><a name="l01255"></a><span class="lineno"><a class="line" href="degribify_8f90.xhtml#a5553b51e64e5fca143b6f319784787d1"> 1255</a></span>&#160;</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span>               :: levelSize, typeOfLevelSize, stepSize</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span>               :: paramIdSize</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span>, <span class="keywordtype">ALLOCATABLE</span>  :: level(:), step(:), paramid(:)</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;<span class="keywordtype">CHARACTER(LEN=32)</span>, <span class="keywordtype">ALLOCATABLE</span> :: typeOfLevel(:)</div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;<span class="keywordtype">INTEGER</span> :: count</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;<span class="keywordtype">INTEGER</span> :: ii,jj,kk</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: firstValidLevel</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;<span class="comment">! GRIB interface variables</span></div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: idx</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: iret</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: pvpresent</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfSize_t)</span> :: byte_size</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;<span class="keywordtype">INTEGER(KIND=KindOfInt)</span> :: nb_pv</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;<span class="keywordtype">CHARACTER(LEN=32)</span>       :: gridType</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>       :: pv(:)</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span>       :: valid_levels(:)</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;</div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;<span class="keywordflow">IF</span>( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;  <span class="comment">! Previous error - do not proceed</span></div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;pvpresent  = 0</div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;max_levels = 0</div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;max_soil_levels = 0</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;typepl = .false.</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;typeml = .false.</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;<span class="keyword">call </span>grib_index_create(idx,gribfile,<span class="stringliteral">&#39;paramId,level,typeOfLevel&#39;</span>)</div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;<span class="comment">! Get number of different levels</span></div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;<span class="comment">! get the number of distinct values of level in the index</span></div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;<span class="keyword">call </span>grib_index_get_size(idx,<span class="stringliteral">&#39;level&#39;</span>,levelsize)</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;<span class="comment">! allocate the array to contain the list of distinct levels</span></div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;<span class="keyword">ALLOCATE</span>(level(levelsize))</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;<span class="comment">! get the list of distinct levels from the index</span></div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;<span class="keyword">call </span>grib_index_get(idx,<span class="stringliteral">&#39;level&#39;</span>,level)</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;<span class="comment">! Allocate array to store level information for levdepc.</span></div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;<span class="keyword">ALLOCATE</span>(valid_levels(levelsize))</div><div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;<span class="keyword">ALLOCATE</span>(valid_soil_levels(levelsize))</div><div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;</div><div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;</div><div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;<span class="comment">! Get number of different level types</span></div><div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;<span class="comment">! get the number of distinct values of level in the index</span></div><div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;<span class="keyword">call </span>grib_index_get_size(idx,<span class="stringliteral">&#39;typeOfLevel&#39;</span>,typeoflevelsize)</div><div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;<span class="comment">! allocate the array to contain the list of distinct levels</span></div><div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;<span class="keyword">allocate</span>(typeoflevel(typeoflevelsize))</div><div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;<span class="comment">! get the list of distinct levels from the index</span></div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;<span class="keyword">call </span>grib_index_get(idx,<span class="stringliteral">&#39;typeOfLevel&#39;</span>,typeoflevel)</div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;</div><div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;<span class="comment">! Get number of different level types</span></div><div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;<span class="comment">! get the number of distinct values of level in the index</span></div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;<span class="keyword">call </span>grib_index_get_size(idx,<span class="stringliteral">&#39;paramId&#39;</span>,paramidsize)</div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;<span class="comment">! allocate the array to contain the list of distinct levels</span></div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;<span class="keyword">allocate</span>(paramid(paramidsize))</div><div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;<span class="comment">! get the list of distinct levels from the index</span></div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;<span class="keyword">call </span>grib_index_get(idx,<span class="stringliteral">&#39;paramId&#39;</span>,paramid)</div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;</div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;<span class="comment">! Loop over parameters</span></div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;<span class="keywordflow">DO</span> ii = 1, paramidsize</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;  <span class="keyword">call </span>grib_index_select(idx,<span class="stringliteral">&#39;paramId&#39;</span>,paramid(ii))</div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;  <span class="comment">! Loop over types of levels</span></div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;  <span class="keywordflow">DO</span> jj = 1, typeoflevelsize</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;    <span class="comment">! Select the values of level type(i) in the index</span></div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;    <span class="keyword">call </span>grib_index_select(idx,<span class="stringliteral">&#39;typeOfLevel&#39;</span>,typeoflevel(jj))</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;       count = 0</div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;    firstvalidlevel = <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a></div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;    <span class="comment">! Loop over level values for the type of level</span></div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;    <span class="keywordflow">DO</span> kk = 1, levelsize</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;      <span class="comment">! Select the values of level(j) in index</span></div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;      <span class="keyword">call </span>grib_index_select(idx,<span class="stringliteral">&#39;level&#39;</span>,level(kk))</div><div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;       <span class="comment">! Create new grib record from index</span></div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;      <span class="keyword">call </span>grib_new_from_index(idx,igrib, iret)</div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;      <span class="keywordflow">IF</span> (iret /= grib_end_of_index) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;        <span class="keywordflow">IF</span> (firstvalidlevel == <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a>) firstvalidlevel = level(kk)</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;        count=count+1</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;        <span class="keywordflow">IF</span> (index(typeoflevel(jj),<span class="stringliteral">&quot;hybrid&quot;</span>) &gt; 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;          valid_levels(count) = level(kk)</div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>(index(typeoflevel(jj),<span class="stringliteral">&quot;isobaricInPa&quot;</span>) &gt; 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;          valid_levels(count) = level(kk)</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>(index(typeoflevel(jj),<span class="stringliteral">&quot;isobaricInhPa&quot;</span>) &gt; 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;          valid_levels(count) = level(kk)</div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( index(typeoflevel(jj),<span class="stringliteral">&quot;depthBelow&quot;</span>) &gt; 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;          valid_soil_levels(count) = level(kk)</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;        <span class="keyword">CALL </span>grib_release(igrib)</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;    <span class="keywordflow">IF</span> (firstvalidlevel /= <a class="code" href="namespacemissing__data__mod.xhtml#aff73e8cc7491c6c6a6b2bcc14c172e20">imdi</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;      <span class="comment">! Select the values of firstValidLevel in index</span></div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;      <span class="keyword">call </span>grib_index_select(idx,<span class="stringliteral">&#39;level&#39;</span>,firstvalidlevel)</div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;         <span class="comment">! Create new grib record from index</span></div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;      <span class="keyword">call </span>grib_new_from_index(idx, igrib, iret)</div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;      <span class="keywordflow">IF</span> (iret /= grib_end_of_index) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;             <span class="comment">! Force to use Pa</span></div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;        <span class="keywordflow">IF</span> (index(typeoflevel(jj), <span class="stringliteral">&quot;isobaricInhPa&quot;</span>) &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;          valid_levels(1:count) = 100*valid_levels(1:count)</div><div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;          level(kk) = 100*level(kk)</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;          typeoflevel(jj) = <span class="stringliteral">&#39;isobaricInPa&#39;</span></div><div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&quot;Resetting pressure levels to pascals.&quot;</span>,src=<span class="stringliteral">&#39;degribify&#39;</span>)</div><div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;         <span class="keywordflow">IF</span> (index(typeoflevel(jj),<span class="stringliteral">&quot;hybrid&quot;</span>) &gt; 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;          typeml = .true.</div><div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;          <span class="keyword">call </span>grib_get(igrib,<span class="stringliteral">&#39;PVPresent&#39;</span>,pvpresent)</div><div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;          <span class="keywordflow">IF</span> (pvpresent == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;            <span class="keyword">call </span>grib_get_size(igrib,<span class="stringliteral">&#39;pv&#39;</span>,nb_pv)</div><div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;            <span class="keyword">ALLOCATE</span>(pv(nb_pv))</div><div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;            <span class="keyword">call </span>grib_get(igrib,<span class="stringliteral">&#39;pv&#39;</span>,pv)</div><div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;<span class="comment">! There might be two type of pv (especially in UM for rho and theta levels)</span></div><div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;            <span class="keywordflow">IF</span>(.NOT. <span class="keyword">ALLOCATED</span>(pv_1) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;              nb_pv_1 = nb_pv</div><div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;              <span class="keyword">ALLOCATE</span>(pv_1(nb_pv_1))</div><div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;              pv_1(:) = pv(:)</div><div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;            <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (pv_1(1) /= pv(1) .AND. .NOT. <span class="keyword">ALLOCATED</span>(pv_2) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;              nb_pv_2 = nb_pv</div><div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;              <span class="keyword">ALLOCATE</span>(pv_2(nb_pv_2))</div><div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;              pv_2(:) = pv(:)</div><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;               <span class="keywordflow">IF</span> (pv(1) == pv_1(1)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;              max_levels_1 = count</div><div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;              <span class="keywordflow">IF</span> ( .NOT. <span class="keyword">ALLOCATED</span>(valid_levels_1)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;                <span class="keyword">ALLOCATE</span>(valid_levels_1(max_levels_1))</div><div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;                valid_levels_1(1:max_levels_1) = valid_levels(1:max_levels_1)</div><div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;            <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (<span class="keyword">ALLOCATED</span>(pv_2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;              max_levels_2 = count</div><div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;              <span class="keywordflow">IF</span> ( .NOT. <span class="keyword">ALLOCATED</span>(valid_levels_2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;                <span class="keyword">ALLOCATE</span>(valid_levels_2(max_levels_2))</div><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;                valid_levels_2(1:max_levels_2) = valid_levels(1:max_levels_2)</div><div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;            max_levels=max(max_levels_1, max_levels_2)</div><div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;            <span class="keyword">DEALLOCATE</span>(pv)</div><div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;             <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( index(typeoflevel(jj),<span class="stringliteral">&quot;isobaricInPa&quot;</span>) &gt; 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;                   typepl = .true.</div><div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;          max_levels = count</div><div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;          <span class="keywordflow">IF</span> ( .NOT. <span class="keyword">ALLOCATED</span>(valid_levels_1) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;            <span class="keyword">ALLOCATE</span>(valid_levels_1(max_levels))</div><div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;            valid_levels_1 = valid_levels(1:max_levels)</div><div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( index(typeoflevel(jj),<span class="stringliteral">&quot;depthBelow&quot;</span>) &gt; 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;          max_soil_levels = max(count, max_soil_levels)</div><div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;             <span class="keywordflow">IF</span> (typeml .AND. typepl) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&quot;ERROR: Please use either hybrid or pressure levels.&quot;</span>, &amp;</div><div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;              src=<span class="stringliteral">&#39;degribify&#39;</span>)</div><div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;          errorstatus = <a class="code" href="namespaceerr__mod.xhtml#af3378d99a6a222835d2678b8336251c8">statusfatal</a></div><div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename, errorstatus,                          &amp;</div><div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;                       <span class="stringliteral">&#39;Please use either pressure or model levels.&#39;</span> )</div><div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;             <span class="comment">! Lets copy the message if we have just switched on typeML or typePL</span></div><div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;        <span class="comment">! for later use.</span></div><div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;           <span class="keywordflow">IF</span> ( ( typeml .OR. typepl ) .AND. .NOT. <span class="keyword">ALLOCATED</span>(std_mess) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;          <span class="comment">! Check if the gridType is supported.</span></div><div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;          <span class="keyword">CALL </span>grib_get(igrib,<span class="stringliteral">&#39;gridType&#39;</span>, gridtype)</div><div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;          <span class="keywordflow">IF</span>(trim(gridtype) /= <span class="stringliteral">&#39;rotated_ll&#39;</span> .AND.  &amp;</div><div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;             trim(gridtype) /= <span class="stringliteral">&#39;regular_ll&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;            errorstatus = <a class="code" href="namespaceerr__mod.xhtml#af3378d99a6a222835d2678b8336251c8">statusfatal</a></div><div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename, errorstatus,                                 &amp;</div><div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;            <span class="stringliteral">&#39;Grid type unsupported, regular or rotated lat/lon only.&#39;</span> )</div><div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;                  <span class="keyword">call </span>grib_get_message_size(igrib, byte_size)</div><div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;          <span class="keyword">allocate</span>(std_mess(byte_size))</div><div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;          <span class="keyword">call </span>grib_copy_message(igrib,std_mess)</div><div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;         <span class="comment">! Release message firstValidLevel</span></div><div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;      <span class="keyword">call </span>grib_release(igrib)</div><div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;</div><div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;<span class="keyword">call </span>grib_index_release(idx)</div><div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;</div><div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;<span class="keyword">DEALLOCATE</span>(level)</div><div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;<span class="keyword">DEALLOCATE</span>(typeoflevel)</div><div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;<span class="keyword">DEALLOCATE</span>(paramid)</div><div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;<span class="comment">!DEALLOCATE(step)</span></div><div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;<span class="keyword">DEALLOCATE</span>(valid_levels)</div><div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;</div><div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;<span class="keywordflow">IF</span> (.NOT. <span class="keyword">ALLOCATED</span>(std_mess) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;  errorstatus = <a class="code" href="namespaceerr__mod.xhtml#af3378d99a6a222835d2678b8336251c8">statusfatal</a></div><div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( routinename, errorstatus, &amp;</div><div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;                <span class="stringliteral">&quot;Did not find supported model level type&quot;</span> )</div><div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;</div><div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#a5553b51e64e5fca143b6f319784787d1">find_level_info</a></div><div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;</div><div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="degribify_8f90.xhtml#af83e6bde65cc2f47da36cddae7e9a38f" title="Routines for converting fields from fieldsfile to GRIB. ">degribify</a></div><div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;</div><div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;<span class="preprocessor">#endif</span></div><span class="preprocessor"></span></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
