<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/stash/init_pp.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_807f876cb6d36c1a4c0b1b86608d148a.xhtml">stash</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">init_pp.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="init__pp_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="init__pp_8f90.xhtml#a1d1b25028da1e9e68888410e53960e3c" title="!&gt; Code Owner: See Unified Model Code Owners HTML page !&gt; Code Owner: See Unified Model Code Owners H...">init_pp</a> ( FTN_UNIT,FILE_TYPE_LETTER,                   &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;     &amp;                     LEN1_LOOKUP,PP_LEN2_LOOKUP,FIXHD,            &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;     &amp;                     INTHD,REALHD,LEVDEPC,ROWDEPC,COLDEPC,        &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;     &amp;                     LEN_INTHD,                                   &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;     &amp;                     LEN_REALHD,LEN1_LEVDEPC,LEN2_LEVDEPC,        &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;     &amp;                     LEN1_ROWDEPC,LEN2_ROWDEPC,                   &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;     &amp;                     LEN1_COLDEPC,LEN2_COLDEPC,                   &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;     &amp;                     PP_LEN_INTHD, PP_LEN_REALHD,                 &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;     &amp;                     ICODE,CMESSAGE)</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="init__pp_8f90.xhtml#a1d1b25028da1e9e68888410e53960e3c">   24</a></span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#if defined(C84_1A)</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span>      <span class="keywordtype">USE </span><a class="code" href="namespacemodel__file.xhtml" title="A simple data module containing variables related to STASH buffering. ">model_file</a>                                                #endif</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceios.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">ios</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespaceios.xhtml#ad444933037c0bd236fee1369fff1998a">ios_set_header</a></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceio__configuration__mod.xhtml" title="This file belongs in section: C96. ">io_configuration_mod</a><span class="keywordtype">, ONLY</span> :   &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;           <a class="code" href="namespaceio__configuration__mod.xhtml#ac276c4f2ad85761ec116649ba0c5353f">io_data_alignment</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a><span class="keywordtype">, ONLY</span>                   :   &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;          <a class="code" href="namespaceio.xhtml#a697a0c6022f3650289b1150987fad504">iodisksynchronise</a>,             &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;          buffout</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordtype">CHARACTER(LEN=1)</span>                                                       &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;     &amp;    FILE_TYPE_LETTER    <span class="comment">! IN  - File type (p-PP, b-bndry)</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;     &amp;    FTN_UNIT                                                      &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                              <span class="comment">! IN  - Fortran unit number</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;     &amp;,   len1_lookup                                                   &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                              <span class="comment">! IN  - Size of PP header</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;     &amp;,   pp_len2_lookup                                                &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                              <span class="comment">! IN  - Max allowable fields</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;     &amp;,   len_inthd                                                     &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                              <span class="comment">! IN    LENGTH OF INTEGER CONSTANTS</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;     &amp;,   len_realhd                                                    &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                              <span class="comment">! IN    LENGTH OF REAL CONSTANTS</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;     &amp;,   len1_levdepc                                                  &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                              <span class="comment">! IN    LENGTH OF 1st Dim of lev depndt</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;     &amp;,   len2_levdepc                                                  &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                              <span class="comment">! IN    LENGTH OF 2nd Dim of lev depndt</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;     &amp;,   len1_rowdepc                                                  &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                              <span class="comment">! IN    LENGTH OF 1st Dim of row depndt</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;     &amp;,   len2_rowdepc                                                  &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                              <span class="comment">! IN    LENGTH OF 2nd Dim of row depndt     &amp;,   LEN1_COLDEPC                                                  &amp;</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                              <span class="comment">! IN    LENGTH OF 1st Dim of col depndt</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;     &amp;,   len2_coldepc                                                  &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                              <span class="comment">! IN    LENGTH OF 2nd Dim of col depndt</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;     &amp;,   icode                                                         &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                              <span class="comment">! OUT - Error exit code</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;     &amp;,   pp_len_inthd                                                  &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                              <span class="comment">! IN - Length of PP FILE integer header</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;     &amp;,   pp_len_realhd       <span class="comment">! IN - Length of PP FILE real header</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;     &amp;    FIXHD(*)                                                      &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                    <span class="comment">! IN    ARRAY OF FIXED CONSTANTS</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;     &amp;,   inthd(len_inthd)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                    <span class="comment">! IN    ARRAY OF integer CONSTANTS</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;     &amp;    LEVDEPC(LEN1_LEVDEPC*LEN2_LEVDEPC)                            &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                              <span class="comment">! IN LEV DEP CONSTANTS</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;     &amp;,   rowdepc(len1_rowdepc*len2_rowdepc)                            &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                                              <span class="comment">! IN ROW DEP CONSTANTS</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;     &amp;,   coldepc(len1_coldepc*len2_coldepc)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                              <span class="comment">! IN COL DEP CONSTANT</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;     &amp;    PP_INTHD(PP_LEN_INTHD)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                    <span class="comment">! OUT   ARRAY of integer constants</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;     &amp;    PP_LEVDEPC(LEN1_LEVDEPC*LEN2_LEVDEPC)                         &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                                                 <span class="comment">! OUT Level dep cts</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;     &amp;,   pp_rowdepc(len1_rowdepc*len2_rowdepc)                         &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                                 <span class="comment">! OUT Row dep cts</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;     &amp;,   pp_coldepc(len1_coldepc*len2_coldepc)  <span class="comment">! OUT Col dep cts</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">#if defined(C84_1A)</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor"></span>      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">POINTER</span> :: PP_FIXHD(:)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor"></span>      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;     &amp;    PP_FIXHD(256)     #endif</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;     &amp;    REALHD(LEN_REALHD)                                            &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                    <span class="comment">! IN    ARRAY OF REAL CONSTANTS</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;     &amp;,   pp_realhd(pp_len_realhd)  <span class="comment">! OUT   ARRAY OF REAL CONSTANTS</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span>                                                      &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;     &amp;    CMESSAGE            <span class="comment">! OUT - Error message</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">!*!</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">!  Local variables</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#if defined(C84_1A)</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor"></span>      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">POINTER</span>   :: IPPLOOK(:,:)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: current_io_pe=0</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      <span class="keywordtype">INTEGER</span>            :: DUMMY</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="keywordtype">INTEGER</span>            :: STEP</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor"></span>      <span class="keywordtype">INTEGER</span> IPPLOOK(len1_lookup,pp_len2_lookup)</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="preprocessor"></span><span class="comment">!</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">!dir$ cache_align pp_fixhd, pp_inthd, pp_realhd, pp_levdepc,!     pp_rowdepc, pp_coldepc, ipplook</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;     &amp;       II,JJ,IWA,IX,LEN_IO,START_BLOCK  <span class="comment">!</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keywordtype">REAL</span> A_IO</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#if defined(C84_1A)</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">!L!L 1. Reserve space</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">#if defined(C84_1A)</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor"></span>       <span class="keyword">NULLIFY</span>(ipplook)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;       step = 1</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;       <span class="keyword">CALL </span>initlookups(ipplook, ftn_unit, len1_lookup,                 &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;     &amp;                   pp_len2_lookup, dummy, step)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="preprocessor"></span>      <span class="keywordflow">DO</span> ii=1,pp_len2_lookup</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keywordflow">DO</span> jj=1,len1_lookup</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;          ipplook(jj,ii)=-99</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">!L!L 1.1 Set up FIXED header record for the PP FILE</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="preprocessor">#if defined(C84_1A)</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor"></span><span class="comment">! Attach fixed length header</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keyword">CALL </span>initheader(ftn_unit,<a class="code" href="namespacemodel__file.xhtml#a47ff63bec7823bf9353469f6b9b36d0e" title="Parts of the file. ">fixedheader</a>)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      pp_fixhd=&gt;attachheader(ftn_unit,<a class="code" href="namespacemodel__file.xhtml#a47ff63bec7823bf9353469f6b9b36d0e" title="Parts of the file. ">fixedheader</a>)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="preprocessor"></span>      <span class="keywordflow">DO</span> ii=1,<span class="keyword">SIZE</span>(pp_fixhd)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        pp_fixhd(ii)=fixhd(ii)</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="keywordflow">IF</span> (file_type_letter == <span class="stringliteral">&#39;p&#39;</span> .OR.                                  &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;     &amp;    file_type_letter == <span class="stringliteral">&#39;c&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        pp_fixhd(5)=3</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="keywordflow">ELSEIF</span> (file_type_letter == <span class="stringliteral">&#39;b&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        pp_fixhd(5)=5</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        icode=100</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        cmessage=<span class="stringliteral">&#39;INIT_PP  : Unknown output file type letter&#39;</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      pp_fixhd(101)=pp_len_inthd</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      pp_fixhd(105)=pp_fixhd(100)+pp_fixhd(101)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      pp_fixhd(106)=pp_len_realhd</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      pp_fixhd(110)=pp_fixhd(105)+pp_fixhd(106)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      pp_fixhd(111)=len1_levdepc</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      pp_fixhd(112)=len2_levdepc</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      pp_fixhd(115)=0</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      pp_fixhd(116)=imdi</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      pp_fixhd(117)=imdi</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      pp_fixhd(120)=0</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      pp_fixhd(121)=imdi</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      pp_fixhd(122)=imdi</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      pp_fixhd(125)=0</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      pp_fixhd(126)=imdi</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      pp_fixhd(127)=imdi</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      pp_fixhd(130)=0</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      pp_fixhd(131)=imdi</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      pp_fixhd(135)=0</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      pp_fixhd(136)=imdi</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      pp_fixhd(140)=0</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      pp_fixhd(141)=imdi</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      pp_fixhd(142)=0</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      pp_fixhd(143)=imdi</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      pp_fixhd(144)=0</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      pp_fixhd(145)=imdi</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      pp_fixhd(150)=pp_fixhd(110)+ pp_fixhd(111)*pp_fixhd(112)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      <span class="keywordflow">IF</span> (len2_rowdepc &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        pp_fixhd(115)=pp_fixhd(110)+ pp_fixhd(111)*pp_fixhd(112)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        pp_fixhd(116)=len1_rowdepc        pp_fixhd(117)=len2_rowdepc</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        pp_fixhd(150)=pp_fixhd(115)+ pp_fixhd(116)*pp_fixhd(117)<span class="keywordflow">       END IF</span>      <span class="keywordflow">IF</span> (len2_coldepc &gt; 0) <span class="keywordflow">THEN</span>        pp_fixhd(120)=pp_fixhd(115)+ pp_fixhd(116)*pp_fixhd(117)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        pp_fixhd(121)=len1_coldepc</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        pp_fixhd(122)=len2_coldepc</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        pp_fixhd(150)=pp_fixhd(120)+ pp_fixhd(121)*pp_fixhd(122)<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      pp_fixhd(151)=len1_lookup</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      pp_fixhd(152)=pp_len2_lookup</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      pp_fixhd(160)=                                                    &amp;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                         <span class="comment">! make sure the data starts on a sector bndry</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;     &amp; ((pp_fixhd(150)+pp_len2_lookup*len1_lookup-1+<a class="code" href="namespaceio__configuration__mod.xhtml#ac276c4f2ad85761ec116649ba0c5353f">io_data_alignment</a>-1)/ &amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;     &amp; <a class="code" href="namespaceio__configuration__mod.xhtml#ac276c4f2ad85761ec116649ba0c5353f">io_data_alignment</a>)*<a class="code" href="namespaceio__configuration__mod.xhtml#ac276c4f2ad85761ec116649ba0c5353f">io_data_alignment</a>+1</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="preprocessor">#if defined(C84_1A)</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor"></span>      <span class="keyword">CALL </span>setheader(ftn_unit,<a class="code" href="namespacemodel__file.xhtml#a47ff63bec7823bf9353469f6b9b36d0e" title="Parts of the file. ">fixedheader</a>)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">!L!L 1.2 Set up INTEGER constants record for the PP FILE</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      <span class="keywordflow">IF</span>(pp_fixhd(5) &lt;= 2) <span class="keywordflow">THEN</span> <span class="comment">!  set all values initially to MDI</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">DO</span> ii=1,pp_len_inthd</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;          pp_inthd(ii)=inthd(21)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordflow">        ENDDO</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">DO</span> ii=1,pp_len_inthd</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;          pp_inthd(ii)=imdi</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordflow">        ENDDO</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      pp_inthd(6)=inthd(6)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      pp_inthd(7)=inthd(7)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      pp_inthd(8)=inthd(8)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      pp_inthd(9)=inthd(9)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      pp_inthd(10)=inthd(10)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      pp_inthd(12)=inthd(12)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;      pp_inthd(13)=inthd(13)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      pp_inthd(17)=inthd(17)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      pp_inthd(24)=inthd(24)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      pp_inthd(25)=inthd(25)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      pp_inthd(28)=inthd(28)</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">!L!L 1.3 Set up REAL constants record for the PP FILE</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      <span class="keywordflow">DO</span> ii = 1, pp_len_realhd</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        pp_realhd(ii) = rmdi   <span class="comment">! Set all values to RMDI initially</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      pp_realhd(1)=realhd(1)</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;      pp_realhd(2)=realhd(2)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;      pp_realhd(3)=realhd(3)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      pp_realhd(4)=realhd(4)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">! Set to RMDI for VR           IF (LEN2_ROWDEPC &gt; 0 .AND. LEN2_COLDEPC &gt; 0) THEN</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        pp_realhd(1) = rmdi</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        pp_realhd(2) = rmdi            pp_realhd(3) = rmdi           pp_realhd(4) = rmdi<span class="keywordflow">            ENDIF</span>           pp_realhd(5)=realhd(5)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      pp_realhd(6)=realhd(6)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="preprocessor">#if defined(FLDMOD)</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="preprocessor"></span>      <span class="keywordflow">IF</span>(pp_len_realhd &gt;= 17)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="preprocessor"></span>      pp_realhd(16)=realhd(16)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      pp_realhd(17)=realhd(17)</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="preprocessor">#if defined(FLDMOD)</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="preprocessor"></span><span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">!L!L 1.4 Set up LEVEL/ROW/COL DEPENDANT constants record for the PP FILE</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      <span class="keywordflow">DO</span> ii=1,len1_levdepc*len2_levdepc</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        pp_levdepc(ii)=levdepc(ii)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;           <span class="keywordflow">DO</span> ii=1,len1_rowdepc*len2_rowdepc</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;         pp_rowdepc(ii)=rowdepc(ii)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;           <span class="keywordflow">DO</span> ii=1,len1_coldepc*len2_coldepc</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;         pp_coldepc(ii)=coldepc(ii)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      <span class="comment">!L!L 2.1 BUFFER OUT Header Records starting with the FIXED LENGTH</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;      <span class="keyword">CALL </span>buffout(ftn_unit,pp_fixhd,<span class="keyword">SIZE</span>(pp_fixhd),len_io,a_io)</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">IF</span>(a_io /= -1.0.OR.len_io /= <span class="keyword">SIZE</span>(pp_fixhd)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">! DEPENDS ON: ioerror</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;           <span class="keyword">CALL </span><a class="code" href="ioerror_8f90.xhtml#aa3812224bd42148a2e00c44c715f82de" title="SUBROUTINE IOERROR!&gt; ">ioerror</a>(<span class="stringliteral">&#39;bufferout of fixed length header&#39;</span>,a_io,len_io, &amp;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;     &amp;                    <span class="keyword">SIZE</span>(pp_fixhd))</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;           cmessage=<span class="stringliteral">&#39;INIT_PP:I/O error&#39;</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;           icode=1</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;           <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;           <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;      start_block=<span class="keyword">SIZE</span>(pp_fixhd)+1</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">!L!L 2.2 BUFFER OUT Integer Constants</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;      <span class="keywordflow">IF</span>(fixhd(100) &gt;  0) <span class="keywordflow">THEN</span>  <span class="comment">! Any integer constants to output ?</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">! Check for error in file pointers</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">!        WRITE(6,*)  &#39;START_BLOCK FIXHD(100)&#39;</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">!        WRITE(6,*)   START_BLOCK</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">!        WRITE(6,*)   FIXHD(100)</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">!        WRITE(6,*)   FTN_UNIT</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;         <span class="keywordflow">IF</span>(fixhd(100) /= start_block) <span class="keywordflow">THEN</span>  <span class="comment">! Check start address</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">! DEPENDS ON: poserror</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            <span class="keyword">CALL </span><a class="code" href="poserror_8f90.xhtml#a6e55b1390632fbecc7abf71e05669199" title="SUBROUTINE POSERROR. ">poserror</a>(<span class="stringliteral">&#39;integer constants&#39;</span>,start_block,100,          &amp;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;     &amp;      pp_fixhd(100))</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            cmessage=<span class="stringliteral">&#39;INIT_PP:  Addressing conflict&#39;</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            icode=2</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;         <span class="keyword">CALL </span>buffout (ftn_unit,pp_inthd(1:),pp_fixhd(101),len_io,a_io)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">! Check for I/O errors</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;         <span class="keywordflow">IF</span>(a_io /= -1.0.OR.len_io /= pp_fixhd(101)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">! DEPENDS ON: ioerror</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <span class="keyword">CALL </span><a class="code" href="ioerror_8f90.xhtml#aa3812224bd42148a2e00c44c715f82de" title="SUBROUTINE IOERROR!&gt; ">ioerror</a>(<span class="stringliteral">&#39;buffer out of integer constants&#39;</span>,a_io,len_io  &amp;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;     &amp;     ,pp_fixhd(101))</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            cmessage=<span class="stringliteral">&#39;INIT_PP: I/O Error&#39;</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            icode=3</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;         start_block=start_block+pp_fixhd(101)</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">!L!L 2.3 BUFFER OUT Real Constants</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;      <span class="keywordflow">IF</span>(pp_fixhd(105) &gt;  0) <span class="keywordflow">THEN</span>   <span class="comment">! Any real constants to output ?</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">! Check for error in file pointers</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <span class="keywordflow">IF</span>(pp_fixhd(105) /= start_block) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">! DEPENDS ON: poserror</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;          <span class="keyword">CALL </span><a class="code" href="poserror_8f90.xhtml#a6e55b1390632fbecc7abf71e05669199" title="SUBROUTINE POSERROR. ">poserror</a>(<span class="stringliteral">&#39;real constants&#39;</span>,start_block,100,pp_fixhd(105))</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;          cmessage=<span class="stringliteral">&#39;INIT_PP: Addressing conflict&#39;</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;          icode=4</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;          <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;          <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="keyword">CALL </span>buffout(ftn_unit,pp_realhd(1:),pp_fixhd(106),len_io,a_io)</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">! Check for I/O errors</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <span class="keywordflow">IF</span>(a_io /= -1.0.OR.len_io /= pp_fixhd(106)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">! DEPENDS ON: ioerror</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;          <span class="keyword">CALL </span><a class="code" href="ioerror_8f90.xhtml#aa3812224bd42148a2e00c44c715f82de" title="SUBROUTINE IOERROR!&gt; ">ioerror</a>(<span class="stringliteral">&#39;buffer out of real constants&#39;</span>,a_io,len_io       &amp;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;     &amp;                 ,pp_fixhd(106))</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;          cmessage=<span class="stringliteral">&#39;INIT_PP: I/O Error&#39;</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;          icode=5</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;          <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;          <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        start_block=start_block+pp_fixhd(106)</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">!L!L 2.4.1 BUFFER OUT Level Dependant Constants.</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;      <span class="keywordflow">IF</span>(pp_fixhd(112) &gt;  0) <span class="keywordflow">THEN</span> <span class="comment">! Any level dependant constants ?</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">! Check for error in file pointers</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;         <span class="keywordflow">IF</span>(pp_fixhd(110) /= start_block) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">! DEPENDS ON: poserror</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            <span class="keyword">CALL </span><a class="code" href="poserror_8f90.xhtml#a6e55b1390632fbecc7abf71e05669199" title="SUBROUTINE POSERROR. ">poserror</a>(<span class="stringliteral">&#39;real constants&#39;</span>,start_block,100,             &amp;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;     &amp;                     pp_fixhd(110))</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            cmessage=<span class="stringliteral">&#39;INIT_PP: Addressing conflict&#39;</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            icode=6</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;         <span class="keyword">CALL </span>buffout (ftn_unit,pp_levdepc(1:)                           &amp;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;     &amp;              ,pp_fixhd(111)*pp_fixhd(112),len_io,a_io)</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">! Check for I/O errors</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;         <span class="keywordflow">IF</span>(a_io /= -1.0.OR.len_io /= (pp_fixhd(111)*pp_fixhd(112)      &amp;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;     &amp;        ))<span class="keywordflow">THEN</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment">! DEPENDS ON: ioerror</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;           <span class="keyword">CALL </span><a class="code" href="ioerror_8f90.xhtml#aa3812224bd42148a2e00c44c715f82de" title="SUBROUTINE IOERROR!&gt; ">ioerror</a>(<span class="stringliteral">&#39;buffer out of lev dep constants&#39;</span>,a_io,len_io   &amp;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;     &amp;            ,pp_fixhd(111))</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;           cmessage=<span class="stringliteral">&#39;INIT_PP: I/O Error&#39;</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;           icode=7</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;           <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;           <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;         start_block=start_block+ pp_fixhd(111)*pp_fixhd(112)</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">!L!L 2.4.2 BUFFER OUT Row Dependant Constants.</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;      <span class="keywordflow">IF</span>(pp_fixhd(115) &gt;  0) <span class="keywordflow">THEN</span> <span class="comment">! Any row dependant constants ?</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment">! Check for error in file pointers</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="keywordflow">IF</span>(pp_fixhd(115) /= start_block) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment">! DEPENDS ON: poserror</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;          <span class="keyword">CALL </span><a class="code" href="poserror_8f90.xhtml#a6e55b1390632fbecc7abf71e05669199" title="SUBROUTINE POSERROR. ">poserror</a>(<span class="stringliteral">&#39;real constants&#39;</span>,start_block,100,               &amp;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;     &amp;                   pp_fixhd(115))</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;          cmessage=<span class="stringliteral">&#39;INIT_PP: Addressing conflict&#39;</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;          icode=6</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;          <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;          <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <span class="keyword">CALL </span>buffout (ftn_unit,pp_rowdepc(1:),                           &amp;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;     &amp;                pp_fixhd(116)*pp_fixhd(117),len_io,a_io)</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="comment">! Check for I/O errors</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <span class="keywordflow">IF</span>(a_io /= -1.0.OR.len_io /= (pp_fixhd(116)*pp_fixhd(117)       &amp;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;     &amp;       ))<span class="keywordflow">THEN</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">! DEPENDS ON: ioerror</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;          <span class="keyword">CALL </span><a class="code" href="ioerror_8f90.xhtml#aa3812224bd42148a2e00c44c715f82de" title="SUBROUTINE IOERROR!&gt; ">ioerror</a>(<span class="stringliteral">&#39;buffer out of row dep constants&#39;</span>,a_io,len_io,   &amp;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;     &amp;                  pp_fixhd(116))</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;          cmessage=<span class="stringliteral">&#39;INIT_PP: I/O Error&#39;</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;          icode=7</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;          <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;          <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        start_block=start_block+ pp_fixhd(116)*pp_fixhd(117)</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">!L!L 2.4.3 BUFFER OUT Col Dependant Constants.</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;      <span class="keywordflow">IF</span>(pp_fixhd(120) &gt;  0) <span class="keywordflow">THEN</span> <span class="comment">! Any col dependant constants ?</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">! Check for error in file pointers</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <span class="keywordflow">IF</span>(pp_fixhd(120) /= start_block) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">! DEPENDS ON: poserror</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;          <span class="keyword">CALL </span><a class="code" href="poserror_8f90.xhtml#a6e55b1390632fbecc7abf71e05669199" title="SUBROUTINE POSERROR. ">poserror</a>(<span class="stringliteral">&#39;real constants&#39;</span>,start_block,100,               &amp;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;     &amp;                   pp_fixhd(120))</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;          cmessage=<span class="stringliteral">&#39;INIT_PP: Addressing conflict&#39;</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;          icode=6</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;          <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;          <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        <span class="keyword">CALL </span>buffout (ftn_unit,pp_coldepc(1:),                           &amp;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;     &amp;                pp_fixhd(121)*pp_fixhd(122),len_io,a_io)</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">! Check for I/O errors</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        <span class="keywordflow">IF</span>(a_io /= -1.0.OR.len_io /= (pp_fixhd(121)*pp_fixhd(122)       &amp;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;     &amp;       ))<span class="keywordflow">THEN</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">! DEPENDS ON: ioerror</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;          <span class="keyword">CALL </span><a class="code" href="ioerror_8f90.xhtml#aa3812224bd42148a2e00c44c715f82de" title="SUBROUTINE IOERROR!&gt; ">ioerror</a>(<span class="stringliteral">&#39;buffer out of col dep constants&#39;</span>,a_io,len_io ,  &amp;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;     &amp;                  pp_fixhd(121))</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;          cmessage=<span class="stringliteral">&#39;INIT_PP: I/O Error&#39;</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;          icode=7</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;          <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;          <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        start_block=start_block+ pp_fixhd(121)*pp_fixhd(122)</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="keywordflow">      END IF</span>     <span class="comment">!L!L 2.5 BUFFER OUT Lookup Table</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment">!L</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="comment">!     IWA= 0</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment">!     CALL SETPOS(FTN_UNIT,3,IWA,ICODE)</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;           <span class="keywordflow">IF</span>(pp_fixhd(152) &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment">! Check for error in file pointers</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;             <span class="keywordflow">IF</span>(pp_fixhd(150) /= start_block) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="comment">! DEPENDS ON: poserror</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;               <span class="keyword">CALL </span><a class="code" href="poserror_8f90.xhtml#a6e55b1390632fbecc7abf71e05669199" title="SUBROUTINE POSERROR. ">poserror</a>(<span class="stringliteral">&#39;lookup table&#39;</span>,start_block,100,            &amp;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;     &amp;              pp_fixhd(150))</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;               cmessage=<span class="stringliteral">&#39;INIT_PP: Addressing conflict&#39;</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;               icode=8</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;               <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;               <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="keywordflow">             END IF</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;      <span class="keyword">CALL </span>buffout (ftn_unit,                                           &amp;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;     &amp;              ipplook,len1_lookup*pp_len2_lookup,len_io,a_io)</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">! Check for I/O errors</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            <span class="keywordflow">IF</span>(a_io /= -1.0.OR.len_io /= (pp_fixhd(151)*pp_fixhd(152))) &amp;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;     &amp;          <span class="keywordflow">THEN</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment">! DEPENDS ON: ioerror</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;              <span class="keyword">CALL </span><a class="code" href="ioerror_8f90.xhtml#aa3812224bd42148a2e00c44c715f82de" title="SUBROUTINE IOERROR!&gt; ">ioerror</a>(<span class="stringliteral">&#39;buffer out of PP LOOKUP TABLE &#39;</span>,a_io,len_io &amp;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;     &amp;            ,pp_fixhd(152))</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;              cmessage=<span class="stringliteral">&#39;INIT_PP: I/O Error&#39;</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;              icode=9</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;              <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;              <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            <span class="comment">! Force last write to then file to commit to disk</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            <span class="comment">! to avoid problems with continuation runs following            ! hard failures.</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a697a0c6022f3650289b1150987fad504">iodisksynchronise</a>(ftn_unit)</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            start_block=start_block+(pp_fixhd(151)*pp_fixhd(152))</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="preprocessor">#if defined(C84_1A)</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="preprocessor"></span><span class="comment">!</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="comment">! If we are the current I/O PE, we need to update our copy</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment">! of the LOOKUP Table disk address</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;      step = 2</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;      <span class="keyword">CALL </span>initlookups(ipplook, ftn_unit, dummy, dummy,                &amp;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;     &amp;                  pp_fixhd(150) - 1, step)</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;      <span class="keyword">NULLIFY</span>(pp_fixhd)</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INIT_PP&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="init__pp_8f90.xhtml#a1d1b25028da1e9e68888410e53960e3c" title="!&gt; Code Owner: See Unified Model Code Owners HTML page !&gt; Code Owner: See Unified Model Code Owners H...">init_pp</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
