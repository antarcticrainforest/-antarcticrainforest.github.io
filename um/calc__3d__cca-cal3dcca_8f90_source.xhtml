<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/calc_3d_cca-cal3dcca.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">calc_3d_cca-cal3dcca.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="calc__3d__cca-cal3dcca_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="calc__3d__cca-cal3dcca_8f90.xhtml#a3d503da74a859db2cab9165346128c28" title="*****************************COPYRIGHT************************************** ************************...">calc_3d_cca</a>                                                        &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  ( np_field, npnts, nlev, n_cca_lev, nbl, cld_base, cld_top, p_lyr_bnds      &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  , frz_lev, cca_2d, cca_3d, z_theta, z_rho )</div><div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="calc__3d__cca-cal3dcca_8f90.xhtml#a3d503da74a859db2cab9165346128c28">   11</a></span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecv__param__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_param_mod</a><span class="keywordtype">, ONLY</span>:                                                     &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;      <a class="code" href="namespacecv__param__mod.xhtml#a1816ed3d710109b7815134073f322854">deep_dp</a>, <a class="code" href="namespacecv__param__mod.xhtml#a5e3eebc03334ab7b1c217a7c402a5074">anv_pressure</a>, <a class="code" href="namespacecv__param__mod.xhtml#a4589723d4e3e79aaec0d457cbd6cd001">anv_height</a>, <a class="code" href="namespacecv__param__mod.xhtml#a4bf358cdf5a63edefac4a9a40a575b5f">anv_model_levels</a>,                    &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;      <a class="code" href="namespacecv__param__mod.xhtml#a8607dcef180dd4fcec89fb6ec7ab63ee">anv_limited_pressure_depth</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecv__run__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_run_mod</a><span class="keywordtype">, Only</span>:                                                       &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;      <a class="code" href="namespacecv__run__mod.xhtml#a0a259bc14638d6eee7d27e20354af4a3">l_cloud_deep</a>, <a class="code" href="namespacecv__run__mod.xhtml#aac0e8d88037a7342dd9f465169e18054">tower_factor</a>, <a class="code" href="namespacecv__run__mod.xhtml#a9beb97d1ccb5d8b565488195df907383">anvil_factor</a>, <a class="code" href="namespacecv__run__mod.xhtml#af657ece5acf5ee9cada3ffb2e2c3acf0">anv_opt</a>, <a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">intent(in)</span>  :: npnts        <span class="comment">! Number of points</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">intent(in)</span>  :: np_field     <span class="comment">! Full data length</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">intent(in)</span>  :: nlev         <span class="comment">! Number of levels</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">intent(in)</span>  :: n_cca_lev    <span class="comment">! Number of cca levels</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">intent(in)</span>  :: nbl          <span class="comment">! Number of Boundary layer levels</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordtype">REAL</span>,    <span class="keywordtype">intent(in)</span>  :: z_theta    (np_field,   nlev) <span class="comment">! z (th layer centres)</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordtype">REAL</span>,    <span class="keywordtype">intent(in)</span>  :: z_rho      (np_field,   nlev) <span class="comment">! z (rh level  bounds)</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordtype">REAL</span>,    <span class="keywordtype">intent(in)</span>  :: p_lyr_bnds (np_field, 0:nlev)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                                  <span class="comment">! Pressure on layer</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                                  <span class="comment">! boundaries (rho levels-1)</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordtype">REAL</span>,    <span class="keywordtype">intent(in)</span>  :: cca_2d   (npnts) <span class="comment">! 2D convective cloud amount</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">intent(in)</span>  :: cld_top  (npnts) <span class="comment">! Conv. cloud top  (theta level)</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">intent(in)</span>  :: cld_base (npnts) <span class="comment">! Conv. cloud base (theta level)</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">intent(in)</span>  :: frz_lev  (npnts) <span class="comment">! Freezing level   (theta level)</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordtype">REAL</span>,    <span class="keywordtype">intent(out)</span> :: cca_3d(np_field, n_cca_lev)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                           <span class="comment">! Convective cloud amount on</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                           <span class="comment">! model levels (theta levels)</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                          <span class="keywordtype">INTEGER</span> :: anv_lev     <span class="comment">! Base level of &#39;anvil&#39;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">REAL</span>    :: anv_dep     <span class="comment">! Anvil depth in model levels</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordtype">REAL</span>    :: anv_p_dep   <span class="comment">! Anvil depth in pressure</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">REAL</span>    :: anv_z_dep   <span class="comment">! Anvil depth in metres</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordtype">REAL</span>    :: anv_p_base  <span class="comment">! Anvil base pressure (rho-level)</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keywordtype">REAL</span>    :: p_cld_base  <span class="comment">! Pressure at lowest  cloud layer BOUNDARY</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordtype">REAL</span>    :: p_cld_top   <span class="comment">! Pressure at highest cloud layer BOUNDARY</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordtype">LOGICAL</span> :: cbct_crit (npnts) <span class="comment">! .TRUE. if cloud base/top are sensible</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordtype">LOGICAL</span> :: dep_crit  (npnts) <span class="comment">! .TRUE. if depth criteria met</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordtype">LOGICAL</span> :: base_crit (npnts) <span class="comment">! .TRUE. if cloud base criteria met</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordtype">LOGICAL</span> :: anv_on    (npnts) <span class="comment">! .TRUE. if all anvil criteria met</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keywordtype">INTEGER</span> :: tp_of_lp  (npnts) <span class="comment">! Index of cloud top, required so that CCRad</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                               <span class="comment">! correction can be reverted</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! Code Statements</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CALC_3D_CCA&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="comment">! 1.0 Initialise local arrays</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;   <span class="keywordflow">Do</span> i=1, npnts</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    cbct_crit(i)  = .false.</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    dep_crit(i)   = .false.</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    base_crit(i)  = .false.</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    anv_on(i)     = .false.</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    tp_of_lp(i)   = 0</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordflow">  End Do</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="comment">! 2.0 Option changes/bugfixes specified by CCRad</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">Do</span> i=1, npnts</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="comment">! Check for sensible Cloud base/top</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      cbct_crit(i)  = ((cld_top(i)  &gt;= cld_base(i)) .AND.                     &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                       (cld_top(i)  /= 0)           .AND.                     &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                       (cld_base(i) /= 0))</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <span class="comment">! Check for cloud base/top above/below freezing level</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      base_crit(i)  = ((cld_base(i) &lt; frz_lev(i))   .AND.                     &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                       (cld_top(i)  &gt; frz_lev(i)))</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="comment">! Change index of cloud top (Bug fix)</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      tp_of_lp(i)   = cld_top(i)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keywordflow">    End Do</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordflow">Else</span>    <span class="comment">! Original test criteria    Do i=1, npnts</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      cbct_crit(i) = .true.</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      base_crit(i) = ((cld_base(i) &lt; nbl)           .AND.                     &amp;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                      (cld_top(i)  &gt; frz_lev(i)))</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      tp_of_lp(i)  = cld_top(i)-1</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keywordflow">    End Do</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="comment">! Locate grid points where depth criteria is satisfied</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordflow">If</span> (<a class="code" href="namespacecv__run__mod.xhtml#a0a259bc14638d6eee7d27e20354af4a3">l_cloud_deep</a>) <span class="keywordflow">Then</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">Do</span> i=1, npnts</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      p_cld_base  = p_lyr_bnds(i,max(cld_base(i)-1,0))</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      p_cld_top   = p_lyr_bnds(i,cld_top(i))</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      dep_crit(i) = (p_cld_base - p_cld_top) &gt;= <a class="code" href="namespacecv__param__mod.xhtml#a1816ed3d710109b7815134073f322854">deep_dp</a></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keywordflow">    End Do</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">Else</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordflow">Do</span> i=1,npnts</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      dep_crit(i) = .true.</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keywordflow">    End Do</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keywordflow">  End If</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="comment">! 3.0 Locate grid points where all anvil criteria are satisfied</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">Do</span> i=1, npnts</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">If</span> (base_crit(i) .AND. dep_crit(i)) <span class="keywordflow">Then</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      anv_on(i) = .true.</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordflow">    End If</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keywordflow">  End Do</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="comment">! 4.0 Apply CCA Profiles    Do i=1, npnts</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordflow">If</span> ( cbct_crit(i)       .AND.                                             &amp;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        (cca_2d(i) &gt; 0.0) ) <span class="keywordflow">Then</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      <span class="keywordflow">If</span> (anv_on(i)) <span class="keywordflow">Then</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <span class="comment">! 4.1a Cloud satisfies anvil criteria: Apply Anvil</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                <span class="keywordflow">Select Case</span>(<a class="code" href="namespacecv__run__mod.xhtml#af657ece5acf5ee9cada3ffb2e2c3acf0">anv_opt</a>)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;          <span class="keywordflow">Case</span>(<a class="code" href="namespacecv__param__mod.xhtml#a4589723d4e3e79aaec0d457cbd6cd001">anv_height</a>)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                       <span class="comment">! CCA increases with height from freezing level to cloud-top</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                       anv_lev   = max(cld_base(i), frz_lev(i))</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            anv_z_dep = z_rho(i,cld_top(i)) - z_rho(i,anv_lev-1)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=anv_lev, cld_top(i)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;              cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =                                                   &amp;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                      (<a class="code" href="namespacecv__run__mod.xhtml#a9beb97d1ccb5d8b565488195df907383">anvil_factor</a> - <a class="code" href="namespacecv__run__mod.xhtml#aac0e8d88037a7342dd9f465169e18054">tower_factor</a>)*cca_2d(i)                 &amp;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                    * (z_theta(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) - z_rho(i,anv_lev-1)) / anv_z_dep         &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                    + (cca_2d(i) * <a class="code" href="namespacecv__run__mod.xhtml#aac0e8d88037a7342dd9f465169e18054">tower_factor</a>)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;              <span class="keywordflow">If</span> (cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &gt;= 1.0) <span class="keywordflow">Then</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 0.99</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordflow">              End If</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keywordflow">             End Do</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;          <span class="keywordflow">Case</span>(<a class="code" href="namespacecv__param__mod.xhtml#a4bf358cdf5a63edefac4a9a40a575b5f">anv_model_levels</a>)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                       <span class="comment">! CCA increases with model level from freezing level to cloud-top:</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="comment">! (original code)</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                       anv_lev = max(cld_base(i), frz_lev(i))</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            anv_dep = cld_top(i) - anv_lev</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=anv_lev, tp_of_lp(i)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;              cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =                                                   &amp;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                      (<a class="code" href="namespacecv__run__mod.xhtml#a9beb97d1ccb5d8b565488195df907383">anvil_factor</a> - <a class="code" href="namespacecv__run__mod.xhtml#aac0e8d88037a7342dd9f465169e18054">tower_factor</a>) * cca_2d(i)               &amp;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                    * (<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a> - anv_lev + 1) / anv_dep                             &amp;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                    + (cca_2d(i) * <a class="code" href="namespacecv__run__mod.xhtml#aac0e8d88037a7342dd9f465169e18054">tower_factor</a>)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;              <span class="keywordflow">If</span> (cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)  &gt;=  1.0) <span class="keywordflow">Then</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 0.99</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordflow">              End If</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordflow">            End Do</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          <span class="keywordflow">Case</span>(<a class="code" href="namespacecv__param__mod.xhtml#a5e3eebc03334ab7b1c217a7c402a5074">anv_pressure</a>)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                       <span class="comment">! CCA increases with pressure from freezing level to cloud-top</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                       anv_lev   = max(cld_base(i), frz_lev(i))</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            anv_p_dep = p_lyr_bnds(i,anv_lev-1) - p_lyr_bnds(i,cld_top(i))</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=anv_lev, tp_of_lp(i)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                 cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =                                                   &amp;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                    (<a class="code" href="namespacecv__run__mod.xhtml#a9beb97d1ccb5d8b565488195df907383">anvil_factor</a> - <a class="code" href="namespacecv__run__mod.xhtml#aac0e8d88037a7342dd9f465169e18054">tower_factor</a>)*cca_2d(i)                   &amp;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                  * (p_lyr_bnds(i,anv_lev-1) -  p_lyr_bnds(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)) / anv_p_dep  &amp;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                  + (cca_2d(i) * <a class="code" href="namespacecv__run__mod.xhtml#aac0e8d88037a7342dd9f465169e18054">tower_factor</a>)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;              <span class="keywordflow">If</span> (cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &gt;= 1.0) <span class="keywordflow">Then</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 0.99</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordflow">              End If</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordflow">            End Do</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;          <span class="keywordflow">Case</span>(<a class="code" href="namespacecv__param__mod.xhtml#a8607dcef180dd4fcec89fb6ec7ab63ee">anv_limited_pressure_depth</a>)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                       <span class="comment">! Pressure based, but limit anvil depth to 5000.0 pa</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                       anv_p_base = p_lyr_bnds(i,cld_top(i)) + 5000.0</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <span class="comment">! Ensure that Anvil is at least 2 levels deep, so only loop to            ! layer below cloud top so that it will be 2 levels deep even</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <span class="comment">! if k is set at top of loop</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=1, tp_of_lp(i)-1</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;              <span class="keywordflow">If</span> (p_lyr_bnds(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &gt; anv_p_base) <span class="keywordflow">Then</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                anv_lev = <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keywordflow">              End If</span><span class="keywordflow">             End Do</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            anv_p_dep = p_lyr_bnds(i,anv_lev-1) - p_lyr_bnds(i,cld_top(i))</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=anv_lev, tp_of_lp(i)</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                 cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) =                                                   &amp;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                    (<a class="code" href="namespacecv__run__mod.xhtml#a9beb97d1ccb5d8b565488195df907383">anvil_factor</a> - <a class="code" href="namespacecv__run__mod.xhtml#aac0e8d88037a7342dd9f465169e18054">tower_factor</a>)*cca_2d(i)                   &amp;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                  * (p_lyr_bnds(i,anv_lev-1) -  p_lyr_bnds(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)) / anv_p_dep  &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                  + (cca_2d(i) * <a class="code" href="namespacecv__run__mod.xhtml#aac0e8d88037a7342dd9f465169e18054">tower_factor</a>)</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;              <span class="keywordflow">If</span> (cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) &gt;= 1.0) <span class="keywordflow">Then</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 0.99</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordflow">              End If</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keywordflow">            End Do</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keywordflow">        End Select</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                <span class="comment">! 4.1b Cloud satisfies anvil criteria: Apply Tower below anvil base</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=cld_base(i), anv_lev-1</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;          cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = <a class="code" href="namespacecv__run__mod.xhtml#aac0e8d88037a7342dd9f465169e18054">tower_factor</a> * cca_2d(i)</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;      <span class="keywordflow">Else</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="comment">! Anvil criteria not met        Do k=cld_base(i), tp_of_lp(i)</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;          cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = cca_2d(i)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keywordflow">      End If</span>      <span class="comment">! End test on anvil criteria</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;           <span class="comment">! Finally check there is no cloud below cloud base or above cloud top:</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;      <span class="comment">! (original code)</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;           <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacecv__run__mod.xhtml#a056243df9a25e9043295c5ac8042fd5b">l_ccrad</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="keywordflow">Do</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=1, (cld_base(i)-1)</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;          cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 0.0</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keywordflow">        End Do</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">IF</span> (cld_top(i) &gt; 0) <span class="keywordflow">THEN</span>          <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=cld_top(i), n_cca_lev</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            cca_3d(i,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>) = 0.0</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keywordflow">      END IF</span>      <span class="comment">! l_ccrad</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keywordflow">    End If</span>      <span class="comment">! cca_2d &gt; 0 and sensible ccb/cct</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keywordflow">  End Do</span>      <span class="comment">! loop over npnts</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">!=============================================================================</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">!  End of anvil calculation</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">!=============================================================================</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CALC_3D_CCA&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="calc__3d__cca-cal3dcca_8f90.xhtml#a3d503da74a859db2cab9165346128c28" title="*****************************COPYRIGHT************************************** ************************...">calc_3d_cca</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
