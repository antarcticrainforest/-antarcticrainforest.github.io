<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/fieldcalc/mtnstress.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_925d6107435631a137c191c3b43797c1.xhtml">fieldcalc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">mtnstress.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="mtnstress_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="mtnstress_8f90.xhtml#a211dc657a28b4caa157fd6c6dff3434c" title="Routines to calculate Mountain Wave Predictor diagnostic. ">mtnstress</a>( NumLevs,      &amp;  ! in</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;                      WindU200,     &amp;  ! in</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;                      WindV200,     &amp;  ! in</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                      UStress,      &amp;  ! inout</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                      VStress,      &amp;  ! inout</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                      MWTPred,      &amp;  ! inout</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                      ErrorStatus )    <span class="comment">! inout</span></div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="mtnstress_8f90.xhtml#a211dc657a28b4caa157fd6c6dff3434c">   13</a></span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceio__mod.xhtml" title="Module containing derived types used for IO in Fieldcalc. ">io_mod</a><span class="keywordtype">, ONLY</span>:         &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <a class="code" href="structio__mod_1_1pp__header__type.xhtml" title="Global Type Definitions: ">pp_header_type</a>,         &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceerr__mod.xhtml" title="Module containing error codes for Fieldcalc. ">err_mod</a><span class="keywordtype">, ONLY</span>:        &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacefldcodes__mod.xhtml" title="Module containing field header codes for Fieldcalc. ">fldcodes_mod</a><span class="keywordtype">, ONLY</span>:   &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <a class="code" href="namespacefldcodes__mod.xhtml#ae431082300ecc0e747ab72c4853e955a">st_mwt</a>,   <a class="code" href="namespacefldcodes__mod.xhtml#ac3cca6d21c988b87654b8b59bd6b47e5">mo8_mwt</a>,      &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <a class="code" href="namespacefldcodes__mod.xhtml#a365e007e8d04be948c37f00bbd494a83">pp_mwt</a>,   <a class="code" href="namespacefldcodes__mod.xhtml#a8edd9caacdd0700ed9baabaedd4b8bf5">vc_turb</a>,      &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <a class="code" href="namespacefldcodes__mod.xhtml#abe398e87ea80d0c3ed041eb104f60d84">lv_special</a></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">IMPLICIT None</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: NumLevs</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>), <span class="keywordtype">INTENT(IN)</span> :: WindU200  <span class="comment">! wind U-component at 200mb</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>), <span class="keywordtype">INTENT(IN)</span> :: WindV200  <span class="comment">! wind V-component at 200mb</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>), <span class="keywordtype">INTENT(IN)</span> :: UStress(numlevs)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>), <span class="keywordtype">INTENT(IN)</span> :: VStress(numlevs)</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>), <span class="keywordtype">INTENT(INOUT)</span> :: MWTPred</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> :: ErrorStatus</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">CHARACTER(LEN=*)</span>, <span class="keywordtype">PARAMETER</span> :: RoutineName = <span class="stringliteral">&quot;MtnStress&quot;</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor"></span><span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: NumContours = 3</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">REAL</span>,    <span class="keywordtype">PARAMETER</span> :: Contours(numcontours) =  &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                          (/0.007,0.065,0.25/) <span class="comment">! The contour thresholds</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">INTEGER</span> :: i, j, k        <span class="comment">! DO loop variables</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">INTEGER</span> :: NumRows        <span class="comment">! The number of latitudes = header(18)</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keywordtype">INTEGER</span> :: NumCols        <span class="comment">! The number of longitudes = header(19)</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">INTEGER</span> :: NumAbvCutOff   <span class="comment">! Number of points above Contours</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">REAL</span> :: CutOff            <span class="comment">! One of the Contours values</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keywordtype">REAL</span> :: MinWSpeed         <span class="comment">! Wind threshold for advection</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">ALLOCATABLE</span> :: PtPosn(:,:)    <span class="comment">! Lat Lon array of</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                       <span class="comment">! stress &gt; cutoff</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">ALLOCATABLE</span> :: AdvPtPosn(:,:) <span class="comment">! advected LL array of</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                       <span class="comment">! stress &gt; cutoff</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>) :: WindF200    <span class="comment">! wind speed at 200mb</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>) :: WindD200    <span class="comment">! wind direction at 200mb</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>) :: MaxStress   <span class="comment">! Maximum of gravity wave stress</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordtype">TYPE</span>(<a class="code" href="structio__mod_1_1pp__field__type.xhtml">pp_field_type</a>) :: Stress      <span class="comment">! Magnitude of gravity wave stress</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">CALL </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a>( routinename, 3 )</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordflow">IF</span>( errorstatus /= <a class="code" href="namespaceerr__mod.xhtml#ae2b7f5c34be48b8e246e1fa3c003dce8" title="Method: ">statusok</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="comment">! Previous error - do not proceed</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordflow">GO TO</span> 9999</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keywordflow">IF</span> ( <span class="keyword">ASSOCIATED</span>( mwtpred % RData ) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keyword">DEALLOCATE</span>( mwtpred % RData )</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;mwtpred % Hdr = windu200 % Hdr</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;mwtpred % Hdr % PPCode   =  <a class="code" href="namespacefldcodes__mod.xhtml#a365e007e8d04be948c37f00bbd494a83">pp_mwt</a></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;mwtpred % Hdr % LBVC     =  <a class="code" href="namespacefldcodes__mod.xhtml#a8edd9caacdd0700ed9baabaedd4b8bf5">vc_turb</a></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;mwtpred % Hdr % MO8Type  = <a class="code" href="namespacefldcodes__mod.xhtml#ac3cca6d21c988b87654b8b59bd6b47e5">mo8_mwt</a></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;mwtpred % Hdr % MO8Level =  <a class="code" href="namespacefldcodes__mod.xhtml#abe398e87ea80d0c3ed041eb104f60d84">lv_special</a></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;mwtpred % Hdr % STCode   =  <a class="code" href="namespacefldcodes__mod.xhtml#ae431082300ecc0e747ab72c4853e955a">st_mwt</a></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;mwtpred % Hdr % RLevel   = 0.0</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;mwtpred % Hdr % RefLevel = 0.0</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;mwtpred % Hdr % BHLEV    = 0.0</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;mwtpred % Hdr % BHRLEV   = 0.0</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;mwtpred % Hdr % BULEV    = 0.0</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;mwtpred % Hdr % BHULEV   = 0.0</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;mwtpred % Hdr % BMDI     = <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">ALLOCATE</span>( mwtpred % RData(mwtpred % Hdr % NumCols, &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                          mwtpred % Hdr % NumRows) )</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;numcols = mwtpred % Hdr % NumCols</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;numrows = mwtpred % Hdr % NumRows</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">NULLIFY</span>( stress % RData )</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">NULLIFY</span>( maxstress % RData )</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword">NULLIFY</span>( windf200 % RData )</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keyword">NULLIFY</span>( windd200 % RData )</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">! DEPENDS ON: vecmag</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">CALL </span><a class="code" href="vecmag_8f90.xhtml#ac1246c3708035c0054d6433249d27028" title="Generic routines for manipulating pp-fields within Fieldcalc. ">vecmag</a>( windu200, windv200, windf200, errorstatus )</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">! DEPENDS ON: vecdir</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword">CALL </span><a class="code" href="vecdir_8f90.xhtml#a81855be296018eb7358f0d079ba64bfc" title="Generic routines for manipulating pp-fields within Fieldcalc. ">vecdir</a>( windu200, windv200, windd200, errorstatus )</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">! Determine the maximum magnitude of the gravity wave stress</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">! DEPENDS ON: vecmag</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">CALL </span><a class="code" href="vecmag_8f90.xhtml#ac1246c3708035c0054d6433249d27028" title="Generic routines for manipulating pp-fields within Fieldcalc. ">vecmag</a>( ustress(1), vstress(1), maxstress, errorstatus )</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keywordflow">DO</span> k = 2,numlevs</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">! DEPENDS ON: vecmag</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keyword">CALL </span><a class="code" href="vecmag_8f90.xhtml#ac1246c3708035c0054d6433249d27028" title="Generic routines for manipulating pp-fields within Fieldcalc. ">vecmag</a>( ustress(k), vstress(k), stress, errorstatus )</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordflow">WHERE</span> ( stress % RData &gt; maxstress % RData ) &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;          maxstress % RData = stress % RData</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword">DEALLOCATE</span>( stress % RData )</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">NULLIFY</span>( stress % RData )</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">ALLOCATE</span>( ptposn(2,numcols*numrows) )</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;mwtpred % RData(:,:) = maxstress % RData(:,:)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordflow">DO</span> k = 1, numcontours     <span class="comment">! loop over the contour threshold values</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="comment">!  Determine the arrays of values above the thresholds.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  cutoff = contours(k)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  numabvcutoff = 0       <span class="comment">! Initialise to 0</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  ptposn(:,:) = 0</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keywordflow">DO</span> j = 1, numrows</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">DO</span> i = 1, numcols</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      <span class="keywordflow">IF</span> ( maxstress % RData(i,j) &gt; cutoff ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="comment">! Increase number of points by 1 and store in PtPosn</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        numabvcutoff = numabvcutoff + 1</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        ptposn( 1:2, numabvcutoff ) = (/i,j/)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="comment">! If NumAbvCutOff &gt; 0, the &#39;new&#39; mwt points need calculating.</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordflow">IF</span> ( numabvcutoff &gt; 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keyword">ALLOCATE</span>( advptposn(2,numabvcutoff) )</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    advptposn(:,:) = ptposn(:,1:numabvcutoff)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="comment">! Determine the array of next points. Point 2 in Appendix.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    minwspeed = 0.0</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">! DEPENDS ON: advectmws</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keyword">CALL </span><a class="code" href="advectmws_8f90.xhtml#aede5c614b8620663e0c473ef1f16cce0" title="Routines to calculate Mountain Wave Predictor diagnostic. ">advectmws</a>( numabvcutoff, cutoff,            &amp;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                    minwspeed,                       &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                    ptposn(1:2,1:numabvcutoff),  &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                    maxstress,                       &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                    windf200,     windd200,          &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                    advptposn(1:2,1:numabvcutoff),  &amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                    mwtpred,                         &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                    errorstatus )</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="comment">!*** need to swap halos of AdvPtPosn if MPP***</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="comment">! Determine the second array of next points. Point 4 in Appendix.</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    minwspeed = 30.0  <span class="comment">! This is the wind speed required to advect a</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                      <span class="comment">! distance of 2 grid squares.</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">! DEPENDS ON: advectmws</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keyword">CALL </span><a class="code" href="advectmws_8f90.xhtml#aede5c614b8620663e0c473ef1f16cce0" title="Routines to calculate Mountain Wave Predictor diagnostic. ">advectmws</a>( numabvcutoff, cutoff,            &amp;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                    minwspeed,                       &amp;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                    ptposn(1:2,1:numabvcutoff),  &amp;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                    maxstress,                       &amp;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                    windf200,     windd200,          &amp;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                    advptposn(1:2,1:numabvcutoff),  &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                    mwtpred,                         &amp;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                    errorstatus )</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment">! If an extra point is required downwind for extra resolution</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="comment">! or strong flow, calculate an extra point. Point 6 in Appendix.</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="comment">! Possibly do this by calling AdvectMWS from within a loop.</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="comment">! Calculate a MinWindSpd threshold from the grid resolution and pass</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="comment">! it into the subroutine.</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">DEALLOCATE</span>(advptposn)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">DEALLOCATE</span>( windf200 % RData )</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword">DEALLOCATE</span>( windd200 % RData )</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keyword">DEALLOCATE</span>( maxstress % RData )</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keyword">DEALLOCATE</span>( ptposn )</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">! DEPENDS ON: timer</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keyword">CALL </span><a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a>( routinename, 4 )</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="mtnstress_8f90.xhtml#a211dc657a28b4caa157fd6c6dff3434c" title="Routines to calculate Mountain Wave Predictor diagnostic. ">mtnstress</a></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
