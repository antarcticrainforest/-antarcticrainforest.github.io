<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/utility/qxreconf/rcf_write_multi_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0619a8f54b4fad7043a6de45be8fde0b.xhtml">utility</a></li><li class="navelem"><a class="el" href="dir_448e69cd1e368218ef2123538d498dc2.xhtml">qxreconf</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">rcf_write_multi_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="rcf__write__multi__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno"><a class="line" href="namespacercf__write__multi__mod.xhtml">    4</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacercf__write__multi__mod.xhtml" title="Parallel RCF interface to BUFFOUT Parallel RCF interface to BUFFOUT. ">rcf_write_multi_mod</a></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">  SUBROUTINE </span><a class="code" href="namespacercf__write__multi__mod.xhtml#aa6e97436080f87db70232b41dff066fb" title="Subroutine Rcf_Write_Multi - parallel interface to buffout. ">rcf_write_multi</a>(  nft, d1, isize, len_io, local_len,              &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      iostat, lookup, fixhd12,                                                 &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      stash_record, Multi_PE )</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="namespacercf__write__multi__mod.xhtml#aa6e97436080f87db70232b41dff066fb">   30</a></span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordtype">USE </span>um_parvars<span class="keywordtype">, ONLY</span> :                                                     &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>,                                                                  &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        nproc</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__general__gather__field__mod.xhtml">rcf_general_gather_field_mod</a><span class="keywordtype">, ONLY</span> :                                   &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <a class="code" href="namespacercf__general__gather__field__mod.xhtml#a89801019b76881ff8dbcd35b468a9c38" title="Subroutine Rcf_General_Gather_Field - generalised gather field. ">rcf_general_gather_field</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacercf__ppx__info__mod.xhtml" title="Defines the STASHmaster record Defines the STASHmaster record. ">rcf_ppx_info_mod</a><span class="keywordtype">, ONLY</span> :                                               &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <a class="code" href="structrcf__ppx__info__mod_1_1stm__record__type.xhtml" title="Define STMrecord type - to hold STASHmaster records Note that as these are in a sequence and are inte...">stm_record_type</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a><span class="keywordtype">, ONLY</span> : buffout, buffo32</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>    :: Nft         <span class="comment">! Fortran unit number</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>    :: Isize       <span class="comment">! no. of words to write out</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>    :: Fixhd12     <span class="comment">! 12th element of fixed hdr.</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>    :: Lookup(64)  <span class="comment">! Lookup table</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span>   :: Len_IO      <span class="comment">! no. or words written out</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span>   :: Local_Len   <span class="comment">! size of local field written out</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>       :: d1(*)       <span class="comment">! Array to write out</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>      :: IOstat      <span class="comment">! return code</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">TYPE</span>( <a class="code" href="structrcf__ppx__info__mod_1_1stm__record__type.xhtml" title="Define STMrecord type - to hold STASHmaster records Note that as these are in a sequence and are inte...">stm_record_type</a> ), <span class="keywordtype">INTENT(IN)</span> :: stash_record</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: Multi_PE    <span class="comment">! flag to confirm &#39;gather&#39; req&#39;d</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">INTEGER</span>                :: i                 <span class="comment">! looper</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">INTEGER</span>                :: info              <span class="comment">! Gcom code</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">REAL</span>                   :: CompBuf(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a7fbd5df41f854a6fd5c4d35c0942742e">lbnrec</a>)) <span class="comment">! compression buffer</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordtype">REAL</span>                   :: buf( isize * 2 )  <span class="comment">! buffer for data</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    len_io=isize</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    local_len=0</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">IF</span> (multi_pe) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="comment">! Gather the field from the local D1 array to buf</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacercf__general__gather__field__mod.xhtml#a89801019b76881ff8dbcd35b468a9c38" title="Subroutine Rcf_General_Gather_Field - generalised gather field. ">rcf_general_gather_field</a>( d1,        buf,                           &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;          local_len, lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>),                                           &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;          stash_record,   0 )</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      buf(: lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>)) = d1(: lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>))</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="keywordflow">IF</span>(mod((lookup(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>)),10) == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">IF</span>(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;          <span class="keyword">CALL </span><a class="code" href="pack21_8f90.xhtml#a334377e0db7ced17af33d5b1e6c42290" title="SUBROUTINE PACK21. ">pack21</a>( lookup(<a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a>), buf, compbuf )</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      <span class="keywordflow">ELSE</span> <span class="comment">! no compression required - just do a copy</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">DO</span> i=1, lookup( <a class="code" href="namespacelookup__addresses.xhtml#ab82991ff70c45e8f733b4446f83e0556">lblrec</a> )</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;          compbuf(i)=buf(i)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">#if defined(LITTLE_END)</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor"></span>      <span class="keywordflow">IF</span>(mod((lookup(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>)),10) == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">IF</span>(lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">! out 2*ISIZE 32 bit words using BUFFO32</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">! DEPENDS ON : buffout32_f77</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;          <span class="keyword">CALL </span><a class="code" href="buffout32__f77_8f90.xhtml#a9f0c33f63718d3b06e20ab6f86e759ea" title="Code Owner: See Unified Model Code owners HTML page. ">buffout32_f77</a>( nft,compbuf,2*isize,len_io,iostat )</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">! And then halve LEN_IO to satisfy tests against ISIZE</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;          len_io = len_io/2</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! For non-packed data</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keyword">CALL </span>buffout( nft, compbuf, isize, len_io, iostat )</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor"></span>      <span class="keyword">CALL </span>buffout( nft, compbuf, isize, len_io, iostat )</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! am I PE 0 ?</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! If the field was compressed for writing on disk, we need to compress</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">! and expand the field in memory. This ensures the same field exists in</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">! memory that would exist if this dump was read back in.</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">IF</span> (mod((lookup(<a class="code" href="namespacelookup__addresses.xhtml#a506fad965bad508479cafb725dd659f1">lbpack</a>)),10) == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <span class="keywordflow">IF</span> (lookup(<a class="code" href="namespacelookup__addresses.xhtml#a0970ddf404f7e561573acd7914a99250">data_type</a>) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">! DEPENDS ON: pack21</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keyword">CALL </span><a class="code" href="pack21_8f90.xhtml#a334377e0db7ced17af33d5b1e6c42290" title="SUBROUTINE PACK21. ">pack21</a>(   local_len, d1, compbuf )</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">! DEPENDS ON: expand21</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keyword">CALL </span><a class="code" href="expand21_8f90.xhtml#ae17b02afacdabc296f92b32a4d6ce156" title="SUBROUTINE EXPAND21. ">expand21</a>( local_len, compbuf, d1 )</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keyword">  END SUBROUTINE </span><a class="code" href="namespacercf__write__multi__mod.xhtml#aa6e97436080f87db70232b41dff066fb" title="Subroutine Rcf_Write_Multi - parallel interface to buffout. ">rcf_write_multi</a></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacercf__write__multi__mod.xhtml" title="Parallel RCF interface to BUFFOUT Parallel RCF interface to BUFFOUT. ">rcf_write_multi_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
