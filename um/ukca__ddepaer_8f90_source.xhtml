<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/UKCA/ukca_ddepaer.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_3b087d695daa154bfcb7242bcfd0fbd3.xhtml">UKCA</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ukca_ddepaer.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ukca__ddepaer_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">!  Description:</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">!  Code Description:</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="ukca__ddepaer_8f90.xhtml#a6f6abb7ca02fe47bddf4b36650bfeda9" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_ddepaer</a>(NBOX,ND,MD,MDT,                           &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;          RHOPAR,ZNOT,SEAICE,                                           &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;          DTC,WETDP,USTR,PMID,PUPPER,PLOWER,T,SURTP,                    &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;          RHOA,MFPA,DVISC,BUD_AER_MAS,ILSCAT)</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="ukca__ddepaer_8f90.xhtml#a6f6abb7ca02fe47bddf4b36650bfeda9">   32</a></span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">! T         : Centre level temperature (K)</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">! SURTP     : Surface type [0=sea-surf,1=land-surf,2=above-surf]</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">! RHOA      : Air density (kg/m3)</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">! MFPA      : Mean free path of air (m)</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">! DVISC     : Dynamic viscosity of air (kg m-1 s-1)</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">! ILSCAT    : Land surface category (based on 9 landsurf types)</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">! Outputs</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">! ! Updated particle number density ND (/cm3)</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! Updated particle avg mass MD (molecules/particle)</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">! Updated Avg tot mass of aerosol ptcl in size mode MDT (particle^-1)</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">! BUD_AER_MAS : Aerosol mass budgets (mlcls/cc/tstep)</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">! Local Variables</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">! PS_AV_0    : 0th moment avg particle Schmidt Number</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">! PS_AV_3    : 3rd moment avg particle Schmidt Number</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">! KVISC      : Kinematic viscosity of air (m2 s-1)</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">! VGRAV_AV_0 : 0th moment avg grav. settling vel. (m/s)</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">! VGRAV_AV_3 : 3rd moment avg grav. settling vel. (m/s)</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">! VDEP_AV_0  : 0th moment avg deposition velocity (m/s)</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! VDEP_AV_3  : 3rd moment avg deposition velocity (m/s)</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">! DCOEF_AV_0 : 0th moment avg particle diffusion coefficient(m2/s)</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">! DCOEF_AV_3 : 3rd moment avg particle diffusion coefficient(m2/s)</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">! SN_AV_0    : 0th moment avg Stokes number</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">! SN_AV_3    : 3rd moment avg Stokes number</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">! SR_AV_0    : 0th moment avg surface resistance</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">! SR_AV_3    : 3rd moment avg surface resistance</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">! EB_AV_0    : 0th moment avg collection eff. for Brownian diffusion</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">! EB_AV_3    : 3rd moment avg collection eff. for Brownian diffusion</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">! EIM_AV_0   : 0th moment avg collection eff. for impaction</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">! EIM_AV_3   : 3rd moment avg collection eff. for impaction</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">! EIN        : Collection eff. for interception</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">! AR         : Aerodynamic resistance</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">! MTOT       : Total aerosol mass conc [all cpts] (molecules/cm3)</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">! MCPTOT     : Total aersool mass conc [1 cpt] (molecules/cm3)</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">! NEWN       : Updated number concentration (/cm3)</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">! DZ         : Ht difference between box vertical interfaces (m)</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">! DZMID      : Ht difference between box lower interface &amp; mid-level (m)</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">! SIGMA      : Geometric standard deviation of mode</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">! CR,Y,ALPHA: aerosol deposition coefficients</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">!     [vary with land category &amp; input via DATA statements]</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">! CR        : Characteristic radius of collectors (m)</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">! Y         : Parameter for calculating Brownian diffusion</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">! ALPHA     : Parameter for calculating EIM</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">! MASK      : Logical to define regions of domain to work on.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">! MASK_SMOO :Logical to define regsions over &quot;smooth&quot;  surface categories</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">! MASK_VEGE :Logical to define regsions over vegetated surface categories</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">! Inputted by module UKCA_CONSTANTS</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">! GG        : Gravitational acceleration = 9.80665 ms^-2</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">! VKARMN    : Von Karman&#39;s constant = 0.4</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">! PPI       : 3.1415927</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">! RA        : Dry air gas constant = 287.05 Jkg^-1 K^-1</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">! ZBOLTZ    : Boltzman Constant (kg m2 s-2 K-1 molec-1)</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">! Inputted by module UKCA_MODE_SETUP</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">! ! NMODES    : Number of possible aerosol modes</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">! NCP       : Number of possible aerosol components</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">! MODE      : Defines which modes are set</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">! COMPONENT : Defines which cpts are allowed in each mode</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">! SIGMAG    : Geometric standard deviation of mode</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">! MM        : Molar masses of components (kg/mole)</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">! RHOCOMP   : Densities (dry) of each component (kg/m^3)</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">! NUM_EPS   : Value of NEWN below which do not recalculate MD (per cc)</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">!                                              or carry out process</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">! CP_SU     : Index of component in which H2SO4 is stored</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">! CP_BC     : Index of component in which BC is stored</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">! CP_OC     : Index of component in which 1st OC cpt is stored</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">! CP_CL     : Index of component in which NaCl is stored</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">! CP_SO     : Index of component in which 2nd OC cpt is stored</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">! Inputted by module UKCA_SETUP_INDICES</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">! ! Various indices for budget terms in BUD_AER_MAS</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">! References</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">! ! Slinn, Atmos. En., 1982, 16, 1785-1794</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">! Zhang et al, Atmos. En., 2001, 35, 549-560</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;-      <span class="keywordtype">USE </span>ukca_constants<span class="keywordtype">,      ONLY</span>: gg, vkarmn, ppi, ra, zboltz</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      <span class="keywordtype">USE </span>ukca_mode_setup</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceukca__setup__indices.xhtml" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_setup_indices</a></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,            ONLY</span>: jprb, jpim</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,             ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">! .. Subroutine interface</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: NBOX</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ILSCAT(nbox)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: RHOPAR(nbox,nmodes)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: ZNOT(nbox)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: SEAICE(nbox)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: DTC</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: WETDP(nbox,nmodes)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: USTR(nbox)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: PMID(nbox)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: PUPPER(nbox)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: PLOWER(nbox)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: T(nbox)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: SURTP(nbox)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: RHOA(nbox)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: MFPA(nbox)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: DVISC(nbox)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: ND(nbox,nmodes)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: MD(nbox,nmodes,ncp)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: MDT(nbox,nmodes)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: BUD_AER_MAS(nbox,0:<a class="code" href="namespaceukca__setup__indices.xhtml#a6671709ac36d8c05bf12524df7ca82cb">nbudaer</a>)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">!    Local Variables</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      <span class="keywordtype">INTEGER</span> :: JL</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      <span class="keywordtype">INTEGER</span> :: IMODE</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;      <span class="keywordtype">INTEGER</span> :: ICP</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      <span class="keywordtype">LOGICAL</span> :: MASK(nbox)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      <span class="keywordtype">LOGICAL</span> :: MASK3(nbox)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      <span class="keywordtype">LOGICAL</span> :: MASK4(nbox)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <span class="keywordtype">LOGICAL</span> :: MASKSURF(nbox)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordtype">LOGICAL</span> :: MASK_SMOO(nbox)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;      <span class="keywordtype">LOGICAL</span> :: MASK_VEGE(nbox)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;      <span class="keywordtype">REAL</span>    :: DELNDDEP(nbox)</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <span class="keywordtype">REAL</span>    :: DELMDDEP(nbox)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      <span class="keywordtype">REAL</span>    :: PS_AV_0(nbox)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;      <span class="keywordtype">REAL</span>    :: PS_AV_3(nbox)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      <span class="keywordtype">REAL</span>    :: KVISC(nbox)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      <span class="keywordtype">REAL</span>    :: VGRAV_AV_0(nbox)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      <span class="keywordtype">REAL</span>    :: VGRAV_AV_3(nbox)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      <span class="keywordtype">REAL</span>    :: DCOEF_AV_0(nbox)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      <span class="keywordtype">REAL</span>    :: DCOEF_AV_3(nbox)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      <span class="keywordtype">REAL</span>    :: EB_AV_0(nbox)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;      <span class="keywordtype">REAL</span>    :: EB_AV_3(nbox)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordtype">REAL</span>    :: EIM_AV_0(nbox)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      <span class="keywordtype">REAL</span>    :: EIM_AV_3(nbox)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      <span class="keywordtype">REAL</span>    :: EIN(nbox)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      <span class="keywordtype">REAL</span>    :: SN_AV_0(nbox)</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      <span class="keywordtype">REAL</span>    :: SN_AV_3(nbox)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      <span class="keywordtype">REAL</span>    :: AR(nbox)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      <span class="keywordtype">REAL</span>    :: SR_AV_0(nbox)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      <span class="keywordtype">REAL</span>    :: SR_AV_3(nbox)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      <span class="keywordtype">REAL</span>    :: VDEP_AV_0(nbox)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      <span class="keywordtype">REAL</span>    :: VDEP_AV_3(nbox)</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;      <span class="keywordtype">REAL</span>    :: MTOT(nbox)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;      <span class="keywordtype">REAL</span>    :: MCPTOT(nbox)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      <span class="keywordtype">REAL</span>    :: TERM1(nbox)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;      <span class="keywordtype">REAL</span>    :: NEWN(nbox)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      <span class="keywordtype">REAL</span>    :: DZMID(nbox)</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      <span class="keywordtype">REAL</span>    :: DZ(nbox)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">!      REAL, PARAMETER :: YR(9)    = (/0.57,0.56,0.54,0.54,0.54,         &amp;</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">!                                      0.56,0.50,0.54,0.54/)</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">!      REAL, PARAMETER :: CR(9)    = (/5.0e-3,2.0e-3,2.0e-3,2.0e-3,0.01, &amp;</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">!                                      1.5e0 ,0.0e0 ,0.0e0 ,0.0e0/)</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">!      REAL, PARAMETER :: ALPHA(9) = (/0.70,1.05,1.20,1.02,1.30,         &amp;</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">!                                      1.50,100.0,50.0,50.0/)</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: YR(9)    = (/0.56,0.56,0.54,0.54,0.54,         &amp;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                      0.56,0.50,0.54,0.54/)</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: CR(9)    = (/5.0e-3,5.0e-3,2.0e-3,2.0e-3,0.01, &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                                      1.5e0 ,0.0e0 ,0.0e0 ,0.0e0/)</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: ALPHA(9) = (/1.00,1.00,1.20,1.02,1.30,         &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                                      1.50,100.0,50.0,50.0/)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">! here changed land-use categories 1/2 (trees) to match values used</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">! for forest in 5-LS-category representation (should match then).</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">! Now set to match 9 UM Land-use types (ILSCAT)      YR  ALPHA  CR</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">! 1=BL tree  (Zhang cat=avg of 2,4) [Evrgrn,Dec BL] 0.57  0.70 0.005</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">! 2=NL tree  (Zhang cat=avg of 1,3) [Evrgrn,Dec NL] 0.56  1.05 0.002</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">! 1=BL tree  (Zhang cat=avg of 2,4) [Evrgrn,Dec BL] 0.56  1.00 0.005</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">! 2=NL tree  (Zhang cat=avg of 1,3) [Evrgrn,Dec NL] 0.56  1.00 0.005</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">! 3=C3 grass (Zhang cat=6)          [grass        ] 0.54  1.20 0.002</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">! 4=C4 grass (Zhang cat=6)          [grass        ] 0.54  1.20 0.002</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">! 5=Shrub    (Zhang cat=10)         [shrub i. wood] 0.54  1.30 0.010</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">! 6=Urban    (Zhang cat=15)         [urban        ] 0.56  1.50 1.500</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">! 7=Water    (Zhang cat=13/14)      [inl wat/ocean] 0.50 100.0 0.000</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">! 8=Soil     (Zhang cat=8)          [desert       ] 0.54 50.00 0.000</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">! 9=Ice      (Zhang cat=12)         [ice cap/glac.] 0.54 50.00 0.000</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">! ILSCAT is now an input to this routine and passed in to UKCA_AERO_STEP</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">!!      REAL, PARAMETER :: YR(5) = (/  0.5, 0.56, 0.54,0.0,0.54/)</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">!!      REAL, PARAMETER :: CR(5) = (/ 0.00,5.E-3,2.E-3,0.0,0.00/)</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">!!      REAL, PARAMETER :: ALPHA(5) = (/100.0,  1.0,  1.2,0.0,50.0/)</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">! Previously used code below to set ILSCAT based on roughness length</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">! as either 1 = water/sea, 2= forest, 3 = all other land</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">!           4 = desert (not used), 5 = sea ice</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">! and used values from Zhang et al (2001) for YR (gamma in paper),</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">!                                             ALPHA</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">!                                             CR (A in paper)</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">! BELOW IS OLD TREATMENT                            YR   ALPHA    CR</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">! 1=water  (Zhang cat=13/14)[inland water/ocean  ] 0.50  100.0   0.000</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">! 2=forest (Zhang cat=1    )[evergreen needleleaf] 0.56    1.0   0.005</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">! 3=o land (Zhang cat=6/7  )[grass/crops         ] 0.54    1.2   0.002</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">! 4=desert (Zhang cat=8    )[desert              ] 0.54   50.0   0.000</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">! 5=seaice (Zhang cat=12   )[ice cap &amp; glacier   ] 0.54   50.0   0.000</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">! Find out what category (water,forest,grass,desert)</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">! based on roughness length znot (desert not used at present)</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">! This should be updated in later version to read land type</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">! category directly. Desert not represented here.</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">!! water/sea - z0&lt;0.001m</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">!!      MASK1(:)=(ZNOT(:) &lt; 1.0E-3) ! water/sea</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">!!      WHERE(MASK1(:)) ILSCAT(:)=1</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">!!</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">!! forests - z0&gt;0.1m</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">!!      MASK1(:)=(ZNOT(:) &gt; 1.0E-1) ! forest</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">!!      WHERE(MASK1(:)) ILSCAT(:)=2</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">!!</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">!! all other lands, grass 0.001&lt;z0&lt;0.1m</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">!!      MASK1(:)=((ZNOT(:) &gt;= 1.0E-3).AND.(ZNOT(:) &lt;= 1.0E-1)) ! grass</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">!!      WHERE(MASK1(:)) ILSCAT(:)=3</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">!!</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">!! If sea ice covers &gt; 50% of sea surface, treat as sea ice</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">!!      MASK1(:)=(SEAICE(:) &gt; 0.5) ! seaice</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">!!      WHERE(MASK1(:)) ILSCAT(:)=5</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_DDEPAER&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;      dzmid(:)=(ra*t(:)/gg)*log(plower(:)/pmid(:))</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;      dz(:)=(ra*t(:)/gg)*log(plower(:)/pupper(:))</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">! .. Calculate aerodynamic resistance</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;      ar(:)=log(dzmid(:)/znot(:))/(vkarmn*ustr(:))</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">!    Loop over modes</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;      <span class="keywordflow">DO</span> imode=1,nmodes</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;       <span class="keywordflow">IF</span>(mode(imode)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">!       Calculate 0th moment avg. grav. settling velocities</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">! DEPENDS ON: ukca_vgrav_av_k</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <span class="keyword">CALL </span><a class="code" href="ukca__vgrav__av__k_8f90.xhtml#ac9c4b1e0a9b821a5a9d100435902a44e" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_vgrav_av_k</a>(nbox,0,wetdp(:,imode),sigmag(imode),       &amp;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            dvisc(:),mfpa(:),rhopar(:,imode),vgrav_av_0(:))</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">!       Calculate 3rd moment avg. grav. settling velocities</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">! DEPENDS ON: ukca_vgrav_av_k</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        <span class="keyword">CALL </span><a class="code" href="ukca__vgrav__av__k_8f90.xhtml#ac9c4b1e0a9b821a5a9d100435902a44e" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_vgrav_av_k</a>(nbox,3,wetdp(:,imode),sigmag(imode),       &amp;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            dvisc(:),mfpa(:),rhopar(:,imode),vgrav_av_3(:))</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">!       Calculate 0th moment avg particle diffusion coeffs</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">! DEPENDS ON: ukca_dcoff_par_av_k</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <span class="keyword">CALL </span><a class="code" href="ukca__dcoff__par__av__k_8f90.xhtml#af3a51dd40a6a2e4df21796adf635e159" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_dcoff_par_av_k</a>(nbox,0,wetdp(:,imode),sigmag(imode),   &amp;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                 t(:),dvisc(:),mfpa(:),dcoef_av_0(:))</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">!       Calculate 3rd moment avg particle diffusion coeffs</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">! DEPENDS ON: ukca_dcoff_par_av_k</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="keyword">CALL </span><a class="code" href="ukca__dcoff__par__av__k_8f90.xhtml#af3a51dd40a6a2e4df21796adf635e159" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_dcoff_par_av_k</a>(nbox,3,wetdp(:,imode),sigmag(imode),   &amp;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                 t(:),dvisc(:),mfpa(:),dcoef_av_3(:))</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">!      Calculate kinematic viscosity of air</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        kvisc(:)=dvisc(:)/rhoa(:)</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">!      Calculate 0th and 3rd moment avg. particle Schmidt number</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        ps_av_0(:)=kvisc(:)/dcoef_av_0(:)</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        ps_av_3(:)=kvisc(:)/dcoef_av_3(:)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">!      Calculate particle collection efficiencies</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">!       -- For Brownian Diffusion</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        eb_av_0(:)=ps_av_0(:)**(-yr(ilscat(:)))</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        eb_av_3(:)=ps_av_3(:)**(-yr(ilscat(:)))</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">! In new version, using 9 UM landsurf types,</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">! Set smooth surfaces to be water (7), soil (8) or ice (9)</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">! All other surfaces are vegetated (have CR&gt;0)</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        mask_smoo=( (ilscat(:) &gt;= 7).AND.(ilscat(:) &lt;= 9) )</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        mask_vege=.NOT.mask_smoo(:)</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment">!! Below is as in previous version using 5 landsurf types</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">!        MASK_SMOO=( (ILSCAT(:) == 1).OR.(ILSCAT(:) == 5) )</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment">!        MASK_VEGE=( (ILSCAT(:) == 2).OR.(ILSCAT(:) == 3) )</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">!       -- For Impaction</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <span class="keywordflow">WHERE</span>(mask_smoo(:))</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">!        Calculate stokes number for smooth surfaces</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;         sn_av_0(:)=vgrav_av_0(:)*ustr(:)*ustr(:)/dvisc(:)</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;         sn_av_3(:)=vgrav_av_3(:)*ustr(:)*ustr(:)/dvisc(:)</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="keywordflow">        ENDWHERE</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <span class="keywordflow">WHERE</span>(mask_vege(:))</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment">!        Calculate stokes number for vegetated surfcaes</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;         sn_av_0(:)=vgrav_av_0(:)*ustr(:)/(gg*cr(ilscat(:)))</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;         sn_av_3(:)=vgrav_av_3(:)*ustr(:)/(gg*cr(ilscat(:)))</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="keywordflow">        ENDWHERE</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        eim_av_0(:)=(sn_av_0(:)/(alpha(ilscat(:))+sn_av_0(:)))**2</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        eim_av_3(:)=(sn_av_3(:)/(alpha(ilscat(:))+sn_av_3(:)))**2</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">!       -- For Interception</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <span class="keywordflow">WHERE</span>(mask_smoo(:))</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;         ein(:)=0.0</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="keywordflow">        ENDWHERE</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        <span class="keywordflow">WHERE</span>(mask_vege(:))</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;         ein(:)=0.5*(wetdp(:,imode)*wetdp(:,imode)                      &amp;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                    /cr(ilscat(:))/cr(ilscat(:)))</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="keywordflow">        ENDWHERE</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment">!       Calculate surface resistance</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        sr_av_0(:)=1.0/(3.0*ustr(:)*(eb_av_0(:)+eim_av_0(:)+ein(:)))</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        sr_av_3(:)=1.0/(3.0*ustr(:)*(eb_av_3(:)+eim_av_3(:)+ein(:)))</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">!       Calculate deposition velocity</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        vdep_av_0(:)=vgrav_av_0(:)+1.0/(ar(:)+sr_av_0(:))</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        vdep_av_3(:)=vgrav_av_3(:)+1.0/(ar(:)+sr_av_3(:))</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        masksurf(:)=(surtp(:) &lt; 2.0) <span class="comment">! boxes at surface.</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        mask3(:)=(nd(:,imode) &gt; num_eps(imode))</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        mask4(:)=mask3(:).AND.masksurf(:) <span class="comment">! also at surface</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <span class="keywordflow">WHERE</span>(mask4(:)) <span class="comment">! only do at surface &amp; where some particles</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;         delnddep(:)=nd(:,imode)*(1.0-exp(-vdep_av_0(:)*dtc/dz(:)))</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">!        Set updated particle concentration to NEWN</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;         newn(:)=nd(:,imode)-delnddep(:)</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">!        Update total mass per particle MDT</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;         mtot(:)=nd(:,imode)*mdt(:,imode)</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;         mdt(:,imode)=mtot*exp(-vdep_av_3(:)*dtc/dz(:))/newn(:)</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="keywordflow">        ENDWHERE</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="keywordflow">DO</span> icp=1,ncp</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;         <span class="keywordflow">IF</span>(component(imode,icp)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;          <span class="keywordflow">WHERE</span>(mask4(:)) <span class="comment">! only do at surface &amp; where some particles</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;           mcptot(:)=nd(:,imode)*md(:,imode,icp)</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;           term1(:)=exp(-vdep_av_3(:)*dtc/dz(:))</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;           md(:,imode,icp)=mcptot(:)*term1(:)/newn(:)</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;           delmddep(:)=mcptot(:)*(1.0-term1(:))</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="keywordflow">          ENDWHERE</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">! .. only store budgets at surface &amp; where some particles</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;          <span class="keywordflow">IF</span>(icp == cp_su) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;           <span class="keywordflow">IF</span>((imode == 1).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#ad96995a8c6d639481c63fccc1b81ecc1">nmasddepsunucsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#ad96995a8c6d639481c63fccc1b81ecc1">nmasddepsunucsol</a>)=                           &amp;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#ad96995a8c6d639481c63fccc1b81ecc1">nmasddepsunucsol</a>)+delmddep(:)</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;           <span class="keywordflow">IF</span>((imode == 2).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a88dd216ba69738a8592fee17693f4604">nmasddepsuaitsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a88dd216ba69738a8592fee17693f4604">nmasddepsuaitsol</a>)=                           &amp;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a88dd216ba69738a8592fee17693f4604">nmasddepsuaitsol</a>)+delmddep(:)</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;           <span class="keywordflow">IF</span>((imode == 3).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a25f5252d7da668db6782bec1e01ccaad">nmasddepsuaccsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a25f5252d7da668db6782bec1e01ccaad">nmasddepsuaccsol</a>)=                           &amp;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a25f5252d7da668db6782bec1e01ccaad">nmasddepsuaccsol</a>)+delmddep(:)</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;           <span class="keywordflow">IF</span>((imode == 4).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#aac5949da112a3b78456ef22a7a95b2d2">nmasddepsucorsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#aac5949da112a3b78456ef22a7a95b2d2">nmasddepsucorsol</a>)=                           &amp;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#aac5949da112a3b78456ef22a7a95b2d2">nmasddepsucorsol</a>)+delmddep(:)</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;          <span class="keywordflow">IF</span>(icp == cp_bc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;           <span class="keywordflow">IF</span>((imode == 2).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a5fd0ea35da26543b032d2423e0c82c94">nmasddepbcaitsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a5fd0ea35da26543b032d2423e0c82c94">nmasddepbcaitsol</a>)=                           &amp;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a5fd0ea35da26543b032d2423e0c82c94">nmasddepbcaitsol</a>)+delmddep(:)</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;           <span class="keywordflow">IF</span>((imode == 3).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a8a0b70682e4aeb7b76a919c8e1e5b1b5">nmasddepbcaccsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a8a0b70682e4aeb7b76a919c8e1e5b1b5">nmasddepbcaccsol</a>)=                           &amp;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a8a0b70682e4aeb7b76a919c8e1e5b1b5">nmasddepbcaccsol</a>)+delmddep(:)</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;           <span class="keywordflow">IF</span>((imode == 4).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a4b6424940dc47ce6440469185df5ba48">nmasddepbccorsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a4b6424940dc47ce6440469185df5ba48">nmasddepbccorsol</a>)=                           &amp;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a4b6424940dc47ce6440469185df5ba48">nmasddepbccorsol</a>)+delmddep(:)</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;           <span class="keywordflow">IF</span>((imode == 5).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#adf97c999c97cd1bc706c82ddb27bed59">nmasddepbcaitins</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#adf97c999c97cd1bc706c82ddb27bed59">nmasddepbcaitins</a>)=                           &amp;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#adf97c999c97cd1bc706c82ddb27bed59">nmasddepbcaitins</a>)+delmddep(:)</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;          <span class="keywordflow">IF</span>(icp == cp_oc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;           <span class="keywordflow">IF</span>((imode == 1).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#aa3f0928f4bc3cbe69bb9923df4a5ff39">nmasddepocnucsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#aa3f0928f4bc3cbe69bb9923df4a5ff39">nmasddepocnucsol</a>)=                           &amp;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#aa3f0928f4bc3cbe69bb9923df4a5ff39">nmasddepocnucsol</a>)+delmddep(:)</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;           <span class="keywordflow">IF</span>((imode == 2).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a5a3789c38d95409f7dc4c36a7b0af3b9">nmasddepocaitsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a5a3789c38d95409f7dc4c36a7b0af3b9">nmasddepocaitsol</a>)=                           &amp;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a5a3789c38d95409f7dc4c36a7b0af3b9">nmasddepocaitsol</a>)+delmddep(:)</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;           <span class="keywordflow">IF</span>((imode == 3).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#ab3d0b945445d49f6238422258e8f7e52">nmasddepocaccsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#ab3d0b945445d49f6238422258e8f7e52">nmasddepocaccsol</a>)=                           &amp;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#ab3d0b945445d49f6238422258e8f7e52">nmasddepocaccsol</a>)+delmddep(:)</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;           <span class="keywordflow">IF</span>((imode == 4).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#ac061b061a1f0f90358fc7fc016fd18ea">nmasddepoccorsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#ac061b061a1f0f90358fc7fc016fd18ea">nmasddepoccorsol</a>)=                           &amp;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#ac061b061a1f0f90358fc7fc016fd18ea">nmasddepoccorsol</a>)+delmddep(:)</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;           <span class="keywordflow">IF</span>((imode == 5).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#ab0a8e70b29506f2e2d121a5c5b55830b">nmasddepocaitins</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#ab0a8e70b29506f2e2d121a5c5b55830b">nmasddepocaitins</a>)=                           &amp;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#ab0a8e70b29506f2e2d121a5c5b55830b">nmasddepocaitins</a>)+delmddep(:)</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;          <span class="keywordflow">IF</span>(icp == cp_cl) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;           <span class="keywordflow">IF</span>((imode == 3).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a0a65c27fc89c1bf0d8e7ac1134792389">nmasddepssaccsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a0a65c27fc89c1bf0d8e7ac1134792389">nmasddepssaccsol</a>)=                           &amp;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a0a65c27fc89c1bf0d8e7ac1134792389">nmasddepssaccsol</a>)+delmddep(:)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;           <span class="keywordflow">IF</span>((imode == 4).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a4419f9615a591d7db374b7a218c3be0f">nmasddepsscorsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a4419f9615a591d7db374b7a218c3be0f">nmasddepsscorsol</a>)=                           &amp;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a4419f9615a591d7db374b7a218c3be0f">nmasddepsscorsol</a>)+delmddep(:)</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;          <span class="keywordflow">IF</span>(icp == cp_so) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;           <span class="keywordflow">IF</span>((imode == 1).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a3aa7c8238a4419b977b7eb0380f5ad48">nmasddepsonucsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a3aa7c8238a4419b977b7eb0380f5ad48">nmasddepsonucsol</a>)=                           &amp;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a3aa7c8238a4419b977b7eb0380f5ad48">nmasddepsonucsol</a>)+delmddep(:)</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;           <span class="keywordflow">IF</span>((imode == 2).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a6e82edb7aa22803d2b1713f6d3c672d2">nmasddepsoaitsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a6e82edb7aa22803d2b1713f6d3c672d2">nmasddepsoaitsol</a>)=                           &amp;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a6e82edb7aa22803d2b1713f6d3c672d2">nmasddepsoaitsol</a>)+delmddep(:)</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;           <span class="keywordflow">IF</span>((imode == 3).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#aa86970d314aa290f03fec68fccac1551">nmasddepsoaccsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#aa86970d314aa290f03fec68fccac1551">nmasddepsoaccsol</a>)=                           &amp;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#aa86970d314aa290f03fec68fccac1551">nmasddepsoaccsol</a>)+delmddep(:)</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;           <span class="keywordflow">IF</span>((imode == 4).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#abe4081143d07100238a09327963225d4">nmasddepsocorsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#abe4081143d07100238a09327963225d4">nmasddepsocorsol</a>)=                           &amp;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#abe4081143d07100238a09327963225d4">nmasddepsocorsol</a>)+delmddep(:)</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;          <span class="keywordflow">IF</span>(icp == cp_du) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;           <span class="keywordflow">IF</span>((imode == 3).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a302db948b635ceab900d7fa9f04c3e6f">nmasddepduaccsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a302db948b635ceab900d7fa9f04c3e6f">nmasddepduaccsol</a>)=                           &amp;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a302db948b635ceab900d7fa9f04c3e6f">nmasddepduaccsol</a>)+delmddep(:)</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;           <span class="keywordflow">IF</span>((imode == 4).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a99051ca36f549bfa95f80cf7dbab64a8">nmasddepducorsol</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a99051ca36f549bfa95f80cf7dbab64a8">nmasddepducorsol</a>)=                           &amp;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a99051ca36f549bfa95f80cf7dbab64a8">nmasddepducorsol</a>)+delmddep(:)</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;           <span class="keywordflow">IF</span>((imode == 6).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a4738db656342b20f31f18643acb7f8ef">nmasddepduaccins</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a4738db656342b20f31f18643acb7f8ef">nmasddepduaccins</a>)=                           &amp;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a4738db656342b20f31f18643acb7f8ef">nmasddepduaccins</a>)+delmddep(:)</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;           <span class="keywordflow">IF</span>((imode == 7).AND.(<a class="code" href="namespaceukca__setup__indices.xhtml#a02b5ce7910ba5dd6559d3c018816dc67">nmasddepducorins</a> &gt; 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            <span class="keywordflow">WHERE</span>(mask4(:))                                             &amp;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a02b5ce7910ba5dd6559d3c018816dc67">nmasddepducorins</a>)=                           &amp;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;             bud_aer_mas(:,<a class="code" href="namespaceukca__setup__indices.xhtml#a02b5ce7910ba5dd6559d3c018816dc67">nmasddepducorins</a>)+delmddep(:)</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="keywordflow">         END IF</span> <span class="comment">! if component present in mode</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! loop over components</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="comment">!       Update number concentration to NEW</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="comment">!        (only do at surface &amp; where some particles)</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        <span class="keywordflow">WHERE</span>(mask4(:)) nd(:,imode)=newn(:)</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;<span class="keywordflow">       END IF</span> <span class="comment">! if mode present</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">! loop over modes</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_DDEPAER&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="ukca__ddepaer_8f90.xhtml#a6f6abb7ca02fe47bddf4b36650bfeda9" title="(c) [University of Leeds] [2008]. All rights reserved. ">ukca_ddepaer</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
