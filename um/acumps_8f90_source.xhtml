<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/top_level/acumps.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_b65d766d7948d607099cfdc8ce198b76.xhtml">top_level</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">acumps.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="acumps_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="acumps_8f90.xhtml#a7ab6e3bfd6511ded5be9a74e862978bb" title="LL. ">acumps</a>(                                                &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;     &amp;  N_OBJS_D1,D1_ADDR                                               &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;     &amp;  ,LEN_DATA,D1                                                    &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;     &amp;  ,MAXSIZE,MEANS_TOTAL                                            &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;     &amp;  ,FLAG,NFTIN,NFTOUT,LCLIMREALYR,MEANLEV                          &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;     &amp;  ,I_MONTH,I_YEAR                                                 &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;     &amp;  ,HEAD_OUT,HEAD_LEN,HEAD_SIZE,                                   &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;     &amp;  TIMESTEP,CMITEMS,FIXHD12,                                       &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;#include &quot;argsts.h&quot;</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="acumps_8f90.xhtml#a7ab6e3bfd6511ded5be9a74e862978bb">   25</a></span>&#160;     &amp;  ICODE,CMESSAGE)</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacetypstsz__mod.xhtml" title="This file belongs in section: Top_level This file belongs in section: Top_level. ">typstsz_mod</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;          <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;          <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;d1_addr.h&quot;</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span>      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;     &amp;  N_OBJS_D1               <span class="comment">!IN No objects in D1 array</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;     &amp;  D1_ADDR(D1_LIST_LEN,N_OBJS_D1) <span class="comment">!IN Addressing of D1 array</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;     &amp;  MAXSIZE,                                                        &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                <span class="comment">! IN dimension of largest data field</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;     &amp;  len_data,                                                       &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                <span class="comment">! IN Length of model data</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;     &amp;  flag,                                                           &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                <span class="comment">! IN Flag for reading partial sum dump</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;     &amp;  nftin,                                                          &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                <span class="comment">! IN Unit no for reading partial sums</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;     &amp;  nftout,                                                         &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                <span class="comment">! IN Unit no for writing partial sums</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;     &amp;  icode,                                                          &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                <span class="comment">! OUT Return code; successful=0</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                <span class="comment">!                  error&gt;0</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;     &amp;  meanlev,                                                        &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                <span class="comment">! IN level of climate meaning</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;     &amp;  means_total,                                                    &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                <span class="comment">! IN Indicates a meaning period</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;     &amp;  i_month,                                                        &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                <span class="comment">! IN Current model time (months)</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;     &amp;  i_year,                                                         &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                <span class="comment">! IN Current model time (years)</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;     &amp;  fixhd12,                                                        &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                <span class="comment">! IN Version of model</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;     &amp;  cmitems,                                                        &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                <span class="comment">! IN Number of items being meaned</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;     &amp;  timestep                <span class="comment">! IN Submodel timestep</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keywordtype">CHARACTER(LEN=80)</span>                                                   &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;     &amp;       CMESSAGE             <span class="comment">! OUT Error message if ICODE&gt;0</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;     <span class="keywordtype">REAL</span>                                                               &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;     &amp;  D1(LEN_DATA)            <span class="comment">! IN/OUT Real equivalence of data block</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;     <span class="keywordtype">LOGICAL</span>                                                            &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;     &amp;  LCLIMREALYR             <span class="comment">! IN Real-period climate meaning</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typsize.h&quot;</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typsts.h&quot;</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;stparam.h&quot;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor"></span>      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;     &amp;  HEAD_LEN                                                        &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;     &amp;  ,HEAD_SIZE</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;     &amp;  HEAD_OUT(HEAD_LEN,TOTITEMS)                                     &amp;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                    <span class="comment">! IN Header contains packing</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                                <span class="comment">!    info for output ps file</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;     &amp;  ,head_buf(head_size)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">! HEAD_OUT(3,*): No of words per level on disk</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">!      Local variables</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;     &amp;  I,J,K                                                           &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                <span class="comment">! Loop indices</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;     &amp;  ,len_io                                                         &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                <span class="comment">! Actual IO length</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;     &amp;  ,citems                                                         &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                <span class="comment">! Count variable</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;     &amp;  ,periodlen                                                      &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                <span class="comment">! Current meaning period in days</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;     &amp;  ,tag                                                            &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                <span class="comment">! Stash tag</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;     &amp;  ,ptd1                                                           &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                <span class="comment">! Pointer to D1_ADDR information</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;     &amp;  ,address                                                        &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                                <span class="comment">! Address in local D1</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;     &amp;  ,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>                                                         &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                <span class="comment">! Number of levels per diagnostic</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;     &amp;  ,<a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a>                                                         &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                <span class="comment">! Length of each level in local D1</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;     &amp;  ,global_length                                                  &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                                <span class="comment">! Length of global field</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;     &amp;  ,offset                 <span class="comment">! Indexing offset for WORK array</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;     &amp;  HEADER(2)                                                       &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                <span class="comment">! Initial header</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;     &amp;  ,head_in(head_len,cmitems) <span class="comment">! Packing info for input ps file</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                                <span class="comment">! Will differ from HEAD_OUT if packing</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                <span class="comment">! codes have changed mid-run</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;     &amp;  IOSTAT,                                                         &amp;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                                <span class="comment">! IO error code</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;     &amp;  realperiodlen,                                                  &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                                <span class="comment">! explicitly real equivalent</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                <span class="comment">! of PERIODLEN</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;     &amp;  awork,                                                          &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                <span class="comment">! Accumulative sum for WORK array</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;     &amp;  cwork,                                                          &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                                <span class="comment">! Accumulative sum for WORK array</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;     &amp;  ckwork,                                                         &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                <span class="comment">! Checksum for WORK array</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;     &amp;  ckworko                 <span class="comment">! Packed CKWORK</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">!      Local arrays</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;     &amp;  D1_DATA(MAXSIZE)        <span class="comment">! Work area for fields</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;     &amp;  WORK(MAXSIZE+4)        <span class="comment">! Work area and IO buffer</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">! Align for well-formed io</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">!dir$ cache_align work</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ACUMPS&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="keywordflow">IF</span> (icode /= 0) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">! Arrays sent to BUFFIN/BUFFOUT need to be cache aligned for</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">! well-formed io to work, but the cache_align directive wasn&#39;t working</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">! correctly for WORK. The following adds an offset to the index of</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">! WORK which resolves the problem.</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">! This is an offset from 0, so an offset of 1 really means no offset!</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      offset=1</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">!   Set up variables needed for weighting accumulations if real-period</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">!   climate meaning is selected. Partial sums are normalised elsewhere.</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="keywordflow">if</span> (lclimrealyr) <span class="keywordflow">then</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">! DEPENDS ON: setperlen</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keyword">call </span><a class="code" href="setperlen_8f90.xhtml#ae96974b2c899ee7ca8c394390e885083" title="LL SUBROUTINE SETPERLEN. ">setperlen</a>(meanlev,i_month,i_year,periodlen)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        realperiodlen=<span class="keywordtype">real</span>(periodlen)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">! STEP 1: Read in headers of previous partial sum and write out</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">!         header of new.</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <span class="keywordflow">IF</span> (flag /= 1) <span class="keywordflow">THEN</span>       <span class="comment">! PS data exist on disk</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">! Read headers for input partial sum file</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keyword">CALL </span>buffin(nftin,head_buf,head_size,len_io,iostat)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">IF</span>(iostat /= -1.0.OR.len_io /= head_size)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;ACUMPS: Error reading header: IO code &#39;</span>,           &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;     &amp;      iostat,<span class="stringliteral">&#39; on unit &#39;</span>,nftin</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Words requested &#39;</span>,head_size,                       &amp;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;     &amp;      <span class="stringliteral">&#39; Words read &#39;</span>,len_io</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;          icode=1</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;          cmessage=<span class="stringliteral">&#39;ACUMPS: BUFFIN error - see output&#39;</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;          <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">! Transfer header information from buffer to header arrays</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        header(1)=head_buf(1) <span class="comment">! Timestep of creation</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        header(2)=head_buf(2) <span class="comment">! Number of records</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=3</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">DO</span> i=1,cmitems</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;          <span class="keywordflow">DO</span> j=1,head_len</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            head_in(j,i)=head_buf(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keywordflow">          ENDDO</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordflow">        ENDDO</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keywordflow">IF</span> (header(1) &gt;= timestep.OR.header(2) /= cmitems)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;ACUMPS1: Partial sum file inconsistent&#39;</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;PS file holds &#39;</span>, &amp;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;              header(2),<span class="stringliteral">&#39; items and written at STEP &#39;</span>,header(1)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Expected timestep should be &lt; &#39;</span>,timestep</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Expected number of items &#39;</span>,cmitems</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;          cmessage=<span class="stringliteral">&#39;ACUMPS1: Partial sum file inconsistent. See Output&#39;</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;          icode=2</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;          <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keywordflow">        ENDIF</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">! No input sum, so initialise header array</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keywordflow">DO</span> i=1,head_size</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;          head_buf(i)=0</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keywordflow">        ENDDO</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">! Write headers for new partial sum file</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">! Transfer information to io buffer</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      head_buf(1)=timestep</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      head_buf(2)=cmitems</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=3</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      <span class="keywordflow">DO</span> i=1,cmitems</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">DO</span> j=1,head_len</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;          head_buf(<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)=head_out(j,i)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;          <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>+1</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keywordflow">        ENDDO</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      <span class="keyword">CALL </span>buffout(nftout,head_buf,head_size,len_io,iostat)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;      <span class="keywordflow">IF</span>(iostat /= -1.0.OR.len_io /= head_size)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;ACUMPS: Error writing header: IO code &#39;</span>,             &amp;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;     &amp;    iostat,<span class="stringliteral">&#39; on unit &#39;</span>,nftout</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Words requested &#39;</span>,head_size,                         &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;     &amp;    <span class="stringliteral">&#39; Words written &#39;</span>,len_io</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        icode=4</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        cmessage=<span class="stringliteral">&#39;ACUMPS: BUFFOUT error - see output&#39;</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keywordflow">      ENDIF</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">! STEP 2 : Loop over all STASH items. For each tagged item, gather</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">!          current data to D1_DATA array, read partial sum into WORK</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">!          array (if there is a partial sum), sum the two and write</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">!          out to new partial sum file.</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">!           Also, if this is a meaning period, overwrite the field</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">!          in D1 with the complete sum, to be picked up by MEANPS.</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">!     Start of loop over STASH items</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      citems=0</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      <span class="keywordflow">DO</span> <a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>=1,<a class="code" href="namespacetypstsz__mod.xhtml#a37cf3a635bd0a87949973ea24fb6a680">totitems</a></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        tag=stlist(st_macrotag,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)/1000</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        ptd1=stlist(st_d1pos,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">IF</span>(tag/=0)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;          <span class="keywordflow">IF</span>(stlist(s_modl,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)==d1_addr(d1_imodl,ptd1))<span class="keywordflow">THEN</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">! Object tagged for climate meaning and in relevant internal model</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;          address=d1_addr(d1_address,ptd1)</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;          <a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a>=d1_addr(d1_no_levels,ptd1)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;          <a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a>=d1_addr(d1_length,ptd1)/<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;          global_length=stlist(st_dump_level_output_length,<a class="code" href="arg__atm__fields_8h.xhtml#a746e8233330aed561ffa6fdbd8b8fea9">k</a>)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;          citems=citems+1</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;          <span class="keywordflow">DO</span> j=1,<a class="code" href="s__dims_8h.xhtml#a389c5dad31c15d9a8c93844f6216e36e">levels</a></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">! Copy current field from D1 to D1_DATA</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">! by gathering full field to pe0</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">! DEPENDS ON: general_gather_field</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <span class="keyword">CALL </span><a class="code" href="general__gather__field_8f90.xhtml#a63a436a252da9e380674b97cf0f4ba86" title="Takes a general decomposed field on many processors and gathers it. ">general_gather_field</a>(                                  &amp;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;     &amp;        d1(address),d1_data,<a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a>,                               &amp;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;     &amp;        global_length,1,                                          &amp;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;     &amp;        d1_addr(1,ptd1),0,                                        &amp;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;     &amp;        -1,icode,cmessage)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <span class="keywordflow">IF</span> (icode /= 0) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="keywordflow">DO</span> i=global_length+1,maxsize</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;              d1_data(i)=0.</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keywordflow">            ENDDO</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">! Set initial value for AWORK and CWORK</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            awork=0.0</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            cwork=0.0</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">! If partial sum exists on disk, read it in and add to current field</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="keywordflow">IF</span> (flag /= 1) <span class="keywordflow">THEN</span> <span class="comment">! PS data exist on disk</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">! Read in one level of partial sum field</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;              <span class="keywordflow">IF</span> (head_in(2,citems)  ==  2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">! Data is packed using CRAY 32 bit method - note that we need to read</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">! in 2*HEAD_IN(3,CITEMS) 32 bit words using BUFFIN32_f77 (because the! array is 64 bit)</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">! DEPENDS ON : buffin32_f77</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                 <span class="keyword">CALL </span><a class="code" href="buffin32__f77_8f90.xhtml#aea6da9e73456e731b71767f2bb9cdeae" title="Code Owner: See Unified Model Code owners HTML page. ">buffin32_f77</a>(nftin,work(offset:), &amp;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                      2*head_in(3,citems),len_io,iostat)</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">! And then halve LEN_IO to satisfy tests against HEAD_IN(3,CITEMS)</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                len_io = len_io/2</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;              <span class="keywordflow">ELSE</span> <span class="comment">! For non-packed data</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                 <span class="keyword">CALL </span>buffin(nftin,work(offset:),head_in(3,citems)        &amp;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;     &amp;            ,len_io,iostat)</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;              <span class="keywordflow">IF</span>(iostat /= -1.0.OR.len_io /= head_in(3,citems))<span class="keywordflow">THEN</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;ACUMPS: Error reading partial sum IO code &#39;</span>, &amp;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;     &amp;            iostat,<span class="stringliteral">&#39; on unit &#39;</span>,nftin</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Words requested &#39;</span>,head_in(3,citems),         &amp;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;     &amp;            <span class="stringliteral">&#39; Words read &#39;</span>,len_io</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                icode=6</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                cmessage=<span class="stringliteral">&#39;ACUMPS: BUFFIN error - see output&#39;</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;              <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">! Valid data exists on pe0 only</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">! Unpack if data on disk was packed</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                <span class="keywordflow">IF</span> (head_in(2,citems) == 2)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">! DEPENDS ON: expand32b</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="expand32b_8f90.xhtml#a4aed0593daf78b34069982f040043a6f" title="SUBROUTINE EXPAND32B-!&gt; Purpose: Expands from 32 to 64 bit for dump reading routines. ">expand32b</a>(global_length+1,work(offset),fixhd12)</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">! Calculate a checksum</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                  <span class="keywordflow">DO</span> i=1,global_length</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                    awork=awork+work(i+offset-1)</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="keywordflow">                  END DO</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                  ckwork=awork/int(global_length)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">! Pack and umpack checksum to force it losing precision in order to do</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">! the comparison</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">! DEPENDS ON: pack21</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="pack21_8f90.xhtml#a334377e0db7ced17af33d5b1e6c42290" title="SUBROUTINE PACK21. ">pack21</a>(1,ckwork,ckworko)</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">! DEPENDS ON: expand32b</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="expand32b_8f90.xhtml#a4aed0593daf78b34069982f040043a6f" title="SUBROUTINE EXPAND32B-!&gt; Purpose: Expands from 32 to 64 bit for dump reading routines. ">expand32b</a>(1,ckworko,fixhd12)</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                  <span class="keywordflow">DO</span> i=1,global_length</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                    awork=awork+work(i+offset-1)</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keywordflow">                  END DO</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                  ckworko=awork/int(global_length)</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keywordflow">                ENDIF</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                <span class="keywordflow">IF</span>(ckworko /= work(global_length+offset)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;ERROR: checksum failure in climate mean&#39;</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Section &#39;</span>,d1_addr(d1_section,ptd1), &amp;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                     <span class="stringliteral">&#39; item &#39;</span>,d1_addr(d1_item,ptd1)</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) <span class="stringliteral">&#39;This can be due to invalid values in field, &#39;</span>, &amp;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                     <span class="stringliteral">&#39;or corruption of partial sum file&#39;</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                  <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Remove or fix diagnostic, and rerun&#39;</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                  icode=4</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                  cmessage=<span class="stringliteral">&#39;ACUMPS: Diagnostic error. See output for item no.&#39;</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                  <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keywordflow">                ENDIF</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">! Sum with field in D1 - Scale data if 365 day calendar</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                <span class="keywordflow">IF</span> (lclimrealyr)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                  <span class="keywordflow">DO</span> i=1,global_length</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                    <span class="keywordflow">IF</span> (work(i+offset-1) == rmdi)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                      d1_data(i)=rmdi</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                      d1_data(i)=work(i+offset-1)+                      &amp;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;     &amp;                  (realperiodlen*d1_data(i))</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="keywordflow">                    ENDIF</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keywordflow">                  END DO</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">! 360 day calendar</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                  <span class="keywordflow">DO</span> i=1,global_length</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                    <span class="keywordflow">IF</span> (work(i+offset-1) == rmdi)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                      d1_data(i)=rmdi</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                      d1_data(i)=work(i+offset-1)+d1_data(i)</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="keywordflow">                    ENDIF</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="keywordflow">                  END DO</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="keywordflow">                ENDIF</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">! First data for this period - no partial sum to add</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;              <span class="keywordflow">IF</span> (lclimrealyr)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">! Scale initial data if 365 day calendar</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                  <span class="keywordflow">DO</span> i=1,global_length</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                    <span class="keywordflow">IF</span> (d1_data(i) /= rmdi)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                      d1_data(i)=realperiodlen*d1_data(i)</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="keywordflow">                    ENDIF</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keywordflow">                  END DO</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="keywordflow">                ENDIF</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="keywordflow">            ENDIF</span> <span class="comment">! End of adding PS data</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment">!         Write out sum to PS file</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">! Copy data to WORK array, packing if necessary</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;              <span class="keywordflow">IF</span> (head_out(2,citems) == 2)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                <span class="keywordflow">DO</span> i=head_out(1,citems),maxsize</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                  work(i+offset-1)=0.</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="keywordflow">                ENDDO</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment">! DEPENDS ON: pack21</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                <span class="keyword">CALL </span><a class="code" href="pack21_8f90.xhtml#a334377e0db7ced17af33d5b1e6c42290" title="SUBROUTINE PACK21. ">pack21</a>(global_length+1,d1_data,                    &amp;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                            work(offset))</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="comment">! DEPENDS ON: expand32b</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                <span class="keyword">CALL </span><a class="code" href="expand32b_8f90.xhtml#a4aed0593daf78b34069982f040043a6f" title="SUBROUTINE EXPAND32B-!&gt; Purpose: Expands from 32 to 64 bit for dump reading routines. ">expand32b</a>(global_length+1,work(offset),fixhd12)</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                <span class="keywordflow">DO</span> i=1,global_length</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                  cwork=cwork+work(i+offset-1)</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="keywordflow">                END DO</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                work(global_length+offset)=cwork/int(global_length)</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment">! DEPENDS ON: pack21</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                <span class="keyword">CALL </span><a class="code" href="pack21_8f90.xhtml#a334377e0db7ced17af33d5b1e6c42290" title="SUBROUTINE PACK21. ">pack21</a>(global_length+1,work(offset),               &amp;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                            work(offset) )</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">! If data not packed, calculate checksum straight away</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                <span class="keywordflow">DO</span> i=1,global_length</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                  work(i+offset-1)=d1_data(i)</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                  cwork=cwork+work(i+offset-1)</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="keywordflow">                ENDDO</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                work(global_length+offset)=cwork/int(global_length)</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment">! Output partial sum to file</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;            <span class="keywordflow">IF</span> (head_out(2,citems)  ==  2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">! Data is packed using CRAY 32 bit method - note that we need to write</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment">! out 2*HEAD_OUT(3,CITEMS) 32 bit words using BUFFOUT32_F77 (because</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">! we have a supplied 64 bit array)</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="comment">! DEPENDS ON : buffout32_f77</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;               <span class="keyword">CALL </span><a class="code" href="buffout32__f77_8f90.xhtml#a9f0c33f63718d3b06e20ab6f86e759ea" title="Code Owner: See Unified Model Code owners HTML page. ">buffout32_f77</a>(nftout,work(offset:),                  &amp;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                    2*head_out(3,citems),len_io,iostat)</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment">! And then halve LEN_IO to satisfy tests against HEAD_OUT(3,CITEMS)</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;               len_io = len_io/2</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">! For non-packed data</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;              <span class="keyword">CALL </span>buffout(nftout,work(offset:),                        &amp;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;     &amp;          head_out(3,citems),len_io,iostat)</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            <span class="keywordflow">IF</span>(iostat /= -1.0.OR.len_io /= head_out(3,citems))<span class="keywordflow">THEN</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;ACUMPS: Error writing partial sum. Code &#39;</span>,     &amp;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;     &amp;          iostat,<span class="stringliteral">&#39; on unit &#39;</span>,nftout</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Words requested &#39;</span>,head_out(3,citems),          &amp;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;     &amp;          <span class="stringliteral">&#39; Words written &#39;</span>,len_io</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;acumps&#39;</span>)</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;              icode=7</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;              cmessage=<span class="stringliteral">&#39;ACUMPS: BUFFOUT error - see output&#39;</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;              <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            <span class="keywordflow">IF</span> (means_total /= 0)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">! Overwrite field in D1 with partial sum for use by MEANPS</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;              <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a> == 0)<span class="keywordflow">then</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">! Pack and unpack for bit comparison with old system</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                <span class="keywordflow">IF</span> (head_out(2,citems) == 2)<span class="keywordflow">THEN</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                  <span class="keywordflow">DO</span> i=1,head_out(1,citems)</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                    d1_data(i)=work(i+offset-1)</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="keywordflow">                  ENDDO</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment">! DEPENDS ON: expand32b</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                  <span class="keyword">CALL </span><a class="code" href="expand32b_8f90.xhtml#a4aed0593daf78b34069982f040043a6f" title="SUBROUTINE EXPAND32B-!&gt; Purpose: Expands from 32 to 64 bit for dump reading routines. ">expand32b</a>(global_length,d1_data,fixhd12)</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="keywordflow">                ENDIF</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="keywordflow">              ENDIF</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment">! DEPENDS ON: general_scatter_field</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;              <span class="keyword">CALL </span><a class="code" href="general__scatter__field_8f90.xhtml#addbc42988fd8d40d21f64cd157ca3bbb" title="Scatters any type of field from one processor to many processors. ">general_scatter_field</a>(                               &amp;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;     &amp;         d1(address),d1_data,<a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a>,global_length,1,              &amp;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;     &amp;          d1_addr(1,ptd1),0,icode,cmessage)</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;              <span class="keywordflow">IF</span> (icode /= 0) <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            address=address + <a class="code" href="s__dims_8h.xhtml#abd31de505e29e6e5c7b5c9c36c68ecab">length</a> <span class="comment">! Point to next level</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="keywordflow">          ENDDO</span>                 <span class="comment">! End loop over levels</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="keywordflow">        ENDIF</span>                   <span class="comment">! End tagged for meaning</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="keywordflow">      END DO</span>                    <span class="comment">! End of loop over STASH list</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160; 9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ACUMPS&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="acumps_8f90.xhtml#a7ab6e3bfd6511ded5be9a74e862978bb" title="LL. ">acumps</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
