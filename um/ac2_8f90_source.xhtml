<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/AC_assimilation/ac2.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_5477e5296db3a3418fff85838c21a0ef.xhtml">AC_assimilation</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ac2.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ac2_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="namespaceac2__mod.xhtml">   32</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceac2__mod.xhtml" title="LL Subroutine: AC. ">ac2_mod</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="namespaceac2__mod.xhtml#a84446bf4a8399600b10e586238cc3cb6">ac2</a>(P_LEVELS, Q_LEVELS, BL_LEVELS,                     &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;     &amp;               ROW_LENGTH, P_ROWS,                                &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;     &amp;               P_FIELD,                                           &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;     &amp;               TIMESTEP_NO, ITER_NO, TIMESTEP,                    &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;     &amp;               OBS, TNDV,                                         &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;     &amp;               EXNER, PSTAR, THETA, RH, QCL, QCF,                 &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;     &amp;               CONV_CLD, LS_RAIN, LS_SNOW, CONV_RAIN, CONV_SNOW,  &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;     &amp;               D_THETA_DT_CONV,D_THETA_DT_LS,                     &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;     &amp;               LAYER_CLOUD,PRESSURE,                              &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;     &amp;               RHCRIT,                                            &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;     &amp;               OBS_NO, LENOB, NO_ANAL_LEVS, NO_WT_LEVS,           &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;     &amp;               NO_ANAL_VAR,                                       &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;     &amp;               LENAG, LENMG, WKLEN, INC_TYPE,                     &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;     &amp;               NAVT, JGROUP, LWIND, IACTF, IACTL, DG_ONLY,        &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;     &amp;               STINDEX, STLIST, LEN_STLIST, SI, SF,               &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;     &amp;               STASHWORK, STASH_LEVELS, NUM_STASH_LEVELS,         &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;     &amp;               STASH_PSEUDO_LEVELS, NUM_STASH_PSEUDO,             &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;     &amp;               lambda_p,phi_p,L_regular,                          &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;     &amp;               ICODE, CMESSAGE)</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="namespaceac2__mod.xhtml#a84446bf4a8399600b10e586238cc3cb6">   57</a></span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecomobs__mod.xhtml" title="This file belongs in section: AC Assimilation. ">comobs_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecomobs__mod.xhtml#a34b9f81bde395513b5b1053ae84c5d7d">nobtypmx</a>, <a class="code" href="namespacecomobs__mod.xhtml#afbd8f155185b549a21a27cb69473c633">obs_info</a></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacedomain__params.xhtml" title="This file belongs in section: MPP. ">domain_params</a></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceac__stash__mod.xhtml" title="LL SUBROUTINE AC_STASH -!&gt;LL. ">ac_stash_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceac__stash__mod.xhtml#ab8290977c1d67cb0d66a9fd6035bb4a1">ac_stash</a></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceaddinc__mod.xhtml" title="LL SUBROUTINES ADDINC RELAXC!&gt;LL. ">addinc_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceaddinc__mod.xhtml#aab7a717981bf42086eaa68bc8e5123bd">addinc</a></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacediago__mod.xhtml" title="LL SUBROUTINE DIAGO -!&gt;LL. ">diago_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacediago__mod.xhtml#adb46a45665d3827d82da93200f54f58e">diago</a></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacediagopr__mod.xhtml" title="LL SUBROUTINE DIAGOPR!&gt;LL. ">diagopr_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacediagopr__mod.xhtml#a8bc45e3a09ccd0d03c377653f0b63b36">diagopr</a></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacefi__mod.xhtml" title="LL SUBROUTINE FI !&gt;LL. ">fi_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacefi__mod.xhtml#ac2ff8ac3227e1b1a6a0e7249500a339c">fi</a></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacegetob2__mod.xhtml" title="LL SUBROUTINE GETOBS,GETOB2,GETOB3!&gt;LL. ">getob2_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacegetob2__mod.xhtml#a7113ccad519561434fa75c6e4009a2aa">getob2</a></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacehintcf__mod.xhtml" title="LL SUBROUTINE HINTCF !&gt;LL. ">hintcf_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacehintcf__mod.xhtml#add42d414b0f6b1a8765a3025e9217034">hintcf</a></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacelhn__inc__mod.xhtml" title="LL SUBROUTINE LHN_INC!&gt;LL. ">lhn_inc_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacelhn__inc__mod.xhtml#a4486625ca12816dadb1a1506cc326111">lhn_inc</a></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacemmspt__mod.xhtml" title="LL SUBROUTINE MMSPT MMSPTW !&gt;LL. ">mmspt_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemmspt__mod.xhtml#af2d58d327d737dc636b0f0036af69525">mmspt</a></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacerelaxc__mod.xhtml" title="LL SUBROUTINES ADDINC RELAXC!&gt;LL. ">relaxc_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacerelaxc__mod.xhtml#aa3a105339b779d871ea6547272518d80">relaxc</a></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceset__relax__cf__mod.xhtml" title="LL SUBROUTINE SET_RELAX_CF !&gt;LL. ">set_relax_cf_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceset__relax__cf__mod.xhtml#a1dcd236bf4f34196e7766bcf022e0fae">set_relax_cf</a></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacevertanl__mod.xhtml" title="LL SUBROUTINE VERTANL!&gt;LL. ">vertanl_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacevertanl__mod.xhtml#a14c07db8a3db2a3104119c28e75acf89">vertanl</a></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">#include &quot;mppac.h&quot;</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <span class="keywordtype">INTEGER</span>        P_LEVELS                <span class="comment">! Total number of levels</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">INTEGER</span>        Q_LEVELS                <span class="comment">! Number of wet levels</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <span class="keywordtype">INTEGER</span>        BL_LEVELS               <span class="comment">! Bdy layer levels</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordtype">INTEGER</span>        ROW_LENGTH              <span class="comment">! Number of points on row</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="keywordtype">INTEGER</span>        P_ROWS                  <span class="comment">! Number of rows (pstar)</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordtype">INTEGER</span>        P_FIELD                 <span class="comment">! Number of points in</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                             <span class="comment">! mass field</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordtype">INTEGER</span>        TNDV</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <span class="keywordtype">INTEGER</span>        TIMESTEP_NO             <span class="comment">! Current model timestep</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      <span class="keywordtype">INTEGER</span>        ITER_NO                 <span class="comment">! Iteration number</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                             <span class="comment">! excluding diagnostic</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="keywordtype">INTEGER</span>        LENMG                   <span class="comment">! Length of model grid</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="keywordtype">INTEGER</span>        LENAG                   <span class="comment">! Length of analysis grid</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keywordtype">INTEGER</span>        WKLEN                   <span class="comment">! Length of 2nd dimension</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                             <span class="comment">! of array for derived incs</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                                             <span class="comment">! produced by HTDRST,</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                             <span class="comment">! GEOSTR &amp; WINDBAL.</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordtype">INTEGER</span>        INC_TYPE                <span class="comment">! Index for data types in</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                             <span class="comment">! MODEL_INCR</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="keywordtype">INTEGER</span>        LENOB                   <span class="comment">! No of obs in group</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keywordtype">INTEGER</span> I,IPROC</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="keywordtype">INTEGER</span>        NO_ANAL_LEVS            <span class="comment">! No of analysis levels</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                             <span class="comment">! for group of obs types</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordtype">INTEGER</span>        NO_ANAL_VAR             <span class="comment">! No of variables being</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                                             <span class="comment">! analysed (2 for winds)</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="keywordtype">INTEGER</span>        NO_WT_LEVS              <span class="comment">! No of weight levels</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                             <span class="comment">! for group of obs types</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="keywordtype">INTEGER</span>        NAVT                    <span class="comment">! Analysis variable type</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                             <span class="comment">! 1/2/3/4/5 =</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                             <span class="comment">! p*/theta/winds/rh/precip</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <span class="keywordtype">INTEGER</span>        JGROUP                  <span class="comment">! Loop counter over groups</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <span class="keywordtype">INTEGER</span>        IACTF                   <span class="comment">! First obs type in group</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      <span class="keywordtype">INTEGER</span>        IACTL                   <span class="comment">! Last  obs type in group</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="keywordtype">INTEGER</span>        OBS_NO(lenob+1)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      <span class="keywordtype">LOGICAL</span>        LWIND                   <span class="comment">! Indicator if group</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                             <span class="comment">! has wind obs types</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <span class="keywordtype">LOGICAL</span>        DG_ONLY                 <span class="comment">! Indicator if diagnostic</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                             <span class="comment">! only iteration</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <span class="keywordtype">REAL</span>           TIMESTEP                <span class="comment">! Timestep in seconds</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="keywordtype">REAL</span>           OBS(tndv+1)             <span class="comment">! Observation data (set up</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                             <span class="comment">! in RDOBS)</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keywordtype">REAL</span>           CONV_CLD(p_field, q_levels)  <span class="comment">! conv cld amount</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <span class="keywordtype">REAL</span>           LS_RAIN(p_field)        <span class="comment">! large scale rain rate</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      <span class="keywordtype">REAL</span>           LS_SNOW(p_field)        <span class="comment">! large scale snow rate</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="keywordtype">REAL</span>           CONV_RAIN(p_field)      <span class="comment">! convective rain rate</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <span class="keywordtype">REAL</span>           CONV_SNOW(p_field)      <span class="comment">! convective snow rate</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                                             <span class="comment">! above rates diagnostic</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      <span class="keywordtype">REAL</span>           D_THETA_DT_CONV(p_field,q_levels)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                       <span class="comment">! convective latent heating rate</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="keywordtype">REAL</span>           D_THETA_DT_LS(p_field,q_levels)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                      <span class="comment">! large scale latent heating rate</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      <span class="keywordtype">REAL</span>           RHCRIT(q_levels)        <span class="comment">! Critical RH array</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                             <span class="comment">! for cloud</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">! These are used in variable resolution runs</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="keywordtype">REAL</span> lambda_p(1-halo_i:row_length+halo_i)</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      <span class="keywordtype">REAL</span> phi_p(1-halo_i:row_length+halo_i, 1-halo_j:p_rows+halo_j)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      <span class="keywordtype">LOGICAL</span> L_regular</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">! Import / export arguments (INTENT=INOUT):</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      <span class="keywordtype">REAL</span>           EXNER(p_field, p_levels) <span class="comment">! exner on theta levels</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="keywordtype">REAL</span>           LAYER_CLOUD(p_field, q_levels) <span class="comment">! as name says</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      <span class="keywordtype">REAL</span>           PRESSURE (p_field, p_levels) <span class="comment">! p on theta levels</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      <span class="keywordtype">REAL</span>           PSTAR(p_field)          <span class="comment">! Prognostic variable P*</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <span class="keywordtype">REAL</span>           THETA(p_field, p_levels)<span class="comment">! Prognostic variable</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                             <span class="comment">! theta</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <span class="keywordtype">REAL</span>           RH(p_field, q_levels)   <span class="comment">! Prognostic variable HMR</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">! for 2A cloud microphysics, but otherwise contains rh at this stage</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      <span class="keywordtype">REAL</span>           QCL(p_field, q_levels)   <span class="comment">! Prognostic variable QCL</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keywordtype">REAL</span>           QCF(p_field, q_levels)   <span class="comment">! Prognostic variable QCF</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">! Export arguments (INTENT=OUT):</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      <span class="keywordtype">INTEGER</span>        ICODE                   <span class="comment">! Error code (0 = OK)</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <span class="keywordtype">CHARACTER(LEN=256)</span>  CMESSAGE                <span class="comment">! Error message</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">! Stash variables</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="keywordtype">REAL</span>           STASHWORK(*)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      <span class="keywordtype">INTEGER</span>        LEN_STLIST</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordtype">INTEGER</span>        NUM_STASH_LEVELS</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keywordtype">INTEGER</span>        NUM_STASH_PSEUDO</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="keywordtype">INTEGER</span>        STINDEX(2, *)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="keywordtype">INTEGER</span>        STLIST(len_stlist, *)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordtype">INTEGER</span>        SI(*)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="keywordtype">INTEGER</span>        STASH_LEVELS(num_stash_levels +1, *)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="keywordtype">INTEGER</span>        STASH_PSEUDO_LEVELS(num_stash_pseudo +1, *)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="keywordtype">LOGICAL</span>        SF(*)</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">!*</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">!L Single iteration of analysis correction data assimilation</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">!L for observations or group of observations of variable type</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">!L defined by NAVT</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">! More global variables:</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">#include &quot;comacp.h&quot;</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;comag.h&quot;</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;comacdg.h&quot;</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">! Local (dynamic) arrays:</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      <span class="keywordtype">INTEGER</span>        MODEL_OBS_TYPE(lenob+1)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                                         <span class="comment">! Model observation type No</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      <span class="keywordtype">INTEGER</span>        NE_AG_PT(lenob+1)     <span class="comment">! Nearest analysis grid</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                                            <span class="comment">! point to obs.</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      <span class="keywordtype">INTEGER</span>        NPPT(lenob+1, 4)       <span class="comment">! horizontal model -&gt;</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                                            <span class="comment">! obs interp pointers</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      <span class="keywordtype">REAL</span>           OBS_LAT (lenob+1)      <span class="comment">! Observation latitude</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      <span class="keywordtype">REAL</span>           OBS_LONG(lenob+1)      <span class="comment">! &quot;longitude</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      <span class="keywordtype">REAL</span>           OBS_TIME(lenob+1)      <span class="comment">! &quot;time</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      <span class="keywordtype">REAL</span>           OBS_INCR(lenob+1, no_anal_levs, no_anal_var)<span class="comment">!</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                            <span class="comment">! Obs - Model increments</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                            <span class="comment">! at obs points.</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      <span class="keywordtype">REAL</span>           NORMF(lenob+1, no_anal_levs)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                               <span class="comment">! Normalization factor</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="keywordtype">REAL</span>           ANAL_INCR_LOCAL(lenmg*no_anal_levs*no_anal_var) <span class="comment">!</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                                             <span class="comment">! Accumulated increments</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                             <span class="comment">! on analysis grid</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      <span class="keywordtype">REAL</span>           MODEL_INCR(lenmg, no_anal_levs, inc_type) <span class="comment">!</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                             <span class="comment">! Accumulated increments</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                             <span class="comment">! on model grid</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;      <span class="keywordtype">REAL</span>           DRINCS(p_field, wklen)  <span class="comment">! Array to hold derived</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                                             <span class="comment">! increment fields</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      <span class="keywordtype">REAL</span>           CFPT(lenob+1, 4)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                                             <span class="comment">! obs interp coeffs</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      <span class="keywordtype">REAL</span>           RELAX_CF(p_rows)        <span class="comment">! Relaxation coeffs for</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                                             <span class="comment">! current group</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      <span class="keywordtype">LOGICAL</span>        LMISSD(lenob+1, no_anal_levs)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                             <span class="comment">! missing data in obs.</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;      <span class="keywordtype">REAL</span>           pstgs(p_field)          <span class="comment">! PSTAR at U points</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      <span class="keywordtype">INTEGER</span> dum3</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      <span class="keywordtype">REAL</span>    dum2(1,1), dum1(1)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      <span class="keywordtype">INTEGER</span> bc,bcount</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <span class="keywordtype">INTEGER</span> lev_ave,lev_start,lev_end,num_levs,ntimes,lev_times</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordtype">INTEGER</span> lev_rem</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;      <span class="keywordtype">INTEGER</span> num_incr_levs</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;      <span class="keywordtype">INTEGER</span> ic</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <span class="keywordtype">INTEGER</span> pe_group,iii,jjj</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      <span class="keywordtype">INTEGER</span> num_groups,                                               &amp;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;     &amp;    g_pe_start(0:3),g_pe_end(0:3),                                &amp;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;     &amp;    g_lev_start(0:3),g_lev_end(0:3)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      COMMON/split_pe/num_groups,                                       &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;     &amp;     g_pe_start,g_pe_end,g_lev_start,g_lev_end</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">! Local scalars:</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      <span class="keywordtype">INTEGER</span>        J                       <span class="comment">! Miscelaneous loop cntr</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;      <span class="keywordtype">INTEGER</span>        JACT,JJACT              <span class="comment">! Loop counter over obs</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                             <span class="comment">! types in group</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      <span class="keywordtype">INTEGER</span>        JANL                    <span class="comment">! Loop counter over</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                                             <span class="comment">! analysis levels</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      <span class="keywordtype">INTEGER</span>        JLEV,JJLEV              <span class="comment">! Loop counter over model</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                                             <span class="comment">! levels</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      <span class="keywordtype">INTEGER</span>        JL,JJL</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      <span class="keywordtype">INTEGER</span>        JK,JJK</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      <span class="keywordtype">INTEGER</span>        JPOINT                  <span class="comment">! Loop counter over points</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      <span class="keywordtype">INTEGER</span>        IPASS                   <span class="comment">! 1 if weights pass</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                                             <span class="comment">! 2 if increment pass</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;      <span class="keywordtype">INTEGER</span>        IAG                     <span class="comment">! Offset for level in</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                                             <span class="comment">! ANAL_INCR array.</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;      <span class="keywordtype">INTEGER</span>        IJK                     <span class="comment">! Level number in HYDRST</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                                             <span class="comment">! &amp; GEOSTR loops</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      <span class="keywordtype">INTEGER</span>        INOBS                   <span class="comment">! No of obs for this type</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      <span class="keywordtype">INTEGER</span>        NPTOBT                  <span class="comment">! Offset to first obs of</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                             <span class="comment">! each type in group</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      <span class="keywordtype">INTEGER</span>        LENOBT                  <span class="comment">! No of obs for obs type</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;      <span class="keywordtype">INTEGER</span>        NDV                     <span class="comment">! No of data values</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;      <span class="keywordtype">INTEGER</span>        N_ROWS                  <span class="comment">! No of rows</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      <span class="keywordtype">INTEGER</span>        NO_ANAL_INCR_LEVS       <span class="comment">! No of analysis increment</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                                             <span class="comment">! levels.</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="keywordtype">INTEGER</span>        MODE_HANAL              <span class="comment">! FI or HORINF for this</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                             <span class="comment">! group</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      <span class="keywordtype">INTEGER</span>        STASH_ITEM_NO           <span class="comment">! Stash Item Number</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      <span class="keywordtype">LOGICAL</span>        SURFACE_WIND            <span class="comment">! True if surface wind data</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      <span class="keywordtype">LOGICAL</span> ILUV</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">! Subroutine calls:</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;      <span class="keywordtype">EXTERNAL</span>  <a class="code" href="timer-timer1a_8f90.xhtml#a9ec0272078965f809aa1a1cbc6a05ea4">timer</a></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">!- End of header section.</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">!L Subroutine structure:</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">!L 1.0 Initialize:</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">! Mode of Horizontal Analysis for this group</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;AC2&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      mode_hanal = def_mode_hanal(group_index(jgroup))</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">!L 2.0 Weights calculation starts here</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;      <span class="keywordflow">IF</span> (ldiagac.AND.mype == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        print <span class="stringliteral">&#39;(/,A,(10I4))&#39;</span>,                                           &amp;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;     &amp;                       <span class="stringliteral">&#39; START OF WTS ANALYSIS PHASE FOR TYPES &#39;</span>, &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;     &amp;                                      (lact(j), j = iactf, iactl)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">!L 2.1 Setup for interpolation model -&gt; obs &amp; vertical analysis</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">!L     Get common format data for all obs in group       (getob2)</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">! Vectorisation over all observation types in group</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">! Loop over obs types in group</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;      <span class="keywordflow">if</span>(lenob /= 0)<span class="keywordflow">then</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;      nptobt = 0</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;      <span class="keywordflow">DO</span> jact = iactf, iactl</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;      jjact=jact</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        inobs  = <a class="code" href="namespacecomobs__mod.xhtml#afbd8f155185b549a21a27cb69473c633">obs_info</a> % NOBS(jact)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        lenobt = lenact(jact)</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keywordflow">IF</span> (inobs &gt;  0 .AND. lenobt &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespacegetob2__mod.xhtml#a7113ccad519561434fa75c6e4009a2aa">getob2</a> (jjact, obs(<a class="code" href="namespacecomobs__mod.xhtml#afbd8f155185b549a21a27cb69473c633">obs_info</a> % MDISPOBT(jact) +1), inobs, &amp;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;     &amp;                obs_lat(nptobt +1), obs_long(nptobt +1),          &amp;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;     &amp;                obs_time(nptobt +1), model_obs_type(nptobt +1),   &amp;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;     &amp;                obs_no(nptobt +1), lenobt, icode, cmessage)</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;         <span class="comment">! Check for error - exit routine if occured</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;          <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 999</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;       <span class="comment">! Move pointer to next obs type in group</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        nptobt = nptobt + lenobt</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">!L 2.2  Horizontal interpolation coefficients model -&gt; obs  (hintcf)</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacehintcf__mod.xhtml#add42d414b0f6b1a8765a3025e9217034">hintcf</a>(lwind, lenob, obs_lat, obs_long, obs_no, row_length,  &amp;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;     &amp;           p_rows, cfpt(1,1), cfpt(1,2), cfpt(1,3), cfpt(1,4),    &amp;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;     &amp;           nppt(1,1), nppt(1,2), nppt(1,3), nppt(1,4), icode,     &amp;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;     &amp;           lambda_p,phi_p,l_regular,cmessage)</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">! Check for error - exit routine if occured</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;      <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 999</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">!L 2.3 Do vertical analysis</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">!L     Make increment &amp; error factor vectors for each type in this</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">!L     group. The details of processing method depend on ob type</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">!L     so vectorization is over LENOBT obs in one type</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">!L     rather than LENOB obs in the group. NPTOBT gives the</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">!L     increment to point to each section in turn of those</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">!L     vectors which go over all obs in group.</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">! Loop over obs types in group</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="keywordflow">      endif</span> <span class="comment">! lenob /= 0</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;      nptobt = 0</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;      <span class="keywordflow">DO</span> jact = iactf, iactl</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;      jjact=jact</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        inobs  = <a class="code" href="namespacecomobs__mod.xhtml#afbd8f155185b549a21a27cb69473c633">obs_info</a> % NOBS(jact)</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        lenobt = lenact(jact)</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;      <span class="keywordflow">if</span>(inobs == 0.or.lenobt == 0)<span class="keywordflow">then</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;      <span class="keywordflow">if</span>(ldiagac)<span class="keywordflow">then</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;      <span class="keywordflow">if</span>(lact(jact) == 506)<span class="keywordflow">then</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacediagopr__mod.xhtml#a8bc45e3a09ccd0d03c377653f0b63b36">diagopr</a> (1,dum1,dum2,lenobt,lenob,ndv,                     &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;     &amp;                lmissd,dum3,nptobt,no_anal_levs)</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;      bcount=2</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;      <span class="keywordflow">if</span>(lact(jact) == 101.or.                                          &amp;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;     &amp;   (lact(jact) &gt;= 202.and.lact(jact) &lt;= 204).or.                  &amp;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;     &amp;   (lact(jact) &gt;= 302.and.lact(jact) &lt;= 306).or.                  &amp;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;     &amp;   (lact(jact) &gt;= 402.and.lact(jact) &lt;= 404).or.                  &amp;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;     &amp;   lact(jact) == 406.or.                                          &amp;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;     &amp;   lact(jact) == 901)bcount=1</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">! BARRIERS FOR DIAGO</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;      <span class="keywordflow">do</span> bc=1,bcount</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;      <span class="keywordflow">do</span> jlev=1,glsize(3,fld_type_p)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;      <span class="keywordflow">do</span> i=0,8</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;      s_stat(jlev,i)=0.0</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keywordflow">      enddo</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keywordflow">      enddo</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;      <span class="keywordflow">if</span>(lact(jact) == 406)<span class="keywordflow">then</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">! dummy diago call</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;       <span class="keyword">CALL </span><a class="code" href="namespacediago__mod.xhtml#adb46a45665d3827d82da93200f54f58e">diago</a> (<span class="stringliteral">&#39;MULTI-LEVEL&#39;</span>, lact(jact),6,obs_incr,normf,          &amp;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;     &amp;              obs_lat, obs_long, lmissd, lenob, lenobt, nptobt,   &amp;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;     &amp;              no_anal_levs, no_anal_var)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment">! dummy diago call</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;       <span class="keyword">CALL </span><a class="code" href="namespacediago__mod.xhtml#adb46a45665d3827d82da93200f54f58e">diago</a> (<span class="stringliteral">&#39;VAN?&#39;</span>, lact(jact), 3+bc-bcount,                     &amp;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;     &amp;              obs_incr, normf,                                    &amp;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;     &amp;              obs_lat, obs_long, lmissd, lenob, lenobt, nptobt,   &amp;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;     &amp;              no_anal_levs, no_anal_var)</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="keywordflow">      endif</span> <span class="comment">! LACT(JACT) == 406</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="keywordflow">      enddo</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="keywordflow">      endif</span> <span class="comment">! LACT(JACT) == 506</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="keywordflow">      endif</span> <span class="comment">! LDIAGAC</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;      <span class="keywordflow">else</span> <span class="comment">!inobs == 0.or.lenobt == 0</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <span class="keywordflow">IF</span> (inobs  &gt;   0 .AND. lenobt  &gt;   0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;          ndv   = <a class="code" href="namespacecomobs__mod.xhtml#afbd8f155185b549a21a27cb69473c633">obs_info</a> % NDATAV(jact) - <a class="code" href="namespacecomobs__mod.xhtml#afbd8f155185b549a21a27cb69473c633">obs_info</a> % NDVHDR</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;          ipass = 1</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespacevertanl__mod.xhtml#a14c07db8a3db2a3104119c28e75acf89">vertanl</a> (pstgs,                                          &amp;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;     &amp;          jjact, ipass, lenobt, ndv, obs_no(nptobt +1),           &amp;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;     &amp;          model_obs_type(nptobt +1), obs_lat(nptobt +1),          &amp;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;     &amp;          obs_long(nptobt +1), obs(<a class="code" href="namespacecomobs__mod.xhtml#afbd8f155185b549a21a27cb69473c633">obs_info</a> % MDISPOBT(jact) +1), &amp;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;     &amp;          inobs, exner, pstar, theta, rh, qcl, qcf, conv_cld,     &amp;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;     &amp;          layer_cloud,pressure,                                   &amp;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;     &amp;          ls_rain, ls_snow, conv_rain, conv_snow,                 &amp;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;     &amp;          rhcrit,                                                 &amp;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;     &amp;          p_field, model_incr, lenmg, no_wt_levs,                 &amp;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;     &amp;          cfpt(nptobt+1, 1), cfpt(nptobt+1, 2),                   &amp;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;     &amp;          cfpt(nptobt+1, 3), cfpt(nptobt+1, 4),                   &amp;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;     &amp;          nppt(nptobt+1, 1), nppt(nptobt+1, 2),                   &amp;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;     &amp;          nppt(nptobt+1, 3), nppt(nptobt+1, 4),                   &amp;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;     &amp;          obs_incr, normf, lmissd,                                &amp;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;     &amp;          p_levels, q_levels, bl_levels, row_length, p_rows,      &amp;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;     &amp;          lenob, nptobt, no_anal_levs, no_anal_var,               &amp;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;     &amp;          icode, cmessage)</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;         <span class="comment">! Check for error - exit routine if occured</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;          <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 999</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;       <span class="comment">! Move pointer to next obs type in group</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        nptobt = nptobt + lenobt</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="keywordflow">      endif</span> <span class="comment">!inobs == 0.or.lenobt == 0</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">! Vectorisation elsewhere over all obs in group</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;      nptobt = 0</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;      lenobt = lenob</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;      <span class="keywordflow">IF</span> (ldiagac) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <span class="keywordflow">IF</span> (iactf  /=  iactl) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;         <span class="comment">! The group has &gt;1 type in it, so group stats are worthwhile.</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;         <span class="comment">! Print mean &amp; rms stats for all obs in group</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;         <span class="keywordflow">IF</span> (lldac(2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;           <span class="keyword">CALL </span><a class="code" href="namespacediago__mod.xhtml#adb46a45665d3827d82da93200f54f58e">diago</a> (<span class="stringliteral">&#39;AC&#39;</span>, lact(iactf), 1, obs_incr, normf,           &amp;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;     &amp;                obs_lat, obs_long, lmissd, lenob, lenobt, nptobt, &amp;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;     &amp;                no_anal_levs, no_anal_var)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="comment">!L 2.4 Do horizontal analysis (for weights)</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;          ipass = 1</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;      <span class="keywordflow">IF</span> (mode_hanal  ==  2) <span class="keywordflow">THEN</span>   <span class="comment">!  Use FI method</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;      <span class="keywordflow">if</span>(lenob /= 0)<span class="keywordflow">then</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacefi__mod.xhtml#ac2ff8ac3227e1b1a6a0e7249500a339c">fi</a> (ipass, timestep_no, timestep, navt, jgroup,            &amp;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;     &amp;          no_anal_var, lenob, no_anal_levs, no_wt_levs, 1, lenmg, &amp;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;     &amp;          row_length, p_rows, obs_no, obs_lat, obs_long, obs_time,&amp;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;     &amp;          normf, obs_incr, cfpt, nppt, inc_type, model_incr,      &amp;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;     &amp;          pstar,                                                  &amp;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;     &amp;          p_field, p_levels, icode,                               &amp;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;     &amp;          cmessage)</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      <span class="keywordflow">do</span> jlev=1,no_anal_levs</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;      <span class="keywordflow">do</span> j=1,lenmg</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;      model_incr(j,jlev,1)=0.0</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="keywordflow">      enddo</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="keywordflow">      enddo</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;       <span class="comment">! Check for error - exit from routine if occured</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 999</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! End of FI horizontal analysis step</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;      <span class="keywordflow">IF</span> (ldiagac) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        <span class="keywordflow">IF</span>(mype == 0)print *, <span class="stringliteral">&#39;END OF WTS ANALYSIS PHASE&#39;</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">! Save all levels of wts on model grid</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;      <span class="keywordflow">DO</span> jlev = 1, no_wt_levs   <span class="comment">!  Loop over no of weight levels.</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;      jjlev=jlev</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;       <span class="comment">! Save weights field</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        stash_item_no = 200+navt</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        <span class="keywordflow">IF</span> (sf(stash_item_no)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceac__stash__mod.xhtml#ab8290977c1d67cb0d66a9fd6035bb4a1">ac_stash</a> (stash_item_no,jjlev, p_levels, jgroup,         &amp;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;     &amp;      n_groups, timestep_no, stindex, stlist, len_stlist, si, sf, &amp;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;     &amp;      stashwork, stash_levels, num_stash_levels,                  &amp;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;     &amp;      stash_pseudo_levels, num_stash_pseudo, model_incr(1,jlev,1),&amp;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;     &amp;      lenmg, <span class="stringliteral">&#39;Weights Field&#39;</span>, icode, cmessage)</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;       <span class="comment">! Get statistics on sum of weights</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <span class="keywordflow">IF</span> (ldiagac .AND. lldac(4)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;         <span class="keywordflow">IF</span> (navt  ==  4) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespacemmspt__mod.xhtml#af2d58d327d737dc636b0f0036af69525">mmspt</a> (model_incr(1,jlev,1), jjlev, 0,                 &amp;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;     &amp;                          <span class="stringliteral">&#39;SUM OF WTS - RH &#39;</span>, row_length, p_rows, &amp;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;     &amp;                           phi_p,l_regular)</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;          <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (navt  ==  5) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespacemmspt__mod.xhtml#af2d58d327d737dc636b0f0036af69525">mmspt</a> (model_incr(1,jlev,1), jjlev, 0,                 &amp;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;     &amp;                          <span class="stringliteral">&#39;SUM OF WTS - PR &#39;</span>, row_length, p_rows, &amp;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;     &amp;                           phi_p,l_regular)</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;          <span class="keywordflow">ELSE</span>      <span class="comment">! NAVT values other than 4 or 5 excluded</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;             icode = 1</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;             cmessage = <span class="stringliteral">&#39;AC : Should not reach here (3)&#39;</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;             <span class="keywordflow">GOTO</span> 999   <span class="comment">! RETURN</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="keywordflow">      END DO</span>   <span class="comment">! End of loop over no of weight levels.</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment">!L 2.6 Calculate ob normalisation factors</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment">! Vectorization here is over types within groups</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;      nptobt = 0</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;      <span class="keywordflow">DO</span> jact = iactf, iactl</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;      jjact=jact</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        inobs  = <a class="code" href="namespacecomobs__mod.xhtml#afbd8f155185b549a21a27cb69473c633">obs_info</a> % NOBS(jact)</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        lenobt = lenact(jact)</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;      <span class="keywordflow">if</span>(inobs == 0.or.lenobt == 0)<span class="keywordflow">then</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;      <span class="keywordflow">if</span>(ldiagac)<span class="keywordflow">then</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;      <span class="keywordflow">if</span>(lact(jact) /= 406.and.lact(jact) /= 506)<span class="keywordflow">then</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;      bcount=2</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;      <span class="keywordflow">if</span>(lact(jact) == 101.or.                                          &amp;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;     &amp;   (lact(jact) &gt;= 202.and.lact(jact) &lt;= 204).or.                  &amp;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;     &amp;   (lact(jact) &gt;= 302.and.lact(jact) &lt;= 306).or.                  &amp;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;     &amp;   (lact(jact) &gt;= 402.and.lact(jact) &lt;= 404).or.                  &amp;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;     &amp;   lact(jact) == 901)bcount=1</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="comment">! BARRIERS FOR DIAGO</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;      <span class="keywordflow">do</span> bc=1,bcount</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;      <span class="keywordflow">do</span> jlev=1,glsize(3,fld_type_p)</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;      <span class="keywordflow">do</span> i=0,8</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;      s_stat(jlev,i)=0.0</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="keywordflow">      enddo</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="keywordflow">      enddo</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="comment">! dummy diago call</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;       <span class="keyword">CALL </span><a class="code" href="namespacediago__mod.xhtml#adb46a45665d3827d82da93200f54f58e">diago</a> (<span class="stringliteral">&#39;VAN?&#39;</span>, lact(jact), 5+bc-bcount,                     &amp;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;     &amp;              obs_incr, normf,                                    &amp;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;     &amp;              obs_lat, obs_long, lmissd, lenob, lenobt, nptobt,   &amp;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;     &amp;              no_anal_levs, no_anal_var)</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="keywordflow">      enddo</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="keywordflow">      endif</span> <span class="comment">! LACT(JACT) /= 406 (and 506)</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="keywordflow">      endif</span> <span class="comment">! LDIAGAC</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;      <span class="keywordflow">else</span> <span class="comment">! lenob == 0</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        <span class="keywordflow">IF</span> (inobs &gt;  0 .AND. lenobt &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;          ndv   = <a class="code" href="namespacecomobs__mod.xhtml#afbd8f155185b549a21a27cb69473c633">obs_info</a> % NDATAV(jact) - <a class="code" href="namespacecomobs__mod.xhtml#afbd8f155185b549a21a27cb69473c633">obs_info</a> % NDVHDR</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;          ipass = 2</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespacevertanl__mod.xhtml#a14c07db8a3db2a3104119c28e75acf89">vertanl</a> (pstgs,                                          &amp;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;     &amp;           jjact, ipass, lenobt, ndv, obs_no(nptobt +1),          &amp;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;     &amp;           model_obs_type(nptobt +1), obs_lat(nptobt +1),         &amp;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;     &amp;           obs_long(nptobt+1), obs(<a class="code" href="namespacecomobs__mod.xhtml#afbd8f155185b549a21a27cb69473c633">obs_info</a> % MDISPOBT(jact) +1), &amp;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;     &amp;           inobs, exner, pstar, theta, rh, qcl, qcf, conv_cld,    &amp;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;     &amp;           layer_cloud,pressure,                                  &amp;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;     &amp;           ls_rain, ls_snow, conv_rain, conv_snow,                &amp;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;     &amp;           rhcrit,                                                &amp;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;     &amp;           p_field, model_incr, lenmg, no_anal_levs,              &amp;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;     &amp;           cfpt(nptobt+1, 1), cfpt(nptobt+1, 2),                  &amp;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;     &amp;           cfpt(nptobt+1, 3), cfpt(nptobt+1, 4),                  &amp;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;     &amp;           nppt(nptobt+1, 1), nppt(nptobt+1, 2),                  &amp;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;     &amp;           nppt(nptobt+1, 3), nppt(nptobt+1, 4),                  &amp;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;     &amp;           obs_incr, normf, lmissd,                               &amp;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;     &amp;           p_levels, q_levels, bl_levels, row_length, p_rows,     &amp;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;     &amp;           lenob, nptobt, no_anal_levs, no_anal_var,              &amp;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;     &amp;           icode, cmessage)</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;         <span class="comment">! Check for errors:</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;          <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 999</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        nptobt = nptobt + lenobt</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="keywordflow">      endif</span> <span class="comment">! lenob == 0</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment">! Vectorisation elsewhere over all obs in group</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;      nptobt = 0</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;      lenobt = lenob</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment">!L 3.0 Increments calculation starts here</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;      <span class="keywordflow">IF</span> (ldiagac.AND.mype == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        print <span class="stringliteral">&#39;(/,A,(10I4))&#39;</span>,                                           &amp;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;     &amp;           <span class="stringliteral">&#39; START OF INCS ANALYSIS PHASE FOR TYPES  &#39;</span>,           &amp;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;     &amp;           (lact(j),j=iactf,iactl)</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="comment">!L 3.1 Horizontal analysis step (increments)</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;          ipass = 2</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;      <span class="keywordflow">IF</span> (mode_hanal  ==  2) <span class="keywordflow">THEN</span>   <span class="comment">! Use FI method</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;      <span class="keywordflow">if</span>(lenob /= 0)<span class="keywordflow">then</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacefi__mod.xhtml#ac2ff8ac3227e1b1a6a0e7249500a339c">fi</a> (ipass, timestep_no, timestep, navt, jgroup,            &amp;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;     &amp;         no_anal_var, lenob, no_anal_levs, no_wt_levs, 1, lenmg,  &amp;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;     &amp;         row_length, p_rows, obs_no, obs_lat, obs_long, obs_time, &amp;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;     &amp;         normf, obs_incr, cfpt, nppt, inc_type, model_incr,       &amp;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;     &amp;         pstar,                                                   &amp;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;     &amp;         p_field, p_levels, icode,                                &amp;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;     &amp;         cmessage)</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;      <span class="keywordflow">do</span> jlev=1,no_anal_levs</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;      <span class="keywordflow">do</span> j=1,lenmg</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;      model_incr(j,jlev,1)=0.0</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="keywordflow">      enddo</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="keywordflow">      enddo</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="keywordflow">      endif</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;       <span class="comment">! Check for errors:</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 999</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! End of FI horizontal analysis step</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;      <span class="keywordflow">IF</span> (ldiagac) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        <span class="keywordflow">IF</span>(mype == 0)print *, <span class="stringliteral">&#39;END OF INCS ANALYSIS PHASE&#39;</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="comment">!L 3.3 Set up Relaxation Coefficients for this group</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        n_rows = p_rows</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceset__relax__cf__mod.xhtml#a1dcd236bf4f34196e7766bcf022e0fae">set_relax_cf</a> (jgroup, n_rows, relax_cf, lwind, timestep,     &amp;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;     &amp;     timestep_no, iter_no, icode, cmessage)</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;<span class="comment">! Check for errors:</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;      <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 999</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="comment">!L 3.4 Interpolation from analysis grid to model grid</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;<span class="comment">!L     Loop over levels to interpolate incrs from analysis grid to</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="comment">!L     model grid. Add incrs to model.</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;      <span class="keywordflow">DO</span> jlev = 1, no_anal_levs</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;      jjlev=jlev</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="comment">!L     3.4.1 Scale increment by relaxation coefficent</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespacerelaxc__mod.xhtml#aa3a105339b779d871ea6547272518d80">relaxc</a> (model_incr(1,jlev,1), lenmg, row_length,         &amp;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;     &amp;      p_rows, relax_cf, icode, cmessage)</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;         <span class="comment">! Check for errors:</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;          <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 999</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="comment">!L     3.4.2 Save increment fields into output file</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;          stash_item_no = 210+navt</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;          <span class="keywordflow">IF</span> (sf(stash_item_no)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceac__stash__mod.xhtml#ab8290977c1d67cb0d66a9fd6035bb4a1">ac_stash</a> (stash_item_no, jjlev, p_levels, jgroup,      &amp;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;     &amp;        n_groups, timestep_no, stindex, stlist, len_stlist, si,   &amp;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;     &amp;        sf, stashwork, stash_levels, num_stash_levels,            &amp;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;     &amp;        stash_pseudo_levels, num_stash_pseudo,                    &amp;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;     &amp;        model_incr(1,jlev,1), lenmg, <span class="stringliteral">&#39;Increment Field&#39;</span>, icode,    &amp;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;     &amp;        cmessage)</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="comment">!L     3.4.10 Humidity increments</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        <span class="keywordflow">IF</span> (navt  ==  4) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;         <span class="comment">! Add RH increments to RH fields</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceaddinc__mod.xhtml#aab7a717981bf42086eaa68bc8e5123bd">addinc</a> (rh(1,jlev), model_incr(1,jlev,1), lenmg,         &amp;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;     &amp;      row_length, p_rows, navt, icode, cmessage)</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;         <span class="comment">! Check for errors:</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;          <span class="keywordflow">IF</span> (icode  &gt;   0) <span class="keywordflow">GOTO</span> 999</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;         <span class="comment">! Statistics of increments on model grid</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;          <span class="keywordflow">IF</span> (ldiagac .AND. lldac(4)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespacemmspt__mod.xhtml#af2d58d327d737dc636b0f0036af69525">mmspt</a> (model_incr(1,jlev,1), jjlev, 0,                 &amp;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;     &amp;        <span class="stringliteral">&#39;RH INCREMENTS   &#39;</span>, row_length, p_rows,                   &amp;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;     &amp;        phi_p,l_regular)</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="keywordflow">        END IF</span>   <span class="comment">! NAVT = 4</span></div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="comment">!L     3.4.11 latent heat nudging</span></div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;        <span class="keywordflow">IF</span> (navt  ==  5) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="comment">!  Stash LS latent heating theta increments if required (rates in K/s)</span></div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;            stash_item_no = 271</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;            <span class="keywordflow">IF</span> (sf(stash_item_no)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;              <span class="keywordflow">DO</span> jl = 1 , q_levels</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;                jjl = jl</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                <span class="keyword">CALL </span><a class="code" href="namespaceac__stash__mod.xhtml#ab8290977c1d67cb0d66a9fd6035bb4a1">ac_stash</a> (stash_item_no, jjl, q_levels,            &amp;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;     &amp;            jgroup, n_groups, timestep_no,                        &amp;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;     &amp;            stindex, stlist, len_stlist, si, sf, stashwork,       &amp;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;     &amp;            stash_levels, num_stash_levels,                       &amp;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;     &amp;            stash_pseudo_levels, num_stash_pseudo,                &amp;</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;     &amp;            d_theta_dt_ls(1,jl),p_field,                          &amp;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;     &amp;            <span class="stringliteral">&#39;LS latent heating rates&#39;</span>,                            &amp;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;     &amp;            icode, cmessage)</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;<span class="keywordflow">              ENDDO</span>    <span class="comment">! JL</span></div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;          <span class="keywordflow">IF</span> (l_lhn) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;<span class="comment">!C Call to new subroutine LHN_INC</span></div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacelhn__inc__mod.xhtml#a4486625ca12816dadb1a1506cc326111">lhn_inc</a>(d_theta_dt_conv,d_theta_dt_ls,                       &amp;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;     &amp;             ls_rain,ls_snow,conv_rain,                           &amp;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;     &amp;             conv_snow,p_field,q_levels,model_incr,timestep,      &amp;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;     &amp;             p_rows,row_length,                                   &amp;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;     &amp;             lhn_range, phi_p,lambda_p,l_regular,                 &amp;     &amp;             drincs,lenmg,icode,cmessage)</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="comment">!C Add on increments</span></div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;            <span class="keywordflow">DO</span> j=1,q_levels</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceaddinc__mod.xhtml#aab7a717981bf42086eaa68bc8e5123bd">addinc</a>(theta(1,j), drincs(1,j), p_field, row_length, &amp;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;     &amp;                    p_rows, navt,icode,cmessage)</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="keywordflow">            ENDDO</span>     <span class="comment">!J</span></div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="comment">!  Stash LHN Theta Increments if required (amounts in K)</span></div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;            stash_item_no = 272</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;            <span class="keywordflow">IF</span> (sf(stash_item_no)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;              <span class="keywordflow">DO</span> jl = 1 , q_levels</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;                jjl = jl</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;                <span class="keyword">CALL </span><a class="code" href="namespaceac__stash__mod.xhtml#ab8290977c1d67cb0d66a9fd6035bb4a1">ac_stash</a> (stash_item_no, jjl, q_levels,            &amp;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;     &amp;            jgroup, n_groups, timestep_no,                        &amp;</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;     &amp;            stindex, stlist, len_stlist, si, sf, stashwork,       &amp;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;     &amp;            stash_levels, num_stash_levels,                       &amp;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;     &amp;            stash_pseudo_levels, num_stash_pseudo,                &amp;</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;     &amp;            drincs(1,jl),p_field,<span class="stringliteral">&#39;LHN theta increments&#39;</span>,          &amp;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;     &amp;            icode, cmessage)</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="keywordflow">              ENDDO</span>    <span class="comment">! JL</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;            <span class="keywordflow">IF</span> (ldiagac .AND. lldac(4) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;            <span class="keywordflow">DO</span> jl = 1 , q_levels</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;            jjl = jl</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespacemmspt__mod.xhtml#af2d58d327d737dc636b0f0036af69525">mmspt</a>(drincs(1,jl), jjl, 0,                          &amp;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;     &amp;                    <span class="stringliteral">&#39;LHN Theta incrs &#39;</span>, row_length, p_rows,       &amp;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;     &amp;                     phi_p,l_regular)</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;<span class="keywordflow">            ENDDO</span>     <span class="comment">! JL</span></div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;<span class="keywordflow">            ENDIF</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;<span class="keywordflow">          ENDIF</span>       <span class="comment">! L_LHN</span></div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;<span class="keywordflow">        ENDIF</span>    <span class="comment">! NAVT = 5</span></div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;<span class="keywordflow">      END DO</span>   <span class="comment">! JLEV</span></div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;<span class="comment">!L 5.0 Exit from AC2</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160; 999  <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;AC2&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="namespaceac2__mod.xhtml#a84446bf4a8399600b10e586238cc3cb6">ac2</a></div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceac2__mod.xhtml" title="LL Subroutine: AC. ">ac2_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
