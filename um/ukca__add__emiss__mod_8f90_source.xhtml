<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/UKCA/ukca_add_emiss_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_3b087d695daa154bfcb7242bcfd0fbd3.xhtml">UKCA</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ukca_add_emiss_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ukca__add__emiss__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!  Description:!    Module containing the subroutine UKCA_ADD_EMISS to</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="namespaceukca__add__emiss__mod.xhtml">   30</a></span>&#160;  <span class="keyword">MODULE</span> <a class="code" href="namespaceukca__add__emiss__mod.xhtml" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_add_emiss_mod</a></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keyword">CONTAINS</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">  SUBROUTINE </span><a class="code" href="namespaceukca__add__emiss__mod.xhtml#ac794e986c27f0edc65a75f3d3126c71e">ukca_add_emiss</a> (                                           &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      row_length, rows,   model_levels, wet_levels, bl_levels,          &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      n_tracers, iyear, imonth, iday, ihour, timestep,                  &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      delta_lambda,       delta_phi,                                    &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      sin_theta_latitude, true_longitude, tropopause_height,            &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      r_theta_levels,     theta,          q,  qcl,  qcf,                &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      exner_rho_levels,   rho_r2,                                       &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      kent,               kent_dsc,                                     &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      rhokh_mix,          dtrdz_charney_grid,                           &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      we_lim,             t_frac,                 zrzi,                 &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      we_lim_dsc,         t_frac_dsc,             zrzi_dsc,             &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      ml_depth,           zhsc,                   z_half,               &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      surf_area,          totnodens,  volume,  mass,  tracers)</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="namespaceukca__add__emiss__mod.xhtml#ac794e986c27f0edc65a75f3d3126c71e">   49</a></span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacebl__option__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">bl_option_mod</a><span class="keywordtype">,           ONLY</span>: <a class="code" href="namespacebl__option__mod.xhtml#a4d4d768b22319d5970e78429dc03f23b">alpha_cd</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keywordtype">USE </span>tr_mix_mod<span class="keywordtype">,              ONLY</span>: <a class="code" href="tr__mix_8f90.xhtml#a46b8187d395ca81bf4ff84e34cf7173c">tr_mix</a></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacetrsrce__mod.xhtml" title="SUBROUTINE TRSRCE !&gt; ">trsrce_mod</a><span class="keywordtype">,              ONLY</span>: <a class="code" href="namespacetrsrce__mod.xhtml#a7eefc5bc8717562e297c331a549d63f1">trsrce</a></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordtype">USE </span>asad_mod<span class="keywordtype">,                ONLY</span>: advt, method</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceukca__chem__schemes__mod.xhtml" title="*****************************COPYRIGHT*******************************!&gt; *****************************...">ukca_chem_schemes_mod</a><span class="keywordtype">,   ONLY</span>: <a class="code" href="namespaceukca__chem__schemes__mod.xhtml#abcaccf496bbd6bf23bcfffd6aa567db2">int_method_nr</a></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceasad__chem__flux__diags.xhtml" title="(c) [University of Cambridge] [2008]. All rights reserved. ">asad_chem_flux_diags</a></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keywordtype">USE </span>ukca_constants</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceukca__trace__gas__mixratio.xhtml" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_trace_gas_mixratio</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceukca__trace__gas__mixratio.xhtml#a9f897f985271bf44b50a2f9b5b87aff9">um_ch4_for_ukca</a></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacedust__parameters__mod.xhtml" title="A module containing constants/parameters used in the dust scheme. ">dust_parameters_mod</a><span class="keywordtype">,     ONLY</span>: <a class="code" href="namespacedust__parameters__mod.xhtml#acd60b6ea942dd71f3d3f244e09990bf7" title="Number of discrete particle size divisions (bins) ">ndiv</a></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordtype">USE </span>ukca_option_mod<span class="keywordtype">,         ONLY</span>: l_ukca_stratcfc, l_ukca_strat,     &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                     l_ukca_prescribech4,               &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                     l_ukca_strattrop,                  &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                     l_ukca_achem, l_ukca_aerchem,      &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                     l_ukca_chem,  jpctr</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceukca__d1__defs.xhtml" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_d1_defs</a><span class="keywordtype">,            ONLY</span>: <a class="code" href="namespaceukca__d1__defs.xhtml#a65bf64b6c3f9578f63de277ef33b6407">n_use_emissions</a>, <a class="code" href="namespaceukca__d1__defs.xhtml#afdc77c4596d6446bbed092bf8e81a735">em_chem_spec</a>,     &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                     n_boundary_vals, <a class="code" href="namespaceukca__d1__defs.xhtml#a7c8e64fb8e4df43dde09f7df3274cb91">lbc_mmr</a>, <a class="code" href="namespaceukca__d1__defs.xhtml#a6f00f3ef0b161294f5c3c8312b7c9679">lbc_spec</a></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceget__molmass__mod.xhtml" title="Module containing the function GET_MOLMASS to. ">get_molmass_mod</a><span class="keywordtype">,         ONLY</span>: <a class="code" href="namespaceget__molmass__mod.xhtml#af842dae1457eeea22149e35c81d4bbdd">get_molmass</a></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceukca__emiss__factors.xhtml" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_emiss_factors</a></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceum__input__control__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">um_input_control_mod</a><span class="keywordtype">,    ONLY</span>: <a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceday__of__week__mod.xhtml" title="Returns the day of the week (Sunday=1, ..., Saturday=7) given the date. ">day_of_week_mod</a><span class="keywordtype">,         ONLY</span>: <a class="code" href="namespaceday__of__week__mod.xhtml#a6ae2db3f6f71cd322785609bc4464431">day_of_week</a>    <span class="comment">! Calculate day of week</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,                ONLY</span>: jprb, jpim     <span class="comment">! DrHook</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,                 ONLY</span>: lhook, dr_hook <span class="comment">! DrHook</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">,             ONLY</span>: <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordtype">USE </span>um_parvars</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecontrol__max__sizes.xhtml" title="This file belongs in section: Misc. ">control_max_sizes</a></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>, <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a>, <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>            :: row_length</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>            :: rows</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>            :: model_levels  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>            :: wet_levels</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>            :: bl_levels</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: n_tracers   <span class="comment">! nr traces</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: iyear       <span class="comment">! model yr, mo, day, hr</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: imonth</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: iday</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ihour</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: timestep    <span class="comment">! timestep lenght (sec)</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: delta_lambda</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: delta_phi</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: sin_theta_latitude    (1:row_length,1:rows)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: true_longitude        (1:row_length,1:rows)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: tropopause_height     (1:row_length,1:rows)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: r_theta_levels        (1:row_length,1:rows,0:model_levels)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">! Input arguments needed to call TSRCE</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: theta             (1:row_length, 1:rows, 1:model_levels)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: q                 (1:row_length, 1:rows, 1:wet_levels)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qcl               (1:row_length, 1:rows, 1:wet_levels)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: qcf               (1:row_length, 1:rows, 1:wet_levels)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: exner_rho_levels  (1:row_length, 1:rows, 1:model_levels+1)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: rho_r2            (1:row_length, 1:rows, 1:model_levels)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">! Input arguments needed to call TR_MIX</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: kent       (1:row_length, 1:rows)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: kent_dsc   (1:row_length, 1:rows)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: rhokh_mix          (1:row_length, 1:rows, 1:bl_levels)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: dtrdz_charney_grid (1:row_length, 1:rows, 1:bl_levels)</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: we_lim     (1:row_length, 1:rows, 1:3)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: t_frac     (1:row_length, 1:rows, 1:3)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: zrzi       (1:row_length, 1:rows, 1:3)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: we_lim_dsc (1:row_length, 1:rows, 1:3)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: t_frac_dsc (1:row_length, 1:rows, 1:3)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: zrzi_dsc   (1:row_length, 1:rows, 1:3)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: ml_depth   (1:row_length, 1:rows)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: zhsc       (1:row_length, 1:rows)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: z_half     (1:row_length, 1:rows,1:bl_levels)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">! Input arguments (surf area, dens, vol and mass) mainly for ASAD emiss diags</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: surf_area  (1:row_length, 1:rows)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: totnodens  (1:row_length, 1:rows, 1:model_levels)</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: volume     (1:row_length, 1:rows, 1:model_levels)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: mass       (1:row_length, 1:rows, 1:model_levels)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">! Tracer mass mixing ratios</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: tracers (1:row_length, 1:rows, 1:model_levels,   &amp;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                                  1:n_tracers)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span>  :: surface_level = 1</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span> :: inox                 <span class="comment">! Index for NO/NOx tracer</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span> :: iso2                 <span class="comment">! Index for SO2 tracer</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keywordtype">INTEGER</span> :: i, j, k, l, m, ilev, p, pp <span class="comment">! Loop variables</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keywordtype">INTEGER</span> :: n                          <span class="comment">! counter</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordtype">INTEGER</span> :: errcode                    <span class="comment">! Error code for ereport</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordtype">INTEGER</span> :: ierr                       <span class="comment">! Error code from asad diags routines</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordtype">INTEGER</span> :: iday_week            <span class="comment">! Day of week (for time profiling of emiss</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                  <span class="comment">! in regional air quality modelling)</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordtype">INTEGER</span> :: t_local              <span class="comment">! Local time based on longitude</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">SAVE</span>:: num_hourly_profs  <span class="comment">! Number of different hourly profiles                                    ! of emissions used</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keywordtype">REAL</span> :: res_factor       (row_length, rows)              <span class="comment">! dry dep</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordtype">REAL</span> :: tr_flux          (row_length, rows, bl_levels, n_tracers)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                                           <span class="comment">! tracer flux</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keywordtype">REAL</span> :: surf_dep_flux    (row_length, rows, n_tracers)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keywordtype">REAL</span> :: em_field         (row_length, rows, model_levels, n_tracers)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                                                     <span class="comment">! 3D emiss for all tracers</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keywordtype">REAL</span> :: em_field_2d      (row_length, rows)    <span class="comment">! 2D emiss field for a tracer</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                                                 <span class="comment">! at a given model level</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keywordtype">REAL</span> :: rho_aresist      (row_length, rows)</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span>, <span class="keywordtype">ALLOCATABLE</span> :: theta_latitude (:,:)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span>, <span class="keywordtype">ALLOCATABLE</span> :: molmass        (:)    <span class="comment">! molar masses</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span>, <span class="keywordtype">ALLOCATABLE</span> :: lbc_molmass    (:)    <span class="comment">! molar masses for lower</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                                   <span class="comment">! boundary conditions</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">! Scalar to store daily scaling accounting for weekly cycle of emissions</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keywordtype">REAL</span> :: fdaily_scaling</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">! 1-D arrays to store daily and hourly scaling factors of emissions</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <span class="keywordtype">REAL</span> :: daily_scaling  (7)             <span class="comment">! Sunday=1, ..., Saturday=7</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <span class="keywordtype">REAL</span> :: hourly_scaling (0:23)          <span class="comment">! from 0 to 23 h</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">! 2-D array to hold the hourly scaling as a function of the longitude</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">! (used as an approximation considering a local time based on the longitude)</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  <span class="keywordtype">REAL</span> :: hourly_scaling_2d  (row_length, rows) </div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">! Arrays to hold 1-D (function of local time) and 2-D (function of lon-lat)</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">! hourly scaling for a number of emission profiles. The last dimension</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">! is for the profile number.</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span>, <span class="keywordtype">ALLOCATABLE</span> :: hourly_scaling_all    (:,:)    <span class="comment">! 1D + profile</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">SAVE</span>, <span class="keywordtype">ALLOCATABLE</span> :: hourly_scaling_all_2d (:,:,:)  <span class="comment">! 2D + profile</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">! Character variables that will be passed to HOURLY_EMISS_FACTORS,! i.e. to the subroutine dealing with hourly profiles</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="keywordtype">CHARACTER (LEN=20)</span>, <span class="keywordtype">SAVE</span>, <span class="keywordtype">ALLOCATABLE</span> :: hourly_prof_name (:)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keywordtype">CHARACTER (LEN=80)</span>, <span class="keywordtype">SAVE</span>, <span class="keywordtype">ALLOCATABLE</span> :: field_name       (:)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">! Required for ASAD 3D emiss diags (this replicates code in UKCA_EMISSION_CTL).</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <span class="keywordtype">REAL</span>  :: conv_aircraftems (row_length,rows,model_levels) <span class="comment">! aircraft emiss</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">ALLOCATABLE</span> :: tmp3dems (:,:,:)      <span class="comment">! explosive volcanic SO2 emiss</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">! Note that NOx lightning diags are in UKCA_NEW_EMISS_CTL and that additional</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">! diagnostics (e.g. other 3D SO2 emiss) can be included here in the future.</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">SAVE</span> :: firstcall = .true.</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keywordtype">CHARACTER (LEN=100)</span> :: cmessage                <span class="comment">! error message</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  <span class="keywordtype">CHARACTER (LEN=10)</span>  :: mapped_tracer</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span>     :: small_number  = 0.00001 <span class="comment">! to compare real numbers</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  <span class="keywordtype">INTEGER (KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  <span class="keywordtype">INTEGER (KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="keywordtype">REAL    (KIND=jprb)</span>            :: zhook_handle</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">! End of header</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook (<span class="stringliteral">&#39;UKCA_ADD_EMISS&#39;</span>, zhook_in, zhook_handle)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">! Initialise variables</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  rho_aresist(:,:)     = 0.0     <span class="comment">! Set dry deposition</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  res_factor(:,:)     = 0.0     <span class="comment">! to zero</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  em_field(:,:,:,:) = 0.0     <span class="comment">! 3D Initial ems field for all tracers</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  em_field_2d(:,:)     = 0.0     <span class="comment">! 2D emission field for a tracer</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                     <span class="comment">! at a given model level</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  hourly_scaling_2d(:,:)  = 0.0     <span class="comment">! 2D hourly scaling as a function of</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                     <span class="comment">! lon/lat (related to local time)</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">! Get day of week (may be needed for time profiling of emissions in air</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">! quality modelling). Note that this would not have any meaning and</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">! therefore is not allowed in the case of a 360-day calendar.</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    iday_week = <a class="code" href="namespaceday__of__week__mod.xhtml#a6ae2db3f6f71cd322785609bc4464431">day_of_week</a>(iday, imonth, iyear)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">! Set some values in the first call to this routine</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  <span class="keywordflow">IF</span> (firstcall) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    inox             = -99      <span class="comment">! Initial index for nox tracer</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    iso2             = -99      <span class="comment">! Initial index for so2 tracer</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keyword">ALLOCATE</span> (theta_latitude(row_length, rows))</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    theta_latitude = asin(sin_theta_latitude)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">!   Find index for SO2 and NOx tracer</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordflow">DO</span> k = 1, jpctr</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      <span class="keywordflow">SELECT CASE</span> (advt(k))</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;NOx       &#39;</span>)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;          inox = k</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;NO        &#39;</span>)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;          inox = k</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keywordflow">CASE</span>(<span class="stringliteral">&#39;SO2       &#39;</span>)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;          iso2 = k</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="keywordflow">      END SELECT</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordflow">IF</span> (inox == -99) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      cmessage = <span class="stringliteral">&#39;Did not find NO or NOx tracer&#39;</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      errcode  = 1</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (<span class="stringliteral">&#39;UKCA_ADD_EMISS&#39;</span>, errcode, cmessage)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">IF</span> ((l_ukca_aerchem .OR. l_ukca_achem) .AND. iso2 == -99) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      cmessage = <span class="stringliteral">&#39;Did not find SO2 tracer&#39;</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      errcode  = 1</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (<span class="stringliteral">&#39;UKCA_ADD_EMISS&#39;</span>, errcode, cmessage)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">!   This block replicates the code in UKCA_EMISSION_CTL. It is only used by</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">!   the Newton-Raphson (N-R) solver, which needs to get molmass and lbc_molmass</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">!   before passing them to ASAD_EMISSIONS_DIAGNOSTICS for the calculation</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">!   of ASAD diagnostics in the right units.</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keywordflow">IF</span> (l_ukca_chem .AND. method == <a class="code" href="namespaceukca__chem__schemes__mod.xhtml#abcaccf496bbd6bf23bcfffd6aa567db2">int_method_nr</a>) <span class="keywordflow">THEN</span>    <span class="comment">! N-R solver</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">!     Allocate and initialise array with molar masses of emitted species</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;      <span class="keywordflow">IF</span> (any(<a class="code" href="namespaceukca__d1__defs.xhtml#afdc77c4596d6446bbed092bf8e81a735">em_chem_spec</a> == <span class="stringliteral">&#39;NO_aircrft&#39;</span>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keyword">ALLOCATE</span> (molmass(<a class="code" href="namespaceukca__d1__defs.xhtml#a65bf64b6c3f9578f63de277ef33b6407">n_use_emissions</a>-1))</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keyword">ALLOCATE</span> (molmass(<a class="code" href="namespaceukca__d1__defs.xhtml#a65bf64b6c3f9578f63de277ef33b6407">n_use_emissions</a>))</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;      molmass(:) = 0.0</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">!     Get the molar masses of emitted species</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;      <span class="keywordflow">DO</span> k = 1, <span class="keyword">SIZE</span>(molmass)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        molmass(k) = <a class="code" href="namespaceget__molmass__mod.xhtml#af842dae1457eeea22149e35c81d4bbdd">get_molmass</a>(<a class="code" href="namespaceukca__d1__defs.xhtml#afdc77c4596d6446bbed092bf8e81a735">em_chem_spec</a>(k))</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">! Check if all the emitted species have a valid molecular weight</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;      <span class="keywordflow">IF</span> (any(molmass(:) &lt; small_number)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        n = 0</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="keywordflow">DO</span> k = 1, <span class="keyword">SIZE</span>(molmass)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;          <span class="keywordflow">IF</span> (molmass(k) &lt; small_number) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;              cmessage = <span class="stringliteral">&#39; Species: &#39;</span> // trim(<a class="code" href="namespaceukca__d1__defs.xhtml#afdc77c4596d6446bbed092bf8e81a735">em_chem_spec</a>(k)) //     &amp;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                         <span class="stringliteral">&#39; missing from molmass list.&#39;</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;              errcode  = -k</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;              <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (<span class="stringliteral">&#39;UKCA_ADD_EMISS&#39;</span>, errcode, cmessage)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;              n = n + 1</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keywordflow">IF</span> (n &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;          cmessage = <span class="stringliteral">&#39; Species missing from molmass list&#39;</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;          errcode  = n</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (<span class="stringliteral">&#39;UKCA_ADD_EMISS&#39;</span>, errcode, cmessage)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! is any molmass &lt; small_number ?</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;      <span class="keywordflow">IF</span> (l_ukca_strat .OR. l_ukca_strattrop .OR. l_ukca_stratcfc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">! Set MMRs of N2O, CFCs and halons to specified global constants,</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">! which may follow a time dependence. Set values of inorganic</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">! Cl and Br compounds to 0 at lower boundary.</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">! Adjust this if new stratospheric species are introduced.</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">! The diagnostic (surface emission) contains the additional</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">! amount of tracer in mols added globally, which is negative</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">! in case of sink gases.</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keyword">ALLOCATE</span> (lbc_molmass(n_boundary_vals))</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        lbc_molmass(:) = 0.0</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">!       Get the molar masses of species with lower boundary condition</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <span class="keywordflow">DO</span> k = 1, n_boundary_vals</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;          lbc_molmass(k) = <a class="code" href="namespaceget__molmass__mod.xhtml#af842dae1457eeea22149e35c81d4bbdd">get_molmass</a>(<a class="code" href="namespaceukca__d1__defs.xhtml#a6f00f3ef0b161294f5c3c8312b7c9679">lbc_spec</a>(k))</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        n = 0</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="keywordflow">DO</span> k = 1, n_boundary_vals</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;          <span class="keywordflow">IF</span> (lbc_molmass(k) &lt; small_number) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            cmessage = <span class="stringliteral">&#39;Species &#39;</span> // trim(<a class="code" href="namespaceukca__d1__defs.xhtml#a6f00f3ef0b161294f5c3c8312b7c9679">lbc_spec</a>(k)) //                  &amp;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                      <span class="stringliteral">&#39; missing from lower boundary condition molmass list.&#39;</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;            errcode  = -k</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (<span class="stringliteral">&#39;UKCA_ADD_EMISS&#39;</span>, errcode, cmessage)</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            n = n + 1</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="keywordflow">IF</span> (n &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;          cmessage = <span class="stringliteral">&#39;Species missing from lower boundary condition &#39;</span> //    &amp;                     <span class="stringliteral">&#39;molmass list&#39;</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;          errcode  = n</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (<span class="stringliteral">&#39;UKCA_ADD_EMISS&#39;</span>, errcode, cmessage)</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="keywordflow">      END IF</span>             <span class="comment">! L_ukca_strat, etc</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="keywordflow">    END IF</span>               <span class="comment">! N-R solver</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;      <span class="keywordflow">DO</span> k = 1, jpctr</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        <span class="keyword">WRITE</span> (<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, <span class="stringliteral">&#39;(A,I3,A,A)&#39;</span>) <span class="stringliteral">&#39;UKCA_ADD_EMISS - tracer &#39;</span>, k, <span class="stringliteral">&#39;: &#39;</span>,&amp;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                                         advt(k)</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_add_emiss&#39;</span>)</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keywordflow">      END DO</span>  </div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;      <span class="keywordflow">DO</span> l = 1, <a class="code" href="namespaceukca__d1__defs.xhtml#a65bf64b6c3f9578f63de277ef33b6407">n_use_emissions</a></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I3,A,A)&#39;</span>)<span class="stringliteral">&#39;UKCA_ADD_EMISS - non-interactive emiss &#39;</span>,&amp;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                                l, <span class="stringliteral">&#39;: &#39;</span>, <a class="code" href="namespaceukca__d1__defs.xhtml#afdc77c4596d6446bbed092bf8e81a735">em_chem_spec</a>(l)</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_add_emiss&#39;</span>)</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;       <span class="comment">! Identify and get all the different scaling factors used    ! to account for hour to hour variability of emissions.</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="comment">!</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="comment">! First find total number of different hourly profiles used.</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="comment">! We must always count the first entry. Then we loop over all    ! the other hourly factors in the emissions structure (starting    ! with the second one). If none of the previous entries match    ! this one, then we have another new type of hourly profile and    ! so we increment num_hourly_profs.</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    num_hourly_profs = 1</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keywordflow">DO</span> l = 2, num_em_flds</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;      <span class="keywordflow">IF</span> (.NOT. any(emissions(1:l-1)%hourly_fact ==   &amp;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                     emissions(l)%hourly_fact) ) <span class="keywordflow">THEN</span>        num_hourly_profs = num_hourly_profs + 1</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keyword">WRITE</span> (<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,X,I2)&#39;</span>)                                             &amp;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;     <span class="stringliteral">&#39;Number of independent hourly emission profiles found: &#39;</span>, num_hourly_profs</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;ukca_add_emiss&#39;</span>)</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="comment">! Allocate arrays which will contain info on all the different</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="comment">! hourly profiles that will be used</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keyword">ALLOCATE</span> (hourly_prof_name(num_hourly_profs))</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keyword">ALLOCATE</span> (field_name(num_hourly_profs))</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="keyword">ALLOCATE</span> (hourly_scaling_all(0:23, num_hourly_profs))</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keyword">ALLOCATE</span> (hourly_scaling_all_2d(row_length, rows, num_hourly_profs))</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="comment">! The arrays with hourly scaling will be filled at each time step</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="comment">! because they will depend on the local time. Here we only initialise</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <span class="comment">! and fill in two arrays:</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="comment">! * array with names of independent hourly profiles found</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="comment">! * array with names of the first field in the list of all emissions    ! for which each hourly profile that was found.</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    hourly_prof_name(:) = <span class="stringliteral">&#39;&#39;</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    field_name(:) = <span class="stringliteral">&#39;&#39;</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="comment">! At least one type of hourly profile should have been found</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    n = 1</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    hourly_prof_name(1) = emissions(1)%hourly_fact</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    field_name(1) = emissions(1)%var_name</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="comment">! Continue filling in if more than one type of hourly profile</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keywordflow">IF</span> (num_hourly_profs &gt; 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;      <span class="keywordflow">DO</span> l = 2, num_em_flds</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        <span class="keywordflow">IF</span> (.NOT. any(emissions(1:l-1)%hourly_fact ==   &amp;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                     emissions(l)%hourly_fact) ) <span class="keywordflow">THEN</span>          n = n + 1          hourly_prof_name(n) = emissions(l)%hourly_fact</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;          field_name(n) = emissions(l)%var_name</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    firstcall = .false.</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="keywordflow">  END IF</span>                  <span class="comment">! firstcall</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;   <span class="comment">! Continue with hourly profiling of emissions, now to fill in the</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  <span class="comment">! arrays with hourly scaling which will change for each timestep.</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  <span class="comment">! Initialise the arrays that were allocated in the first call</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  hourly_scaling_all(:,:)   = 0.0</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  hourly_scaling_all_2d(:,:,:) = 0.0</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;  <span class="comment">! Fill in array &#39;hourly_scaling_all&#39; which contains all the different</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;  <span class="comment">! 1-D hourly scalings (from 0 to 23 h)</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;  <span class="keywordflow">DO</span> p = 1, num_hourly_profs</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceukca__emiss__factors.xhtml#a6cdc9444e139d1f35bc7129af37985c7">hourly_emiss_factors</a> (hourly_prof_name(p), field_name(p) , &amp;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                               hourly_scaling(0:23))</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    hourly_scaling_all(0:23, p) = hourly_scaling(0:23)</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;  <span class="comment">! Calculate local hour as a function of the true longitude and from</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;  <span class="comment">! it a set of grid specific 2-D hourly factors: hourly_scaling_all_2d</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  <span class="comment">! The calculation of the local hour is an approximation. With the loops below</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;  <span class="comment">! we simply create up to 24 time zones of 15 degrees longitude each one  ! covering the whole globe (or fewer zones in the case of a limited area  ! model configuration) and calculate a local time for each of them.</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;  <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;      <span class="comment">! Take nearest integer so that at 0Z all cells of -7.5 to +7.5</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;      <span class="comment">! degrees use the hourly scaling indexed at 0</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;      t_local = nint(true_longitude(i,j)*24.0/(2.0*pi)) + ihour</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;      <span class="comment">!</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;      <span class="comment">! Ensure that t_local is bounded to be between 0 and 23</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;      <span class="keywordflow">IF</span> (t_local &gt;= 24) t_local = t_local - 24</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;      <span class="keywordflow">IF</span> (t_local &lt;   0) t_local = t_local + 24</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;      <span class="keywordflow">DO</span> p = 1, num_hourly_profs</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        <span class="comment">! calculate scaling for diurnal cycle as function of local time</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        hourly_scaling_all_2d(i, j, p) = hourly_scaling_all(t_local, p)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">! -! Go through all emission fields and add them to em_field (:,:,:,k)</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment">! for the corresponding tracer k. This is done by identifying! the emitted tracer and adding the corresponding emissions%values,! which is already in units &#39;kg tracer m-2 s-1&#39;.</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="comment">! Here we also scale the emission field to account for temporal</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">! variability (diurnal and weekly) and for the vertical</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="comment">! spread/distribution of the emissions.</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;  <span class="keywordflow">DO</span> l = 1, num_em_flds       <span class="comment">! loop over emission fields</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    k = -1</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <span class="keywordflow">SELECT CASE</span> (emissions(l)%tracer_name)</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;      <span class="keywordflow">CASE</span> (<span class="stringliteral">&#39;NO_aircrft&#39;</span>, <span class="stringliteral">&#39;NO_lightng&#39;</span>)</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        mapped_tracer =   <span class="stringliteral">&#39;NO        &#39;</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;      <span class="keywordflow">CASE</span> (<span class="stringliteral">&#39;SO2_low   &#39;</span>, <span class="stringliteral">&#39;SO2_high  &#39;</span>, <span class="stringliteral">&#39;SO2_nat   &#39;</span>)</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        mapped_tracer =   <span class="stringliteral">&#39;SO2       &#39;</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      <span class="keywordflow">CASE</span> (<span class="stringliteral">&#39;CH4_wetlnd&#39;</span>)</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        mapped_tracer =   <span class="stringliteral">&#39;CH4       &#39;</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment">!     In the future the new emission system will be extended to work with</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">!     L_UKCA_mode set to TRUE. Similar conditions will then be needed to</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">!     ensure that emiss fields such as</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">!       &#39;BC_biofuel&#39;, &#39;BC_biomass&#39;,&#39;BC_biomass&#39;,</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">!       &#39;OC_biofuel&#39;, &#39;OC_biomass&#39;,&#39;OC_fossil &#39;</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">!     can be mapped to specific aerosol modes.</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment">!     Note that we would need to pass the whole array of tracers</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">!     (including both gas species and aerosols) from ukca_main1.</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="keywordflow">      CASE DEFAULT</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        mapped_tracer = emissions(l)%tracer_name<span class="keywordflow">    END SELECT</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment">!   Loop over tracers to find the position k in em_field (:,:,:,k)</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment">!   to add there the new emission field    DO m = 1, jpctr          ! loop over tracers</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;      <span class="keywordflow">IF</span> (mapped_tracer == advt(m)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;         k = m</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;         <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="comment">!   Stop with error message if tracer not found</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keywordflow">IF</span> (k &lt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;      cmessage = <span class="stringliteral">&#39;Emitted species &#39;</span> // trim(emissions(l)%tracer_name) // &amp;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                 <span class="stringliteral">&#39; cannot be mapped to any atmospheric tracer&#39;</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;      errcode  = -k</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (<span class="stringliteral">&#39;UKCA_ADD_EMISS&#39;</span>, errcode, cmessage)</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="comment">!   Get scaling factor to account for possible hour to hour variability</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="comment">!   First look for the index containing the right hourly factor</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="comment">!   for the emission field</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    pp = -1</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    <span class="keywordflow">DO</span> p = 1, num_hourly_profs</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;      <span class="keywordflow">IF</span> (emissions(l)%hourly_fact == hourly_prof_name(p)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        pp = p</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment">!   Stop with error message if hourly profile not found</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="keywordflow">IF</span> (pp &lt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;      cmessage = <span class="stringliteral">&#39;Emitted field &#39;</span> // trim(emissions(l)%var_name) // &amp;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                 <span class="stringliteral">&#39; cannot be mapped to any hourly profile&#39;</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;      errcode  = -pp</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (<span class="stringliteral">&#39;UKCA_ADD_EMISS&#39;</span>, errcode, cmessage)</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment">!   Get the 2-D hourly scaling (function of lon/lat) for the index found</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    hourly_scaling_2d(:,:) = hourly_scaling_all_2d(:,:,pp)</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="comment">!   Get scaling factor to account for possible day to day variability, i.e.</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="comment">!   for a weekely cycle in the emissions. Note that this factor is set to 1</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="comment">!   in the case of a 360-day calendar because a weekly cycle does not have</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="comment">!   any meaning in that context.</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;      fdaily_scaling = 1.0</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;      <span class="comment">! Do not allow attributes indicating a specific weekly cycle      IF (emissions(l)%daily_fact .NE. &#39;none&#39; .AND.                         &amp;</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;          emissions(l)%daily_fact .NE. <span class="stringliteral">&#39;&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        cmessage = <span class="stringliteral">&#39;Weekly cycle &#39;</span>     // trim(emissions(l)%daily_fact) // &amp;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                   <span class="stringliteral">&#39; not allowed for &#39;</span> // trim(emissions(l)%var_name)   // &amp;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                   <span class="stringliteral">&#39;  in the case of a 360-day calendar&#39;</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        errcode = 1</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (<span class="stringliteral">&#39;UKCA_ADD_EMISS&#39;</span>, errcode, cmessage)</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;      <span class="comment">! Get factor for all days in the week</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceukca__emiss__factors.xhtml#a224adc4a8b38d95cbda039ab63750661">daily_emiss_factors</a> (emissions(l)%daily_fact,  &amp;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                                emissions(l)%var_name,    &amp;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                                daily_scaling(1:7))</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;      <span class="comment">! Get factor for the current day of the week</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;      fdaily_scaling = daily_scaling(iday_week)</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="comment">!   Note that the units conversion (applying the so called base scaling)</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="comment">!   is done in ukca_new_emiss_ctl. The vertical factors are stored</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="comment">!   in the emissions structure (from the very first time step of</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="comment">!   ukca_new_emiss_ctl) and will be applied below.</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="comment">!   When L_ukca_prescribech4 is true then make sure that the corresponding</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="comment">!   emission field is zero and prescribe the surface CH4 mass mixing ratio.</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="comment">!   For other tracers and for non-prescribed CH4 add the values from!   the emission structure (with the appropriate corrections) to</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="comment">!   the emission field.</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    <span class="keywordflow">IF</span> (advt(k) == <span class="stringliteral">&#39;CH4       &#39;</span> .AND. l_ukca_prescribech4) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;      em_field(:,:,:,k)             = 0.0</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;      tracers(:,:,surface_level,k) = <a class="code" href="namespaceukca__trace__gas__mixratio.xhtml#a9f897f985271bf44b50a2f9b5b87aff9">um_ch4_for_ukca</a></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="comment">!     Set emiss diagnostics to zero to ensure that no double-counting</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment">!     in the case of surface emissions</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;      emissions(l)%diags (:,:,:) = 0.0</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;      <span class="keywordflow">DO</span> ilev = 1, model_levels</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="comment">!       First create 2D field with values of emissions (already!       corrected for units) to which we apply temporal profiles</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="comment">!       as well as the vertical profile for the given model level.</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="comment">!       Also fill in emission diagnostics.</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="keywordflow">IF</span> (emissions(l)%three_dim) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;          em_field_2d(:,:) = emissions(l)%values(:,:,ilev)    *      &amp;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                              hourly_scaling_2d(:,:)          *      &amp;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                              fdaily_scaling                   *      &amp;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                              emissions(l)%vert_scaling_3d (:,:,ilev)</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;          emissions(l)%diags (:,:,ilev) = em_field_2d(:,:)</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;          em_field_2d(:,:) = emissions(l)%values(:,:,1)       *      &amp;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                              hourly_scaling_2d(:,:)          *      &amp;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                              fdaily_scaling                   *      &amp;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                              emissions(l)%vert_scaling_3d (:,:,ilev)</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="comment">!         Column-integrated diagnostics for 2-D surface emiss:!         Add vertically- and time-scaled emissions at all levels</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="comment">!         and get a total in the column.</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;          emissions(l)%diags (:,:,1) = emissions(l)%diags (:,:,1) + &amp;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                                       em_field_2d(:,:)</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;<span class="comment">!       Add the 2D emission field (with vertical and temporal profiles</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="comment">!       already applied) to the total emission field</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        em_field(:,:,ilev,k) = em_field(:,:,ilev,k) + em_field_2d(:,:)</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="keywordflow">      END DO</span>  <span class="comment">! loop over model_levels</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="keywordflow">    END IF</span>    <span class="comment">! CH4 &amp; L_ukca_prescribech4 ?</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="keywordflow">  END DO</span>      <span class="comment">! loop over emission fields</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment">! -! After filling in all emission fields now loop over tracers to! first add emissions and later call boundary layer mixing</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;  tr_flux       = 0.0</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;  surf_dep_flux = 0.0</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;  <span class="keywordflow">DO</span> k = 1, jpctr</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="comment">!   For stratospheric chemistry schemes some species should</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="comment">!   be set to lower boundary conditions. When that is the!   case then set emissions to difference of tracer at surface!   and intended value, scaled with mass in gridbox,!   area and timestep, to turn it into a surface emission rate.</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="comment">!   No emissions for other model levels    IF (L_ukca_strat .OR. L_ukca_stratcfc .OR. L_ukca_strattrop) THEN</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;      <span class="keywordflow">DO</span> l = 1, n_boundary_vals</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        <span class="keywordflow">IF</span> (advt(k) == <a class="code" href="namespaceukca__d1__defs.xhtml#a6f00f3ef0b161294f5c3c8312b7c9679">lbc_spec</a>(l)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;          em_field(:,:,:,            k) = 0</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;          em_field(:,:,surface_level,k) =                               &amp;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                   (<a class="code" href="namespaceukca__d1__defs.xhtml#a7c8e64fb8e4df43dde09f7df3274cb91">lbc_mmr</a>(l) - tracers(:,:,surface_level,k))        *  &amp;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                   mass(:,:,surface_level) / surf_area(:,:) / timestep</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="keywordflow">    END IF</span>   <span class="comment">! L_ukca_strat, etc</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;<span class="comment">!   Note that one could include conditions on advt(k) here (or on</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="comment">!   emissions(l)%tracer_name in the previous loop for emission fields)!   to fill in 3D emission arrays such as</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="comment">!       SO2_volc_3D (1:row_length,1:rows,1:model_levels)</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment">!       BC_biom_3D  (1:row_length,1:rows,1:model_levels)</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="comment">!       OC_biom_3D  (1:row_length,1:rows,1:model_levels)</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment">!   which can be passed to UKCA_MAIN1 and from there to UKCA_AERO_CTL</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="comment">!   (if we keep that routine with the new emission system).</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="comment">!   That will be done when L_ukca_new_emiss is ready for working!   with L_UKCA_mode. Attention will be needed to any change of</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="comment">!   units to ensure consistency.</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="comment">!   Add emissions over all model layers except at surface</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    <span class="keywordflow">DO</span> ilev = 2, model_levels</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(em_field(:,:,ilev,k)) &gt; 1e-30) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespacetrsrce__mod.xhtml#a7eefc5bc8717562e297c331a549d63f1">trsrce</a>(                                                   &amp;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            rows, row_length, 0, 0, 0, 0,                                &amp;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;            model_levels, wet_levels,                                    &amp;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;            0, 0,                                                        &amp;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;            theta, q, qcl, qcf , exner_rho_levels, rho_r2,               &amp;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;            tracers(:,:,ilev,k), em_field(:,:,ilev,k), ilev,             &amp;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;            timestep, 1, 1, 0.0)</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="comment">!   Call boundary layer mixing and add surface emissions.</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="comment">!   Exclude H2O tracer here if advected.</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    <span class="keywordflow">IF</span> (advt(k) /= <span class="stringliteral">&#39;H2O       &#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;      <span class="keyword">CALL </span><a class="code" href="tr__mix_8f90.xhtml#a46b8187d395ca81bf4ff84e34cf7173c">tr_mix</a> (                                               &amp;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;            bl_levels, <a class="code" href="namespacebl__option__mod.xhtml#a4d4d768b22319d5970e78429dc03f23b">alpha_cd</a>,                                  &amp;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;            rhokh_mix(:,:,2:), rho_aresist, dtrdz_charney_grid,  &amp;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;            em_field(:,:,surface_level,k), res_factor(:,:),     &amp;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;            kent,     we_lim,     t_frac,     zrzi,               &amp;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;            kent_dsc, we_lim_dsc, t_frac_dsc, zrzi_dsc,           &amp;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;            ml_depth, zhsc, z_half,                               &amp;</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;            tracers(:, :, 1:bl_levels, k),                 &amp;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            tr_flux(:, :, 1:bl_levels, k),                 &amp;</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;            surf_dep_flux(:, :, k)                               &amp;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;            )</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="keywordflow">  END DO</span>                       <span class="comment">! end of loop over tracers</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="comment">! -! Calculate emissions diagnostics for ASAD.</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;<span class="comment">! Note that we are only passing emiss at lowest model level.</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;  <span class="keywordflow">IF</span> (<a class="code" href="namespaceasad__chem__flux__diags.xhtml#a49a1ad79333fb93988a78550b69907ab">l_asad_use_chem_diags</a> .AND. <a class="code" href="namespaceasad__chem__flux__diags.xhtml#a9f238f7b666a4e5b2401db4a6880c29a">l_asad_use_surf_ems</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceasad__chem__flux__diags.xhtml#a7c911e764310970bbf4f3a1b4a1d894a">asad_emissions_diagnostics</a> (    &amp;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;         row_length,                     &amp;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;         rows,                           &amp;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;         model_levels,                   &amp;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;         n_tracers,                      &amp;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;         em_field(:,:,surface_level,:), &amp;  <span class="comment">! 3-D sfc field to replicate what</span></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                                            <span class="comment">! is done in ukca_emission_ctl</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;         surf_area,                      &amp;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;         timestep,                       &amp;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;         <a class="code" href="namespaceukca__d1__defs.xhtml#a65bf64b6c3f9578f63de277ef33b6407">n_use_emissions</a>,                &amp;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;         n_boundary_vals,                &amp;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;         <a class="code" href="namespaceukca__d1__defs.xhtml#afdc77c4596d6446bbed092bf8e81a735">em_chem_spec</a>,                   &amp;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;         <a class="code" href="namespaceukca__d1__defs.xhtml#a6f00f3ef0b161294f5c3c8312b7c9679">lbc_spec</a>,                       &amp;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;         molmass,                        &amp;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;         lbc_molmass,                    &amp;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;         ierr)<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160; <span class="comment">! -! ASAD diagnostics - aircraft NOx emissions.</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespaceasad__chem__flux__diags.xhtml#a49a1ad79333fb93988a78550b69907ab">l_asad_use_chem_diags</a> .AND. <a class="code" href="namespaceasad__chem__flux__diags.xhtml#a71bde3b81857259abd231d39ba240672">l_asad_use_air_ems</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;  <span class="keywordflow">DO</span> l = 1, num_em_flds</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    <span class="keywordflow">IF</span> (emissions(l)%tracer_name == <span class="stringliteral">&#39;NO_aircrft&#39;</span>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;      <span class="comment">! Note that emissions(l)%values (:,:,:) is already expressed as</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;      <span class="comment">! kg(NO) m-2 s-1 because it was multiplied by base_scaling</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;      <span class="comment">! in UKCA_NEW_EMISS_CTL. We will therefore use that field</span></div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;      <span class="comment">! for ASAD diagnostics without any further conversions.</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;      conv_aircraftems = emissions(l)%values (:,:,:)</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;      <span class="comment">! conv_aircraftems    ==&gt; aircraft NOx emiss, in kg(NO)/m^2/s</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;      <span class="comment">! aircraft_emissions  ==&gt; type flag used in ASAD diags routines</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceasad__chem__flux__diags.xhtml#a7df5ea12dbda9e556b6fa6db338cd8e1">asad_3d_emissions_diagnostics</a>(                             &amp;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;               row_length, rows, model_levels,                        &amp;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;               inox, conv_aircraftems,  surf_area,                    &amp;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;               totnodens, volume, mass,                               &amp;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;               m_no, timestep, <a class="code" href="namespaceasad__chem__flux__diags.xhtml#a46e356a79d09ae9962a937b28fe36ded">aircraft_emissions</a>,                    &amp;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;               ierr)</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;      <span class="keywordflow">EXIT</span></div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="comment">! -</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="comment">! Emission of volcanic SO2 from explosive volcanic eruptions</span></div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;<span class="comment">! into stratosphere</span></div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;  <span class="keywordflow">IF</span> ((l_ukca_strat .OR. l_ukca_stratcfc .OR.                       &amp;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;       l_ukca_strattrop) .AND. iso2 &gt; 0)  <span class="keywordflow">THEN</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;<span class="comment">!   Diagnostics - volcanic SO2 emissions</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaceasad__chem__flux__diags.xhtml#a49a1ad79333fb93988a78550b69907ab">l_asad_use_chem_diags</a> .AND. <a class="code" href="namespaceasad__chem__flux__diags.xhtml#a1e0478184ffcbfb01339ad98b8158225">l_asad_use_volc_ems</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;      <span class="keyword">ALLOCATE</span> (tmp3dems(row_length, rows, model_levels))</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;      tmp3dems(:,:,:) = tracers(1:row_length, 1:rows, 1:model_levels, iso2)</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="comment">! DEPENDS ON: ukca_volcanic_so2</span></div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <span class="keyword">CALL </span><a class="code" href="ukca__volcanic__so2_8f90.xhtml#a96aed4f187b282062c43a2ed188fb069" title="(c) [University of Cambridge] [2008]. All rights reserved. ">ukca_volcanic_so2</a> (                                        &amp;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;             tracers(1:row_length, 1:rows, :, iso2),               &amp;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;             mass, theta_latitude, true_longitude,                  &amp;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;             delta_phi, delta_lambda,                               &amp;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;             row_length, rows, model_levels,                        &amp;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;             iyear, imonth, iday, timestep,                         &amp;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;             tropopause_height,                                     &amp;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;             r_theta_levels(1:row_length, 1:rows, 1:model_levels))</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="comment">!   Diagnostics - SO2 emissions from explosive volcanic eruptions</span></div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaceasad__chem__flux__diags.xhtml#a49a1ad79333fb93988a78550b69907ab">l_asad_use_chem_diags</a> .AND. <a class="code" href="namespaceasad__chem__flux__diags.xhtml#a1e0478184ffcbfb01339ad98b8158225">l_asad_use_volc_ems</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;      tmp3dems(:,:,:) =                                            &amp;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;       tracers(1:row_length, 1:rows, :, iso2) - tmp3dems(:,:,:)</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="comment">!     tmp3dems               ==&gt; SO2 emission field</span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="comment">!     volcanic_emissions     ==&gt; type flag used in ASAD diagnostic routines</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceasad__chem__flux__diags.xhtml#a7df5ea12dbda9e556b6fa6db338cd8e1">asad_3d_emissions_diagnostics</a>(                           &amp;</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;           row_length, rows, model_levels,                          &amp;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;           iso2, tmp3dems, surf_area,                               &amp;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;           totnodens, volume, mass,                                 &amp;</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;           m_so2, timestep, <a class="code" href="namespaceasad__chem__flux__diags.xhtml#a55aab5cd56fd1bc3144011376009b65b">volcanic_emissions</a>,                     &amp;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;           ierr)</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;      <span class="keyword">DEALLOCATE</span> (tmp3dems)</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="keywordflow">  END IF</span>    <span class="comment">! L_ukca_strat, etc.</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook (<span class="stringliteral">&#39;UKCA_ADD_EMISS&#39;</span>, zhook_out, zhook_handle)</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;<span class="keyword">  END SUBROUTINE </span><a class="code" href="namespaceukca__add__emiss__mod.xhtml#ac794e986c27f0edc65a75f3d3126c71e">ukca_add_emiss</a></div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;<span class="keyword">  END MODULE </span><a class="code" href="namespaceukca__add__emiss__mod.xhtml" title="(C) Crown copyright Met Office. All rights reserved.!&gt; For further details please refer to the file C...">ukca_add_emiss_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
