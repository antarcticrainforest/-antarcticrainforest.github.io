<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/dynamics_advection/cnislt_distribute_poles_c96_1c.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_cd31b8e5b091f70cb512ede7e9775b9c.xhtml">dynamics_advection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">cnislt_distribute_poles_c96_1c.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="cnislt__distribute__poles__c96__1c_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="cnislt__distribute__poles__c96__1c_8f90.xhtml#a89cd185088872ba61ee746be63e7748b" title="Performs distribution of polar data from the calc_non_int_sl_theta. ">cnislt_distribute_poles</a>(                              &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;               sp_send, sp_levels, np_send, np_levels,           &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;               n_procx, ibase, proc_row_group,                   &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;               rows, row_length, model_levels,                   &amp;               off_x1, off_y1, off_x2, off_y2,                   &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;               ime,  at_extremity, w_logic,                      &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;               field_1, field_2)</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="cnislt__distribute__poles__c96__1c_8f90.xhtml#a89cd185088872ba61ee746be63e7748b">   12</a></span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keywordtype">USE </span>mpl<span class="keywordtype">, ONLY</span> : &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    mpl_real</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceum__parparams.xhtml" title="This file belongs in section: MPP. ">um_parparams</a></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ibase                <span class="comment">! base processor on row</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: ime                  <span class="comment">! My processor id</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: model_levels         <span class="comment">! Number of levels</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: n_procx              <span class="comment">! number of procs in row group</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: off_x1               <span class="comment">! Field 1 x halo</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: off_y1               <span class="comment">! Field 1 y halo</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: off_x2               <span class="comment">! Field 2 x halo</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: off_y2               <span class="comment">! Field 2 y halo</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: proc_row_group       <span class="comment">! GCOM group for processor row</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: row_length           <span class="comment">! Length of row in fields</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: rows                 <span class="comment">! Number of rows in fields</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: np_send  (0:n_procx-1)            <span class="comment">! Number of points</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                                                         <span class="comment">! sent at N pole</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: np_levels(0:n_procx-1, model_levels) <span class="comment">! levels sent at                                                            ! N Pole</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: sp_send  (0:n_procx-1)            <span class="comment">! Number of points</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                                         <span class="comment">! sent at S pole</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: sp_levels(0:n_procx-1, model_levels) <span class="comment">! levels sent at</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                                            <span class="comment">! S pole</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: w_logic              <span class="comment">! use the logic for w fields</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: at_extremity(4)      <span class="comment">! At N,S,E,W extremity</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: field_1(1-off_x1:row_length+off_x1, &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                               1-off_y1:rows+off_y1,       &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                               model_levels) <span class="comment">! data for polar distribution</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: field_2(1-off_x2:row_length+off_x2, &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                               1-off_y2:rows+off_y2,       &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                               model_levels) <span class="comment">! data for polar distribution</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">INTEGER</span> :: info       <span class="comment">! GCOM errors</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">INTEGER</span> :: i          <span class="comment">! Looper</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keywordtype">INTEGER</span> :: j          <span class="comment">! Looper</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordtype">INTEGER</span> :: k          <span class="comment">! Looper</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keywordtype">INTEGER</span> :: kk         <span class="comment">! Looper</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordtype">INTEGER</span> :: offset(0:n_procx-1)          <span class="comment">! Offsets for gatherv</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">INTEGER</span> :: count (0:n_procx-1)          <span class="comment">! Counts for gatherv</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">REAL</span> :: ctmp1(2*model_levels*n_procx)   <span class="comment">! Copy of data for broadcast</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keywordtype">REAL</span> :: ctmp2(2,model_levels)   <span class="comment">! Copy of data for broadcast</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CNISLT_DISTRIBUTE_POLES&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordflow">IF</span> (at_extremity(<a class="code" href="namespaceum__parparams.xhtml#a055cccbf23dd97e54f86b7be2fbfccb3">psouth</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  offset(0) = 0</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  count(0) = 2 * sp_send(0)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordflow">DO</span> j = 1, n_procx-1</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    count(j) = 2 * sp_send(j)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    offset(j) = 2 * <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(sp_send(0:j-1))</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">! Put data into buffer for comms</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordflow">DO</span> kk = 1, sp_send(ime)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    k = sp_levels(ime,kk)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    ctmp1(offset(ime) + 2*kk -1) = field_1(1,1,k)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    ctmp1(offset(ime) + 2*kk   ) = field_2(1,1,k)</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keyword">CALL </span>mpl_allgatherv(ctmp1(offset(ime)+1), count(ime),     mpl_real,   &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                      ctmp1,                count,          offset,     &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                      mpl_real,             proc_row_group, info)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">! Unpack the data</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordflow">DO</span> j = 0, n_procx-1</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">IF</span> (sp_send(j) &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <span class="keywordflow">DO</span> kk = 1, sp_send(j)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        k = sp_levels(j,kk)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">! W/W_star need different logic from the rest of the fields</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">IF</span> (w_logic) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;          <span class="keywordflow">IF</span> (ctmp1(offset(j) + 2*kk - 1)  ==                        &amp;              ctmp1(offset(j) + 2*kk    ))    <span class="keywordflow">THEN</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;              field_2(i,1,k) = field_1(i,1,k)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;              field_2(i,1,k) = ctmp1(offset(j) + 2*kk)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;          <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            field_1(i,1,k) = ctmp1(offset(j) + 2*kk -1)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            field_2(i,1,k) = ctmp1(offset(j) + 2*kk   )</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keywordflow">    END IF</span>    <span class="comment">! sp_send</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">! Section 2. North Pole Communications</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keywordflow">IF</span> (at_extremity(<a class="code" href="namespaceum__parparams.xhtml#a575a86c6ed199d617f169b0bbd20ec88">pnorth</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">! Setup offsets and counts</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  offset(0) = 0</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  count(0) = 2 * np_send(0)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordflow">DO</span> j = 1, n_procx-1</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    count(j) = 2 * np_send(j)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    offset(j) = 2 * <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(np_send(0:j-1))</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">! Put data in buffer for comms</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">DO</span> kk = 1, np_send(ime)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    k = np_levels(ime,kk)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    ctmp1(offset(ime) + 2*kk -1) = field_1(1,rows,k)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    ctmp1(offset(ime) + 2*kk   ) = field_2(1,rows,k)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keyword">CALL </span>mpl_allgatherv(ctmp1(offset(ime)+1), count(ime),     mpl_real,   &amp;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                      ctmp1,                count,          offset,     &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                      mpl_real,             proc_row_group, info)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keywordflow">DO</span> j = 0, n_procx-1</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">IF</span> (np_send(j) &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="keywordflow">DO</span> kk = 1, np_send(j)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        k = np_levels(j,kk)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">! W/W_star need different logic from the rest of the fields</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">IF</span> (w_logic) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;          <span class="keywordflow">IF</span> (ctmp1(offset(j) + 2*kk - 1)  ==                        &amp;              ctmp1(offset(j) + 2*kk    ))    <span class="keywordflow">THEN</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;              field_2(i,rows,k) = field_1(i,rows,k)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;              field_2(i,rows,k) = ctmp1(offset(j) + 2*kk)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;          <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            field_1(i,rows,k) = ctmp1(offset(j) + 2*kk -1)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            field_2(i,rows,k) = ctmp1(offset(j) + 2*kk   )</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordflow">    END IF</span>    <span class="comment">! np_send</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CNISLT_DISTRIBUTE_POLES&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="cnislt__distribute__poles__c96__1c_8f90.xhtml#a89cd185088872ba61ee746be63e7748b" title="Performs distribution of polar data from the calc_non_int_sl_theta. ">cnislt_distribute_poles</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
