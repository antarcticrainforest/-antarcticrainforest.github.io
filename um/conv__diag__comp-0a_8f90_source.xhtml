<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/conv_diag_comp-0a.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">conv_diag_comp-0a.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="conv__diag__comp-0a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="conv__diag__comp-0a_8f90.xhtml#a78a8fa44cacc398f731b165c2f466a1f" title="To diagnose convective occurrence and type. ">conv_diag_comp_0a</a>(                                           &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;!&gt; IN values defining field dimensions and subset to be processed :</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;       row_length, rows                                                 &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;!&gt; IN level and points info</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;      , bl_levels, model_levels, wet_levels, nunstable                  &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;      , index_i, index_j                                                &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;!&gt; IN Model switches</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;      , l_mixing_ratio                                                  &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;!&gt; IN grid information</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      , p, p_theta_lev, exner_rho                                       &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;      , rho_only, rho_theta, z_full, z_half                             &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;!&gt; IN Cloud data :</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;      , qcf, qcl, cloud_fraction                                        &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;!&gt; IN everything not covered so far :</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      , pstar, q, theta, exner_theta_levels                             &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      , land_mask, frac_land, timestep                                  &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      , w_copy, w_max, tv1_sd, bl_vscale2                               &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      , deep_flag, past_precip, past_conv_ht                            &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;!&gt; SCM Diagnostics (dummy values in full UM)</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      , nscmdpkgs, l_scmdiags                                           &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      , ntml, ntpar, nlcl                                               &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      , cumulus, l_shallow, l_congestus, l_congestus2 , conv_type       &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      , zh,zhpar,dzh,z_lcl,z_lcl_uv,delthvu,ql_ad                       &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      , cin, cape, entrain_coef                                         &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      , qsat_lcl                                                        &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;       )</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="conv__diag__comp-0a_8f90.xhtml#a78a8fa44cacc398f731b165c2f466a1f">   43</a></span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">, ONLY</span>:                                        &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  pdims_s, tdims_s, tdims</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacelevel__heights__mod.xhtml" title="Constants necessary for model level heights in advection and other schemes. Constants necessary for m...">level_heights_mod</a><span class="keywordtype">, ONLY</span>: &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>             &amp;  <span class="comment">! Radii on theta levels (m) ,r_rho_levels                  ! Radii on rho levels (m)</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__derived__constants__mod.xhtml" title="!&gt; Module holding commonly derived constants used in convection !&gt; Module holding commonly derived co...">cv_derived_constants_mod</a><span class="keywordtype">, ONLY</span>:                                     &amp;   <a class="code" href="namespacecv__derived__constants__mod.xhtml#a18bc83d7c223f455921c3af9b8ed67b0" title="This module calculate commonly used constants derived from!&gt; UM constants. ">ls</a>, <a class="code" href="namespacecv__derived__constants__mod.xhtml#ad8c1e46192d1f8ea2520a661a2564cce">lsrcp</a>, <a class="code" href="namespacecv__derived__constants__mod.xhtml#a1990197805430001e2f0f2e46aa0127c">lcrcp</a>, <a class="code" href="namespacecv__derived__constants__mod.xhtml#a1b6f33ac2ae9bf90c89ae24e610c4d73">gamma_dry</a> </div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__diag__param__mod.xhtml" title="Constants used by convective diagnosis routines. ">cv_diag_param_mod</a><span class="keywordtype">, ONLY</span>:                                            &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <a class="code" href="namespacecv__diag__param__mod.xhtml#a701168407d435d4dc03e536f520e6055" title="Module containing parameters used by the convective diagnosis routines. ">a_plume</a>, <a class="code" href="namespacecv__diag__param__mod.xhtml#a1987e9c3a52f23c7b14b7eaee38b15b0">b_plume</a>, <a class="code" href="namespacecv__diag__param__mod.xhtml#ab946690822b4b67b95815f9976a7eb63">max_t_grad</a></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__param__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_param_mod</a><span class="keywordtype">, ONLY</span>:                                                 &amp;   <a class="code" href="namespacecv__param__mod.xhtml#a8dbe2ebe5f49c49b2ed4d502ef571bd7">max_diag_thpert</a></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>:                                          &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    cp, r, repsilon, c_virtual</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: lc, lf, tm</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g, earth_radius</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__run__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cv_run_mod</a><span class="keywordtype">, ONLY</span>:                                                   &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#a5fea1dcfdbe431050f3fd9e4b0354a57">icvdiag</a>, <a class="code" href="namespacecv__run__mod.xhtml#ac741a76cde0d03191613ca3ccf4fed69">w_cape_limit</a>,                                              &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="namespacecv__run__mod.xhtml#a6ea9c7e06824af2eab9cebf59f2c1272">limit_pert_opt</a>, <a class="code" href="namespacecv__run__mod.xhtml#acaefd1c344d8a47e0b2cce7f0cf446c8">cvdiag_inv</a>, <a class="code" href="namespacecv__run__mod.xhtml#aa61921d556f1ac96eeab8d1a9460b7c6">cvdiag_sh_wtest</a></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecloud__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cloud_inputs_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecloud__inputs__mod.xhtml#a79cb0747bc150aa7b8f838bc144a554d">forced_cu</a></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keywordtype">USE </span>cumulus_test_mod<span class="keywordtype">, ONLY</span>: cumulus_test</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacemean__w__layer__mod.xhtml" title="Calculate the average w over a layer. ">mean_w_layer_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemean__w__layer__mod.xhtml#aeea19c74cf1e965f6809de28da8ce460" title="Subroutine Interface: ">mean_w_layer</a></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceum__parparams.xhtml" title="This file belongs in section: MPP. ">um_parparams</a></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor"></span><span class="keywordtype">USE </span><a class="code" href="namespaces__scmop__mod.xhtml">s_scmop_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>                                   &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a63ec75937e5bfb3e70894cb3e2a08738">t_avg</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5a13db9f3d2b54dc7f02f3fa3fc19ece">t_max</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a45eef9702d217d7da71dcf394198f2d6">t_min</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5a6f815019b3004ecc7040ec4b4d1fd4">t_acc</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a597140e5cb551f5f4651c9b4cd534865">t_div</a>, <a class="code" href="namespaces__scmop__mod.xhtml#acfaa64e6b4c579d708188c5774d8ac7d">t_mult</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a58d068616503a332fdbc2e4c7bb9f23b">t_acc_div</a>         &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#acaad14680fec34a8c1c206ebeb34d239">t_acc_mult</a>, <a class="code" href="namespaces__scmop__mod.xhtml#ab61b1909fcdb9b3f9552d14f2f8839fe">t_const</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a25166a280622f5787108c0078a033004">only_radsteps</a>                                   &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a9e42893fdbe56b604355689cd9248c63">d_sl</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5914c497075c8cbd0e5cd1d211e1a123">d_soilt</a>, <a class="code" href="namespaces__scmop__mod.xhtml#ad97dd1acaa61800db9233ae60f5b1e84">d_bl</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a12df05d6be37b339aab4962186c305b6">d_all</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a1462f6faadb6334b311e602285d8a286">d_soilm</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a80fd65616a49171a9ac7ecac7338d70a">d_tile</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a92a2c3b6b4b2b0dd800234719ca7207b">d_vis</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>   &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a11d031129d23dbffdab391dd303cdd08">d_allxtra</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5de685a17fc8f67d938e5982544ec05f">d_land</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a049e4924fd63af8676e1697fcde11654">d_cloud</a>                                           &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a6ff96781019d621303b6d86d6d2486a5">scmdiag_gen</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5564776c9d09d933db80c6c1c3c47b3d">scmdiag_rad</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a6099058c886f9254fabef330fa2caedd">scmdiag_bl</a>,   <a class="code" href="namespaces__scmop__mod.xhtml#aa95516bacfa8a4f2932fc3e17f5f6b65">scmdiag_surf</a>,  <a class="code" href="namespaces__scmop__mod.xhtml#a89d9b3531f7c5739e1d9b9edf0583d58">scmdiag_land</a>  &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a762d12a388196f9c5a907e8090d18e3a">scmdiag_sea</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a40ccacb1e960d2ef3da728d637e5ebe2">scmdiag_lsp</a>, <a class="code" href="namespaces__scmop__mod.xhtml#abf142f0f2bdc021960cf0c6a5ecd065b">scmdiag_conv</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a73ce0babd803e10fbcb82921346b3ccc">scmdiag_lscld</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a2b946f89404f7668eb56ca960c3c3de6">scmdiag_pc2</a>   &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  , <a class="code" href="namespaces__scmop__mod.xhtml#a61abfb55fdd33cfc5d44f00076f252c8">scmdiag_forc</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a8a1879aca60631ef706c8ce42618ced6">scmdiag_incs</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a765b6df27a911737054c8df3c0746c15">scmdiag_gwd</a></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">! (a) Defining horizontal grid and subset thereof to be processed.</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  row_length           &amp; <span class="comment">! Local number of points on a row</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; ,rows                   <span class="comment">! Local number of rows in a theta field</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">! (b) Defining vertical grid of model atmosphere.</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  bl_levels            &amp; <span class="comment">! Max. no. of &quot;boundary&quot; levels allowed.</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; ,model_levels         &amp; <span class="comment">! number of model levels</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; ,wet_levels           &amp; <span class="comment">! number of wet model levels</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; ,nunstable              <span class="comment">! number of unstable points</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  index_i(nunstable)   &amp; <span class="comment">! column number of unstable points</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; ,index_j(nunstable)     <span class="comment">! row number of unstable points</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;  l_mixing_ratio          <span class="comment">! .true. if q ,qcl,qcf are mixing ratios</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                          <span class="comment">!  otherwise assumed to be specific humidities.</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                             &amp;   p(pdims_s%i_start:pdims_s%i_end,              &amp; <span class="comment">! pressure  on rho levels (Pa)</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    pdims_s%j_start:pdims_s%j_end,              &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    pdims_s%k_start:pdims_s%k_end)              &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; ,p_theta_lev(tdims%i_start:tdims%i_end,        &amp; <span class="comment">! P on theta lev (Pa)</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;              tdims%j_start:tdims%j_end,        &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                          1:tdims%k_end)        &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; ,exner_rho(pdims_s%i_start:pdims_s%i_end,      &amp; <span class="comment">! Exner on rho level</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            pdims_s%j_start:pdims_s%j_end,      &amp; <span class="comment">!</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            pdims_s%k_start:pdims_s%k_end)      &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; ,exner_theta_levels(tdims%i_start:tdims%i_end, &amp; <span class="comment">! exner pressure theta lev</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                     tdims%j_start:tdims%j_end, &amp; <span class="comment">!  (Pa)</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                                 1:tdims%k_end)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                             &amp;   rho_only(row_length,rows,model_levels)        &amp; <span class="comment">! density (kg/m3)</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; ,rho_theta(row_length,rows,model_levels-1)     &amp; <span class="comment">! density th lev (kg/m3)</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; ,z_full(row_length,rows,model_levels)          &amp; <span class="comment">! height th lev (m)</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; ,z_half(row_length,rows,model_levels)            <span class="comment">! height rho lev (m)</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">! (c) Cloud data.</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                           &amp;   qcf(row_length,rows,wet_levels)             &amp; <span class="comment">! Cloud ice (kg/kg air)</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; ,qcl(row_length,rows,wet_levels)             &amp; <span class="comment">! Cloud liquid water (kg/kg air)</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; ,cloud_fraction(row_length, rows, wet_levels)  <span class="comment">! Cloud fraction</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">! (d) Atmospheric + any other data not covered so far, incl control.</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                      &amp;   pstar(row_length, rows)                &amp; <span class="comment">! Surface pressure (Pascals).</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; ,w_copy(row_length,rows,0:model_levels) &amp; <span class="comment">! vertical velocity (m/s)</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; ,w_max(row_length,rows)                 &amp; <span class="comment">! col max vertical velocity (m/s)</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; ,q(row_length,rows,wet_levels)          &amp; <span class="comment">! water vapour (kg/kg)</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; ,theta(tdims%i_start:tdims%i_end,       &amp; <span class="comment">! Theta (Kelvin)</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        tdims%j_start:tdims%j_end,       &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                    1:tdims%k_end)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::           &amp;  land_mask(row_length, rows)      <span class="comment">! T if land, F elsewhere.</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::              &amp;   timestep                       &amp; <span class="comment">! timestep (seconds).</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; ,frac_land(nunstable)           &amp; <span class="comment">! fraction of land in gridbox ,tv1_sd(nunstable)              &amp; ! Approx to standard dev of level of                                   ! 1 virtual temperature (K).</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; ,bl_vscale2(nunstable)            <span class="comment">! Velocity scale squared for boundary                                   ! layer eddies (m/s)</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">! History of convection prognostics - set but not used at presentREAL, INTENT(IN) ::              &amp;   deep_flag(row_length,rows)     &amp; ! 0-1.0, 1 if deep last time step</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; ,<a class="code" href="arg__atm__fields_8h.xhtml#ab7139588af6e9f86da80bbb16680e1d7">past_precip</a>(row_length,rows)   &amp; <span class="comment">! convective precip rate last step</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                   <span class="comment">! or a decayed value.</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; ,<a class="code" href="arg__atm__fields_8h.xhtml#ac2ab80216560d9dc65b389939071ab64">past_conv_ht</a>(row_length,rows)    <span class="comment">! Convective cloud top on last step</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                                   <span class="comment">! (m) (NOT USED at present)</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">! Additional variables for SCM diagnostics which are dummy in full UM</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::           &amp;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  nscmdpkgs                        <span class="comment">! No of SCM diagnostics packages</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::           &amp;  l_scmdiags(nscmdpkgs)            <span class="comment">! Logicals for SCM diagnostics packages</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> ::        &amp;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  ntml(row_length,rows)          &amp; <span class="comment">! Number of model levels in the</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                   <span class="comment">! turbulently mixed layer.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; ,ntpar(row_length,rows)         &amp; <span class="comment">! Max levels for parcel ascent</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; ,nlcl(row_length,rows)            <span class="comment">! No. of model layers below the</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                     <span class="comment">! lifting condensation level.</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::        &amp;  cumulus(row_length,rows)       &amp; <span class="comment">! Logical indicator for convection</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; ,l_shallow(row_length,rows)     &amp; <span class="comment">! Logical indicator for shallow Cu</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; ,l_congestus(row_length,rows)   &amp; <span class="comment">! Logical indicator for congestus Cu</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; ,l_congestus2(row_length,rows)    <span class="comment">! Logical ind 2 for congestus Cu</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">! Convective type array ::</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> ::          &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  conv_type(row_length, rows)      <span class="comment">! Integer index describing convective type:</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                                   <span class="comment">!    0=no convection</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                                   <span class="comment">!    1=non-precipitating shallow</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                                   <span class="comment">!    2=drizzling shallow</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                                   <span class="comment">!    3=warm congestus</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                   <span class="comment">!    ...</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                   <span class="comment">!    8=deep convection</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::           &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  zh(row_length,rows)              <span class="comment">! Height above surface of top of boundary</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                   <span class="comment">! layer (metres).</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::             &amp;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  zhpar(row_length,rows)         &amp; <span class="comment">! Height of max parcel ascent (m)</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; ,z_lcl(row_length,rows)         &amp; <span class="comment">! Height of lifting condensation                                   !  level (not a model level) (m)</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; ,z_lcl_uv(row_length,rows)      &amp; <span class="comment">! Height of lifting condensation</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                   <span class="comment">! level on nearest uv level (m)</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; ,dzh(row_length,rows)           &amp; <span class="comment">! Inversion thickness (m)</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; ,delthvu(row_length,rows)       &amp; <span class="comment">! Integral of undilute parcel buoyancy</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                   <span class="comment">! over convective cloud layer</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                                   <span class="comment">! (for convection scheme)</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; ,ql_ad(row_length,rows)         &amp; <span class="comment">! adiabatic liquid water content at                                   ! inversion or cloud top (kg/kg)</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; ,cape(row_length, rows)         &amp; <span class="comment">! CAPE from undilute parcel ascent (m2/s2)</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; ,cin(row_length, rows)          &amp; <span class="comment">! CIN from undilute parcel ascent (m2/s2)</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; ,entrain_coef(row_length,rows)  &amp; <span class="comment">! Entrainment coefficient ,qsat_lcl(row_length,rows)        ! qsat at cloud base</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">! Local variables</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordtype">INTEGER</span> ::   &amp;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  i,j        &amp; <span class="comment">! LOCAL Loop counter (horizontal field index).</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160; ,ii         &amp; <span class="comment">! Local compressed array counter.</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; ,k          &amp; <span class="comment">! LOCAL Loop counter (vertical level index).</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; ,ntpar_l    &amp; <span class="comment">! cloud top level</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; ,mbl          <span class="comment">! Maximum number of model layers allowed in the</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;               <span class="comment">! mixing layer; set to bl_levels-1.</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordtype">INTEGER</span> ::   &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  error        <span class="comment">! error code</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">! Arrays holding various key model levels</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keywordtype">INTEGER</span> ::                 &amp;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  kshmin(nunstable)        &amp; <span class="comment">! Position of buoyancy minimum above</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                             <span class="comment">! topbl (used for shallow Cu diag)</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; ,kcucheck(nunstable)      &amp; <span class="comment">! Position of level just below 2.5km</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                             <span class="comment">! (used for gradient check to diagnose convection)</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; ,k_plume(nunstable)       &amp; <span class="comment">! start level for surface-driven plume</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; ,k_max(nunstable)         &amp; <span class="comment">! level of max parcel buoyancy</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; ,k_max_dil(nunstable)     &amp; <span class="comment">! level of max parcel buoyancy - dilute</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; ,nlcl_min(nunstable)      &amp; <span class="comment">! minimum allowed level of LCL</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; ,k_neutral(nunstable)     &amp; <span class="comment">! level of neutral parcel buoyancy</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; ,k_neutral_dil(nunstable) &amp; <span class="comment">! level of neutral parcel buoyancy - dilute</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; ,k_inv(nunstable)         &amp; <span class="comment">! level from inversion testing</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; ,freeze_lev(nunstable)      <span class="comment">! freezing level</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">! Uncompressed arrays - all points</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keywordtype">REAL</span> ::                      &amp;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  z_lcl_nlcl(row_length,rows)   <span class="comment">! Height of nlcl model level (m)</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">! Compressed arrays store only values for unstable columns</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">! names as original array plus _c</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="keywordtype">INTEGER</span> ::                &amp;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  ntml_c(nunstable)       &amp;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; ,nlcl_c(nunstable)</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keywordtype">LOGICAL</span> ::                &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  l_dilute                  <span class="comment">! if true also DO a dilute ascent</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keywordtype">LOGICAL</span> ::                &amp;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  shmin(nunstable)        &amp; <span class="comment">! Flag for finding min in parcel buoyancy below</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                            <span class="comment">! 3km (for shallow Cu)</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; ,cumulus_c(nunstable)    &amp; <span class="comment">! compressed cumulus ,shallow_c(nunstable)      ! compressed shallow</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keywordtype">REAL</span> ::                                                      &amp;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  q_c(nunstable, model_levels)                               &amp;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160; ,qcl_c(nunstable, model_levels)                             &amp;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; ,qcf_c(nunstable, model_levels)                             &amp;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; ,z_full_c(nunstable, model_levels)                          &amp;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160; ,z_half_c(nunstable, model_levels)                          &amp;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; ,exner_theta_levels_c(nunstable, model_levels)              &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; ,exner_rho_c(nunstable, model_levels)                       &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; ,p_theta_lev_c(nunstable, model_levels)                     &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; ,p_c(nunstable, model_levels)                               &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; ,cloud_fraction_c(nunstable,wet_levels)                     &amp;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160; ,zh_c(nunstable)                                            &amp;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; ,zh_itop_c(nunstable)                                       &amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; ,delthvu_c(nunstable)                                       &amp;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; ,cape_c(nunstable)                                          &amp;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; ,cin_c(nunstable)                                           &amp;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; ,ql_ad_c(nunstable)                                         &amp;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160; ,pstar_c(nunstable)                                         &amp;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; ,qsat_lcl_c(nunstable)</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keywordtype">REAL</span> ::                  &amp;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  z_lcl_c(nunstable)     &amp; <span class="comment">! LCL height rounded to nearest model level</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160; ,zlcl_c(nunstable)        <span class="comment">! Different variable exact height of LCL</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordtype">REAL</span> ::                                 &amp;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  t(nunstable, model_levels)            &amp; <span class="comment">! temperature (from theta)</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160; ,tl(nunstable, model_levels)           &amp; <span class="comment">! Ice/liquid water temperature,                                          ! but replaced by T in LS_CLD.</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; ,qw(nunstable, wet_levels)             &amp; <span class="comment">! Total water content</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; ,svl(nunstable, wet_levels)            &amp; <span class="comment">! Liquid/frozen water virtual</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                                          <span class="comment">! static energy over cp.</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160; ,env_svl(nunstable,wet_levels)         &amp; <span class="comment">! Density (virtual) static energy</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                                          <span class="comment">! over cp for layer.</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; ,par_svl(nunstable,wet_levels)         &amp; <span class="comment">! Density (virtual) static energy</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                                          <span class="comment">! over cp of parcel for level.</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; ,par_svl_dil(nunstable,wet_levels)       <span class="comment">! Density (virtual) static energy</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                                          <span class="comment">! over cp of parcel for level.</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keywordtype">REAL</span> ::                        &amp;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  t_lcl(nunstable)             &amp; <span class="comment">! Temperature at lifting condensation level.</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160; ,p_lcl(nunstable)             &amp; <span class="comment">! Pressure at lifting condensation level.</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; ,sl_plume(nunstable)          &amp; <span class="comment">! Liquid/frozen water static energy</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                                 <span class="comment">! over cp for a plume rising without</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                                 <span class="comment">! dilution from level 1.</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; ,qw_plume(nunstable)          &amp; <span class="comment">! qw for a plume rising without</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                                 <span class="comment">! dilution from level 1.</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160; ,dt_dens_parc_t(nunstable)    &amp; <span class="comment">! t_dens_parc-t_dens_env at ntpar</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; ,dt_dens_parc_tmin(nunstable) &amp; <span class="comment">! t_dens_parc-t_dens_env at kshmin</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160; ,thv_pert(nunstable)          &amp; <span class="comment">! threshold thv of parcel</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">! Added for improved parcel top - mainly used for finding an ascent</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">! capped by an inversion.</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160; ,dt_dens_parc_t2(nunstable)   &amp; <span class="comment">! 2nd copy of Dt_dens_parc_T</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160; ,delthvu2(nunstable)          &amp; <span class="comment">!  2nd copy</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160; ,zh2(nunstable)               &amp; <span class="comment">!  2nd copy</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; ,max_buoy(nunstable)          &amp; <span class="comment">! max parcel buoyancy ,max_buoy_dil(nunstable)      &amp; ! max parcel buoyancy dilute parcel</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160; ,ql_ad2(nunstable)            &amp; <span class="comment">! ql_ad 2nd copy</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160; ,pot_en(nunstable)              <span class="comment">! parcel potential energy when overshooting</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">! parcel calculation</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keywordtype">REAL</span> ::                              &amp;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  t_parc(nunstable, wet_levels)      &amp; <span class="comment">! Temperature of parcel.</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160; ,t_dens_env(nunstable, wet_levels)  &amp; <span class="comment">! Density potential temperature                                       ! of environment.</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; ,denv_bydz(nunstable, wet_levels)   &amp; <span class="comment">! Gradient of density potential</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                                       <span class="comment">! temp in the environment.</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; ,dpar_bydz(nunstable, wet_levels)   &amp; <span class="comment">! Gradient of density potential</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                                       <span class="comment">! temperature of the parcel.</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; ,buoyancy(nunstable, wet_levels)    &amp; <span class="comment">! undilute parcel buoyancy (K)</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160; ,dqsatdz(nunstable, wet_levels)       <span class="comment">! dqsat/dz along adiabat</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">! Arrays added for dilute parcel calculation</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="keywordtype">REAL</span> ::                                    &amp;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  entrain_fraction(nunstable,model_levels) &amp; <span class="comment">! fraction of environmental</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                                             <span class="comment">! air to mix with parcel</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160; ,t_parc_dil(nunstable,model_levels)       &amp; <span class="comment">! dilute parcel temeperature</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160; ,buoyancy_dil(nunstable,wet_levels)         <span class="comment">! dilute parcel buoyancy (K)</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="keywordtype">REAL</span> ::           &amp;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;  z_surf          &amp;  <span class="comment">! approx height of top of surface layer</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160; ,z_neut          &amp;  <span class="comment">! interpolated height of neutral buoyancy</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160; ,dpe             &amp;  <span class="comment">! change in parcel PE between levels</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; ,inc             &amp;  <span class="comment">! CIN/CAPE increment for layer</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160; ,dz              &amp;  <span class="comment">! Layer depth</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160; ,factor          &amp;  <span class="comment">! multiplying factor ,r_over_a           ! radius of a level over radius of earth</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">! required for average w calculation</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="keywordtype">REAL</span> ::                                    &amp;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  dmass_theta(nunstable,model_levels) &amp; <span class="comment">! r**2rho*dr on theta levels</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160; ,w_avg(nunstable)                    &amp; <span class="comment">! mean w over layer (m/s)</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160; ,w_avg2(nunstable)                     <span class="comment">! mean w over layer (m/s)</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keywordtype">CHARACTER (LEN=17)</span>, <span class="keywordtype">PARAMETER</span> ::  routinename = <span class="stringliteral">&#39;conv_diag_comp_0a&#39;</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keywordtype">CHARACTER (LEN=80)</span> :: cmessage        <span class="comment">! error message</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">! Required for SCM diagnostics</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="preprocessor"></span><span class="keywordtype">REAL</span> ::                                  &amp;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;  rout(row_length,rows)                  &amp; <span class="comment">! single level field</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160; ,rout2d(row_length,rows,model_levels)     <span class="comment">! Full field</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">! Mixing ratio, r,  versus specific humidity, q</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">! In most cases the expression to first order are the same</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">!  tl = T - (lc/cp)qcl - [(lc+lf)/cp]qcf</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">!  tl = T - (lc/cp)rcl - [(lc+lf)/cp]rcf  - equally correct definition</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">! thetav = theta(1+cvq)         accurate</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment">!        = theta(1+r/repsilon)/(1+r) ~ theta(1+cvr) approximate</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment">! svl = (tl+gz/cp)*(1+(1/repsilon-1)qt)  !     ~ (tl+gz/cp)*(1+(1/repsilon-1)rt)</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">! dqsat/dT = repsilon*Lc*qsat/(R*T*T)! drsat/dT = repsilon*Lc*rsat/(R*T*T)  equally approximate</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">! Only altering the expression for vapour pressure</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">!  e = qp/repsilon       - approximation!  e = rp/(repsilon+r)   - accurate   !</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment">! 1.0 set variables</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment">!  Set mbl, &quot;maximum number of boundary levels&quot; for the purposes of</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">!  boundary layer height calculation.</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CONV_DIAG_COMP_0A&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;mbl = bl_levels - 1     </div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">! 1.1 initialise just unstable points</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  cumulus_c(ii)    = .false.</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;  shallow_c(ii)    = .false.</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  kcucheck(ii)   = 1</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  freeze_lev(ii) = 1</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;  ntml_c(ii) = 1</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;  nlcl_c(ii) = 1</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">! 2.0 Calculate mass of layers for use later</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="keywordflow">DO</span> k=1, model_levels-1</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  <span class="keywordflow">DO</span> ii=1, nunstable</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    i = index_i(ii)      j = index_j(ii)      r_over_a = <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k)/earth_radius</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    dmass_theta(ii,k) = rho_theta(i,j,k)*r_over_a*r_over_a              &amp;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                           *(r_rho_levels(i,j,k+1)-r_rho_levels(i,j,k))</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment">! 3.0 Calculate various quantities required by the parcel calculations</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment">! compress boundary layer depth</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;  i = index_i(ii)    j = index_j(ii)    zh_c(ii)  = zh(i,j)</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;  z_lcl_c(ii) = z_half(i,j,nlcl_c(ii)+1)</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;  pstar_c(ii) = pstar(i,j)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="keywordflow">DO</span> k = 1, wet_levels</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;  <span class="keywordflow">DO</span> ii=1, nunstable</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    i = index_i(ii)      j = index_j(ii)      t(ii,k) = theta(i,j,k) * exner_theta_levels(i,j,k)</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <span class="comment">! initialise t_parc at all points</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="comment">! added for safety of qsat_mix calls later</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    t_parc(ii,k) = t(ii,k)</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    q_c(ii,k)   = q(i,j,k)</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    qcl_c(ii,k) = qcl(i,j,k)</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    qcf_c(ii,k) = qcf(i,j,k)</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    z_full_c(ii,k) = z_full(i,j,k)     z_half_c(ii,k) = z_half(i,j,k)     exner_theta_levels_c(ii,k) = exner_theta_levels(i,j,k)</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    exner_rho_c(ii,k)          = exner_rho(i,j,k)</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    p_c(ii,k)              = p(i,j,k)</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    p_theta_lev_c(ii,k)    = p_theta_lev(i,j,k)</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    cloud_fraction_c(ii,k) = cloud_fraction(i,j,k)</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">! 3.1 Calculate total water content, qw and Liquid water temperature, tl</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">!     Definitions for qw and tl the same whether q, qcl, qcf  are!     specific humidities or mixing ratio.</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">!    </span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="keywordflow">DO</span> k=1,wet_levels</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;  <span class="keywordflow">DO</span> ii=1, nunstable</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="comment">! Total water   - BL doc P243.10</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    qw(ii,k) = q_c(ii,k) + qcl_c(ii,k) + qcf_c(ii,k)  </div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <span class="comment">! Liquid water temperature as defined  BL doc P243.9</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    tl(ii,k) = t(ii,k) - <a class="code" href="namespacecv__derived__constants__mod.xhtml#a1990197805430001e2f0f2e46aa0127c">lcrcp</a>*qcl_c(ii,k) - <a class="code" href="namespacecv__derived__constants__mod.xhtml#ad8c1e46192d1f8ea2520a661a2564cce">lsrcp</a>*qcf_c(ii,k)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <span class="comment">! Calculate svl: conserved variable  a form of moist static energy /cp    !       svl = (tl+gz/cp)*(1+(1/repsilon-1)qt)  - specific humidity</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    svl(ii,k) = ( tl(ii,k) + <a class="code" href="namespacecv__derived__constants__mod.xhtml#a1b6f33ac2ae9bf90c89ae24e610c4d73">gamma_dry</a> * z_full_c(ii,k) )                   &amp;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                                     * ( 1.0 + c_virtual*qw(ii,k) )</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="comment">! Density potential temperature of environment (K)</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    t_dens_env(ii,k)=t(ii,k)*(1.0+c_virtual*q_c(ii,k)-qcl_c(ii,k)-qcf_c(ii,k))</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment">! 4.0 Parts of parcel calculation common to all options</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="comment">! 4.1 Work out initial parcel properties and LCL</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="keywordflow">DO</span> ii=1, nunstable</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;  k_plume(ii) = 1</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="comment">! Only perform parcel ascent if unstable</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment">! Start plume ascent from grid-level above top of surface layer, taken</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment">! to be at a height, z_surf, given by 0.1*zh</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;  z_surf = 0.1 * zh_c(ii)</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  <span class="keywordflow">DO</span> <span class="keywordflow">WHILE</span>( z_full_c(ii,k_plume(ii))  &lt;   z_surf .AND.                    &amp;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;           <span class="comment">! not reached z_surf</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            svl(ii,k_plume(ii)+1)  &lt;   svl(ii,k_plume(ii)) )</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;           <span class="comment">! not reached inversion</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    k_plume(ii) = k_plume(ii) + 1</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="keywordflow">END DO</span>          <span class="comment">! loop over ii</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a6ea9c7e06824af2eab9cebf59f2c1272">limit_pert_opt</a> == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;  <span class="keywordflow">DO</span> ii=1, nunstable</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    sl_plume(ii) = tl(ii,k_plume(ii)) + <a class="code" href="namespacecv__derived__constants__mod.xhtml#a1b6f33ac2ae9bf90c89ae24e610c4d73">gamma_dry</a> * z_full_c(ii,k_plume(ii))</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    thv_pert(ii) = min( max( <a class="code" href="namespacecv__diag__param__mod.xhtml#a701168407d435d4dc03e536f520e6055" title="Module containing parameters used by the convective diagnosis routines. ">a_plume</a>,                                     &amp;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                       min( <a class="code" href="namespacecv__diag__param__mod.xhtml#ab946690822b4b67b95815f9976a7eb63">max_t_grad</a>*zh_c(ii), <a class="code" href="namespacecv__diag__param__mod.xhtml#a1987e9c3a52f23c7b14b7eaee38b15b0">b_plume</a>*tv1_sd(ii) ) ),  &amp;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                       <a class="code" href="namespacecv__param__mod.xhtml#a8dbe2ebe5f49c49b2ed4d502ef571bd7">max_diag_thpert</a> )</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    qw_plume(ii) = qw(ii,k_plume(ii))</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a6ea9c7e06824af2eab9cebf59f2c1272">limit_pert_opt</a> == 0 .OR. <a class="code" href="namespacecv__run__mod.xhtml#a6ea9c7e06824af2eab9cebf59f2c1272">limit_pert_opt</a> == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;  <span class="keywordflow">DO</span> ii=1, nunstable</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    sl_plume(ii) = tl(ii,k_plume(ii)) + <a class="code" href="namespacecv__derived__constants__mod.xhtml#a1b6f33ac2ae9bf90c89ae24e610c4d73">gamma_dry</a> * z_full_c(ii,k_plume(ii))</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    thv_pert(ii) = max( <a class="code" href="namespacecv__diag__param__mod.xhtml#a701168407d435d4dc03e536f520e6055" title="Module containing parameters used by the convective diagnosis routines. ">a_plume</a>,                                          &amp;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                       min( <a class="code" href="namespacecv__diag__param__mod.xhtml#ab946690822b4b67b95815f9976a7eb63">max_t_grad</a>*zh_c(ii), <a class="code" href="namespacecv__diag__param__mod.xhtml#a1987e9c3a52f23c7b14b7eaee38b15b0">b_plume</a>*tv1_sd(ii) ) )</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    qw_plume(ii) = qw(ii,k_plume(ii))</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="comment">! 4.2 Calculate temperature and pressure of lifting condensation level</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="comment">!       using approximations from Bolton (1980)</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="comment">! DEPENDS ON: lift_cond_lev</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="keyword">CALL </span><a class="code" href="lift__cond__lev__5a_8f90.xhtml#a774a0638566da915666457b732f9dbf0" title="Lifting condensation level calculation. ">lift_cond_lev</a> ( nunstable, model_levels, k_plume,                    &amp;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                     l_mixing_ratio,                                      &amp;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                     pstar_c, q_c, t,                                     &amp;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                     p_theta_lev_c, exner_rho_c, z_half_c,                &amp;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                     t_lcl, p_lcl, zlcl_c, qsat_lcl_c )</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="comment">! Convection scheme requires NLCL to be at least 2.</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="comment">! For model stability over mountains, also require ZLCL &gt; 150m! (approx nlcl=2 for G3 levels)</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="keywordflow">DO</span> ii=1, nunstable</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;  k=3</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;  <span class="keywordflow">DO</span> <span class="keywordflow">WHILE</span> ( z_half_c(ii,k) &lt; 150.0 .AND. k &lt; mbl )    k=k+1</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;  nlcl_min(ii) = k-1</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="comment">! Reset zh  (at this point in the code ntml is initialised as =1)</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;  <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    zh(i,j) = z_half(i,j,ntml(i,j)+1)</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="keywordflow">DO</span> ii=1, nunstable</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;  i = index_i(ii)    j = index_j(ii)    zh_c(ii) = zh(i,j)    zh2(ii)  = zh_c(ii)</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;  z_lcl(i,j)    = zlcl_c(ii)         <span class="comment">! expand up accurate z_lcl  qsat_lcl(i,j) = qsat_lcl_c(ii)     ! expand up qsat at cloud base</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="comment">! Find NLCL</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="comment">!       p,T,q       nlcl+1  , p_theta(nlcl+2)</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;<span class="comment">!    - - - - - - - -   uv,p,rho    nlcl+1,  z_lcl , p(nlcl+1)     either</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="comment">!     + + + + + + + +   lcl, Plcl, not a model level            lower part</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="comment">!       p,T,q       nlcl , p_theta(nlcl+1)          of layer</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="comment">!    - - - - - - - -   uv,p,rho    nlcl   p(nlcl)</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment">!       p,T,q       nlcl+1  , p_theta(nlcl+2)</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="comment">!     + + + + + + + +   lcl, Plcl, not a model level</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="comment">!    - - - - - - - -   uv,p,rho    nlcl+1,  z_lcl , p(nlcl+1)        or</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="comment">!                                                                upper part</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="comment">!       p,T,q       nlcl , p_theta_lev(nlcl+1)      of layer</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="comment">!    - - - - - - - -   uv,p,rho    nlcl   p(nlcl)</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="keywordflow">DO</span> k = 2,wet_levels</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;  <span class="keywordflow">DO</span> ii=1, nunstable</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="comment">! NLCL level</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <span class="keywordflow">IF</span> ( p_lcl(ii)  &lt;   p_c(ii,k) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;      <span class="comment">! compressed copies</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;      nlcl_c(ii)  = k-1</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;      z_lcl_c(ii) = z_half_c(ii,nlcl_c(ii)+1)</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="keywordflow">    END IF</span>     <span class="comment">! test on p_lcl</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment">! Find level just below 2.5km (for use in Cu diagnosis)</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <span class="keywordflow">IF</span> ( z_full_c(ii,k)  &gt;   2500.0                                      &amp;</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;               .AND. kcucheck(ii)  ==  1 ) kcucheck(ii) = k-1</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="comment">! Freezing level</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <span class="keywordflow">IF</span> (t(ii,k) &lt;  tm.AND.t(ii,k-1) &gt;= tm) <span class="keywordflow">THEN</span>       <span class="keywordflow">IF</span> (freeze_lev(ii) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        freeze_lev(ii) = k<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="keywordflow">  END DO</span>       <span class="comment">! ii loop</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="keywordflow">END DO</span>         <span class="comment">! k loop</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="comment">! expand to full arrays</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="keywordflow">DO</span> ii=1, nunstable</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;  i = index_i(ii)    j = index_j(ii)    nlcl(i,j) = nlcl_c(ii)</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;  z_lcl_nlcl(i,j) = z_half_c(ii,nlcl_c(ii)+1)</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;  z_lcl_uv(i,j)   = z_full_c(ii,nlcl_c(ii))</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="keywordflow">END DO</span>       <span class="comment">! ii loop</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="comment">!======================================================================= ! 5.0 Parcel calculation - No convection scheme being called later</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="comment">!                          Only allow undilute parcel ascent!======================================================================= !</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;<span class="comment">!  icvdiag option   |      explaination</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;<span class="comment">!  !     1             |  undilute parcel calculation</span></div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;<span class="comment">!  -  &gt; 2 - - - -   |  - dilute parcel calculation NOT allowed !=======================================================================</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacecv__run__mod.xhtml#a5fea1dcfdbe431050f3fd9e4b0354a57">icvdiag</a> == 1) <span class="keywordflow">THEN</span>  <span class="comment">!======================================================================= </span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;  l_dilute = .false.      </div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="comment">! Dilute parcel ascent options - NOT allowed</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;  error = 2     <span class="comment">! fatal return code</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;  <span class="comment">! Statement assumes icvdiag is in the range that format statement covers.  WRITE(cmessage,&#39;(a40,i6)&#39;)                                   &amp;</span></div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;     <span class="stringliteral">&#39;Convection diagnosis option not allowed &#39;</span>,<a class="code" href="namespacecv__run__mod.xhtml#a5fea1dcfdbe431050f3fd9e4b0354a57">icvdiag</a></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;  <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,error,cmessage)</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="comment">!    End of choice of diagnosis code</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;<span class="comment">! Parcel ascent</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="comment">! Parcel starts from level k_plume and is lifted up.</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;<span class="comment">! If a dilute parcel ascent - mix in environmental air above lifting! condensation level</span></div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;-<span class="comment">! DEPENDS ON: parcel_ascent</span></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;<span class="keyword">CALL </span><a class="code" href="parcel__ascent__5a_8f90.xhtml#ac8687d4575fe13570e71edcd737b4df2" title="Calculates parcel ascent. ">parcel_ascent</a> ( nunstable, wet_levels, nscmdpkgs,                 &amp;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                       nlcl_c, k_plume,                                &amp;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                       l_mixing_ratio, l_dilute, l_scmdiags,           &amp;                       sl_plume, qw_plume,                             &amp;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                       t, tl, q_c, qcl_c, qcf_c, qw, t_dens_env,       &amp;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                       p_theta_lev_c, exner_theta_levels_c,            &amp;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;                       z_full_c, entrain_fraction,                     &amp;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                       t_parc, t_parc_dil,                             &amp;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;                       buoyancy,buoyancy_dil,                          &amp;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                       env_svl, par_svl, par_svl_dil,                  &amp;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;                       denv_bydz, dpar_bydz, dqsatdz )</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="comment">! Tests on parcel ascent - look for an inversion or not</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;  <span class="keywordflow">SELECT CASE</span>(<a class="code" href="namespacecv__run__mod.xhtml#acaefd1c344d8a47e0b2cce7f0cf446c8">cvdiag_inv</a>)</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;  <span class="keywordflow">CASE</span>(0)    <span class="comment">! no inversion testing</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;       <span class="comment">!   Now compare plume s_vl with each model layer s_vl in turn to</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    <span class="comment">!     find the first time that plume has negative buoyancy.</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;       <span class="comment">! DEPENDS ON: cv_parcel_neutral_dil</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    <span class="keyword">CALL </span><a class="code" href="cv__parcel__neutral__dil_8f90.xhtml#a1549a7515921b22c792e5dc0b9986987" title="Calculate level of neutral buoyancy for a dilute and an undilute ascent. ">cv_parcel_neutral_dil</a>(nunstable,model_levels,wet_levels,             &amp;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;               nlcl_c,k_plume,l_dilute,                                       &amp;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;               z_lcl_c, thv_pert, z_full_c, z_half_c, exner_theta_levels_c,   &amp;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;               buoyancy, buoyancy_dil, t_dens_env, dqsatdz,                   &amp;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;               zh_c,                                                          &amp;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;               k_max,k_max_dil,k_neutral,k_neutral_dil,                       &amp;</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;               max_buoy,max_buoy_dil,ql_ad_c,delthvu_c,                       &amp;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;               cape_c,cin_c)</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;       <span class="comment">! Default parcel top properties are assumed to be those when the</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    <span class="comment">! ascent reaches the level of neutral buoyancy.</span></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;   </div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;      ntml_c(ii) = k_neutral(ii)</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="keywordflow">    END DO</span>    <span class="comment">! ii loop</span></div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;       <span class="comment">! Estimate inversion thickness</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;       <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a79cb0747bc150aa7b8f838bc144a554d">forced_cu</a> &gt;= 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;      <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        k = ntml_c(ii)</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        z_neut = z_full_c(ii,k) + buoyancy(ii,k) *                          &amp;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                                  (z_full_c(ii,k+1)-z_full_c(ii,k))/        &amp;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;                                       (buoyancy(ii,k+1)-buoyancy(ii,k))</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        dz = z_full_c(ii,k+1) - z_neut</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        <span class="comment">! Note thv_pert is not included here, we use absolute buoyancy</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        pot_en(ii) = -0.5*buoyancy(ii,k+1)*dz*g/t_dens_env(ii,k+1)</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;        <span class="keywordflow">IF</span> (pot_en(ii) &gt; bl_vscale2(ii) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;          zh_itop_c(ii) = max( zh_c(ii), z_neut -                           &amp;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;              2.0*bl_vscale2(ii)*t_dens_env(ii,k+1)/(buoyancy(ii,k+1)*g) )</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;      <span class="keywordflow">DO</span> k=2,wet_levels-1</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;          <span class="keywordflow">IF</span> (zh_itop_c(ii) &lt; 0.0 .AND. k &gt;= ntml_c(ii)+1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;            <span class="comment">! look for inversion top</span></div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;            dz = z_full_c(ii,k+1) - z_full_c(ii,k)</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;            dpe = - 0.5*(buoyancy(ii,k)+buoyancy(ii,k+1))                   &amp;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;                                            *dz*g/t_dens_env(ii,k)</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;            <span class="keywordflow">IF</span> ( pot_en(ii)+dpe &gt; bl_vscale2(ii) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;              zh_itop_c(ii) = z_full_c(ii,k) +                              &amp;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;                 2.0*(pot_en(ii)-bl_vscale2(ii))*t_dens_env(ii,k)/          &amp;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                            ( (buoyancy(ii,k)+buoyancy(ii,k+1))*g )</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;              pot_en(ii) = pot_en(ii) + dpe</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;<span class="keywordflow">        END DO</span>  <span class="comment">! over ii</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="keywordflow">      END DO</span>  <span class="comment">! over k</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;      <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;        zh_itop_c(ii) = min( zh_itop_c(ii), 2.0*zh_c(ii) )</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;<span class="keywordflow">       END IF</span>  <span class="comment">! test on forced_cu</span></div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;       <span class="comment">! Average vertical velocity over a layer  - required for shallow</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    <span class="comment">!   convection test.</span></div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;       <span class="comment">! Layer from top in cloud w to value 1500km above cloud top   </span></div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacemean__w__layer__mod.xhtml#aeea19c74cf1e965f6809de28da8ce460" title="Subroutine Interface: ">mean_w_layer</a>(nunstable,row_length,rows,model_levels,                 &amp;</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;               ntml_c, index_i, index_j,                                      &amp;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;               1500.0, z_full_c, z_half_c, w_copy, dmass_theta,               &amp;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;               w_avg)</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;     <span class="keywordflow">CASE</span>(1)    <span class="comment">! Original inversion test for shallow convection             ! Only available for undilute ascent</span></div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;       <span class="comment">!   Now compare plume s_vl with each model layer s_vl in turn to</span></div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    <span class="comment">!     find the first time that plume has negative buoyancy.</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;   </div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;    <span class="comment">! DEPENDS ON: cv_parcel_neutral_inv</span></div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    <span class="keyword">CALL </span><a class="code" href="cv__parcel__neutral__inv_8f90.xhtml#a0897fdef4b8519a550412c644f712f4d" title="Calculate level of neutral buoyancy, CAPE and CIN for ascent. ">cv_parcel_neutral_inv</a>(nunstable,model_levels,wet_levels,             &amp;</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;               nlcl_c,k_plume,                                                &amp;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;               z_lcl_c, thv_pert, z_full_c, z_half_c, exner_theta_levels_c,   &amp;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;               buoyancy, t_dens_env, dqsatdz, denv_bydz, dpar_bydz,           &amp;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;               zh_c, zh2,                                                     &amp;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;               k_max,k_neutral,k_inv, kshmin, shmin,                          &amp;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;               max_buoy,dt_dens_parc_t,ql_ad_c,delthvu_c,cape_c,cin_c,        &amp;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;               dt_dens_parc_t2,dt_dens_parc_tmin,ql_ad2,                      &amp;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;               delthvu2)</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;       <span class="comment">! Average vertical velocity over a layer  - required for shallow</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    <span class="comment">!   convection test.</span></div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;       <span class="comment">! Layer from top in cloud w to value 1500km above cloud top</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;   </div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacemean__w__layer__mod.xhtml#aeea19c74cf1e965f6809de28da8ce460" title="Subroutine Interface: ">mean_w_layer</a>(nunstable,row_length,rows,model_levels,                 &amp;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;               k_neutral, index_i, index_j,                                   &amp;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;               1500.0, z_full_c, z_half_c, w_copy, dmass_theta,               &amp;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;               w_avg)</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacemean__w__layer__mod.xhtml#aeea19c74cf1e965f6809de28da8ce460" title="Subroutine Interface: ">mean_w_layer</a>(nunstable,row_length,rows,model_levels,                 &amp;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;               k_inv, index_i, index_j,                                       &amp;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;               1500.0, z_full_c, z_half_c, w_copy, dmass_theta,               &amp;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;               w_avg2)</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;       <span class="comment">! Default parcel top properties are assumed to be those when the</span></div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    <span class="comment">! ascent reaches the level of neutral buoyancy. These may not be those</span></div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    <span class="comment">! required in the case of shallow convection.</span></div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    <span class="comment">! Shallow convection requires the possible identification of an inversion</span></div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    <span class="comment">! at the top of the ascent. This may not be detected by the LNB test.</span></div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    <span class="comment">! The gradient tests are designed to detect the shallow top.</span></div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;       <span class="comment">! Modify top if ascent is likely to be shallow</span></div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;      <span class="keywordflow">IF</span> (shmin(ii) ) <span class="keywordflow">THEN</span>    <span class="comment">! found an inversion           ! points where k_inv not the same as k_neutral and level below freezing</span></div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;        <span class="comment">! may be shallow or congestus or deep</span></div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;        <span class="keywordflow">IF</span> (k_inv(ii) == k_neutral(ii)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;          <span class="comment">!  Both methods give same answer for top level leave shmin set</span></div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;          ntml_c(ii) = k_neutral(ii)</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;          <span class="comment">! Inversion top lower than level of neutral buoyancy.</span></div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;          <span class="comment">! Check also, either below freezing level or less than 2500m for          ! shallow convection.</span></div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ((k_inv(ii) &lt;  freeze_lev(ii) .OR.                       &amp;</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;                           z_full_c(ii,k_inv(ii)+1)  &lt;=  2500.0 )        &amp;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;                   .AND. k_inv(ii) &lt;  k_neutral(ii) )<span class="keywordflow">THEN</span>    </div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;          <span class="keywordflow">IF</span> ( (z_full_c(ii,kshmin(ii)) - z_full_c(ii,k_inv(ii)))        &amp;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;               &lt;=  1.25*(z_half_c(ii,k_inv(ii)+1) - z_lcl_c(ii)).AND.    &amp;</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;               (dt_dens_parc_tmin(ii)  &lt;=  0.55*dt_dens_parc_t2(ii))     &amp;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;               .AND.     (w_avg2(ii)  &lt;   0.0)  ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;            <span class="comment">! May be shallow or congestus</span></div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;            <span class="comment">! set values to those found from inversion testing</span></div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;            ntml_c(ii)  = k_inv(ii)</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;            delthvu_c(ii) = delthvu2(ii)</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;            zh_c(ii)    = zh2(ii)</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;            w_avg(ii)   = w_avg2(ii)</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;            ql_ad_c(ii) = ql_ad2(ii)</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;            dt_dens_parc_t(ii) = dt_dens_parc_t2(ii)</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;          <span class="keywordflow">ELSE</span>   <span class="comment">! Assume not shallow or congestus</span></div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;            ntml_c(ii) = k_neutral(ii)</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;            shmin(ii) = .false.  <span class="comment">! inversion top found not good                                   ! don&#39;t DO shallow tests</span></div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;        <span class="keywordflow">ELSE</span>   <span class="comment">! Assume deep  and therefore top LNB</span></div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;          ntml_c(ii) = k_neutral(ii)</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;          shmin(ii) = .false.  <span class="comment">! inversion top found not good                                   ! don&#39;t DO shallow tests</span></div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;<span class="keywordflow">        END IF</span>        <span class="comment">! tests on k_inv</span></div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;      <span class="keywordflow">ELSE</span>    <span class="comment">!  No inversion found  i.e. shmin=false</span></div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        ntml_c(ii) = k_neutral(ii)</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;<span class="keywordflow">      END IF</span>     <span class="comment">! shmin test</span></div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;<span class="keywordflow">    END DO</span>    <span class="comment">! ii loop</span></div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;<span class="keywordflow">  END SELECT</span>  <span class="comment">! test on type of testing inversion of not.</span></div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;<span class="comment">! Test which points are cumulus</span></div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;<span class="keyword">CALL </span>cumulus_test (nunstable,mbl,wet_levels,                           &amp;</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;                      ntml_c, k_plume, kcucheck,                       &amp;</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;                      zh_c, frac_land, qw, cloud_fraction_c, z_full_c, &amp;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;                      z_lcl_c, nlcl_c, cumulus_c )</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;<span class="comment">!==============================================================================</span></div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;<span class="comment">! No congestus options allowed  - but do go ahead with a deep shallow split</span></div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;<span class="comment">!                                 as used by BL scheme</span></div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;<span class="comment">!==============================================================================</span></div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    <span class="keywordflow">SELECT CASE</span>(<a class="code" href="namespacecv__run__mod.xhtml#acaefd1c344d8a47e0b2cce7f0cf446c8">cvdiag_inv</a>)     <span class="keywordflow">CASE</span>(0)    <span class="comment">! no inversion testing</span></div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;<span class="comment">!CDIR NODEP</span></div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;      <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;        i = index_i(ii)        j = index_j(ii)        <span class="keywordflow">IF</span> ( cumulus_c(ii) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;                <span class="comment">! If cumulus has been diagnosed, determine whether it is shallow</span></div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;        <span class="comment">! or deep convection</span></div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;                <span class="comment">! Conditions for shallow convection</span></div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;        <span class="comment">!  (1) top of parcel ascent &lt; 2500. or T (top of parcel) &gt; TM</span></div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;        <span class="comment">!  (2) Additional condition   w_avg &lt; cvdiag_sh_wtest</span></div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                  ntpar_l = ntml_c(ii)</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;          <span class="keywordflow">IF</span> ( z_full_c(ii,ntpar_l)  &lt;=  2500.0 .OR.                      &amp;</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;                   t(ii,ntpar_l)  &gt;=  tm ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;            <span class="keywordflow">IF</span> ( w_avg(ii)  &lt;  <a class="code" href="namespacecv__run__mod.xhtml#aa61921d556f1ac96eeab8d1a9460b7c6">cvdiag_sh_wtest</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;              shallow_c(ii) = .true.</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;              conv_type(i,j)=1</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;<span class="keywordflow">          END IF</span>  <span class="comment">!  height and temp test</span></div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;<span class="keywordflow">        END IF</span>        <span class="comment">! test on cumulus</span></div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;<span class="keywordflow">      END DO</span>          <span class="comment">! ii loop </span></div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;    <span class="keywordflow">CASE</span>(1)    <span class="comment">! Orignal inversion test</span></div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;<span class="comment">!CDIR NODEP</span></div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;      <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;        i = index_i(ii)        j = index_j(ii)        <span class="keywordflow">IF</span> ( cumulus_c(ii) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                <span class="comment">! If cumulus has been diagnosed, determine whether it is shallow</span></div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;        <span class="comment">! or deep convection</span></div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                <span class="comment">! Conditions for shallow convection</span></div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;        <span class="comment">! (1) w_avg &lt; cvdiag_sh_wtest     (descending air or weak ascent)</span></div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;        <span class="comment">! (2) top of parcel ascent &lt; 2500. or T (top of parcel) &gt; TM</span></div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;        <span class="comment">! (3) height of min buoyancy (above Bl) - height of parcel top T level</span></div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;        <span class="comment">!      &lt;1.25(height parcel top - z lifting condensation level)</span></div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;        <span class="comment">! (4) t_dens_parc -t_dens_env at kshmin &lt;0.55t_dens_parc -t_dens_env</span></div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;        <span class="comment">!     at ntpar</span></div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;        <span class="comment">!</span></div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;        <span class="comment">! The last 2 conditions are looking for a strong inversion at the top</span></div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;        <span class="comment">! of the shallow cumulus.</span></div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;                  <span class="keywordflow">IF</span> ( shmin(ii) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;            ntpar_l = ntml_c(ii)</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;            <span class="keywordflow">IF</span> ( w_avg(ii)  &lt;  <a class="code" href="namespacecv__run__mod.xhtml#aa61921d556f1ac96eeab8d1a9460b7c6">cvdiag_sh_wtest</a> .AND.                  &amp;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;             (z_full_c(ii,ntpar_l)  &lt;=  2500.0 .OR.                   &amp;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                 t(ii,ntpar_l)  &gt;=  tm)                               &amp;</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;            .AND. (z_full_c(ii,kshmin(ii)) - z_full_c(ii,ntpar_l))    &amp;</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;               &lt;=  1.25*(zh_c(ii) - z_lcl_c(ii)) .AND.                &amp;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;              dt_dens_parc_tmin(ii)  &lt;=  0.55*dt_dens_parc_t(ii) ) <span class="keywordflow">THEN</span> </div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;              shallow_c(ii) = .true.</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;             <span class="comment">! may be problem with ntpar diagnosis for deep if wadv test sets</span></div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;             <span class="comment">! l_shallow  false</span></div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;<span class="keywordflow">          END IF</span>       <span class="comment">! test on shmin</span></div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;<span class="keywordflow">        END IF</span>        <span class="comment">! test on cumulus</span></div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="keywordflow">      END DO</span>          <span class="comment">! ii loop </span></div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;<span class="keywordflow">    END SELECT</span>  <span class="comment">! test on type of testing inversion of not.</span></div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;<span class="comment">!=======================================================================</span></div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;<span class="keywordflow">DO</span> ii=1, nunstable</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;  i = index_i(ii)    j = index_j(ii)    <span class="keywordflow">IF</span> (cumulus_c(ii)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;    -    <span class="comment">! Set mixed layer depth to z_lcl</span></div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;    -    <span class="keywordflow">IF</span> (p_lcl(ii)  &lt;   (p_theta_lev_c(ii,nlcl_c(ii)+1))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;      -      <span class="comment">! If LCL is diagnosed in the upper half of the layer set z_lcl to</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;      <span class="comment">! the height of the upper layer interface</span></div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;      <span class="comment">! (in code above LCL is always set to the lower interface).</span></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;      -      nlcl_c(ii) = nlcl_c(ii)+1</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;  <span class="keywordflow">ELSE</span>      <span class="comment">! not cumulus</span></div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;        <span class="comment">!      If not cumulus, reset parameters to within bl_levels</span></div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;        <span class="keywordflow">IF</span> (ntml_c(ii)  &gt;   mbl) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;      ntml_c(ii)  = mbl</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;      zh_c(ii)    = z_half_c(ii,mbl+1)</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;<span class="keywordflow">  END IF</span>        <span class="comment">! test on cumulus</span></div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;    <span class="comment">! nlcl is not permitted to be less than nlcl_min</span></div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;   nlcl_c(ii) = max(nlcl_min(ii), nlcl_c(ii))</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;  <span class="keywordflow">IF</span> ( ntml_c(ii)-nlcl_c(ii) &lt;=2 ) <span class="keywordflow">THEN</span>    <span class="comment">! Cloud layer now too shallow so rediagnose as well-mixed    cumulus_c(ii) = .FALSE.</span></div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;    shallow_c(ii) = .false.</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;    l_congestus(i,j) = .false.</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;<span class="keywordflow">END DO</span>       <span class="comment">! ii loop</span></div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;-<span class="comment">! Expand back up to full arrays-DO ii=1, nunstable</span></div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;  i = index_i(ii)    j = index_j(ii)  </div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;  delthvu(i,j) = delthvu_c(ii)</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;  cape(i,j)    = cape_c(ii)</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;  cin(i,j)     = cin_c(ii)</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;<span class="comment">!  ql_ad(i,j)   = ql_ad_c(ii)    ! Not required as no convection scheme</span></div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;  ntpar(i,j)   = ntml_c(ii)   <span class="comment">! holds parcel top level</span></div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;  zh(i,j)      = zh_c(ii)     <span class="comment">! holds parcel top at this point</span></div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;  dzh(i,j)     = zh_itop_c(ii) - zh_c(ii)</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;  zhpar(i,j)   = zh_c(ii)</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;  <span class="keywordflow">IF</span> (cumulus_c(ii)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;    ntml(i,j)  = nlcl_c(ii)   <span class="comment">! now sets to LCL</span></div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;    zh(i,j)    = z_half_c(ii,nlcl_c(ii)+1)    <span class="comment">! reset to zlcl</span></div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;    ntml(i,j)  = ntml_c(ii)<span class="keywordflow">   END IF</span>    nlcl(i,j)  = nlcl_c(ii)</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;  z_lcl_nlcl(i,j) = z_half_c(ii,nlcl_c(ii)+1)  <span class="comment">! LCL height</span></div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;  z_lcl_uv(i,j)   = z_full_c(ii,nlcl_c(ii))    <span class="comment">! LCL height on uv</span></div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;  <span class="comment">! Cumulus points always have nlcl &lt;= mbl from previous checks</span></div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;  <span class="keywordflow">IF</span> (nlcl_c(ii)  &gt;   mbl) <span class="keywordflow">THEN</span>    <span class="comment">! only applied if not cumulus</span></div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;    nlcl(i,j)    = mbl</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;    z_lcl_nlcl(i,j) = zh_c(ii)</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;    z_lcl_uv(i,j)   = z_full_c(ii,mbl-1)</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;<span class="keywordflow">END DO</span>       <span class="comment">! ii loop</span></div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;<span class="comment">!      If cumulus has been diagnosed but delthvu is negative, reset</span></div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;<span class="comment">!      cumulus and L_shallow to FALSE but leave zh and ntml at LCL</span></div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;<span class="keywordflow">DO</span> ii=1, nunstable</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;  <span class="keywordflow">IF</span> (cumulus_c(ii) .AND. delthvu_c(ii)  &lt;=  0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;    i = index_i(ii)      j = index_j(ii)      cumulus_c(ii)    = .false.</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;    shallow_c(ii)    = .false.</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;<span class="comment">! Expand back shallow and cumulus arrays</span></div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;<span class="keywordflow">DO</span> ii=1, nunstable</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;  i = index_i(ii)    j = index_j(ii)    cumulus(i,j)   = cumulus_c(ii)</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;  l_shallow(i,j) = shallow_c(ii)</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;-<span class="preprocessor">#if defined(SCMA)</span></div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;<span class="comment">!     SCM  Diagnostics all versions</span></div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;<span class="keywordflow">IF</span> (l_scmdiags(<a class="code" href="namespaces__scmop__mod.xhtml#abf142f0f2bdc021960cf0c6a5ecd065b">scmdiag_conv</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;<span class="comment">! single level fields compressed</span></div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;<span class="comment">! Zero output  DO j=1,rows</span></div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;      rout(i,j)=0.0</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;<span class="comment">! Fill as required by expanding field</span></div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;  <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;    i=index_i(ii)</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;    j=index_j(ii)</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;    rout(i,j) = float(k_plume(ii))</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;  <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout,                                                 &amp;</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;             <span class="stringliteral">&#39;k_plume&#39;</span>,<span class="stringliteral">&#39;model level for parcel start&#39;</span>,<span class="stringliteral">&#39; &#39;</span>,             &amp;</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;             <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;  <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;    i=index_i(ii)</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;    j=index_j(ii)</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;    rout(i,j) = qw_plume(ii)</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;  <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout,                                                 &amp;</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;             <span class="stringliteral">&#39;qw_plume&#39;</span>,<span class="stringliteral">&#39;initial parcel water&#39;</span>,<span class="stringliteral">&#39;kg/kg&#39;</span>,                &amp;</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;             <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;  <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;    i=index_i(ii)</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;    j=index_j(ii)</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;    rout(i,j) = sl_plume(ii)</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;  <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout,<span class="stringliteral">&#39;sl_plume&#39;</span>,<span class="stringliteral">&#39;initial parcel energy&#39;</span>,              &amp;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;                       <span class="stringliteral">&#39;J&#39;</span>,<a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a531939b489ce23adb71e2515981989da">d_point</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;<span class="comment">! model level output - compressed fields</span></div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;  <span class="keywordflow">DO</span> k= 1,model_levels</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;    <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;      i=index_i(ii)</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;      j=index_j(ii)</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;      rout2d(i,j,k)= buoyancy(ii,k)</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;  <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout2d,<span class="stringliteral">&#39;buoy_undil&#39;</span>,<span class="stringliteral">&#39;parcel buoyancy -undilute&#39;</span>,      &amp;</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;                       <span class="stringliteral">&#39;K&#39;</span>,<a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename) </div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;  <span class="keywordflow">DO</span> k= 1,model_levels</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;    <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;      i=index_i(ii)</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;      j=index_j(ii)</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;      rout2d(i,j,k)= t_parc(ii,k)</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;  <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout2d,<span class="stringliteral">&#39;t_parc_undil&#39;</span>,<span class="stringliteral">&#39;Undilute Parcel temperature&#39;</span>,  &amp;</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;                       <span class="stringliteral">&#39;K&#39;</span>,<a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! l_scmdiags(scmdiag_conv)</span></div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;<span class="keywordflow">IF</span> (l_scmdiags(<a class="code" href="namespaces__scmop__mod.xhtml#a6099058c886f9254fabef330fa2caedd">scmdiag_bl</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;  <span class="keywordflow">DO</span> k= 1,model_levels</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;    <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;      i=index_i(ii)</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;      j=index_j(ii)</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;      rout2d(i,j,k)=par_svl(ii,k)</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;  <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout2d,<span class="stringliteral">&#39;thv_par&#39;</span>,<span class="stringliteral">&#39;thetav parcel&#39;</span>,                     &amp;</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;                         <span class="stringliteral">&#39;K&#39;</span>, <a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;  <span class="keywordflow">DO</span> k= 1,model_levels</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;    <span class="keywordflow">DO</span> ii=1,nunstable</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;      i=index_i(ii)</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;      j=index_j(ii)</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;      rout2d(i,j,k)=env_svl(ii,k)</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;<span class="comment">! DEPENDS ON: scmoutput</span></div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;  <span class="keyword">CALL </span><a class="code" href="scmoutput_8f90.xhtml#a1ebaa1ca3d36d0fc74ab3a09f13c6d78" title="Create a SCM output diagnostic. ">scmoutput</a>(rout2d,<span class="stringliteral">&#39;thv_env&#39;</span>,<span class="stringliteral">&#39;Environment thetav&#39;</span>,                &amp;</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;                         <span class="stringliteral">&#39;K&#39;</span>,<a class="code" href="namespaces__scmop__mod.xhtml#adb70a12d6474a089d0a5b0f861e193c2">t_inst</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0f351beba305dba0d9e82e98eeabd5d1">d_wet</a>,<a class="code" href="namespaces__scmop__mod.xhtml#a0de635b7af80c9bf26aa5b874f67d655">default_streams</a>,<span class="stringliteral">&#39;&#39;</span>,routinename)</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! l_scmdiags(scmdiag_bl)</span></div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;CONV_DIAG_COMP_0A&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="conv__diag__comp-0a_8f90.xhtml#a78a8fa44cacc398f731b165c2f466a1f" title="To diagnose convective occurrence and type. ">conv_diag_comp_0a</a></div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
