<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/top_level/idl_set_init_4A.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_b65d766d7948d607099cfdc8ce198b76.xhtml">top_level</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">idl_set_init_4A.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="idl__set__init__4_a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespaceeg__idl__set__init__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceeg__idl__set__init__mod.xhtml" title="Subroutine Interface: ">eg_idl_set_init_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespaceeg__idl__set__init__mod.xhtml#ad6336294df6f5e4b4ebcd2561e648438">eg_idl_set_init</a>(                                              &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                      row_length, rows, n_rows, halo_i, halo_j,          &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                      offx, offy, model_levels, qprofile_number,         &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                      tprofile_number, uvprofile_number, problem_number, &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                      t_surface, p_surface,                              &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;                      l_baro_inst, l_HeldSuarez, l_solid_body,           &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;                      l_deep_baro_inst, T0_E, T0_P, b_const, k_const,    &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;                      l_baro_perturbed, l_shallow, l_const_grav,         &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                      l_isothermal, l_rotate_grid,                       &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                      L_initialise_data, L_cartesian,                    &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                      L_perturb_t, L_perturb_q,                          &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                      perturb_magnitude_t, perturb_magnitude_q,          &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                      perturb_height,                                    &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                      idl_bubble_option, idl_max_num_bubbles,            &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                      idl_bubble_max, idl_bubble_width,                  &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                      idl_bubble_height,                                 &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                      idl_bubble_depth, idl_bubble_xoffset,              &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                      idl_bubble_yoffset,                                &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                      datastart, global_row_length, global_rows,         &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                      nproc, g_row_length, g_rows,                       &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                      grid_np_lon, grid_np_lat,                          &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                      aa_jet_u0, aa_jet_a, aa_jet_m, aa_jet_n,           &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                      ring_height, theta_pert,                           &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                      u, v, w, u_adv, v_adv, w_adv,  rho, exner, p_star, &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                      u_np1, v_np1, w_np1, etadot_np1,                   &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                      thetav_np1, rho_np1, exner_np1,                    &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                      m_v_np1, m_cl_np1, m_cf_np1,                       &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                      m_r_np1, m_gr_np1, m_cf2_np1, p_star_np1,          &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                      z_top_of_model,                                    &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                      dtheta_dz1, height_dz1, L_constant_dz,             &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                      u_in, v_in, height_u_in,                           &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                      l_RK_dps, l_dry, alpha_w, ih,                      &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                      etadot, psi_w_surf, psi_w_lid,                     &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                      thetav,m_v, m_cl, m_cf,m_r, m_gr,                  &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                      m_cf2)</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="namespaceeg__idl__set__init__mod.xhtml#ad6336294df6f5e4b4ebcd2561e648438">   43</a></span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jpim, jprb       <span class="comment">!DrHook</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">,  ONLY</span>: lhook, dr_hook   <span class="comment">!DrHook</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacelevel__heights__mod.xhtml" title="Constants necessary for model level heights in advection and other schemes. Constants necessary for m...">level_heights_mod</a></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">USE </span>earth_constants_mod</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceproc__info__mod.xhtml" title="Processor parallel properties and pointers. Processor parallel properties and pointers. ">proc_info_mod</a><span class="keywordtype">,         ONLY</span> : <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>=&gt;<a class="code" href="namespaceproc__info__mod.xhtml#ae59c096631e420aa0312f8f59d09c317">me</a>, <a class="code" href="namespaceproc__info__mod.xhtml#a9d5aa0d84f9ab4d047647a65804a8650">model_domain</a></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacetimestep__mod.xhtml" title="Timestepping values. Timestepping values. ">timestep_mod</a><span class="keywordtype">,          ONLY</span> : <a class="code" href="namespacetimestep__mod.xhtml#af5057870e73925950dded81acfffb0d6">timestep</a>,<a class="code" href="namespacetimestep__mod.xhtml#a5eeea97eaf843661a25badef603b593a" title="Timestep information Updated at start of ATM_STEP every timestep. ">timestep_number</a></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">,           ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacefield__types.xhtml">field_types</a></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceeg__idl__baroclinic__mod.xhtml" title="Subroutine Interface: ">eg_idl_baroclinic_mod</a></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceeg__idl__baroclinic__channel__mod.xhtml" title="Subroutine Interface: ">eg_idl_baroclinic_channel_mod</a></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceeg__idl__rot__solid__body__mod.xhtml" title="Subroutine Interface: ">eg_idl_rot_solid_body_mod</a></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceeg__idl__deep__baroclinic__mod.xhtml" title="Subroutine Interface: ">eg_idl_deep_baroclinic_mod</a></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml" title="Parameters for deep atmosphere baroclinic wave test. ">eg_idl_deep_baro_mod</a></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceeg__idl__initialise__bubble__mod.xhtml" title="Subroutine Interface: ">eg_idl_initialise_bubble_mod</a></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacehoriz__grid__mod.xhtml">horiz_grid_mod</a></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceref__pro__mod.xhtml">ref_pro_mod</a></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacemetric__terms__mod.xhtml">metric_terms_mod</a></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keywordtype">USE </span>atm_fields_bounds_mod</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecoriolis__mod.xhtml">coriolis_mod</a></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacegravity__mod.xhtml">gravity_mod</a></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceeg__swap__bounds__mod.xhtml">eg_swap_bounds_mod</a></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceqprofile__mod.xhtml" title="This file belongs in section: Dynamics Advection This file belongs in section: Dynamics Advection...">qprofile_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceqprofile__mod.xhtml#a590dfa1c9ba5fe0ba5a599a641c183c0" title="for use in idealised problems ">qp_dry</a>, <a class="code" href="namespaceqprofile__mod.xhtml#a7c29833008030a358370a1a1f7220856">qp_qsat</a>, <a class="code" href="namespaceqprofile__mod.xhtml#a318349a7c5a4b54a2220d8af8450fafc">qp_namelist_rh</a>, <a class="code" href="namespaceqprofile__mod.xhtml#ae50466a0d8efd0c8e6aff7adcf845d6c">qp_namelist</a>,      &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                        <a class="code" href="namespaceqprofile__mod.xhtml#a26a0d4bb78ece77b6e57fca48ffb4ea7">qp_dump</a></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacetprofile__mod.xhtml" title="This file belongs in section: Dynamics Advection This file belongs in section: Dynamics Advection...">tprofile_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacetprofile__mod.xhtml#a5921c12c3e920983f402710831cdf9bf" title="for use in idealised problems ">tp_dthetadz</a>, <a class="code" href="namespacetprofile__mod.xhtml#a8c51d5ce0bf91e7a6df9119157cc76d1">tp_isothermal</a>, <a class="code" href="namespacetprofile__mod.xhtml#a1c84d8ce128198f3add21115b44bb4e9">tp_bruntv</a>, <a class="code" href="namespacetprofile__mod.xhtml#acce751d55765cd2f93c31f6b905c0b95">tp_bv_isoth</a>,&amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                        <a class="code" href="namespacetprofile__mod.xhtml#a9c030064f3b98a79b65029c8976496cb">tp_dyn_core</a>, <a class="code" href="namespacetprofile__mod.xhtml#a86e4ec5fa8397426b16e566e814a8f4c">tp_dyn_core_lam</a>, <a class="code" href="namespacetprofile__mod.xhtml#ae69127202ab9d2ba0e71bc40a80af3cc">tp_namelist</a>, <a class="code" href="namespacetprofile__mod.xhtml#ac77e86606825e20ce3eaa5012ac2a00b">tp_dump</a></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceeg__set__adv__winds__mod.xhtml" title="This file belongs in section: Dynamics Advection. ">eg_set_adv_winds_mod</a>                     </div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacedeparture__pts__mod.xhtml">departure_pts_mod</a><span class="keywordtype">, ONLY</span> :                                              &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                      <a class="code" href="namespacedeparture__pts__mod.xhtml#affbd3645de01e67679048a4293743721" title="Method: ">depart_xi1_u</a>, <a class="code" href="namespacedeparture__pts__mod.xhtml#a163a46213d821c684bc569c920c27f20">depart_xi2_u</a>, <a class="code" href="namespacedeparture__pts__mod.xhtml#a81ee2366f6376e69577d2aab30743db2">depart_xi3_u</a>,            &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                      <a class="code" href="namespacedeparture__pts__mod.xhtml#a4fdc4e8ba3950fb1753132a490b47440">depart_xi1_v</a>, <a class="code" href="namespacedeparture__pts__mod.xhtml#aa9eac79bd383383d20136995e38047cb">depart_xi2_v</a>, <a class="code" href="namespacedeparture__pts__mod.xhtml#a59e6dce3c2555dd85f65e402e09390e3">depart_xi3_v</a>,            &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                      <a class="code" href="namespacedeparture__pts__mod.xhtml#afe315b1b60967aaafa6ac8825bce4549">depart_xi1_w</a>, <a class="code" href="namespacedeparture__pts__mod.xhtml#a065aea018ff132210c1424809d800911">depart_xi2_w</a>, <a class="code" href="namespacedeparture__pts__mod.xhtml#afd77d764ad307c7a073b05d3f7b21bec">depart_xi3_w</a>,            &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                      <a class="code" href="namespacedeparture__pts__mod.xhtml#af63275f624e640486ed882f382cfbe4b">depart_xi1_rho</a>,<a class="code" href="namespacedeparture__pts__mod.xhtml#a4f367b5234578e3078b48df185d072ed">depart_xi2_rho</a>,<a class="code" href="namespacedeparture__pts__mod.xhtml#abd2e2e333b8fb60fcab6dbb8beda7c48">depart_xi3_rho</a>,        &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                      <a class="code" href="namespacedeparture__pts__mod.xhtml#a6633e78388f67128871aeaa1834d389f">reset_dpt_pts</a></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceatm__step__local.xhtml" title="Declares variables and allocatable arrays which are local to atm_step!&gt; (and below) ...">atm_step_local</a><span class="keywordtype">,      ONLY</span> : <a class="code" href="namespaceatm__step__local.xhtml#a7efd05dd20ff70b47e3be8a4105ab833">first_atmstep_call</a></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceproblem__mod.xhtml" title="This file belongs in section: Dynamics Advection This file belongs in section: Dynamics Advection...">problem_mod</a><span class="keywordtype">,         ONLY</span>: <a class="code" href="namespaceproblem__mod.xhtml#a73c1a7b18d9c36b1808211031dd6d0e3" title="for use in setting problem types ">standard</a>, <a class="code" href="namespaceproblem__mod.xhtml#ae472d80d1049f42c6c75bf5a917b685b">dynamical_core</a>,                   &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                               <a class="code" href="namespaceproblem__mod.xhtml#ad3cc6c4e32845db7872b5201832cbb5d">idealised_problem</a></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceeg__idl__1d__profs__mod.xhtml" title="Subroutine Interface: ">eg_idl_1d_profs_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceeg__idl__1d__profs__mod.xhtml#adf934cae819e30e56cc0be8194c12fca">eg_idl_1d_profs</a></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceuvhoriz__mod.xhtml" title="This file belongs in section: Dynamics Advection This file belongs in section: Dynamics Advection...">uvhoriz_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceuvhoriz__mod.xhtml#a0c76077305f3869860d2b8963e045730" title="for use in idealised problems ">uv_horiz_const</a>, <a class="code" href="namespaceuvhoriz__mod.xhtml#a8555ab852fa970b22869f3a802d62a5e">uv_horiz_ramp</a>,                      &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                       <a class="code" href="namespaceuvhoriz__mod.xhtml#aa2477c6b0986ddfc36c003f52ecf2386">uv_horiz_balance</a>, <a class="code" href="namespaceuvhoriz__mod.xhtml#a2461e025c2092f40532ad76fa3fb821e">uv_horiz_deform</a>,                  &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                       <a class="code" href="namespaceuvhoriz__mod.xhtml#a1ed9c90d007bebfa0fe3259f3d3b70e8" title="u,v wind vertical profile options ">uv_vert_const</a>, <a class="code" href="namespaceuvhoriz__mod.xhtml#a2e1722b5cc9521a115d2553737d519cc">uv_vert_interp</a>,                      &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                       <a class="code" href="namespaceuvhoriz__mod.xhtml#a685e095111d991d900e62937cd60e6a5">uv_vert_namelist</a>, <a class="code" href="namespaceuvhoriz__mod.xhtml#a9b249518888210dff5b2756c676230f5">uv_vert_dump</a></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceinit__etadot__mod.xhtml">init_etadot_mod</a></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacemissing__data__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">missing_data_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceinit__psiw__mod.xhtml" title="Subroutine Interface: ">init_psiw_mod</a></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">!   Language: Fortran 90.</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">!   This code is written to UM programming standards version 8.3.</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">! Subroutine arguments</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordtype">REAL</span> ::                                                                 &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  etadot(wdims_s%i_start:wdims_s%i_end,                                 &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;         wdims_s%j_start:wdims_s%j_end,                                 &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;         wdims_s%k_start:wdims_s%k_end),                                &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  m_v   (qdims_s%i_start:qdims_s%i_end,                                 &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;         qdims_s%j_start:qdims_s%j_end,                                 &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;         qdims_s%k_start:qdims_s%k_end),                                &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  m_cl  (qdims_s%i_start:qdims_s%i_end,                                 &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;         qdims_s%j_start:qdims_s%j_end,                                 &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;         qdims_s%k_start:qdims_s%k_end),                                &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  m_cf  (qdims_s%i_start:qdims_s%i_end,                                 &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;         qdims_s%j_start:qdims_s%j_end,                                 &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;         qdims_s%k_start:qdims_s%k_end),                                &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  m_r   (qdims_s%i_start:qdims_s%i_end,                                 &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;         qdims_s%j_start:qdims_s%j_end,                                 &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;         qdims_s%k_start:qdims_s%k_end),                                &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  m_gr  (qdims_s%i_start:qdims_s%i_end,                                 &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;         qdims_s%j_start:qdims_s%j_end,                                 &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;         qdims_s%k_start:qdims_s%k_end),                                &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  m_cf2 (qdims_s%i_start:qdims_s%i_end,                                 &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;         qdims_s%j_start:qdims_s%j_end,                                 &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;         qdims_s%k_start:qdims_s%k_end)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordtype">REAL</span> :: thetav(tdims_s%i_start:tdims_s%i_end,                           &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;               tdims_s%j_start:tdims_s%j_end,                           &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;               tdims_s%k_start:tdims_s%k_end)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keywordtype">INTEGER</span> row_length, rows, n_rows, model_levels</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keywordtype">INTEGER</span> offx, offy, halo_i, halo_j</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordtype">REAL</span> ::                                                                 &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  psi_w_surf(row_length,rows),                                          &amp;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  psi_w_lid (row_length,rows)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keywordtype">INTEGER</span> :: global_row_length, global_rows, datastart(3), nproc</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keywordtype">INTEGER</span> :: g_row_length(0:nproc-1), g_rows(0:nproc-1)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordtype">INTEGER</span> aa_jet_m, aa_jet_n, qprofile_number, tprofile_number,           &amp;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        uvprofile_number</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keywordtype">INTEGER</span> :: problem_number</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keywordtype">REAL</span>     t_surface, p_surface, aa_jet_u0, aa_jet_a,               &amp;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;         grid_np_lon, grid_np_lat, z_top_of_model,                &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;         dtheta_dz1(3), height_dz1(2), ring_height, theta_pert</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordtype">REAL</span>    :: u_in(4), v_in(4), height_u_in(3)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordtype">LOGICAL</span> l_baro_inst, l_HeldSuarez, l_solid_body,                  &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;         l_baro_perturbed, l_shallow, l_const_grav,               &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;         l_rotate_grid, l_isothermal, L_initialise_data,          &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;         L_cartesian, L_constant_dz, L_perturb_t, L_perturb_q</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="comment">! Deep baroclinic options</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: l_deep_baro_instREAL,    <span class="keywordtype">INTENT(IN)</span> :: T0_E, T0_PINTEGER, <span class="keywordtype">INTENT(IN)</span> :: b_const, k_const     </div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">! Bubble idealised options</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: idl_max_num_bubbles</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: idl_bubble_option(idl_max_num_bubbles)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>  :: idl_bubble_max(idl_max_num_bubbles)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                    <span class="comment">! Bubble maximum amplitude (K)</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>  :: idl_bubble_width(idl_max_num_bubbles)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                    <span class="comment">! Essentially a scaling factor (m)</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>  :: idl_bubble_depth(idl_max_num_bubbles)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                    <span class="comment">! Currently not used by ENDGame</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>  :: idl_bubble_height(idl_max_num_bubbles)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                    <span class="comment">! Height of bubble centre (m)</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>  :: idl_bubble_xoffset(idl_max_num_bubbles)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;         <span class="comment">! Bubble x-offset (normalised units: 0.5 = domain centre)</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>  :: idl_bubble_yoffset(idl_max_num_bubbles)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;         <span class="comment">! Bubble y-offset (normalised units: 0.5 = domain centre)</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">! Random perturbation settings</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: perturb_magnitude_t  <span class="comment">! Magnitude of theta perturbations (K)</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: perturb_magnitude_q  <span class="comment">! Magnitude of mixing ratio                                         ! perturbations (kg/kg)</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: perturb_height(2) <span class="comment">! Min and max heights for                                         ! perturbations</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">! Arrays</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  u(-offx:row_length-1+offx,1-offy:rows+offy,model_levels),       &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  v(1-offx:row_length+offx,-offy:n_rows-1+offy,model_levels),     &amp;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  w(1-offx:row_length+offx,1-offy:rows+offy,0:model_levels),      &amp;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  u_adv(-halo_i:row_length-1+halo_i,1-halo_j:rows+halo_j,         &amp;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        model_levels),                                            &amp;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  v_adv(1-halo_i:row_length+halo_i,-halo_j:n_rows-1+halo_j,       &amp;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;       model_levels),                                             &amp;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  w_adv(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,         &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        0:model_levels),                                          &amp;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  exner(1-offx:row_length+offx,1-offy:rows+offy,model_levels+1),  &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  p_star(1-offx:row_length+offx, 1-offy:rows+offy),               &amp;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  rho(1-offx:row_length+offx,1-offy:rows+offy,model_levels)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keywordtype">REAL</span>  alpha_w, ih</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordtype">REAL</span>                                                                  &amp;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  u_np1(-offx:row_length-1+offx,1-offy:rows+offy,model_levels),       &amp;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  v_np1(1-offx:row_length+offx,-offy:n_rows-1+offy,model_levels),     &amp;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  w_np1(1-offx:row_length+offx,1-offy:rows+offy,0:model_levels),      &amp;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  etadot_np1(1-offx:row_length+offx,1-offy:rows+offy,0:model_levels), &amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  thetav_np1(1-offx:row_length+offx,1-offy:rows+offy,0:model_levels), &amp;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  exner_np1(1-offx:row_length+offx,1-offy:rows+offy,model_levels+1),  &amp;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  p_star_np1(1-offx:row_length+offx, 1-offy:rows+offy),               &amp;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  rho_np1(1-offx:row_length+offx,1-offy:rows+offy,model_levels),      &amp;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  m_v_np1(1-offx:row_length+offx,1-offy:rows+offy,0:model_levels),    &amp;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  m_cl_np1(1-offx:row_length+offx,1-offy:rows+offy,0:model_levels),   &amp;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  m_cf_np1(1-offx:row_length+offx,1-offy:rows+offy,0:model_levels),   &amp;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  m_r_np1(1-offx:row_length+offx,1-offy:rows+offy,0:model_levels),    &amp;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  m_gr_np1(1-offx:row_length+offx,1-offy:rows+offy,0:model_levels),   &amp;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  m_cf2_np1(1-offx:row_length+offx,1-offy:rows+offy,0:model_levels)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">! Local</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordtype">INTEGER</span> i, j, k, ierr</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordtype">REAL</span>    u_at_w, v_at_w</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keywordtype">LOGICAL</span> l_RK_dps  <span class="comment">! Runge-Kutta departure point flag</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordtype">LOGICAL</span> l_dry     <span class="comment">! dry thermodynamics flag</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keywordtype">LOGICAL</span> initialized</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keywordtype">REAL</span> Ttmp, ptmp</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keywordtype">REAL</span> sat_pc, sat_grad, sat_min, sat_z0, sat_z1</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">! Variables required for using eg_idl_1d_profs</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordtype">REAL</span> :: g_theta_ref(0:model_levels)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keywordtype">REAL</span> :: exner_1D(0:model_levels+1)<span class="keywordtype">REAL</span> :: thetav_1D(0:model_levels)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordtype">REAL</span> :: rho_1D(model_levels)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keywordtype">REAL</span> :: z_theta(0:model_levels)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keywordtype">REAL</span> :: z_rho(model_levels)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keywordtype">REAL</span> :: xi1, xi2</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: depth_factor=1.0</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: surface_offset=0.0</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">! 1.0 Start of subroutine code: perform the calculation.</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EG_IDL_SET_INIT&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;linitialise: <span class="keywordflow">IF</span>( l_initialise_data ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  initialized = .false.</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;firstas: <span class="keywordflow">IF</span>( <a class="code" href="namespaceatm__step__local.xhtml#a7efd05dd20ff70b47e3be8a4105ab833">first_atmstep_call</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;-<span class="comment">! Initialise p_star: Will be computed by the solver at timestep&gt;1</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;-  <span class="keywordflow">IF</span>(tprofile_number.ne.<a class="code" href="namespacetprofile__mod.xhtml#ac77e86606825e20ce3eaa5012ac2a00b">tp_dump</a> .AND. <a class="code" href="namespacetimestep__mod.xhtml#a5eeea97eaf843661a25badef603b593a" title="Timestep information Updated at start of ATM_STEP every timestep. ">timestep_number</a> == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        p_star(i,j) = (p_surface / p_zero)**kappa</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  <span class="keywordflow">SELECT CASE</span>(problem_number)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keywordflow">CASE</span>(<a class="code" href="namespaceproblem__mod.xhtml#ae472d80d1049f42c6c75bf5a917b685b">dynamical_core</a>)</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;      <span class="keywordflow">IF</span> (l_baro_inst) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordflow">IF</span>( <a class="code" href="namespaceproc__info__mod.xhtml#a9d5aa0d84f9ab4d047647a65804a8650">model_domain</a> == mt_global ) <span class="keywordflow">THEN</span>          <span class="keyword">CALL </span><a class="code" href="namespaceeg__idl__baroclinic__mod.xhtml#a9b77e95b3d0e193a1688ff7362d91b03">eg_idl_baroclinic</a>(                                 &amp;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                        row_length, rows, n_rows, halo_i, halo_j, &amp;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                        offx, offy, model_levels,                 &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                        <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#a98ebab02cf8e0f9d47ba708fc3bbc2a1" title="Next two variables are targets for use in multivariate swap_bounds. ">r_at_u</a>,     &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                        <a class="code" href="namespacegravity__mod.xhtml#a8cc71b57bc4d128c01f311582fcee3cf" title="Method: ">g_theta</a>, u, v, w, u_adv, v_adv, w_adv,    &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                        thetav, rho, exner, p_star,               &amp;                        l_baro_perturbed)</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;          initialized = .true.                    <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( <a class="code" href="namespaceproc__info__mod.xhtml#a9d5aa0d84f9ab4d047647a65804a8650">model_domain</a> == mt_cyclic_lam ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceeg__idl__baroclinic__channel__mod.xhtml#ae7fdda6fcad2fbba966c1f54f4312c73">eg_idl_baroclinic_channel</a>(                         &amp;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                        row_length, rows, n_rows, halo_i, halo_j, &amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                        offx, offy, model_levels,                 &amp;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                        <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#a98ebab02cf8e0f9d47ba708fc3bbc2a1" title="Next two variables are targets for use in multivariate swap_bounds. ">r_at_u</a>,     &amp;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                        <a class="code" href="namespacegravity__mod.xhtml#a8cc71b57bc4d128c01f311582fcee3cf" title="Method: ">g_theta</a>, u, v, w, u_adv, v_adv, w_adv,    &amp;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                        thetav, rho, exner, p_star,               &amp;                        l_baro_perturbed)                initialized = .true.</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;          ierr = 1</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&quot;eg_idl_set_init&quot;</span>, ierr,                   &amp;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                       <span class="stringliteral">&quot; Incorrect domain for baroclinic test&quot;</span> )</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordflow">        END IF</span>                        <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (l_solid_body) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceeg__idl__rot__solid__body__mod.xhtml#acead087b588003282086f23a2078c546">eg_idl_rot_solid_body</a>(                               &amp;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                      l_shallow, l_rotate_grid,                   &amp;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                      row_length, rows, n_rows, halo_i, halo_j,   &amp;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                      offx, offy, model_levels,                   &amp;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                      <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#a98ebab02cf8e0f9d47ba708fc3bbc2a1" title="Next two variables are targets for use in multivariate swap_bounds. ">r_at_u</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#a48f16aa4f3654df3e5c8d97e553d084c">r_at_v</a>,               &amp;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                      <a class="code" href="namespacehoriz__grid__mod.xhtml#a39a7bad4a1f7a474e693794ca27b59a1">intw_w2rho</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#a427d5fc353dac81f4b949c11a674878d">intw_rho2w</a>,                     &amp;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                      <a class="code" href="namespacehoriz__grid__mod.xhtml#a717f988106946fde86e83142a7cf02ce" title="Horizontal &amp; Vertical coordinates. ">csxi1_p</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#ae7d16a2ec17be86860e12384f2636874">csxi1_u</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#ac54a2f41798ca9bd827be81a3e1ac390">snxi1_p</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#ac3f9703b72d42166914f59b1cd7297ea">snxi1_u</a>,         &amp;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                      <a class="code" href="namespacehoriz__grid__mod.xhtml#a8f8b6e3a61d28f7216081fed67142eeb">csxi2_p</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#aab85145ff97fc878242d6c4a50a0cd40">snxi2_p</a>,                           &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                      t_surface, p_surface, two_omega,            &amp;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                      grid_np_lon, grid_np_lat,                   &amp;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                      aa_jet_u0, aa_jet_a, aa_jet_m, aa_jet_n,    &amp;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                      <a class="code" href="namespacecoriolis__mod.xhtml#ad6b43f686ec22b310572bb2b06b7fe5c">f1_comp</a>, <a class="code" href="namespacecoriolis__mod.xhtml#a7570584c0484a25cbef71e8247522560">f2_comp</a>, <a class="code" href="namespacecoriolis__mod.xhtml#adaf4cdc660bca8ed89530191ebb0b53a">f3_comp</a>,                  &amp;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                      u, v, w, u_adv, v_adv, w_adv,               &amp;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                      p_star, thetav, rho, exner)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        initialized = .true.</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (l_deep_baro_inst) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceeg__idl__deep__baro__mod.xhtml#ab3079d36d0255542d641912778778a3a">eg_init_idl_deep_baro</a>()</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceeg__idl__deep__baroclinic__mod.xhtml#a33c0c19f2e69031fb5a35345404d3ec3">eg_idl_deep_baroclinic</a>(                              &amp;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                      row_length, rows, n_rows, halo_i, halo_j,   &amp;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                      offx, offy, model_levels,                   &amp;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                      <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>,               &amp;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                      <a class="code" href="namespacelevel__heights__mod.xhtml#a98ebab02cf8e0f9d47ba708fc3bbc2a1" title="Next two variables are targets for use in multivariate swap_bounds. ">r_at_u</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#a48f16aa4f3654df3e5c8d97e553d084c">r_at_v</a>, <a class="code" href="namespacegravity__mod.xhtml#a8cc71b57bc4d128c01f311582fcee3cf" title="Method: ">g_theta</a>,                    &amp;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                      u, v, w, u_adv, v_adv, w_adv,               &amp;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                      thetav, rho, exner, p_star,                 &amp;                      l_baro_perturbed,                           &amp;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                      t0_e, t0_p, b_const, k_const, l_shallow,    &amp;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                      l_rotate_grid, grid_np_lon, grid_np_lat,    &amp;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                      <a class="code" href="namespacecoriolis__mod.xhtml#ad6b43f686ec22b310572bb2b06b7fe5c">f1_comp</a>, <a class="code" href="namespacecoriolis__mod.xhtml#a7570584c0484a25cbef71e8247522560">f2_comp</a>, <a class="code" href="namespacecoriolis__mod.xhtml#adaf4cdc660bca8ed89530191ebb0b53a">f3_comp</a>)                         initialized = .true.</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;      <span class="keywordflow">IF</span> ( idl_bubble_option(1) &gt; 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceeg__idl__initialise__bubble__mod.xhtml#a54d6f766ff233325c952b563ab7b3e0e">eg_idl_initialise_bubble</a>(                            &amp;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                   row_length, rows, halo_i, halo_j,              &amp;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                   offx, offy, model_levels,                      &amp;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                   <a class="code" href="namespacehoriz__grid__mod.xhtml#ae957dfb8433452dbc1ac4a3330541901">delta_xi1</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#a7a3f44c1665c493bc6b9ff316cd81403">delta_xi2</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#a5d604582eb766979fd6026b21c118acc">base_xi1</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#ada3b1eba745d87ac05dc7c8955490d2c">base_xi2</a>,      &amp;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                   <a class="code" href="namespacehoriz__grid__mod.xhtml#a1f826e912b9f334f26b0f333445e9186" title="Method: ">xi1_p</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#ad020c247453d4104934bdffdf8aae94d">xi2_p</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>,    &amp;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                   <a class="code" href="namespacehoriz__grid__mod.xhtml#a39a7bad4a1f7a474e693794ca27b59a1">intw_w2rho</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#a427d5fc353dac81f4b949c11a674878d">intw_rho2w</a>,                        &amp;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                   <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>,                                          &amp;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                   datastart, global_row_length, global_rows,     &amp;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                   idl_max_num_bubbles, idl_bubble_width(1),      &amp;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                   idl_bubble_height(1), idl_bubble_depth(1),     &amp;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                   idl_bubble_xoffset(1), idl_bubble_yoffset(1),  &amp;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                   idl_bubble_max(1), thetav, rho, exner,         &amp;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                   p_star,                                        &amp;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                   t_surface, p_surface, l_cartesian,             &amp;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                   idl_bubble_option(1)                           &amp;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                   )</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="keywordflow">IF</span> ( idl_bubble_option(1) == 2 .AND. <a class="code" href="namespacetimestep__mod.xhtml#a5eeea97eaf843661a25badef603b593a" title="Timestep information Updated at start of ATM_STEP every timestep. ">timestep_number</a> == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;          u = 20.0</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;          v = 20.0</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        initialized = .true.</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">! initialisation required for some diagnostics</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;      exner(:,:,model_levels+1) = 1.</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;      <span class="keywordflow">IF</span> ( .NOT.initialized  ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        ierr = 1         <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>( <span class="stringliteral">&#39;EG_SET_INIT&#39;</span>, ierr,                         &amp;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="stringliteral">&#39;dynamical core initialisation requested but no option chosen&#39;</span> )</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;  <span class="keywordflow">CASE</span>(<a class="code" href="namespaceproblem__mod.xhtml#ad3cc6c4e32845db7872b5201832cbb5d">idealised_problem</a>)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">! First attempt only valid for zero orography</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">DO</span> k=0,model_levels</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;      z_theta(k)=<a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(1,1,k)-earth_radius</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;      <span class="keywordflow">IF</span> (k &gt; 0) z_rho(k)=<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(1,1,k)-earth_radius</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;      g_theta_ref(k)=<a class="code" href="namespacegravity__mod.xhtml#a8cc71b57bc4d128c01f311582fcee3cf" title="Method: ">g_theta</a>(1,1,k)</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    xi1=0.0 <span class="comment">!xi1_p(1)</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    xi2=0.0 <span class="comment">!xi2_p(1)</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">! This is probably best put in a separate subroutine</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceeg__idl__1d__profs__mod.xhtml#adf934cae819e30e56cc0be8194c12fca">eg_idl_1d_profs</a>(exner_1d, rho_1d, thetav_1d,                   &amp;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                           tprofile_number, t_surface, p_surface,       &amp;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                           xi1, xi2, <a class="code" href="namespacehoriz__grid__mod.xhtml#a427d5fc353dac81f4b949c11a674878d">intw_rho2w</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#a39a7bad4a1f7a474e693794ca27b59a1">intw_w2rho</a>,            &amp;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                           z_theta, z_rho,                              &amp;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                           depth_factor, surface_offset,                &amp;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                           dtheta_dz1, height_dz1, l_constant_dz,       &amp;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                           g_theta_ref, model_levels)</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;     <span class="keywordflow">DO</span> k=0,model_levels</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;       thetav(:,:,k)=thetav_1d(k)</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keywordflow">     END DO</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;     <span class="keywordflow">DO</span> k=1,model_levels+1</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;       exner(:,:,k)=exner_1d(k)</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="keywordflow">     END DO</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;     <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;       rho(:,:,k)=rho_1d(k)</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="keywordflow">     END DO</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;     <span class="keywordflow">IF</span> (l_perturb_t .OR. l_perturb_q) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment">! DEPENDS ON: IDL_random_perturb_4A</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;       <span class="keyword">CALL </span><a class="code" href="idl__random__perturb__4_a_8f90.xhtml#a44733c23aab42043a62a6c4d7fc1ee12" title="Adds a random number field to t,q for idealised atmosphere runs. ">idl_random_perturb_4a</a>(                                      &amp;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                            offx, offy, model_levels,                   &amp;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                            <a class="code" href="namespacelevel__heights__mod.xhtml#a47255d1b34083d1a399f41be0d9f703e" title="This module is used to hold levels values set in atmos_init. ">eta_theta_levels</a>, z_top_of_model,           &amp;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                            g_rows, g_row_length,                       &amp;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                            l_perturb_t, perturb_magnitude_t,           &amp;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                            l_perturb_q, perturb_magnitude_q,           &amp;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                            perturb_height,                             &amp;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                            thetav, m_v)</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="keywordflow">     END IF</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;     <span class="keywordflow">SELECT CASE</span>(uvprofile_number)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;     <span class="keywordflow">CASE</span>(<a class="code" href="namespaceuvhoriz__mod.xhtml#a1ed9c90d007bebfa0fe3259f3d3b70e8" title="u,v wind vertical profile options ">uv_vert_const</a>)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;       u=u_in(1)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;       v=v_in(1)</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="keywordflow">     CASE DEFAULT</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;       ierr = 1</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;       <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(<span class="stringliteral">&quot;eg_idl_set_init&quot;</span>, ierr,                   &amp;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                    <span class="stringliteral">&quot;Unknown uvprofile_number&quot;</span> )</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="keywordflow">     END SELECT</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;     <span class="keywordflow">IF</span> ( idl_bubble_option(1) &gt; 0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;       <span class="keyword">CALL </span><a class="code" href="namespaceeg__idl__initialise__bubble__mod.xhtml#a54d6f766ff233325c952b563ab7b3e0e">eg_idl_initialise_bubble</a>(                             &amp;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                   row_length, rows, halo_i, halo_j,              &amp;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                   offx, offy, model_levels,                      &amp;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                   <a class="code" href="namespacehoriz__grid__mod.xhtml#ae957dfb8433452dbc1ac4a3330541901">delta_xi1</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#a7a3f44c1665c493bc6b9ff316cd81403">delta_xi2</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#a5d604582eb766979fd6026b21c118acc">base_xi1</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#ada3b1eba745d87ac05dc7c8955490d2c">base_xi2</a>,      &amp;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                   <a class="code" href="namespacehoriz__grid__mod.xhtml#a1f826e912b9f334f26b0f333445e9186" title="Method: ">xi1_p</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#ad020c247453d4104934bdffdf8aae94d">xi2_p</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>,    &amp;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                   <a class="code" href="namespacehoriz__grid__mod.xhtml#a39a7bad4a1f7a474e693794ca27b59a1">intw_w2rho</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#a427d5fc353dac81f4b949c11a674878d">intw_rho2w</a>,                        &amp;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                   <a class="code" href="namespaceum__parcore.xhtml#aa2c9f33748c85a26e676730601ad75d9" title="Note: These vars were formally part of parvars, but do not &#39;switch&#39; with decomposition, and hence were inappropriately homed there, and also cause circular dependencies when used from very basic routines. ">mype</a>,                                          &amp;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                   datastart, global_row_length, global_rows,     &amp;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                   idl_max_num_bubbles, idl_bubble_width(1),      &amp;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                   idl_bubble_height(1), idl_bubble_depth(1),     &amp;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                   idl_bubble_xoffset(1), idl_bubble_yoffset(1),  &amp;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                   idl_bubble_max(1), thetav, rho, exner,         &amp;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                   p_star,                                        &amp;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                   t_surface, p_surface, l_cartesian,             &amp;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                   idl_bubble_option(1) )</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="keywordflow">     END IF</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="keywordflow">   END SELECT</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;-<span class="comment">! COMMUNICATION/LATERAL BOUNDARIES</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;-</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160; <span class="keyword">CALL </span><a class="code" href="interfaceeg__swap__bounds__mod_1_1eg__swap__bounds.xhtml">eg_swap_bounds</a>(u,udims_s,<a class="code" href="namespacefield__types.xhtml#a13e0d833cb4dd8abd04a2c5556387dd2">fld_type_u</a>,.true.)</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160; <span class="keyword">CALL </span><a class="code" href="interfaceeg__swap__bounds__mod_1_1eg__swap__bounds.xhtml">eg_swap_bounds</a>(v,vdims_s,<a class="code" href="namespacefield__types.xhtml#a02025ece9ce67b25311f692d0c4540ac">fld_type_v</a>,.true.)</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160; <span class="keyword">CALL </span><a class="code" href="interfaceeg__swap__bounds__mod_1_1eg__swap__bounds.xhtml">eg_swap_bounds</a>(w,wdims_s,<a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a>,.false.)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;-<span class="comment">! Initialise etadot: Will be computed by the solver at timestep&gt;1</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;-  tsone : <span class="keywordflow">IF</span>(<a class="code" href="namespacetimestep__mod.xhtml#a5eeea97eaf843661a25badef603b593a" title="Timestep information Updated at start of ATM_STEP every timestep. ">timestep_number</a> == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceinit__etadot__mod.xhtml#a8950db7974c2f8e05114cf76554ea958">init_etadot</a>()</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="keywordflow">    END IF</span> tsone</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">! DEPENDS ON: swap_bounds</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keyword">CALL </span><a class="code" href="swap__bounds-swpbnd2a_8f90.xhtml#aa0269e41062e156c437596022ea9ccd0" title="Portable GCOM based version SWAP_BOUNDS. ">swap_bounds</a>(p_star,                                                &amp;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;       row_length,rows,1,offx,offy,<a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a>,.false.)</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    <span class="keyword">CALL </span><a class="code" href="interfaceeg__swap__bounds__mod_1_1eg__swap__bounds.xhtml">eg_swap_bounds</a>(thetav,tdims_s,<a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a>,.false.)</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    <span class="keyword">CALL </span><a class="code" href="interfaceeg__swap__bounds__mod_1_1eg__swap__bounds.xhtml">eg_swap_bounds</a>(exner,tdims_s,<a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a>,.false.)</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <span class="keyword">CALL </span><a class="code" href="interfaceeg__swap__bounds__mod_1_1eg__swap__bounds.xhtml">eg_swap_bounds</a>(rho,pdims_s,<a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a>,.false.)</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="keywordflow"> END IF</span> firstas</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;  first_ts : <span class="keywordflow">IF</span> (<a class="code" href="namespacetimestep__mod.xhtml#a5eeea97eaf843661a25badef603b593a" title="Timestep information Updated at start of ATM_STEP every timestep. ">timestep_number</a> == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceeg__set__adv__winds__mod.xhtml#a624fc3b6156ad115765f9fce5f96e6f0">eg_set_adv_winds</a>(u,v,etadot,                                  &amp;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                      u_adv,v_adv,w_adv,row_length,rows,n_rows,      &amp;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                      model_levels, halo_i, halo_j, l_shallow)</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <span class="keywordflow">IF</span>(qprofile_number /= <a class="code" href="namespaceqprofile__mod.xhtml#a26a0d4bb78ece77b6e57fca48ffb4ea7">qp_dump</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;      m_v   = 0.0</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;      m_cl  = 0.0</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;      m_cf  = 0.0</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;      m_r   = 0.0</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;      m_gr  = 0.0</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;      m_cf2 = 0.0</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="keywordflow">IF</span>(qprofile_number == <a class="code" href="namespaceqprofile__mod.xhtml#a7c29833008030a358370a1a1f7220856">qp_qsat</a> .AND. .NOT. l_dry) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Setting idealised moisture profile&#39;</span>)</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;      sat_z0 = 1000.0 + earth_radius</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;      sat_z1 = 20000.0 + earth_radius</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;      sat_pc = 0.95</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;      sat_min= 0.01</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;      sat_grad = (sat_pc - sat_min)/(sat_z1-sat_z0)</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;       <span class="keywordflow">DO</span> k = 0,model_levels        <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;          <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="comment">!   Compute T on theta levels                   IF ( k == 0 ) THEN</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;              ttmp = thetav(i,j,k)*(p_star(i,j)/p_zero)**kappa</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;              ptmp = p_star(i,j)</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="comment">! Compute p on theta levels</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;              ptmp = p_zero*(<a class="code" href="namespacehoriz__grid__mod.xhtml#a427d5fc353dac81f4b949c11a674878d">intw_rho2w</a>(k,1)*exner(i,j,k+1) +  &amp;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                             <a class="code" href="namespacehoriz__grid__mod.xhtml#a427d5fc353dac81f4b949c11a674878d">intw_rho2w</a>(k,2)*exner(i,j,k))     &amp;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                             **(1.0/kappa)</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;              ttmp = thetav(i,j,k)*(<a class="code" href="namespacehoriz__grid__mod.xhtml#a427d5fc353dac81f4b949c11a674878d">intw_rho2w</a>(k,1)*exner(i,j,k+1) +  &amp;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                                    <a class="code" href="namespacehoriz__grid__mod.xhtml#a427d5fc353dac81f4b949c11a674878d">intw_rho2w</a>(k,2)*exner(i,j,k))</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">! DEPENDS ON: qsat</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;            <span class="keyword">CALL </span><a class="code" href="qsat_8f90.xhtml#aea6c2f88cb65e881fc815b7be5559cc9" title="Saturation Specific Humidity Scheme (Qsat): Vapour to Liquid/Ice. ">qsat</a>(m_v(i,j,k),ttmp,ptmp,1)                    <span class="keywordflow">IF</span> ( <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) &lt; sat_z0 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;              m_v(i,j,k) = sat_pc*m_v(i,j,k)</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;            <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) &lt; sat_z1 ) <span class="keywordflow">THEN</span>                         m_v(i,j,k) = (sat_pc-sat_grad*(<a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k)-sat_z0)) &amp;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                           *m_v(i,j,k)</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            <span class="keywordflow">ELSE</span>                     m_v(i,j,k) = 0.0</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;      <span class="keyword">CALL </span><a class="code" href="interfaceeg__swap__bounds__mod_1_1eg__swap__bounds.xhtml">eg_swap_bounds</a>(m_v,tdims_s,<a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a>,.false.)</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Moisture profile of  first point&#39;</span>)</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;      i=1</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;      j=1</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;      <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,fmt=<span class="stringliteral">&#39;(I4,2E16.8)&#39;</span>) k,<a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k),m_v(i,j,k)</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;idl_set_init_4A&#39;</span>)<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39; &#39;</span>)</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="keywordflow">  END IF</span> first_ts</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="keywordflow">END IF</span> linitialise</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="comment">! the reconfiguration cannot do this due to the timestep dependency</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="comment">! (and the shallow flag - but we have ignored that elsewhere)</span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="comment">! therefore the reconfiguration fills it with RMDI, which we pick up here</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment">! and fill it if required.</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="keywordflow">IF</span> (  psi_w_surf(pdims%i_start,pdims%j_end) == <a class="code" href="namespacemissing__data__mod.xhtml#a3f0f5f89671006d2b52aac53d30dc926">rmdi</a> )                           &amp;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;   <span class="keyword">CALL </span><a class="code" href="namespaceinit__psiw__mod.xhtml#a725c858851820cf2a606b61473bb1c92">init_psiw</a> (psi_w_surf, psi_w_lid, l_shallow)</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="keyword">CALL </span><a class="code" href="interfaceeg__swap__bounds__mod_1_1eg__swap__bounds.xhtml">eg_swap_bounds</a>(u_adv,udims_l,<a class="code" href="namespacefield__types.xhtml#a13e0d833cb4dd8abd04a2c5556387dd2">fld_type_u</a>,.true.)</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="keyword">CALL </span><a class="code" href="interfaceeg__swap__bounds__mod_1_1eg__swap__bounds.xhtml">eg_swap_bounds</a>(v_adv,vdims_l,<a class="code" href="namespacefield__types.xhtml#a02025ece9ce67b25311f692d0c4540ac">fld_type_v</a>,.true.)</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="keyword">CALL </span><a class="code" href="interfaceeg__swap__bounds__mod_1_1eg__swap__bounds.xhtml">eg_swap_bounds</a>(w_adv,wdims_l,<a class="code" href="namespacefield__types.xhtml#a5b0eb4b0b340d0f88017c25f252584d7">fld_type_p</a>,.false.)</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="comment">! Departure points need to be initialised at the first run, i.e.</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="comment">! when Runge Kutta departure points are used (Polar rows only, technically)</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="comment">! because then the departure points are not in the chain dump and the</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="comment">! departure point algorithm will not compute polar v departure points.</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="comment">! This is not an issue with interpolated departure points, as they are</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="comment">! derived from the w departure points. Since this is only called once at</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="comment">! startup of the model and does not take long it does not matter.</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="comment">! initialise u,v,w departure points</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="keyword">CALL </span><a class="code" href="namespacedeparture__pts__mod.xhtml#a6633e78388f67128871aeaa1834d389f">reset_dpt_pts</a>()</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;u_np1       = u</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;v_np1       = v</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;w_np1       = w</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;thetav_np1  = thetav</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;rho_np1     = rho</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;etadot_np1  = etadot</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;m_v_np1     = m_v</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;m_cl_np1    = m_cl</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;m_cf_np1    = m_cf</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;m_r_np1     = m_r</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;m_gr_np1    = m_gr</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;m_cf2_np1   = m_cf2</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;exner_np1(:,:,:) = exner(:,:,:)</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;p_star_np1   = p_star</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EG_IDL_SET_INIT&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespaceeg__idl__set__init__mod.xhtml#ad6336294df6f5e4b4ebcd2561e648438">eg_idl_set_init</a></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceeg__idl__set__init__mod.xhtml" title="Subroutine Interface: ">eg_idl_set_init_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
