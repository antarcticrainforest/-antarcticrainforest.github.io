<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/radiance_core/solve_band_one_gas.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_68003e6e168556241f03263b340b5802.xhtml">radiance_core</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">solve_band_one_gas.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="solve__band__one__gas_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    , n_profile, n_layer, i_top, p, t, d_mass                           &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    , i_angular_integration, i_2stream                                  &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    , n_order_phase, l_rescale, n_order_gauss                           &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    , ms_min, ms_max, i_truncation, ls_local_trunc                      &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    , accuracy_adaptive, euler_factor                                   &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    , i_sph_algorithm, i_sph_mode                                       &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    , ia_sph_mm, cg_coeff, uplm_zero, uplm_sol                          &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    , i_scatter_method                                                  &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    , i_solver                                                          &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    , i_band, i_gas                                                     &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    , i_band_esft, i_scale_esft, i_scale_fnc                            &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    , k_esft, k_esft_layer, w_esft, scale_vector                        &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    , p_reference, t_reference                                          &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    , gas_mix_ratio, gas_frac_rescaled                                  &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    , l_doppler, doppler_correction                                     &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    , isolir                                                            &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    , zen_0, solar_irrad                                                &amp;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    , planck_flux_top, planck_flux_bottom                               &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    , diff_planck_band                                                  &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    , l_ir_source_quad, diff_planck_band_2                              &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    , ls_brdf_trunc, n_brdf_basis_fnc, rho_alb                          &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    , f_brdf, brdf_sol, brdf_hemi                                       &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    , planck_flux_ground                                                &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    , l_tile, n_point_tile, n_tile, list_tile, rho_alb_tile             &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    , planck_flux_tile                                                  &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    , ss_prop                                                           &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    , l_cloud, i_cloud                                                  &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    , n_cloud_top                                                       &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    , n_cloud_type, frac_cloud                                          &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    , n_region, k_clr, i_region_cloud, frac_region                      &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    , w_free, w_cloud, cloud_overlap                                    &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    , n_column_slv, list_column_slv                                     &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    , i_clm_lyr_chn, i_clm_cld_typ, area_column                         &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    , n_viewing_level, i_rad_layer, frac_rad_layer                      &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    , n_direction, direction                                            &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    , weight_band, l_initial                                            &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    , flux_direct, flux_down, flux_up                                   &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    , i_direct, radiance                                                &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    , photolysis                                                        &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    , l_clear, i_solver_clear                                           &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    , flux_direct_clear, flux_down_clear, flux_up_clear                 &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    , flux_up_tile, flux_up_blue_tile                                   &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    , l_blue_flux_surf, weight_blue                                     &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    , flux_direct_blue_surf                                             &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    , flux_down_blue_surf, flux_up_blue_surf                            &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    , nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column              &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    , nd_flux_profile, nd_radiance_profile, nd_j_profile                &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    , nd_band, nd_species                                               &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    , nd_esft_term, nd_scale_variable                                   &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    , nd_cloud_type, nd_region, nd_overlap_coeff                        &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    , nd_max_order, nd_sph_coeff                                        &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    , nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level                &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    , nd_direction, nd_source_coeff                                     &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    , nd_point_tile, nd_tile                                            &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    )</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacerealtype__rd.xhtml" title="Module to set the precision of real variables. ">realtype_rd</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacerealtype__rd.xhtml#aff478693c9291d2b87e7b91444f5b55c">realk</a></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordtype">USE </span>def_ss_prop</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacerad__pcf.xhtml" title="Radiation Program Configuration File. ">rad_pcf</a></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      nd_profile                                                        &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">!       Size allocated for profiles</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    , nd_layer                                                          &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">!       Size allocated for layers</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    , nd_layer_clr                                                      &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">!       Size allocated for totally clear layers</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    , id_ct                                                             &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">!       Topmost declared cloudy layer</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    , nd_flux_profile                                                   &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">!       Size allocated for profiles in arrays of fluxes</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    , nd_radiance_profile                                               &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">!       Size allocated for profiles in arrays of radiances</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    , nd_j_profile                                                      &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">!       Size allocated for profiles in arrays of mean radiances</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    , nd_column                                                         &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">!       Size allocated for sub-columns per point</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    , nd_band                                                           &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">!       Size allocated for bands</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    , nd_species                                                        &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">!       Size allocated for species</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    , nd_esft_term                                                      &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">!       Size allocated for ESFT variables</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    , nd_scale_variable                                                 &amp;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">!       Size allocated for scaling variables</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    , nd_cloud_type                                                     &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">!       Size allocated for cloud types</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    , nd_region                                                         &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">!       Size allocated for cloudy regions</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    , nd_overlap_coeff                                                  &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">!       Size allocated for cloudy overlap coefficients</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    , nd_max_order                                                      &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">!       Size allocated for orders of spherical harmonics</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    , nd_sph_coeff                                                      &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">!       Size allocated for coefficients of spherical harmonics</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    , nd_brdf_basis_fnc                                                 &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">!       Size allowed for BRDF basis functions</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    , nd_brdf_trunc                                                     &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">!       Size allowed for orders of BRDFs</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    , nd_viewing_level                                                  &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">!       Size allocated for levels where radiances are calculated</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    , nd_direction                                                      &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">!       Size allocated for viewing directions</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    , nd_source_coeff                                                   &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!       Size allocated for source coefficients</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    , nd_point_tile                                                     &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">!       Size allocated for points where the surface is tiled</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    , nd_tile</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">!       Size allocated for surface tiles</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">! Dummy arguments.</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                             &amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      ierr</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">!       Error flag</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">!                 Atmospheric column</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      n_profile                                                         &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">!       Number of profiles</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    , n_layer                                                           &amp;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">!       Number of layers</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    , i_top</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">!       Top of vertical grid</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      p(nd_profile, nd_layer)                                           &amp;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">!       Pressure</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    , t(nd_profile, nd_layer)                                           &amp;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">!       Temperature</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    , d_mass(nd_profile, nd_layer)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">!       Mass thickness of each layer</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">!                 Angular integration</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      i_angular_integration                                             &amp;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">!       Angular integration scheme</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    , i_2stream                                                         &amp;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">!       Two-stream scheme</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    , n_order_phase                                                     &amp;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">!       Maximum order of terms in the phase function used in</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">!       the direct calculation of spherical harmonics</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    , n_order_gauss                                                     &amp;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">!       Order of gaussian integration</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    , ms_min                                                            &amp;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">!       Lowest azimuthal order used</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    , ms_max                                                            &amp;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">!       Highest azimuthal order used</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    , i_truncation                                                      &amp;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">!       Type of truncation used</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    , ia_sph_mm(0: nd_max_order)                                        &amp;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">!       Address of spherical coefficient of (m, m) for each m</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    , ls_local_trunc(0: nd_max_order)                                   &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">!       Orders of truncation at each azimuthal order</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    , i_sph_mode                                                        &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">!       Mode in which the spherical harmonic code is used</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    , i_sph_algorithm</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">!       Algorithm used for spherical harmonic calculation</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      l_rescale</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">!       Rescale optical properties</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  <span class="keywordtype">REAL (RealK)</span> ::                                                       &amp;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      cg_coeff(nd_sph_coeff)                                            &amp;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">!       Clebsch-Gordan coefficients</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    , uplm_zero(nd_sph_coeff)                                           &amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">!       Values of spherical harmonics at polar angles pi/2</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    , uplm_sol(nd_radiance_profile, nd_sph_coeff)                       &amp;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">!       Values of spherical harmonics in the solar direction</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    , accuracy_adaptive                                                 &amp;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">!       Accuracy for adaptive truncation</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    , euler_factor</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">!       Factor applied to the last term of an alternating series</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      weight_band</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">!       Weighting factor for the current band</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                             &amp;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      l_initial</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">!       Flag to initialize diagnostics</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">!                 Treatment of scattering</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      i_scatter_method</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">!       Method of treating scattering</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">!                 Options for solver</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      i_solver</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">!       Solver used</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">!                 Gaseous properties</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      i_band                                                            &amp;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">!       Band being considered</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    , i_gas                                                             &amp;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">!       Gas being considered</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    , i_band_esft(nd_band, nd_species)                                  &amp;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">!       Number of terms in band</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    , i_scale_esft(nd_band, nd_species)                                 &amp;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">!       Type of ESFT scaling</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    , i_scale_fnc(nd_band, nd_species)</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">!       Type of scaling function</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      l_doppler(nd_species)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">!       Doppler broadening included</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      k_esft(nd_esft_term, nd_band, nd_species)                         &amp;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">!       Exponential ESFT terms</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    , k_esft_layer(nd_profile, nd_layer, nd_esft_term, nd_species)      &amp;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">!       Exponential ESFT terms at actual pressure layer</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    , w_esft(nd_esft_term, nd_band, nd_species)                         &amp;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">!       Weights for ESFT</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    , scale_vector(nd_scale_variable, nd_esft_term, nd_band             &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        , nd_species)                                                   &amp;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">!       Absorber scaling parameters</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    , p_reference(nd_species, nd_band)                                  &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">!       Reference scaling pressure</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    , t_reference(nd_species, nd_band)                                  &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">!       Reference scaling temperature</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    , gas_mix_ratio(nd_profile, nd_layer, nd_species)                   &amp;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">!       Gas mass mixing ratios</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    , doppler_correction(nd_species)</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">!       Doppler broadening terms</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                        &amp;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      gas_frac_rescaled(nd_profile, nd_layer, nd_species)</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">!       Rescaled gas mass fractions</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">!                 Spectral region</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      isolir</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">!       Spectral region</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">!                 Solar properties</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;       zen_0(nd_profile)                                                &amp;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">!       Secant (two-stream) or cosine (spherical harmonics)</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">!       of the solar zenith angle</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    , solar_irrad(nd_profile)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">!       Incident solar irradiance in band</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">!                 Infra-red properties</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;      l_ir_source_quad</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">!       Use a quadratic source function</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;      planck_flux_top(nd_profile)                                       &amp;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">!       Planckian flux at the top of the layer</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    , planck_flux_bottom(nd_profile)                                    &amp;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">!       Planckian source at the bottom of the layer</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    , diff_planck_band(nd_profile, nd_layer)                            &amp;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">!       Thermal source function</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    , diff_planck_band_2(nd_profile, nd_layer)</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">!       Twice second difference of Planckian in band</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">!                 Surface properties</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;      planck_flux_ground(nd_profile)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">!       Thermal source function at ground</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      ls_brdf_trunc                                                     &amp;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment">!       Order of truncation of BRDFs</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    , n_brdf_basis_fnc</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">!       Number of BRDF basis functions</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;      rho_alb(nd_profile, nd_brdf_basis_fnc)                            &amp;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">!       Weights of the basis functions</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    , f_brdf(nd_brdf_basis_fnc, 0: nd_brdf_trunc/2                      &amp;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        , 0: nd_brdf_trunc/2, 0: nd_brdf_trunc)                         &amp;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">!       Array of BRDF basis terms</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    , brdf_sol(nd_profile, nd_brdf_basis_fnc, nd_direction)             &amp;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">!       The BRDF evaluated for scattering from the solar</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">!       beam into the viewing direction</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    , brdf_hemi(nd_profile, nd_brdf_basis_fnc, nd_direction)</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">!       The BRDF evaluated for scattering from isotropic</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">!       radiation into the viewing direction</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">! Variables related to tiling of the surface</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      l_tile</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">!       Logical to allow invoke options</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;      n_point_tile                                                      &amp;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">!       Number of points to tile</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    , n_tile                                                            &amp;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">!       Number of tiles used</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    , list_tile(nd_point_tile)</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">!       List of points with surface tiling</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;      rho_alb_tile(nd_point_tile, nd_brdf_basis_fnc, nd_tile)           &amp;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">!       Weights for the basis functions of the BRDFs</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">!       at the tiled points</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    , planck_flux_tile(nd_point_tile, nd_tile)</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">!       Local Planckian fluxes on surface tiles</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">!                 Optical properties</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  <span class="keywordtype">TYPE</span>(<a class="code" href="structstr__ss__prop.xhtml">str_ss_prop</a>), <span class="keywordtype">INTENT(INOUT)</span> :: ss_prop</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">!       Single scattering properties of the atmosphere</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">!                 Cloudy properties</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;      l_cloud</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">!       Clouds required</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;      i_cloud</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">!       Cloud scheme used</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">!                 Cloud geometry</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      n_cloud_top                                                       &amp;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">!       Top cloudy layer</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    , n_cloud_type                                                      &amp;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">!       Number of types of clouds</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    , n_region                                                          &amp;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">!       Number of cloudy regions</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    , k_clr                                                             &amp;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">!       Index of clear-sky region</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    , i_region_cloud(nd_cloud_type)</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">!       Regions in which types of clouds fall</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">! Cloud geometry</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;      n_column_slv(nd_profile)                                          &amp;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">!       Number of columns to be solved in each profile</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    , list_column_slv(nd_profile, nd_column)                            &amp;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">!       List of columns requiring an actual solution</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    , i_clm_lyr_chn(nd_profile, nd_column)                              &amp;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment">!       Layer in the current column to change</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    , i_clm_cld_typ(nd_profile, nd_column)</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">!       Type of cloud to introduce in the changed layer</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;      w_free(nd_profile, id_ct: nd_layer)                               &amp;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment">!       Clear-sky fraction</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    , w_cloud(nd_profile, id_ct: nd_layer)                              &amp;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment">!       Cloudy fraction</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    , frac_cloud(nd_profile, id_ct: nd_layer, nd_cloud_type)            &amp;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment">!       Fractions of types of clouds</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    , cloud_overlap(nd_profile, id_ct-1: nd_layer, nd_overlap_coeff)    &amp;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">!       Coefficients for transfer for energy at interfaces</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    , area_column(nd_profile, nd_column)                                &amp;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">!       Areas of columns</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    , frac_region(nd_profile, id_ct: nd_layer, nd_region)</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">!       Fractions of total cloud occupied by each region</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;      n_viewing_level                                                   &amp;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">!       Number of levels where radiances are calculated</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    , i_rad_layer(nd_viewing_level)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">!       Layers in which radiances are calculated</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;      frac_rad_layer(nd_viewing_level)</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment">!       Fractions below the tops of the layers</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment">!                   Viewing Geometry</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;      n_direction</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">!       Number of viewing directions</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;      direction(nd_radiance_profile, nd_direction, 2)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment">!       Viewing directions</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment">!                 Calculated fluxes</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                          &amp;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;      flux_direct(nd_flux_profile, 0: nd_layer)                         &amp;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">!       Direct flux</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    , flux_down(nd_flux_profile, 0: nd_layer)                           &amp;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">!       Total downward flux</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    , flux_up(nd_flux_profile, 0: nd_layer)</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="comment">!       Upward flux</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="comment">!                   Calculated radiances</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                        &amp;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;      i_direct(nd_radiance_profile, 0: nd_layer)                        &amp;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">!       Direct solar irradiance on levels</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    , radiance(nd_radiance_profile,  nd_viewing_level                   &amp;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        , nd_direction)</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">!       Radiances</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">!                   Calculated mean radiances</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                        &amp;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;      photolysis(nd_j_profile,  nd_viewing_level)</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">!       Mean rate of photolysis</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment">!                 Flags for clear-sky calculations</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;      l_clear</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment">!       Calculate net clear-sky properties</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;      i_solver_clear</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment">!       Clear solver used</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment">!                 Clear-sky fluxes calculated</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                          &amp;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;      flux_direct_clear(nd_profile, 0: nd_layer)                        &amp;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">!       Clear-sky direct flux</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    , flux_down_clear(nd_profile, 0: nd_layer)                          &amp;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="comment">!       Clear-sky total downward flux</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    , flux_up_clear(nd_profile, 0: nd_layer)                            &amp;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">!       Clear-sky upward flux</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    , flux_up_tile(nd_point_tile, nd_tile)                              &amp;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">!       Upward fluxes at tiled surface points</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    , flux_up_blue_tile(nd_point_tile, nd_tile)</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">!       Upward blue fluxes at tiled surface points</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">!                 Special Diagnostics:</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;      l_blue_flux_surf</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">!       Flag to calculate the blue flux at the surface</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(IN)</span> ::                                           &amp;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      weight_blue</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">!       Weights for blue fluxes in this band</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;  <span class="keywordtype">REAL (RealK)</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                        &amp;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;      flux_direct_blue_surf(nd_flux_profile)                            &amp;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">!       Direct blue flux at the surface</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    , flux_down_blue_surf(nd_flux_profile)                              &amp;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">!       Total downward blue flux at the surface</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    , flux_up_blue_surf(nd_flux_profile)</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment">!       Upward blue flux at the surface</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">! Local variables.</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;  <span class="keywordtype">INTEGER</span>                                                               &amp;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;      l</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">!       Loop variable</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;  <span class="keywordtype">INTEGER</span>                                                               &amp;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;      i_gas_pointer(nd_species)                                         &amp;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">!       Pointer array for monochromatic ESFTs</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    , iex</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment">!       Index of ESFT term</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;  <span class="keywordtype">REAL (RealK)</span> ::                                                       &amp;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;      k_esft_mono(nd_species)                                           &amp;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment">!       ESFT monochromatic exponents</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    , k_gas_abs(nd_profile, nd_layer)                                   &amp;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="comment">!       Gaseous absorptive extinction</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    , d_planck_flux_surface(nd_profile)                                 &amp;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment">!       Ground source function</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    , flux_inc_direct(nd_profile)                                       &amp;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="comment">!       Incident direct flux</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    , flux_inc_down(nd_profile)                                         &amp;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="comment">!       Incident downward flux</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    , dummy_ke(nd_profile, nd_layer)</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment">!       Dummy array (not used)</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment">! Monochromatic incrementing radiances:</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;  <span class="keywordtype">REAL (RealK)</span> ::                                                       &amp;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;      flux_direct_part(nd_profile, 0: nd_layer)                         &amp;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="comment">!       Partial direct flux</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    , flux_total_part(nd_profile, 2*nd_layer+2)                         &amp;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment">!       Partial total flux</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    , flux_direct_clear_part(nd_profile, 0: nd_layer)                   &amp;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment">!       Partial clear-sky direct flux</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    , flux_total_clear_part(nd_profile, 2*nd_layer+2)</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="comment">!       Partial clear-sky total flux</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;  <span class="keywordtype">REAL (RealK)</span> ::                                                       &amp;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;      i_direct_part(nd_radiance_profile, 0: nd_layer)                   &amp;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment">!       Partial solar irradiances</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    , radiance_part(nd_radiance_profile, nd_viewing_level               &amp;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        , nd_direction)</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment">!       Partial radiances</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;  <span class="keywordtype">REAL (RealK)</span> ::                                                       &amp;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;      photolysis_part(nd_j_profile, nd_viewing_level)</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="comment">!       Partial rate of photolysis</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;  <span class="keywordtype">REAL (RealK)</span> ::                                                       &amp;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;      weight_incr                                                       &amp;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment">!       Weight applied to increments</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    , weight_blue_incr</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment">!       Weight applied to blue increments</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;SOLVE_BAND_ONE_GAS&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="comment">! The ESFT terms for the first gas in the band alone are used.</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;  i_gas_pointer(1)=i_gas</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;  <span class="keywordflow">DO</span> iex=1, i_band_esft(i_band, i_gas)</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment">!   Rescale for each ESFT term if that is required.</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keywordflow">IF</span> (i_scale_esft(i_band, i_gas) == <a class="code" href="namespacerad__pcf.xhtml#ab31993e3a9a58b84a6615ae973036303">ip_scale_term</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="comment">! DEPENDS ON: scale_absorb</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;      <span class="keyword">CALL </span>scale_absorb(ierr, n_profile, n_layer                        &amp;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        , gas_mix_ratio(1, 1, i_gas), p, t                              &amp;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        , i_top                                                         &amp;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        , gas_frac_rescaled(1, 1, i_gas)                                &amp;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        , k_esft_layer(1, 1, iex, i_gas)                                &amp;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        , i_scale_fnc(i_band, i_gas)                                    &amp;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        , p_reference(i_gas, i_band)                                    &amp;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        , t_reference(i_gas, i_band)                                    &amp;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        , scale_vector(1, iex, i_band, i_gas)                           &amp;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        , iex, i_band                                                   &amp;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        , l_doppler(i_gas), doppler_correction(i_gas)                   &amp;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        , nd_profile, nd_layer                                          &amp;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        , nd_scale_variable                                             &amp;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        )</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="comment">!   Set the appropriate boundary terms for the total</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="comment">!   upward and downward fluxes.</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keywordflow">IF</span> ( (i_angular_integration == <a class="code" href="namespacerad__pcf.xhtml#adec25633498133480b640954458ef53d">ip_two_stream</a>).OR.                   &amp;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;         (i_angular_integration == <a class="code" href="namespacerad__pcf.xhtml#a275462ec13369e5bbfa4a7bef6097fea">ip_ir_gauss</a>) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;      <span class="keywordflow">IF</span> (isolir == <a class="code" href="namespacerad__pcf.xhtml#ab65d11ff7073a91129b4fc039b950a3e">ip_solar</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="comment">!       Solar region.</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;          d_planck_flux_surface(l)=0.0e+00_realk</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;          flux_inc_down(l)=solar_irrad(l)/zen_0(l)</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;          flux_inc_direct(l)=solar_irrad(l)/zen_0(l)</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (isolir == <a class="code" href="namespacerad__pcf.xhtml#a0a960687c7064d51028393c4f7b2dae0">ip_infra_red</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="comment">!       Infra-red region.</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;          flux_inc_direct(l)=0.0e+00_realk</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;          flux_inc_down(l)=-planck_flux_top(l)</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;          d_planck_flux_surface(l)                                      &amp;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            =(1.0e+00_realk-rho_alb(l, <a class="code" href="namespacerad__pcf.xhtml#a256daa047314758fead0ce5c1c5f9618">ip_surf_alb_diff</a>))               &amp;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            *(planck_flux_ground(l)-planck_flux_bottom(l))</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (i_angular_integration == <a class="code" href="namespacerad__pcf.xhtml#a04f7317e2026fd4771b5bc2228353467">ip_spherical_harmonic</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;      <span class="keywordflow">IF</span> (isolir == <a class="code" href="namespacerad__pcf.xhtml#ab65d11ff7073a91129b4fc039b950a3e">ip_solar</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;          i_direct_part(l, 0)=solar_irrad(l)</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;          flux_inc_down(l)=0.0e+00_realk</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <span class="keywordflow">DO</span> l=1, n_profile</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;          flux_inc_down(l)=-planck_flux_top(l)</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;          d_planck_flux_surface(l)                                      &amp;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;            =planck_flux_ground(l)-planck_flux_bottom(l)</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment">!   Assign the monochromatic absorption coefficient.</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    k_esft_mono(i_gas)=k_esft(iex, i_band, i_gas)</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="comment">! DEPENDS ON: gas_optical_properties</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="keyword">CALL </span>gas_optical_properties(n_profile, n_layer                      &amp;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;      , 1, i_gas_pointer, k_esft_mono                                   &amp;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;      , gas_frac_rescaled                                               &amp;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;      , k_gas_abs                                                       &amp;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;      , nd_profile, nd_layer, nd_species                                &amp;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;      )</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="comment">! DEPENDS ON: monochromatic_radiance</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <span class="keyword">CALL </span>monochromatic_radiance(ierr                                    &amp;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="comment">!                 Atmospheric properties</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;      , n_profile, n_layer, d_mass                                      &amp;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="comment">!                 Angular integration</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;      , i_angular_integration, i_2stream                                &amp;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;      , l_rescale, n_order_gauss                                        &amp;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;      , n_order_phase, ms_min, ms_max, i_truncation, ls_local_trunc     &amp;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;      , accuracy_adaptive, euler_factor                                 &amp;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;      , i_sph_algorithm, i_sph_mode                                     &amp;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment">!                   Precalculated angular arrays</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;      , ia_sph_mm, cg_coeff, uplm_zero, uplm_sol                        &amp;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment">!                 Treatment of scattering</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;      , i_scatter_method                                                &amp;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="comment">!                 Options for solver</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;      , i_solver                                                        &amp;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="comment">!                 Gaseous propreties</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;      , k_gas_abs                                                       &amp;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="comment">!                 Options for equivalent extinction</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;      , .false., dummy_ke                                               &amp;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="comment">!                 Spectral region</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;      , isolir                                                          &amp;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="comment">!                 Infra-red properties</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;      , diff_planck_band                                                &amp;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;      , l_ir_source_quad, diff_planck_band_2                            &amp;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="comment">!                 Conditions at TOA</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;      , zen_0, flux_inc_direct, flux_inc_down                           &amp;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;      , i_direct_part                                                   &amp;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="comment">!                 Surface properties</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;      , d_planck_flux_surface                                           &amp;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;      , ls_brdf_trunc, n_brdf_basis_fnc, rho_alb                        &amp;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;      , f_brdf, brdf_sol, brdf_hemi                                     &amp;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="comment">!                 Optical properties</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;      , ss_prop                                                         &amp;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;<span class="comment">!                 Cloudy properties</span></div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;      , l_cloud, i_cloud                                                &amp;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="comment">!                 Cloud geometry</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;      , n_cloud_top                                                     &amp;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;      , n_cloud_type, frac_cloud                                        &amp;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;      , n_region, k_clr, i_region_cloud, frac_region                    &amp;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;      , w_free, w_cloud, cloud_overlap                                  &amp;</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;      , n_column_slv, list_column_slv                                   &amp;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;      , i_clm_lyr_chn, i_clm_cld_typ, area_column                       &amp;</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="comment">!                   Levels for calculating radiances</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;      , n_viewing_level, i_rad_layer, frac_rad_layer                    &amp;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="comment">!                   Viewing Geometry</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;      , n_direction, direction                                          &amp;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="comment">!                 Calculated flxues</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;      , flux_direct_part, flux_total_part                               &amp;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="comment">!                   Calculated Radiances</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;      , radiance_part                                                   &amp;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="comment">!                   Calculated rates of photolysis</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;      , photolysis_part                                                 &amp;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;<span class="comment">!                 Flags for clear-sky calculations</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;      , l_clear, i_solver_clear                                         &amp;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="comment">!                 Clear-sky fluxes calculated</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;      , flux_direct_clear_part, flux_total_clear_part                   &amp;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="comment">!                 Dimensions of arrays</span></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;      , nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column            &amp;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;      , nd_flux_profile, nd_radiance_profile, nd_j_profile              &amp;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;      , nd_cloud_type, nd_region, nd_overlap_coeff                      &amp;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;      , nd_max_order, nd_sph_coeff                                      &amp;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;      , nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level              &amp;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;      , nd_direction, nd_source_coeff                                   &amp;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;      )</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="comment">!   Increment the radiances within the band. Each increment</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="comment">!   represents a single k-term within a band weighted with</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="comment">!   its own weighting factor, hence for each increment the</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;<span class="comment">!   weighting is the product of these two factors: similarly</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="comment">!   for the blue flux.</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    weight_incr=weight_band*w_esft(iex, i_band,  i_gas)</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    <span class="keywordflow">IF</span> (l_blue_flux_surf)                                               &amp;</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;      weight_blue_incr=weight_blue*w_esft(iex, i_band,  i_gas)</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="comment">! DEPENDS ON: augment_radiance</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;    <span class="keyword">CALL </span>augment_radiance(n_profile, n_layer                            &amp;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;      , i_angular_integration, i_sph_mode                               &amp;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;      , n_viewing_level, n_direction                                    &amp;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;      , isolir, l_clear, l_initial, weight_incr                         &amp;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;      , l_blue_flux_surf, weight_blue_incr                              &amp;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;<span class="comment">!                   Actual radiances</span></div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;      , flux_direct, flux_down, flux_up                                 &amp;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;      , flux_direct_blue_surf                                           &amp;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;      , flux_down_blue_surf, flux_up_blue_surf                          &amp;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;      , i_direct, radiance, photolysis                                  &amp;</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;      , flux_direct_clear, flux_down_clear, flux_up_clear               &amp;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="comment">!                   Increments to radiances</span></div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;      , flux_direct_part, flux_total_part                               &amp;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;      , i_direct_part, radiance_part, photolysis_part                   &amp;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;      , flux_direct_clear_part, flux_total_clear_part                   &amp;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="comment">!                   Dimensions</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;      , nd_flux_profile, nd_radiance_profile, nd_j_profile              &amp;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;      , nd_layer, nd_viewing_level, nd_direction                        &amp;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;      )</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="comment">!   Add in the increments from surface tiles</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    <span class="keywordflow">IF</span> (l_tile) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="comment">! DEPENDS ON: augment_tiled_radiance</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;      <span class="keyword">CALL </span>augment_tiled_radiance(ierr                                  &amp;</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        , n_point_tile, n_tile, list_tile                               &amp;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        , i_angular_integration, isolir, l_initial                      &amp;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        , weight_incr, l_blue_flux_surf, weight_blue_incr               &amp;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="comment">!                   Surface characteristics</span></div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        , rho_alb_tile                                                  &amp;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="comment">!                   Actual radiances</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        , flux_up_tile, flux_up_blue_tile                               &amp;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="comment">!                   Increments to radiances</span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;        , flux_direct_part(1, n_layer)                                  &amp;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;        , flux_total_part(1, 2*n_layer+2)                               &amp;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;        , planck_flux_tile, planck_flux_bottom                          &amp;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;<span class="comment">!                   Dimensions</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;        , nd_flux_profile, nd_point_tile, nd_tile                       &amp;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        , nd_brdf_basis_fnc                                             &amp;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        )</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;<span class="comment">!   After the first call to these routines quantities should be</span></div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="comment">!   incremented rather than initialized, until the flag is reset.</span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    l_initial=.false.</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;SOLVE_BAND_ONE_GAS&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="keyword">END SUBROUTINE </span>solve_band_one_gas</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
