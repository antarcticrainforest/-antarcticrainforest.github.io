<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/physics_diagnostics/thetaw.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_e717d3b2c970161aec1da5ef24e9fc9f.xhtml">physics_diagnostics</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">thetaw.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="thetaw_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespacethetaw__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacethetaw__mod.xhtml" title="Calculate wet bulb temperatute and potential temperature Calculate wet bulb temperatute and potential...">thetaw_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="namespacethetaw__mod.xhtml#a5fb5127ac7025f02bdd777818b0a5ad4">thetaw</a>(                                                &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;!&gt; In:</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;     &amp; n,                                                               &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;     &amp; T,q,                                                             &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;     &amp; pressure, l_potential,                                           &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;!&gt; Out:</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;     &amp; TW)</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="namespacethetaw__mod.xhtml#a5fb5127ac7025f02bdd777818b0a5ad4">   18</a></span>&#160;          <span class="keywordtype">USE </span>conversions_mod<span class="keywordtype">, ONLY</span>: zerodegc</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      <span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: lc</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;     &amp; n                   <span class="comment">! number of points</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                               &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;     &amp; T(n)                                                             &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                           <span class="comment">! temperature on defined surface</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;     &amp;,q(n)                                                             &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                           <span class="comment">! humidity on defined surface</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;     &amp;,<a class="code" href="pressure_8f90.xhtml#a5fbc98e87017dfa42227b6805133759a" title="Programming standard: Unified Model Documentation Paper No 3. ">pressure</a>(n)         <span class="comment">! pressure on defined surface</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      <span class="keywordtype">LOGICAL</span> ::                                                        &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;     &amp; l_potential         <span class="comment">! T=Output wet bulb potential temperature</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                           <span class="comment">! F=Output wet bulb temperature</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::                                              &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;     &amp; TW(n)               <span class="comment">! wet bulb potential temperature</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> ::                                                &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;     &amp; L_coeff = 2.34e3                                                 &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                           <span class="comment">! latent heat temperature dependence</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;     &amp;,cp_v    = 1850.                                                  &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                           <span class="comment">! specific heat of water vapour</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;     &amp;,cp_d    = 1005.                                                  &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                           <span class="comment">! specific heat of dry air</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;     &amp;,<a class="code" href="arg__atm__fields_8h.xhtml#a43c37196e08d8664d374bb16e447fe55">m_v</a>     = 0.01801                                                &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                           <span class="comment">! Mol wt of water vapour KG/MOL</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;     &amp;,m_d     = 0.02896                                                &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                           <span class="comment">! Mol wt of dry air      KG/MOL</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;     &amp;,rstar   = 8.314                                                  &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                           <span class="comment">! Universal gas constant R</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;     &amp;,r_d     = rstar/m_d                                              &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                           <span class="comment">! R for dry air</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;     &amp;,r_v     = rstar/<a class="code" href="arg__atm__fields_8h.xhtml#a43c37196e08d8664d374bb16e447fe55">m_v</a>                                              &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                           <span class="comment">! R for water vapour</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;     &amp;,delta_tw_tol = 0.005                                             &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                           <span class="comment">! tolerance for TW convergence (degrees)</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;     &amp;,delta_p_max_rk = 300.e2                                          &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                               <span class="comment">! deltap threshold for extra R-K loops</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;     &amp;,p_1000mb = 1.0e5    <span class="comment">! pressure at 1000mb</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> ::                                             &amp;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;     &amp; loop_max = 10                                                    &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                           <span class="comment">! max loops for TW iterations</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;     &amp;,loop_rk  = 5        <span class="comment">! 5 Iterations of Runge-Kutta are</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                           <span class="comment">! sufficient for convergence upto 250Mb.</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                           <span class="comment">! Significantly more are required for</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                           <span class="comment">! higher levels, but are expensive.</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">! Local scalars:</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="keywordtype">INTEGER</span>                                                           &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;     &amp; i,loop</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keywordtype">LOGICAL</span>                                                           &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;     &amp; all_converged       <span class="comment">! test for TW convergence of Newton method</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;     &amp; dgbydt                                                           &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                           <span class="comment">! derivative of g with respect to T</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;     &amp;,delta_tw                                                         &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                           <span class="comment">! increment wet bulb T</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;     &amp;,g                                                                &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                           <span class="comment">! function of wet bulb T</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;     &amp;,dtbydp                                                           &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                           <span class="comment">! derivative of T with respect to p</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;     &amp;,lh                                                               &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                           <span class="comment">! latent heat scalar</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;     &amp;,a1,a2,a3,a4         <span class="comment">! Runge-Kutta coefficients</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">! Local dynamic arrays:</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="keywordtype">LOGICAL</span>                                                           &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;     &amp; converged(n)        <span class="comment">! test each TW convergence of Newton method</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keywordtype">REAL</span>                                                              &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;     &amp; p(n)                                                             &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                           <span class="comment">! pressure</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;     &amp;,delta_p(n)                                                       &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                                <span class="comment">! Pressure Increment</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;     &amp;,qs(n)                                                            &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                           <span class="comment">! saturated humidity</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;     &amp;,g_tw(n)                                                          &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                           <span class="comment">! g(TW)</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;     &amp;,l(n)                                                             &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                           <span class="comment">! latent heat</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;     &amp;,cp_moist(n)                                                      &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                           <span class="comment">! specific heat of moist air</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;     &amp;,tw_0(n),tw_1(n)     <span class="comment">! TW on pressure surface temporary arrays</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">! Function &amp; Subroutine calls:</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      <span class="keywordtype">External</span> <a class="code" href="qsat_8f90.xhtml#aea6c2f88cb65e881fc815b7be5559cc9" title="Saturation Specific Humidity Scheme (Qsat): Vapour to Liquid/Ice. ">qsat</a></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">!- End of header</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;THETAW&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">! 1. Calculate wet bulb temperature at requested pressure level</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">! Populate pressure array for this (and subsequent) qsat calls</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="keywordflow">DO</span> i=1,n</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;       p(i) = <a class="code" href="pressure_8f90.xhtml#a5fbc98e87017dfa42227b6805133759a" title="Programming standard: Unified Model Documentation Paper No 3. ">pressure</a>(i)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">! Get saturated humidity with respect to water/ice</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">! DEPENDS ON: qsat</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="keyword">CALL </span><a class="code" href="qsat_8f90.xhtml#aea6c2f88cb65e881fc815b7be5559cc9" title="Saturation Specific Humidity Scheme (Qsat): Vapour to Liquid/Ice. ">qsat</a>(qs,t,p,n)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">! 1.1 Determine g function for first guess of wet bulb T</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">!     g(T) = qs(T) L + C T</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="keywordflow">DO</span> i=1,n</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;       tw(i) = t(i)                              <span class="comment">! first guess</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;       l(i) = lc - l_coeff*(t(i) - zerodegc)     <span class="comment">! latent heat</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;       cp_moist(i) = (1.0-q(i))*cp_d + q(i)*cp_v <span class="comment">! specific heat</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;       g_tw(i) = l(i)*q(i)  + cp_moist(i) * t(i)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;       converged(i) = .false.</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">! 1.2 Solve for wet bulb T using Newton iteration,</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">!     where g(TW) = Cp T0 + L q = constant</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keywordflow">DO</span> loop=1,loop_max</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;       all_converged=.true.</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;       <span class="keywordflow">DO</span> i=1,n</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="keywordflow">IF</span>(.NOT.converged(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;          g      = l(i)*qs(i) + cp_moist(i) * tw(i)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;          dgbydt = l(i)*l(i)*qs(i) / (r_v*tw(i)*tw(i)) + cp_moist(i)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;          delta_tw = (g_tw(i) - g) / dgbydt</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;          tw(i) = tw(i) + delta_tw</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;          <span class="keywordflow">IF</span>(abs(delta_tw) &gt;  delta_tw_tol) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;             all_converged=.false.</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;          <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;             converged(i)=.true.</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordflow">          ENDIF</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordflow">        ENDIF</span> <span class="comment">! not converged</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keywordflow">       ENDDO</span> <span class="comment">! i</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;       <span class="keywordflow">IF</span>(all_converged) <span class="keywordflow">exit</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">! DEPENDS ON: qsat</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;       <span class="keyword">CALL </span><a class="code" href="qsat_8f90.xhtml#aea6c2f88cb65e881fc815b7be5559cc9" title="Saturation Specific Humidity Scheme (Qsat): Vapour to Liquid/Ice. ">qsat</a>(qs,tw,p,n)     <span class="comment">! revise qs values</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordflow">      ENDDO</span> <span class="comment">! loop</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      <span class="keywordflow">IF</span> (l_potential) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">! 2. Descend wet bulb line to 1000mb to determine wet bulb theta</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      <span class="keywordflow">DO</span> i=1,n</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        delta_p(i)= (p_1000mb - <a class="code" href="pressure_8f90.xhtml#a5fbc98e87017dfa42227b6805133759a" title="Programming standard: Unified Model Documentation Paper No 3. ">pressure</a>(i))/loop_rk</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">! 2.1 Loop over delta(pressure) intervals</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;      <span class="keywordflow">DO</span> loop=1,loop_rk</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">! Determine first guess for dT/dp at wet bulb temperature</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      <span class="keywordflow">DO</span> i=1,n</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;       tw_0(i)=tw(i)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">! 2.2 Integrate dT/dp from requested pressure level to 1000mb using</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">!     Runge-Kutta method:</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">!     a1= Dp dT/dp(p0     ,T0     ) a2= Dp dT/dp(p0+Dp/2,T0+a1/2)</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">!     a3= Dp dT/dp(p0+Dp/2,T0+a2/2) a4= Dp DT/dp(p0+Dp  ,T0+a3  )</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">!     T1 = T0 + a1/6 + a2/3 + a3/3 + a4/6</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">! A1 = dp * DTbyDP (p0      ,T0  )</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">! DEPENDS ON: qsat</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      <span class="keyword">CALL </span><a class="code" href="qsat_8f90.xhtml#aea6c2f88cb65e881fc815b7be5559cc9" title="Saturation Specific Humidity Scheme (Qsat): Vapour to Liquid/Ice. ">qsat</a>(qs,tw,p,n)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      <span class="keywordflow">DO</span> i=1,n</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        lh = lc - l_coeff*(tw(i) - zerodegc)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        dtbydp = (lh*qs(i) + r_d*tw(i)) /                               &amp;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;     &amp;  (p(i) * (cp_moist(i) + lh*lh*qs(i)/(r_v*tw(i)*tw(i)) ))</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        p(i) = p(i) + delta_p(i)*0.5</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        a1 = delta_p(i)*dtbydp</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        tw(i) = tw_0(i) + a1*0.5</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        tw_1(i) = tw_0(i) + a1/6.0 <span class="comment">! build up Runge-Kutta estimate</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">! A2 = dp * DTbyDP (p0 + dp/2,T0 + a1/2  )</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">! DEPENDS ON: qsat</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      <span class="keyword">CALL </span><a class="code" href="qsat_8f90.xhtml#aea6c2f88cb65e881fc815b7be5559cc9" title="Saturation Specific Humidity Scheme (Qsat): Vapour to Liquid/Ice. ">qsat</a>(qs,tw,p,n)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      <span class="keywordflow">DO</span> i=1,n</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        lh = lc - l_coeff*(tw(i) - zerodegc)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        dtbydp = (lh*qs(i) + r_d*tw(i)) /                               &amp;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;     &amp;  (p(i) * (cp_moist(i) + lh*lh*qs(i)/(r_v*tw(i)*tw(i)) ))</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        a2 = delta_p(i)*dtbydp</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        tw(i) = tw_0(i) + a2*0.5</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        tw_1(i) = tw_1(i) + a2/3.0 <span class="comment">! build up Runge-Kutta estimate</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">! A3 = dp * DTbyDP (p0 + dp/2,T0 + a2/2  )</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">! DEPENDS ON: qsat</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      <span class="keyword">CALL </span><a class="code" href="qsat_8f90.xhtml#aea6c2f88cb65e881fc815b7be5559cc9" title="Saturation Specific Humidity Scheme (Qsat): Vapour to Liquid/Ice. ">qsat</a>(qs,tw,p,n)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;      <span class="keywordflow">DO</span> i=1,n</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        lh = lc - l_coeff*(tw(i) - zerodegc)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        dtbydp = (lh*qs(i) + r_d*tw(i)) /                               &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;     &amp;  (p(i) * (cp_moist(i) + lh*lh*qs(i)/(r_v*tw(i)*tw(i)) ))</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        p(i) = p(i) + delta_p(i)*0.5</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        a3 = delta_p(i)*dtbydp</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        tw(i) = tw_0(i) + a3</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        tw_1(i) = tw_1(i) + a3/3.0 <span class="comment">! build up Runge-Kutta estimate</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">! A4 = dp * DTbyDP (p0 + dp  ,T0 + a3  )</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">! DEPENDS ON: qsat</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      <span class="keyword">CALL </span><a class="code" href="qsat_8f90.xhtml#aea6c2f88cb65e881fc815b7be5559cc9" title="Saturation Specific Humidity Scheme (Qsat): Vapour to Liquid/Ice. ">qsat</a>(qs,tw,p,n)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      <span class="keywordflow">DO</span> i=1,n</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        lh = lc - l_coeff*(tw(i) - zerodegc)</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        dtbydp = (lh*qs(i) + r_d*tw(i)) /                               &amp;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;     &amp;  (p(i) * (cp_moist(i) + lh*lh*qs(i)/(r_v*tw(i)*tw(i)) ))</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        a4 = delta_p(i)*dtbydp</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        tw(i) = tw_1(i) + a4/6.0 <span class="comment">! final Runge-Kutta estimate</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keywordflow">      ENDDO</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keywordflow">      ENDDO</span> <span class="comment">! Loop over Runge-Kutta</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;THETAW&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="namespacethetaw__mod.xhtml#a5fb5127ac7025f02bdd777818b0a5ad4">thetaw</a></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacethetaw__mod.xhtml" title="Calculate wet bulb temperatute and potential temperature Calculate wet bulb temperatute and potential...">thetaw_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
