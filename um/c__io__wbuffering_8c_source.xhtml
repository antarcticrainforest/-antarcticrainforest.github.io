<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/control/c_code/c_io_wbuffering.c Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b81b067251166617f9d0a8c0cfc3a4a9.xhtml">control</a></li><li class="navelem"><a class="el" href="dir_3870c6a11f19197dc24c93b76d301a96.xhtml">c_code</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">c_io_wbuffering.c</div>  </div>
</div><!--header-->
<div class="contents">
<a href="c__io__wbuffering_8c.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#if defined(C95_2B)</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/******************************COPYRIGHT*******************************/</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">/* (C) Crown copyright Met Office. All rights reserved.               */</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">/* For further details please refer to the file COPYRIGHT.txt         */</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">/* which you should have received as part of this distribution.       */</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">/* *****************************COPYRIGHT******************************/</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="c__io__layers_8h.xhtml">c_io_layers.h</a>&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#if defined(F2K3)</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#define CIO_NEXT_LAYER CIO_RBUFFERING</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#define CIO_NEXT_LAYER CIO_LIBC</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="c__io_8h.xhtml">c_io.h</a>&quot;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="c__io__wbuffering_8h.xhtml">c_io_wbuffering.h</a>&quot;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/*  Functions in this file:</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *  Layer interfaces:</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *    init          : initialise data structures, and pass through</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *    fini          : pass through</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> *    open          : reset per unit data structures, and pass through</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"> *    close         : flush outstanbding data, pass through, and reset </span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">                      data structures</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment"> *    in            : pass through (no read buffering yet)</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment"> *    out           : write to buffers or pass chunks through as needed</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment"> *    getpos        : pass through, and append any buffering data</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment"> *    setpos        : flush buffered data, and pass through</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment"> *    change_mode   : flush buffered data, and pass through</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"> *  Implentation auxiliary routines:</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"> *    c_io_wbuffering_reset : reset per unit attributes</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"> *    c_io_wbuffering_flush : pass buffered data to the next layer, and</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"> *                           make decisions about resizing buffers</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"> * </span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"> */</span>  </div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;int64_t c_io_wbuffering_init(<a class="code" href="structc__io__init__t.xhtml">c_io_init_t</a> * <a class="code" href="c__io_8h.xhtml#a7ed5ff2a03f7684212b28aa1968622f1">params</a>)</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="namespaceeg__moist__gcm__ctl__mod.xhtml#a2f4c64d4ab3b2d2cdd01acd019d04784">i</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <a class="code" href="c__io__layers_8h.xhtml#ab37149944a170aeec451a02a37cba045">c_io_init_next_layer</a>(<a class="code" href="c__io_8h.xhtml#a5140b8af92a952340818455d7ab84316">CIO_NEXT_LAYER</a>);  </div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>= </div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    (<a class="code" href="structc__io__wbuffering__data__t.xhtml">c_io_wbuffering_data_t</a>*) </div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    malloc(params-&gt;<a class="code" href="structc__io__init__t.xhtml#a0089446ddc73d4756e0b360d9860533b">max_unit</a>*<span class="keyword">sizeof</span>(<a class="code" href="structc__io__wbuffering__data__t.xhtml">c_io_wbuffering_data_t</a>));</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>==NULL){</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="stringliteral">&quot;init: wbuffering: Cannot allocate required &quot;</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="stringliteral">&quot;%lld bytes for internal use\n&quot;</span>, </div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(params-&gt;<a class="code" href="structc__io__init__t.xhtml#a0089446ddc73d4756e0b360d9860533b">max_unit</a>*<span class="keyword">sizeof</span>(<a class="code" href="structc__io__wbuffering__data__t.xhtml">c_io_wbuffering_data_t</a>)));</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    abort();</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordflow">if</span> (params-&gt;<a class="code" href="structc__io__init__t.xhtml#aca5e1dd28d413bb51891271a92b135ed">wbuffering_buffer_size</a> &gt; 0)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="c__io__wbuffering_8h.xhtml#ab735d04c67963d10ba0f4dd5d6ffca3a">defaultBufferSz</a>=params-&gt;<a class="code" href="structc__io__init__t.xhtml#aca5e1dd28d413bb51891271a92b135ed">wbuffering_buffer_size</a>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordflow">else</span>    </div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="c__io__wbuffering_8h.xhtml#ab735d04c67963d10ba0f4dd5d6ffca3a">defaultBufferSz</a>=1024*1024;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;init: wbuffering: Buffer size=%lld bytes\n&quot;</span>, </div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;          <a class="code" href="c__io_8h.xhtml#ac05351099b626122a943dc06bad2d9f9">LLD</a>(<a class="code" href="c__io__wbuffering_8h.xhtml#ab735d04c67963d10ba0f4dd5d6ffca3a">defaultBufferSz</a>));</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  </div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordflow">for</span> (i=0;i&lt;params-&gt;<a class="code" href="structc__io__init__t.xhtml#a0089446ddc73d4756e0b360d9860533b">max_unit</a>;i++){</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="c__io__wbuffering_8h.xhtml#ac724e1081d7152d7595a7cb2f4dd6d00">c_io_wbuffering_reset</a>(i);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keywordflow">return</span> C_IO_INIT(params);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;int64_t c_io_wbuffering_fini(){</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordflow">return</span> C_IO_FINI();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;int64_t c_io_wbuffering_open   (int64_t unit,</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                  <span class="keywordtype">char</span> *  filename, </div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                   int64_t fileStatus,</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                  int64_t fileMode)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;{  </div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <a class="code" href="c__io__wbuffering_8h.xhtml#ac724e1081d7152d7595a7cb2f4dd6d00">c_io_wbuffering_reset</a>(unit);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>[unit].<a class="code" href="structc__io__wbuffering__data__t.xhtml#a2d29471bdb063c6708d3c59233afeec9">buffer</a>    =malloc(<a class="code" href="c__io__wbuffering_8h.xhtml#ab735d04c67963d10ba0f4dd5d6ffca3a">defaultBufferSz</a>);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>[unit].buffer==NULL){</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(-1,<span class="stringliteral">&quot;c_io_wbuffering: open: failed to allocate write buffer\n&quot;</span>);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#a1241786eca0d7b83753384a3fa40d75a">c_io_fail</a>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>[unit].<a class="code" href="structc__io__wbuffering__data__t.xhtml#a7f49a2839e44018f550299c101e5f20d">bufferMax</a> =<a class="code" href="c__io__wbuffering_8h.xhtml#ab735d04c67963d10ba0f4dd5d6ffca3a">defaultBufferSz</a>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordflow">return</span> C_IO_OPEN(unit,filename,fileStatus,fileMode);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;int64_t c_io_wbuffering_close  (int64_t unit)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  int64_t errCode1;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  int64_t errCode2;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  errCode1=<a class="code" href="c__io__wbuffering_8h.xhtml#acdb155080c92251b5cf0b2a7458c32c6">c_io_wbuffering_flush</a>(unit);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  free(<a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>[unit].buffer);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <a class="code" href="c__io__wbuffering_8h.xhtml#ac724e1081d7152d7595a7cb2f4dd6d00">c_io_wbuffering_reset</a>(unit);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  errCode2=C_IO_CLOSE(unit);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordflow">if</span> (errCode1 != <a class="code" href="c__io_8h.xhtml#a8444a95c4b21bb1662fbc6c8335a383c">c_io_success</a> ||</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      errCode2 != <a class="code" href="c__io_8h.xhtml#a8444a95c4b21bb1662fbc6c8335a383c">c_io_success</a>){</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">if</span> (errCode1 != <a class="code" href="c__io_8h.xhtml#a8444a95c4b21bb1662fbc6c8335a383c">c_io_success</a>)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(unit,<span class="stringliteral">&quot;c_io_wbuffering: Close: &quot;</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;          <span class="stringliteral">&quot;ERROR in close (flush)\n&quot;</span>);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(unit,<span class="stringliteral">&quot;c_io_wbuffering: Close: &quot;</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;          <span class="stringliteral">&quot;ERROR in close from lower layer\n&quot;</span>);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#a1241786eca0d7b83753384a3fa40d75a">c_io_fail</a>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#a8444a95c4b21bb1662fbc6c8335a383c">c_io_success</a>;  </div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;int64_t c_io_wbuffering_in     (int64_t unit, </div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                   <span class="keywordtype">char</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>, </div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                   int64_t len, </div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                   int64_t word_len)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordflow">return</span> C_IO_IN(unit,array,len,word_len);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;int64_t c_io_wbuffering_out    (int64_t unit, </div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                  <span class="keywordtype">char</span> * <a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>, </div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                  int64_t len, </div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                  int64_t word_len)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordtype">int</span> freeSpace;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">int</span> chunkSize;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordtype">int</span> wCheck;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordtype">int</span> remaining           =len*word_len;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordtype">int</span> ammountWritten      =0;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <a class="code" href="structc__io__wbuffering__data__t.xhtml">c_io_wbuffering_data_t</a> * attr=&amp;<a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>[unit];</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordtype">char</span> * current_pos      =<a class="code" href="argspc_8h.xhtml#a3b51acbeb211391bb5a08eeb1d98132e">array</a>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="comment">/* Loop untill we have got rid of the payload */</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordflow">while</span> (remaining&gt;0) {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    freeSpace= attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a7f49a2839e44018f550299c101e5f20d">bufferMax</a> - attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a06e8b8d792a924f8397ce7a65b07d302">bufferPosition</a>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="comment">/* Check if the write buffer is full */</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">if</span> (freeSpace==0){</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <a class="code" href="c__io__wbuffering_8h.xhtml#acdb155080c92251b5cf0b2a7458c32c6">c_io_wbuffering_flush</a>(unit);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      freeSpace=</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a7f49a2839e44018f550299c101e5f20d">bufferMax</a>-attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a06e8b8d792a924f8397ce7a65b07d302">bufferPosition</a>;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    }</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    </div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    chunkSize=freeSpace;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">if</span> (chunkSize&gt;remaining)chunkSize=remaining;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">if</span> (chunkSize==attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a7f49a2839e44018f550299c101e5f20d">bufferMax</a>){</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <span class="comment">/* The buffer is empty and we have at least a </span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     whole buffers worth of output. */</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <span class="comment">/*      c_io_printf(unit,&quot;c_io_wbuffering: direct write \n&quot;); */</span>      </div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      ammountWritten+=C_IO_OUT(unit,current_pos,chunkSize/word_len,word_len);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      <span class="comment">/*      attr-&gt;bufferPosition+=chunkSize; */</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a64d8e461b1b72bab51e651545c397b37">bufferMiss</a>++;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    }</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      <span class="comment">/* The buffer is partially full, or we have less </span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">     than a buffers worth of stuff so we add to it */</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <span class="comment">/*      c_io_printf(unit,&quot;c_io_wbuffering: copy to buffer \n&quot;); */</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      memcpy(</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;         &amp;attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a2d29471bdb063c6708d3c59233afeec9">buffer</a>[attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a06e8b8d792a924f8397ce7a65b07d302">bufferPosition</a>],</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;         current_pos,</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;         chunkSize</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;         );</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a06e8b8d792a924f8397ce7a65b07d302">bufferPosition</a>+=chunkSize;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      ammountWritten+=chunkSize/word_len;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#acd87002242d73c168f09e420c8cc5ab1">bufferHits</a>++;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    remaining-=chunkSize;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    current_pos+=chunkSize;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  }</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keywordflow">return</span> ammountWritten;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;}</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;int64_t c_io_wbuffering_getpos (int64_t unit)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;{</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  int64_t pos;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  pos=C_IO_GETPOS(unit);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="c__io_8h.xhtml#acdbb2445860ec92ab11b0c3e39168cc0">c_io_attributes</a>[unit].mode==<a class="code" href="c__io_8h.xhtml#af05b6eea205ddb71dcdab3fc4c5561eba23a392e30a43487b88fa5417fdd1d1b2">writing</a>){</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    pos+=<a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>[unit].<a class="code" href="structc__io__wbuffering__data__t.xhtml#a06e8b8d792a924f8397ce7a65b07d302">bufferPosition</a>;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  }</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <span class="keywordflow">return</span> pos;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;}</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;int64_t c_io_wbuffering_setpos (int64_t unit, </div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                  int64_t pos,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                  int64_t word_len)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;{</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="c__io__wbuffering_8h.xhtml#acdb155080c92251b5cf0b2a7458c32c6">c_io_wbuffering_flush</a>(unit)==<a class="code" href="c__io_8h.xhtml#a1241786eca0d7b83753384a3fa40d75a">c_io_fail</a>) <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#a1241786eca0d7b83753384a3fa40d75a">c_io_fail</a>;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keywordflow">return</span> C_IO_SETPOS(unit,pos,word_len);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;}</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;int64_t c_io_wbuffering_change_mode(int64_t unit,int64_t newMode)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;{</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="c__io__wbuffering_8h.xhtml#acdb155080c92251b5cf0b2a7458c32c6">c_io_wbuffering_flush</a>(unit)==<a class="code" href="c__io_8h.xhtml#a1241786eca0d7b83753384a3fa40d75a">c_io_fail</a>) <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#a1241786eca0d7b83753384a3fa40d75a">c_io_fail</a>;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="keywordflow">return</span> C_IO_CHANGE_MODE(unit,newMode);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">/* </span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment"> * local routines below, should only be accessed by this file </span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;int64_t <a class="code" href="c__io__wbuffering_8h.xhtml#ac724e1081d7152d7595a7cb2f4dd6d00">c_io_wbuffering_reset</a>(int64_t unit){</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>[unit].<a class="code" href="structc__io__wbuffering__data__t.xhtml#a7f49a2839e44018f550299c101e5f20d">bufferMax</a>      = 0;  </div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>[unit].<a class="code" href="structc__io__wbuffering__data__t.xhtml#a551b5cbc8606dfd79ed314a55a79b916">bufferSize</a>     = 0;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>[unit].<a class="code" href="structc__io__wbuffering__data__t.xhtml#a06e8b8d792a924f8397ce7a65b07d302">bufferPosition</a> = 0; </div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>[unit].<a class="code" href="structc__io__wbuffering__data__t.xhtml#acd87002242d73c168f09e420c8cc5ab1">bufferHits</a>     = 0; </div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>[unit].<a class="code" href="structc__io__wbuffering__data__t.xhtml#a64d8e461b1b72bab51e651545c397b37">bufferMiss</a>     = 0; </div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>[unit].<a class="code" href="structc__io__wbuffering__data__t.xhtml#a2d29471bdb063c6708d3c59233afeec9">buffer</a>         = NULL;   </div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;}</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;int64_t <a class="code" href="c__io__wbuffering_8h.xhtml#acdb155080c92251b5cf0b2a7458c32c6">c_io_wbuffering_flush</a>(int64_t unit){</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <a class="code" href="structc__io__wbuffering__data__t.xhtml">c_io_wbuffering_data_t</a> * attr;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  int64_t wCheck;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  attr=&amp;<a class="code" href="c__io__wbuffering_8h.xhtml#ac70228a7c740a6d43befdaffb2734317">c_io_wbuffering_data</a>[unit];</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  <span class="keywordflow">if</span> (attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a06e8b8d792a924f8397ce7a65b07d302">bufferPosition</a>&gt;0){</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    wCheck=C_IO_OUT(unit,attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a2d29471bdb063c6708d3c59233afeec9">buffer</a>,attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a06e8b8d792a924f8397ce7a65b07d302">bufferPosition</a>,1);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keywordflow">if</span> (wCheck != attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a06e8b8d792a924f8397ce7a65b07d302">bufferPosition</a>){</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <a class="code" href="c__io_8h.xhtml#af2dc07ec1edb7a34a3aa1f6a48fc1a7d">c_io_printf</a>(unit,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          <span class="stringliteral">&quot;c_io_wbuffering: flush: ERROR:&quot;</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;          <span class="stringliteral">&quot; writing pending buffer to disk\n&quot;</span>);</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#a1241786eca0d7b83753384a3fa40d75a">c_io_fail</a>;      </div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    }</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a06e8b8d792a924f8397ce7a65b07d302">bufferPosition</a>=0;  </div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    attr-&gt;<a class="code" href="structc__io__wbuffering__data__t.xhtml#a64d8e461b1b72bab51e651545c397b37">bufferMiss</a>++;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  }  </div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="c__io_8h.xhtml#a8444a95c4b21bb1662fbc6c8335a383c">c_io_success</a>;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;}</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="preprocessor">#endif</span></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
