<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/large_scale_cloud/pc2_checks.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_4a718005dcd2cc89f5e703eb62b98c3c.xhtml">large_scale_cloud</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">pc2_checks.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pc2__checks_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;     <span class="comment">! PC2 Cloud Scheme: Checking cloud parameters</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="pc2__checks_8f90.xhtml#a8911867cba750b966170c0bc73e1f0e7" title="Subroutine Interface: ">pc2_checks</a>(                                                  &amp;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;!&gt;   Pressure related fields</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; p_theta_levels,                                                        &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;!&gt;   Prognostic Fields</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; t, cf, cfl, cff, q, qcl, qcf,                                          &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;!&gt;   Logical control</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; l_mixing_ratio)</div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="pc2__checks_8f90.xhtml#a8911867cba750b966170c0bc73e1f0e7">   10</a></span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemphys__ice__mod.xhtml">mphys_ice_mod</a><span class="keywordtype">,         ONLY</span>: <a class="code" href="namespacemphys__ice__mod.xhtml#ab660162ae3051d3946d34886cdf91fb5">thomo</a></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">,   ONLY</span>: cp, r, repsilon</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="keywordtype">USE </span>conversions_mod<span class="keywordtype">,       ONLY</span>: zerodegc</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">,   ONLY</span>: lc, lf</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacepc2__constants__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">pc2_constants_mod</a><span class="keywordtype">,     ONLY</span>: <a class="code" href="namespacepc2__constants__mod.xhtml#ae7b0a4ece1bca69bb8e1b8af489cbc3d">cloud_rounding_tol</a>,                  &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                                   <a class="code" href="namespacepc2__constants__mod.xhtml#a40240bd73aad3d909b515c622bec19a9">one_over_qcf0</a>,                       &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                                   <a class="code" href="namespacepc2__constants__mod.xhtml#a0070742c7e520d5b60919d2d1ba65cf4">min_in_cloud_qcf</a>,                    &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                                   <a class="code" href="namespacepc2__constants__mod.xhtml#a0da515af6e408ecac1bf93a971763359">one_over_min_in_cloud_qcf</a>,           &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                                   <a class="code" href="namespacepc2__constants__mod.xhtml#a5a16748cdb953c7540ea3bd55a4e9795">condensate_limit</a>,                    &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                                   <a class="code" href="namespacepc2__constants__mod.xhtml#af6ee69a95a0109dcf7792ee46ff88124">wcgrow</a></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,               ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,              ONLY</span>: jprb, jpim</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">, ONLY</span>: pdims, tdims, qdims</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacecloud__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cloud_inputs_mod</a><span class="keywordtype">,      ONLY</span>: <a class="code" href="namespacecloud__inputs__mod.xhtml#a966ee2807660050ab40a698e66889059">i_fixbug_pc2_checks</a>,                 &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                                   <a class="code" href="namespacecloud__inputs__mod.xhtml#a313043164f5a71d92e3a4dfc53329017">l_ensure_min_in_cloud_qcf</a></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">! Description of Code:</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                        <span class="comment">!, INTENT(IN)</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;   <a class="code" href="varcld_8h.xhtml#acd7a57e90bb1e737ecae71f1c1830ad6">p_theta_levels</a>(pdims%i_start:pdims%i_end,                            &amp;                  pdims%j_start:pdims%j_end,                            &amp;                   pdims%k_start:pdims%k_end)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordtype">LOGICAL</span> ::                                                            &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                        <span class="comment">!, INTENT(IN)</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;   l_mixing_ratio</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                        <span class="comment">!, INTENT(INOUT)</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;   t(  tdims%i_start:tdims%i_end,                                       &amp;       tdims%j_start:tdims%j_end,                                       &amp;                    1:tdims%k_end),                                      &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;   cf( qdims%i_start:qdims%i_end,                                       &amp;       qdims%j_start:qdims%j_end,                                       &amp;                    1:qdims%k_end),                                      &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;   cfl(qdims%i_start:qdims%i_end,                                       &amp;       qdims%j_start:qdims%j_end,                                       &amp;                    1:qdims%k_end),                                      &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;   cff(qdims%i_start:qdims%i_end,                                       &amp;       qdims%j_start:qdims%j_end,                                       &amp;                    1:qdims%k_end),                                      &amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;   q(  qdims%i_start:qdims%i_end,                                       &amp;       qdims%j_start:qdims%j_end,                                       &amp;                    1:qdims%k_end),                                      &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;   qcl(qdims%i_start:qdims%i_end,                                       &amp;       qdims%j_start:qdims%j_end,                                       &amp;                    1:qdims%k_end),                                      &amp;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;   qcf(qdims%i_start:qdims%i_end,                                       &amp;       qdims%j_start:qdims%j_end,                                       &amp;                    1:qdims%k_end)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: lcrcp = lc/cp</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: lsrcp = (lc+lf)/cp</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: lfrcp = lf/cp</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: original = 0</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: force_cfl_cf_unity = 1               <span class="comment">! Force CFL (and CF) to unity when creating some extra QCL when qv&gt;qsat.</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;   alpha,                                                               &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;   al,                                                                  &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;   sd,                                                                  &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;   cfl_old</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">!      temp store for old cfl value</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">!  (b) Others.</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordtype">INTEGER</span> :: k,i,j       <span class="comment">! Loop counters: K - vertical level index</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">!                           I,J - horizontal position index</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">!  Local dynamic arrays!    1 block of real workspace is required.</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;   qsl_t(qdims%i_start:qdims%i_end,                                     &amp;         qdims%j_start:qdims%j_end)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">!       Saturated specific humidity for dry bulb temperature T</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordtype">REAL   (KIND=jprb)</span>            :: zhook_handle</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">!- End of Header</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">! ==Main Block==-</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;PC2_CHECKS&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! Loop round levels to be processed</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">! Levels_do1:</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">!$OMP  PARALLEL DO DEFAULT(SHARED) SCHEDULE(STATIC) PRIVATE(i, j, k, al,&amp;!$OMP&amp; alpha, sd, cfl_old, qsl_t)</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordflow">DO</span> k = 1,qdims%k_end</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">! ! 1. Calculate Saturated Specific Humidity with respect to liquid water</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">!    for dry bulb temperatures.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">! DEPENDS ON: qsat_wat_mix</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keyword">CALL </span><a class="code" href="qsat__wat__mix_8f90.xhtml#a2c76d0fec243d54bbf3512ebc16d81dc" title="Saturation Specific Humidity Scheme (Qsat_Wat): Vapour to Liquid. ">qsat_wat_mix</a>(qsl_t,t(qdims%i_start,qdims%j_start,k),           &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;           <a class="code" href="varcld_8h.xhtml#acd7a57e90bb1e737ecae71f1c1830ad6">p_theta_levels</a>(qdims%i_start,qdims%j_start,k),               &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;           (1+qdims%i_end-qdims%i_start)*(1+qdims%j_end-qdims%j_start), &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;           l_mixing_ratio)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">! Rows_do1:</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">DO</span> j = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">! Row_length_do1:</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      <span class="keywordflow">DO</span> i = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;-<span class="comment">! 2. Calculate the saturation deficit.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">! Need to estimate the rate of change of saturated specific humidity</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">! with respect to temperature (alpha) first, then use this to calculate</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">! factor aL.</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        alpha=repsilon*lc*qsl_t(i,j)/(r*t(i,j,k)**2)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        al=1.0/(1.0+lcrcp*alpha)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">! Calculate the saturation deficit SD</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        sd=al*(qsl_t(i,j)-q(i,j,k))</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">! !  3. Checks are applied here for liquid cloud</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">! Earlier versions checked whether saturation deficit is zero (or less</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">! than zero). If so, then the liquid cloud fraction was forced to one.</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">! This check has been suspended for numerical reasons.</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">!            IF (SD  &lt;=  0.0 .OR. CFL(i,j,k)  &gt;   1.0) THEN</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">! Instead, check simply whether input values of liquid cloud fraction</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">! are, or are between, zero and one. If not, adjust them to zero or one.</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">! Adjust the total cloud fractions accordingly.</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">IF</span> (cfl(i,j,k) &gt; (1.0 - <a class="code" href="namespacepc2__constants__mod.xhtml#ae7b0a4ece1bca69bb8e1b8af489cbc3d">cloud_rounding_tol</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;          cfl(i,j,k)=1.0</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;          cf(i,j,k) =1.0</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">! Check also whether the liquid water content is less than zero, and</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">! set liquid cloud fraction to zero if it is.</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keywordflow">IF</span> (qcl(i,j,k) &lt; <a class="code" href="namespacepc2__constants__mod.xhtml#a5a16748cdb953c7540ea3bd55a4e9795">condensate_limit</a> .OR.                          &amp;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            cfl(i,j,k) &lt; <a class="code" href="namespacepc2__constants__mod.xhtml#ae7b0a4ece1bca69bb8e1b8af489cbc3d">cloud_rounding_tol</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;          cfl(i,j,k)=0.0</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;          cf(i,j,k) =cff(i,j,k)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">! Check whether the saturation deficit is less than zero. If it is</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">! then condense some liquid to bring the saturation deficit to zero.! Adjust the temperature for the latent heating.</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="keywordflow">IF</span> (sd &lt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;          q(i,j,k)   = q(i,j,k)   + sd</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;          qcl(i,j,k) = qcl(i,j,k) - sd</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;          t(i,j,k)   = t(i,j,k)   - sd * lcrcp</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;          <span class="comment">! In original PC2 (i_fixbug_pc2_checks=original)</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;          <span class="comment">! there is no change to the cloud fraction</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;          <span class="comment">! as a result of the above QCL change.</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a966ee2807660050ab40a698e66889059">i_fixbug_pc2_checks</a> /= original) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="comment">! Various options for adjusting the cloud fraction.</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a966ee2807660050ab40a698e66889059">i_fixbug_pc2_checks</a> == force_cfl_cf_unity) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;              <span class="comment">! Force CFL to 1 and hence also set CF to 1.</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;              cfl(i,j,k) = 1.0              cf(i,j,k)  = 1.0</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;              <span class="comment">! Increase the cloud fraction in order to</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;              <span class="comment">! keep the in-cloud condensate amount the same</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;              <span class="comment">! providing there is a well-defined in cloud value.</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;              cfl_old = cfl(i,j,k)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;              <span class="keywordflow">IF</span> (cfl(i,j,k) &gt; 0.0 .and. (qcl(i,j,k)+sd) &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                 <span class="comment">! There is a well defined in cloud value</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                 cfl(i,j,k) = max(0.0,min(1.0,                          &amp;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                              qcl(i,j,k)*cfl(i,j,k)/(qcl(i,j,k)+sd) ))</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;              <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                 <span class="comment">! grow cloud at a fixed amount</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                 cfl(i,j,k) = max(0.0,min(1.0,                          &amp;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                              qcl(i,j,k)/<a class="code" href="namespacepc2__constants__mod.xhtml#af6ee69a95a0109dcf7792ee46ff88124">wcgrow</a> ))</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;              <span class="comment">! update total cloud fraction</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;              cf(i,j,k) = max(min(cf(i,j,k)+cfl(i,j,k)-cfl_old,1.0),0.0)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">! i_fixbug_pc2_checks /= original</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! sd &lt; 0.0</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">! Check whether the saturation deficit</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">! is greater than zero but the liquid cloud fraction is one. If it is</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">! then evaporate some liquid (provided there is enough</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">! liquid) to bring the saturation deficit to zero. Adjust the</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">! temperature for the latent heating.</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">IF</span> (sd &gt; 0.0 .AND. cfl(i,j,k) == 1.0 .AND. qcl(i,j,k) &gt; sd) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;          q(i,j,k)   = q(i,j,k)   + sd</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;          qcl(i,j,k) = qcl(i,j,k) - sd</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          t(i,j,k)   = t(i,j,k)   - sd * lcrcp</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">! Check whether the liquid content is less than zero, or whether it is</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">! greater than zero but the liquid cloud fraction is zero. If so then</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">! condense or evaporate liquid to bring the liquid water to zero. Adjust</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">! the temperature for latent heating.</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keywordflow">IF</span> (qcl(i,j,k) &lt; <a class="code" href="namespacepc2__constants__mod.xhtml#a5a16748cdb953c7540ea3bd55a4e9795">condensate_limit</a> .OR.                          &amp;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;           (qcl(i,j,k) &gt;  0.0 .AND. cfl(i,j,k) == 0.0) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;          q(i,j,k)   = q(i,j,k) + qcl(i,j,k)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;          t(i,j,k)   = t(i,j,k) - qcl(i,j,k) * lcrcp</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;          qcl(i,j,k) = 0.0</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">! !  4. Check that ice content and ice cloud fraction are sensible.</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">! Check whether ice content is zero (or less than zero). If so then</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">! force the ice cloud fraction to zero. Also check whether input values</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">! of ice cloud fraction are, or are between, zero and one. If not,</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">! adjust them to zero or one. Adjust the total cloud fractions</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">! accordingly.</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordflow">IF</span> (cff(i,j,k) &gt; (1.0 - <a class="code" href="namespacepc2__constants__mod.xhtml#ae7b0a4ece1bca69bb8e1b8af489cbc3d">cloud_rounding_tol</a>)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;          cff(i,j,k) = 1.0</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;          cf(i,j,k)  = 1.0</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">IF</span> (qcf(i,j,k) &lt; <a class="code" href="namespacepc2__constants__mod.xhtml#a5a16748cdb953c7540ea3bd55a4e9795">condensate_limit</a> .OR.                          &amp;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            cff(i,j,k) &lt; <a class="code" href="namespacepc2__constants__mod.xhtml#ae7b0a4ece1bca69bb8e1b8af489cbc3d">cloud_rounding_tol</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;          cff(i,j,k) = 0.0</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;          cf(i,j,k)  = cfl(i,j,k)</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">! If ice content is negative then condense some vapour to remove the</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">! negative part. Adjust the temperature for the latent heat.</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">IF</span> (qcf(i,j,k) &lt; <a class="code" href="namespacepc2__constants__mod.xhtml#a5a16748cdb953c7540ea3bd55a4e9795">condensate_limit</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;          q(i,j,k)   = q(i,j,k) + qcf(i,j,k)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;          t(i,j,k)   = t(i,j,k) - qcf(i,j,k) * lsrcp</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;          qcf(i,j,k) = 0.0</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">! If ice content is positive but ice cloud fraction negative, create</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">! some ice cloud fraction.</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">IF</span> (qcf(i,j,k) &gt; 0.0 .AND. cff(i,j,k) == 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;          cff(i,j,k) = qcf(i,j,k) * <a class="code" href="namespacepc2__constants__mod.xhtml#a40240bd73aad3d909b515c622bec19a9">one_over_qcf0</a></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">!             CF is not adjusted here but is checked below</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a313043164f5a71d92e3a4dfc53329017">l_ensure_min_in_cloud_qcf</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;          <span class="keywordflow">IF</span> (cff(i,j,k) &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            <span class="keywordflow">IF</span> (qcf(i,j,k)/cff(i,j,k) &lt; <a class="code" href="namespacepc2__constants__mod.xhtml#a0070742c7e520d5b60919d2d1ba65cf4">min_in_cloud_qcf</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;              cff(i,j,k)=qcf(i,j,k)*<a class="code" href="namespacepc2__constants__mod.xhtml#a0da515af6e408ecac1bf93a971763359">one_over_min_in_cloud_qcf</a></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">! !  5. Check that total cloud fraction is sensible.</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">! Total cloud fraction must be bounded by</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">! i) The maximum of the ice and liquid cloud fractions (maximum overlap)</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="keywordflow">IF</span> (cf(i,j,k) &lt; max(cfl(i,j,k),cff(i,j,k))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;          cf(i,j,k) = max(cfl(i,j,k),cff(i,j,k))</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">! ii) The sum of the ice and liquid cloud fractions or one, whichever</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">! is the lower (minimum overlap)</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keywordflow">IF</span> (cf(i,j,k) &gt; min( (cfl(i,j,k)+cff(i,j,k)),1.0 ) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;          cf(i,j,k) = min( (cfl(i,j,k)+cff(i,j,k)),1.0 )</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">! !  6. Homogeneous nucleation.</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">!        IF (t(i,j,k) &lt; (zerodegc+thomo)) THEN</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">! Turn all liquid to ice</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;          <span class="keywordflow">IF</span> (qcl(i,j,k) &gt; 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            cff(i,j,k) = cf(i,j,k)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            cfl(i,j,k) = 0.0</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;          qcf(i,j,k) = qcf(i,j,k) + qcl(i,j,k)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;          t(i,j,k)   = t(i,j,k)   + qcl(i,j,k) * lfrcp</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;          qcl(i,j,k) = 0.0</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keywordflow">      END DO</span> <span class="comment">!i</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordflow">    END DO</span> <span class="comment">!j</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">!k</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">!$OMP END PARALLEL DO</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">! End of the subroutine</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;PC2_CHECKS&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="pc2__checks_8f90.xhtml#a8911867cba750b966170c0bc73e1f0e7" title="Subroutine Interface: ">pc2_checks</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
