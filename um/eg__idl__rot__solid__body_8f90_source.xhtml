<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/dynamics_advection/eg_idl_rot_solid_body.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_cd31b8e5b091f70cb512ede7e9775b9c.xhtml">dynamics_advection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">eg_idl_rot_solid_body.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="eg__idl__rot__solid__body_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="namespaceeg__idl__rot__solid__body__mod.xhtml">    5</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceeg__idl__rot__solid__body__mod.xhtml" title="Subroutine Interface: ">eg_idl_rot_solid_body_mod</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespaceeg__idl__rot__solid__body__mod.xhtml#acead087b588003282086f23a2078c546">eg_idl_rot_solid_body</a>(                                     &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                      l_shallow, l_rotate_grid,                       &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                      row_length, rows, n_rows, halo_i, halo_j,       &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                      offx, offy, model_levels,                       &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                      xi3_at_rho, xi3_at_u, xi3_at_v,                 &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;                      intw_w2rho,  intw_rho2w,                        &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;                      csxi1_p, csxi1_u, snxi1_p, snxi1_u,             &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;                      csxi2_p, snxi2_p,                               &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                      t_surface, p_surface, two_omega,                &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                      grid_np_lon, grid_np_lat,                       &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                      aa_jet_u0, aa_jet_a, aa_jet_m, aa_jet_n,        &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                      f1_comp, f2_comp, f3_comp,                      &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                      u, v, w, u_adv, v_adv, w_adv,                   &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                      exner_star, theta, rho, exner)</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="namespaceeg__idl__rot__solid__body__mod.xhtml#acead087b588003282086f23a2078c546">   22</a></span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceeg__idl__1d__profs__mod.xhtml" title="Subroutine Interface: ">eg_idl_1d_profs_mod</a></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jpim, jprb       <span class="comment">!DrHook</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">,  ONLY</span>: lhook, dr_hook   <span class="comment">!DrHook</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keywordtype">USE </span>conversions_mod<span class="keywordtype">, ONLY</span>: pi</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span> : r,kappa,p_zero</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span> : earth_radius, guse <a class="code" href="namespacelevel__heights__mod.xhtml" title="Constants necessary for model level heights in advection and other schemes. Constants necessary for m...">level_heights_mod</a>,   only : r_theta_levels</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keywordtype">USE </span>atm_fields_bounds_mod</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacetimestep__mod.xhtml" title="Timestepping values. Timestepping values. ">timestep_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacetimestep__mod.xhtml#a5eeea97eaf843661a25badef603b593a" title="Timestep information Updated at start of ATM_STEP every timestep. ">timestep_number</a></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT (IN)</span> :: l_shallow, l_rotate_grid</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: row_length   <span class="comment">! no. points on a row</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: rows         <span class="comment">! no. rows</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: n_rows       <span class="comment">! no. rows of v</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: halo_i       <span class="comment">! Size of halo x-direction</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: halo_j       <span class="comment">! Size of halo y-direction</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: offx         <span class="comment">! Small halo x-direction</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: offy         <span class="comment">! Small halo y-direction</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: model_levels <span class="comment">! number of model levels</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: t_surface,                                        &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                    p_surface</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: two_omega</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  xi3_at_rho(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,        &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;               model_levels),                                         &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  xi3_at_u(-halo_i:row_length-1+halo_i, 1-halo_j:rows+halo_j,         &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;         model_levels),                                               &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  xi3_at_v(1-halo_i:row_length+halo_i,-halo_j:n_rows-1+halo_j,        &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;           model_levels)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  intw_w2rho(model_levels,2),  intw_rho2w(model_levels,2)</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  csxi1_p(1-halo_i:row_length+halo_i),                                &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  csxi1_u(-halo_i:row_length-1+halo_i),                               &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  csxi2_p(1-halo_j:rows+halo_j),                                      &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  snxi1_p(1-halo_i:row_length+halo_i),                                &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  snxi1_u(-halo_i:row_length-1+halo_i),                               &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  snxi2_p(1-halo_j:rows+halo_j)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: grid_np_lon,                                   &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                       grid_np_lat</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>    :: aa_jet_u0,                                     &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                       aa_jet_a</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: aa_jet_m,                                      &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                       aa_jet_n</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">! Components of Coriolis</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  f1_comp(row_length,rows),                                           &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  f2_comp(row_length,rows),                                           &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  f3_comp(row_length,rows)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">! Wind components</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT (OUT)</span> ::                                                 &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  u(-offx:row_length-1+offx,1-offy:rows+offy,model_levels),           &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  v(1-offx:row_length+offx,-offy:n_rows-1+offy,model_levels),         &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  w(1-offx:row_length+offx,1-offy:rows+offy,0:model_levels)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT (OUT)</span> ::                                                 &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  u_adv(-halo_i:row_length-1+halo_i, 1-halo_j:rows+halo_j,            &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        model_levels),                                                &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  v_adv(1-halo_i:row_length+halo_i, -halo_j:n_rows+halo_j-1,          &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        model_levels),                                                &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  w_adv(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,             &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        0:model_levels)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">! Thermodynamic fields</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT (INOUT)</span> ::                                               &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  theta(1-offx:row_length+offx,1-offy:rows+offy,0:model_levels),      &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  rho(1-offx:row_length+offx,1-offy:rows+offy,model_levels),          &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  exner(1-offx:row_length+offx,1-offy:rows+offy,model_levels+1)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT (INOUT)</span> ::                                               &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  exner_star(1-offx:row_length+offx,1-offy:rows+offy)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">! Local Variables</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordtype">INTEGER</span> :: i, j, k    <span class="comment">! Loop indices</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">! Required for rotated grid</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keywordtype">REAL</span> :: lon_p, lat_p</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keywordtype">REAL</span> :: t0, s, u0_const, f_sb, dz</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keywordtype">REAL</span> :: sin_lat, cos_lat, sin_lon, cos_lon</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordtype">REAL</span> :: cos_lat_p, sin_lat_p, cos_lon_p, sin_lon_p</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keywordtype">REAL</span> :: exner_surface, theta_bar</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keywordtype">REAL</span> :: exner_1d(0:model_levels+1), rho_1d(model_levels)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keywordtype">REAL</span> :: thetav_1d(0:model_levels), grav_1d(0:model_levels)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keywordtype">REAL</span> :: u0, a</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keywordtype">INTEGER</span> :: m, n</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keywordtype">REAL</span> :: t_surf,  p_surf</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">! Local parameters needed for call to eg_idl_1d_profs:</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">! Profile number used in eg_idl_1d_profs</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: Tprofile_number = 2</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">! Cause eg_idl_1d_profs to get height information from xi3 arrays</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordtype">REAL</span>,    <span class="keywordtype">PARAMETER</span> :: depth_factor  = 1.0</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">! Arrays needed by call to eg_idl_1d_profs but not used</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keywordtype">REAL</span>,    <span class="keywordtype">PARAMETER</span> :: dtheta_dz1(3) = (/0.0, 0.0, 0.0/)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keywordtype">REAL</span>,    <span class="keywordtype">PARAMETER</span> :: height_dz1(2) = (/0.0, 0.0/)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">! Logical needed by eg_idl_1d_profs but not used</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">PARAMETER</span> :: L_constant_dz=.true.</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">!- End of header</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">! 1.0 Start of subroutine code: perform the calculation.</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EG_IDL_ROT_SOLID_BODY&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keywordflow">IF</span> (l_rotate_grid) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">! Rotated pole case</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  lon_p=grid_np_lon*pi/180.0</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  lat_p=grid_np_lat*pi/180.0</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  sin_lon_p=sin(lon_p)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  cos_lon_p=cos(lon_p)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  sin_lat_p=sin(lat_p)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  cos_lat_p=cos(lat_p)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      sin_lon=snxi1_p(i)*cos_lon_p-csxi1_p(i)*sin_lon_p</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      cos_lon=csxi1_p(i)*cos_lon_p+snxi1_p(i)*sin_lon_p</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      sin_lat=snxi2_p(j)*sin_lat_p-cos_lon*csxi2_p(j)*cos_lat_p</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      cos_lat=sqrt(1.0-sin_lat*sin_lat)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">! Components of Coriolis</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      <span class="keywordflow">IF</span> (l_shallow) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        f1_comp(i,j)=0.0</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        f2_comp(i,j)=0.0</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        f1_comp(i,j)=two_omega*sin_lon*cos_lat_p</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        f2_comp(i,j)=two_omega*(csxi2_p(j)*sin_lat_p +                &amp;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                                cos_lon*snxi2_p(j)*cos_lat_p)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      f3_comp(i,j)=two_omega*sin_lat</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacetimestep__mod.xhtml#a5eeea97eaf843661a25badef603b593a" title="Timestep information Updated at start of ATM_STEP every timestep. ">timestep_number</a> /= 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EG_IDL_ROT_SOLID_BODY&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordflow">Do</span> k = 0, model_levels</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;   grav_1d(k)    = g*( earth_radius/r_theta_levels(1,1,k) )**2</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordflow">Enddo</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;t_surf = t_surface</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;p_surf = p_surface</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceeg__idl__1d__profs__mod.xhtml#adf934cae819e30e56cc0be8194c12fca">eg_idl_1d_profs</a>(                                           &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                       exner_1d,                                      &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                       rho_1d,                                        &amp;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                       thetav_1d,                                     &amp;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                       tprofile_number,                               &amp;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                       t_surf, p_surf,                                &amp;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                       1.0, 1.0,                                      &amp;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                       intw_rho2w, intw_w2rho,                        &amp;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                       r_theta_levels(1,1,:), xi3_at_rho(1,1,:),      &amp;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                       depth_factor, earth_radius,                    &amp;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                       dtheta_dz1, height_dz1, l_constant_dz,         &amp;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                       grav_1d, model_levels)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;t0=t_surface</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;u0=aa_jet_u0</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;a=aa_jet_a</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;m=aa_jet_m</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;n=aa_jet_n</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;u0_const=aa_jet_u0*(aa_jet_u0+two_omega*earth_radius)/(r*t0)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keywordflow">IF</span> (l_rotate_grid) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">! Rotated pole case</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  lon_p=grid_np_lon*pi/180.0</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  lat_p=grid_np_lat*pi/180.0</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  sin_lon_p=sin(lon_p)</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  cos_lon_p=cos(lon_p)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  sin_lat_p=sin(lat_p)</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  cos_lat_p=cos(lat_p)</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      sin_lon=snxi1_p(i)*cos_lon_p-csxi1_p(i)*sin_lon_p</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      cos_lon=csxi1_p(i)*cos_lon_p+snxi1_p(i)*sin_lon_p</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      sin_lat=snxi2_p(j)*sin_lat_p-cos_lon*csxi2_p(j)*cos_lat_p</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      cos_lat=sqrt(1.0-sin_lat*sin_lat)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">! Theta at surface</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      s=cos_lat</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;      f_sb=0.5*u0_const*s**2</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">! Modify p_surface to take account of orography</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;      exner_star(i,j)=p_surface*exp(f_sb)*                             &amp;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                      exp(-(r_theta_levels(i,j,0)-earth_radius)*       &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                      g/(r*t0 ))</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;      exner_surface=(exner_star(i,j)/p_zero)**kappa</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      theta(i,j,0)=t0/exner_surface</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">! Modify hydrostatic pressure, theta and rho</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="keywordflow">IF</span> (l_shallow) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;          s = cos_lat</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;          s=xi3_at_rho(i,j,k)*cos_lat/earth_radius</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        f_sb=0.5*u0_const*s**2</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        dz=xi3_at_rho(i,j,k)-earth_radius</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        exner(i,j,k)=exner_1d(k)*exp(kappa*f_sb)</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        theta(i,j,k)=2.0*t0/exner(i,j,k)-theta(i,j,k-1)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        theta_bar  = (intw_w2rho(k,2)*theta(i,j,k-1)                  &amp;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                     +intw_w2rho(k,1)*theta(i,j,k))</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        rho(i,j,k) = p_zero*exner(i,j,k)**((1.0-kappa)/kappa) /       &amp;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                     (r*theta_bar)</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  <span class="keywordflow">DO</span> j = udims%j_start, udims%j_end</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keywordflow">DO</span> i = udims%i_start, udims%i_end</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;      sin_lon=snxi1_u(i)*cos_lon_p-csxi1_u(i)*sin_lon_p</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;      cos_lon=csxi1_u(i)*cos_lon_p+snxi1_u(i)*sin_lon_p</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;      <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        u(i,j,k)=aa_jet_u0*xi3_at_u(i,j,k)*(csxi2_p(j)*sin_lat_p +    &amp;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                 cos_lon*snxi2_p(j)*cos_lat_p)/earth_radius</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        u_adv(i,j,k)=u(i,j,k)</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;  <span class="keywordflow">DO</span> j = vdims%j_start, vdims%j_end</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keywordflow">DO</span> i = vdims%i_start, vdims%i_end</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;      sin_lon=snxi1_p(i)*cos_lon_p-csxi1_p(i)*sin_lon_p</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;      cos_lon=csxi1_p(i)*cos_lon_p+snxi1_p(i)*sin_lon_p</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        v(i,j,k)=-aa_jet_u0*xi3_at_v(i,j,k)*sin_lon*cos_lat_p /       &amp;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                  earth_radius</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        v_adv(i,j,k)=v(i,j,k)</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;  w(:,:,:)=0.0</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  w_adv(:,:,:)=0.0</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">! Modify hydrostatic pressure, theta and rho</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;  <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;      s=csxi2_p(j)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;      f_sb=(u0*s**m)**2*(1.0/(2*m)-2*(a*s)**n/(2*m+n) +               &amp;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                         0.5*(a*s)**(2*n)/(m+n)) +                    &amp;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;           two_omega*earth_radius*u0*s**(m+1)*(1.0/(m+1) -            &amp;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;           (a*s)**n/(m+n+1))</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;      f_sb=f_sb/(r*t0)</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">! Modify p_surface to take account of orography</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;      exner_star(i,j)=p_surface*exp(f_sb)*                             &amp;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                      exp(-(r_theta_levels(i,j,0)-earth_radius)*       &amp;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                      g/(r*t0 ))</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;      exner_surface=(exner_star(i,j)/p_zero)**kappa</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;      theta(i,j,0)=t0/exner_surface</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;  <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keywordflow">DO</span> j = pdims%j_start, pdims%j_end</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;      <span class="keywordflow">DO</span> i = pdims%i_start, pdims%i_end</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="keywordflow">IF</span> (l_shallow) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;          s = csxi2_p(j)</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;          s=xi3_at_rho(i,j,k)*csxi2_p(j)/earth_radius</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        f_sb=(u0*s**m)**2*(1.0/(2*m)-2*(a*s)**n/(2*m+n) +             &amp;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                           0.5*(a*s)**(2*n)/(m+n)) +                  &amp;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;             two_omega*earth_radius*u0*s**(m+1)*(1.0/(m+1) -          &amp;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;             (a*s)**n/(m+n+1))</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        f_sb=f_sb/(r*t0)</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        dz=xi3_at_rho(i,j,k)-earth_radius</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        exner(i,j,k)=exner_1d(k)*exp(kappa*f_sb)</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        theta(i,j,k)=2.0*t0/exner(i,j,k)-theta(i,j,k-1)</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        theta_bar=0.5*(theta(i,j,k-1)+theta(i,j,k))</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        rho(i,j,k) = p_zero*exner(i,j,k)**((1.0-kappa)/kappa) /       &amp;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                     (r*theta_bar)</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment">! Set wind components</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;  <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="keywordflow">DO</span> j = udims%j_start, udims%j_end</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;      <span class="keywordflow">DO</span> i = udims%i_start, udims%i_end</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="keywordflow">IF</span> (l_shallow) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;          s=csxi2_p(j)</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;          s=xi3_at_u(i,j,k)*csxi2_p(j)/earth_radius</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        u(i,j,k) = aa_jet_u0*s**m*(1.0-(a*s)**n)</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        u_adv(i,j,k)=u(i,j,k)</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;  v(:,:,:)=0.0</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;  v_adv(:,:,:)=0.0</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;  w(:,:,:)=0.0</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  w_adv(:,:,:)=0.0</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">! w(row_length/2,rows/2,1) = 0.001</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EG_IDL_ROT_SOLID_BODY&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespaceeg__idl__rot__solid__body__mod.xhtml#acead087b588003282086f23a2078c546">eg_idl_rot_solid_body</a></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceeg__idl__rot__solid__body__mod.xhtml" title="Subroutine Interface: ">eg_idl_rot_solid_body_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
