<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/convection/lift_par-5a.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_c7cc3e4dc8dce4a958919661145604f9.xhtml">convection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">lift_par-5a.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="lift__par-5a_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="lift__par-5a_8f90.xhtml#a49f13ff1e05951a73240dc2dda0ec840" title="(C) Crown copyright Met office. All rights reserved. (C) Crown copyright Met office. All rights reserved. ">lift_par_5a</a> (npnts,np_full,                              &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;                       thpkp1,qpkp1,xsqkp1,bgmkp1,bwkp1,bwk,        &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;                       thpk,qpk,xpk,thekp1,qekp1,thek,qek,qsekp1,   &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;                       qclpkp1, qclpk, qclekp1, qclek, l_q_interact,&amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;                       qcfpkp1, qcfpk, qcfekp1, qcfek,              &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                       pk,pkp1,exkp1,ekp14,ekp34,l_mom_gk,upkp1,    &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                       vpkp1,upk,vpk,uek,uekp1,vek,vekp1,l_tracer,  &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;                       ntra,trapkp1,trapk,traekp1,traek)</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="lift__par-5a_8f90.xhtml#a49f13ff1e05951a73240dc2dda0ec840">   14</a></span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: lc, lf</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacecv__derived__constants__mod.xhtml" title="!&gt; Module holding commonly derived constants used in convection !&gt; Module holding commonly derived co...">cv_derived_constants_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecv__derived__constants__mod.xhtml#a18bc83d7c223f455921c3af9b8ed67b0" title="This module calculate commonly used constants derived from!&gt; UM constants. ">ls</a>, <a class="code" href="namespacecv__derived__constants__mod.xhtml#a200279f3e46baaded9f1659565000960">lfrcp</a></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: cp, repsilon, kappa, rv</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">! Code description:</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  npnts                &amp; <span class="comment">! Number of points</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; ,np_full              &amp; <span class="comment">! Full vector length</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; ,ntra                   <span class="comment">! Number of tracer variables</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;  l_tracer             &amp; <span class="comment">! Switch for inclusion of tracers</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; ,l_mom_gk             &amp; <span class="comment">! Switch for inclusion of (Gregory-Kershaw) CMT</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; ,l_q_interact           <span class="comment">! Switch for overwriting of parcel variables if                         ! calculating condensate increments</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;  bwkp1(npnts)         &amp; <span class="comment">! Mask for whether condensate is liquid in layer k+1</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; ,bwk(npnts)             <span class="comment">! Mask for whether condensate is liquid in layer k</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  thek(npnts)       &amp; <span class="comment">! Potential temperature of cloud environment                      ! in layer k (K)</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; ,thekp1(npnts)     &amp; <span class="comment">! Potential temperature of cloud environment</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                      <span class="comment">! in layer k+1 (K)</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; ,qek(npnts)        &amp; <span class="comment">! Mixing ratio of cloud environment in layer k (kg/kg)</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; ,qekp1(npnts)      &amp; <span class="comment">! Mixing ratio of cloud environment in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; ,qclek(npnts)      &amp; <span class="comment">! Liquid condensate Mixing ratio of cloud</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                      <span class="comment">! environment in layer k (kg/kg)</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; ,qclekp1(npnts)    &amp; <span class="comment">! Liquid condensate Mixing ratio of cloud</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                      <span class="comment">! environment in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; ,qcfek(npnts)      &amp; <span class="comment">! Frozen condensate Mixing ratio of cloud</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                      <span class="comment">! environment in layer k (kg/kg)</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; ,qcfekp1(npnts)    &amp; <span class="comment">! Frozen condensate Mixing ratio of cloud</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                      <span class="comment">! environment in layer k+1 (kg/kg)</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; ,uek(npnts)        &amp; <span class="comment">! U of environment in layer k (m/s)</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; ,uekp1(npnts)      &amp; <span class="comment">! U of environment in layer k+1 (m/s)</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; ,vek(npnts)        &amp; <span class="comment">! V of environment in layer k (m/s)</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; ,vekp1(npnts)        <span class="comment">! V of environment in layer k+1 (m/s)</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::    &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  traek(np_full,ntra)  &amp; <span class="comment">! Tracer content of cloud environment in                         ! layer k (kg/kg)</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; ,traekp1(np_full,ntra)&amp; <span class="comment">! Tracer content of cloud environment in                         !layer k+1 (kg/kg)                                            &amp;</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; ,trapk(np_full,ntra)    <span class="comment">! Parcel Tracer content in layer k (kg/kg)</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> :: &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  qsekp1(npnts)     &amp; <span class="comment">! Saturation Mixing ratio of cloud environment in</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                      <span class="comment">! layer k+1 (kg/kg)</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; ,thpk(npnts)       &amp; <span class="comment">! Parcel Potential temperature in layer k  (K)</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; ,qpk(npnts)        &amp; <span class="comment">! Parcel Mixing ratio in layer k (kg/kg)</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; ,xpk(npnts)        &amp; <span class="comment">! Parcel condensate in layer k (kg/kg)</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; ,qclpk(npnts)      &amp; <span class="comment">! Parcel Liquid condensate Mixing ratio in layer k (kg/kg)</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; ,qcfpk(npnts)      &amp; <span class="comment">! Parcel Frozen condensate Mixing ratio in layer k (kg/kg)</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; ,upk(npnts)        &amp; <span class="comment">! Parcel U in layer k (m/s)</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; ,vpk(npnts)        &amp; <span class="comment">! Parcel V in layer k (m/s)</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; ,pkp1(npnts)       &amp; <span class="comment">! Pressure at level k+1 (Pa)</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; ,pk(npnts)         &amp; <span class="comment">! Pressure at centre of layer k</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; ,exkp1(npnts)      &amp; <span class="comment">! Exner ratio at mid-point of layer k+1</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; ,ekp14(npnts)      &amp; <span class="comment">! entrainment coefficient at level k+1/4 multiplied</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                      <span class="comment">! by appropriate layer thickness</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; ,ekp34(npnts)        <span class="comment">! entrainment coefficient at level k+3/4 multiplied</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                      <span class="comment">! by appropriate layer thickness</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(INOUT)</span> :: &amp;  bgmkp1(npnts)             <span class="comment">! IN Is Parcel saturated in layer k ?</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                            <span class="comment">! OUT Is Parcel saturated in layer k+1 ?</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  thpkp1(npnts)      &amp; <span class="comment">! Parcel Potential temperature in layer k+1 after</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                       <span class="comment">! entrainment and latent heating (K)</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; ,qpkp1(npnts)       &amp; <span class="comment">! Parcel Mixing ratio in layer k+1 after</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                       <span class="comment">! entrainment and latent heating (kg/kg)</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; ,qclpkp1(npnts)     &amp; <span class="comment">! Parcel Liquid condensate Mixing ratio</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                       <span class="comment">! in layer k+1 after entrainment</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; ,qcfpkp1(npnts)     &amp; <span class="comment">! Parcel Frozen condensate Mixing ratio</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                       <span class="comment">! in layer k+1 after entrainment</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; ,upkp1(npnts)       &amp; <span class="comment">! Parcel U in layer k+1 after entrainment (m/s)</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; ,vpkp1(npnts)       &amp; <span class="comment">! Parcel V in layer k+1 after entrainment (m/s)</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; ,xsqkp1(npnts)        <span class="comment">! Excess Parcel water after lifting from layer k</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                       <span class="comment">! to k+1(kg/kg)</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span> ::    &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  trapkp1(np_full,ntra)   <span class="comment">! Parcel tracer conent in layer k+1 after                          ! entrainment. (kg/kg)</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;-<span class="comment">! Local variables</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;-<span class="keywordtype">INTEGER</span> ::   &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  i,ktra         <span class="comment">! Loop counters</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordtype">REAL</span> ::           &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  thpkp1t(npnts)  &amp; <span class="comment">! Initial estimate of Parcel temperature</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                    <span class="comment">! in layer k+1 after entrainment (K)</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; ,tt(npnts)       &amp; <span class="comment">! Temporary temperature used in calculation</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                    <span class="comment">! of saturation Mixing ratio (K)</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; ,pt(npnts)       &amp; <span class="comment">! Temporary pressure used in calculation</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                    <span class="comment">! of saturation Mixing ratio (K)</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; ,qspkp1(npnts)   &amp; <span class="comment">! saturation Mixing ratio of parcel</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                    <span class="comment">! after dry ascent (kg/kg)</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; ,repss(npnts)      <span class="comment">! 1 / EPSS(K)</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordtype">REAL</span> ::         &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  dqsdt         &amp; <span class="comment">! Rate of change of qsat with temperature</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; ,el            &amp; <span class="comment">! Latent heat of gas-to-whatever-condenses PC2 defn (J/kg)</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; ,ekp14_plus1   &amp; <span class="comment">! 1+ekp14</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; ,rekp34_plus1</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;-</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LIFT_PAR_5A&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="comment">!   !   Lift parcel Mixing ratio, potential temperature, U, V and tracer</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="comment">!   to the next level</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="comment">!  !   !   Initial &#39;dry&#39; ascent</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="comment">!</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="comment">!   UM Documentation paper P27</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="comment">!   section (3), equations (11B), (12B)</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="comment">!  ekp14_plus1 = 1.0+ekp14(i)</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  repss(i) = 1.0 / ((ekp14_plus1)*(1.0+ekp34(i)))</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  thpkp1(i) = ( thpk(i)+ ekp14(i)*thek(i) + ekp34(i)*(ekp14_plus1)*thekp1(i)) &amp;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;               *repss(i)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  qpkp1(i) = (  qpk(i) + ekp14(i)*qek(i) + ekp34(i)*(ekp14_plus1)*qekp1(i) )  &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;               *repss(i)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keywordflow">IF</span> (l_q_interact) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    qclpkp1(i)= ( qclpk(i)                                                   &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                  + ekp14(i)*qclek(i) + ekp34(i)*(ekp14_plus1)*qclekp1(i)    &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                    ) * repss(i)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    qcfpkp1(i)= ( qcfpk(i)                                                   &amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                  + ekp14(i)*qcfek(i) + ekp34(i)*(ekp14_plus1)*qcfekp1(i)    &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                    ) * repss(i)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="comment">!     ! IMPORTANT NOTE: The condensate term has the same form as those for the</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="comment">! vapour and temperature in the initial ascent. If we had a clear idea</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="comment">! on how to parametrize detrainment and mixing of condensate, it could</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="comment">! be updated alongside the vapour process-by-process within convection.</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">! HOWEVER, we opt instead simply to STORE the humidity excess over Qsat</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">! in XSQKP1 as the vapour is updated and apply moisture conservation</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="comment">! just before the increments to the environment variables are calculated</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="comment">! (ie. XSQKP1 is added to QCLPKP1 or QCFPKP1 in CLOUDW1A).</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="comment">!    !     !       Currently mixed phase parcel is forbidden. Melt or freeze the</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="comment">!       entrained layer cloud and adjust parcel temperature accordingly.</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="comment">!    IF (bwkp1(i)) THEN</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      qclpkp1(i) = qclpkp1(i) + qcfpkp1(i)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      thpkp1(i)  = ( thpkp1(i) - ( max( 0.0, qcfpkp1(i) ) * lf /  &amp;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                                          (cp * exkp1(i)) ) )</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      qcfpkp1(i) = 0.0</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      qcfpkp1(i) = qclpkp1(i) + qcfpkp1(i)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      thpkp1(i)  = ( thpkp1(i) + ( max( 0.0, qclpkp1(i) ) * lf /  &amp;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                          (cp * exkp1(i)) ) )</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      qclpkp1(i) = 0.0</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <span class="keywordflow">ELSE</span> <span class="comment">! L_q_interact_if1</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="comment">! Allow for release of latent heat of fusion if crossing the freezing</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="comment">! level.</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordflow">IF</span> ( bwkp1(i) .AND. .NOT. bwk(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      thpkp1(i) = thpkp1(i) - <a class="code" href="namespacecv__derived__constants__mod.xhtml#a200279f3e46baaded9f1659565000960">lfrcp</a> * xpk(i) / exkp1(i)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> ( bwk(i) .AND. .NOT. bwkp1(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      thpkp1(i) = thpkp1(i) + <a class="code" href="namespacecv__derived__constants__mod.xhtml#a200279f3e46baaded9f1659565000960">lfrcp</a> * xpk(i) / exkp1(i)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordflow">  END IF</span>  <span class="comment">! L_q_interact_if1</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keywordflow">END DO</span>   <span class="comment">! i</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordflow">IF</span> (l_mom_gk) <span class="keywordflow">THEN</span>   <span class="comment">! l_mom_gk set according to type of CMT required</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                     <span class="comment">! This code does Gregory-Kershaw CMT</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="comment">! Calculations for cumulus convection done after termination</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    ekp14_plus1 = 1.0+ekp14(i)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    rekp34_plus1 = 1.0/(1.0+ekp34(i))</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    upkp1(i) = (upk(i)+                                             &amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                ekp14(i)*uek(i) + ekp34(i)*(ekp14_plus1)*uekp1(i)   &amp;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                  ) *repss(i)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    vpkp1(i) = (vpk(i)+                                             &amp;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                ekp14(i)*vek(i) + ekp34(i)*(ekp14_plus1)*vekp1(i)   &amp;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                  ) *repss(i)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    upkp1(i) = upkp1(i) - (0.7*(uek(i)-uekp1(i))*rekp34_plus1)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    vpkp1(i) = vpkp1(i) - (0.7*(vek(i)-vekp1(i))*rekp34_plus1)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordflow">END IF</span>       <span class="comment">! l_mom_gk test</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordflow">IF</span> (l_tracer) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="keywordflow">DO</span> ktra = 1,ntra</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keywordflow">DO</span> i = 1,npnts</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      trapkp1(i,ktra) = ( trapk(i,ktra)+ ekp14(i)*traek(i,ktra)              &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                   + ekp34(i)*(1.0+ekp14(i))*traekp1(i,ktra) &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                              ) *repss(i)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keywordflow">     END DO</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">!   Calculate where the parcel is supersaturated (i.e.where gamma(k+1)=1</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">!   See DCTN 29 Page 123)</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">! Convert potential temperature to temperature and calculate</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">! pressure of layer k for calculation of saturated mixing ratio</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  <span class="comment">! For Parcel saturated in layer k, use Exner pressure in k+1 with</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="comment">! theta for layer k (gives partly compensating errors)</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  <span class="comment">! For unsaturated Parcel in layer k, use the k+1 to test whether</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  <span class="comment">! saturation is occurring there</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  <span class="keywordflow">IF</span> ( bgmkp1(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    tt(i) = thpk(i) * exkp1(i)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    tt(i) = thpkp1(i) * exkp1(i)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">! DEPENDS ON: qsat</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keyword">CALL </span><a class="code" href="qsat_8f90.xhtml#aea6c2f88cb65e881fc815b7be5559cc9" title="Saturation Specific Humidity Scheme (Qsat): Vapour to Liquid/Ice. ">qsat</a> (qspkp1,tt,pkp1,npnts)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordflow">DO</span> i=1, npnts</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  bgmkp1(i) = bgmkp1(i) .OR. ( qspkp1(i)  &lt;   qpkp1(i) )</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keywordflow">IF</span> ( bgmkp1(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="comment">!     !  Adjust parcel temperature to account for latent heating</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="comment">!     IF ( bwkp1(i) ) THEN</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;      el = lc</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      el = <a class="code" href="namespacecv__derived__constants__mod.xhtml#a18bc83d7c223f455921c3af9b8ed67b0" title="This module calculate commonly used constants derived from!&gt; UM constants. ">ls</a></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    dqsdt = el * qspkp1(i) / ( rv * tt(i)*tt(i) )</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="comment">! Consistent with QSAT calculation above:</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    thpkp1t(i) = thpkp1(i) + ( pkp1(i) - pk(i) ) * kappa * tt(i)  &amp;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                * dqsdt  * ( cp * tt(i) - repsilon * el ) /        &amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                ( repsilon * exkp1(i)*( cp + el * dqsdt ) * pkp1(i) )</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="comment">!     !  Calculate T from theta</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="comment">!     tt(i) = thpkp1t(i) * exkp1(i)</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">! !    Calculate a more accurate parcel saturated mixing ratio</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">! DEPENDS ON: qsat</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keyword">CALL </span><a class="code" href="qsat_8f90.xhtml#aea6c2f88cb65e881fc815b7be5559cc9" title="Saturation Specific Humidity Scheme (Qsat): Vapour to Liquid/Ice. ">qsat</a> (qspkp1, tt, pkp1, npnts)</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">DO</span> i=1,npnts</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  <span class="keywordflow">IF</span> ( bgmkp1(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordflow">IF</span> ( bwkp1(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;      el = lc</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;      el = <a class="code" href="namespacecv__derived__constants__mod.xhtml#a18bc83d7c223f455921c3af9b8ed67b0" title="This module calculate commonly used constants derived from!&gt; UM constants. ">ls</a></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    dqsdt = el * qspkp1(i) / ( rv * tt(i)*tt(i) )</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    thpkp1t(i) = ( thpkp1(i) * cp   +                                     &amp;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            ((qpkp1(i) - qspkp1(i))/exkp1(i) + thpkp1t(i) * dqsdt ) * el) &amp;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;              /( cp  + dqsdt * el )</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    xsqkp1(i) = ( thpkp1t(i) - thpkp1(i) ) * cp * exkp1(i) / el</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    bgmkp1(i) = ( xsqkp1(i)  &gt;   0.0 ) .AND. (                            &amp;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                ( qpkp1(i) - xsqkp1(i) )  &gt;   0.85 * qspkp1(i))</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keywordflow">DO</span> i=1, npnts</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  <span class="keywordflow">IF</span> ( bgmkp1(i) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    thpkp1(i) = thpkp1t(i)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    qpkp1(i)  = qpkp1(i) - xsqkp1(i)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    xsqkp1(i) = 0.0</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LIFT_PAR_5A&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="lift__par-5a_8f90.xhtml#a49f13ff1e05951a73240dc2dda0ec840" title="(C) Crown copyright Met office. All rights reserved. (C) Crown copyright Met office. All rights reserved. ">lift_par_5a</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
