<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/scm/diagnostic/dump_streams.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b97be95e70c2cb49b099ac39ba4801c2.xhtml">scm</a></li><li class="navelem"><a class="el" href="dir_f974de0797e0b116e79416c6884e1ea9.xhtml">diagnostic</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">dump_streams.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="dump__streams_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="dump__streams_8f90.xhtml#aa14d02cdb7cff2b75805e57780016090" title="Write SCM diagnostic data to output files. ">dump_streams</a>                                                 &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  ( scmop, day, time, row_length, rows, model_levels, dayno_init        &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  , steptime, site, lat, lon, timeinit, year, <a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a> )</div><div class="line"><a name="l00008"></a><span class="lineno"><a class="line" href="dump__streams_8f90.xhtml#aa14d02cdb7cff2b75805e57780016090">    8</a></span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  <span class="keywordtype">USE </span>netcdf</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceum__types.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">um_types</a></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="keywordtype">USE </span>scm_utils<span class="keywordtype">, ONLY</span>:                                                  &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;      scm_timestep, scm_timestep_count, time_info, scm_nc_time_id       &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    , scm_nc_date_id, scm_nc_hour_id, scm_nc_local_id, zhook_in         &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    , zhook_out, jprb, lhook, dr_hook</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacescmoptype__defn.xhtml" title="Defines the derived-type, SCMop_type, necessary for declaring. ">scmoptype_defn</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaces__scmop__mod.xhtml">s_scmop_mod</a>,    &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      only: <a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a5bda18f0a188e3401cfc9addee6bc4e9">streamison</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0aff366ad97d283dfca70868566ddaf1">notwritten</a></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordtype">TYPE</span>(<a class="code" href="structscmoptype__defn_1_1scmop__type.xhtml">scmop_type</a>) :: SCMop <span class="comment">! In The derived-type structure</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                            <span class="comment">! containing all the diagnostic</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                            <span class="comment">! information</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> :: model_levels <span class="comment">! In The number of model levels</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> :: day          <span class="comment">! In Day</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> :: time         <span class="comment">! In Time in seconds</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">INTEGER</span> :: unit</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordtype">INTEGER</span> :: n,m,i,j,k,l       <span class="comment">! Counters</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> :: n64          <span class="comment">! 64-bit copy of N</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keywordtype">INTEGER</span> :: dump              <span class="comment">! The dump number (1:ndumps)</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordtype">INTEGER</span> :: ncols,nrows,nlevs <span class="comment">! No. of columns,rows,levels of a</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                               <span class="comment">! diagnostic</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordtype">INTEGER</span> :: nlines            <span class="comment">! Number of lines written to file</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keywordtype">INTEGER</span> :: dump_step         <span class="comment">! A dumping period</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="comment">! Local variables for NetCDF-format output. Integers that are</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="comment">! passed into NetCDF library routines should have the same</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="comment">! precision as those used internally within the library (which</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="comment">! may have been compiled at 32 bit), hence the use of incdf.</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordtype">INTEGER(incdf)</span> :: Status,varshape(4)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="comment">! Local variables for FSSI-format output</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keyword">TYPE</span> fssi_dump_type</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;     <span class="keywordtype">INTEGER</span> :: ndiags</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;     <span class="keywordtype">INTEGER</span>, <span class="keywordtype">POINTER</span> :: diags(:)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;     <span class="keywordtype">INTEGER</span> :: dumpsize</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">  END TYPE </span>fssi_dump_type</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">TYPE</span>(fssi_dump_type) :: fssi_dump(<a class="code" href="namespacescmoptype__defn.xhtml#a3f60f9478a654738d44df0e07cdb3d96" title="The maximum no. of streams must be such that Stream(maxnstreams+1) gives an integer which is not too ...">maxnstreams</a>)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordtype">SAVE</span> fssi_dump</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">ALLOCATABLE</span> :: diags(:)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keywordtype">INTEGER</span> :: ndiags</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> :: row_length,rows</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> :: dayno_init            <span class="comment">! Initial value of DAYNUMBER</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> :: steptime              <span class="comment">! Elapsed time (=stepcount*timestep)</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> :: site(row_length,rows) <span class="comment">! SSFM site WMO number</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> :: timeinit              <span class="comment">! Start time of integration</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> :: year                  <span class="comment">! Year (4 digits!!)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordtype">REAL(r64)</span> :: lat(row_length,rows)     <span class="comment">! SSFM site latitude</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordtype">REAL(r64)</span> :: lon(row_length,rows)     <span class="comment">! SSFM site longitude</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">LOGICAL(l64)</span> :: lcal360               <span class="comment">! Flag for 360 day calendar</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> ::  &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    ElapsedDays    &amp;<span class="comment">! Whole days elapsed from start of run</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  , ElapsedSecs    &amp;<span class="comment">! Whole seconds elapsed from start of run</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  , BasisTimeDays  &amp;<span class="comment">! Whole days to basis time from start of calendar</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  , BasisTimeSecs  &amp;<span class="comment">! Seconds in day at basis time</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  , CurrentYear    &amp;<span class="comment">! Year at current time in model run</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  , Month          &amp;<span class="comment">! Month at current time in model run</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  , Day2           &amp;<span class="comment">! Day at current time in model run</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  , DayNumber      &amp;<span class="comment">! Day number at current time in model run</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  , Hour           &amp;<span class="comment">! Hour at current time in model run</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  , Minute         &amp;<span class="comment">! Minute at current time in model run</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  , Second          <span class="comment">! Second at current time in model run</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordtype">INTEGER</span> ::       &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    RecLen         &amp;<span class="comment">! File record length</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  , isec           &amp;<span class="comment">! Second at current time in model run</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  , Forecastime    &amp;<span class="comment">! Forecast time in `hundred&#39; hours</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  , DumpSize        <span class="comment">! Size of dump containing diagnostics required for output</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                    <span class="comment">! to file</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> ::   &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    HdrOffset = 11*12      <span class="comment">! Offset for heading at start of each output line,</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                           <span class="comment">! containing site, date, time, etc.</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordtype">INTEGER</span> ::              &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    datestamp             &amp;<span class="comment">! Date stamp for netcdf output file</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  , localstamp             <span class="comment">! Local time stampfor netcdf output file</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordtype">CHARACTER(LEN=200)</span> ::       &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    fmt605                &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  , fmt620                &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  , fmt650</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordtype">CHARACTER (LEN=100)</span> ::  &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    fmt                   &amp;<span class="comment">! Hold format specifiers</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  , fmt2                   <span class="comment">!</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordtype">CHARACTER (LEN=3)</span> ::    &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    clsname                <span class="comment">! Holds the short-name length as string</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="comment">! Character function that incorporates the substep number into</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="comment">! the short name of a diagnostic. Somewhat longer than a normal</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="comment">! short name.</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordtype">CHARACTER (LEN=lsname+10)</span> :: add_substep_to_sname,short_name</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="comment">! Dr Hook</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="comment">!==============================</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span> :: zhook_handle</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;DUMP_STREAMS&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="comment">! Reset no. of calls to SCMoutput (this should be done at the</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="comment">! end of every timestep since it acts as the number of calls</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="comment">! to SCMoutput within the current timestep)</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  scmop%nSCMoutput = 0</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="comment">! Loop over the streams</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keywordflow">DO</span> m=1, <a class="code" href="namespacescmoptype__defn.xhtml#a3f60f9478a654738d44df0e07cdb3d96" title="The maximum no. of streams must be such that Stream(maxnstreams+1) gives an integer which is not too ...">maxnstreams</a></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="comment">! If this stream is not switched on then skip to the next</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">IF</span> (scmop%strm(m)%switch == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      cycle</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment">! If there are no diagnostics in this stream then skip to</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="comment">! the next</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">IF</span> (scmop%strm(m)%n_output &lt;= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      cycle</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="comment">! If we are not at the end of the dumping period of this stream</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">! (or, in the case of FSSI-format streams, it&#39;s not the first</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">! timestep) then skip to the next.</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    dump_step = scmop%strm(m)%dump_step</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">IF</span> (mod(<a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>(scmop)-1,dump_step)+1 /= dump_step                 &amp;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      .AND..NOT.                                                        &amp;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      (scmop%strm(m)%format == 2.AND.<a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>(scmop) == 1)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      cycle</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment">! The output unit for this stream</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    unit = scmop%strm(m)%op_unit</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="comment">! What we write to the unit depends on the stream format</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">! Formats 0 and 3: designed for reading by PV-wave routine scmread2.pro</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;     <span class="keywordflow">IF</span> (scmop%strm(m)%format == 0.OR.scmop%strm(m)%format == 3) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;       <span class="comment">! Write the day and time</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;       <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(I9,1PE18.10E3)&#39;</span>) day, <span class="keywordtype">REAL</span>(time)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;       <span class="comment">! Write the diagnostic data</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;       <span class="keywordflow">DO</span> n=1, scmop%nentries</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;         <span class="comment">! Is this entry to be sent to this stream, and</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;         <span class="comment">! not been flagged as one not to output?</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;         <span class="keywordflow">IF</span> (<a class="code" href="namespaces__scmop__mod.xhtml#a5bda18f0a188e3401cfc9addee6bc4e9">streamison</a>(scmop%streams(n),m).AND..NOT.                   &amp;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;             <a class="code" href="namespaces__scmop__mod.xhtml#a0aff366ad97d283dfca70868566ddaf1">notwritten</a>(scmop%streams(n))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;           <span class="comment">! Yes, write it.</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;           <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(5(1PE18.10E3,&quot;,&quot;))&#39;</span>)                            &amp;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                (scmop%diag(n)%dump(i),                                 &amp;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                i=1,scmop%nelements(n))</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordflow">       END DO</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;-<span class="comment">! Format=1 : designed for easy visual perusal.</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;-     <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (scmop%strm(m)%format == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;       <span class="comment">! Which dump is this?</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;       dump = <a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>(scmop)/scmop%strm(m)%dump_step</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;       <span class="comment">! Write the dump and step numbers</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;       <span class="keyword">WRITE</span>(unit,*) <span class="stringliteral">&#39;Dump= &#39;</span>, dump, <span class="stringliteral">&#39; ; Timestep=&#39;</span>, <a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>(scmop)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;       <span class="comment">! Write the day and time</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;       <span class="keyword">WRITE</span>(unit,*) <span class="stringliteral">&#39;Day= &#39;</span>, day, <span class="stringliteral">&#39;; Time= &#39;</span>, time</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;       <span class="comment">! We will keep tabs on the number of lines we&#39;ve</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;       <span class="comment">! written in this dump</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;       nlines = 0</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;       <span class="comment">! Write the diagnostic data</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;       <span class="keywordflow">DO</span> n=1, scmop%nentries</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;         <span class="comment">! Is this entry to be written to this stream&#39;s output file?</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;         <span class="keywordflow">IF</span> (<a class="code" href="namespaces__scmop__mod.xhtml#a5bda18f0a188e3401cfc9addee6bc4e9">streamison</a>(scmop%streams(n),m).AND..NOT.                   &amp;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;             <a class="code" href="namespaces__scmop__mod.xhtml#a0aff366ad97d283dfca70868566ddaf1">notwritten</a>(scmop%streams(n))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;           <span class="comment">! Yes.</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;           <span class="comment">! Get the number of columns, rows and levels</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;           <span class="comment">! this diagnostic is defined on</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;           ncols = scmop%ncols(n)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;           nrows = scmop%nrows(n)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;           nlevs = scmop%nlevs(n)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;           <span class="comment">! Ensure that the sub-step is appended to the short</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;           <span class="comment">! name of each diagnostic entry, if required.</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;           n64 = n</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">! DEPENDS ON: add_substep_to_sname</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;           short_name = add_substep_to_sname(scmop,n64)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;           <span class="comment">! Create a format to get all the numbers</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;           <span class="comment">! corresponding to one point on one line</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;           <span class="comment">! (i.e. all levels on one line)</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;           <span class="keyword">WRITE</span>(fmt ,<span class="stringliteral">&#39;(A,I3,A)&#39;</span>) <span class="stringliteral">&#39;(I3,1X,A,&#39;</span>,                          &amp;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                 nlevs, <span class="stringliteral">&#39;(1PE18.10E3,&quot;,&quot;))&#39;</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;           <span class="keyword">WRITE</span>(clsname,<span class="stringliteral">&#39;(I3)&#39;</span>)<a class="code" href="namespacescmoptype__defn.xhtml#aa0025fececb179f45806f37e250349df">lsname</a>-6</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;           <span class="keyword">WRITE</span>(fmt2,<span class="stringliteral">&#39;(A,A,A,I3,A)&#39;</span>)                                   &amp;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                <span class="stringliteral">&#39;(&#39;</span>,clsname,<span class="stringliteral">&#39;X,A,I4,A,&#39;</span>,model_levels,                   &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                <span class="stringliteral">&#39;(&quot; Level=&quot;,I3,8X,&quot; &quot;))&#39;</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;           <span class="keywordflow">DO</span> i=1, ncols</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;             <span class="keywordflow">DO</span> j=1, nrows</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;               <span class="keywordflow">IF</span> (mod(nlines,15) == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                 <span class="keyword">WRITE</span>(unit,fmt2)<span class="stringliteral">&#39;Dump=&#39;</span>,dump,<span class="stringliteral">&#39;:&#39;</span>,                      &amp;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                      (k,k=1,model_levels)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keywordflow">               END IF</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;               nlines = nlines+1</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;               <span class="keyword">WRITE</span>(unit,fmt)scmop%sname_id(n),                        &amp;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                     short_name,(scmop%diag(n)%dump                     &amp;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                     ((k-1)*nrows*ncols+(j-1)*ncols+i),                 &amp;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                     k=1,nlevs)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keywordflow">             END DO</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordflow">           END DO</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keywordflow">       END DO</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;-<span class="comment">! Format=2 : format required for FSSI database</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;-     <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (scmop%strm(m)%format == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;       <span class="comment">! Calculate times and dates required for output</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;       elapseddays = dayno_init + scmop%daycount-1                      &amp;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;             + int((timeinit + steptime) / 86400 )</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;       elapsedsecs = mod(timeinit + steptime, int(86400,<a class="code" href="namespacescmoptype__defn.xhtml#a06b3f0cf7b5a58f3e0b994d16e9406de" title="Short-hands for integer64, real64 and logical64. ">i64</a>))</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;       <span class="comment">! Calculate Model Basis Time (i.e. begining of current year)</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;       <span class="comment">! relative to calender zero</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">! DEPENDS ON: time2sec</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;       <span class="keyword">CALL </span>time2sec                                                    &amp;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;         ( year, 1, 0, 0, 0, 0, 0, 0, basistimedays, basistimesecs      &amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;         , lcal360 )</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="comment">! Calculate full date at current time in model integration</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">! DEPENDS ON: sec2time</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;       <span class="keyword">CALL </span><a class="code" href="sec2time_8f90.xhtml#ac74065211f64970d62c9e83164972f15" title="LL Routine: SEC2TIM0 !&gt;LL. ">sec2time</a>                                                    &amp;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;         ( elapseddays, elapsedsecs, basistimedays, basistimesecs       &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;         , currentyear, month, day2, hour, minute, second               &amp;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;         , daynumber, lcal360 )</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;       <span class="keywordflow">IF</span> (scmop%stepcount == 1 .AND. scmop%daycount == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;         isec = 0</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">       END IF</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;       <span class="comment">! Calculate forecast time in `hundred&#39; hours</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;       forecastime = ((scmop%daycount-1)*24+int(steptime/3600))*100     &amp;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;             +mod(int(steptime/60.0),60)</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;       <span class="comment">! If this is the first timestep then make a list of the</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;       <span class="comment">! diagnostics for output to this stream, diags(1:ndiags),</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;       <span class="comment">! together with the total size of one dump for one site,</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;       <span class="comment">! DumpSize. Save this info in the structure fssi_dump(m)</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;       <span class="comment">! so we don&#39;t have to re-calculate it next time.</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;       <span class="keywordflow">IF</span> (<a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>(scmop) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;         ndiags   = 0</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;         dumpsize = 0</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;         <span class="keyword">ALLOCATE</span>(diags(scmop%nentries))</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;         <span class="comment">! Unless heed_acceptlist=2 and the acceptlist has</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;         <span class="comment">! non-zero size then output all diagnostics in the same</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;         <span class="comment">! order as the calls to SCMoutput.</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;         <span class="keywordflow">IF</span> (scmop%strm(m)%heed_hardwired /= 0.OR.                      &amp;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;             scmop%strm(m)%heed_acceptlist == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;           <span class="keywordflow">DO</span> n=1, scmop%nentries</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;             <span class="comment">! Is this entry to be written to this stream&#39;s output file?</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;             <span class="keywordflow">IF</span> (<a class="code" href="namespaces__scmop__mod.xhtml#a5bda18f0a188e3401cfc9addee6bc4e9">streamison</a>(scmop%streams(n),m).AND..NOT.               &amp;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                 <a class="code" href="namespaces__scmop__mod.xhtml#a0aff366ad97d283dfca70868566ddaf1">notwritten</a>(scmop%streams(n))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;               <span class="comment">! Yes.</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;               ndiags = ndiags+1</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;               diags(ndiags) = n</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;               <span class="comment">! This diagnostic will contribute a number of</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;               <span class="comment">! elements to the dump for one site equal to</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;               <span class="comment">! the number of levels it&#39;s defined on.</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;               dumpsize = dumpsize+scmop%nlevs(n)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="keywordflow">             END IF</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="keywordflow">           END DO</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;         <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;           <span class="comment">! Output only those diagnostics specified by the</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;           <span class="comment">! accept_list and do it in the order given in the</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;           <span class="comment">! accept_list.</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;           <span class="keywordflow">DO</span> i=1, <span class="keyword">SIZE</span>(scmop%strm(m)%accept_list)</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;             <span class="keywordflow">DO</span> n=1, scmop%nentries</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;               <span class="comment">! Does the entry have the right short name?</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;               <span class="keywordflow">IF</span> (trim(scmop%sname(n)) ==                              &amp;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                   trim(scmop%strm(m)%accept_list(i))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                 <span class="comment">! Is this entry to be written to this</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                 <span class="comment">! stream&#39;s output file?</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                 <span class="keywordflow">IF</span> (<a class="code" href="namespaces__scmop__mod.xhtml#a5bda18f0a188e3401cfc9addee6bc4e9">streamison</a>(scmop%streams(n),m).AND..NOT. &amp;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                     <a class="code" href="namespaces__scmop__mod.xhtml#a0aff366ad97d283dfca70868566ddaf1">notwritten</a>(scmop%streams(n))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                   <span class="comment">! Yes.</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                   ndiags = ndiags+1</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                   diags(ndiags) = n</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                   <span class="comment">! This diagnostic will contribute a</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                   <span class="comment">! number of elements to the dump for</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                   <span class="comment">! one site equal to the number of levels</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                   <span class="comment">! it&#39;s defined on.</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                   dumpsize = dumpsize+scmop%nlevs(n)</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordflow">                 END IF</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keywordflow">               END IF</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keywordflow">             END DO</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keywordflow">           END DO</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="keywordflow">         END IF</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="comment">! Store ndiags, diags(1:ndiags) and DumpSize in</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="comment">! fssi_dump(m) so we don&#39;t have to execute this section</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        <span class="comment">! of code again.</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        fssi_dump(m)%ndiags = ndiags</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <span class="keyword">ALLOCATE</span>(fssi_dump(m)%diags(ndiags))</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        fssi_dump(m)%diags = diags(1:ndiags)</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        fssi_dump(m)%dumpsize = dumpsize</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="keyword">DEALLOCATE</span>(diags)</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="keywordflow">      END IF</span>               <span class="comment">! if (stepnmbr(SCMop) == 1)</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;      <span class="comment">! Format statements for output</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;      fmt605=                                                           &amp;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;         <span class="stringliteral">&#39;(2a12,2(i2.2,&#39;</span><span class="stringliteral">&#39;/&#39;</span><span class="stringliteral">&#39;),i4.4,1x,&#39;</span>//                               &amp;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;         <span class="stringliteral">&#39;i2.2,&#39;</span><span class="stringliteral">&#39;:&#39;</span><span class="stringliteral">&#39;,i2.2,&#39;</span><span class="stringliteral">&#39;.&#39;</span><span class="stringliteral">&#39;,i2.2,&#39;</span><span class="stringliteral">&#39; Diags&#39;</span><span class="stringliteral">&#39;,i4,&#39;</span><span class="stringliteral">&#39; RL&#39;</span><span class="stringliteral">&#39;,i8)&#39;</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;      <span class="keyword">WRITE</span>(fmt620,                                                     &amp;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;         fmt=<span class="stringliteral">&#39;(&quot;(2x,&#39;</span><span class="stringliteral">&#39;Namelist&#39;</span><span class="stringliteral">&#39;,7x,&#39;</span><span class="stringliteral">&#39;Day&#39;</span><span class="stringliteral">&#39;,8x,&#39;</span><span class="stringliteral">&#39;Month&#39;</span><span class="stringliteral">&#39;,&quot;&#39;</span>//           &amp;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;             <span class="stringliteral">&#39;&quot;7x,&#39;</span><span class="stringliteral">&#39;Year&#39;</span><span class="stringliteral">&#39;,8x,&#39;</span><span class="stringliteral">&#39;Hour&#39;</span><span class="stringliteral">&#39;,&quot;&#39;</span>                  //           &amp;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;             <span class="stringliteral">&#39;&quot;7x,&#39;</span><span class="stringliteral">&#39;Minute&#39;</span><span class="stringliteral">&#39;,6x,&#39;</span><span class="stringliteral">&#39;Second&#39;</span><span class="stringliteral">&#39;,9x,&#39;</span><span class="stringliteral">&#39;FT&#39;</span><span class="stringliteral">&#39;,8x,&#39;</span>  //           &amp;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;             <span class="stringliteral">&#39;&#39;</span><span class="stringliteral">&#39;Site&#39;</span><span class="stringliteral">&#39;,7x,&#39;</span><span class="stringliteral">&#39;Lat&#39;</span><span class="stringliteral">&#39;,8x,&#39;</span><span class="stringliteral">&#39;Long&#39;</span><span class="stringliteral">&#39;,4x,&quot;,&#39;</span>       //           &amp;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;             <span class="stringliteral">&#39;I4,&quot;(5x,i3,&#39;</span><span class="stringliteral">&#39;:&#39;</span><span class="stringliteral">&#39;,i3))&quot;)&#39;</span>) fssi_dump(m)%dumpsize</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;      <span class="keyword">WRITE</span>(fmt650,                                                     &amp;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;         fmt=<span class="stringliteral">&#39;(&quot;(a12,8(i12),2F12.5,&quot;,I4.4,&quot;(g12.5))&quot;)&#39;</span>)                 &amp;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;         fssi_dump(m)%dumpsize</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;      <span class="comment">! Write output to file, one line for each site at each</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;      <span class="comment">! time, all diagnostics (single and multiple level) on</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;      <span class="comment">! the same line</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;      <span class="keywordflow">DO</span> i=1, row_length</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        <span class="keywordflow">DO</span> j=1, rows</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;          <span class="comment">! Perform initialisation of the file if this is the</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;          <span class="comment">! first (i,j) cycle on the first timestep</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;          <span class="keywordflow">IF</span> (scmop%stepcount == 1.AND.scmop%daycount == 1              &amp;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;             .AND.i == 1.AND.j == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            reclen = fssi_dump(m)%dumpsize*12 + hdroffset</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            <span class="keyword">OPEN</span>(unit=unit,recl=reclen,access=<span class="stringliteral">&#39;Sequential&#39;</span>,             &amp;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                 <a class="code" href="parlbcs_8h.xhtml#a9bdcf7736b544227cbd66a99e5332d4d">file</a>=scmop%strm(m)%filename)</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            <span class="comment">! Write out initial headings for outputs to file</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            <span class="comment">! (a dummy string is substituted for DiagRefFile at</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            <span class="comment">! this stage)</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            <span class="keyword">WRITE</span>(unit,fmt=fmt605)<span class="stringliteral">&#39;SSM         &#39;</span>,                       &amp;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                 <span class="stringliteral">&#39;XXXXXXXXXXXX&#39;</span>,day2,month,currentyear,                 &amp;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                 hour,minute,isec,scmop%strm(m)%n_output,reclen</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            <span class="keyword">WRITE</span>(unit,fmt=fmt620)                                      &amp;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                 ((scmop%sname_id(fssi_dump(m)%diags(l)),k,             &amp;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                 k=1,scmop%nlevs(fssi_dump(m)%diags(l))),               &amp;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                 l=1,fssi_dump(m)%ndiags)</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;          <span class="comment">! Write out diagnostics data to file</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;          <span class="comment">! (a dummy string is substituted for DiagRefFile at</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;          <span class="comment">! this stage).</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;          <span class="keyword">WRITE</span>(unit,fmt=fmt650)<span class="stringliteral">&#39;XXXXXXXXXXXX&#39;</span>,day2,month,              &amp;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;               currentyear,hour,minute,second,forecastime,              &amp;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;               site(i,j),lat(i,j),lon(i,j),                             &amp;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;          <span class="comment">! What follows is a little bit complicated: two</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;          <span class="comment">! nested implied do-loops. The inner index is k,</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;          <span class="comment">! representing vertical level, and the outer is l,</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;          <span class="comment">! representing a given output diagnostic. For a given</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;          <span class="comment">! k and l, what is written out is the element of the</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;          <span class="comment">! dump array of lth output diagnostic corresponding</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;          <span class="comment">! to point(i,j) and level k. Get it?</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;               (                                                        &amp;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                (                                                       &amp;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                 scmop%diag(fssi_dump(m)%diags(l))%dump                 &amp;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                  (                                                     &amp;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                   (k-1)*scmop%nrows(fssi_dump(m)%diags(l))*            &amp;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                    scmop%ncols(fssi_dump(m)%diags(l)) +                &amp;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                   (j-1)*scmop%ncols(fssi_dump(m)%diags(l))+i           &amp;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                  ),                                                    &amp;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                 k=1,scmop%nlevs(fssi_dump(m)%diags(l))                 &amp;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                ),                                                      &amp;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                l=1,fssi_dump(m)%ndiags                                 &amp;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;               )</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="keywordflow">        END DO</span>            <span class="comment">! j=1,rows</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="keywordflow">      END DO</span>               <span class="comment">! i=1,row_length</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;-<span class="comment">! Format=4 : NetCDF</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;-    <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (scmop%strm(m)%format == 4) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;      <span class="comment">! Which dump is this?</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;      dump = <a class="code" href="namespaces__scmop__mod.xhtml#aed5d8df9d253718e6f8ed9b708bdd0da">stepnmbr</a>(scmop)/scmop%strm(m)%dump_step</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;      datestamp = time_info(1)*10000  &amp;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        + time_info(2)*100            &amp;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        + time_info(3)</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;      localstamp = time_info(4)*10000 &amp;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        + time_info(5)*100            &amp;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        + time_info(6)</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      <span class="comment">! Write out time variable</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;      status = nf90_put_var                           &amp;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        ( ncid   = int(scmop%strm(m)%op_unit, <a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)  &amp;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        , varid  = scm_nc_time_id                     &amp;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        , start  = (/int(dump, <a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)/)               &amp;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        , count  = (/int(1,<a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)/)                   &amp;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        , values = (/scm_timestep_count*scm_timestep/))</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;      <span class="comment">! Write out date variable</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;      status = nf90_put_var                           &amp;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        ( ncid   = int(scmop%strm(m)%op_unit, <a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)  &amp;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        , varid  = scm_nc_date_id                     &amp;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        , start  = (/int(dump, <a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)/)               &amp;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        , count  = (/int(1,<a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)/)                   &amp;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        , values = (/int(datestamp, <a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)/)          )</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;      <span class="comment">! Write out hour variable</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;      status = nf90_put_var                           &amp;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        ( ncid   = int(scmop%strm(m)%op_unit, <a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)  &amp;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        , varid  = scm_nc_hour_id                     &amp;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        , start  = (/int(dump, <a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)/)               &amp;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        , count  = (/int(1,<a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)/)                   &amp;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        , values = (/float(time_info(4))/)            )</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;      <span class="comment">! Write out local time variable</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;      status = nf90_put_var                           &amp;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        ( ncid   = int(scmop%strm(m)%op_unit, <a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)  &amp;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        , varid  = scm_nc_local_id                    &amp;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        , start  = (/int(dump, <a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)/)               &amp;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        , count  = (/int(1,<a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)/)                   &amp;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        , values = (/int(localstamp, <a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)/)         )</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;      <span class="comment">! Write out each diagnostic</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;      <span class="keywordflow">DO</span> n=1,scmop%nentries</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        <span class="comment">! Is this entry to be sent to this stream, and</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        <span class="comment">! not been flagged as one not to output?</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespaces__scmop__mod.xhtml#a5bda18f0a188e3401cfc9addee6bc4e9">streamison</a>(scmop%streams(n),m).AND..NOT.                    &amp;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;            <a class="code" href="namespaces__scmop__mod.xhtml#a0aff366ad97d283dfca70868566ddaf1">notwritten</a>(scmop%streams(n))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;          <span class="comment">! Yes. Get the proper shape of the variable (at the</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;          <span class="comment">! moment it&#39;s being held as a 1D array).</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;          varshape = int((/scmop%ncols(n),                              &amp;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                           scmop%nrows(n),                              &amp;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                           scmop%nlevs(n),                              &amp;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                           int(1,<a class="code" href="namespacescmoptype__defn.xhtml#a06b3f0cf7b5a58f3e0b994d16e9406de" title="Short-hands for integer64, real64 and logical64. ">i64</a>)/),<a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>)</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;          status = nf90_put_var(                                        &amp;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            ncid   = int(scmop%strm(m)%op_unit,<a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>),                  &amp;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            varid  = scmop%netcdf_id(n),                                &amp;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            start  = int((/1,1,1,dump/),<a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>),                         &amp;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            count  = varshape,                                          &amp;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            values = reshape(scmop%diag(n)%dump,varshape))</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Dump_Streams ERROR: unknown format for stream &#39;</span>, m</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams&#39;</span>)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="keywordflow">    END IF</span>                  <span class="comment">! if (SCMop%strm(m) == ...)</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="keywordflow">  END DO</span> <span class="comment">! M=1,maxnstreams</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;DUMP_STREAMS&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="dump__streams_8f90.xhtml#aa14d02cdb7cff2b75805e57780016090" title="Write SCM diagnostic data to output files. ">dump_streams</a></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
