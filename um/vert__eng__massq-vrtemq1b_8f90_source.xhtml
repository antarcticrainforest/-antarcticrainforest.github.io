<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/energy_correction/vert_eng_massq-vrtemq1b.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_4bee3f75e8027d928591d7191edf0c2b.xhtml">energy_correction</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">vert_eng_massq-vrtemq1b.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="vert__eng__massq-vrtemq1b_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="namespacevert__eng__massq__mod.xhtml">   17</a></span>&#160;      <span class="keyword">MODULE</span> <a class="code" href="namespacevert__eng__massq__mod.xhtml" title="SUBROUTINE VERT_ENG_MASSQ. ">vert_eng_massq_mod</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      <span class="keyword">CONTAINS</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="namespacevert__eng__massq__mod.xhtml#a39301569611a709994d2aae7a457d3e1">vert_eng_massq</a>(                                        &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                            wet_model_levels,theta ,u,v,w, rho_r2, q,   &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                            qcl,qcf,                                    &amp;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                            wet_to_dry_n,                               &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                            exner_theta_levels,                         &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                            Lqflux,                                     &amp;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;!&gt; output fields</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                            rho_dry,dry_to_wet,                         &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                            vert_int_array,vert_qflux)</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="namespacevert__eng__massq__mod.xhtml#a39301569611a709994d2aae7a457d3e1">   29</a></span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacedynamics__grid__mod.xhtml" title="Input control for dynamics. Input control for dynamics. ">dynamics_grid_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">, ONLY</span>: udims, vdims, wdims, tdims,      &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                                       pdims, udims_s, vdims_s, tdims_s,&amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                       pdims_s, wdims_s, qdims_l,       &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                                       qdims_s</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;               <span class="keywordtype">USE </span><a class="code" href="namespacelevel__heights__mod.xhtml" title="Constants necessary for model level heights in advection and other schemes. Constants necessary for m...">level_heights_mod</a><span class="keywordtype">,     ONLY</span>: <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>, <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>                   use <a class="code" href="namespaceswapable__field__mod.xhtml" title="This file belongs in section: MPP. ">swapable_field_mod</a>,    only: swapable_field_pointer_type</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">,   ONLY</span>: g, earth_radius</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">,   ONLY</span>: r, cp</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,               ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,              ONLY</span>: jprb, jpim</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacefield__types.xhtml">field_types</a><span class="keywordtype">,           ONLY</span>: <a class="code" href="namespacefield__types.xhtml#a13e0d833cb4dd8abd04a2c5556387dd2">fld_type_u</a>,<a class="code" href="namespacefield__types.xhtml#a02025ece9ce67b25311f692d0c4540ac">fld_type_v</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceeng__mass__param__mod.xhtml" title="This file belongs in section: Energy Correction. ">eng_mass_param_mod</a><span class="keywordtype">,    ONLY</span>: <a class="code" href="namespaceeng__mass__param__mod.xhtml#a169abc4766885e62d808abb4587179a8">ip_dry_mass</a>, <a class="code" href="namespaceeng__mass__param__mod.xhtml#a23a608d4fee94b6ea3f1880e8cbccdcd">ip_wet_mass</a>, <a class="code" href="namespaceeng__mass__param__mod.xhtml#a557ae3383f5513842a36aa7d532a4c13">ip_cvt</a>,&amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                       <a class="code" href="namespaceeng__mass__param__mod.xhtml#ab02d0e13c17dcdcfa9b996d3286cf461">ip_gr</a>,       <a class="code" href="namespaceeng__mass__param__mod.xhtml#a23f9d6ab6140531adc44d1d991c0ff74">ip_keu</a>,      <a class="code" href="namespaceeng__mass__param__mod.xhtml#ac8aec266af89679df64aaf890773f847">ip_kev</a>,&amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                       <a class="code" href="namespaceeng__mass__param__mod.xhtml#ab9637866ec8553a471c82ed3bae22e11">ip_kew</a>,      <a class="code" href="namespaceeng__mass__param__mod.xhtml#a8bb60d0a379ba90781cf3162f4969486">ip_q</a>,        <a class="code" href="namespaceeng__mass__param__mod.xhtml#a86754f72b787f274dbaea5e8fc2046bc">ip_qcl</a>,&amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                       <a class="code" href="namespaceeng__mass__param__mod.xhtml#af6f3e16de289b8892910135c9e3ca2ed">ip_qcf</a>,      <a class="code" href="namespaceeng__mass__param__mod.xhtml#a9491a6be26c39e5505ce769accd2c410">ip_qu</a>,       <a class="code" href="namespaceeng__mass__param__mod.xhtml#ae1017ad37bc248602342b1ad802cb21a">ip_qv</a>, &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                       <a class="code" href="namespaceeng__mass__param__mod.xhtml#ab1920b55dcc55b76d0168fe3e42673fa">ip_qw</a>,       <a class="code" href="namespaceeng__mass__param__mod.xhtml#a3673059e322f046241d5b39424b31b07">n_sums</a>,      <a class="code" href="namespaceeng__mass__param__mod.xhtml#a4d91e38843307a48e232e62b8e0b5379">n_flux</a></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceproc__info__mod.xhtml" title="Processor parallel properties and pointers. Processor parallel properties and pointers. ">proc_info_mod</a><span class="keywordtype">,         ONLY</span>: <a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>,<a class="code" href="namespaceproc__info__mod.xhtml#a9d5aa0d84f9ab4d047647a65804a8650">model_domain</a>,       &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                       proc_row_group=&gt;                 &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                          <a class="code" href="namespaceproc__info__mod.xhtml#ac52ee313412f2bbd0e66a56738c4a775">gc_proc_row_group</a>,            &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                       <a class="code" href="namespaceproc__info__mod.xhtml#af1e18f698ecadfe158d7852c2e161834">global_row_length</a></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacetrignometric__mod.xhtml" title="Constants necessary for Coriolis terms in advection scheme. Constants necessary for Coriolis terms in...">trignometric_mod</a><span class="keywordtype">,      ONLY</span> : <a class="code" href="namespacetrignometric__mod.xhtml#a565df059154bacb783d466016f551879">cos_theta_longitude</a>,            &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                        <a class="code" href="namespacetrignometric__mod.xhtml#a1900988e9b6a5b36d6a0652ad8784518">sin_theta_longitude</a></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceum__parparams.xhtml" title="This file belongs in section: MPP. ">um_parparams</a><span class="keywordtype">,          ONLY</span> : <a class="code" href="namespaceum__parparams.xhtml#a055cccbf23dd97e54f86b7be2fbfccb3">psouth</a>, <a class="code" href="namespaceum__parparams.xhtml#a575a86c6ed199d617f169b0bbd20ec88">pnorth</a></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceu__to__p__mod.xhtml" title="subroutine U_TO_p for calculating variables held at u points subroutine U_TO_p for calculating variab...">u_to_p_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceu__to__p__mod.xhtml#abec25da0a0e72ae2bd1efd5a110125fb">u_to_p</a></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacev__to__p__mod.xhtml" title="subroutine V_TO_P for calculating variables held at v points subroutine V_TO_P for calculating variab...">v_to_p_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacev__to__p__mod.xhtml#a071d83a5fb4aa87adbf487a6218a3037">v_to_p</a></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;-<span class="comment">! INPUT variables</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;-</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                               &amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        theta(tdims_s%i_start:tdims_s%i_end,                            &amp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;              tdims_s%j_start:tdims_s%j_end,                            &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;              tdims_s%k_start:tdims_s%k_end)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                                   <span class="keywordtype">REAL</span>, <span class="keywordtype">target</span> ::                                                   &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            U(udims_s%i_start:udims_s%i_end,                            &amp;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;              udims_s%j_start:udims_s%j_end,                            &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;              udims_s%k_start:udims_s%k_end),                           &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                                           V(vdims_s%i_start:vdims_s%i_end,                            &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;              vdims_s%j_start:vdims_s%j_end,                            &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;              vdims_s%k_start:vdims_s%k_end)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                                                     <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                               &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            w(wdims_s%i_start:wdims_s%i_end,                            &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;              wdims_s%j_start:wdims_s%j_end,                            &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;              wdims_s%k_start:wdims_s%k_end),                           &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            q(qdims_l%i_start:qdims_l%i_end,                            &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;              qdims_l%j_start:qdims_l%j_end,                            &amp;              qdims_l%k_start:qdims_l%k_end),                           &amp;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;          qcl(qdims_l%i_start:qdims_l%i_end,                            &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;              qdims_l%j_start:qdims_l%j_end,                            &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;              qdims_l%k_start:qdims_l%k_end),                           &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;          qcf(qdims_l%i_start:qdims_l%i_end,                            &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;              qdims_l%j_start:qdims_l%j_end,                            &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;              qdims_l%k_start:qdims_l%k_end),                           &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; wet_to_dry_n(tdims_s%i_start:tdims_s%i_end,                            &amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;              tdims_s%j_start:tdims_s%j_end,                            &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;              tdims_s%k_start:tdims_s%k_end),                           &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        exner_theta_levels(tdims_s%i_start:tdims_s%i_end,               &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;              tdims_s%j_start:tdims_s%j_end,                            &amp;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;              tdims_s%k_start:tdims_s%k_end),                           &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;       rho_r2(pdims_s%i_start:pdims_s%i_end,                            &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;              pdims_s%j_start:pdims_s%j_end,                            &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;              pdims_s%k_start:pdims_s%k_end)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT (IN)</span> ::                                           &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        lqflux            <span class="comment">! true if q flux calculations required.</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">!   Vertical integrals plus info on rho_dry</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span>  ::                                           &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        vert_int_array(pdims%i_start:pdims%i_end,                       &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                       pdims%j_start:pdims%j_end,n_sums),               &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                              <span class="comment">! vertical integrals</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        vert_qflux(pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                       pdims%j_start:pdims%j_end,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a4d91e38843307a48e232e62b8e0b5379">n_flux</a>),               &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                              <span class="comment">! q flux integrals</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        rho_dry(pdims%i_start:pdims%i_end,                              &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                pdims%j_start:pdims%j_end,pdims%k_start:pdims%k_end),   &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                                <span class="comment">! rho dry x r^2</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        dry_to_wet(pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                   pdims%j_start:pdims%j_end,                           &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                   pdims%k_start:pdims%k_end)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;-<span class="comment">! local variables</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;-<span class="comment">! pointers for sum_array</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keywordtype">REAL</span> :: weight1, weight2, weight3,                                &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;              tempd, tempw, ww2, ww1,                                   &amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;              cv                        <span class="comment">! specific heat at constant vol</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="keywordtype">REAL</span> ::                                                           &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        rho(       pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                   pdims%j_start:pdims%j_end,                           &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                   pdims%k_start:pdims%k_end),                          &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                                <span class="comment">! rho only</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        delr_rho(  pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                   pdims%j_start:pdims%j_end,                           &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                   pdims%k_start:pdims%k_end),                          &amp;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                                                <span class="comment">! dr</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        t(         pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                   pdims%j_start:pdims%j_end,                           &amp;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                   pdims%k_start:pdims%k_end),                          &amp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                                                <span class="comment">! TEMPERATURE</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        rho_theta( pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                   pdims%j_start:pdims%j_end,                           &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                   pdims%k_start:pdims%k_end),                          &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                                 <span class="comment">! not used</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;             t_rho(pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                   pdims%j_start:pdims%j_end,                           &amp;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                   pdims%k_start:pdims%k_end),                          &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;             u_rho(pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                   pdims%j_start:pdims%j_end,                           &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                   pdims%k_start:pdims%k_end),                          &amp;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;             v_rho(pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                   pdims%j_start:pdims%j_end,                           &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                   pdims%k_start:pdims%k_end),                          &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;             w_rho(pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                   pdims%j_start:pdims%j_end,                           &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                   pdims%k_start:pdims%k_end),                          &amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;             q_rho(pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                   pdims%j_start:pdims%j_end,                           &amp;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                   pdims%k_start:pdims%k_end),                          &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;           qcl_rho(pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                   pdims%j_start:pdims%j_end,                           &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                   pdims%k_start:pdims%k_end),                          &amp;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;           qcf_rho(pdims%i_start:pdims%i_end,                           &amp;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                   pdims%j_start:pdims%j_end,                           &amp;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                   pdims%k_start:pdims%k_end)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="keywordtype">REAL</span> ::                                                           &amp;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        mag_vector_np(pdims%k_end),                                     &amp;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                                     <span class="comment">! magnitude of the vector wind NP</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        dir_vector_np(pdims%k_end),                                     &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                                     <span class="comment">! direction of the vector wind NP</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        mag_vector_sp(pdims%k_end),                                     &amp;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                                     <span class="comment">! magnitude of the vector wind SP</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        dir_vector_sp(pdims%k_end)   <span class="comment">! direction of the vector wind SP</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="keywordtype">INTEGER</span> :: i, j, k, n             <span class="comment">! LOOP COUNTER</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      <span class="keywordtype">INTEGER</span> :: i_field                <span class="comment">! counter for swapbounds</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="keywordtype">TYPE</span>(swapable_field_pointer_type) :: fields_to_swap(2)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      <span class="keywordtype">INTEGER</span> :: wet_model_levels</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;VERT_ENG_MASSQ&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      cv=cp-r       <span class="comment">! value for dry air</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;-<span class="comment">! zero output arrays</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;-      <span class="keywordflow">DO</span> n=1,n_sums         <span class="comment">! energy integrals</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="keywordflow">DO</span> j=pdims%j_start,pdims%j_end</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;          <span class="keywordflow">DO</span> i=pdims%i_start,pdims%i_end</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            vert_int_array(i,j,n) = 0.0</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <span class="keywordflow">IF</span> (lqflux) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">DO</span> n=1,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a4d91e38843307a48e232e62b8e0b5379">n_flux</a>          <span class="comment">! q flux integrals</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;          <span class="keywordflow">DO</span> j=pdims%j_start,pdims%j_end</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keywordflow">DO</span> i=pdims%i_start,pdims%i_end</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;              vert_qflux(i,j,n) = 0.0</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;-<span class="comment">! First convert theta to temperature</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;-      <span class="keywordflow">DO</span> k = pdims%k_start,pdims%k_end</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">DO</span> j = pdims%j_start,pdims%j_end</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;          <span class="keywordflow">DO</span> i = pdims%i_start,pdims%i_end</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            t(i,j,k) = theta(i,j,k) * exner_theta_levels(i,j,k)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;-<span class="comment">! CALCULATE layer thickness for rho layers and calculate rho</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;-      <span class="keywordflow">DO</span> k=pdims%k_start,pdims%k_end</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">DO</span> j =pdims%j_start,pdims%j_end</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;          <span class="keywordflow">DO</span> i=pdims%i_start,pdims%i_end</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            delr_rho(i,j,k) = <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) -                   &amp;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;     &amp;                        <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k-1)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            rho(i,j,k) = rho_r2(i,j,k)/                                 &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;     &amp;           (<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k)*<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k))</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;-<span class="comment">! Convert rho to rho dry in the same way as done in dynamics - Flux_rho</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">! Note now uses linear vertical intepolation to be consistent with</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">! new dynamics code at UM 5.1.</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">! Now using the wet_to_dry_n array from atm_step. Doing this ensures</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">! consistency with dynamics conversions and means the code is also correct</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">! if more moist prognostics e.g. rain and graupel are added.</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;-</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      <span class="keywordflow">DO</span> k = pdims%k_start,pdims%k_end</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keywordflow">DO</span> j = pdims%j_start,pdims%j_end</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;          <span class="keywordflow">DO</span> i = pdims%i_start,pdims%i_end</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            dry_to_wet(i,j,k)= 1./wet_to_dry_n(i,j,k)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            rho_dry(i,j,k) = rho_r2(i,j,k) * wet_to_dry_n(i,j,k)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;-<span class="comment">! Intepolate T, w &amp; q to rho points</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">! Note needs to remain consistent with intepolation used in dynamics.</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">! Using linear interpolation</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">!                      K               for rho</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">!      K                          K-1  for theta</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">!      X&lt; w1-&gt;X&lt;-- w2&gt;X</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">!       &lt;-w3&gt;</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;-      k=1</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      <span class="keywordflow">DO</span> j = pdims%j_start,pdims%j_end</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">DO</span> i=pdims%i_start,pdims%i_end</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">! assume bottom rho level value equal to bottom theta level value</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;          q_rho(i,j,k)   = q(i,j,k)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;          qcl_rho(i,j,k) = qcl(i,j,k)</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;          qcf_rho(i,j,k) = qcf(i,j,k)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;          t_rho(i,j,k)   = t(i,j,k)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">! only w has a value at surface</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;          weight1 = <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) - <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;          weight2 = <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k) - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k-1)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;          weight3 = <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k-1)</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;          ww1 = weight1/weight3</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;          ww2 = weight2/weight3</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;          w_rho(i,j, k) =  ww2 * w(i,j,k)  + ww1 * w(i,j,k-1)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;      <span class="keywordflow">DO</span> k=2,wet_model_levels</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordflow">DO</span> j = pdims%j_start,pdims%j_end</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;          <span class="keywordflow">DO</span> i = pdims%i_start,pdims%i_end</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            weight1 = <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) - <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            weight2 = <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k) - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k-1)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            weight3 = <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k-1)</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            ww1 = weight1/weight3</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            ww2 = weight2/weight3</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            t_rho(i,j, k) = ww2 * t(i,j,k) + ww1 * t(i,j,k-1)</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            w_rho(i,j, k) = ww2 * w(i,j,k) + ww1 * w(i,j,k-1)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            q_rho(i,j, k)  = ww2 * q(i,j,k)   + ww1 * q(i,j,k-1)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            qcl_rho(i,j, k) = ww2 * qcl(i,j,k) + ww1 * qcl(i,j,k-1)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            qcf_rho(i,j, k) = ww2 * qcf(i,j,k) + ww1 * qcf(i,j,k-1)</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">! Special case of wet_model_levels &lt; model_levels</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">! wet to dry conversions imply q_rho has a value on wet_model_levels+1</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">! Assume also true for qcl and qcf ?</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;      <span class="keywordflow">IF</span> (wet_model_levels &lt; pdims%k_end) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        k=wet_model_levels+1</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="keywordflow">DO</span> j = pdims%j_start,pdims%j_end</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;          <span class="keywordflow">DO</span> i = pdims%i_start,pdims%i_end</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            weight1 = <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) - <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            weight3 = <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k-1)</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            ww1 = weight1/weight3</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            q_rho(i,j, k)  = ww1 * q(i,j,k-1)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            qcl_rho(i,j, k) = ww1 * qcl(i,j,k-1)</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            qcf_rho(i,j, k) = ww1 * qcf(i,j,k-1)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">! Any dry levels at top of model</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;      <span class="keywordflow">DO</span> k=wet_model_levels+1,pdims%k_end</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keywordflow">DO</span> j = pdims%j_start,pdims%j_end</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;          <span class="keywordflow">DO</span> i = pdims%i_start,pdims%i_end</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            weight1 = <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) - <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k)</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            weight2 = <a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k) - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k-1)</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            weight3 = <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k) - <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>(i,j,k-1)</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            ww1 = weight1/weight3</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            ww2 = weight2/weight3</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            t_rho(i,j, k) = ww2 * t(i,j,k) + ww1 * t(i,j,k-1)</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            w_rho(i,j, k) = ww2 * w(i,j,k) + ww1 * w(i,j,k-1)</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;-<span class="comment">! Interpolate winds to rho points (already on same vertical level)</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;-<span class="comment">! Need to call swap bounds as halo points not set</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;      i_field = 0</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;      i_field = i_field + 1</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;      fields_to_swap(i_field) % field      =&gt; u(:,:,:)</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;      fields_to_swap(i_field) % field_type = <a class="code" href="namespacefield__types.xhtml#a13e0d833cb4dd8abd04a2c5556387dd2">fld_type_u</a></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;      fields_to_swap(i_field) % levels     = udims%k_end</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;      fields_to_swap(i_field) % rows       = udims%j_end-udims%j_start+1</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      fields_to_swap(i_field) % vector     = .true.</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;      i_field = i_field + 1</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;      fields_to_swap(i_field) % field      =&gt; v(:,:,:)</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;      fields_to_swap(i_field) % field_type = <a class="code" href="namespacefield__types.xhtml#a02025ece9ce67b25311f692d0c4540ac">fld_type_v</a></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;      fields_to_swap(i_field) % levels     = vdims%k_end</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;      fields_to_swap(i_field) % rows       = vdims%j_end-vdims%j_start+1</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;      fields_to_swap(i_field) % vector     = .true.</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">! DEPENDS ON: swap_bounds_mv</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;      <span class="keyword">CALL </span><a class="code" href="swap__bounds__mv-2c_8f90.xhtml#a7ec706a27cea514039111eeb3f669540" title="Direct MPI version of swap_bounds to deal with multiple variables. ">swap_bounds_mv</a>(fields_to_swap, i_field,                      &amp;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                          udims%i_end-udims%i_start+1,                  &amp;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                          udims_s%halo_i,udims_s%halo_j)</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespacev__to__p__mod.xhtml#a071d83a5fb4aa87adbf487a6218a3037">v_to_p</a>(v,                                                    &amp;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                        vdims_s%i_start,vdims_s%i_end,                  &amp;                        vdims_s%j_start,vdims_s%j_end,                  &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                        pdims%i_start,pdims%i_end,                      &amp;                        pdims%j_start,pdims%j_end,                      &amp;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                        pdims%k_end,                                    &amp;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                        <a class="code" href="namespaceproc__info__mod.xhtml#a9d5aa0d84f9ab4d047647a65804a8650">model_domain</a>,<a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>,v_rho)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceu__to__p__mod.xhtml#abec25da0a0e72ae2bd1efd5a110125fb">u_to_p</a>(u,                                                    &amp;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                        udims_s%i_start,udims_s%i_end,                  &amp;                        udims_s%j_start,udims_s%j_end,                  &amp;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                        pdims%i_start,pdims%i_end,                      &amp;                        pdims%j_start,pdims%j_end,                      &amp;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                        pdims%k_end,                                    &amp;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                        <a class="code" href="namespaceproc__info__mod.xhtml#a9d5aa0d84f9ab4d047647a65804a8650">model_domain</a>,<a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>,u_rho)</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">! Problem of u &amp; v values at poles</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">! Uses v on row next to poles to calculate wind at the polar point</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacedynamics__grid__mod.xhtml#a036d3b3153977d2911df89624e310dc2">l_vatpoles</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespaceproc__info__mod.xhtml#a9d5aa0d84f9ab4d047647a65804a8650">model_domain</a>  ==  1 ) <span class="keywordflow">THEN</span>    <span class="comment">! global model</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">! DEPENDS ON: polar_vector_wind_n</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;          <span class="keyword">Call </span><a class="code" href="polar__vector__wind__n_8f90.xhtml#ab3d6e08d4d489ae42dd07f5c50859b9f" title="Subroutine Polar_Vector_Wind. ">polar_vector_wind_n</a>                                      &amp;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                            (v,                                         &amp;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                             <a class="code" href="namespacetrignometric__mod.xhtml#a1900988e9b6a5b36d6a0652ad8784518">sin_theta_longitude</a>,<a class="code" href="namespacetrignometric__mod.xhtml#a565df059154bacb783d466016f551879">cos_theta_longitude</a>,   &amp;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                             vdims%i_end-vdims%i_start+1,               &amp;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                             vdims%j_end-vdims%j_start+1, pdims%k_end,  &amp;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                             mag_vector_np,dir_vector_np,               &amp;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                             mag_vector_sp,dir_vector_sp,               &amp;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                             vdims_s%halo_i, vdims_s%halo_j,            &amp;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                             <a class="code" href="namespaceproc__info__mod.xhtml#af1e18f698ecadfe158d7852c2e161834">global_row_length</a>,                         &amp;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                             proc_row_group, <a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>(<a class="code" href="namespaceum__parparams.xhtml#a055cccbf23dd97e54f86b7be2fbfccb3">psouth</a>) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            <span class="keywordflow">DO</span> k = pdims%k_start,pdims%k_end</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;              <span class="keywordflow">DO</span> i = pdims%i_start,pdims%i_end</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                u_rho(i,pdims%j_start,k) = 0.0</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                v_rho(i,pdims%j_start,k) = mag_vector_sp(k)</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="keywordflow">              END DO</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;         <span class="keywordflow">IF</span> (<a class="code" href="namespaceproc__info__mod.xhtml#af8fbfe91dc7dd13b88a16f74b7e95a71" title="Parameters needed by processors to use parallel gcom routines in l2 norm calculations and other calcu...">at_extremity</a>(<a class="code" href="namespaceum__parparams.xhtml#a575a86c6ed199d617f169b0bbd20ec88">pnorth</a>) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keywordflow">DO</span> k = pdims%k_start,pdims%k_end</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;              <span class="keywordflow">DO</span> i = pdims%i_start,pdims%i_end</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                u_rho(i,pdims%j_end,k) = 0.0</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                v_rho(i,pdims%j_end,k) = mag_vector_np(k)</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="keywordflow">              END DO</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="keywordflow">        END IF</span>              <span class="comment">! end test on global model</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! vatpoles</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;-<span class="comment">! Integrals over fields using values interpolated to rho grid</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment">! At present all integrals done after interpolation to rho points.</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">! Integrals for energy involve using dry mass. This may need to be</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">! altered.</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;-<span class="comment">! (a) fields on all model levels</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;      <span class="keywordflow">DO</span> k = pdims%k_start,pdims%k_end</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="keywordflow">DO</span> j = pdims%j_start,pdims%j_end</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;          <span class="keywordflow">DO</span> i = pdims%i_start,pdims%i_end</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            tempw = rho_r2(i,j,k)*delr_rho(i,j,k)   <span class="comment">! wet mass</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            tempd = rho_dry(i,j,k)*delr_rho(i,j,k)  <span class="comment">! dry mass</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="comment">! dry mass</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a169abc4766885e62d808abb4587179a8">ip_dry_mass</a>) =                           &amp;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                          vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a169abc4766885e62d808abb4587179a8">ip_dry_mass</a>) + tempd</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">! total mass wet + dry</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a23a608d4fee94b6ea3f1880e8cbccdcd">ip_wet_mass</a>) =                           &amp;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                          vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a23a608d4fee94b6ea3f1880e8cbccdcd">ip_wet_mass</a>) + tempw</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">! gr term</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ab02d0e13c17dcdcfa9b996d3286cf461">ip_gr</a>) = vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ab02d0e13c17dcdcfa9b996d3286cf461">ip_gr</a>) +     &amp;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;               g*(<a class="code" href="namespacelevel__heights__mod.xhtml#ab8e97e687e5779eef705ae90cbad6419">r_rho_levels</a>(i,j,k)-earth_radius)*tempd</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">! KE terms for u, v &amp; w</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a23f9d6ab6140531adc44d1d991c0ff74">ip_keu</a>) = vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a23f9d6ab6140531adc44d1d991c0ff74">ip_keu</a>) +   &amp;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                       0.5*u_rho(i,j,k)*u_rho(i,j,k)*tempd</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ac8aec266af89679df64aaf890773f847">ip_kev</a>) = vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ac8aec266af89679df64aaf890773f847">ip_kev</a>) +   &amp;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                       0.5*v_rho(i,j,k)*v_rho(i,j,k)*tempd</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ab9637866ec8553a471c82ed3bae22e11">ip_kew</a>) = vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ab9637866ec8553a471c82ed3bae22e11">ip_kew</a>) +   &amp;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                       0.5*w_rho(i,j,k)*w_rho(i,j,k)*tempd</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment">! cvT term</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a557ae3383f5513842a36aa7d532a4c13">ip_cvt</a>) = vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a557ae3383f5513842a36aa7d532a4c13">ip_cvt</a>) +   &amp;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                                  cv*t_rho(i,j,k)*tempd</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;      <span class="keywordflow">DO</span> k=pdims%k_start,wet_model_levels</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <span class="keywordflow">DO</span> j = pdims%j_start,pdims%j_end</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;          <span class="keywordflow">DO</span> i = pdims%i_start,pdims%i_end</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            tempw = rho_r2(i,j,k)*delr_rho(i,j,k)  <span class="comment">! wet mass</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">! q*rho</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a8bb60d0a379ba90781cf3162f4969486">ip_q</a>) = vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a8bb60d0a379ba90781cf3162f4969486">ip_q</a>) +       &amp;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                                            q_rho(i,j,k)*tempw</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="comment">! qcl*rho</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a86754f72b787f274dbaea5e8fc2046bc">ip_qcl</a>) = vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a86754f72b787f274dbaea5e8fc2046bc">ip_qcl</a>) +   &amp;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                                            qcl_rho(i,j,k)*tempw</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment">! qcf*rho</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#af6f3e16de289b8892910135c9e3ca2ed">ip_qcf</a>) = vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#af6f3e16de289b8892910135c9e3ca2ed">ip_qcf</a>) +   &amp;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                                            qcf_rho(i,j,k)*tempw</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">! Special case of wet_model_levels &lt; model_levels</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      <span class="keywordflow">IF</span> (wet_model_levels &lt; pdims%k_end) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        k=wet_model_levels+1</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        <span class="keywordflow">DO</span> j = pdims%j_start,pdims%j_end</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;          <span class="keywordflow">DO</span> i = pdims%i_start,pdims%i_end</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;            tempw = rho_r2(i,j,k)*delr_rho(i,j,k)  <span class="comment">! wet mass</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a8bb60d0a379ba90781cf3162f4969486">ip_q</a>) = vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a8bb60d0a379ba90781cf3162f4969486">ip_q</a>) +       &amp;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                                            q_rho(i,j,k)*tempw</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;            vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a86754f72b787f274dbaea5e8fc2046bc">ip_qcl</a>) = vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a86754f72b787f274dbaea5e8fc2046bc">ip_qcl</a>) +   &amp;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                                            qcl_rho(i,j,k)*tempw</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#af6f3e16de289b8892910135c9e3ca2ed">ip_qcf</a>) = vert_int_array(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#af6f3e16de289b8892910135c9e3ca2ed">ip_qcf</a>) +   &amp;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                                            qcf_rho(i,j,k)*tempw</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="keywordflow">      END IF</span>   <span class="comment">!         wet_model_levels &lt; model_levels</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;-<span class="comment">! Additional q flux integrals not required by energy correction</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="comment">! At present all integrals done after interpolation to rho points.</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;-</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;      <span class="keywordflow">IF</span> (lqflux) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        <span class="keywordflow">DO</span> k = pdims%k_start,wet_model_levels</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;          <span class="keywordflow">DO</span> j = pdims%j_start,pdims%j_end</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            <span class="keywordflow">DO</span> i = pdims%i_start,pdims%i_end</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;              tempw = rho_r2(i,j,k)*delr_rho(i,j,k)</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;              vert_qflux(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a9491a6be26c39e5505ce769accd2c410">ip_qu</a>) = vert_qflux(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a9491a6be26c39e5505ce769accd2c410">ip_qu</a>) +           &amp;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                                     u_rho(i,j,k)*q_rho(i,j,k)*tempw</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;              vert_qflux(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ae1017ad37bc248602342b1ad802cb21a">ip_qv</a>) = vert_qflux(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ae1017ad37bc248602342b1ad802cb21a">ip_qv</a>) +           &amp;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                                     v_rho(i,j,k)*q_rho(i,j,k)*tempw</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;              vert_qflux(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ab1920b55dcc55b76d0168fe3e42673fa">ip_qw</a>) = vert_qflux(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ab1920b55dcc55b76d0168fe3e42673fa">ip_qw</a>) +           &amp;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                                     w_rho(i,j,k)*q_rho(i,j,k)*tempw</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="comment">! Special case of wet_model_levels &lt; model_levels</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        <span class="keywordflow">IF</span> (wet_model_levels &lt; pdims%k_end) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;          k=wet_model_levels+1</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;          <span class="keywordflow">DO</span> j = pdims%j_start,pdims%j_end</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;            <span class="keywordflow">DO</span> i = pdims%i_start,pdims%i_end</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;              vert_qflux(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a9491a6be26c39e5505ce769accd2c410">ip_qu</a>) = vert_qflux(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#a9491a6be26c39e5505ce769accd2c410">ip_qu</a>) +           &amp;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                                     u_rho(i,j,k)*q_rho(i,j,k)*tempw</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;              vert_qflux(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ae1017ad37bc248602342b1ad802cb21a">ip_qv</a>) = vert_qflux(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ae1017ad37bc248602342b1ad802cb21a">ip_qv</a>) +           &amp;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                                     v_rho(i,j,k)*q_rho(i,j,k)*tempw</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;              vert_qflux(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ab1920b55dcc55b76d0168fe3e42673fa">ip_qw</a>) = vert_qflux(i,j,<a class="code" href="namespaceeng__mass__param__mod.xhtml#ab1920b55dcc55b76d0168fe3e42673fa">ip_qw</a>) +           &amp;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                                     w_rho(i,j,k)*q_rho(i,j,k)*tempw</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="keywordflow">        END IF</span>  <span class="comment">!           wet_model_levels &lt; model_levels</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;-</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;VERT_ENG_MASSQ&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="namespacevert__eng__massq__mod.xhtml#a39301569611a709994d2aae7a457d3e1">vert_eng_massq</a></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="keyword">      END MODULE</span></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
