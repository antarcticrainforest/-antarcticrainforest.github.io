<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/large_scale_preciptation/lsp_capture.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_e9ad03cb5a25088942c5c2b981810778.xhtml">large_scale_preciptation</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">lsp_capture.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="lsp__capture_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno"><a class="line" href="namespacelsp__capture__mod.xhtml">    4</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacelsp__capture__mod.xhtml" title="Large-scale precipitation scheme. Capture of raindrops by ice Large-scale precipitation scheme...">lsp_capture_mod</a></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacelsp__capture__mod.xhtml#ac37645cf8cc425bd15b93a70df5e4ca5">lsp_capture</a>(                                                 &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  points, timestep,                                                     &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                                          ! Number of points and tstep</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  qcf, qrain, qgraup, t,                                                &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;                                          ! Water contents and temp</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  area_liq, area_mix, area_ice,                                         &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  cficei,                                                               &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                                          ! Cloud fraction information</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                                          ! at start of microphysics ts</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  rainfrac, rain_liq, rain_mix,                                         &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                                          ! Rain fraction information</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  rain_ice, rain_clear,                                                 &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;!&gt; cf, cff                                 !&gt; Current cloud fractions for</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;!&gt;                                         !&gt; updating</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  rho, rhor, m0, tcg, tcgi,                                             &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                                          ! Parametrization information</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  corr, dhilsiterr,                                                     &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  lfrcp , ice_type,                                                     &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                                          ! Microphysical information</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  l_psd,                                                                &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                                          ! Code options</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  ptransfer,                                                            &amp;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                                          ! Mass transfer diagnostic</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  one_over_tsi,                                                         &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                          ! 1/(timestep*iterations)</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  rftransfer,                                                           &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                          <span class="comment">! Rain fraction transfer</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  l_use_agg_vt                                                          &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                                          <span class="comment">! Fallspeed branch choice</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  )</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="namespacelsp__capture__mod.xhtml#ac37645cf8cc425bd15b93a70df5e4ca5">   41</a></span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="comment">! General modules</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordtype">USE </span>conversions_mod<span class="keywordtype">,      ONLY</span>: zerodegc</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="comment">! Microphysics modules</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemphys__constants__mod.xhtml">mphys_constants_mod</a><span class="keywordtype">,  ONLY</span>: <a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>, <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>, <a class="code" href="namespacemphys__constants__mod.xhtml#af914d6ab84b58ab800bab4e2e61845fd">ice_type_offset</a></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacemphys__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">mphys_inputs_mod</a><span class="keywordtype">,     ONLY</span>: <a class="code" href="namespacemphys__inputs__mod.xhtml#a8a0e33ee4b9133e8e8204f85ee911d27" title="Use Abel &amp; Shipway rain fall speeds. ">l_rainfall_as</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#a81d07387c2c99ef8ae6605fb1f4a71cf" title="Allow snow-rain collisions to produce graupel. ">l_sr2graup</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>,        &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                  <a class="code" href="namespacemphys__inputs__mod.xhtml#ad580b93fb6223c38181f3f05d1b82c62">l_mcr_qrain</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#a3d970e6ae2e572f69c0d3cea5b5247ce">l_mcr_qgraup</a>,            &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                  <a class="code" href="namespacemphys__inputs__mod.xhtml#aea3e0bc5d046f886642a9900eec11e5b">l_diff_icevt</a></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="comment">! Dr Hook modules</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">USE </span>yomhook<span class="keywordtype">,              ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordtype">USE </span>parkind1<span class="keywordtype">,             ONLY</span>: jprb, jpim</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="comment">! Large scale precipitation modules</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacelsp__moments__mod.xhtml" title="Large-scale precipitation scheme. Conversion between moments of PSD Large-scale precipitation scheme...">lsp_moments_mod</a><span class="keywordtype">,      ONLY</span>: <a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">! Description of Code:</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    points,                                                             &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                          <span class="comment">! Number of points to calculate</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    ice_type          <span class="comment">! Type of ice (0 - crystals, 1 - aggregates</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                          <span class="comment">!              3 - graupel)</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                   &amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    timestep,                                                           &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                          <span class="comment">! Timestep / s</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    area_liq(points),                                                   &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                          <span class="comment">! Fraction of gridbox with liquid-only cloud</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    area_mix(points),                                                   &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                          <span class="comment">! Fraction of gridbox with mixed phase cloud</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    area_ice(points),                                                   &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                          <span class="comment">! Fraction of gridbox with ice-only cloud</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    cficei(points),                                                     &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                          <span class="comment">! 1/Fraction of gridbox with ice cloud</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    rho(points),                                                        &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                          <span class="comment">! Air density / kg m-3</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    rhor(points),                                                       &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                          <span class="comment">! 1/Air density / m3 kg-1</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    m0,                                                                 &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                          <span class="comment">! Seed ice water content / kg kg-1</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    tcg(points),                                                        &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                          <span class="comment">! T dependent function in ice size dist&#39;n</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    tcgi(points),                                                       &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                          <span class="comment">! 1/tcg (no units)</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    corr(points),                                                       &amp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                          <span class="comment">! Fall velocity correction factor (no units)</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    dhilsiterr(points),                                                 &amp;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                          <span class="comment">! Depth of layer / timestep  / m s-1</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    lfrcp,                                                              &amp;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                          <span class="comment">! Latent heat of fusion</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                          <span class="comment">! / heat capacity of air / K</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    one_over_tsi          <span class="comment">! 1/(timestep*iterations)</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(INOUT)</span> ::                                                &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    qcf(points),                                                        &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                          <span class="comment">! Ice water content    / kg kg-1</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    qrain(points),                                                      &amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                          <span class="comment">! Rain mixing ratio / kg kg-1</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    qgraup(points),                                                     &amp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                          <span class="comment">! Graupel mixing ration / kg kg-1          t(points),                                                          &amp;</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                          <span class="comment">! Temperature / K</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    rainfrac(points),                                                   &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                          <span class="comment">! Rain fraction</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    rain_liq(points),                                                   &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                          <span class="comment">! Overlap fraction of rain and liquid</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    rain_mix(points),                                                   &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                          <span class="comment">! Overlap frac of rain with mixed phase cloud</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    rain_ice(points),                                                   &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                          <span class="comment">! Overlap fraction of rain and ice</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    rain_clear(points),                                                 &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                          <span class="comment">! Overlap fraction of rain and clear-sky</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    ptransfer(points),                                                  &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                          <span class="comment">! Mass rimed in this timestep / kg kg-1</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    rftransfer(points)<span class="comment">! Transfer of rain fraction this timestep</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">!    &amp;, cftransfer(points) ! Cumulative cloud fraction increment</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">!    &amp;, cfftransfer(points)! Cumulative ice cloud fraction increment</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                                &amp;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    l_psd,                                                              &amp;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                          <span class="comment">! Use generic ice particle size distribution</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    l_use_agg_vt(points)                                                                         <span class="comment">! Determines which vt-D parameters to use</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">! Local Variables</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordtype">INTEGER</span> ::                                                            &amp;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    i,                                                                  &amp;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                          <span class="comment">! Loop counter for points</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    cry_offset        <span class="comment">! Index offset for ice crystals</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordtype">REAL</span> ::                                                               &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    dpr(points),                                                        &amp;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                          <span class="comment">! Transfer of mixing ratio  / kg kg-1</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    vr1(points),                                                        &amp;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                          <span class="comment">! Average fall speed of raindrops  / m s-1</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    vi1(points),                                                        &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                          <span class="comment">! Average fall speed of ice particles  / m s-1</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    fv1(points),                                                        &amp;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                          <span class="comment">! Average fall speed difference between</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                          <span class="comment">! ice particles and raindrops  / m s-1</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    lamr1(points),                                                      &amp;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                          <span class="comment">! Reciprocal of slope parameter in raindrop</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                          <span class="comment">! size distribution  / m</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    lami1(points),                                                      &amp;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                          <span class="comment">! Reciprocal of slope parameter in ice</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                          <span class="comment">! particle size distribution  / m</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    lam4,                                                               &amp;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                          <span class="comment">! 4.0 * lamr1</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    m_bi_rat,                                                           &amp;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                          <span class="comment">! Ratio of moments m_bi_1 and m_bi</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    lamfac1(points),                                                    &amp;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                          <span class="comment">! Combination of lamr1 and lamr2</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    rf_final(points),                                                   &amp;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                          <span class="comment">! Rain fraction at end of the timestep</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    m_0(points), m_1(points), m_2(points),                              &amp;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                          <span class="comment">! Moments of the ice particle size distributn.</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    m_bi(points), m_bi_1(points),                                       &amp;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                          <span class="comment">! bi and bi+1 moment of the generic ice psd.</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    m_bi_di(points),                                                    &amp;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                          <span class="comment">! bi+di moment of the generic ice size distn</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    m_bic_dic(points)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                          <span class="comment">! bic+dic moment of the generic ice size distn</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: it_cry = 0 <span class="comment">! defines ice_type to be crystals</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  <span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span>    :: gr_thr = 1.0e-4                          <span class="comment">! threshold for converting rain water to                          ! graupel</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                                     <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;           <span class="comment">! Select appropriate ice parametrization (see c_lspsiz)</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;     </div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LSP_CAPTURE&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  cry_offset = ice_type * <a class="code" href="namespacemphys__constants__mod.xhtml#af914d6ab84b58ab800bab4e2e61845fd">ice_type_offset</a></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;           <span class="comment">! Calculate moments of size distribution if appropriate</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;       <span class="keywordflow">IF</span> (l_psd) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="comment">! Calculate the 0th, 1st, 2nd and bi+di (cx(82)) moments of the</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="comment">! ice particle size distribution</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a>(points,rho,t,qcf,cficei,0.0,m_0)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a>(points,rho,t,qcf,cficei,1.0,m_1)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a>(points,rho,t,qcf,cficei,2.0,m_2)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a>(points,rho,t,qcf,cficei,<a class="code" href="namespacemphys__inputs__mod.xhtml#ae40ccb46ec68c4dfd30ee0e4d48a98d9">bi</a>,m_bi)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a>(points,rho,t,qcf,cficei,<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(83),m_bi_1)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacemphys__inputs__mod.xhtml#aea3e0bc5d046f886642a9900eec11e5b">l_diff_icevt</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="comment">! Only one set of vt-D parameters</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;       <span class="keyword">CALL </span><a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a>(points,rho,t,qcf,cficei,<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(82),m_bi_di)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      <span class="comment">! The vt-D relation which gives the</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;      <span class="comment">! least mass weighted mean fallspeed will be used so</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      <span class="comment">! calculate both required moments</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;       <span class="keyword">CALL </span><a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a>(points,rho,t,qcf,cficei,<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(182),m_bic_dic)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                           <span class="comment">! psd moment with crystal parameters</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;       <span class="keyword">CALL </span><a class="code" href="namespacelsp__moments__mod.xhtml#aeea10ef071bd5df607f21c64085651b1">lsp_moments</a>(points,rho,t,qcf,cficei,<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(82),m_bi_di)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                           <span class="comment">! psd moment with aggregate parameters</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <span class="keywordflow">DO</span> i = 1, points</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">IF</span> (qcf(i)  &gt;   m0 .AND. qrain(i)  &gt;   0.0                          &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        .AND. (rain_mix(i)+rain_ice(i))  &gt;   0.0                        &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        .AND. t(i)  &lt;   zerodegc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                   <span class="comment">! Calculate rain mass-weighted fallspeed</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;         <span class="comment">!          If (l_mcr_qrain) then</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">!            ! rain is a mixing ratio (kg kg-1)</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">!            vr1(i) = (constp(41)/6.0) * corr(i) *                       &amp;</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">!     &amp;             ( rho(i)*constp(50)*qrain(i)/rainfrac(i) )**cx(51)</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a8a0e33ee4b9133e8e8204f85ee911d27" title="Use Abel &amp; Shipway rain fall speeds. ">l_rainfall_as</a>) <span class="keywordflow">THEN</span> <span class="comment">! Include Abel &amp; Shipway terms.</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#ad580b93fb6223c38181f3f05d1b82c62">l_mcr_qrain</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;              <span class="comment">! rain is a mixing ratio (kg kg-1)</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;          lamr1(i) = (rho(i) * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(50) * qrain(i) / rainfrac(i))     &amp;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                   **(<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(52))</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;          vr1(i) = ((lamr1(i)**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(45))/(<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(53)*rainfrac(i))) *      &amp;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;           ( ( <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(54) / ((lamr1(i)+<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(56))**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(59))) +              &amp;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;             ( <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(55) / ((lamr1(i)+<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(57))**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(60))))</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;              <span class="comment">! rain is a flux (kg m-2 s-1)</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;          lamr1(i) = (qrain(i) * rho(i) * dhilsiterr(i)                 &amp;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                   /( rainfrac(i)*<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(42)*corr(i)) )**(<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(42))</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;          vr1(i) = ((lamr1(i)**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(45))/<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(53))   *                  &amp;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;           ( ( <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(54) / ((lamr1(i)+<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(56))**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(59))) +              &amp;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;              ( <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(55) / ((lamr1(i)+<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(57))**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(60))))</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">!l_mcr_qrain</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            <span class="comment">!Standard UM Rainfall parameters</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#ad580b93fb6223c38181f3f05d1b82c62">l_mcr_qrain</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;              <span class="comment">! rain is a mixing ratio (kg kg-1)</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;          vr1(i) = (<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(41)/6.0) * corr(i) *                         &amp;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                ( rho(i)*<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(50)*qrain(i)/rainfrac(i) )**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(51)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;              <span class="comment">! rain is a flux (kg m-2 s-1)</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;          vr1(i) = corr(i) * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(41)/6.0 *                           &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                   (qrain(i) * rho(i) * dhilsiterr(i)                   &amp;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                   /( rainfrac(i)*<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(42)*corr(i)) )**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(41)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keywordflow">        END IF</span>  <span class="comment">! l_mcr_qrain</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">!L_rainfall_as</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                   <span class="comment">! Calculate ice mass-weighted fallspeed</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;               <span class="keywordflow">IF</span> (l_psd) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            <span class="comment">! Use the generic PSD</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;         <span class="keywordflow">IF</span> (.NOT. <a class="code" href="namespacemphys__inputs__mod.xhtml#aea3e0bc5d046f886642a9900eec11e5b">l_diff_icevt</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <span class="comment">! Only one set of vt-D parameters</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="comment">! constp(82) = ci*ai</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            vi1(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(82) * corr(i) * m_bi_di(i)                  &amp;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                         / (rho(i) * qcf(i) * cficei(i))</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;           <span class="keywordflow">IF</span> (l_use_agg_vt(i)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;               <span class="comment">! Use aggregate parameters</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;              vi1(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(82) * corr(i) * m_bi_di(i)                &amp;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                         / (rho(i) * qcf(i) * cficei(i))</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;           <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;               <span class="comment">! Use crystal parameters</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;              vi1(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(182) * corr(i) * m_bic_dic(i)             &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                         / (rho(i) * qcf(i) * cficei(i))</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keywordflow">           END IF</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        vi1(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(4+cry_offset) * corr(i) *                       &amp;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;               (rho(i) * qcf(i) * cficei(i)                             &amp;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;               * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(5+cry_offset) * tcgi(i))**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(3+cry_offset)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! l_psd</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                   <span class="comment">! Estimate the mean absolute differences in velocities</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;               fv1(i) = max(abs(vr1(i)-vi1(i)),(vr1(i)+vi1(i))/8.0)</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                   <span class="comment">! Calculate reciprocal of lambda for rain</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;               <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#ad580b93fb6223c38181f3f05d1b82c62">l_mcr_qrain</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            <span class="comment">! rain is a mixing ratio (kg kg-1)</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        lamr1(i) = (rho(i) * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(50) * qrain(i) / rainfrac(i))       &amp;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                   **(<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(52))</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <span class="comment">! rain is a flux (kg m-2 s-1)</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        lamr1(i) = (qrain(i) * rho(i) * dhilsiterr(i)                   &amp;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                   /( rainfrac(i)*<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(42)*corr(i)) )**(<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(42))</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! l_mcr_qrain</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                   <span class="comment">! Calculate reciprocal of lambda for ice crystals</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;               <span class="keywordflow">IF</span> (.NOT. l_psd) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        lami1(i) = (rho(i) * qcf(i) * cficei(i)                         &amp;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;               *<a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(5+cry_offset)*tcgi(i))**(-<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(7+cry_offset))</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                    <span class="comment">! Calculate transfer</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                <span class="keywordflow">IF</span> (l_psd) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;            <span class="comment">! Use the generic ice particle size distribution</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            <span class="comment">! constp(86)=pi**2/24 x1r rho_water</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            <span class="comment">! constp(87)=gamma(6+x4r)</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            <span class="comment">! constp(88)=2 gamma(5+x4r)</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            <span class="comment">! constp(89)=gamma(4+x4r)</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        dpr(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(86) * fv1(i) *  timestep * rhor(i) *            &amp;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                (rain_mix(i)+rain_ice(i)) * lamr1(i)**(-<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(46)) *       &amp;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                (lamr1(i)**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(43) * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(87) * m_0(i) +               &amp;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                 lamr1(i)**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(44) * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(88) * m_1(i) +               &amp;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                 lamr1(i)**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(45) * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(89) * m_2(i) )</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        lamfac1(i) = <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(10+cry_offset) * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(43) *               &amp;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                 (lamr1(i)**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(43) * lami1(i)**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(8+cry_offset)) +      &amp;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                 <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(11+cry_offset) * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(44) *                   &amp;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                 (lamr1(i)**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(44) * lami1(i)**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(9+cry_offset)) +      &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                 <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(12+cry_offset) * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(45) *                   &amp;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                 (lamr1(i)**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(45) * lami1(i)**<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(10+cry_offset))</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        dpr(i) = tcg(i) * <a class="code" href="namespacemphys__constants__mod.xhtml#a588dde244e2b64675316b2312fcfd161">constp</a>(13+cry_offset) *                       &amp;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;               lami1(i)**(-<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(11+cry_offset)) *                         &amp;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;               lamr1(i)**(-<a class="code" href="namespacemphys__constants__mod.xhtml#a9caa865777164728ea15e4a534196ebd">cx</a>(46)) * fv1(i) * lamfac1(i) *              &amp;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;               timestep * rhor(i) * (rain_mix(i)+rain_ice(i))</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keywordflow">      END IF</span>  <span class="comment">! l_psd</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;          <span class="comment">! Limit transfer to the mass of rain that is available</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;      <span class="keywordflow">IF</span> (rain_liq(i) == 0.0 .AND. rain_clear(i) == 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <span class="comment">! All rain is through ice-only or mixed-phase cloud, so</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <span class="comment">! (rain_mix + rain_ice) / rainfrac must be 1.</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        dpr(i) = min(dpr(i),qrain(i))</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        dpr(i) = min(dpr(i),qrain(i) *                                  &amp;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                          (rain_mix(i)+rain_ice(i))/rainfrac(i))</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;      ptransfer(i) = ptransfer(i) + dpr(i) * one_over_tsi</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                    <span class="comment">! Adjust ice and rain contents</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                    <span class="keywordflow">IF</span> ( <a class="code" href="namespacemphys__inputs__mod.xhtml#a3d970e6ae2e572f69c0d3cea5b5247ce">l_mcr_qgraup</a> .AND. <a class="code" href="namespacemphys__inputs__mod.xhtml#a81d07387c2c99ef8ae6605fb1f4a71cf" title="Allow snow-rain collisions to produce graupel. ">l_sr2graup</a> ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;             <span class="comment">! Move contents to graupel rather than snow/ice</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;             <span class="keywordflow">IF</span> (l_psd) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;               <span class="comment">! With the generic ice PSD active, we examine the               ! mass-weighted mean diameters of the ice and rain.</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;               <span class="comment">! If the ice is bigger, we form snow. If the rain is</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;               <span class="comment">! bigger we form graupel.</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;               <span class="comment">! Calculate m_bi+1 / m_bi (mass-weighted diameter of ice)</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;               m_bi_rat = m_bi_1(i) / m_bi(i)</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;               <span class="comment">! Calculate 4 /lambda  (mass-weighted diameter of rain)</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;               <span class="comment">! As lamr1 = 1/lambda can just multiply this by 4:</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;               lam4 = 4.0 * lamr1(i)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;               <span class="keywordflow">IF</span> ( m_bi_rat &gt;= lam4 ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                 <span class="comment">! Snow m.m.d. bigger than rain</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                 <span class="comment">! Put transfer quantities as snow</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                 qcf(i) = qcf(i) + dpr(i)</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;               <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                 <span class="comment">! Rain m.m.d. bigger than snow</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                 <span class="comment">! Put transfer quantities as graupel</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                 qgraup(i) = qgraup(i) + dpr(i)</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="keywordflow">               END IF</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;             <span class="keywordflow">ELSE</span> <span class="comment">! l_psd</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;               <span class="comment">! Without the generic ice PSD, we have two rain</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;               <span class="comment">! categories. In this case, we will follow a</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;               <span class="comment">! similar method to the Met Office LEM, transferring</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;               <span class="comment">! crystals colliding with small rain amounts to               ! crystals and anything else to graupel.</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;               <span class="keywordflow">IF</span> ( ice_type == it_cry .AND. qrain(i) &lt; gr_thr ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                 <span class="comment">! For crystals capturing low amounts of liquid                 ! water we shall move the result of the capture                 ! process to snow.</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                 <span class="comment">! If qr &gt;= gr_thr (heavy rain) the quantities are                 ! assumed to freeze rapidly and produce graupel.</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                 qcf(i) = qcf(i) + dpr(i)  </div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;               <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                                <span class="comment">! The capture process is one of</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                 <span class="comment">! i  ) Crystals capturing large rain amounts or                 ! ii ) aggregates capturing any rain amount</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                 <span class="comment">! so we shall send the result of this capture process                 ! to graupel.</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                               qgraup(i) = qgraup(i) + dpr(i)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="keywordflow">               END IF</span> <span class="comment">! ice_type eq 0</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="keywordflow">             END IF</span> <span class="comment">! l_psd</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;           <span class="keywordflow">ELSE</span>    <span class="comment">! l_mcr_qgraup / l_sr2graup</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;             <span class="comment">! Graupel is not active, so move the amounts to</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;             <span class="comment">! the appropriate ice category.</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;             qcf(i) = qcf(i) + dpr(i)</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="keywordflow">           END IF</span>  <span class="comment">! l_mcr_qgraup / l_sr2graup</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;           <span class="comment">! Now remove the appropriate transfer amount</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;           <span class="comment">! from the rain category and adjust the           ! temperature</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;           qrain(i) = qrain(i) - dpr(i)</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;           t(i)     = t(i)     + dpr(i) * lfrcp</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                    <span class="comment">! Update cloud fractions</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;          <span class="comment">!         These are commented out since there is currently no</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">!         cloud fraction update associated with the capture term.</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">!          cf_transfer_rate(i)  = 0.0 / (timestep*iterations)</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">!          cff_transfer_rate(i) = 0.0 / (timestep*iterations)</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">!            cftransfer(i)  = cftransfer(i)  + cf_transfer_rate(i)</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment">!            cfftransfer(i) = cfftransfer(i) + cff_transfer_rate(i)</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">!            cf(i)  = cf(i)  +cf_transfer_rate(i) *timestep*iterations</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">!            cff(i) = cff(i) +cff_transfer_rate(i)*timestep*iterations</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                     <span class="comment">! Update rain fractions</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;          <span class="comment">!          These are commented out to ensure that rainfraction tends</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment">!          to a 0 or 1 behaviour as RHcrit tends to 1.</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">!           rf_final(i) = rainfrac(i) * qrain(i) / (qrain(i)+dpr(i))</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment">!           rftransfer(i) = rftransfer(i) + (rf_final(i) - rainfrac(i))</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">!             rainfrac(i)= rf_final(i)</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="comment">!             rain_liq(i)= min(area_liq(i),rainfrac(i))</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment">!             rain_mix(i)= min(area_mix(i),rainfrac(i)-rain_liq(i))</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment">!             rain_ice(i)=</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="comment">!     &amp;          min(area_ice(i),rainfrac(i)-rain_liq(i)-rain_mix(i))</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment">!             rain_clear(i)=</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="comment">!     &amp;            rainfrac(i) - rain_liq(i)-rain_mix(i)-rain_ice(i)</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="keywordflow">    END IF</span> <span class="comment">! qcf(i) &gt;  m0 etc.</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="keywordflow">  END DO</span>  <span class="comment">! Points</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;LSP_CAPTURE&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespacelsp__capture__mod.xhtml#ac37645cf8cc425bd15b93a70df5e4ca5">lsp_capture</a></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacelsp__capture__mod.xhtml" title="Large-scale precipitation scheme. Capture of raindrops by ice Large-scale precipitation scheme...">lsp_capture_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
