<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/scm/diagnostic/write_scumlist.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b97be95e70c2cb49b099ac39ba4801c2.xhtml">scm</a></li><li class="navelem"><a class="el" href="dir_f974de0797e0b116e79416c6884e1ea9.xhtml">diagnostic</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">write_scumlist.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="write__scumlist_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="write__scumlist_8f90.xhtml#a7e45949c38688006935a311e934997b2" title="Write out info about the output diagnostics for one or all streams. ">write_scumlist</a> (SCMop, istrm)</div><div class="line"><a name="l00006"></a><span class="lineno"><a class="line" href="write__scumlist_8f90.xhtml#a7e45949c38688006935a311e934997b2">    6</a></span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacescmoptype__defn.xhtml" title="Defines the derived-type, SCMop_type, necessary for declaring. ">scmoptype_defn</a></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaces__scmop__mod.xhtml">s_scmop_mod</a>,  &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;      only: <a class="code" href="namespaces__scmop__mod.xhtml#a5bda18f0a188e3401cfc9addee6bc4e9">streamison</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0aff366ad97d283dfca70868566ddaf1">notwritten</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a06d29093b2ebadf0a03401f9ec497377">anystreamon</a></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keywordtype">TYPE</span>(<a class="code" href="structscmoptype__defn_1_1scmop__type.xhtml">scmop_type</a>) :: &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    SCMop              <span class="comment">! In The derived-type structure containing</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                       <span class="comment">!    all the diagnostic information</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keywordtype">INTEGER</span> ::                    &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    istrm                       &amp;<span class="comment">! In The stream in question. Zero=all streams</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  , ndiags                      &amp;<span class="comment">! The number of diagnostic entries found in</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                 <span class="comment">! SCMop which we will write about.</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  , diags(scmop%nentries)       &amp;<span class="comment">! Contains in 1:niags the indices of the</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                                 <span class="comment">! entries in SCMop</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  , domprof_sparse(<a class="code" href="namespacescmoptype__defn.xhtml#aaea05138ea49054079bbb0a2ab43d326" title="Some limits. ">maxndomprof</a>)  <span class="comment">! A sparse array indicating the domain</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                                 <span class="comment">! profiles possessed by the ndiags entries.</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordtype">INTEGER</span> :: i,j    <span class="comment">! Counters</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="comment">! Character function that incorporates the substep number into</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="comment">! the short name of a diagnostic. Somewhat longer than a normal</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="comment">! short name.</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordtype">CHARACTER (LEN=lsname+10)</span> :: add_substep_to_sname,short_name</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="comment">! The longest possible sname after the substep has been appended</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keywordtype">INTEGER</span> :: sname_length</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordtype">INTEGER</span> :: unit <span class="comment">! The unit to which we&#39;ll write</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordtype">CHARACTER (LEN=100)</span> :: fmt</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">CHARACTER (LEN=lsname)</span> :: sname</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keywordtype">INTEGER</span> :: substep</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="comment">! Make a list the diagnostics we&#39;re going to write and</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="comment">! which domain profiles they use. ndiags will hold the total</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="comment">! number of diagnostic entries in SCMop fitting the bill, and</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="comment">! domprof_sparse will be a sparse array indicating which domain</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="comment">! profiles are used by these diagnostics.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  ndiags = 0</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  domprof_sparse = 0</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="comment">! If a specific stream has been specified...</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordflow">IF</span> (istrm /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">! ... select only those diagnostics going to that stream</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">DO</span> i=1, scmop%nentries</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaces__scmop__mod.xhtml#a5bda18f0a188e3401cfc9addee6bc4e9">streamison</a>(scmop%streams(i),istrm).AND..NOT.              &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <a class="code" href="namespaces__scmop__mod.xhtml#a0aff366ad97d283dfca70868566ddaf1">notwritten</a>(scmop%streams(i))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        ndiags = ndiags+1</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        diags(ndiags) = i</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        domprof_sparse(scmop%domprof(i)) = 1</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment">! Make a check just for the sake of it</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">IF</span> (ndiags /= scmop%strm(istrm)%n_output) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;dump_streams_init ERROR: an inconsistency &#39;</span>//         &amp;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;             <span class="stringliteral">&#39;has ocurred !&#39;</span>,ndiags,scmop%strm(istrm)%n_output,     &amp;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;             istrm,scmop%nentries</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;write_scumlist&#39;</span>)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="comment">! Switch the diagnostic system off so dodgy data is</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="comment">! not mistakenly used in good faith.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39; -&gt; switching diagnostic system off!&#39;</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;write_scumlist&#39;</span>)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      scmop%on = .false.</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="comment">! If strm=0 then use all diagnostics which are going to</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="comment">! at least one stream. But since the same diagnostic can</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="comment">! go to several streams, and thus have several entries in</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="comment">! SCMop, then make a condition that if the i&#39;th entry has</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="comment">! the same short name as the (i-1)&#39;th, then skip the i&#39;th</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="comment">! to avoid multiple identical lines. We -do- want multiple</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="comment">! lines for different sub-steps though, so allow identical</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="comment">! consecutive snames if their sub-step numbers are different.</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    sname = <span class="stringliteral">&#39;&#39;</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    substep = -999</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">DO</span> i=1, scmop%nentries</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordflow">IF</span> (<a class="code" href="namespaces__scmop__mod.xhtml#a06d29093b2ebadf0a03401f9ec497377">anystreamon</a>(scmop%streams(i)).AND.                        &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;           (scmop%sname(i) /= sname .OR.                            &amp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            scmop%substep(i) /= substep)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        ndiags = ndiags+1</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        diags(ndiags) = i</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        domprof_sparse(scmop%domprof(i)) = 1</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        sname = scmop%sname(i)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        substep = scmop%substep(i)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="comment">! Determine the unit number to write to</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordflow">IF</span> (istrm /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">! Write to the unit of the specified stream. The file</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment">! should already be open.</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    unit = scmop%strm(istrm)%op_unit</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="comment">! Write to a new file we&#39;ll attach to unit 10</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    unit = 10</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keyword">OPEN</span> (unit=unit,<a class="code" href="parlbcs_8h.xhtml#a9bdcf7736b544227cbd66a99e5332d4d">file</a>=<span class="stringliteral">&#39;scumlist.dat&#39;</span>)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;-<span class="comment">!     Write about the domain profiles</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;-</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="comment">! Write the number of domain profiles used by</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="comment">! diagnostics in this stream</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordflow">IF</span> (istrm == 0) <span class="keyword">WRITE</span>(unit,*)<span class="stringliteral">&#39;No. of domain profiles:&#39;</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                  <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(I3)&#39;</span>) <a class="code" href="sum_8f90.xhtml#a025c1f845b6a4ea9c9f48b8612cd82e7" title="Generic routines for manipulating pp-fields within Fieldcalc. ">sum</a>(domprof_sparse)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="comment">! Write the format with which we will write some of</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="comment">! the upcoming lines</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  fmt = <span class="stringliteral">&#39;(I3,1X,A15,I3,1X,I3,1X,I3,1X,I3,1X,I3,1X,I3)&#39;</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordflow">IF</span> (istrm == 0) <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(A)&#39;</span>)<span class="stringliteral">&#39;Line format:&#39;</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                  <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(A)&#39;</span>) trim(fmt)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="comment">! Write info about each domain profile</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordflow">IF</span> (istrm == 0) <span class="keyword">WRITE</span>(unit,*)<span class="stringliteral">&#39;List of domain profiles:&#39;</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordflow">DO</span> i=1, <a class="code" href="namespacescmoptype__defn.xhtml#aaea05138ea49054079bbb0a2ab43d326" title="Some limits. ">maxndomprof</a></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">IF</span> (domprof_sparse(i) == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      <span class="keyword">WRITE</span>(unit,fmt)                                          &amp;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        i,scmop%d_name(i),                                     &amp;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        scmop%d_rowa1(i),scmop%d_rowa2(i),                     &amp;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        scmop%d_rowb1(i),scmop%d_rowb2(i),                     &amp;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        scmop%d_lev1(i),scmop%d_lev2(i)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;-<span class="comment">!     Write about the diagnostics themselves</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;-</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="comment">! Write the number</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keywordflow">IF</span> (istrm == 0) <span class="keyword">WRITE</span>(unit,*)<span class="stringliteral">&#39;No. of diagnostics:&#39;</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                  <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(I3)&#39;</span>) ndiags</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="comment">! If there are multiple sub-steps then the short-name will</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="comment">! have &quot;_#N&quot; tagged onto it, where N is the sub-step number.</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="comment">! In this case we need to increase the amount of space made</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="comment">! available for the short name.</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordflow">IF</span> (scmop%num_substeps &lt;= 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    sname_length = <a class="code" href="namespacescmoptype__defn.xhtml#aa0025fececb179f45806f37e250349df">lsname</a></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    sname_length = <a class="code" href="namespacescmoptype__defn.xhtml#aa0025fececb179f45806f37e250349df">lsname</a>                                      &amp;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                 + 2+(int(log10(float(scmop%num_substeps)))+1)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="comment">! Compose the format of the line that will describe</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <span class="comment">! each diagnostic</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keyword">WRITE</span>(fmt,<span class="stringliteral">&#39;(A,I2, A,I2, A,I2, A)&#39;</span>)<span class="stringliteral">&#39;(I3&#39;</span> //                   &amp;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;       <span class="stringliteral">&#39;,1X,A&#39;</span>,sname_length,                                   &amp;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;       <span class="stringliteral">&#39;,1X,A&#39;</span>,<a class="code" href="namespacescmoptype__defn.xhtml#acc8c63193280afbdfbc657162faced36">llname</a>,                                         &amp;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;       <span class="stringliteral">&#39;,1X,A&#39;</span>,<a class="code" href="namespacescmoptype__defn.xhtml#a433ea53f0382c7ca99a76aead0ea2d10">lunits</a>,                                         &amp;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;       <span class="stringliteral">&#39;,I2)&#39;</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <span class="comment">! Write the format to the file</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <span class="keywordflow">IF</span> (istrm == 0) <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(A)&#39;</span>)<span class="stringliteral">&#39;Line format:&#39;</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                  <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(A)&#39;</span>) trim(fmt)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  <span class="comment">! Write a 1-line description of each diagnostic</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  <span class="comment">! consisting of a unique integer ID, its short name,</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  <span class="comment">! its long name, its units and its domain profile.</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keywordflow">IF</span> (istrm == 0) <span class="keyword">WRITE</span>(unit,*)<span class="stringliteral">&#39;List of diagnostics &#39;</span>//        &amp;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                  <span class="stringliteral">&#39;(i,sname,lname,units,domprof):&#39;</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keywordflow">DO</span> i=1, ndiags</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    j = diags(i)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">! DEPENDS ON: add_substep_to_sname</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    short_name = add_substep_to_sname(scmop,j)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keyword">WRITE</span>(unit,fmt)                                            &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;         scmop%sname_id(j),short_name,                         &amp;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;         scmop%lname(j),scmop%units(j),scmop%domprof(j)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keywordflow">IF</span> (istrm == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="comment">! We need to close the new file we opened above</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keyword">CLOSE</span>(unit)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="write__scumlist_8f90.xhtml#a7e45949c38688006935a311e934997b2" title="Write out info about the output diagnostics for one or all streams. ">write_scumlist</a></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
