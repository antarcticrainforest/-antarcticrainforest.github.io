<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/scm/diagnostic/dump_streams_init.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b97be95e70c2cb49b099ac39ba4801c2.xhtml">scm</a></li><li class="navelem"><a class="el" href="dir_f974de0797e0b116e79416c6884e1ea9.xhtml">diagnostic</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">dump_streams_init.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="dump__streams__init_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="dump__streams__init_8f90.xhtml#a5a32286978873e7742031907578fdecb" title="Initialise SCM diagnostic output files. ">dump_streams_init</a>                                                  &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  ( scmop, row_length, rows, model_levels, wet_levels, bl_levels              &amp;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  , cloud_levels, ozone_levels, st_levels, sm_levels, ntiles, year_init       &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  , month_init, day_init, hour_init, min_init, sec_init, timestep, ndayin     &amp;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  , nminin, nsecin, sec_day, tot_nsteps, <a class="code" href="namespacerad__input__mod.xhtml#a87d24f16a0a6e6ea894ea0e5c0ace8d5">a_sw_radstep_prog</a>                    &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  , <a class="code" href="namespacerad__input__mod.xhtml#adaa0af883b5e4ff8ccdc256694f82df6" title="Number of advection steps per prognostic/diagnostic SW and LW step. &#39;Prognostic&#39; and &#39;Diagnostic&#39; ref...">a_sw_radstep_diag</a>, z_top_of_model, first_constant_r_rho_level             &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  , eta_theta, eta_rho, orog, <a class="code" href="namespacelevel__heights__mod.xhtml#a8eaca8430445d6f606be537e668a0fa7">r_theta_levels</a>, r_rho_levels, netcdf_chunksize )</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="dump__streams__init_8f90.xhtml#a5a32286978873e7742031907578fdecb">   12</a></span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="keywordtype">USE </span>netcdf</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceum__types.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">um_types</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="keywordtype">USE </span>scm_utils<span class="keywordtype">, ONLY</span>:                                                        &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;      scm_timestep, scm_timestep_count, time_info, scm_nc_time_id             &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    , scm_nc_date_id, scm_nc_hour_id, scm_nc_local_id, zhook_in, zhook_out    &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    , jprb, lhook, dr_hook</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="comment">! SCMop_type is defined in here...</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespacescmoptype__defn.xhtml" title="Defines the derived-type, SCMop_type, necessary for declaring. ">scmoptype_defn</a></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaces__scmop__mod.xhtml">s_scmop_mod</a>,                                                            &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;      only: <a class="code" href="namespaces__scmop__mod.xhtml#a5bda18f0a188e3401cfc9addee6bc4e9">streamison</a>, <a class="code" href="namespaces__scmop__mod.xhtml#a0aff366ad97d283dfca70868566ddaf1">notwritten</a></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a><span class="keywordtype">, ONLY</span> :      &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>,                &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      <a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">! Description:</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordtype">TYPE</span>(<a class="code" href="structscmoptype__defn_1_1scmop__type.xhtml">scmop_type</a>) :: SCMop <span class="comment">! InOut The derived-type structure containing</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                            <span class="comment">!       all the diagnostic information</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> :: &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    row_length    &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  , rows          &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  , model_levels  &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  , wet_levels    &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  , bl_levels     &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  , cloud_levels  &amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  , ozone_levels  &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  , st_levels     &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  , sm_levels     &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  , ntiles</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> :: &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    year_init     &amp;<span class="comment">! In Initial year</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  , month_init    &amp;<span class="comment">! In Initial month</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  , day_init      &amp;<span class="comment">! In Initial day</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  , hour_init     &amp;<span class="comment">! In Initial hour</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  , min_init      &amp;<span class="comment">! In Initial minute</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  , sec_init       <span class="comment">! In Initial second</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">REAL(r64)</span> ::    &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    timestep       <span class="comment">! In Timestep</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> ::     &amp;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    ndayin            &amp;<span class="comment">! In No. of days requested in run</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  , nminin            &amp;<span class="comment">! In No. of minutes requested in run</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  , nsecin            &amp;<span class="comment">! In No. of seconds requested in run</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  , sec_day           &amp;<span class="comment">! In No. of seconds in a day (Why this</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                       <span class="comment">!    isn&#39;t in an include file I don&#39;t know)</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  , tot_nsteps        &amp;<span class="comment">! In Total no. of steps to be done</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  , <a class="code" href="namespacerad__input__mod.xhtml#a87d24f16a0a6e6ea894ea0e5c0ace8d5">a_sw_radstep_prog</a> &amp;<span class="comment">! In No. of timesteps between prognostic</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                       <span class="comment">!    calls to radiation (3C/3Z)</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  , <a class="code" href="namespacerad__input__mod.xhtml#adaa0af883b5e4ff8ccdc256694f82df6" title="Number of advection steps per prognostic/diagnostic SW and LW step. &#39;Prognostic&#39; and &#39;Diagnostic&#39; ref...">a_sw_radstep_diag</a>  <span class="comment">! In No. of timesteps between diagnostic</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                       <span class="comment">!    calls to radiation (3C/3Z)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordtype">REAL(r64)</span> ::        &amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;     z_top_of_model    <span class="comment">! In The height of the &quot;top of the</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                       <span class="comment">!    atmosphere&quot;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> ::     &amp;<span class="comment">! In Lowest rho level that has constant height</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;     first_constant_r_rho_level</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordtype">REAL(r64)</span> ::                  &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;     eta_theta(model_levels+1)  &amp;<span class="comment">! In The etas of the theta and rho levels</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;   , eta_rho(model_levels)      &amp;<span class="comment">!</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;   , orog(row_length,rows)       <span class="comment">! In Orography height</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="comment">! IN The physical heights of the theta and rho levels...</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordtype">REAL(r64)</span> ::                                      &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;     r_theta_levels(row_length,rows,0:model_levels) &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;   , r_rho_levels(row_length,rows,model_levels)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="comment">! IN The ChunkSize input to NF90_Create(), the routine that</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="comment">! creates a NetCDF file. Controls a space versus time trade-off:</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="comment">! memory allocated in the netcdf library versus number of system</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="comment">! calls.</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> :: netcdf_chunksize</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordtype">INTEGER</span> :: get_um_version <span class="comment">! Function subroutine which returns</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                            <span class="comment">! the UM version as defined by</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                            <span class="comment">! environment variable $VN.</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordtype">INTEGER</span> :: um_version_env <span class="comment">! Stores UM version from $VN.</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordtype">CHARACTER (LEN=3)</span>   :: um_version_c <span class="comment">! The UM version as a string.</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordtype">CHARACTER (LEN=100)</span> :: fmt        <span class="comment">! Holds format specifiers</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordtype">CHARACTER (LEN=100)</span> :: basetime   <span class="comment">! Time units</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keywordtype">INTEGER</span> ::               &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    i, n, m                &amp;<span class="comment">! Counters</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  , nhourin                 <span class="comment">! No. of hours requested in run</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> ::          &amp;<span class="comment">! 64-bit counter for passing to other</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    n64                     <span class="comment">! routines compiled in 64 bit</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordtype">INTEGER</span> :: unit</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordtype">INTEGER(i64)</span> ::          &amp;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    diags(scmop%nentries)  &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  , ndiags</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordtype">REAL</span> :: ndump</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="comment">! Copy of netcdf_chunksize at the correct precision for passing</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="comment">! into NetCCDF routines. May be altered by NF90_Create.</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordtype">INTEGER(incdf)</span> :: netcdf_chunksize_io</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="comment">! NetCDF identifiers for each dimension of each domain</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="comment">! profile. Integers that are passed into NetCDF library routines</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="comment">! should have the same precision as those used internally within the</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="comment">! library (which may have been compiled at 32 bit), hence the use of</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="comment">! incdf.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keywordtype">INTEGER (incdf)</span> ::                 &amp;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    netcdf_dimension_time            &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  , netcdf_dimension(3,<a class="code" href="namespacescmoptype__defn.xhtml#aaea05138ea49054079bbb0a2ab43d326" title="Some limits. ">maxndomprof</a>)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="comment">! Other NetCDF-format related variables</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordtype">INTEGER (incdf)</span> :: Status,NcID</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keywordtype">CHARACTER (LEN=5)</span> :: c_unit</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="comment">! Character function that incorporates the substep number into</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="comment">! the short name of a diagnostic. Somewhat longer than a normal</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="comment">! short name.</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordtype">CHARACTER (LEN=lsname+10)</span> :: add_substep_to_sname</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="comment">! Temporary variables to hold output from add_substep_to_sname</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keywordtype">CHARACTER (LEN=lsname+10)</span> :: short_name</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordtype">CHARACTER (LEN=lsname+10)</span>, <span class="keywordtype">ALLOCATABLE</span> :: short_names(:)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keywordtype">CHARACTER (LEN=100)</span> :: start_date_str</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="comment">! Dr Hook</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="comment">!==============================</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keywordtype">REAL(KIND=jprb)</span> :: zhook_handle</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;DUMP_STREAMS_INIT&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="comment">! Get the UM version from the environment variable $VN</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">! DEPENDS ON: get_um_version</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  um_version_env=get_um_version()</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="comment">! Check for a sensible version number</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keywordflow">IF</span> (um_version_env &lt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;Dump_Streams_Init: WARNING, the &#39;</span>           //  &amp;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="stringliteral">&#39;environment variable $VN does not seem&#39;</span>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;to be set to a valid UM version number.  &#39;</span> //  &amp;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="stringliteral">&#39;will assume this is UM VN7.4,&#39;</span>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;but if incorrect it could lead to &#39;</span>         //  &amp;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="stringliteral">&#39;unreadable output files.&#39;</span>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;&#39;</span>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    um_version_env = 704</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="comment">! Convert the UM version number to character form</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keyword">WRITE</span>(um_version_c,<span class="stringliteral">&#39;(I1,A1,I1)&#39;</span>)                                  &amp;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    int(um_version_env/100.), <span class="stringliteral">&#39;.&#39;</span>, mod(int(um_version_env),10)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  <span class="comment">! Write out the UM version number</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;===================&#39;</span>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;UM Version=&#39;</span>//trim(um_version_c),src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;===================&#39;</span>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39; &#39;</span>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="comment">! Give a summary of the output streams</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keywordflow">IF</span> (scmop%n_output /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(65(&quot;-&quot;))&#39;</span>)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;Summary of open streams:&#39;</span>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(65(&quot;-&quot;))&#39;</span>)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;No.| Unit | Time between dumps | No. dgnstcs &#39;</span>//&amp;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="stringliteral">&#39;| Format | Filename &#39;</span>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;   |      | (steps) |(minutes) |             &#39;</span>//&amp;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="stringliteral">&#39;|        |          &#39;</span>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;+++-+-&#39;</span>//&amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="stringliteral">&#39;+--+-&#39;</span>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keywordflow">DO</span> i=1, <a class="code" href="namespacescmoptype__defn.xhtml#a3f60f9478a654738d44df0e07cdb3d96" title="The maximum no. of streams must be such that Stream(maxnstreams+1) gives an integer which is not too ...">maxnstreams</a></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      <span class="keywordflow">IF</span> (scmop%strm(i)%switch /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="comment">! Write the stream output unit into a character variable,</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="comment">! unless this is a NetCDF stream, in which case the unit</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="comment">! is not used.</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keywordflow">IF</span> (scmop%strm(i)%format /= 4) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;          <span class="keyword">WRITE</span>(c_unit,<span class="stringliteral">&#39;(I5)&#39;</span>) scmop%strm(i)%op_unit</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;          c_unit=<span class="stringliteral">&#39;n/a&#39;</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;          c_unit=adjustr(c_unit)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>, &amp;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="stringliteral">&#39;(I2,&quot; |&quot;,A5,&quot; |&quot;,I8,&quot; | &quot;,G10.3,&quot; |&quot;,I12,&quot; |&quot;,I7,&quot; | &quot;,A)&#39;</span>) &amp;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          i, c_unit,                                                        &amp;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;          scmop%strm(i)%dump_step,                                          &amp;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;          scmop%strm(i)%dump_step*timestep/60.0,                            &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;          scmop%strm(i)%n_output,scmop%strm(i)%format,                      &amp;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;          trim(scmop%strm(i)%filename)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(65(&quot;-&quot;))&#39;</span>)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39; &#39;</span>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Dump_Streams_Init: No diagnostics to be written.&#39;</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="comment">! Nothing to do if there&#39;s no diagnostics to be written</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordflow">GOTO</span> 9999</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keywordflow">  END IF</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  <span class="comment">! Write the scumlist file</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  n64 = 0</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">! DEPENDS ON: write_scumlist</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  <span class="keyword">CALL </span><a class="code" href="write__scumlist_8f90.xhtml#a7e45949c38688006935a311e934997b2" title="Write out info about the output diagnostics for one or all streams. ">write_scumlist</a> (scmop, n64)</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  <span class="comment">! write the no. of levels, etc into a file</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">! DEPENDS ON: write_domain_data</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <span class="keyword">CALL </span><a class="code" href="write__domain__data_8f90.xhtml#aae2ab75d8056f067162d3b7accf4b33e" title="Writes file domain.dat for the SCM diagnostics. ">write_domain_data</a>                                           &amp;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    ( row_length, rows, model_levels, z_top_of_model               &amp;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    , first_constant_r_rho_level, orog, eta_theta,eta_rho )</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  <span class="comment">! Calculate nhourin from nminin and nsecin</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  nhourin = int(nminin/60.0+nsecin/3600.0)</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  <span class="comment">! Write the headers of the output data files</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  <span class="keywordflow">DO</span> n=1, <a class="code" href="namespacescmoptype__defn.xhtml#a3f60f9478a654738d44df0e07cdb3d96" title="The maximum no. of streams must be such that Stream(maxnstreams+1) gives an integer which is not too ...">maxnstreams</a></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keywordflow">IF</span> (scmop%strm(n)%switch /= 0.AND.                             &amp;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        scmop%strm(n)%n_output &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      <span class="comment">! This stream is open and there are diagnostics</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      <span class="comment">! to be written out from it</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      unit = scmop%strm(n)%op_unit</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      <span class="comment">! Check this unit is free (not applicable for NetCDF files)</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      <span class="keywordflow">DO</span> m=1, n-1</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keywordflow">IF</span> (scmop%strm(m)%switch /= 0.AND.                         &amp;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            scmop%strm(m)%format /= 4.AND.                         &amp;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            scmop%strm(m)%n_output &gt; 0.AND.                        &amp;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            scmop%strm(m)%op_unit == unit) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Dump_Streams_Init ERROR: two output files &#39;</span>//    &amp;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                 <span class="stringliteral">&#39;with the same unit numbers: &#39;</span>,n,m,unit</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Output redirected to unit 103!&#39;</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;          unit = 103</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;          scmop%strm(n)%op_unit = unit</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">! The header depends on the format</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;-<span class="comment">! Format=0: designed for reading by PV-wave routine</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">!           scmread2.pro</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;-      <span class="keywordflow">IF</span> (scmop%strm(n)%format == 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="comment">! Open the stream&#39;s output file</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="keyword">OPEN</span>(unit=unit,<a class="code" href="parlbcs_8h.xhtml#a9bdcf7736b544227cbd66a99e5332d4d">file</a>=scmop%strm(n)%filename)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="comment">! Write the UM version and the stream format</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(A,I1)&#39;</span>)<span class="stringliteral">&#39;vn&#39;</span>//um_version_c//<span class="stringliteral">&#39;,old_format&#39;</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="comment">! Write the total no. of days, hours, dumps per day and</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="comment">! steps, plus the timestep, the dumping period of this</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="comment">! stream and the no. of diagnostics per dump</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        ndump = sec_day/(scmop%strm(n)%dump_step*timestep)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="keyword">WRITE</span>(unit,                                              &amp;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;             <span class="stringliteral">&#39;(I4,1X,I4,1X,F7.3,1X,I7,1X,F9.2,1X,I9,1X,I4)&#39;</span>)     &amp;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;              ndayin, nhourin, ndump, tot_nsteps, timestep,      &amp;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;              scmop%strm(n)%dump_step,                           &amp;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;              scmop%strm(n)%n_output</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="comment">! Make a list the diagnostics we&#39;re going to write</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        ndiags = 0</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keywordflow">DO</span> i=1, scmop%nentries</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaces__scmop__mod.xhtml#a5bda18f0a188e3401cfc9addee6bc4e9">streamison</a>(scmop%streams(i),n).AND..NOT.           &amp;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;              <a class="code" href="namespaces__scmop__mod.xhtml#a0aff366ad97d283dfca70868566ddaf1">notwritten</a>(scmop%streams(i))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            ndiags = ndiags+1</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            diags(ndiags) = i</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordflow">IF</span> (ndiags /= scmop%strm(n)%n_output) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Dump_Streams_Init ERROR: an inconsistency &#39;</span>//  &amp;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                 <span class="stringliteral">&#39;has ocurred !&#39;</span>,ndiags, scmop%strm(n)%n_output, &amp;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                  n,scmop%nentries</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;          <span class="comment">! Switch the diagnostic system off so dodgy data is</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;          <span class="comment">! not mistakenly used in good faith.</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Switching diagnostic system off!&#39;</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;          scmop%on = .false.</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="comment">! Write that list to the file</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="keyword">WRITE</span>(fmt,<span class="stringliteral">&#39;(A,I5,A)&#39;</span>) <span class="stringliteral">&#39;(&#39;</span>,ndiags,<span class="stringliteral">&#39;(I5,1X))&#39;</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <span class="keyword">WRITE</span>(unit,fmt)(scmop%sname_id(diags(i)),i=1,ndiags)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;-<span class="comment">! Format=1 : designed for easy visual perusal.</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;-      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (scmop%strm(n)%format == 1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="comment">! Open the stream&#39;s output file</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keyword">OPEN</span>(unit=unit,<a class="code" href="parlbcs_8h.xhtml#a9bdcf7736b544227cbd66a99e5332d4d">file</a>=scmop%strm(n)%filename)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(A,A)&#39;</span>)<span class="stringliteral">&#39;UM version=&#39;</span>,um_version_c</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="comment">! Write the total no. of days, hours, dumps per day and</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        <span class="comment">! steps, plus the timestep, the dumping period of this</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="comment">! stream and the no. of diagnostics per dump</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        ndump = sec_day/(scmop%strm(n)%dump_step*timestep)</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(A)&#39;</span>)<span class="stringliteral">&#39;General run information...&#39;</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(A,I4,1X,A,I4,1X,A,F7.3,1X,A,I7)&#39;</span>)                  &amp;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;             <span class="stringliteral">&#39;No. of days=&#39;</span>,ndayin,<span class="stringliteral">&#39;No. of hrs=&#39;</span>,nhourin,               &amp;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;             <span class="stringliteral">&#39;No. of dumps=&#39;</span>,ndump,<span class="stringliteral">&#39;Total number of steps=&#39;</span>,            &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;              tot_nsteps</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(A,F9.2,1X,A,I9,1X,A,I4)&#39;</span>)                          &amp;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;             <span class="stringliteral">&#39;Timestep=&#39;</span>,timestep,                                      &amp;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;             <span class="stringliteral">&#39;No. of steps between dumps=&#39;</span>,                             &amp;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;             scmop%strm(n)%dump_step,                                   &amp;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;             <span class="stringliteral">&#39;No. of diags outputting to this stream=&#39;</span>,                 &amp;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;             scmop%strm(n)%n_output</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="comment">! list the diagnostics we&#39;re going to write</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        ndiags = 0</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <span class="keywordflow">DO</span> i=1, scmop%nentries</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaces__scmop__mod.xhtml#a5bda18f0a188e3401cfc9addee6bc4e9">streamison</a>(scmop%streams(i),n).AND..NOT.                  &amp;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            <a class="code" href="namespaces__scmop__mod.xhtml#a0aff366ad97d283dfca70868566ddaf1">notwritten</a>(scmop%streams(i))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            ndiags = ndiags+1</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            diags(ndiags) = i</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keywordflow">IF</span> (ndiags /= scmop%strm(n)%n_output) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*) &amp;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;              <span class="stringliteral">&#39;Dump_Streams_Init ERROR: an inconsistency has ocurred !&#39;</span> &amp;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                , ndiags, scmop%strm(n)%n_output, n,scmop%nentries</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;          <span class="comment">! Switch the diagnostic system off so dodgy data is</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;          <span class="comment">! not mistakenly used in good faith.</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Switching diagnostic system off!&#39;</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;          scmop%on = .false.</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(A)&#39;</span>)<span class="stringliteral">&#39;Diagnostics in this file... &#39;</span>//               &amp;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;             <span class="stringliteral">&#39;(subset of entries in scumlist file)&#39;</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        <span class="comment">! Ensure that the sub-step is appended to the short</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="comment">! name of each diagnostic entry, if required.</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <span class="keyword">ALLOCATE</span>(short_names(ndiags))</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keywordflow">DO</span> i=1, ndiags</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">! DEPENDS ON: add_substep_to_sname</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;          short_names(i) = add_substep_to_sname(scmop,diags(i))</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        <span class="comment">! Write the information</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(I3,1X,A,1X,A)&#39;</span>)                                    &amp;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;             (scmop%sname_id(diags(i)),short_names(i),                  &amp;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;              scmop%lname(diags(i)),i=1,ndiags)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        <span class="keyword">DEALLOCATE</span>(short_names)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;-<span class="comment">! Format=2 : format required for FSSI database</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;-      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (scmop%strm(n)%format == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="comment">! Initialisation done in DUMP_STREAMS for the time being.</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;-<span class="comment">! Format=3 : new format designed for reading by PV-wave</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">!            routine scmread2.pro</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;-      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (scmop%strm(n)%format == 3) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        <span class="comment">! Open the stream&#39;s output file</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        <span class="keyword">OPEN</span>(unit=unit,<a class="code" href="parlbcs_8h.xhtml#a9bdcf7736b544227cbd66a99e5332d4d">file</a>=scmop%strm(n)%filename)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        <span class="comment">! Write the UM version, plus any extra strings necessary</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        <span class="comment">! for PV-Wave to know what to expect in the file.</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(A,I1)&#39;</span>)<span class="stringliteral">&#39;vn&#39;</span>//um_version_c//<span class="stringliteral">&#39;,start_time_present&#39;</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        <span class="comment">! Write information about the size and shape of the domain</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(I4,I4,8I4)&#39;</span>) row_length,rows,                      &amp;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;             model_levels,wet_levels,bl_levels,cloud_levels,            &amp;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;             ozone_levels,st_levels,sm_levels,ntiles</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        <span class="comment">! Write the starting time of the run as specified in</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="comment">! the INDATA namelist</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <span class="keyword">WRITE</span>(unit,<span class="stringliteral">&#39;(I6,1x,I4,1x,I5,1x,I4,1x,I4,1x,I4,1x)&#39;</span>)             &amp;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;             year_init,month_init,day_init,hour_init,min_init,          &amp;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;             sec_init</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="comment">! Write information pertaining to the length of</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        <span class="comment">! the model run and time in general</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        <span class="keyword">Write</span>(unit,<span class="stringliteral">&#39;(I9,1x,F9.2,1x,I9,1x,I4,1x,I4,1x,I5,1x,I5,1x,I5)&#39;</span>)  &amp;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;             tot_nsteps,timestep,scmop%strm(n)%dump_step,               &amp;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;             <a class="code" href="namespacerad__input__mod.xhtml#a87d24f16a0a6e6ea894ea0e5c0ace8d5">a_sw_radstep_prog</a>,<a class="code" href="namespacerad__input__mod.xhtml#adaa0af883b5e4ff8ccdc256694f82df6" title="Number of advection steps per prognostic/diagnostic SW and LW step. &#39;Prognostic&#39; and &#39;Diagnostic&#39; ref...">a_sw_radstep_diag</a>,ndayin,nminin,nsecin</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="comment">! Write information about the levels and orography...</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        <span class="keyword">WRITE</span>(fmt,<span class="stringliteral">&#39;(A,I3,A)&#39;</span>) <span class="stringliteral">&#39;(&#39;</span>,model_levels+1 ,<span class="stringliteral">&#39;(1PE18.10E3,&quot; &quot;))&#39;</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        <span class="keyword">WRITE</span>(unit,fmt) eta_theta</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <span class="keyword">WRITE</span>(fmt,<span class="stringliteral">&#39;(A,I3,A)&#39;</span>) <span class="stringliteral">&#39;(&#39;</span>,model_levels   ,<span class="stringliteral">&#39;(1PE18.10E3,&quot; &quot;))&#39;</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <span class="keyword">WRITE</span>(unit,fmt) eta_rho</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        <span class="keyword">WRITE</span>(fmt,<span class="stringliteral">&#39;(A,I6,A)&#39;</span>) <span class="stringliteral">&#39;(&#39;</span>,row_length*rows,<span class="stringliteral">&#39;(1PE18.10E3,&quot; &quot;))&#39;</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <span class="keyword">WRITE</span>(unit,fmt) orog</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <span class="keyword">WRITE</span>(fmt,<span class="stringliteral">&#39;(A,I6,A)&#39;</span>) <span class="stringliteral">&#39;(&#39;</span>,row_length*rows*(model_levels+1)      &amp;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                             ,<span class="stringliteral">&#39;(1PE18.10E3,&quot; &quot;))&#39;</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        <span class="keyword">WRITE</span>(unit,fmt) r_theta_levels</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keyword">WRITE</span>(fmt,<span class="stringliteral">&#39;(A,I6,A)&#39;</span>) <span class="stringliteral">&#39;(&#39;</span>,row_length*rows*(model_levels  )      &amp;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                             ,<span class="stringliteral">&#39;(1PE18.10E3,&quot; &quot;))&#39;</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        <span class="keyword">WRITE</span>(unit,fmt) r_rho_levels</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        <span class="comment">! Write data into the file pertaining to the</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        <span class="comment">! individual diagnostics that it will contain.</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        n64 = n</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">! DEPENDS ON: write_scumlist</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        <span class="keyword">CALL </span><a class="code" href="write__scumlist_8f90.xhtml#a7e45949c38688006935a311e934997b2" title="Write out info about the output diagnostics for one or all streams. ">write_scumlist</a>(scmop,n64)</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;-<span class="comment">! Format=4 : NetCDF</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;-      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (scmop%strm(n)%format == 4) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        <span class="comment">! Create the NetCDF file. Chunksize is a parameter,</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        <span class="comment">! the size of which may greatly affect the I/O speed</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        <span class="comment">! of the NetCDF file writing.</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        netcdf_chunksize_io = netcdf_chunksize</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        status = nf90_create(scmop%strm(n)%filename,                    &amp;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        nf90_clobber,ncid,chunksize = netcdf_chunksize_io)</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        <span class="comment">! Set global attributes</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        status = nf90_put_att                  &amp;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;               ( ncid   = ncid                 &amp;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;               , varid  = nf90_global          &amp;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;               , name   = <span class="stringliteral">&quot;Start date&quot;</span>         &amp;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;               , values = trim(start_date_str) )</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        <span class="comment">! Declare the three spatial dimensions of each domain</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        <span class="comment">! profile</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        <span class="keywordflow">DO</span> i=1, <a class="code" href="namespacescmoptype__defn.xhtml#aaea05138ea49054079bbb0a2ab43d326" title="Some limits. ">maxndomprof</a></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;          <span class="comment">! Check this domain has been defined.</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;          <span class="keywordflow">IF</span> (scmop%d_lev1(i) /= -1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            status = nf90_def_dim(                                      &amp;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;              ncid  = ncid,                                             &amp;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;              name  = trim(adjustl(scmop%d_name(i)))//<span class="stringliteral">&#39;_i&#39;</span>,             &amp;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;              len   = int(scmop%d_rowa2(i)-scmop%d_rowa1(i)+1,<a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>),   &amp;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;              dimid = netcdf_dimension(1,i))</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            status = nf90_def_dim(                                      &amp;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;              ncid  = ncid,                                             &amp;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;              name  = trim(adjustl(scmop%d_name(i)))//<span class="stringliteral">&#39;_j&#39;</span>,             &amp;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;              len   = int(scmop%d_rowb2(i)-scmop%d_rowb1(i)+1,<a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>),   &amp;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;              dimid = netcdf_dimension(2,i))</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;            status = nf90_def_dim(                                      &amp;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;              ncid  = ncid,                                             &amp;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;              name  = trim(adjustl(scmop%d_name(i)))//<span class="stringliteral">&#39;_k&#39;</span>,             &amp;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;              len   = int(scmop%d_lev2(i)-scmop%d_lev1(i)+1,<a class="code" href="namespacescmoptype__defn.xhtml#ad84015e5dd43996db3394c7a670931dd" title="Precision of integers passed in to &amp; out of NetCDF routines. ">incdf</a>),     &amp;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;              dimid = netcdf_dimension(3,i))</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        <span class="keyword">WRITE</span>(basetime,<span class="stringliteral">&quot;(a,i4.4,a,i2.2,a,i2.2,1x,i2.2,a,i2.2,a,i2.2)&quot;</span>)  &amp;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;          <span class="stringliteral">&quot;seconds since &quot;</span>, year_init, <span class="stringliteral">&quot;-&quot;</span>, month_init, <span class="stringliteral">&quot;-&quot;</span>, day_init   &amp;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                          , hour_init, <span class="stringliteral">&quot;:&quot;</span>, min_init,   <span class="stringliteral">&quot;:&quot;</span>, sec_init</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        <span class="comment">! Declare the time dimension</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        status = nf90_def_dim               &amp;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;          ( ncid   = ncid                   &amp;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;          , name   = <span class="stringliteral">&quot;time&quot;</span>                 &amp;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;          , len    = nf90_unlimited         &amp;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;          , dimid  = netcdf_dimension_time  )</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        <span class="comment">! Define a seconds variable</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        status = nf90_def_var               &amp;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;          ( ncid   = ncid                   &amp;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;          , name   = <span class="stringliteral">&quot;time&quot;</span>                 &amp;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;          , xtype  = nf90_float             &amp;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;          , dimids = netcdf_dimension_time  &amp;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;          , varid  = scm_nc_time_id         )</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="comment">! Define seconds variable attributes</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        status = nf90_put_att               &amp;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;          ( ncid   = ncid                   &amp;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;          , name   = <span class="stringliteral">&quot;units&quot;</span>                &amp;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;          , varid  = scm_nc_time_id         &amp;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;          , values = basetime               )</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        status = nf90_put_att               &amp;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;          ( ncid   = ncid                   &amp;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;          , name   = <span class="stringliteral">&quot;long_name&quot;</span>            &amp;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;          , varid  = scm_nc_time_id         &amp;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;          , values = <span class="stringliteral">&quot;Number of seconds since start of simulations&quot;</span> )</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        <span class="comment">! Define a date variable</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        status = nf90_def_var               &amp;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;          ( ncid   = ncid                   &amp;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;          , name   = <span class="stringliteral">&quot;date&quot;</span>                 &amp;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;          , xtype  = nf90_int               &amp;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;          , dimids = netcdf_dimension_time  &amp;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;          , varid  = scm_nc_date_id         )</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        <span class="comment">! Define date variable attributes</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        status = nf90_put_att               &amp;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;          ( ncid   = ncid                   &amp;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;          , name   = <span class="stringliteral">&quot;units&quot;</span>                &amp;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;          , varid  = scm_nc_date_id         &amp;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;          , values = <span class="stringliteral">&quot;yyyymmdd&quot;</span>             )</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        status = nf90_put_att               &amp;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;          ( ncid   = ncid                   &amp;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;          , name   = <span class="stringliteral">&quot;long_name&quot;</span>            &amp;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;          , varid  = scm_nc_date_id         &amp;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;          , values = <span class="stringliteral">&quot;Date string&quot;</span>          )</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        <span class="comment">! Define each diagnostic that will go to this stream</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        <span class="keywordflow">DO</span> i=1, scmop%nentries</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;          <span class="comment">! Is this entry to be sent to this stream, and</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;          <span class="comment">! not been flagged as one not to output?</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaces__scmop__mod.xhtml#a5bda18f0a188e3401cfc9addee6bc4e9">streamison</a>(scmop%streams(i),n).AND..NOT.                  &amp;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;              <a class="code" href="namespaces__scmop__mod.xhtml#a0aff366ad97d283dfca70868566ddaf1">notwritten</a>(scmop%streams(i))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;            <span class="comment">! Get the short name with the substep number</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;            <span class="comment">! appended if necessary.</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            n64 = i</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;            short_name = add_substep_to_sname(scmop,n64)</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;            <span class="comment">! Define this variable</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;            status = nf90_def_var(                                      &amp;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;              ncid   = ncid,                                            &amp;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;              name   = short_name,                                      &amp;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;              xtype  = nf90_float,                                      &amp;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;              dimids = (/                                               &amp;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                netcdf_dimension(1,scmop%domprof(i)),                   &amp;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                netcdf_dimension(2,scmop%domprof(i)),                   &amp;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                netcdf_dimension(3,scmop%domprof(i)),                   &amp;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                netcdf_dimension_time/),                                &amp;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;              varid  = scmop%netcdf_id(i))</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;            <span class="keywordflow">IF</span> (status /= nf90_noerr) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Error defining NetCDF variable: &#39;</span>, short_name</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;            <span class="comment">! Define its attributes</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            status = nf90_put_att(                                      &amp;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;              ncid   = ncid,                                            &amp;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;              varid  = scmop%netcdf_id(i),                              &amp;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;              name   = <span class="stringliteral">&quot;units&quot;</span>,                                         &amp;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;              values = scmop%units(i))</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;            status = nf90_put_att(                                      &amp;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;              ncid   = ncid,                                            &amp;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;              varid  = scmop%netcdf_id(i),                              &amp;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;              name   = <span class="stringliteral">&quot;long_name&quot;</span>,                                     &amp;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;              values = scmop%lname(i))</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        <span class="comment">! End of file definition</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        status = nf90_enddef(ncid = ncid)</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;        <span class="comment">! Record the file ID so it can be used later for output.</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;        scmop%strm(n)%op_unit = ncid</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,*)<span class="stringliteral">&#39;Dump_Streams_Init ERROR: unknown format &#39;</span>//        &amp;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;               <span class="stringliteral">&#39;for stream &#39;</span>,n</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,src=<span class="stringliteral">&#39;dump_streams_init&#39;</span>)</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="keywordflow">    END IF</span>                  <span class="comment">! SCMop%strm(n)%switch /= 0</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="keywordflow">  END DO</span>                     <span class="comment">! do n=1,maxnstreams</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;9999 <span class="keywordflow">CONTINUE</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;  <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;DUMP_STREAMS_INIT&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;  <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="dump__streams__init_8f90.xhtml#a5a32286978873e7742031907578fdecb" title="Initialise SCM diagnostic output files. ">dump_streams_init</a></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
