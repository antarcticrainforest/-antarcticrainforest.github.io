<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/UKCA/ukca_activ_mod.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_3b087d695daa154bfcb7242bcfd0fbd3.xhtml">UKCA</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ukca_activ_mod.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ukca__activ__mod_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceukca__activ__mod.xhtml">    1</a></span>&#160;  <span class="keyword">MODULE</span> <a class="code" href="namespaceukca__activ__mod.xhtml">ukca_activ_mod</a></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">!  Description:  Contains subroutines for generating arrays for pdf of updraught</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">!  Code Description:</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keyword">CONTAINS</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">     SUBROUTINE </span><a class="code" href="namespaceukca__activ__mod.xhtml#a96a2421c988937b76824aef1eab7c925">activmklin</a>(kbdim, klev, arrmin, arrmax, nbins, binwidth, &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                          linarr)</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="namespaceukca__activ__mod.xhtml#a96a2421c988937b76824aef1eab7c925">   31</a></span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;           <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>  :: kbdim</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>  :: klev</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>  :: nbins</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span>  :: arrmin(kbdim, klev)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span>  :: arrmax(kbdim, klev)</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(OUT)</span> :: binwidth(kbdim, klev, nbins)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(OUT)</span> :: linarr(kbdim, klev, nbins)</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordtype">INTEGER</span> :: i,j,k</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_ACTIV_MOD:ACTIVMKLIN&#39;</span>,zhook_in,   &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                              zhook_handle)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;           <span class="keywordflow">DO</span> k = 1, nbins</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">DO</span> i=1, klev</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;          <span class="keywordflow">DO</span> j=1, kbdim</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;               binwidth(j,i,k)=(arrmax(j,i)-arrmin(j,i))/<span class="keywordtype">REAL</span>(nbins)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;               linarr(j,i,k)= arrmin(j,i) + (<span class="keywordtype">REAL</span>(k)-0.5)*binwidth(j,i,k)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_ACTIV_MOD:ACTIVMKLIN&#39;</span>,zhook_out,    &amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                              zhook_handle)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="namespaceukca__activ__mod.xhtml#a96a2421c988937b76824aef1eab7c925">activmklin</a></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;--<span class="keyword">      SUBROUTINE </span>activmkpdf (kbdim, klev, array, nbins, sigma, mean,    &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                             pdfarr)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      <span class="keywordtype">USE </span>ukca_constants<span class="keywordtype">, ONLY</span>: ppi</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;         <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;         <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: kbdim</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: klev</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: nbins</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: array(kbdim, klev, nbins)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: sigma(kbdim, klev)</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: mean(kbdim, klev)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(OUT)</span> :: pdfarr(kbdim, klev, nbins)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <span class="keywordtype">INTEGER</span> :: i, j, k</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_ACTIV_MOD:ACTIVMKPDF&#39;</span>,zhook_in,     &amp;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                               zhook_handle)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <span class="keywordflow">DO</span> k=1, nbins</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">DO</span> i=1, klev</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;          <span class="keywordflow">DO</span> j=1, kbdim</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;               <span class="comment">! normalised gaussian</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            pdfarr(j,i,k) = (1.0/((2.0*ppi)**0.5))*(1.0/sigma(j,i))*    &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                  exp(-((array(j,i,k)-mean(j,i))**2/(2*sigma(j,i)**2)))</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_ACTIV_MOD:ACTIVMKPDF&#39;</span>,zhook_out,    &amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                               zhook_handle)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">      END SUBROUTINE </span>activmkpdf</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;--<span class="keyword">      SUBROUTINE </span>activmkskew (kbdim, klev, array, nbins, sigma, mean,   &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                              alpha, pdfarr)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keywordtype">USE </span>ukca_constants<span class="keywordtype">, ONLY</span>: ppi</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;         <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;         <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: kbdim</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: klev</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> :: nbins</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: array(kbdim, klev, nbins)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: sigma(kbdim, klev)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: mean(kbdim, klev)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span> :: alpha(kbdim, klev)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(OUT)</span> :: pdfarr(kbdim, klev, nbins)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      <span class="keywordtype">INTEGER</span> :: i, j, k</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_ACTIV_MOD:ACTIVMKSKEW&#39;</span>,zhook_in,   &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                               zhook_handle)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <span class="keywordflow">DO</span> i=1, klev</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">DO</span> j=1, kbdim</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;          <span class="keywordflow">DO</span> k=1, nbins</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;           <span class="comment">! skew-normal distribution</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            pdfarr(j,i,k)=(1.0/((2.0*ppi)**0.5))*(1.0/sigma(j,i))*     &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                exp(-((array(j,i,k)-mean(j,i))**2/(2*sigma(j,i)**2)))* &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                (1+erf(alpha(j,i)*(array(j,i,k)-mean(j,i))*            &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                (1.0/((2.0)**0.5))*(1.0/sigma(j,i))))</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_ACTIV_MOD:ACTIVMKSKEW&#39;</span>,zhook_out,   &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                               zhook_handle)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword">      END SUBROUTINE </span>activmkskew</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;--<span class="keyword">      SUBROUTINE </span>activclosest (arrayin, nbins, value, closeval,         &amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                               closeind)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span>  :: nbins</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span>  :: arrayin(nbins)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(IN)</span>  :: value</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(OUT)</span> :: closeind</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      <span class="keywordtype">REAL</span>,    <span class="keywordtype">INTENT(OUT)</span> :: closeval</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      <span class="keywordtype">INTEGER</span> :: min_subs(1)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="keywordtype">REAL</span>    :: subarr(nbins)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_ACTIV_MOD:ACTIVCLOSEST&#39;</span>,zhook_in,   &amp;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                              zhook_handle)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="comment">! Subtract the value you wish to compare from</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="comment">! the whole array you are comparing it to and    ! create a new array of these differences.</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      subarr(:) = arrayin(:) - <span class="keywordtype">value</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="comment">! Find the smallest absolute difference between value and array.</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="comment">! *min_subs contains the location of the smallest absolute value of subarr</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment">!  NB the value of MINLOC must be returned to an array.    ! E.g. &quot;icmin=minloc(c(1:3))&quot; will only work if &quot;icmin&quot; has been    ! declared to be an integer array, and the value &quot;3&quot; will be placed    ! in the first element of &quot;icmin&quot;.</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;         min_subs = minloc(abs(subarr(1:nbins)))</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="comment">! *closeind is just an integer of the 1st element of min_subs</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      closeind = min_subs(1)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;       <span class="comment">! *closeval contains the value of the closest element of arrayin to value</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="comment">! *closest contains the location of that value</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      closeval = arrayin(closeind)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;UKCA_ACTIV_MOD:ACTIVCLOSEST&#39;</span>,zhook_out,   &amp;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                              zhook_handle)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;       <span class="keywordflow">RETURN</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword">      END SUBROUTINE </span>activclosest</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword">      END MODULE </span><a class="code" href="namespaceukca__activ__mod.xhtml">ukca_activ_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
