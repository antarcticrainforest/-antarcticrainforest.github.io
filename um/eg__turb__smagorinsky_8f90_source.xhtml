<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/diffusion_and_filtering/eg_turb_smagorinsky.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_80ff6dc52dd66491dc39915a42170b84.xhtml">diffusion_and_filtering</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">eg_turb_smagorinsky.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="eg__turb__smagorinsky_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="eg__turb__smagorinsky_8f90.xhtml#a7073b1bf775f8cb2e1e100a00fc42153">eg_turb_smagorinsky</a>(                                         &amp;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;                               u, v, w, z0,                             &amp;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;                               row_length, rows, n_rows, model_levels,  &amp;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;                               r_theta_levels, r_rho_levels,            &amp;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;                               xi1_p, xi1_u, xi2_p, xi2_v,              &amp;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;                               csxi2_p, csxi2_v )</div><div class="line"><a name="l00007"></a><span class="lineno"><a class="line" href="eg__turb__smagorinsky_8f90.xhtml#a7073b1bf775f8cb2e1e100a00fc42153">    7</a></span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacehoriz__grid__mod.xhtml">horiz_grid_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacehoriz__grid__mod.xhtml#a45a8483693f20c176723c650a683e093" title="Linear Interpolation weights. ">intw_u2p</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#a0213811b0c3f7e306a47a8520640b709">intw_v2p</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#abf6cbd39dd51ee266ea887d71897caf3">intw_p2u</a>, <a class="code" href="namespacehoriz__grid__mod.xhtml#acba39db8f95c55dae8728416a1fc10a2">intw_p2v</a></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacemetric__terms__mod.xhtml">metric_terms_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemetric__terms__mod.xhtml#a479e5a0ca10e25ef6e86a981da466240">h1_p_eta</a>, <a class="code" href="namespacemetric__terms__mod.xhtml#aaf2f43cc0960d2c3ae91bab29879cd50">h2_p_eta</a></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceturb__diff__mod.xhtml" title="Declares variables for turbulent diffusion input. ">turb_diff_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceturb__diff__mod.xhtml#ac5cd89fb153d69bf0907cd1084ac497d">l_subfilter_blend</a>, <a class="code" href="namespaceturb__diff__mod.xhtml#a0f3b2bb7e4e0f07490a86b012e633446">diff_factor</a>, <a class="code" href="namespaceturb__diff__mod.xhtml#ad16cdc02d60aec936a06bc65fc2161bc">mix_factor</a></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceturb__diff__ctl__mod.xhtml" title="Declares allocatable arrays for turbulent diffusion!&gt; ">turb_diff_ctl_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#afe95542ff5ed7aa55f242862f48e7138" title="Subgrid turbulence scheme arrays. ">visc_m</a>, <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#afa2ef8cb137e4ad57b7be85c961b7edc">visc_h</a>, <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#a7b78d99f3e5842e4a071a9a2ff4ae3eb">rneutml_sq</a>, <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#a3fc1bafae5637305bdbde3922e937788">max_diff</a>,      &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                             <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#a1ab664ad1be379895dc51d4e026ab38c">shear</a>, <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#afb0e9b50fc41a119b145dbc9146b5186">delta_smag</a></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: vkman</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacetimestep__mod.xhtml" title="Timestepping values. Timestepping values. ">timestep_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacetimestep__mod.xhtml#a72dfdf1f45a27375b429867acc2430aa">recip_timestep</a>,<a class="code" href="namespacetimestep__mod.xhtml#af5057870e73925950dded81acfffb0d6">timestep</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keywordtype">USE </span>um_parvars<span class="keywordtype">, ONLY</span>: offx, offy, halo_i, halo_j</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">! Description: Calculates coefficients for use in subgrid turbulence</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keywordtype">INTEGER</span>, <span class="keywordtype">INTENT(IN)</span> ::                                            &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  row_length                                                      &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                         <span class="comment">! number of points on a row.</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;, rows                                                            &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                         <span class="comment">! number of rows.</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;, n_rows                                                          &amp;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                         <span class="comment">! number of v rows.</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;, model_levels</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                         <span class="comment">! number of model levels.</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                               &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  xi1_p(1-halo_i:row_length+halo_i)                               &amp;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;, xi1_u(-halo_i:row_length+halo_i-1)                              &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;, xi2_p(1-halo_j:rows+halo_j)                                     &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;, xi2_v(-halo_j:n_rows+halo_j-1)                                  &amp;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;, csxi2_p(1-offy:rows+offy)                                       &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;, csxi2_v(-offy:n_rows+offy-1)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span> ::                                               &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  u(-offx:row_length+offx-1, 1-offy:rows+offy, model_levels)      &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;, v(1-offx:row_length+offx, -offy:n_rows+offy-1, model_levels)    &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;, w(1-offx:row_length+offx, 1-offy:rows+offy, 0:model_levels)     &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;, r_theta_levels (1-halo_i:row_length+halo_i,                     &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                  1-halo_j:rows+halo_j, 0:model_levels)           &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;, r_rho_levels (1-halo_i:row_length+halo_i,                       &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                1-halo_j:rows+halo_j, model_levels)               &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;, z0(row_length,rows)        <span class="comment">! roughness length</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">INTEGER</span> :: i, j, k              <span class="comment">! Loop counters</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">REAL</span> ::                                                           &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  delta_x                                                         &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="comment">! Sea level longitude spacing in m</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;, delta_y                                                         &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="comment">! Sea level latitude spacing in m</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;, delta_z(row_length, rows, model_levels)                         &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="comment">! Backward difference dz at rho points</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;, delta_zn(0:row_length+1,0:rows+1, model_levels)                 &amp;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="comment">! Backward difference dz at theta points</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="comment">! Note: k=1 is special - uses surface</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="comment">! Note: delta_zn(k) is correct for theta(k-1)</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;, delta_zn_u                                                      &amp;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="comment">! Average dz at theta points to u points (theta levels)</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;, delta_zn_v                                                      &amp;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="comment">! Average dz at theta points to v points (theta levels)</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;, rdz(row_length, rows, model_levels)                             &amp;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="comment">! 1/delta_z</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;, rdzn_u(0:row_length+1, 0:rows+1, model_levels)                  &amp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="comment">! 1/delta_zn_u</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;, rdzn_v(0:row_length+1, 0:rows+1, model_levels)                  &amp;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="comment">! 1/delta_zn_v</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;, rmlmax(row_length, rows)                                        &amp; , z(row_length, rows, model_levels)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">REAL</span> ::                                                           &amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  dx_rho                                                          &amp;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;, dx_theta_u                                                      &amp;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;, dx_rho_centre                                                   &amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;, dy_rho                                                          &amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;, dy_theta_v                                                      &amp;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;, dy_rho_centre                                                   &amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;, cx_rho                                                          &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;, cy_rho                                                          &amp;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <span class="comment">! reciprocal of dy_rho</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;, cx_theta_u(0:row_length+1, 0:rows+1, model_levels)              &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                    <span class="comment">! reciprocal of dx_theta_u</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;, cx_rho_centre(0:row_length+1, 0:rows+1, model_levels)           &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                    <span class="comment">! reciprocal of dx_rho_centre</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;, cy_theta_v(0:row_length+1, 0:n_rows+1, model_levels)            &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    <span class="comment">! reciprocal of dy_theta_v</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;, cy_rho_centre(0:row_length+1, 0:rows+1, model_levels)           &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                    <span class="comment">! reciprocal of dy_rho_centre</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;, cx2_rho(row_length, rows, model_levels)                         &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                    <span class="comment">! square of cx_rho</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;, cy2_rho(row_length, rows, model_levels) <span class="comment">! square of cy_rho</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">PARAMETER</span> :: smallp=1.e-14</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                   <span class="comment">! A small number</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordtype">REAL</span> ::                                                           &amp;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  weight_pl                                                       &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;, weight_min                                                      &amp;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;, weight_2pl                                                      &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;, weight_2min                                                     &amp;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;, ssq11                                          &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                      <span class="comment">! ii component of shear stress</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;, ssq22                                          &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                      <span class="comment">! jj component of shear stress</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;, ssq33                                          &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                      <span class="comment">! kk component of shear stress</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;, ssq13                                          &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                      <span class="comment">! ik component of shear stress</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;, ssq23                                          &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                      <span class="comment">! jk component of shear stress</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;, ssq12                                          &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                      <span class="comment">! ij component of shear stress</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;, ssq12up                                                         &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                      <span class="comment">! part of shear stress</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;, ssq12k(row_length, rows)                                        &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                      <span class="comment">! part of shear stress</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;, sum_sij(row_length, rows, model_levels - 1)                        <span class="comment">! sum of Sij (ssqij)</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EG_TURB_SMAGORINSKY&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;-<span class="comment">! Initialise variables</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;-<span class="keywordflow">DO</span> k= 1, model_levels</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      z(i,j,k) = r_theta_levels(i,j,k) - r_theta_levels(i,j,0)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keywordflow">  END DO</span>  <span class="comment">!  k= 1, model_levels</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  cx_rho_centre(:,:,:) = 0.</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  cy_rho_centre(:,:,:) = 0.</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordflow">DO</span> k = 1, model_levels</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordflow">DO</span> j = 1, rows           <span class="keywordflow">DO</span> i = 1, row_length + 1        dx_theta_u = ( <a class="code" href="namespacehoriz__grid__mod.xhtml#abf6cbd39dd51ee266ea887d71897caf3">intw_p2u</a>(i-1,1) * r_theta_levels(i-1,j,k) +        &amp;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                     <a class="code" href="namespacehoriz__grid__mod.xhtml#abf6cbd39dd51ee266ea887d71897caf3">intw_p2u</a>(i-1,2) * r_theta_levels(i,j,k) ) *        &amp;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                           ( xi1_p(i) - xi1_p(i-1) ) * csxi2_p(j)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      cx_theta_u(i,j,k) =  1./dx_theta_u<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;   <span class="keywordflow">DO</span> j = 1, rows + 1     <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      dy_theta_v = ( <a class="code" href="namespacehoriz__grid__mod.xhtml#acba39db8f95c55dae8728416a1fc10a2">intw_p2v</a>(j-1,1) * r_theta_levels(i,j-1,k) +        &amp;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                     <a class="code" href="namespacehoriz__grid__mod.xhtml#acba39db8f95c55dae8728416a1fc10a2">intw_p2v</a>(j-1,2) * r_theta_levels(i,j,k) ) *        &amp;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                             ( xi2_p(j) - xi2_p(j-1) )         cy_theta_v(i,j,k) =  1./dy_theta_v</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;   <span class="keywordflow">DO</span> j = 1, rows + 1</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordflow">DO</span> i = 1, row_length + 1</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;   <span class="comment">!      cx_rho_centre =  r_ave  !  use as work array</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      cx_rho_centre(i,j,k) =                                            &amp;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;         <a class="code" href="namespacehoriz__grid__mod.xhtml#acba39db8f95c55dae8728416a1fc10a2">intw_p2v</a>(j-1,2) * (<a class="code" href="namespacehoriz__grid__mod.xhtml#abf6cbd39dd51ee266ea887d71897caf3">intw_p2u</a>(i-1,2) * r_rho_levels(i,j,k) +     &amp;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                            <a class="code" href="namespacehoriz__grid__mod.xhtml#abf6cbd39dd51ee266ea887d71897caf3">intw_p2u</a>(i-1,1) * r_rho_levels(i-1,j,k) ) + &amp;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;         <a class="code" href="namespacehoriz__grid__mod.xhtml#acba39db8f95c55dae8728416a1fc10a2">intw_p2v</a>(j-1,1) * (<a class="code" href="namespacehoriz__grid__mod.xhtml#abf6cbd39dd51ee266ea887d71897caf3">intw_p2u</a>(i-1,2) * r_rho_levels(i,j-1,k) +   &amp;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                            <a class="code" href="namespacehoriz__grid__mod.xhtml#abf6cbd39dd51ee266ea887d71897caf3">intw_p2u</a>(i-1,1) * r_rho_levels(i-1,j-1,k) )</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">!      dy_rho_centre = r_ave * dphi_p(i,j)</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      dy_rho_centre = cx_rho_centre(i,j,k) * (xi2_p(j) - xi2_p(j-1))</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      cy_rho_centre(i,j,k) = 1. / dy_rho_centre</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <span class="keywordflow">DO</span> j = 1, rows + 1</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">DO</span> i = 1, row_length + 1</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;   <span class="comment">!      dx_rho_centre =  r_ave * dlambda_p(i) * cos_v_latitude(i,j)</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      dx_rho_centre =  cx_rho_centre(i,j,k) * (xi1_p(i) - xi1_p(i-1)) * &amp;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                               csxi2_v(j-1)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      cx_rho_centre(i,j,k) =  1. / dx_rho_centre</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      dx_rho = r_rho_levels(i,j,k) * ( xi1_u(i) - xi1_u(i-1) ) *        &amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                                  csxi2_p(j)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      dy_rho = r_rho_levels(i,j,k) * ( xi2_v(j) - xi2_v(j-1) )</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      cx_rho = 1./dx_rho</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      cy_rho =  1./dy_rho</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      cx2_rho(i,j,k) = cx_rho*cx_rho</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      cy2_rho(i,j,k) = cy_rho*cy_rho<span class="keywordflow">         END DO</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keywordflow">END DO</span>   <span class="comment">!  k = 1, model_levels</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">! Vertical grid spacings used in calculation of rate of strain term</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    delta_z(i,j,1) = r_theta_levels(i,j,1) - r_theta_levels(i,j,0)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    rdz(i,j,1) = 1./delta_z(i,j,1)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">! Note: delta_zn(k) is at theta(k-1)</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordflow">DO</span> j = 0, rows+1</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="keywordflow">DO</span> i = 0, row_length+1</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    delta_zn(i,j,1) = r_rho_levels(i,j,1) - r_theta_levels(i,j,0)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordflow">DO</span> k = 2, model_levels</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      delta_z(i,j,k) = r_theta_levels(i,j,k) - r_theta_levels(i,j,k-1)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      rdz(i,j,k) = 1./delta_z(i,j,k)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">! Note: delta_zn(k) is at theta(k-1)</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  <span class="keywordflow">DO</span> j = 0, rows+1</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keywordflow">DO</span> i = 0, row_length+1</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      delta_zn(i,j,k) = r_rho_levels(i,j,k) - r_rho_levels(i,j,k-1)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordflow">END DO</span>  <span class="comment">! k = 2, model_levels</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">! Note: delta_zn_u/v(k) is at theta(k-1)</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keywordflow">DO</span> k = 1, model_levels</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordflow">DO</span> i = 1, row_length + 1</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;      delta_zn_u = <a class="code" href="namespacehoriz__grid__mod.xhtml#abf6cbd39dd51ee266ea887d71897caf3">intw_p2u</a>(i-1,1) * delta_zn(i-1,j,k) +                &amp;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                   <a class="code" href="namespacehoriz__grid__mod.xhtml#abf6cbd39dd51ee266ea887d71897caf3">intw_p2u</a>(i-1,2) * delta_zn(i,j,k)</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      rdzn_u(i,j,k) = 1./delta_zn_u</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;   <span class="keywordflow">DO</span> j = 1, rows + 1</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;      delta_zn_v = <a class="code" href="namespacehoriz__grid__mod.xhtml#acba39db8f95c55dae8728416a1fc10a2">intw_p2v</a>(j-1,2) * delta_zn(i,j,k) +                  &amp;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                   <a class="code" href="namespacehoriz__grid__mod.xhtml#acba39db8f95c55dae8728416a1fc10a2">intw_p2v</a>(j-1,1) * delta_zn(i,j-1,k)</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      rdzn_v(i,j,k) = 1./delta_zn_v</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keywordflow"> END DO</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">! As in the LEM code</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">! _Now calculate half-squared strain rate SSQ on w-points</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">! _CX=1./DX, CY=1./DY, RDZ(K)=1./DZ(K),</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">!       RDZN(K) =1./DZN(K)</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">! _SSQ= 0.5*^^DU_I/DX_J+DU_J/DX_I^^**2</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">! _SSQIJ= (DU_I/DX_J+DU_J/DX_I)**2</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">! _Hence SSQ= SUM_sij(I,J) {0.5*(SSQIJ)}</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">! _Note that for a simple shear S, SSQ=S**2</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">!   (as in the notation of Mason and Callen 1986)</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;k = 1</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    ssq12k(i,j) = <a class="code" href="namespacehoriz__grid__mod.xhtml#a0213811b0c3f7e306a47a8520640b709">intw_v2p</a>(j,1) * <a class="code" href="namespacehoriz__grid__mod.xhtml#a45a8483693f20c176723c650a683e093" title="Linear Interpolation weights. ">intw_u2p</a>(i,1) *                       &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        ((u(i-1,j,k)-u(i-1,j-1,k)) * cy_rho_centre(i,j,k)               &amp;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        +(v(i,j-1,k)-v(i-1,j-1,k)) * cx_rho_centre(i,j,k) )**2 +        &amp;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                  <a class="code" href="namespacehoriz__grid__mod.xhtml#a0213811b0c3f7e306a47a8520640b709">intw_v2p</a>(j,1) * <a class="code" href="namespacehoriz__grid__mod.xhtml#a45a8483693f20c176723c650a683e093" title="Linear Interpolation weights. ">intw_u2p</a>(i,2) *                       &amp;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        ((u(i,j,k)-u(i,j-1,k)) * cy_rho_centre(i+1,j,k)                 &amp;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        +(v(i+1,j-1,k)-v(i,j-1,k)) * cx_rho_centre(i+1,j,k) )**2 +      &amp;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                  <a class="code" href="namespacehoriz__grid__mod.xhtml#a0213811b0c3f7e306a47a8520640b709">intw_v2p</a>(j,2) * <a class="code" href="namespacehoriz__grid__mod.xhtml#a45a8483693f20c176723c650a683e093" title="Linear Interpolation weights. ">intw_u2p</a>(i,1) *                       &amp;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        ((u(i-1,j+1,k)-u(i-1,j,k)) * cy_rho_centre(i,j+1,k)             &amp;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        +(v(i,j,k)-v(i-1,j,k)) * cx_rho_centre(i,j+1,k) )**2 +          &amp;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                  <a class="code" href="namespacehoriz__grid__mod.xhtml#a0213811b0c3f7e306a47a8520640b709">intw_v2p</a>(j,2) * <a class="code" href="namespacehoriz__grid__mod.xhtml#a45a8483693f20c176723c650a683e093" title="Linear Interpolation weights. ">intw_u2p</a>(i,2) *                       &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        ((u(i,j+1,k)-u(i,j,k)) * cy_rho_centre(i+1,j+1,k)               &amp;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        +(v(i+1,j,k)-v(i,j,k)) * cx_rho_centre(i+1,j+1,k) )**2</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordflow">  END DO</span>   <span class="comment">! on i</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordflow">END DO</span>    <span class="comment">! on j</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keywordflow">DO</span> k = 1, model_levels -1</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;         <span class="comment">! Vertical weights</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;      weight_pl = (r_theta_levels(i,j,k) - r_rho_levels(i,j,k))/        &amp;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                  (r_rho_levels(i,j,k+1) - r_rho_levels(i,j,k))</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;      weight_min = (r_rho_levels(i,j,k+1) - r_theta_levels(i,j,k))/     &amp;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                   (r_rho_levels(i,j,k+1) - r_rho_levels(i,j,k))</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;      weight_2pl = delta_z(i,j,k)/(delta_z(i,j,k)+delta_z(i,j,k+1))</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      weight_2min= delta_z(i,j,k+1)/(delta_z(i,j,k)+delta_z(i,j,k+1))</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">! ssq11 = 2 * backward difference (du/dx)^2 averaged to w point</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;      ssq11 =  2.0*(                                                    &amp;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        weight_pl*cx2_rho(i,j,k+1)*(u(i,j,k+1)-u(i-1,j,k+1))**2 +       &amp;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        weight_min*cx2_rho(i,j,k)*(u(i,j,k)-u(i-1,j,k))**2   )</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">! ssq22 = 2 * backward difference (dv/dy)^2 averaged to w point       ssq22 = 2.0*(                                                     &amp;</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        weight_pl*cy2_rho(i,j,k+1)*(v(i,j,k+1)-v(i,j-1,k+1))**2 +       &amp;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        weight_min*cy2_rho(i,j,k)*(v(i,j,k)-v(i,j-1,k))**2  )</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">! ssq33 =  2 * backward difference (dw/dz)^2 averaged to w point      ssq33 =  2.0*(                                                    &amp;</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        weight_2pl*((w(i,j,k)-w(i,j,k-1))*rdz(i,j,k))**2 +              &amp;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        weight_2min*((w(i,j,k+1)-w(i,j,k))*rdz(i,j,k+1))**2  )</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">! ssq13 =  (du/dz+dw/dx)^2 on u/theta averaged u:(i+1,i) to w point! ssq31 = ssq13</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;      ssq13 = <a class="code" href="namespacehoriz__grid__mod.xhtml#a45a8483693f20c176723c650a683e093" title="Linear Interpolation weights. ">intw_u2p</a>(i,1) * ( (u(i-1,j,k+1)-u(i-1,j,k)) *             &amp;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                                                  rdzn_u(i,j,k+1) +     &amp;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                     (w(i,j,k)-w(i-1,j,k)) * cx_theta_u(i,j,k) )**2 +   &amp;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;              <a class="code" href="namespacehoriz__grid__mod.xhtml#a45a8483693f20c176723c650a683e093" title="Linear Interpolation weights. ">intw_u2p</a>(i,2) * ( (u(i,j,k+1) - u(i,j,k)) *               &amp;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                                                  rdzn_u(i+1,j,k+1) +   &amp;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                     (w(i+1,j,k)-w(i,j,k)) * cx_theta_u(i+1,j,k) )**2</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                        <span class="comment">! weighted averaging ssq13 over 2 points</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">! ssq23 =  (dw/dy+dv/dz)^2 on v/theta averaged v:(j-1,j) to w point! Note: rdzn_u/v(k) is at theta(k-1)</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">!**Needs rdzn_v(i,j-1:j,k+1),cy_theta_v(i,j-1,k)</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">! ssq32 = ssq23</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;      ssq23 = <a class="code" href="namespacehoriz__grid__mod.xhtml#a0213811b0c3f7e306a47a8520640b709">intw_v2p</a>(j,2) * ( (w(i,j+1,k)-w(i,j,k)) *                 &amp;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                                                  cy_theta_v(i,j+1,k) + &amp;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                  (v(i,j,k+1) - v(i,j,k)) * rdzn_v(i,j+1,k+1))**2 +     &amp;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;              <a class="code" href="namespacehoriz__grid__mod.xhtml#a0213811b0c3f7e306a47a8520640b709">intw_v2p</a>(j,1) * ( (w(i,j,k)-w(i,j-1,k)) *                 &amp;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                                                  cy_theta_v(i,j,k) +   &amp;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                  (v(i,j-1,k+1) - v(i,j-1,k)) * rdzn_v(i,j,k+1))**2</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                       <span class="comment">!  weighted averaging ssq23 over 2 points</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">! define points e(i,j) to be at u(i,j+1/2) and v(i+1/2,j)</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">! so a backward difference du/dy is at e(i-1,j)</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">! and a backward difference dv/dx is at e(i-1,j)!</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">! ssq12 = (du/dy+dv/dx)^2 on pi/rho averaged!  ! ssq21 = ssq12</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;      ssq12up = <a class="code" href="namespacehoriz__grid__mod.xhtml#a0213811b0c3f7e306a47a8520640b709">intw_v2p</a>(j,1) * <a class="code" href="namespacehoriz__grid__mod.xhtml#a45a8483693f20c176723c650a683e093" title="Linear Interpolation weights. ">intw_u2p</a>(i,1) *                         &amp;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">! (du/dy+dv/dx)^2 on rho level at rho_centre(i,j)        ((u(i-1,j,k+1)-u(i-1,j-1,k+1)) * cy_rho_centre(i,j,k+1)         &amp;</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        +(v(i,j-1,k+1)-v(i-1,j-1,k+1)) * cx_rho_centre(i,j,k+1) )**2    &amp;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">! (du/dy+dv/dx)^2 on rho level at  rho_centre(i+1,j)                      + intw_v2p(j,1) * intw_u2p(i,2) *                         &amp;</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        ((u(i,j,k+1)-u(i,j-1,k+1))     * cy_rho_centre(i+1,j,k+1)       &amp;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        +(v(i+1,j-1,k+1)-v(i,j-1,k+1)) * cx_rho_centre(i+1,j,k+1) )**2  &amp;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">! (du/dy+dv/dx)^2 on rho level at  rho_centre(i,j+1)                      + intw_v2p(j,2) * intw_u2p(i,1) *                         &amp;</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        ((u(i-1,j+1,k+1)-u(i-1,j,k+1)) * cy_rho_centre(i,j+1,k+1)       &amp;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        +(v(i,j,k+1)-v(i-1,j,k+1)) *     cx_rho_centre(i,j+1,k+1) )**2  &amp;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">! (du/dy+dv/dx)^2 on rho level at  rho_centre(i+1,j+1)                      + intw_v2p(j,2) * intw_u2p(i,2) *                         &amp;</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        ((u(i,j+1,k+1)-u(i,j,k+1)) * cy_rho_centre(i+1,j+1,k+1)         &amp;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        +(v(i+1,j,k+1)-v(i,j,k+1)) * cx_rho_centre(i+1,j+1,k+1) )**2</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;      ssq12 = weight_pl * ssq12up + weight_min * ssq12k(i,j)</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;      ssq12k(i,j) = ssq12up</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;      sum_sij(i,j,k) = ssq11 + ssq22 + ssq33 +                          &amp;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                                   ssq13 + ssq23 + ssq12 + smallp</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keywordflow">    END DO</span>   <span class="comment">! on i</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="keywordflow">  END DO</span>    <span class="comment">! on j</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keywordflow">END DO</span> <span class="comment">! k = 1, model_levels -1</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keywordflow">DO</span> k = 1, model_levels - 1</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;  <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;      <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#a1ab664ad1be379895dc51d4e026ab38c">shear</a>(i,j,k) = sqrt(sum_sij(i,j,k)) <span class="comment">! already been *0.5 in ssq</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="keywordflow">END DO</span> <span class="comment">! k = 1, model_levels - 1</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment">! Horizontal grid spacings used in calculation of mixing length and</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment">! maximum diffusivity.</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<a class="code" href="namespacetimestep__mod.xhtml#a72dfdf1f45a27375b429867acc2430aa">recip_timestep</a>=1.0/<a class="code" href="namespacetimestep__mod.xhtml#af5057870e73925950dded81acfffb0d6">timestep</a></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;   <span class="comment">!   delta_y = Earth_radius * dphi_v(i,j-1) ! 2A     delta_y = h2_p_eta(i,j,0) * ( xi2_v(j) - xi2_v(j-1))</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">!   delta_x = Earth_radius * dlambda_u(i-1) * cos_v_latitude(i,j) ! 2A</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    delta_x = <a class="code" href="namespacemetric__terms__mod.xhtml#a479e5a0ca10e25ef6e86a981da466240">h1_p_eta</a>(i,j,0) * ( xi1_u(i) - xi1_u(i-1))</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keywordflow">IF</span> (<a class="code" href="namespaceturb__diff__mod.xhtml#ac5cd89fb153d69bf0907cd1084ac497d">l_subfilter_blend</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;      <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#afb0e9b50fc41a119b145dbc9146b5186">delta_smag</a>(i,j) = min(delta_x, delta_y)</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;      <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#afb0e9b50fc41a119b145dbc9146b5186">delta_smag</a>(i,j) = max(delta_x, delta_y)</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="keywordflow">    END IF</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    rmlmax(i,j) = <a class="code" href="namespaceturb__diff__mod.xhtml#ad16cdc02d60aec936a06bc65fc2161bc">mix_factor</a> * <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#afb0e9b50fc41a119b145dbc9146b5186">delta_smag</a>(i,j)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">! maximum diffusion coefficient allowed in this run</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#a3fc1bafae5637305bdbde3922e937788">max_diff</a>(i,j) = 0.25 * <a class="code" href="namespacetimestep__mod.xhtml#a72dfdf1f45a27375b429867acc2430aa">recip_timestep</a> * <a class="code" href="namespaceturb__diff__mod.xhtml#a0f3b2bb7e4e0f07490a86b012e633446">diff_factor</a> /               &amp;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                                      ( 1.0 / (delta_x * delta_x) +     &amp;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                                        1.0 / (delta_y * delta_y) )<span class="keywordflow">     END DO</span>  <span class="comment">! on i</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="keywordflow">END DO</span>  <span class="comment">! on j</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="keywordflow">DO</span> k = 1, model_levels-1   <span class="keywordflow">DO</span> j = 1, rows</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keywordflow">DO</span> i = 1, row_length</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;      <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#a7b78d99f3e5842e4a071a9a2ff4ae3eb">rneutml_sq</a>(i,j,k) = 1. / (                                        &amp;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;             1./( vkman*(z(i,j,k) + z0(i,j)) )**2 + 1./rmlmax(i,j)**2 )</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;      <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#afe95542ff5ed7aa55f242862f48e7138" title="Subgrid turbulence scheme arrays. ">visc_m</a>(i,j,k)    = <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#a1ab664ad1be379895dc51d4e026ab38c">shear</a>(i,j,k)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;      <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#afa2ef8cb137e4ad57b7be85c961b7edc">visc_h</a>(i,j,k)    = <a class="code" href="namespaceturb__diff__ctl__mod.xhtml#a1ab664ad1be379895dc51d4e026ab38c">shear</a>(i,j,k)</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;      <span class="comment">! visc are now S and still need to be multiplied by</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;      <span class="comment">! stability functions and lambda^2 (done in BL)</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;EG_TURB_SMAGORINSKY&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="eg__turb__smagorinsky_8f90.xhtml#a7073b1bf775f8cb2e1e100a00fc42153">eg_turb_smagorinsky</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
