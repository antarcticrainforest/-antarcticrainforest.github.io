<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/aerosols/sulphr.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_5bbaa72d56cd8722d355a59b2a241e50.xhtml">aerosols</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">sulphr.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="sulphr_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespacesulphr__mod.xhtml">    1</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespacesulphr__mod.xhtml">sulphr_mod</a></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespacesulphr__mod.xhtml#ad7687a4e5f1228f796affac528e8e480">sulphr</a>(                                                 &amp;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  ! Arguments IN</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  halo_i, halo_j, off_x, off_y,                                    &amp;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  row_length, rows,                                                &amp;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  model_levels, wet_model_levels,                                  &amp;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  theta_field_size,                                                &amp;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  tstep,                                                           &amp;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  cloudf, cosza2d,                                                 &amp;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  p, t, q, qcl, qcf,                                               &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  oh_conc, h2o2, ho2_conc, o3,                                     &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  n_droplet,                                                       &amp;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  l_sulpc_dms, l_sulpc_newdms,                                     &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  l_sulpc_ozone, l_sulpc_so2_o3_nonbuffered,                       &amp;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  l_sulpc_nh3,                                                     &amp;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  l_sulpc_online_oxidants, l_sulpc_2_way_coupling,                 &amp;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  ! Arguments IN/OUT</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  so2, dms, so4_ait, so4_acc, so4_dis,                             &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  nh3, h2o2_mxr,                                                   &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  ! Arguments OUT</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  msa, nh3_dep,                                                    &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  f_dms_to_so2, f_dms_to_so4, f_dms_to_msa,                        &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  deltas_dry, deltas_wet, deltas_wet_o3,                           &amp;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  deltas_tot, deltas_dms,                                          &amp;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  deltas_evap, deltas_nucl, deltas_diffuse,                        &amp;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  deltas_merge, deltas_coag, psi )</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="namespacesulphr__mod.xhtml#ad7687a4e5f1228f796affac528e8e480">   32</a></span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacevectlib__mod.xhtml">vectlib_mod</a><span class="keywordtype">, ONLY</span> :                                                 &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <a class="code" href="namespacevectlib__mod.xhtml#a48f1e886f1f36cca750b59042bc8882e">log_v</a>,  <a class="code" href="namespacevectlib__mod.xhtml#ac137092b04949de8f6d44782d43343d6">rtor_v</a></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keywordtype">USE </span>earth_constants_mod<span class="keywordtype">, ONLY</span>: g</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">USE </span>atmos_constants_mod<span class="keywordtype">, ONLY</span>: r</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">USE </span>water_constants_mod<span class="keywordtype">, ONLY</span>: rho_water</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">USE </span>conversions_mod<span class="keywordtype">, ONLY</span>: pi</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">INTEGER(kind=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">INTEGER(kind=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">REAL(kind=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keywordtype">INTEGER</span> :: row_length           <span class="comment">!no. of pts along a row</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordtype">INTEGER</span> :: rows                 <span class="comment">!no. of rows</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">INTEGER</span> :: model_levels         <span class="comment">!no. of model levels</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keywordtype">INTEGER</span> :: wet_model_levels     <span class="comment">!no. of wet model levels</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">INTEGER</span> :: halo_i               <span class="comment">!EW halo size</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keywordtype">INTEGER</span> :: halo_j               <span class="comment">!NS halo size</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordtype">INTEGER</span> :: off_x</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordtype">INTEGER</span> :: off_y</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">INTEGER</span> :: theta_field_size</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#include &quot;c_sulchm.h&quot;</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;c_sulcond.h&quot;</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">REAL</span> :: tstep                        <span class="comment">!chemistry tstep: LE physics tstep</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordtype">REAL</span> :: cloudf(row_length,rows,wet_model_levels)   <span class="comment">!cloud fraction (0-1)</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keywordtype">REAL</span> :: qcl(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,                 &amp;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            wet_model_levels)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keywordtype">REAL</span> :: qcf(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,                 &amp;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            wet_model_levels)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keywordtype">REAL</span> :: q(1-halo_i:row_length+halo_i, 1-halo_j:rows+halo_j,wet_model_levels)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordtype">REAL</span> :: cosza2d(row_length,rows)                   <span class="comment">!cos zenith angle</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keywordtype">REAL</span> :: p(1-off_x:row_length+off_x,1-off_y:rows+off_y, model_levels)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keywordtype">REAL</span> :: t(row_length,rows,model_levels)            <span class="comment">!temperature</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keywordtype">REAL</span> :: oh_conc(row_length,rows,model_levels)      <span class="comment">!OH concn</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordtype">REAL</span> :: ho2_conc(row_length,rows,model_levels)     <span class="comment">!HO2 concn</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">! For prescribed oxidants, this is the H2O2 max limit.! For online oxidants, it is the H2O2 mmr from UKCA.</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordtype">REAL</span> :: h2o2(row_length,rows,model_levels)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordtype">REAL</span> :: o3(row_length,rows,model_levels)            <span class="comment">!O3 mmr</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordtype">REAL</span> :: n_droplet(row_length, rows, wet_model_levels) <span class="comment">!Drop concentration</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_sulpc_dms          <span class="comment">!T if DMS chemistry required</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_sulpc_newdms       <span class="comment">!T if new DMS scheme req&#39;d, else old scheme used</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_sulpc_ozone        <span class="comment">!T if O3 oxidn required</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">! l_sulpc_so2_o3_nonbuffered T if SO2+O3 reaction is NOT to be buffered by NH3.</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_sulpc_so2_o3_nonbuffered</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">! l_sulpc_nh3 T if NH3 buffering used (always T if L_SULPC_OZONE is T)</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_sulpc_nh3</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_sulpc_online_oxidants  <span class="comment">! T if oxidants from UKCA are used</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">! l_sulpc_2_way_coupling T if coupling to UKCA is two way,! i.e. if depleted oxidants are passed back to UKCA.</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordtype">LOGICAL</span> :: l_sulpc_2_way_coupling</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">! Arguments with intent IN/OUT:</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordtype">REAL</span> :: so2(1-off_x:row_length+off_x, 1-off_y:rows+off_y,                    &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            model_levels)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keywordtype">REAL</span> :: dms(1-off_x:row_length+off_x, 1-off_y:rows+off_y,                    &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;              model_levels)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordtype">REAL</span> :: so4_ait(1-off_x:row_length+off_x, 1-off_y:rows+off_y,                &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;              model_levels)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordtype">REAL</span> :: so4_acc(1-off_x:row_length+off_x, 1-off_y:rows+off_y,                &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;              model_levels)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keywordtype">REAL</span> :: so4_dis(1-off_x:row_length+off_x, 1-off_y:rows+off_y,                &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;              model_levels)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keywordtype">REAL</span> :: nh3(1-off_x:row_length+off_x, 1-off_y:rows+off_y,                    &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;              model_levels)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordtype">REAL</span> :: h2o2_mxr(1-off_x:row_length+off_x, 1-off_y:rows+off_y,               &amp;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;              model_levels)</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">! Arguments with intent OUT (diagnostics):</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keywordtype">REAL</span> :: msa(row_length,rows,model_levels)           <span class="comment">!mmr S in MSA</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordtype">REAL</span> :: f_dms_to_so2(row_length,rows,model_levels)  <span class="comment">!frac oxid DMS to SO2</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keywordtype">REAL</span> :: f_dms_to_so4(row_length,rows,model_levels)  <span class="comment">!frac oxid DMS to SO4</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keywordtype">REAL</span> :: f_dms_to_msa(row_length,rows,model_levels)  <span class="comment">!frac oxid DMS to MSA</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keywordtype">REAL</span> :: nh3_dep(row_length,rows,model_levels)       <span class="comment">!NH3 depleted</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keywordtype">REAL</span> :: deltas_dry(row_length,rows,model_levels)    <span class="comment">!SO2 dry ox per ts</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keywordtype">REAL</span> :: deltas_wet(row_length,rows,model_levels)    <span class="comment">!SO2 wet ox by H2O2</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keywordtype">REAL</span> :: deltas_wet_o3(row_length,rows,model_levels) <span class="comment">!SO2 wet ox by O3</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keywordtype">REAL</span> :: deltas_tot(row_length,rows,model_levels)    <span class="comment">!total SO2 ox per ts</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keywordtype">REAL</span> :: deltas_dms(row_length,rows,model_levels)    <span class="comment">!DMS dry ox per ts</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">!SO4_DIS released by evapn of cloud droplets to SO4_ACC per ts</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordtype">REAL</span> :: deltas_evap(row_length,rows,model_levels)  <span class="comment">!SO4_ACC transfd by nucleation to SO4_DIS per ts</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keywordtype">REAL</span> :: deltas_nucl(row_length,rows,model_levels)</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">!SO4_AIT transfd to SO4_DIS by diffusion per ts</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keywordtype">REAL</span> :: deltas_diffuse(row_length,rows,model_levels)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">!SO4_AIT transfd by coagulation to SO4_ACC per ts</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keywordtype">REAL</span> :: deltas_coag(row_length,rows,model_levels)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">!total SO4_AIT transfd per ts</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keywordtype">REAL</span> :: deltas_tot_ait(row_length,rows,model_levels)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">!fraction of dry ox SO2 becoming SO4_AIT</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordtype">REAL</span> :: psi(row_length,rows,model_levels)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">! Local variables:</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keywordtype">INTEGER</span> :: i,j,k               <span class="comment">!loop variables</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordtype">REAL</span> :: dryrate                <span class="comment">!rate of dry oxidn SO2 in 1/s</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keywordtype">REAL</span> :: wetrate                <span class="comment">!rate of wet oxidn SO2 in 1/s</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keywordtype">REAL</span> :: dmsrate                <span class="comment">!rate of dry oxidn DMS in 1/s</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keywordtype">REAL</span> :: clearf(row_length,rows,wet_model_levels)     <span class="comment">!clear air fraction</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keywordtype">REAL</span> :: qctotal(row_length,rows,wet_model_levels)    <span class="comment">!tot condensed water</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keywordtype">REAL</span> :: rho_air(row_length,rows,model_levels)        <span class="comment">!air density kg/m3</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keywordtype">REAL</span> :: air_conc(row_length,rows,model_levels)       <span class="comment">!air concn  mcls/cc</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keywordtype">REAL</span> :: viscos_air(row_length,rows,model_levels)     <span class="comment">!air viscosity (kg/m/s)</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keywordtype">REAL</span> :: mean_freep(row_length,rows,model_levels)     <span class="comment">!mean free path of air molecules (m)</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordtype">REAL</span> :: rel_hum(row_length,rows,model_levels)        <span class="comment">!relative humidity(0-1)</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordtype">REAL</span> :: p_array(row_length,rows,model_levels)        <span class="comment">!pressure, no halo</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keywordtype">REAL</span> :: so2_array(row_length,rows,model_levels)      <span class="comment">!SO2, no halo</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordtype">REAL</span> :: so4_acc_array(row_length,rows,model_levels)  <span class="comment">!SO4_ACC,no halo</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keywordtype">REAL</span> :: so4_ait_array(row_length,rows,model_levels)  <span class="comment">!SO4_AIT,no halo</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordtype">REAL</span> :: so4_dis_array(row_length,rows,model_levels)  <span class="comment">!SO4_DIS,no halo</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keywordtype">REAL</span> :: qcl_array(row_length,rows,wet_model_levels)  <span class="comment">!QCL, no halo</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordtype">REAL</span> :: qcf_array(row_length,rows,wet_model_levels)  <span class="comment">!QCF, no halo</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordtype">REAL</span> :: q_array(row_length,rows,wet_model_levels)    <span class="comment">!Q, no halo</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordtype">REAL</span> :: h2o2_mxr_array(row_length,rows,model_levels) <span class="comment">!H2O2_MXR,no halo</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordtype">REAL</span> :: nh3_array(row_length,rows,model_levels)      <span class="comment">!NH3, no halo</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordtype">REAL</span> :: dms_array(row_length,rows,model_levels)      <span class="comment">!DMS, no halo</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">! Removal of oxidants (for 2-way coupling with UKCA):</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keywordtype">REAL</span> :: delta_oh_dms(row_length,rows,model_levels)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                <span class="comment">! Removal of OH in one timestep through reaction with DMS</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keywordtype">REAL</span> :: delta_o3_dms(row_length,rows,model_levels)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                <span class="comment">! Removal of O3 in one timestep through reaction with DMS</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordtype">REAL</span> :: delta_ho2_dms(row_length,rows,model_levels)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                <span class="comment">! Removal of HO2 in one timestep through reaction with DMS</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keywordtype">REAL</span> :: delta_oh_so2(row_length,rows,model_levels)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                <span class="comment">! Removal of OH in one timestep through reaction with SO2</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordtype">REAL</span> :: delta_h2o2_so2(row_length,rows,model_levels)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                <span class="comment">! Removal of H2O2 in one timestep through reaction with SO2</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keywordtype">REAL</span> :: delta_o3_so2(row_length,rows,model_levels)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                <span class="comment">! Removal of O3 in one timestep through reaction with SO2</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keywordtype">REAL</span> :: delta_oh_tot(row_length,rows,model_levels)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keywordtype">REAL</span> :: delta_ho2_tot(row_length,rows,model_levels)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keywordtype">REAL</span> :: delta_o3_tot(row_length,rows,model_levels)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keywordtype">REAL</span> :: delta_h2o2_tot(row_length,rows,model_levels)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keywordtype">REAL</span> :: evaptime         <span class="comment">! timescale for cloud droplets to evaporate</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keywordtype">REAL</span> :: nuctime          <span class="comment">! timescale for particles to enter a cloud and nucleate.</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordtype">REAL</span> :: diffuse_tau      <span class="comment">! diffusive lifetime of Aitken mode particles once they enter a cloud</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordtype">REAL</span> :: rho_cuberoot     <span class="comment">! cube root of density of water.</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keywordtype">REAL</span> :: diffuse_tauratio <span class="comment">! CLOUDTAU/DIFFUSE_TAU</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keywordtype">REAL</span> :: probdiff_inv     <span class="comment">! inverse of probability of a particle being  diffusionallly scavenged in a cloud.</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordtype">REAL</span> :: probdiff_fn1     <span class="comment">! PROBDIFF_INV - 0.5</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordtype">REAL</span> :: probdiff_fn2     <span class="comment">! PROBDIFF_INV*EXP(DIFFUSE_TAURATIO*0.5)</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keywordtype">REAL</span> :: probdiff_cloud   <span class="comment">! probability of an Aitken mode particle being in cloud at the start of a step.</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordtype">REAL</span> :: probdiff_clear   <span class="comment">! probability of an Aitken mode particle being in clear air at the start of a step.</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordtype">REAL</span> :: lambda_aitken    <span class="comment">! ratio of concentrations of Aitken mode particles in cloudy to clear air.</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordtype">REAL</span> :: diffrate         <span class="comment">! rate of diffusive capture of Aitken mode particles</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keywordtype">REAL</span> :: w_conc           <span class="comment">! H2O concentration in molecules/cc</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordtype">REAL</span> :: k_so2_oh         <span class="comment">! reaction rate for SO2+OH  cc/mcl/s</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordtype">REAL</span> :: k_so2oh_lo       <span class="comment">! low_pressure reaction rate limit</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="keywordtype">REAL</span> :: k_limrat         <span class="comment">! ratio  reaction rate limits (LO/HI)</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keywordtype">REAL</span> :: k_ho2_ho2        <span class="comment">! reaction rate for HO2 to H2O2</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keywordtype">REAL</span> :: h2o2_con_to_mxr  <span class="comment">! factor = RMM_H2O2/AVOGADRO/AIR DENSITY</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keywordtype">REAL</span> :: o2_conc          <span class="comment">! O2 concentration in molecules/cc</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keywordtype">REAL</span> :: o3_conc          <span class="comment">! O3 concentration in molecules/cc</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keywordtype">REAL</span> :: k1_dms_oh        <span class="comment">! reaction rate for DMS+OH via path 1</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keywordtype">REAL</span> :: k2_dms_oh        <span class="comment">! reaction rate for DMS+OH via path 2</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keywordtype">REAL</span> :: k3_ch3so2        <span class="comment">! thermal decomposition rate for CH3SO2</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keywordtype">REAL</span> :: k6_ch3so3        <span class="comment">! thermal decomposition rate for CH3SO3</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordtype">REAL</span> :: f_dms_to_ch3so2  <span class="comment">! fraction of oxidised DMS becoming CH3SO2</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keywordtype">REAL</span> :: f_dms_to_ch3so3  <span class="comment">! fraction of oxidised DMS becoming CH3SO3</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordtype">REAL</span> :: f_ch3so2_to_so2  <span class="comment">! fraction of CH3SO2 becoming SO2</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keywordtype">REAL</span> :: f_ch3so3_to_so4  <span class="comment">! fraction of CH3SO3 becoming SO4</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keywordtype">REAL</span> :: fac2,fac3              <span class="comment">!for interp between LO and HI K_SO2OH</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">!                                 !    reaction rate limits</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">! dummy variables to assist wet oxidn calculation</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keywordtype">REAL</span> :: term1 <span class="keywordtype">REAL</span> :: term2</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keywordtype">REAL</span> :: denom</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">! dummy variables to assist calculation of diffusive capture.</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keywordtype">REAL</span> :: term3 <span class="keywordtype">REAL</span> :: term4 <span class="keywordtype">REAL</span> :: tauratio    <span class="comment">! CLOUDTAU/CHEMTAU</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keywordtype">REAL</span> :: hftaurat    <span class="comment">! CLOUDTAU/2*CHEMTAU</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordtype">REAL</span> :: probox_inv  <span class="comment">! 1/probability of oxidn in cloud</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keywordtype">REAL</span> :: probox_fn1  <span class="comment">! PROBOX_INV - 0.5</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keywordtype">REAL</span> :: probox_fn2  <span class="comment">! PROBOX_INV * EXP(-HFTAURAT)</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keywordtype">REAL</span> :: prob_cloud  <span class="comment">! probability SO2 starts in cloud</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="keywordtype">REAL</span> :: prob_clear  <span class="comment">! probability SO2 starts in clear air</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keywordtype">REAL</span> :: lamda       <span class="comment">! ratio SO2 in cloud/clear air</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordtype">REAL</span> :: h2o2_rep    <span class="comment">! replenished H2O2</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">!     Extra variables for improved diffusional scavenging.</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keywordtype">REAL</span> ::  diffusivity      <span class="comment">!Mean diffusion coefficent of Aitken particles</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keywordtype">REAL</span> ::  viscosity_air    <span class="comment">!Dynamic viscosity of air (kg m-1 s-1).</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keywordtype">REAL</span> ::  mean_free_path   <span class="comment">!Mean free path of air molecules.</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keywordtype">REAL</span> ::  knudsen_weber    <span class="comment">!Expression related to the Cunningham slip</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">!                          flow correction to the diffusion coefficient</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keywordtype">REAL</span> ::  log_sigma_ait    <span class="comment">!Natural log of SIGMA_AIT (in C_SULCHM).</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keywordtype">REAL</span> ::  sq_log_sigma_ait <span class="comment">!Square of the previous parameter.</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keywordtype">REAL</span> ::  diff_con1        <span class="comment">!Term in diffusion coefficent formula.</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keywordtype">REAL</span> ::  diff_con2        <span class="comment">!Term in diffusion coefficent formula.</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keywordtype">REAL</span> ::  pec              <span class="comment">!Quantity associated with (not =) Peclet number</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keywordtype">REAL</span> ::  work_radius      <span class="comment">!Variable linked to average droplet radius.</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keywordtype">REAL</span> ::  scavcd           <span class="comment">!Scavenging coefficient for in-cloud</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                          <span class="comment">!advective-diffusive removal of Aitken mode particles</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">! Extra variables for coagulation code</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keywordtype">REAL</span> :: coagrate         <span class="comment">!Rate of transfer of SO4_AIT to SO4_ACC</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">!                         due to coagulation (kg kg-1 s-1)</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keywordtype">REAL</span> :: alpha            <span class="comment">!Hygroscopic growth parameter in</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                         <span class="comment">!Fitzgerald&#39;s scheme (assume BETA=1)</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keywordtype">REAL</span> :: sum_iy           <span class="comment">!Sum of COAG_QI_ functions in coag calc</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keywordtype">REAL</span> :: sum_iz           <span class="comment">!              &quot;</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keywordtype">REAL</span> :: yfac             <span class="comment">!Coefficient used in coag calcn</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keywordtype">REAL</span> :: zfac             <span class="comment">!         &quot;</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">! COAG_QI_ functions</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keywordtype">REAL</span> :: coag_qi_1        <span class="comment">!COAG_QI for A=1,    B=0</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keywordtype">REAL</span> :: coag_qi_2        <span class="comment">!   &quot;        A=4/3,  B=-1/3</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keywordtype">REAL</span> :: coag_qi_3        <span class="comment">!   &quot;        A=2/3,  B=1/3</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keywordtype">REAL</span> :: coag_qi_4        <span class="comment">!   &quot;        A=2/3,  B=0</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="keywordtype">REAL</span> :: coag_qi_5        <span class="comment">!   &quot;        A=4/3,  B=-2/3</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keywordtype">REAL</span> :: coag_qi_6        <span class="comment">!   &quot;        A=1/3,  B=1/3</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keywordtype">REAL</span> :: coag_qi_7        <span class="comment">!   &quot;        A=1,    B=-1/3</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">PARAMETER</span> :: acunn = 1.591 <span class="comment">! Cunningham correction factor</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keywordtype">REAL</span> :: log_sigma_acc           <span class="comment">!nat log of geom std dev of acc mode distn</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keywordtype">REAL</span> :: sq_log_sigma_acc        <span class="comment">!square of   &quot;</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordtype">REAL</span> :: mmr_star        <span class="comment">! threshold mmr of SO4_ACC below which PSI=1</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">! constants required for PSI calcn</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keywordtype">REAL</span> :: con_1, con_2</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="keywordtype">REAL</span> :: scale_factor            <span class="comment">! to prevent negative SO2</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="keywordtype">REAL</span> :: scale_fact_ait          <span class="comment">! to prevent negative SO4_AIT</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keywordtype">REAL</span> :: scale_factor_oh         <span class="comment">! to prevent negative OH_conc</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="keywordtype">REAL</span> :: scale_factor_o3         <span class="comment">! to prevent negative O3</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">! Arrays and variables required for mode-merging calculation:</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keywordtype">REAL</span> :: ait_production(row_length, rows, model_levels)</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="keywordtype">REAL</span> :: frac_trans(row_length, rows, model_levels)</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">! FRAC_TRANS = K_MERGE * AIT_PRODUCTION</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keywordtype">REAL</span>,<span class="keywordtype">PARAMETER</span> :: k_merge = 3.068e+09<span class="keywordtype">REAL</span> :: deltas_merge(row_length, rows, model_levels)</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">! variables for VECTLIB codeREAL :: tmp(row_length)</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keywordtype">REAL</span> :: tmp1(row_length)</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="keywordtype">REAL</span> :: fca(row_length)</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keywordtype">REAL</span> :: parha(row_length)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keywordtype">REAL</span> :: jlog10e</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keywordtype">REAL</span> :: jfac1</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">! External function</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">EXTERNAL</span>  :: coag_qi           <span class="comment">!Function for coagulation calcn</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;SULPHR&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">! 0. Set up constants and initialise OUT arrays to 0</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">! The next constant cannot be declared as a PARAMETER because</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">! it involves non-integer exponents.</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;rho_cuberoot = rho_water**0.333333</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">! Parameters used: g, r, acunn, rho_water, sigma_ait, rad_ait, cloudtau,</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">! chemtau, rmms_air, evaptau, thold</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">!$OMP  PARALLEL DEFAULT(SHARED) PRIVATE(k, j, i, log_sigma_ait,                &amp;</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">!$OMP&amp; diff_con2, log_sigma_acc, sq_log_sigma_acc, coag_qi_1, diff_con1,       &amp;</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">!$OMP&amp; coag_qi_2, coag_qi_3, coag_qi_4, coag_qi_5, coag_qi_6, coag_qi_7,       &amp;</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">!$OMP&amp; sum_iz, sum_iy, tauratio, hftaurat, probox_inv, probox_fn1,             &amp;</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">!$OMP&amp; probox_fn2, con_1, con_2, prob_clear, prob_cloud, mean_free_path,       &amp;</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">!$OMP&amp; jlog10e, jfac1, parha, fca, tmp, k_limrat, k_so2oh_lo,                  &amp;</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">!$OMP&amp; dryrate, fac2, fac3, term1, term2, lamda, denom, wetrate,               &amp;</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">!$OMP&amp; k1_dms_oh, o2_conc, k2_dms_oh, k3_ch3so2, f_ch3so2_to_so2,              &amp;</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">!$OMP&amp; k6_ch3so3, dmsrate, f_dms_to_ch3so2, f_ch3so3_to_so4,                   &amp;</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">!$OMP&amp; evaptime, nuctime, diffuse_tau, diffusivity, pec, knudsen_weber,        &amp;</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">!$OMP&amp; work_radius, scavcd, diffuse_tauratio, probdiff_inv,                    &amp;</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">!$OMP&amp; probdiff_fn1, probdiff_fn2, diffrate, zfac, alpha, coagrate,            &amp;</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">!$OMP&amp; drh, scale_factor, w_conc,viscosity_air, h2o2_con_to_mxr,               &amp;</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">!$OMP&amp; h2o2_rep, k_ho2_ho2, probdiff_clear, scale_factor_oh, term4,            &amp;</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">!$OMP&amp; scale_factor_o3,lambda_aitken, probdiff_cloud, k_so2_oh,                &amp;</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">!$OMP&amp; tmp1, o3_conc, scale_fact_ait, yfac, term3, sq_log_sigma_ait)</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keywordflow">IF</span> (l_sulpc_online_oxidants) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;  <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;      <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <span class="keywordflow">IF</span> (oh_conc(i,j,k) .LT. 0.0) oh_conc(i,j,k) = 0.0</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="keywordflow">IF</span> (ho2_conc(i,j,k) .LT. 0.0) ho2_conc(i,j,k) = 0.0</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="keywordflow">IF</span> (h2o2_mxr(i,j,k) .LT. 0.0) h2o2_mxr(i,j,k) = 0.0</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        <span class="keywordflow">IF</span> (o3(i,j,k) .LT. 0.0) o3(i,j,k) = 0.0</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">!     Extra parameters for improved diffusional scavenging.</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;log_sigma_ait = log(sigma_ait)</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;sq_log_sigma_ait = log_sigma_ait * log_sigma_ait</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;diff_con1 = exp(-2.5*sq_log_sigma_ait)/rad_ait</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;diff_con2 = exp(-4.0*sq_log_sigma_ait)/(rad_ait*rad_ait)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">!     Extra parameters for coagulation</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;log_sigma_acc=log(sigma)</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;sq_log_sigma_acc=log_sigma_acc*log_sigma_acc</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment">! Calculate COAG_QI_ functions (not dependent on ALPHA)</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment">! DEPENDS ON: coag_qi</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;coag_qi_1=coag_qi(1.0, 0.0,                                                    &amp;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;  rad_ait,rad_acc,sq_log_sigma_ait,sq_log_sigma_acc)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">! DEPENDS ON: coag_qi</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;coag_qi_2=coag_qi(1.333333, -0.333333,                                         &amp;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;  rad_ait,rad_acc,sq_log_sigma_ait,sq_log_sigma_acc)</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">! DEPENDS ON: coag_qi</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;coag_qi_3=coag_qi(0.666667, 0.333333,                                          &amp;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  rad_ait,rad_acc,sq_log_sigma_ait,sq_log_sigma_acc)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">! DEPENDS ON: coag_qi</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;coag_qi_4=coag_qi(0.666667, 0.0,                                               &amp;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;  rad_ait,rad_acc,sq_log_sigma_ait,sq_log_sigma_acc)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">! DEPENDS ON: coag_qi</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;coag_qi_5=coag_qi(1.333333, -0.666667,                                         &amp;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  rad_ait,rad_acc,sq_log_sigma_ait,sq_log_sigma_acc)</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">! DEPENDS ON: coag_qi</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;coag_qi_6=coag_qi(0.333333, 0.333333,                                          &amp;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  rad_ait,rad_acc,sq_log_sigma_ait,sq_log_sigma_acc)</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="comment">! DEPENDS ON: coag_qi</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;coag_qi_7=coag_qi(1.0, -0.333333,                                              &amp;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;  rad_ait,rad_acc,sq_log_sigma_ait,sq_log_sigma_acc)</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">! Calculate sums of COAG_QI_ functions</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;sum_iz = 2.0*coag_qi_1 + coag_qi_2 + coag_qi_3</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;sum_iy = coag_qi_4 + coag_qi_5 + coag_qi_6 + coag_qi_7</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">! Calculate parameters which are same for each grid box (for wet oxidn)</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">! and set up other arrays</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;tauratio=cloudtau/chemtau</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;hftaurat=tauratio/2.0</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;probox_inv=1.0/(1.0-exp(-tauratio))</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;probox_fn1=probox_inv-0.5</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;probox_fn2=probox_inv*exp(-hftaurat)</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;      p_array(i,j,k)=p(i,j,k)</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;      so2_array(i,j,k)=so2(i,j,k)</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;      so4_acc_array(i,j,k)=so4_acc(i,j,k)</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;      so4_ait_array(i,j,k)=so4_ait(i,j,k)</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;      msa(i,j,k)  = 0.0</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;      f_dms_to_so2(i,j,k)  = 0.0</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;      f_dms_to_so4(i,j,k)  = 0.0</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;      f_dms_to_msa(i,j,k)  = 0.0</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;      nh3_dep(i,j,k)  = 0.0</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;      deltas_dry(i,j,k)  = 0.0</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;      deltas_wet(i,j,k)  = 0.0</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;      deltas_wet_o3(i,j,k) = 0.0</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      deltas_tot(i,j,k)  = 0.0</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      deltas_dms(i,j,k)  = 0.0</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;      deltas_evap(i,j,k) = 0.0</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;      deltas_nucl(i,j,k) = 0.0</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;      deltas_diffuse(i,j,k) = 0.0</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;      deltas_coag(i,j,k) = 0.0</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;      deltas_tot_ait(i,j,k) = 0.0</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      <span class="keywordflow">IF</span> (l_sulpc_2_way_coupling) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        delta_oh_dms(i,j,k) = 0.0</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        delta_o3_dms(i,j,k) = 0.0</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        delta_ho2_dms(i,j,k) = 0.0</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        delta_oh_so2(i,j,k) = 0.0</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        delta_h2o2_so2(i,j,k) = 0.0</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        delta_o3_so2(i,j,k) = 0.0</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        delta_oh_tot(i,j,k) = 0.0</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        delta_o3_tot(i,j,k) = 0.0</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;      rho_air(i,j,k)=p_array(i,j,k)/(r*t(i,j,k))</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;      air_conc(i,j,k)=                                                         &amp;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        (avogadro*p_array(i,j,k))/(r*t(i,j,k)*rmm_air*1.0e6)</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;      <span class="comment">! Compute dynamic viscosity of air and mean free path of air molecules</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;      <span class="comment">! using the formulae on P.417 of Pruppacher and Klett, 2nd edition.</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;      viscos_air(i,j,k)=(1.718 + (t(i,j,k)-273.15)*0.0049 )*1.0e-5</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;      mean_freep(i,j,k)=                                                       &amp;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        (mfp_ref*pref_mfp*t(i,j,k))/(tref_mfp*p_array(i,j,k))</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">! 1.  This section calculates amount of SO2 dry oxidised using a</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment">!     3_D OH concentration field to control the oxidn rate when</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="comment">!     cos(zenith angle) is G.T. 10-6  (else rate is zero).</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment">!  Reaction rates are dependent on temperature and pressure</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;con_1 = exp(4.5*log(sigma)*log(sigma))</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;con_2 = 4.0*pi*rho_so4*<a class="code" href="chi_8f90.xhtml#a4171588368b281344286dda9af657d19">chi</a>*num_star*(rad_acc)**3</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;jlog10e=1.0/log(10.0)</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;jfac1=jlog10e/fac1</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;  fca(i)=fc</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;  parha(i)=parh</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;      tmp(i)=t1/t(i,j,k)</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacevectlib__mod.xhtml#ac137092b04949de8f6d44782d43343d6">rtor_v</a>(row_length,tmp,parha,tmp)</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;      k_so2oh_lo=air_conc(i,j,k)*k1*tmp(i)</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;      k_limrat = k_so2oh_lo / k_so2oh_hi</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;      tmp(i) = k_limrat</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;      fac2 = k_so2oh_lo /(1.0+ k_limrat)</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;      tmp1(i) = fac2</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacevectlib__mod.xhtml#a48f1e886f1f36cca750b59042bc8882e">log_v</a>(row_length,tmp,tmp)</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;      fac3 = 1.0 + (tmp(i)*jfac1)**2</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;      tmp(i)=1.0/fac3</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;      fca(i)=fc</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    <span class="keyword">CALL </span><a class="code" href="namespacevectlib__mod.xhtml#ac137092b04949de8f6d44782d43343d6">rtor_v</a>(row_length,fca,tmp,fca)</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;      k_so2_oh = tmp1(i) * fca(i)</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;      <span class="comment">!  Only calculate the dry oxidation rate in the daytime.</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;      <span class="keywordflow">IF</span> (cosza2d(i,j) &gt;  1.0e-06) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        dryrate=k_so2_oh * oh_conc(i,j,k)</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;      <span class="keywordflow">ELSE</span>                     <span class="comment">! Zero rate if nightime</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        dryrate=0.0</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;      deltas_dry(i,j,k)=dryrate*tstep*so2_array(i,j,k) <span class="comment">!AmntSO2dryox</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;      <span class="comment">! Calculate change in OH_CONC due to this reaction:</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;      <span class="keywordflow">IF</span> (l_sulpc_online_oxidants .AND.                                        &amp;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        l_sulpc_2_way_coupling) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        delta_oh_so2(i,j,k) = deltas_dry(i,j,k) * air_conc(i,j,k)              &amp;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;          * rmm_air / rmm_s</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="comment">! 2. This section calculates amount of SO2 wet oxidised using a</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment">!    3_D H2O2 field to control the oxidn rate. As H2O2 is depleted, it</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="comment">!    is replenished from the HO2 concn field (via a reaction rate), but</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="comment">!    it may not exceed the H2O2 LIMIT field .</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="comment">!    The reaction rate is a function of pressure, temp and humidity.</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="comment">!    It uses D.Roberts&#39; formula for the wet oxidn rate, and R.Colvile&#39;s</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="comment">!    H2O2 and HO2 chemistry.</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="comment">!    Depletion and replenishment of H2O2 is done at the end of the</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="comment">!    routine, after scaling to avoid SO2 becoming negative.</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="comment">!    If H2O2 is limiting, further oxidation by O3 occurs if there is</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="comment">!    sufficient NH3 available to buffer the reaction; Choularton&#39;s</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="comment">!    suggested procedure is:</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="comment">!    a) Do oxidn of SO2 by H2O2</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="comment">!    b) Neutralise sulphate produced with NH3</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="comment">!    c) If SO2 remains do oxidn by O3 until SO2 or NH3 required to</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="comment">!       neutralise it is exhausted.</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="keywordflow">DO</span> k=1,wet_model_levels</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;      qcl_array(i,j,k)=qcl(i,j,k)</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;      qcf_array(i,j,k)=qcf(i,j,k)</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="keywordflow">IF</span> (l_sulpc_online_oxidants) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;  <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;      <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        h2o2_mxr_array(i,j,k)=h2o2(i,j,k)</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;  <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;      <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        h2o2_mxr_array(i,j,k)=h2o2_mxr(i,j,k)</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;      nh3_array(i,j,k)=nh3(i,j,k)</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="keywordflow">DO</span> k=1,wet_model_levels</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;      <span class="comment">! Calculate clear air fraction</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;      clearf(i,j,k)=1.0-cloudf(i,j,k)</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;      <span class="keywordflow">IF</span> ((qcl_array(i,j,k) &gt;= thold) .AND.                                    &amp;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        &amp;        (cloudf(i,j,k) &gt;  0.0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        <span class="comment">!   CALCULATE LAMDA</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        term1=(clearf(i,j,k)*tauratio)**2</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        term1=term1+2.0*tauratio*clearf(i,j,k)*                                &amp;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;          &amp;                             (clearf(i,j,k)-cloudf(i,j,k))</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        term1=sqrt(1.0+term1)</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        term2=2.0*cloudf(i,j,k)-tauratio*clearf(i,j,k)-1.0</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        term2=term2+term1</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        lamda=term2/(2.0*cloudf(i,j,k))</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;        <span class="comment">!   CALCULATE PROB_CLEAR AND PROB_CLOUD</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;        denom=clearf(i,j,k)+cloudf(i,j,k)*lamda</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        prob_clear=clearf(i,j,k)/denom</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;        prob_cloud=cloudf(i,j,k)*lamda/denom</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;        <span class="comment">!   CALCULATE EXPECTED LIFETIME OF SO2 (WHICH IS 1/WETRATE)</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        term1=probox_fn1*prob_clear</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        term2=probox_fn2*prob_cloud</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        term2=(term1+term2)*clearf(i,j,k)/cloudf(i,j,k)</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        denom=term2*cloudtau+chemtau</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        wetrate=1.0/denom</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        <span class="comment">!  RC&#39;S H2O2 CHEMISTRY: OXIDATION OF SO2 TO SO4 IS CONTROLLED BY THE</span></div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        <span class="comment">!                        SMALLER OF THE SO2 AND H2O2 MIX RAT FIELDS</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        <span class="keywordflow">IF</span> (so2_array(i,j,k) &lt;= (h2o2_mxr_array(i,j,k)*                        &amp;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;          relm_s_h2o2)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;          deltas_wet(i,j,k)=(1.0-exp(-wetrate*tstep))*                         &amp;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;            so2_array(i,j,k)</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;          deltas_wet(i,j,k)=(1.0-exp(-wetrate*tstep))*                         &amp;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;            h2o2_mxr_array(i,j,k)*relm_s_h2o2</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;          <span class="comment">!   H2O2 field is limiting, so oxidise SO2 further with O3, using NH3</span></div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;          <span class="comment">!   as buffer, if sufficient O3 and NH3 available.</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;          <span class="keywordflow">IF</span> (l_sulpc_ozone) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;            <span class="keywordflow">IF</span> (l_sulpc_so2_o3_nonbuffered) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;              <span class="comment">! SO2+O3 NOT buffered by NH3.</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;              <span class="comment">! When L_SULPC_SO2_O3_NONBUFFERED = T, O3 oxidation proceeds only if</span></div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;              <span class="comment">! O3 MMR is above a threshold (O3_MIN). The condition on NH3, which</span></div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;              <span class="comment">! applies when L_SULPC_SO2_O3_NONBUFFERED = F, does not apply when</span></div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;              <span class="comment">! L_SULPC_SO2_O3_NONBUFFERED = T.</span></div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;              <span class="keywordflow">IF</span> (o3(i,j,k) &gt;= o3_min) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                <span class="comment">! When L_SULPC_SO2_O3_NONBUFFERED = T, O3 oxidation is controlled by SO2</span></div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                <span class="comment">! field only.  Note that all SO2 is used in DELTAS_WET_O3 calcn;</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                <span class="comment">! adjustment by SCALE_FACTOR at end of routine prevents removing too much.</span></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                deltas_wet_o3(i,j,k)=                                          &amp;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                  (1.0-exp(-wetrate*tstep))*so2_array(i,j,k)</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="keywordflow">              END IF</span>               <span class="comment">! End ozone threshold condtion.</span></div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;              <span class="comment">! SO2+O3 buffered by NH3.</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;              <span class="comment">! When L_SULPC_SO2_O3_NONBUFFERED = F, O3 oxidation proceeds only if O3</span></div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;              <span class="comment">! MMR is above a threshold (O3_MIN) and NH3 MMR is large enough that there</span></div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;              <span class="comment">! is still NH3 left in the gridbox after production of ammonium sulphate</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;              <span class="comment">! in the aqueous reaction of SO2 with H2O2 (see above).</span></div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;              <span class="keywordflow">IF</span> ((o3(i,j,k) &gt;= o3_min) .AND.                                  &amp;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                (nh3_array(i,j,k) &gt; deltas_wet(i,j,k)/relm_s_2n)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;                <span class="comment">! When L_SULPC_SO2_O3_NONBUFFERED = F, O3 oxidation is controlled by s</span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;                <span class="comment">! smaller of SO2 and NH3 fields. 2 atoms of N required for each S atom</span></div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;                <span class="comment">! in ammonium sulphate.  Sufficient NH3 must be available to neutralise</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;                <span class="comment">! all sulphate produced in grid box for O3 reaction to continue (otherwise</span></div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;                <span class="comment">! PH too low) Note that all SO2 or NH3 is used in DELTAS_WET_O3 calcn;</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                <span class="comment">! adjustment by SCALE_FACTOR at end of routine prevents removing too much.</span></div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;                <span class="keywordflow">IF</span> (so2_array(i,j,k)&lt;=(nh3_array(i,j,k)                        &amp;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;                  *relm_s_2n)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;                  <span class="comment">! SO2 limiting</span></div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;                  deltas_wet_o3(i,j,k)=                                        &amp;</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;                    (1.0-exp(-wetrate*tstep))*so2_array(i,j,k)</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;                <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;                  <span class="comment">! NH3 limiting</span></div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;                  deltas_wet_o3(i,j,k)=(1.0-exp(-wetrate*tstep))*              &amp;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                    nh3_array(i,j,k)*relm_s_2n</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;<span class="keywordflow">                END IF</span></div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;<span class="keywordflow">              END IF</span>    <span class="comment">! End ozone and NH3 thresholds condition.</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;              <span class="comment">!</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="keywordflow">            END IF</span>   <span class="comment">! End of IF(L_SULPC_SO2_O3_NONBUFFERED)-THEN-ELSE.</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;            <span class="comment">!</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;            <span class="comment">! Calculate change in O3 MMR due to aqueous reaction with SO2:</span></div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;            <span class="keywordflow">IF</span> (l_sulpc_online_oxidants) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;              delta_o3_so2(i,j,k) = deltas_wet_o3(i,j,k)                       &amp;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                * rmm_o3 / rmm_s</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;<span class="keywordflow">          END IF</span>     <span class="comment">! End L_SULPC_OZONE test</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;<span class="keywordflow">        END IF</span>           <span class="comment">! End peroxide oxidation block</span></div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        <span class="comment">!</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        <span class="comment">! Calculate change in H2O2 MMR due to aqueous reaction with SO2:</span></div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        <span class="keywordflow">IF</span> (l_sulpc_online_oxidants) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;          delta_h2o2_so2(i,j,k) = deltas_wet(i,j,k)                            &amp;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;            * rmm_h2o2 / rmm_s</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;<span class="keywordflow">      END IF</span>           <span class="comment">! End cloud present condition</span></div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;<span class="comment">! 3.  This section calculates amount of DMS dry oxidised to SO2</span></div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;<span class="comment">!     and MSA using a 3D OH concentration field to control the oxidn</span></div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="comment">!     rate when cos zenith angle is G.T. 10-6  (else rate is zero).</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="comment">!     MSA is not saved, and K_DMS_OH is constant in this version.</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;<span class="comment">!    OR, if O3 available and new DMS chemistry required !     This section calculates the amount of DMS dry oxidised to SO2,</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="comment">!     SO4 and MSA using OH, HO2, O3 and O2 as oxidants. OH and HO2</span></div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="comment">!     are available in daylight only. Intermediate species have</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;<span class="comment">!     short lifetimes so are not stored between timesteps.</span></div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;<span class="keywordflow">IF</span> (l_sulpc_dms) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;  <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;      <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        dms_array(i,j,k)=dms(i,j,k)</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;  <span class="keywordflow">IF</span> (l_sulpc_newdms .AND. l_sulpc_ozone) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;      <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;        <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;          <span class="comment">! Calculate rate coefficients K1_DMS_OH and K2_DMS_OH for the two</span></div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;          <span class="comment">!    DMS+OH -&gt; CH3SO2 reactions, which are daylight dependent</span></div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;          <span class="keywordflow">IF</span> (cosza2d(i,j) &gt;  1.0e-06) <span class="keywordflow">THEN</span>     <span class="comment">! daylight</span></div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;            k1_dms_oh=1.13e-11*exp(-254.0/t(i,j,k))</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            <span class="comment">!  Calculate concentration of O2 as 20.95% of air concentration</span></div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;            o2_conc=0.2095*air_conc(i,j,k)</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;            k2_dms_oh=                                                         &amp;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;              ( 1.7e-42*o2_conc*exp(7810.0/t(i,j,k)) ) /                       &amp;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;              ( 1.0 + ( 5.5e-31*o2_conc*exp(7460.0/t(i,j,k)) ) )</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;            <span class="comment">!  Calculate thermal decomposition rate coefficient K3_CH3SO2 for</span></div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;            <span class="comment">!         CH3SO2 -&gt; CH3+SO2</span></div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;            k3_ch3so2=2.6e11*exp(-9056.0/t(i,j,k))</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;            <span class="comment">!  Rate coefficient K4_CH3SO2_O3 for CH3SO2+O3 -&gt; CH3SO3+O2 is const</span></div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;            <span class="comment">!         K4_CH3SO2_O3=1.0E-14  in C_SULCHM</span></div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;            <span class="comment">!  Rate coefficient K5_CH3SO3_HO2 for CH3SO3+HO2 -&gt; MSA+O2 is const</span></div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;            <span class="comment">!         K5_CH3SO3_HO2=4.0E-11  in C_SULCHM</span></div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;            <span class="comment">!  Calculate thermal decomposition rate coefficient K6_CH3SO3 for</span></div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;            <span class="comment">!         CH3SO3 -&gt; CH3+SO3</span></div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;            k6_ch3so3=1.1e17*exp(-12057.0/t(i,j,k))</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;            <span class="comment">!  Calculate DMS oxidation rate</span></div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;            dmsrate = (k1_dms_oh + k2_dms_oh) * oh_conc(i,j,k)</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;            <span class="comment">!  Calculate fraction of DELTAS_DMS becoming CH3SO2</span></div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;            f_dms_to_ch3so2=(k1_dms_oh+0.9*k2_dms_oh)/                         &amp;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;              &amp;                    (k1_dms_oh+k2_dms_oh)</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;            <span class="comment">!  Calculate fraction of DELTAS_DMS becoming SO2 (requires O3_CONC)</span></div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;            o3_conc= o3(i,j,k) * air_conc(i,j,k) * rmm_air/rmm_o3</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;            f_ch3so2_to_so2=                                                   &amp;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;              &amp; k3_ch3so2/(k3_ch3so2+k4_ch3so2_o3*o3_conc)</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;            f_dms_to_so2(i,j,k)=                                               &amp;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;              &amp; f_dms_to_ch3so2 * f_ch3so2_to_so2</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;            <span class="comment">!  Calculate fraction of DELTAS_DMS becoming sulphate</span></div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;            f_ch3so3_to_so4= k6_ch3so3 /                                       &amp;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;              &amp;  (k6_ch3so3+k5_ch3so3_ho2*ho2_conc(i,j,k))</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;            f_dms_to_so4(i,j,k)=                                               &amp;</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;              &amp; f_dms_to_ch3so2 * (1.0-f_ch3so2_to_so2)                        &amp;</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;              &amp;                    * f_ch3so3_to_so4</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;            <span class="comment">!  Calculate fraction of DELTAS_DMS becoming MSA</span></div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;            f_dms_to_msa(i,j,k)=1.0 - f_dms_to_so2(i,j,k)                      &amp;</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;              &amp;                  - f_dms_to_so4(i,j,k)</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;            <span class="comment">!  Calculate amount of DMS oxidised in TSTEP (in daylight only)</span></div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;            <span class="comment">!DELTA_DMS</span></div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;            deltas_dms(i,j,k)=dmsrate*tstep*dms_array(i,j,k)</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;            <span class="comment">!</span></div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;            <span class="comment">! Calculate changes in oxidants due to reaction with DMS:</span></div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;            <span class="keywordflow">IF</span> (l_sulpc_online_oxidants .AND.                                  &amp;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;              &amp; l_sulpc_2_way_coupling) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;              delta_oh_dms(i,j,k) =                                            &amp;</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;                &amp;  deltas_dms(i,j,k) * air_conc(i,j,k)                         &amp;</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;                &amp;  * rmm_air / rmm_s</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;              delta_o3_dms(i,j,k) = deltas_dms(i,j,k)                          &amp;</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;                &amp;  * (1.0 - f_ch3so2_to_so2)  * rmm_o3 /                       &amp;</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                &amp; rmm_s</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;              delta_ho2_dms(i,j,k) = deltas_dms(i,j,k)                         &amp;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;                &amp;  * (1.0 - f_ch3so2_to_so2) *                                 &amp;</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;                &amp; (1.0 - f_ch3so3_to_so4)                                      &amp;</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;                &amp; * air_conc(i,j,k) * rmm_air / rmm_s</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;<span class="keywordflow">          END IF</span>             <span class="comment">! End daylight condition</span></div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;  <span class="keywordflow">ELSE</span>                 <span class="comment">! implement simple DMS scheme</span></div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;    <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;      <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;        <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;          <span class="comment">!  Calculate DMS oxidation rate if daytime.</span></div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;          <span class="keywordflow">IF</span> (cosza2d(i,j) &gt;  1.0e-06) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;            dmsrate = k_dms_oh * oh_conc(i,j,k)</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;          <span class="keywordflow">ELSE</span>                 <span class="comment">! ZERO RATE IF NIGHTIME</span></div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;            dmsrate=0.0</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;<span class="keywordflow">          END IF</span>                   <span class="comment">! END COSZA2D IF</span></div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;          <span class="comment">!  CALCULATE FRACTION OF DMS OXIDISED</span></div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;          <span class="comment">!AmtDMSdryox</span></div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;          deltas_dms(i,j,k)=dmsrate*tstep*dms_array(i,j,k)</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;<span class="keywordflow">  END IF</span>                 <span class="comment">! End L_SULPC_NEWDMS Test</span></div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;<span class="keywordflow">END IF</span>                   <span class="comment">! END L_SULPC_DMS IF</span></div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;<span class="comment">! 4. Release of aerosol from evaporating cloud droplets:</span></div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;<span class="comment">!    if no condensed water (liquid + ice) in grid box, release</span></div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;<span class="comment">!    dissolved sulphate as accumulation mode aerosol.</span></div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="comment">!     If cloud fraction less than 0.95, release some in clear  air.</span></div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;<span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;      so4_dis_array(i,j,k)=so4_dis(i,j,k)</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;<span class="keywordflow">DO</span> k=1,wet_model_levels</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;      qctotal(i,j,k)= qcl_array(i,j,k) + qcf_array(i,j,k)</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;      <span class="keywordflow">IF</span> (qctotal(i,j,k)  &lt;   thold) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;        deltas_evap(i,j,k)=so4_dis_array(i,j,k)</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span>  (cloudf(i,j,k) &lt;  0.95) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;        evaptime = evaptau + 0.5*cloudtau</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;        deltas_evap(i,j,k)=                                                    &amp;</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;          &amp;   (1.0-exp(-tstep/evaptime))*so4_dis_array(i,j,k)</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;        deltas_evap(i,j,k)=0.0</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;<span class="comment">!     Also release any dissolved aerosol in a non-wet level,</span></div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;<span class="comment">!     where it should not be.</span></div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;<span class="keywordflow">IF</span> (wet_model_levels  &lt;   model_levels)  <span class="keywordflow">THEN</span></div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;  <span class="keywordflow">DO</span> k=wet_model_levels+1,model_levels</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;    <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;      <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;        deltas_evap(i,j,k)= so4_dis_array(i,j,k)</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;-<span class="comment">! 5. Nucleation of accumulation mode aerosol forming dissolved SO4</span></div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;-</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;<span class="comment">!    THIS CODE ASSUMES THAT THE PARAMETER NUCTAU, WHICH IS THE</span></div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;<span class="comment">!    TIMESCALE FOR NUCLEATION ONCE A PARTICLE ENTERS A CLOUD, IS</span></div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;<span class="comment">!    VERY SHORT COMPARED WITH CLOUDTAU.</span></div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;<span class="keywordflow">DO</span> k=1,wet_model_levels</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;      <span class="keywordflow">IF</span> ((qctotal(i,j,k) &gt;= thold) .AND.                                      &amp;</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;        &amp;       (cloudf(i,j,k) &gt;  0.0))  <span class="keywordflow">THEN</span></div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;        nuctime=nuctau+((clearf(i,j,k)*cloudtau)/                              &amp;</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;          &amp; (2.0*cloudf(i,j,k)))</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;        deltas_nucl(i,j,k)=                                                    &amp;</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;          &amp;       (1.0-exp(-tstep/nuctime))*so4_acc_array(i,j,k)</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;-<span class="comment">! 6. Diffusional scavenging of Aitken mode SO4 forming dissolved SO4</span></div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;<span class="comment">! Improved code (introduced at vn5.3) allows for:</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;<span class="comment">! (1) The enhancement of diffusional scavenging due to the</span></div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;<span class="comment">! relative motion of cloud droplets and aerosol is modelled.</span></div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;<span class="comment">! (2) The variation of particle diffusivity with ambient</span></div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;<span class="comment">! temperature and pressure is taken into account.</span></div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;<span class="comment">! (3) Averaging over the size distributions of both the cloud</span></div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;<span class="comment">! droplets and the aerosol particles has been done, assuming</span></div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;<span class="comment">! a Khrgian-Mazin distribution for the droplets and a lognormal</span></div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;<span class="comment">! distribution for the aerosol.</span></div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;-</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;<span class="comment">!    THIS IS A MUCH SLOWER PROCESS THAN NUCLEATION AND THEREFORE WE</span></div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;<span class="comment">!    CANNOT MAKE THE SAME APPROXIMATIONS USED IN THAT CASE.</span></div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;<span class="comment">!$OMP DO SCHEDULE(DYNAMIC)</span></div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;<span class="keywordflow">DO</span> k=1,wet_model_levels</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;      <span class="keywordflow">IF</span> ((qctotal(i,j,k) &gt;= thold) .AND.                                      &amp;</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;        (cloudf(i,j,k) &gt;  0.0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;        <span class="comment">!    FIRST COMPUTE IN-CLOUD TIMESCALE FOR DIFFUSIONAL CAPTURE,</span></div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;        <span class="comment">!    USING TOTAL CONDENSED WATER WITHIN THE CLOUDY PORTION OF THE BOX.</span></div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;        <span class="comment">!    THE DIFFERENCE BETWEEN LIQUID WATER AND ICE IS NEGLECTED HERE.</span></div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;        <span class="comment">!    THIS SHOULD BE IMPROVED ON EVENTUALLY.</span></div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;        <span class="comment">! Compute mean free path of air molecules.</span></div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;        <span class="comment">!  (See P.417 of Pruppacher and Klett, 2nd edition.)</span></div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;        mean_free_path=                                                        &amp;</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;          (mfp_ref*pref_mfp*t(i,j,k))/(tref_mfp*p_array(i,j,k))</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;        <span class="comment">! Compute the Knudsen and Weber term for a particle of the median</span></div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;        <span class="comment">!  radius (note approximation here: we do not average over the size</span></div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;        <span class="comment">!  distribution). See P.450 of Pruppacher and Klett, 2nd edition.</span></div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;        knudsen_weber=1.257 + 0.4*                                             &amp;</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;          exp(-((1.1*rad_ait)/mean_free_path))</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;        <span class="comment">! Temporarily use DIFFUSIVITY to store working value.</span></div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;        diffusivity=diff_con1 + diff_con2*mean_free_path*                      &amp;</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;          knudsen_weber</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;        <span class="comment">! Compute dynamic viscosity of air, using an approximate version of</span></div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;        <span class="comment">!  the formula on P.417 of Pruppacher and Klett, 2nd edition.</span></div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;        viscosity_air=(1.718 + (t(i,j,k)-273.15)*0.0049 )*1.0e-5</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;        <span class="comment">! Now compute mean diffusion coefficient.</span></div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;        diffusivity=(boltzmann*t(i,j,k)*diffusivity)/                          &amp;</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;          (6.0*pi*viscosity_air)</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;        <span class="comment">! Now compute the term PEC related to (but not equal to) the cube</span></div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;        <span class="comment">!  root of the Peclet Number.</span></div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;        pec=((4.0*g*rho_water)/                                                &amp;</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;          (9.0*diffusivity*viscosity_air))**0.333333</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;        work_radius=qctotal(i,j,k)/                                            &amp;</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;          (cloudf(i,j,k)*10.0*pi*rho_water*n_droplet(i,j,k))</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;        work_radius=work_radius**0.333333</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;        <span class="comment">! We can finally compute the timescale for diffusive</span></div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;        <span class="comment">!  scavenging once inside cloud, DIFFUSE_TAU.</span></div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;        scavcd=6.0*pi*diffusivity*n_droplet(i,j,k)*work_radius*                &amp;</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;          (1.0 + pec*work_radius)</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;        diffuse_tau=1.0/scavcd</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;        diffuse_tauratio = cloudtau/diffuse_tau</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;        probdiff_inv = 1.0/( 1.0 - exp(-diffuse_tauratio) )</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;        probdiff_fn1 = probdiff_inv - 0.5</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;        probdiff_fn2 = probdiff_inv*exp(-(0.5*diffuse_tauratio) )</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;        <span class="comment">!     CALCULATE LAMBDA_AITKEN.</span></div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;        term3 = (clearf(i,j,k)*diffuse_tauratio)**2</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;        term3 = term3 + ( 2.0*diffuse_tauratio                                 &amp;</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;          *clearf(i,j,k)*(clearf(i,j,k)-cloudf(i,j,k)) )</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;        term3 = sqrt(1.0+term3)</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;        term4=2.0*cloudf(i,j,k)-diffuse_tauratio*clearf(i,j,k)-1.0</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;        term4 = term4 + term3</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;        lambda_aitken = term4/(2.0*cloudf(i,j,k))</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;        <span class="comment">!   CALCULATE PROBDIFF_CLEAR AND PROBDIFF_CLOUD</span></div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;        denom = clearf(i,j,k)+cloudf(i,j,k)*lambda_aitken</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;        probdiff_clear = clearf(i,j,k)/denom</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;        probdiff_cloud = (cloudf(i,j,k)*lambda_aitken)/denom</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;        <span class="comment">!   CALCULATE EXPECTED LIFETIME OF AN AITKEN MODE PARTICLE WITH</span></div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;        <span class="comment">!   RESPECT TO DIFFUSIVE CAPTURE BY CLOUD DROPLETS.</span></div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;        term3 = probdiff_fn1*probdiff_clear</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;        term4 = probdiff_fn2*probdiff_cloud</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;        term4 = (term3+term4)*clearf(i,j,k)/cloudf(i,j,k)</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;        denom = term4*cloudtau + diffuse_tau</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;        diffrate = 1.0/denom</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;        <span class="comment">!   NOW COMPUTE THE AMOUNT OF AITKEN MODE SO4 CONVERTED TO DISSOLVED</span></div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;        <span class="comment">!   SO4 BY DIFFUSIVE CAPTURE DURING THE STEP.</span></div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;        deltas_diffuse(i,j,k)=(1.0-exp(-diffrate*tstep))*                      &amp;</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;          so4_ait_array(i,j,k)</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;<span class="comment">! 6.5. Coagulation of Aitken mode with accumulation mode SO4 to form</span></div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;<span class="comment">!      more of the accumulation mode. Allowance is made for hygroscopic</span></div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;<span class="comment">!      growth of particles for values of RH up to 0.97 using</span></div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;<span class="comment">!      Fitzgerald&#39;s scheme. For RH &gt; 0.97, coagulation is neglected.</span></div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;<span class="comment">! First calculate relative humidity to determine hygroscopic</span></div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;<span class="comment">! growth factor ALPHA for particles; RH is obtained from q and</span></div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;<span class="comment">! qsat using RH=q(1-qsat)/(qsat(1-q))</span></div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;<span class="comment">! Use REL_HUM array to store returned QSAT values in call to QSAT_WAT</span></div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;<span class="comment">! to save space; then calculate fractional REL_HUM</span></div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;</div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;</div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;<span class="keywordflow">DO</span> k=1,wet_model_levels</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;      q_array(i,j,k)=q(i,j,k)</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;<span class="comment">!$OMP DO SCHEDULE(DYNAMIC)</span></div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;<span class="keywordflow">DO</span> k=1,wet_model_levels</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;  <span class="comment">! DEPENDS ON: qsat_wat</span></div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;  <span class="keyword">CALL </span><a class="code" href="qsat__wat_8f90.xhtml#a0c0fb3b560128ff260172760c051f507" title="Saturation Specific Humidity Scheme (Qsat_Wat): Vapour to Liquid. ">qsat_wat</a>(rel_hum(1,1,k)                                                 &amp;</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;    ,  t(1,1,k), p_array(1,1,k), theta_field_size)</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;      rel_hum(i,j,k) = q_array(i,j,k)*(1.0-rel_hum(i,j,k)) /                   &amp;</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;        ( rel_hum(i,j,k)*(1.0-q_array(i,j,k)) )</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;      <span class="keywordflow">IF</span> (rel_hum(i,j,k)  &lt;   0.3) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;        <span class="comment">! Assume no hygroscopic growth occurs, so ALPHA=1</span></div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;        <span class="comment">! Calculate factors multiplying SUM_IZ, SUM_IY (simplified for ALPHA=1)</span></div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;        zfac = 2.0 * boltzmann * t(i,j,k) *                                    &amp;</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;          so4_ait_array(i,j,k)*so4_acc_array(i,j,k)</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;        zfac = zfac * (rho_air(i,j,k)/rho_so4)</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;        zfac = zfac/( 3.0*viscos_air(i,j,k) )</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;        yfac = (1.333333*pi)**0.333333</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;        yfac = yfac*acunn*mean_freep(i,j,k)</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;        coagrate = zfac*(sum_iz + yfac*sum_iy)</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;      <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (rel_hum(i,j,k)  &lt;=  0.97) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;        <span class="comment">! Calculate hygroscopic growth factor ALPHA</span></div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;        <span class="comment">! DEPENDS ON: hygro_fact</span></div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;        <span class="keyword">CALL </span><a class="code" href="hygro__fact_8f90.xhtml#ac8e72529e7ea75f66686d3b4187321cf">hygro_fact</a>(rel_hum(i,j,k), alpha)</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;</div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;        <span class="comment">! Calculate factors multiplying SUM_IZ, SUM_IY (for ALPHA /= 1)</span></div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;        zfac = 2.0 * boltzmann * t(i,j,k) *                                    &amp;</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;          so4_ait_array(i,j,k)*so4_acc_array(i,j,k)</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;        zfac = zfac * (rho_air(i,j,k)/rho_so4)</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;        zfac = zfac/( 3.0*viscos_air(i,j,k) )</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;        zfac = zfac/( alpha**6 )</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;        yfac = (1.333333*pi)**0.333333</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;        yfac = yfac*acunn*mean_freep(i,j,k)</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;        yfac = yfac/alpha</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;        coagrate = zfac*(sum_iz + yfac*sum_iy)</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;        <span class="comment">! Neglect coagulation for RH &gt; 0.97</span></div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;        coagrate = 0.0</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;<span class="keywordflow">      END IF</span>         <span class="comment">!End RH condition</span></div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;      <span class="comment">! Calculate amount of SO4 tranferred from Ait to acc mode so4:</span></div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;      deltas_coag(i,j,k) = coagrate*tstep</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;<span class="keywordflow">    END DO</span>           <span class="comment">!End i loop</span></div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;<span class="keywordflow">  END DO</span>             <span class="comment">!End j loop</span></div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;<span class="keywordflow">END DO</span>               <span class="comment">!End k loop</span></div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;<span class="comment">! 6a.          Calculation of PSI, fraction of dry-oxidied SO2 going</span></div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;<span class="comment">!              into Aitken mode (as opposed to accumulation mode).  The</span></div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;<span class="comment">!              method of calculating PSI has been changed, and the</span></div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;<span class="comment">!              calculation has been moved here from Section 1, as it</span></div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;<span class="comment">!              now depends on relative humidity, which is calculated in</span></div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;<span class="comment">!              Section 6.</span></div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;-drh = rel_hum_table(2) - rel_hum_table(1)</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;<span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;      nearest_index(i,j,k) = (nint((rel_hum(i,j,k)                             &amp;</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;        - rel_hum_table(1)) / drh)) + 1</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;      <span class="keywordflow">IF</span> (nearest_index(i,j,k)  &gt;   101) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;        nearest_index(i,j,k) = 101</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;      <span class="keywordflow">IF</span> (nearest_index(i,j,k)  &lt;   1) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;        nearest_index(i,j,k) = 1</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;      a_array(i,j,k) = a_table(nearest_index(i,j,k))                           &amp;</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;        * so4_ait_array(i,j,k)</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;      b_array(i,j,k) = b_table(nearest_index(i,j,k))                           &amp;</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;        * so4_acc_array(i,j,k)</div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;      <span class="keywordflow">IF</span> (a_array(i,j,k)  ==  0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;        psi(i,j,k) = 1.0</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;        psi(i,j,k) = a_array(i,j,k) /                                          &amp;</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;          (a_array(i,j,k) + b_array(i,j,k))</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;<span class="keywordflow">    END DO</span>        <span class="comment">!End i loop</span></div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;<span class="keywordflow">  END DO</span>           <span class="comment">!End j loop</span></div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;<span class="keywordflow">END DO</span>              <span class="comment">!End k loop</span></div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;-<span class="comment">! 7. UPDATE SO2, SO4 modes and DMS, assuming:</span></div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;<span class="comment">!    Dry oxidation SO2 produces SO4 Aitken mode aerosol</span></div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;<span class="comment">!    Wet oxidation SO2 produces dissolved SO4</span></div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;<span class="comment">!    Dry oxidation DMS produces SO2 and MSA,</span></div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;<span class="comment">!                       and SO4 if L_SULPC_NEWDMS=T</span></div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;</div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;<span class="comment">! CHECK THAT AMOUNTS OF SO2 &amp; DMS OXIDISED NOT GREATER THAN SO2 &amp; DMS</span></div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;<span class="comment">! AVAILABLE AND SCALE INCREMENTS IF NECESSARY</span></div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;</div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;<span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;      deltas_tot(i,j,k)=deltas_dry(i,j,k)+deltas_wet(i,j,k)                    &amp;</div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;        + deltas_wet_o3(i,j,k)</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;      <span class="keywordflow">IF</span> (deltas_tot(i,j,k)  &gt;   so2_array(i,j,k))  <span class="keywordflow">THEN</span></div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;        scale_factor=so2_array(i,j,k)/deltas_tot(i,j,k)</div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;        deltas_dry(i,j,k)=deltas_dry(i,j,k)*scale_factor</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;        deltas_wet(i,j,k)=deltas_wet(i,j,k)*scale_factor</div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;</div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;        <span class="keywordflow">IF</span> (l_sulpc_ozone) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;          deltas_wet_o3(i,j,k)=deltas_wet_o3(i,j,k)*scale_factor</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;        deltas_tot(i,j,k) = so2_array(i,j,k)</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;      <span class="keywordflow">IF</span> ( l_sulpc_dms) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;        <span class="keywordflow">IF</span> (deltas_dms(i,j,k)  &gt;   dms_array(i,j,k)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;          deltas_dms(i,j,k) = dms_array(i,j,k)</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;      <span class="comment">! Calculation of AIT_PRODUCTION, the amount of Aitken mode sulphate</span></div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;      <span class="comment">! produced in a timestep:</span></div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;      <span class="keywordflow">IF</span> (l_sulpc_dms) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;        <span class="keywordflow">IF</span> (l_sulpc_newdms .AND. l_sulpc_ozone) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;          ait_production(i,j,k) = psi(i,j,k)                                   &amp;</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;            * (deltas_dry(i,j,k)                                               &amp;</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;            + deltas_dms(i,j,k) * f_dms_to_so4(i,j,k))</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;          ait_production(i,j,k) = psi(i,j,k)                                   &amp;</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;            * deltas_dry(i,j,k)</div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;        ait_production(i,j,k) = psi(i,j,k)                                     &amp;</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;          * deltas_dry(i,j,k)</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;      <span class="comment">! Fraction of Aitken mode transferred to accumulation mode in a</span></div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;      <span class="comment">! timestep by mode merging:</span></div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;      frac_trans(i,j,k) = k_merge * ait_production(i,j,k)</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;      <span class="comment">! Change in MMR of Aitken mode sulphate as a result of this transfer:</span></div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;      deltas_merge(i,j,k) = frac_trans(i,j,k)                                  &amp;</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;        * so4_ait_array(i,j,k)</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;</div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;      deltas_tot_ait(i,j,k)=deltas_diffuse(i,j,k)+                             &amp;</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;        deltas_coag(i,j,k) + deltas_merge(i,j,k)</div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;      <span class="keywordflow">IF</span> ( deltas_tot_ait(i,j,k)  &gt;   so4_ait_array(i,j,k) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;        scale_fact_ait=so4_ait_array(i,j,k)/deltas_tot_ait(i,j,k)</div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;        deltas_diffuse(i,j,k)=deltas_diffuse(i,j,k)*scale_fact_ait</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;        deltas_coag(i,j,k)=deltas_coag(i,j,k)*scale_fact_ait</div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;        deltas_merge(i,j,k) = deltas_merge(i,j,k) * scale_fact_ait</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;        deltas_tot_ait(i,j,k)=so4_ait_array(i,j,k)</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;</div><div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;      <span class="comment">!  UPDATE SO2, SO4 MODES AND DMS</span></div><div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;</div><div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;      <span class="keywordflow">IF</span> (l_sulpc_dms) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;</div><div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;        <span class="keywordflow">IF</span> (l_sulpc_newdms .AND. l_sulpc_ozone) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;</div><div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;          so2_array(i,j,k)=                                                    &amp;</div><div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;            so2_array(i,j,k) +deltas_dms(i,j,k)*f_dms_to_so2(i,j,k)            &amp;</div><div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;            - deltas_tot(i,j,k)</div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;</div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;          so4_ait_array(i,j,k)=                                                &amp;</div><div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;            so4_ait_array(i,j,k) - deltas_tot_ait(i,j,k)                       &amp;</div><div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;            + psi(i,j,k)*                                                      &amp;</div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;            (deltas_dry(i,j,k)+deltas_dms(i,j,k)*f_dms_to_so4(i,j,k))</div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;</div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;          so4_acc_array(i,j,k)=so4_acc_array(i,j,k)                            &amp;</div><div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;            + deltas_evap(i,j,k)                                               &amp;</div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;            - deltas_nucl(i,j,k)                                               &amp;</div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;            + (1.0-psi(i,j,k))*                                                &amp;</div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;            (deltas_dry(i,j,k)+deltas_dms(i,j,k)*f_dms_to_so4(i,j,k) )         &amp;</div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;            + deltas_coag(i,j,k)                                               &amp;</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;            + deltas_merge(i,j,k)</div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;          so4_dis_array(i,j,k)=so4_dis_array(i,j,k)                            &amp;</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;            + deltas_wet(i,j,k)                                                &amp;</div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;            - deltas_evap(i,j,k)                                               &amp;</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;            + deltas_nucl(i,j,k)                                               &amp;</div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;            + deltas_diffuse(i,j,k)                                            &amp;</div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;            + deltas_wet_o3(i,j,k)</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;          dms_array(i,j,k)=dms_array(i,j,k) - deltas_dms(i,j,k)</div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;</div><div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;          msa(i,j,k)=deltas_dms(i,j,k)*f_dms_to_msa(i,j,k)</div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;</div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;        <span class="keywordflow">ELSE</span>                 <span class="comment">! update for simple DMS scheme</span></div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;          so2_array(i,j,k)=so2_array(i,j,k)                                    &amp;</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;            + deltas_dms(i,j,k)*brat_so2                                       &amp;</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;            - deltas_tot(i,j,k)</div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;          so4_ait_array(i,j,k)=so4_ait_array(i,j,k)                            &amp;</div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;            + psi(i,j,k)*deltas_dry(i,j,k)                                     &amp;</div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;            - deltas_tot_ait(i,j,k)</div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;          so4_acc_array(i,j,k)=so4_acc_array(i,j,k)                            &amp;</div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;            + deltas_evap(i,j,k)                                               &amp;</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;            - deltas_nucl(i,j,k)                                               &amp;</div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;            + (1.0-psi(i,j,k))*deltas_dry(i,j,k)                               &amp;</div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;            + deltas_coag(i,j,k)                                               &amp;</div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;            + deltas_merge(i,j,k)</div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;</div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;          so4_dis_array(i,j,k)=so4_dis_array(i,j,k)                            &amp;</div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;            + deltas_wet(i,j,k)                                                &amp;</div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;            - deltas_evap(i,j,k)                                               &amp;</div><div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;            + deltas_nucl(i,j,k)                                               &amp;</div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;            + deltas_diffuse(i,j,k)                                            &amp;</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;            + deltas_wet_o3(i,j,k)</div><div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;          dms_array(i,j,k) = dms_array(i,j,k) - deltas_dms(i,j,k)</div><div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;</div><div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;          msa(i,j,k) = deltas_dms(i,j,k)*brat_msa</div><div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;</div><div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;</div><div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;<span class="keywordflow">        END IF</span>            <span class="comment">! END L_SULPC_NEWDMS TEST</span></div><div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;</div><div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;      <span class="keywordflow">ELSE</span>                   <span class="comment">! no DMS</span></div><div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;</div><div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;        so2_array(i,j,k)=so2_array(i,j,k) - deltas_tot(i,j,k)</div><div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;</div><div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;</div><div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;        so4_ait_array(i,j,k)=so4_ait_array(i,j,k)                              &amp;</div><div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;          + psi(i,j,k)*deltas_dry(i,j,k)                                       &amp;</div><div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;          - deltas_tot_ait(i,j,k)</div><div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;</div><div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;        so4_acc_array(i,j,k)=so4_acc_array(i,j,k)                              &amp;</div><div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;          + deltas_evap(i,j,k)                                                 &amp;</div><div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;          - deltas_nucl(i,j,k)                                                 &amp;</div><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;          + (1.0-psi(i,j,k))*deltas_dry(i,j,k)                                 &amp;</div><div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;          + deltas_coag(i,j,k)                                                 &amp;</div><div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;          + deltas_merge(i,j,k)</div><div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;</div><div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;        so4_dis_array(i,j,k)=so4_dis_array(i,j,k)                              &amp;</div><div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;          + deltas_wet(i,j,k)                                                  &amp;</div><div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;          - deltas_evap(i,j,k)                                                 &amp;</div><div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;          + deltas_nucl(i,j,k)                                                 &amp;</div><div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;          + deltas_diffuse(i,j,k)                                              &amp;</div><div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;          + deltas_wet_o3(i,j,k)</div><div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;</div><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;</div><div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;<span class="keywordflow">      END IF</span>                 <span class="comment">! End L_SULPC_DMS condition</span></div><div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;</div><div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;</div><div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;<span class="keywordflow">IF</span> (l_sulpc_dms) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;</div><div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;  <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;    <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;      <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;        dms(i,j,k)=dms_array(i,j,k)</div><div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;</div><div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;</div><div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;<span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;</div><div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;      so2(i,j,k)=so2_array(i,j,k)</div><div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;      so4_acc(i,j,k)=so4_acc_array(i,j,k)</div><div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;      so4_ait(i,j,k)=so4_ait_array(i,j,k)</div><div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;      so4_dis(i,j,k)=so4_dis_array(i,j,k)</div><div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;</div><div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;</div><div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;</div><div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;</div><div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;<span class="comment">! 8.  DEPLETE  NH3.</span></div><div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;<span class="comment">!     IF ONLINE OXIDANTS ARE USED, DEPLETE OH, HO2, O3 AND H2O2.</span></div><div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;<span class="comment">!     OTHERWISE, DEPLETE H2O2, AND REPLENISH FROM HO2.</span></div><div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;</div><div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;</div><div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;<span class="keywordflow">IF</span> (l_sulpc_online_oxidants .AND. l_sulpc_2_way_coupling) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;</div><div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;  <span class="keywordflow">DO</span> k=1,wet_model_levels</div><div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;    <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;      <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;        delta_oh_tot(i,j,k) = delta_oh_dms(i,j,k)                              &amp;</div><div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;          + delta_oh_so2(i,j,k)</div><div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;        <span class="keywordflow">IF</span> (delta_oh_tot(i,j,k) .GT. oh_conc(i,j,k)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;          scale_factor_oh = oh_conc(i,j,k) / delta_oh_tot(i,j,k)</div><div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;</div><div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;          delta_oh_dms(i,j,k) = delta_oh_dms(i,j,k)                            &amp;</div><div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;            * scale_factor_oh</div><div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;          delta_oh_so2(i,j,k) = delta_oh_so2(i,j,k)                            &amp;</div><div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;            * scale_factor_oh</div><div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;        delta_o3_tot(i,j,k) = delta_o3_dms(i,j,k)                              &amp;</div><div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;          + delta_o3_so2(i,j,k)</div><div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;</div><div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;        <span class="keywordflow">IF</span> (delta_o3_tot(i,j,k) .GT. o3(i,j,k)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;          scale_factor_o3 =  o3(i,j,k) / delta_o3_tot(i,j,k)</div><div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;          delta_o3_dms(i,j,k) = delta_o3_dms(i,j,k)                            &amp;</div><div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;            * scale_factor_o3</div><div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;          delta_o3_so2(i,j,k) = delta_o3_so2(i,j,k)                            &amp;</div><div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;            * scale_factor_o3</div><div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;          <span class="keywordflow">IF</span> (delta_o3_tot(i,j,k) .EQ. 0.0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;</div><div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;        <span class="keywordflow">IF</span> (delta_ho2_dms(i,j,k) .GT. ho2_conc(i,j,k)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;          delta_ho2_dms(i,j,k) = ho2_conc(i,j,k)</div><div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;</div><div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;        <span class="keywordflow">IF</span> (delta_h2o2_so2(i,j,k) .GT. h2o2_mxr_array(i,j,k))                  &amp;</div><div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;          <span class="keywordflow">THEN</span></div><div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;          delta_h2o2_so2(i,j,k) = h2o2_mxr_array(i,j,k)</div><div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;</div><div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;        oh_conc(i,j,k) = oh_conc(i,j,k) - delta_oh_dms(i,j,k)                  &amp;</div><div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;          - delta_oh_so2(i,j,k)</div><div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;        ho2_conc(i,j,k) = ho2_conc(i,j,k) -  delta_ho2_dms(i,j,k)</div><div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;        h2o2_mxr_array(i,j,k) = h2o2_mxr_array(i,j,k)                          &amp;</div><div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;          - delta_h2o2_so2(i,j,k)</div><div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;        o3(i,j,k) = o3(i,j,k)  - delta_o3_dms(i,j,k)                           &amp;</div><div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;          - delta_o3_so2(i,j,k)</div><div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;        <span class="keywordflow">IF</span> (oh_conc(i,j,k) .LT. 0.0) oh_conc(i,j,k) = 0.0</div><div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;        <span class="keywordflow">IF</span> (ho2_conc(i,j,k) .LT. 0.0) ho2_conc(i,j,k) = 0.0</div><div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;        <span class="keywordflow">IF</span> (h2o2_mxr_array(i,j,k) .LT. 0.0)                                    &amp;</div><div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;          h2o2_mxr_array(i,j,k) = 0.0</div><div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;        <span class="keywordflow">IF</span> (o3(i,j,k) .LT. 0.0) o3(i,j,k) = 0.0</div><div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;</div><div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;</div><div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;<span class="keywordflow">ELSE</span></div><div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;</div><div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;</div><div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;  <span class="comment">! Case of prescribed oxidants, or online oxidants without 2-way coupling</span></div><div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;</div><div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;</div><div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;  <span class="keywordflow">DO</span> k=1,wet_model_levels</div><div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;    <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;      <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;</div><div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;        <span class="comment">!  Deplete H2O2</span></div><div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;</div><div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;        <span class="keywordflow">IF</span> (deltas_wet(i,j,k)  &gt;   0.0)  <span class="keywordflow">THEN</span></div><div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;          h2o2_mxr_array(i,j,k)=                                               &amp;</div><div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;            h2o2_mxr_array(i,j,k)-deltas_wet(i,j,k)/relm_s_h2o2</div><div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;</div><div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;        <span class="comment">!   Replenish H2O2_MXR field from HO2 field in dry part of grid box</span></div><div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;        <span class="comment">!   (whether or not oxidn has occurred) in daylight only.</span></div><div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;</div><div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;        <span class="keywordflow">IF</span> ( (h2o2_mxr_array(i,j,k)  &lt;   h2o2(i,j,k)) .AND.                    &amp;</div><div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;          (cosza2d(i,j)  &gt;   1.0e-06) )  <span class="keywordflow">THEN</span></div><div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;</div><div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;          <span class="comment">!   Calculate replenishment in concn, then convert to mix ratio</span></div><div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;          <span class="comment">!   Reaction rate K_HO2_HO2 is a fn of T, P, AND Q</span></div><div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;</div><div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;          w_conc=q_array(i,j,k)*air_conc(i,j,k)*rmm_air/rmm_w <span class="comment">!MCL/CC</span></div><div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;</div><div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;          h2o2_con_to_mxr=rmm_h2o2/(rmm_air*air_conc(i,j,k))   <span class="comment">!CC/MCL</span></div><div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;</div><div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;          k_ho2_ho2=( k2*exp(t2/t(i,j,k)) +                                    &amp;</div><div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;            air_conc(i,j,k)*k3*exp(t3/t(i,j,k)) )                              &amp;</div><div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;            * (1.0 + w_conc*k4*exp(t4/t(i,j,k)) )</div><div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;</div><div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;          h2o2_rep = ho2_conc(i,j,k)*ho2_conc(i,j,k)*k_ho2_ho2                 &amp;</div><div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;            * tstep*clearf(i,j,k)</div><div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;</div><div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;          h2o2_rep = h2o2_con_to_mxr * h2o2_rep</div><div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;</div><div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;          <span class="comment">!  Increment H2O2_MXR up to H2O2 value</span></div><div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;</div><div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;          h2o2_mxr_array(i,j,k) = h2o2_mxr_array(i,j,k) + h2o2_rep</div><div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;</div><div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;          <span class="keywordflow">IF</span> ( h2o2_mxr_array(i,j,k)  &gt;   h2o2(i,j,k) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;            h2o2_mxr_array(i,j,k) = h2o2(i,j,k)</div><div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;</div><div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;<span class="keywordflow">        END IF</span>                     <span class="comment">!End replenishment condition</span></div><div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;</div><div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! L_SULPC_ONLINE_OXIDANTS condition</span></div><div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;</div><div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;<span class="comment">! Deplete NH3 if ozone oxidation included and wet oxidn has occurred</span></div><div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;</div><div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;<span class="keywordflow">IF</span> (l_sulpc_ozone) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;</div><div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;<span class="comment">!cdir collapse</span></div><div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;</div><div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;  <span class="keywordflow">DO</span> k=1,wet_model_levels</div><div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;    <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;      <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;</div><div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;        <span class="keywordflow">IF</span> ( (deltas_wet(i,j,k)  &gt;   0.0) .OR.                                 &amp;</div><div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;          (deltas_wet_o3(i,j,k)  &gt;   0.0) )  <span class="keywordflow">THEN</span></div><div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;</div><div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;          nh3_dep(i,j,k) = (deltas_wet(i,j,k)+deltas_wet_o3(i,j,k))            &amp;</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;            / relm_s_2n</div><div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;</div><div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;          <span class="keywordflow">IF</span> ( nh3_dep(i,j,k)  &gt;   nh3_array(i,j,k) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;            nh3_dep(i,j,k) = nh3_array(i,j,k)</div><div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;</div><div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;          nh3_array(i,j,k) = nh3_array(i,j,k) - nh3_dep(i,j,k)</div><div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;</div><div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;<span class="keywordflow">        END IF</span>       <span class="comment">! end wet oxidn test</span></div><div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;</div><div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;</div><div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;</div><div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;<span class="keywordflow">END IF</span>       <span class="comment">! End L_SULPC_OZONE Test</span></div><div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;</div><div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;</div><div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;<span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;  <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;    <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;      h2o2_mxr(i,j,k)=h2o2_mxr_array(i,j,k)</div><div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;      nh3(i,j,k)=nh3_array(i,j,k)</div><div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;<span class="keywordflow">END DO</span></div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;<span class="comment">!$OMP END DO NOWAIT</span></div><div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;</div><div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;<span class="keywordflow">IF</span> (l_sulpc_online_oxidants) <span class="keywordflow">THEN</span></div><div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;</div><div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;<span class="comment">!$OMP DO SCHEDULE(STATIC)</span></div><div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;  <span class="keywordflow">DO</span> k=1,model_levels</div><div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;    <span class="keywordflow">DO</span> j=1,rows</div><div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;      <span class="keywordflow">DO</span> i=1,row_length</div><div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;        h2o2(i,j,k)  = h2o2_mxr_array(i,j,k)</div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;<span class="keywordflow">      END DO</span></div><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;<span class="keywordflow">    END DO</span></div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;<span class="keywordflow">  END DO</span></div><div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;<span class="comment">!$OMP END DO</span></div><div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;</div><div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;<span class="keywordflow">END IF</span></div><div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;</div><div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;</div><div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;</div><div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;</div><div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;<span class="comment">!$OMP END PARALLEL</span></div><div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;SULPHR&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespacesulphr__mod.xhtml#ad7687a4e5f1228f796affac528e8e480">sulphr</a></div><div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespacesulphr__mod.xhtml">sulphr_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
