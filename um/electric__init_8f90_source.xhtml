<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/electric/electric_init.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_9d4c2ebcb8bf5f9bd58f10738ad664a6.xhtml">electric</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">electric_init.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="electric__init_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno"><a class="line" href="namespaceelectric__init__mod.xhtml">    8</a></span>&#160;<span class="keyword">MODULE</span> <a class="code" href="namespaceelectric__init__mod.xhtml" title="Purpose: Initialises all variables required in the electric. ">electric_init_mod</a></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceum__input__control__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">um_input_control_mod</a><span class="keywordtype">,   ONLY</span>: <a class="code" href="namespaceum__input__control__mod.xhtml#a5e102a877cce4f02fad05c876cd2abad">l_mr_physics1</a></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacemphys__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">mphys_inputs_mod</a><span class="keywordtype">,       ONLY</span>: <a class="code" href="namespacemphys__inputs__mod.xhtml#a1e977cd2bfc88d00f67153d185e877f8">l_mcr_qcf2</a></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespaceelectric__constants__mod.xhtml" title="Purpose: Holds constants required for the electric scheme. ">electric_constants_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>, <a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>, <a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keywordtype">USE </span>atm_fields_bounds_mod<span class="keywordtype">,  ONLY</span>: qdims</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacemphys__ice__mod.xhtml">mphys_ice_mod</a><span class="keywordtype">,          ONLY</span>: <a class="code" href="namespacemphys__ice__mod.xhtml#ab51934e2203931b4e2fecc658a1a9701">qcfmin</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keywordtype">USE </span><a class="code" href="namespacemphys__bypass__mod.xhtml" title="Global bypass module for switches concerned with microphysics. ">mphys_bypass_mod</a><span class="keywordtype">,       ONLY</span>: <a class="code" href="namespacemphys__bypass__mod.xhtml#a2edef94c7f14cbbb3f2118b5c054df89">qcf2_idims_start</a>, <a class="code" href="namespacemphys__bypass__mod.xhtml#acedaf52cb3a8c085e379c791118b1a7e">qcf2_idims_end</a>,            &amp;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                                  <a class="code" href="namespacemphys__bypass__mod.xhtml#a229206327e74f31758e74c88fbb5cbb5">qcf2_jdims_start</a>, <a class="code" href="namespacemphys__bypass__mod.xhtml#a842fe3f513a68b7b3d114f14441ecb1d">qcf2_jdims_end</a>,            &amp;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                                  <a class="code" href="namespacemphys__bypass__mod.xhtml#a4484b31173d1d3fcceb210129cbc714b">qcf2_kdims_start</a>, <a class="code" href="namespacemphys__bypass__mod.xhtml#a14888b93efbb1ad2fe126b3e5890d0bd">qcf2_kdims_end</a></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keywordtype">USE </span>yomhook<span class="keywordtype">,                ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keywordtype">USE </span>parkind1<span class="keywordtype">,               ONLY</span>: jprb, jpim</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">CONTAINS</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">SUBROUTINE </span><a class="code" href="namespaceelectric__init__mod.xhtml#acb111102890481d661a31a3ca74a3253">electric_init</a>( storm_field, qcf, qcf2, qgraup, qcf_tot, rhodz_dry,  &amp;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                          rhodz_moist, flash_pot, rhodz, flash, qgtot,         &amp;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                          flash_pot1d, fr1_mc, fr2_mc )</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="namespaceelectric__init__mod.xhtml#acb111102890481d661a31a3ca74a3253">   29</a></span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>     :: qcf(         qdims%i_start : qdims%i_end,              &amp;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                                     qdims%j_start : qdims%j_end,              &amp;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                                 1 : qdims%k_end )</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>     :: qcf2(     <a class="code" href="namespacemphys__bypass__mod.xhtml#a2edef94c7f14cbbb3f2118b5c054df89">qcf2_idims_start</a> : <a class="code" href="namespacemphys__bypass__mod.xhtml#acedaf52cb3a8c085e379c791118b1a7e">qcf2_idims_end</a>,           &amp;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                                  qcf2_jdims_start : qcf2_jdims_end,           &amp;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                  qcf2_kdims_start : qcf2_kdims_end )</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>     :: qgraup(      qdims%i_start : qdims%i_end,              &amp;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                                     qdims%j_start : qdims%j_end,              &amp;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                                                 1 : qdims%k_end )</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>     :: rhodz_dry(   qdims%i_start : qdims%i_end,              &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                     qdims%j_start : qdims%j_end,              &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                                                 1 : qdims%k_end )</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>     :: rhodz_moist( qdims%i_start : qdims%i_end,              &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                     qdims%j_start : qdims%j_end,              &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                                 1 : qdims%k_end )</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(IN)</span>     :: flash_pot(   qdims%i_start : qdims%i_end,              &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                     qdims%j_start : qdims%j_end,              &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                                 1 : qdims%k_end )</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>    :: rhodz(       qdims%i_start : qdims%i_end,              &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                                     qdims%j_start : qdims%j_end,              &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                                 1 : qdims%k_end )</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">LOGICAL</span>, <span class="keywordtype">INTENT(OUT)</span> :: storm_field( qdims%i_start : qdims%i_end,              &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                     qdims%j_start : qdims%j_end )</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>    :: qcf_tot(     qdims%i_start : qdims%i_end,              &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                     qdims%j_start : qdims%j_end,              &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                                 1 : qdims%k_end )</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>    :: flash(       qdims%i_start : qdims%i_end,              &amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                     qdims%j_start : qdims%j_end )</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>    :: qgtot(       qdims%i_start : qdims%i_end,              &amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                     qdims%j_start : qdims%j_end )</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>    :: flash_pot1d( qdims%i_start : qdims%i_end,              &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                     qdims%j_start : qdims%j_end )</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>    :: fr1_mc(      qdims%i_start : qdims%i_end,              &amp;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                     qdims%j_start : qdims%j_end )</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">REAL</span>, <span class="keywordtype">INTENT(OUT)</span>    :: fr2_mc(      qdims%i_start : qdims%i_end,              &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                     qdims%j_start : qdims%j_end )</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keywordtype">REAL</span> :: qg_sum <span class="comment">! component of qgtot</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">REAL</span> :: fp_sum <span class="comment">! component of flash_pot</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ELECTRIC_INIT&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;qgtot(:,:)       = 0.0</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;flash_pot1d(:,:) = 0.0</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;flash(:,:)       = 0.0</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;fr1_mc(:,:)      = 0.0</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;fr2_mc(:,:)      = 0.0</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;storm_field(:,:) = .false.</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a1e977cd2bfc88d00f67153d185e877f8">l_mcr_qcf2</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;   <span class="comment">! Two cloud ice categories in use. Total ice is the sum of</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;   <span class="comment">! the two categories</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;   <span class="keywordflow">DO</span> <a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a> = 1, qdims%k_end</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;     <span class="keywordflow">DO</span> <a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a> = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;       <span class="keywordflow">DO</span> <a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a> = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;          qcf_tot(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>) = qcf(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>) + qcf2(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;          qgtot(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>) = qgtot(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>) + qgraup(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;          <span class="comment">! Only include flash potential where graupel is present</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;          <span class="keywordflow">IF</span> (qgraup(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>) &gt;= <a class="code" href="namespacemphys__ice__mod.xhtml#ab51934e2203931b4e2fecc658a1a9701">qcfmin</a>) flash_pot1d(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>) =                      &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                       flash_pot1d(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>) + flash_pot(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>)</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordflow">       END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keywordflow">     END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordflow">   END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keywordflow">ELSE</span>   <span class="comment">! not l_mcr_qcf2</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;   <span class="comment">! Only one cloud ice category in use. All ice present is in one</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;   <span class="comment">! category only, so qcf_tot = qcf</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;   <span class="keywordflow">DO</span> <a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a> = 1, qdims%k_end</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;     <span class="keywordflow">DO</span> <a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a> = qdims%j_start, qdims%j_end</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;       <span class="keywordflow">DO</span> <a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a> = qdims%i_start, qdims%i_end</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;          qcf_tot(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>) = qcf(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;          qgtot(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>) = qgtot(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>) + qgraup(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;          <span class="comment">! Only include flash potential where graupel is present</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;          <span class="keywordflow">IF</span> (qgraup(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>) &gt;= <a class="code" href="namespacemphys__ice__mod.xhtml#ab51934e2203931b4e2fecc658a1a9701">qcfmin</a>) flash_pot1d(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>) =                      &amp;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                       flash_pot1d(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>) + flash_pot(<a class="code" href="namespaceelectric__constants__mod.xhtml#a0278c754fb9e28b44ebe1be5ace7d0b1">i</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#ab4f3be26cadc337757eb0c2c81471cb5">j</a>,<a class="code" href="namespaceelectric__constants__mod.xhtml#a9cfc90e85f07794c20ce588baf07415d">k</a>)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keywordflow">       END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordflow">     END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordflow">   END DO</span> <span class="comment">! k</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! l_mcr_qcf2</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">! Set rhodz based on whether using specific humidity</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">! or mixing ratio formulation</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a5e102a877cce4f02fad05c876cd2abad">l_mr_physics1</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  rhodz(:,:,:) = rhodz_dry(:,:,:)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keywordflow">ELSE</span> <span class="comment">! l_mr_physics1</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  rhodz(:,:,:) = rhodz_moist(:,:,:)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordflow">END IF</span> <span class="comment">! l_mr_physics1</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;ELECTRIC_INIT&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordflow">RETURN</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keyword">END SUBROUTINE </span><a class="code" href="namespaceelectric__init__mod.xhtml#acb111102890481d661a31a3ca74a3253">electric_init</a></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword">END MODULE </span><a class="code" href="namespaceelectric__init__mod.xhtml" title="Purpose: Initialises all variables required in the electric. ">electric_init_mod</a></div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
